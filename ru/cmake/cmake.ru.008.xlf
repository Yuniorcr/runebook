<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="89eac6226730278071429f61ba950ab26ac97831" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the include directories required to compile against the headers for the target. The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c852eafc0dbe82fa137a6e67198df0345657548d" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the include directories which contain system headers, and therefore should not result in compiler warnings. The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories(SYSTEM)&lt;/code&gt;&lt;/a&gt; command signature populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddc6b90ed781dc49add9f4a37d3f01fd3021162" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the link directories required to compile against the headers for the target. The &lt;a href=&quot;../command/target_link_directories#command:target_link_directories&quot; id=&quot;index-1-command:target_link_directories&quot;&gt;&lt;code&gt;target_link_directories()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f87f967088a3c23b0d754fd2e651d70ed23f81" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the link options required to compile against the headers for the target. The &lt;a href=&quot;../command/target_link_options#command:target_link_options&quot; id=&quot;index-1-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e607eeda29404bcd29d0e818fcf8b76714caa1a" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the options required to use when invoking &lt;code&gt;uic&lt;/code&gt;. Consuming targets can add entries to their own &lt;a href=&quot;autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; property such as &lt;code&gt;$&amp;lt;TARGET_PROPERTY:foo,INTERFACE_AUTOUIC_OPTIONS&amp;gt;&lt;/code&gt; to use the uic options specified in the interface of &lt;code&gt;foo&lt;/code&gt;. This is done automatically by the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37f01b82b2b9c38a190c26f265147465aa7fc8e" translate="yes" xml:space="preserve">
          <source>Targets may populate this property to publish the sources for consuming targets to compile. The &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt; command populates this property with values given to the &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords. Projects may also get and set the property directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba9a699a1790f8527854f8e95d31440c6d6fc79" translate="yes" xml:space="preserve">
          <source>Targets names created with &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; are logical build target names. Logical target names must be globally unique because:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29d5d45336a72ee7fd70fbcf4081cc09e334c22" translate="yes" xml:space="preserve">
          <source>Targets on which the javah target depends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2ef85d7f1446b826ae1c60c498775e6fa9d28e" translate="yes" xml:space="preserve">
          <source>Targets which have their &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;ON&lt;/code&gt; have a corresponding &lt;code&gt;_autogen&lt;/code&gt; target which generates &lt;code&gt;moc&lt;/code&gt; and &lt;code&gt;uic&lt;/code&gt; files. As this &lt;code&gt;_autogen&lt;/code&gt; target is created at generate-time, it is not possible to define dependencies of it using e.g. &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;. Instead the &lt;a href=&quot;#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt; target property decides whether the origin target dependencies should be forwarded to the &lt;code&gt;_autogen&lt;/code&gt; target or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fa27bc7e6190e73dc724dbd881c916907b3f01" translate="yes" xml:space="preserve">
          <source>Targets which have their &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;ON&lt;/code&gt; have a corresponding &lt;code&gt;_autogen&lt;/code&gt; target which generates &lt;code&gt;moc&lt;/code&gt; and &lt;code&gt;uic&lt;/code&gt; files. As this &lt;code&gt;_autogen&lt;/code&gt; target is created at generate-time, it is not possible to define dependencies of it using e.g. &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;. Instead the &lt;a href=&quot;#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt; target property can be set to a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of additional dependencies for the &lt;code&gt;_autogen&lt;/code&gt; target. Dependencies can be target names or file names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb0892952f7a71ebb4c7840d5fe2b60b37ee74d" translate="yes" xml:space="preserve">
          <source>Targets with no &lt;code&gt;FOLDER&lt;/code&gt; property will appear as top level entities in IDEs like Visual Studio. Targets with the same &lt;code&gt;FOLDER&lt;/code&gt; property value will appear next to each other in a folder of that name. To nest folders, use &lt;code&gt;FOLDER&lt;/code&gt; values such as &amp;lsquo;GUI/Dialogs&amp;rsquo; with &amp;lsquo;/&amp;rsquo; characters separating folder levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8bab2e3b62d33540571855f5b2c40a3c73d64a" translate="yes" xml:space="preserve">
          <source>Tell &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; to try &amp;ldquo;Config&amp;rdquo; mode before &amp;ldquo;Module&amp;rdquo; mode if no mode was specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4415b9f2a6c061ef88ec96c28bc56fcc835ed510" translate="yes" xml:space="preserve">
          <source>Tell &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; to warn if called without an explicit mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32181fd7f67eef799614b45bf0a4aa30c9f55550" translate="yes" xml:space="preserve">
          <source>Tell &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above that the target platform compiles as WinRT by default (compiles with &lt;code&gt;/ZW&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a469df40d30dc59ea509aab876df923e9e1048" translate="yes" xml:space="preserve">
          <source>Tell &lt;code&gt;bison&lt;/code&gt; to write a report file of the grammar and parser. If &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; is given, it specifies path the report file is copied to. &lt;code&gt;[&amp;lt;file&amp;gt;]&lt;/code&gt; is left for backward compatibility of this module. Use &lt;code&gt;VERBOSE REPORT_FILE &amp;lt;file&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e91aa3fc3b6fac02db3e83c00f3324e5d532b4" translate="yes" xml:space="preserve">
          <source>Tell CMake about additional input files to the configuration process. If any named file is modified the build system will re-run CMake to re-configure the file and generate the build system again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd68194f887cc8d3839c2c33b26a67d81fc3367" translate="yes" xml:space="preserve">
          <source>Tell CMake to use the &lt;code&gt;OLD&lt;/code&gt; or &lt;code&gt;NEW&lt;/code&gt; behavior for a given policy. Projects depending on the old behavior of a given policy may silence a policy warning by setting the policy state to &lt;code&gt;OLD&lt;/code&gt;. Alternatively one may fix the project to work with the new behavior and set the policy state to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6286022a7c45159d56e83fad25b0ba804531e6" translate="yes" xml:space="preserve">
          <source>Tell CTest to suppress most non-error messages that it would have otherwise printed to the console. CTest will still report the new revision of the repository and any conflicting files that were found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2ed1bbc6e4bfebed8ea4043e27b13890ac2272" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;../command/ctest_start#command:ctest_start&quot; id=&quot;index-0-command:ctest_start&quot;&gt;&lt;code&gt;ctest_start()&lt;/code&gt;&lt;/a&gt; command how to checkout or initialize the source directory in a &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; dashboard client script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb0beacbfd7cd8e9bdfe0d1e7f8a9a32bd4a7ce" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;Visual Studio generators&lt;/code&gt;&lt;/a&gt; to set the source file tag &lt;code&gt;&amp;lt;tagname&amp;gt;&lt;/code&gt; to a given value in the generated Visual Studio CSharp project. Ignored on other generators and languages. This property can be used to define dependencies between source files or set any other Visual Studio specific parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334e2dbd549912f6b7b79ab79e2674071b44db29" translate="yes" xml:space="preserve">
          <source>Tell the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator to set &amp;lsquo;&amp;lt;an-attribute&amp;gt;&amp;rsquo; to a given value in the generated Xcode project. Ignored on other generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c852574a5147ce60c92ce537329b7c5b6f05b85d" translate="yes" xml:space="preserve">
          <source>Tell the Visual Studio generator to set the global variable &amp;lsquo;&amp;lt;variable&amp;gt;&amp;rsquo; to a given value in the generated Visual Studio project. Ignored on other generators. Qt integration works better if VS_GLOBAL_QtVersion is set to the version FindQt4.cmake found. For example, &amp;ldquo;4.7.3&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edd544cc9ddbb5bf1ca63649dcad6556ddd5837" translate="yes" xml:space="preserve">
          <source>Tells the internal CMake engine that a source file is generated by an outside process such as another build step, or the execution of CMake itself. This information is then used to exempt the file from any existence or validity checks. Generated files are created by the execution of commands such as &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(GENERATE)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cee3ef0596909282f9348b3645652b00941ffc2" translate="yes" xml:space="preserve">
          <source>Tells what mode the current running script is in. Could be one of several values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df39c5d07536983be692c4c34d2f11d53d739649" translate="yes" xml:space="preserve">
          <source>Template aliases, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2258.pdf&quot;&gt;N2258&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd753e245a696f869eb19b8e51d0ab9e52f85e9" translate="yes" xml:space="preserve">
          <source>Template template parameters, as defined in &lt;code&gt;ISO/IEC 14882:1998&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ecb08e7bd1ff827ef32442a6efe2409261ea43" translate="yes" xml:space="preserve">
          <source>Terminate the operation after a given total time has elapsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3514477f1012a39cd1ad0bae76d69843d0321cba" translate="yes" xml:space="preserve">
          <source>Terminate the operation after a period of inactivity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecaa6e23ee8a2a6a7036215b81f41db1ebbe647c" translate="yes" xml:space="preserve">
          <source>Test for compiler support of ANSI sstream header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bde996fff8f32b0ef6d64f49dbe27d1678e18e6" translate="yes" xml:space="preserve">
          <source>Test for compiler support of ANSI stream headers iostream, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1285505d64af79f694d00731307219e203105409" translate="yes" xml:space="preserve">
          <source>Test for std:: namespace support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b0a29c7687e2b1431b9462fd41ba69243eec58" translate="yes" xml:space="preserve">
          <source>Test name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4066c4dae4951fb938b1668b1fd73e8b316c3c" translate="yes" xml:space="preserve">
          <source>Test output is normally suppressed and only summary information is displayed. This option will show all test output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daba73a8837f301ae447ffefcc20564c86ce1396" translate="yes" xml:space="preserve">
          <source>Test output is normally suppressed and only summary information is displayed. This option will show even more test output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5aadacf2d255bca83abe81bf206dcbf424bc7d7" translate="yes" xml:space="preserve">
          <source>Test properties. Can contain keys for each of the supported test properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e055e30dc33d3ee5bb67c917672b931fb22890" translate="yes" xml:space="preserve">
          <source>Test the software by loading a &lt;code&gt;CTestTestfile.cmake&lt;/code&gt; from the build tree and executing the defined tests. Record the output and result of each test. See the &lt;a href=&quot;#ctest-test-step&quot;&gt;CTest Test Step&lt;/a&gt; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37db003d5c3654f03a78b369b608116ad632c2c5" translate="yes" xml:space="preserve">
          <source>TestBigEndian</source>
          <target state="translated">TestBigEndian</target>
        </trans-unit>
        <trans-unit id="e2ee93c5d0cae5fd67814b1bf734e66b551eca45" translate="yes" xml:space="preserve">
          <source>TestCXXAcceptsFlag</source>
          <target state="translated">TestCXXAcceptsFlag</target>
        </trans-unit>
        <trans-unit id="3a4bd58a2a92988389a2089b7ff6bd59c1b12e90" translate="yes" xml:space="preserve">
          <source>TestForANSIForScope</source>
          <target state="translated">TestForANSIForScope</target>
        </trans-unit>
        <trans-unit id="f6b13df3e8d899cc581cd3695d0d6eadd0612ecb" translate="yes" xml:space="preserve">
          <source>TestForANSIStreamHeaders</source>
          <target state="translated">TestForANSIStreamHeaders</target>
        </trans-unit>
        <trans-unit id="7b710d20d6652000a05d360fb95aa8eea607394f" translate="yes" xml:space="preserve">
          <source>TestForSSTREAM</source>
          <target state="translated">TestForSSTREAM</target>
        </trans-unit>
        <trans-unit id="eb5e0a0a2e9418e1cb468b04a1a1e524c74a8b78" translate="yes" xml:space="preserve">
          <source>TestForSTDNamespace</source>
          <target state="translated">TestForSTDNamespace</target>
        </trans-unit>
        <trans-unit id="87e1ea9cae96fea95758d9329d1e8e7940ed0029" translate="yes" xml:space="preserve">
          <source>Text to be printed when the custom step executes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3548badf92a0707a9d50956051148ec91aa3ecb" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;cache&amp;rdquo; request will list the cached configuration values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08dba4efc8926e1469b9163dbd2da3874859b20f" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;cmakeInputs&amp;rdquo; requests will report files used by CMake as part of the build system itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1f11bd310fbd90d684f725211d64c08c74983e" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;codemodel&amp;rdquo; request can be used after a project was &amp;ldquo;compute&amp;rdquo;d successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e94657fa2e13ebe1f1b3b4b2726a21ef765ec88" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;ctestInfo&amp;rdquo; request can be used after a project was &amp;ldquo;compute&amp;rdquo;d successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283fdcd1f69715eea7d3397b891b370ca8b33102" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;dirty&amp;rdquo; signal is sent whenever the server determines that the configuration of the project is no longer up-to-date. This happens when any of the files that have an influence on the build system is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54b688e6b251ea1a474910717da1c5630365788" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;dirty&amp;rdquo; signal may look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81811e88372bea0aad4c454c1bdd23f605c9dd1f" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;fileChange&amp;rdquo; signal is sent whenever a watched file is changed. It contains the &amp;ldquo;path&amp;rdquo; that has changed and a list of &amp;ldquo;properties&amp;rdquo; with the kind of change that was detected. Possible changes are &amp;ldquo;change&amp;rdquo; and &amp;ldquo;rename&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3acadb9dc6d6129840b360c42b052a03b5310678" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;fileChange&amp;rdquo; signal looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fffc821295a05c55a4f2324ffbe1e6629e792e" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;linker language&amp;rdquo; for executable, shared library, and module targets is the language whose compiler will invoke the linker. The &lt;a href=&quot;../prop_tgt/linker_language#prop_tgt:LINKER_LANGUAGE&quot; id=&quot;index-0-prop_tgt:LINKER_LANGUAGE&quot;&gt;&lt;code&gt;LINKER_LANGUAGE&lt;/code&gt;&lt;/a&gt; target property sets the language explicitly. Otherwise, the linker language is that whose linker preference value is highest among languages compiled and linked into the target. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE_PROPAGATES&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de1911158d6a72a5c4a0400df6cce181db071d4" translate="yes" xml:space="preserve">
          <source>The (newer) &lt;a href=&quot;#command:gtest_discover_tests&quot; id=&quot;index-1-command:gtest_discover_tests&quot;&gt;&lt;code&gt;gtest_discover_tests()&lt;/code&gt;&lt;/a&gt; discovers tests by asking the compiled test executable to enumerate its tests. This is more robust and provides better handling of parameterized tests, and does not require CMake to be re-run when tests change. However, it may not work in a cross-compiling environment, and setting test properties is less convenient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ef2917282b4ecddb54b99bcf849047d78fa03b" translate="yes" xml:space="preserve">
          <source>The (older) &lt;a href=&quot;#command:gtest_add_tests&quot; id=&quot;index-1-command:gtest_add_tests&quot;&gt;&lt;code&gt;gtest_add_tests()&lt;/code&gt;&lt;/a&gt; scans source files to identify tests. This is usually effective, with some caveats, including in cross-compiling environments, and makes setting additional properties on tests more convenient. However, its handling of parameterized tests is less comprehensive, and it requires re-running CMake to detect changes to the list of tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52400cd7d7a1334f499fc2d2a909b8972c47220e" translate="yes" xml:space="preserve">
          <source>The .netrc file is ignored. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d769fda33f4766d6f71a8368bef99b5e664732da" translate="yes" xml:space="preserve">
          <source>The .netrc file is optional, and information in the URL is preferred. The file will be scanned to find which ever information is not specified in the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272e65122a75c4643238137013fb2c46623d728d" translate="yes" xml:space="preserve">
          <source>The .netrc file is required, and information in the URL is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3f53385507dd6df69569638d75499d99a2c090" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#command:execute_process&quot; id=&quot;index-1-command:execute_process&quot;&gt;&lt;code&gt;execute_process()&lt;/code&gt;&lt;/a&gt; command is a newer more powerful version of &lt;a href=&quot;exec_program#command:exec_program&quot; id=&quot;index-0-command:exec_program&quot;&gt;&lt;code&gt;exec_program()&lt;/code&gt;&lt;/a&gt;, but the old command has been kept for compatibility. Both commands run while CMake is processing the project prior to build system generation. Use &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; to create custom commands that run at build time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecce7fab975c32281898c94b84a5b7be52ff8987" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#dashboard-client-steps&quot;&gt;Dashboard Client Steps&lt;/a&gt; may be configured by named settings as documented in the following sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd74143d15011bea01fde762d026ced773f6722" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#install-targets&quot;&gt;install(TARGETS)&lt;/a&gt; command can also accept the following options at the top level:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70548ac9c82d51cc5e402b5e2432bbb8ebd8994" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt; location is also used as a search prefix by the &lt;code&gt;find_*&lt;/code&gt; commands. This can be controlled by setting the &lt;a href=&quot;cmake_find_no_install_prefix#variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_FIND_NO_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_FIND_NO_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb32c9e630ef3dfbb65a66be84bf213f269eae4a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-0-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; variable has different meanings in different contexts. In a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-1-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; is a &lt;em&gt;list of generators&lt;/em&gt;: and when &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-1-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; is run with no other arguments, it will iterate over that list and produce one package for each generator. In a &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-0-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CPACK_GENERATOR&quot; id=&quot;index-2-variable:CPACK_GENERATOR&quot;&gt;&lt;code&gt;CPACK_GENERATOR&lt;/code&gt;&lt;/a&gt; is a &lt;em&gt;string naming a single generator&lt;/em&gt;. If you need per-cpack-generator logic to control &lt;em&gt;other&lt;/em&gt; cpack settings, then you need a &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-1-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a57a2bcf718a4f16402fee586af8a68db6e3bb2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#variable:FeatureSummary_DEFAULT_PKG_TYPE&quot; id=&quot;index-1-variable:FeatureSummary_DEFAULT_PKG_TYPE&quot;&gt;&lt;code&gt;FeatureSummary_DEFAULT_PKG_TYPE&lt;/code&gt;&lt;/a&gt; global property can be modified to change the default package type assigned when not explicitly assigned by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbe9329e9f2d8d5b5524775b9c79cd86163310d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#variables&quot;&gt;Variables&lt;/a&gt; section documents the scope of variable names and how their values are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97496d180185042c7e781db89300b6b2b9cc9e57" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command defines an executable target:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd38bc0973aa0f15991d5e679dec498785a3c99f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/build_name#command:build_name&quot; id=&quot;index-0-command:build_name&quot;&gt;&lt;code&gt;build_name()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919554a845cabd4cb89904a9edd3158f2b26a579" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required()&lt;/code&gt;&lt;/a&gt; command does more than report an error if a too-old version of CMake is used to build a project. It also sets all policies introduced in that CMake version or earlier to &lt;code&gt;NEW&lt;/code&gt; behavior. To manage policies without increasing the minimum required CMake version, the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if(POLICY)&lt;/code&gt;&lt;/a&gt; command may be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6de7171508b2a244a463aa0afbfae192fbccac5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/ctest_build#command:ctest_build&quot; id=&quot;index-0-command:ctest_build&quot;&gt;&lt;code&gt;ctest_build()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/build_command#command:build_command&quot; id=&quot;index-0-command:build_command&quot;&gt;&lt;code&gt;build_command()&lt;/code&gt;&lt;/a&gt; commands no longer generate build commands for &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; with the &lt;code&gt;-i&lt;/code&gt; option. Previously this was done to help build as much of tested projects as possible. However, this behavior is not consistent with other generators and also causes the return code of the &lt;code&gt;make&lt;/code&gt; tool to be meaningless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7730ec313b12ab1cf1f52d1df3261f3ede1d14" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command can be used to enable languages after the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e242aea3e7112bfddef0ebd9d0006e0201551f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export(EXPORT)&lt;/code&gt;&lt;/a&gt; command creates an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-6-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets definition file which is specific to the build-tree, and is not relocatable. This can similarly be used with a suitable package configuration file and package version file to define a package for the build tree which may be used without installation. Consumers of the build tree can simply ensure that the &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; contains the build directory, or set the &lt;code&gt;ClimbingStats_DIR&lt;/code&gt; to &lt;code&gt;&amp;lt;build_dir&amp;gt;/ClimbingStats&lt;/code&gt; in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e705f2d9ccc960b2600f1b3ca5041c6f018eb6ff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command generates a file containing &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;, which is suitable for use from the build directory. It is not suitable for installation because it contains absolute paths to buildsystem locations, and is particular to a single build configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afbd7d3238ac0ed77bc47709871ed7c8acf2cf4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command does nothing by default. In some cases it is desirable to write to the user package registry, so the &lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt; variable may be set to enable it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181c84f27057ca3dab37e2a604052523499abca0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-2-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command does not populate the user package registry when &lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-0-policy:CMP0090&quot;&gt;&lt;code&gt;CMP0090&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt; unless the &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable explicitly enables it. When &lt;a href=&quot;../policy/cmp0090#policy:CMP0090&quot; id=&quot;index-1-policy:CMP0090&quot;&gt;&lt;code&gt;CMP0090&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;not&lt;/em&gt; set to &lt;code&gt;NEW&lt;/code&gt; then &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; populates the user package registry unless the &lt;a href=&quot;../variable/cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-0-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; variable explicitly disables it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92b1b020d9cfc037deae2c1c042d149c0e692fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-5-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command populates the user package registry with the location of a project build tree. Build trees tend to be deleted by developers and have no &amp;ldquo;uninstall&amp;rdquo; event that could trigger removal of their entries. In order to keep the registries clean the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-18-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command automatically removes stale entries it encounters if it has sufficient permissions. CMake provides no interface to remove an entry referencing an existing build tree once &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-6-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; has been invoked. However, if the project removes its package configuration file from the build tree then the entry referencing the location will be considered stale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b06a72e128d32f2b361c34f028c86ea10bceafc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/export_library_dependencies#command:export_library_dependencies&quot; id=&quot;index-0-command:export_library_dependencies&quot;&gt;&lt;code&gt;export_library_dependencies()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3ebd3e5667a62d6f10e7768e4a5e6e73850bcd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-14-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command searches the two package registries as two of the search steps specified in its documentation. If it has sufficient permissions it also removes stale package registry entries that refer to directories that do not exist or do not contain a matching package configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1432e7b773913f6fb9b4b76ee4f451cad0fc2d57" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-6-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command may be used to search for the package configuration file. This command constructs a set of installation prefixes and searches under each prefix in several locations. Given the name &lt;code&gt;Foo&lt;/code&gt;, it looks for a file called &lt;code&gt;FooConfig.cmake&lt;/code&gt; or &lt;code&gt;foo-config.cmake&lt;/code&gt;. The full set of locations is specified in the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-7-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command documentation. One place it looks is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdc821b9c82fde16cd31bd80d65878763b6e70a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/foreach#command:foreach&quot; id=&quot;index-0-command:foreach&quot;&gt;&lt;code&gt;foreach()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/endforeach#command:endforeach&quot; id=&quot;index-0-command:endforeach&quot;&gt;&lt;code&gt;endforeach()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/while#command:while&quot; id=&quot;index-0-command:while&quot;&gt;&lt;code&gt;while()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/endwhile#command:endwhile&quot; id=&quot;index-0-command:endwhile&quot;&gt;&lt;code&gt;endwhile()&lt;/code&gt;&lt;/a&gt; commands delimit code blocks to be executed in a loop. Inside such blocks the &lt;a href=&quot;../command/break#command:break&quot; id=&quot;index-0-command:break&quot;&gt;&lt;code&gt;break()&lt;/code&gt;&lt;/a&gt; command may be used to terminate the loop early whereas the &lt;a href=&quot;../command/continue#command:continue&quot; id=&quot;index-0-command:continue&quot;&gt;&lt;code&gt;continue()&lt;/code&gt;&lt;/a&gt; command may be used to start with the next iteration immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efe84b542e353123c22c1db16fc76982c5f2e2b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-1-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command has a special condition syntax that allows for variable references in the short form &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; instead of &lt;code&gt;${&amp;lt;variable&amp;gt;}&lt;/code&gt;. However, environment and cache variables always need to be referenced as &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; or &lt;code&gt;$CACHE{&amp;lt;variable&amp;gt;}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c613d357008702aaea63b152753bde807997c83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-2-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/elseif#command:elseif&quot; id=&quot;index-0-command:elseif&quot;&gt;&lt;code&gt;elseif()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/else#command:else&quot; id=&quot;index-0-command:else&quot;&gt;&lt;code&gt;else()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/endif#command:endif&quot; id=&quot;index-0-command:endif&quot;&gt;&lt;code&gt;endif()&lt;/code&gt;&lt;/a&gt; commands delimit code blocks to be executed conditionally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d983ad19d78352ab2101059724ace0c2d24e200" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; generates and installs files which contain &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;Imported Targets&lt;/a&gt;. These files are generated with relative paths (unless the user specifies absolute paths), and are designed for multi-configuration use. See &lt;a href=&quot;../manual/cmake-packages.7#creating-packages&quot;&gt;Creating Packages&lt;/a&gt; for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0b2194a842025d1f7cbe7502c52855b8ada4b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/load_command#command:load_command&quot; id=&quot;index-0-command:load_command&quot;&gt;&lt;code&gt;load_command()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c492d79997ac903e371269f33dc957ef6657d495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/endmacro#command:endmacro&quot; id=&quot;index-0-command:endmacro&quot;&gt;&lt;code&gt;endmacro()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../command/endfunction#command:endfunction&quot; id=&quot;index-0-command:endfunction&quot;&gt;&lt;code&gt;endfunction()&lt;/code&gt;&lt;/a&gt; commands delimit code blocks to be recorded for later invocation as commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367dfe3a0c9d94aba8bad2e907a9419451f1b3ff" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt;&lt;code&gt;message()&lt;/code&gt;&lt;/a&gt; command will only output messages of the specified log level or higher. The default log level is &lt;code&gt;STATUS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93f57a26afa1fc508ac2e7916496288cc398184" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-1-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command is typically used to create a cache entry to allow users to set the option. However, there are cases in which a normal (non-cached) variable of the same name as the option may be defined by the project prior to calling the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-2-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command. For example, a project that embeds another project as a subdirectory may want to hard-code options of the subproject to build the way it needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2e0a7c041ca82f4ff8acb5fe67ca7bf0da861a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/output_required_files#command:output_required_files&quot; id=&quot;index-0-command:output_required_files&quot;&gt;&lt;code&gt;output_required_files()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e8c920251ab7089f5bbb758d58f8b282c67b2c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command manages &lt;code&gt;VERSION&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72229cc054922a34cb58f51da28701352932ad5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/subdir_depends#command:subdir_depends&quot; id=&quot;index-0-command:subdir_depends&quot;&gt;&lt;code&gt;subdir_depends()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669dcef4765cf8c49e41411c8553c48fd800c782" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-1-command:subdirs&quot;&gt;&lt;code&gt;subdirs()&lt;/code&gt;&lt;/a&gt; command does not process its arguments until after the calling directory is fully processed. Therefore looking up this property in the current directory will not see them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4520c6d46ba785696d43954a37c32101d8ecc31d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; commands specify the build specifications and the usage requirements of binary targets. The commands populate the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties respectively, and/or the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecef56a1bf590c6ebaf4bede4e9888a34b2f04e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-2-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-1-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/target_compile_options#command:target_compile_options&quot; id=&quot;index-1-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; commands have an effect on only one target at a time. The commands &lt;a href=&quot;../command/add_compile_definitions#command:add_compile_definitions&quot; id=&quot;index-0-command:add_compile_definitions&quot;&gt;&lt;code&gt;add_compile_definitions()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_compile_options#command:add_compile_options&quot; id=&quot;index-0-command:add_compile_options&quot;&gt;&lt;code&gt;add_compile_options()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; have a similar function, but operate at directory scope instead of target scope for convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b11bfe75649612091d00e608040d85ff0c75376" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt; command converts relative paths to absolute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53fb1b740211be72112e09b46bc7d928fe6f420f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command source-file signature generates a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file to build the source file into an executable. In order to compile the source the same way as it might be compiled by the calling project, the generated project sets the value of the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; variable to that in the calling project. The value of the &lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-0-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; variable may be needed in some cases too, but CMake 3.1 and lower did not set it in the generated project. CMake 3.2 and above prefer to set it so that linker flags are honored as well as compiler flags. This policy provides compatibility with the pre-3.2 behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0b825dbbc46d1cbc94fbfa5c6db06d89d25547" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; source file signature is intended to allow callers to check whether they will be able to compile a given source file with the current toolchain. In order to match compiler behavior, any language standard mode should match. However, CMake 3.7 and below did not do this. CMake 3.8 and above prefer to honor the language standard settings for &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt; (C++), and &lt;code&gt;CUDA&lt;/code&gt; using the values of the variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76211ccddc3af3f2f4428126c7ca27c027e5e1b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/use_mangled_mesa#command:use_mangled_mesa&quot; id=&quot;index-0-command:use_mangled_mesa&quot;&gt;&lt;code&gt;use_mangled_mesa()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed625154684316401a0cb012e129a27807aceea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/utility_source#command:utility_source&quot; id=&quot;index-0-command:utility_source&quot;&gt;&lt;code&gt;utility_source()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5726dc014e731a57dfe323bd61e01435c69a4c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../command/variable_requires#command:variable_requires&quot; id=&quot;index-0-command:variable_requires&quot;&gt;&lt;code&gt;variable_requires()&lt;/code&gt;&lt;/a&gt; command should not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee5ea15f7e69effc745e7c9cb5064ef7091c237" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../envvar/cmake_build_parallel_level#envvar:CMAKE_BUILD_PARALLEL_LEVEL&quot; id=&quot;index-0-envvar:CMAKE_BUILD_PARALLEL_LEVEL&quot;&gt;&lt;code&gt;CMAKE_BUILD_PARALLEL_LEVEL&lt;/code&gt;&lt;/a&gt; environment variable, if set, specifies a default parallel level when this option is not given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a8d903d35568de894dabb59fc607be91e1ef84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; set this to &lt;code&gt;make&lt;/code&gt;, &lt;code&gt;gmake&lt;/code&gt;, or a generator-specific tool (e.g. &lt;code&gt;nmake&lt;/code&gt; for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/NMake%20Makefiles.html#generator:NMake%20Makefiles&quot; id=&quot;index-0-generator:NMake Makefiles&quot;&gt;&lt;code&gt;NMake Makefiles&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ada68370062ab810e9833392a1f8d147eabd8c8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; create a &lt;code&gt;.sln&lt;/code&gt; file for each directory whose &lt;code&gt;CMakeLists.txt&lt;/code&gt; file calls the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command. Set this property in the same directory as a &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command call (e.g. in the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt; file) to specify the default startup project for the corresponding solution file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc27ebac6ae8f8d68114c761097d6545689dc169" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above support using a CUDA toolset provided by a CUDA Toolkit. The toolset version number may be specified by a field in &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; of the form &lt;code&gt;cuda=8.0&lt;/code&gt;. If none is specified CMake will choose a default version. CMake provides the selected CUDA toolset version in this variable. The value may be empty if no CUDA Toolkit with Visual Studio integration is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf2e837d95d7210df33fc0bc6a88b21b783f89e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2013 and above support using either the 32-bit or 64-bit host toolchains by specifying a &lt;code&gt;host=x86&lt;/code&gt; or &lt;code&gt;host=x64&lt;/code&gt; value in the &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; option. CMake provides the selected toolchain architecture preference in this variable (&lt;code&gt;x86&lt;/code&gt;, &lt;code&gt;x64&lt;/code&gt;, or empty).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730de581b7b9cbd5e7515c7bfe9eeb73ac5bd8e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2017 and above allow to select minor versions of the same toolset. The toolset version number may be specified by a field in &lt;a href=&quot;cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; of the form &lt;code&gt;version=14.11&lt;/code&gt;. If none is specified CMake will choose a default toolset. The value may be empty if no minor version was selected and the default is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46dd54f2f09b043a43c6551c69b60522d013ddee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; set this to the full path to &lt;code&gt;MSBuild.exe&lt;/code&gt; (VS &amp;gt;= 10), &lt;code&gt;devenv.com&lt;/code&gt; (VS 7,8,9), or &lt;code&gt;VCExpress.exe&lt;/code&gt; (VS Express 8,9). (See also variables &lt;a href=&quot;cmake_vs_msbuild_command#variable:CMAKE_VS_MSBUILD_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_MSBUILD_COMMAND&quot;&gt;&lt;code&gt;CMAKE_VS_MSBUILD_COMMAND&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_vs_devenv_command#variable:CMAKE_VS_DEVENV_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_DEVENV_COMMAND&quot;&gt;&lt;code&gt;CMAKE_VS_DEVENV_COMMAND&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e6e5b2bb24cda3f0f86bee9c819d77a47ce2fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; support toolset specification using one of these forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bca720a19edaa932853c1c5b0c0c594c72fe93" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module/cmakepackageconfighelpers#module:CMakePackageConfigHelpers&quot; id=&quot;index-0-module:CMakePackageConfigHelpers&quot;&gt;&lt;code&gt;CMakePackageConfigHelpers&lt;/code&gt;&lt;/a&gt; module provides a macro for creating a simple &lt;code&gt;ConfigVersion.cmake&lt;/code&gt; file. This file sets the version of the package. It is read by CMake when &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-11-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; is called to determine the compatibility with the requested version, and to set some version-specific variables &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION&lt;/code&gt;, &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION_MAJOR&lt;/code&gt;, &lt;code&gt;&amp;lt;PackageName&amp;gt;_VERSION_MINOR&lt;/code&gt; etc. The &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command is used to export the targets in the &lt;code&gt;ClimbingStatsTargets&lt;/code&gt; export-set, defined previously by the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command. This command generates the &lt;code&gt;ClimbingStatsTargets.cmake&lt;/code&gt; file to contain &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-2-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets, suitable for use by downstreams and arranges to install it to &lt;code&gt;lib/cmake/ClimbingStats&lt;/code&gt;. The generated &lt;code&gt;ClimbingStatsConfigVersion.cmake&lt;/code&gt; and a &lt;code&gt;cmake/ClimbingStatsConfig.cmake&lt;/code&gt; are installed to the same location, completing the package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a59eeefc671323a3b379f204263104c9624e714" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module/findopengl#module:FindOpenGL&quot; id=&quot;index-1-module:FindOpenGL&quot;&gt;&lt;code&gt;FindOpenGL&lt;/code&gt;&lt;/a&gt; module provides an &lt;code&gt;OpenGL::GL&lt;/code&gt; target and an &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; variable for projects to use for legacy GL interfaces. When both a legacy GL library (e.g. &lt;code&gt;libGL.so&lt;/code&gt;) and GLVND libraries for OpenGL and GLX (e.g. &lt;code&gt;libOpenGL.so&lt;/code&gt; and &lt;code&gt;libGLX.so&lt;/code&gt;) are available, the module must choose between them. It documents an &lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; variable that can be used to specify an explicit preference. When no such preference is set, the module must choose a default preference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ffa07e1a41dd78a870001f4cfb7c03d24d6c64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-0-module:FindQt&quot;&gt;&lt;code&gt;FindQt&lt;/code&gt;&lt;/a&gt; module does not exist for &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cb4b6bd2902c2db893fefd158f70cf702fde81" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global properties contain all the features known to CMake, regardless of compiler support for the feature. The &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variables contain all features CMake knows are known to the compiler, regardless of language standard or compile flags needed to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7d658903d60013ee69f9951ed093b2ed37ef9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_gbl/enabled_languages#prop_gbl:ENABLED_LANGUAGES&quot; id=&quot;index-0-prop_gbl:ENABLED_LANGUAGES&quot;&gt;&lt;code&gt;ENABLED_LANGUAGES&lt;/code&gt;&lt;/a&gt; global property contains the languages which are currently enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb3ebd7672258a024baea69cbee1d585090b43b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/archive_output_directory#prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;ARCHIVE_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/archive_output_name#prop_tgt:ARCHIVE_OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:ARCHIVE_OUTPUT_NAME&quot;&gt;&lt;code&gt;ARCHIVE_OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target properties may be used to control archive output artifact locations and names in the build tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1274a5a2d36459ae3f924db62029542d3c2d057e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; target property controls whether &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; inspects the C++ files in the target to determine if they require &lt;code&gt;moc&lt;/code&gt; to be run, and to create rules to execute &lt;code&gt;moc&lt;/code&gt; at the appropriate time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c402412cd50ddfe6a5d96852f8aedd23d213744f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; target property may be pre-set for all following targets by setting the &lt;a href=&quot;../variable/cmake_automoc#variable:CMAKE_AUTOMOC&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC&lt;/code&gt;&lt;/a&gt; variable. The &lt;a href=&quot;../prop_tgt/automoc_moc_options#prop_tgt:AUTOMOC_MOC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MOC_OPTIONS&quot;&gt;&lt;code&gt;AUTOMOC_MOC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property may be populated to set options to pass to &lt;code&gt;moc&lt;/code&gt;. The &lt;a href=&quot;../variable/cmake_automoc_moc_options#variable:CMAKE_AUTOMOC_MOC_OPTIONS&quot; id=&quot;index-0-variable:CMAKE_AUTOMOC_MOC_OPTIONS&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC_MOC_OPTIONS&lt;/code&gt;&lt;/a&gt; variable may be populated to pre-set the options for all following targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd323f7e0365077ad11c65914f912e052278a8d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; target property controls whether &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-3-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; creates rules to execute &lt;code&gt;rcc&lt;/code&gt; at the appropriate time on source files which have the suffix &lt;code&gt;.qrc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0165b746604ffcf977e052a515c033b88cc9482d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; target property may be pre-set for all following targets by setting the &lt;a href=&quot;../variable/cmake_autorcc#variable:CMAKE_AUTORCC&quot; id=&quot;index-0-variable:CMAKE_AUTORCC&quot;&gt;&lt;code&gt;CMAKE_AUTORCC&lt;/code&gt;&lt;/a&gt; variable. The &lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property may be populated to set options to pass to &lt;code&gt;rcc&lt;/code&gt;. The &lt;a href=&quot;../variable/cmake_autorcc_options#variable:CMAKE_AUTORCC_OPTIONS&quot; id=&quot;index-0-variable:CMAKE_AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;CMAKE_AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; variable may be populated to pre-set the options for all following targets. The &lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; source file property may be set on the &lt;code&gt;&amp;lt;name&amp;gt;.qrc&lt;/code&gt; file to set particular options for the file. This overrides options from the &lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-1-prop_tgt:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2903227496ba5a5bb6c2370c5034cf05121523" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; target property controls whether &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-2-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; inspects the C++ files in the target to determine if they require &lt;code&gt;uic&lt;/code&gt; to be run, and to create rules to execute &lt;code&gt;uic&lt;/code&gt; at the appropriate time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc862a8961b54f857c4ddc884bec91876b562f66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; target property may be pre-set for all following targets by setting the &lt;a href=&quot;../variable/cmake_autouic#variable:CMAKE_AUTOUIC&quot; id=&quot;index-0-variable:CMAKE_AUTOUIC&quot;&gt;&lt;code&gt;CMAKE_AUTOUIC&lt;/code&gt;&lt;/a&gt; variable. The &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property may be populated to set options to pass to &lt;code&gt;uic&lt;/code&gt;. The &lt;a href=&quot;../variable/cmake_autouic_options#variable:CMAKE_AUTOUIC_OPTIONS&quot; id=&quot;index-0-variable:CMAKE_AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;CMAKE_AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; variable may be populated to pre-set the options for all following targets. The &lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; source file property may be set on the &lt;code&gt;&amp;lt;basename&amp;gt;.ui&lt;/code&gt; file to set particular options for the file. This overrides options from the &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-1-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7b1a686a61e4df58a4071d46f47334ac1d578d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/compatible_interface_number_max#prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_NUMBER_MAX&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MAX&lt;/code&gt;&lt;/a&gt; target property specifies that content will be evaluated numerically and the maximum number among all specified will be calculated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c28c3d28a6592a7f05b8cadb1b1405d40772db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/library_output_directory#prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;LIBRARY_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/library_output_name#prop_tgt:LIBRARY_OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:LIBRARY_OUTPUT_NAME&quot;&gt;&lt;code&gt;LIBRARY_OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target properties may be used to control library output artifact locations and names in the build tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a8ad76ac05c0590385ccf0ee6fa33ffd7fdf59" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-0-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; may also be read from an IMPORTED target, though there is rarely reason to do so. Commands such as &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-3-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; can transparently use an &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-8-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../prop_tgt/type#prop_tgt:TYPE&quot; id=&quot;index-1-prop_tgt:TYPE&quot;&gt;&lt;code&gt;EXECUTABLE&lt;/code&gt;&lt;/a&gt; target as a &lt;code&gt;COMMAND&lt;/code&gt; executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92d7154289bc1df88ca0415efde52b7bbdffc51" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/runtime_output_name#prop_tgt:RUNTIME_OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_NAME&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target properties may be used to control runtime output artifact locations and names in the build tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab761ec7eba3e00b2e886071ea1c030828f2b2f1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt;&lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt;&lt;/a&gt; variable may be enabled to change the behavior of &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-2-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; to build shared libraries by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77946c786e04028f64f9d372e7eeacb918bdac56" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_directory_labels#variable:CMAKE_DIRECTORY_LABELS&quot; id=&quot;index-0-variable:CMAKE_DIRECTORY_LABELS&quot;&gt;&lt;code&gt;CMAKE_DIRECTORY_LABELS&lt;/code&gt;&lt;/a&gt; variable can be used to initialize this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ec61d93574501ebd1af6888ac91b5d9451d252" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt;&lt;/a&gt; tells the generator which SDK to use. Further &lt;a href=&quot;../variable/cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; tells the generator what version of Windows CE to use. Currently version 8.0 (Windows Embedded Compact 2013) is supported out of the box. Other versions may require one to set &lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; to the correct value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a672a714890472828b358628717b7b92bbae7188" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-1-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt; may be set to select the Nsight Tegra &amp;ldquo;Toolchain Version&amp;rdquo; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4ef70ba394a4fe08109a73d66e7d11aa3b9ad9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_minimum_required_version#variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot; id=&quot;index-0-variable:CMAKE_MINIMUM_REQUIRED_VERSION&quot;&gt;&lt;code&gt;CMAKE_MINIMUM_REQUIRED_VERSION&lt;/code&gt;&lt;/a&gt; variable may also be used to determine whether to report an error on use of deprecated macros or functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1258511190c4ba4f0bcc98dd60c8331c74f338f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt; is also optional. It may be used to specify a path on the host to install to. The &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; is always the runtime installation location, even when cross-compiling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a909a6bc74cf78a7549cafd9b77b67927b3fa2e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; is optional, and may be specified if a sysroot is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b81d3a9cebc945d958afb28aaa395f0d744d624" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable can also be used to specify exactly one directory to use as a prefix. Setting &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; also has other effects. See the documentation for that variable for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095e031c74d68175d3430d1271c40789f93f8c0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; is the CMake-identifier of the target platform to build for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574cd31898758a54e1042cde492c619cd9bcdfb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/cmake_system_processor#variable:CMAKE_SYSTEM_PROCESSOR&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PROCESSOR&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PROCESSOR&lt;/code&gt;&lt;/a&gt; is the CMake-identifier of the target architecture to build for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f02b64dac1560ad2b0e28d421f34c7ba8d2303" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt;&lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt;&lt;/a&gt; variable may be set to explicitly specify the build command line. Otherwise the build command line is computed automatically based on the options given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1db8f96e8bceed82a1a8cea6d78f3fc83b48e66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-commands.7#manual:cmake-commands(7)&quot; id=&quot;index-0-manual:cmake-commands(7)&quot;&gt;&lt;code&gt;cmake-commands(7)&lt;/code&gt;&lt;/a&gt; manual entry for &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fd413cc4b74b48262e719843c8e369e83443a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-commands.7#manual:cmake-commands(7)&quot; id=&quot;index-1-manual:cmake-commands(7)&quot;&gt;&lt;code&gt;cmake-commands(7)&lt;/code&gt;&lt;/a&gt; manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e9a14c5f5a49f17ecdd49391e7ee821a34cca5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-env-variables.7#manual:cmake-env-variables(7)&quot; id=&quot;index-0-manual:cmake-env-variables(7)&quot;&gt;&lt;code&gt;cmake-env-variables(7)&lt;/code&gt;&lt;/a&gt; manual documents environment variables that have special meaning to CMake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64b70fb075faf4dab16d460f601018ec56c2495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-modules.7#manual:cmake-modules(7)&quot; id=&quot;index-0-manual:cmake-modules(7)&quot;&gt;&lt;code&gt;cmake-modules(7)&lt;/code&gt;&lt;/a&gt; manual entry for &lt;code&gt;&amp;lt;mod&amp;gt;&lt;/code&gt; is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acad0ed6ac622dfe795e3acebd96961877a6de6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-modules.7#manual:cmake-modules(7)&quot; id=&quot;index-1-manual:cmake-modules(7)&quot;&gt;&lt;code&gt;cmake-modules(7)&lt;/code&gt;&lt;/a&gt; manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6a451c32d7773d468b69c76f6ab6107dc9ca66" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-0-manual:cmake-policies(7)&quot;&gt;&lt;code&gt;cmake-policies(7)&lt;/code&gt;&lt;/a&gt; manual entry for &lt;code&gt;&amp;lt;cmp&amp;gt;&lt;/code&gt; is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73b1e9d325d3bbe51f74512ab5b366fd9e31755" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-1-manual:cmake-policies(7)&quot;&gt;&lt;code&gt;cmake-policies(7)&lt;/code&gt;&lt;/a&gt; manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c139b5155ddb8beac2a76dece48cff06d5c00f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-properties.7#manual:cmake-properties(7)&quot; id=&quot;index-0-manual:cmake-properties(7)&quot;&gt;&lt;code&gt;cmake-properties(7)&lt;/code&gt;&lt;/a&gt; manual entries for &lt;code&gt;&amp;lt;prop&amp;gt;&lt;/code&gt; are printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f39d077f33b9d066b1f3261205bc301d836de39" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-properties.7#manual:cmake-properties(7)&quot; id=&quot;index-1-manual:cmake-properties(7)&quot;&gt;&lt;code&gt;cmake-properties(7)&lt;/code&gt;&lt;/a&gt; manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de9a29dd230a928d289231edcddca134a37c5dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-variables.7#manual:cmake-variables(7)&quot; id=&quot;index-0-manual:cmake-variables(7)&quot;&gt;&lt;code&gt;cmake-variables(7)&lt;/code&gt;&lt;/a&gt; manual documents the many variables that are provided by CMake or have meaning to CMake when set by project code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c85e5542acfd83e7ac13a1f4ea178fc33e83cb6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-variables.7#manual:cmake-variables(7)&quot; id=&quot;index-0-manual:cmake-variables(7)&quot;&gt;&lt;code&gt;cmake-variables(7)&lt;/code&gt;&lt;/a&gt; manual entry for &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39364cdc02da8ebfdaf156c54ea1a78b5dc423f6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake-variables.7#manual:cmake-variables(7)&quot; id=&quot;index-1-manual:cmake-variables(7)&quot;&gt;&lt;code&gt;cmake-variables(7)&lt;/code&gt;&lt;/a&gt; manual is printed in a human-readable text format. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9356e2fe3192317b527675d0fda0faa013cb94ef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; is initialized on the first call to a &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; command. Therefore one must set &lt;code&gt;CMAKE_FIND_NO_INSTALL_PREFIX&lt;/code&gt; before this in order to take effect. A user may set the variable as a cache entry on the command line to achieve this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0559768154badc84df1c83d31c3845e3fdb2e029" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_vs_devenv_command#variable:CMAKE_VS_DEVENV_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_DEVENV_COMMAND&quot;&gt;&lt;code&gt;CMAKE_VS_DEVENV_COMMAND&lt;/code&gt;&lt;/a&gt; is also provided for the non-Express editions of Visual Studio. See also the &lt;a href=&quot;cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0471bf1796074213fccfaf251c2c3546b69961be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cmake_vs_msbuild_command#variable:CMAKE_VS_MSBUILD_COMMAND&quot; id=&quot;index-0-variable:CMAKE_VS_MSBUILD_COMMAND&quot;&gt;&lt;code&gt;CMAKE_VS_MSBUILD_COMMAND&lt;/code&gt;&lt;/a&gt; is also provided for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above. See also the &lt;a href=&quot;cmake_make_program#variable:CMAKE_MAKE_PROGRAM&quot; id=&quot;index-0-variable:CMAKE_MAKE_PROGRAM&quot;&gt;&lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160b7b06aa122c3b9e28a64f0e24a27cf993ae8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt;&lt;code&gt;FindPython&lt;/code&gt;&lt;/a&gt; module can be used if Python version does not matter for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c4f8c1880340718a996dd12cd0109c04f50825" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a45292b1542b6e1e7dd31ef77d6a5a29d032ff7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Green%20Hills%20MULTI.html#generator:Green%20Hills%20MULTI&quot; id=&quot;index-0-generator:Green Hills MULTI&quot;&gt;&lt;code&gt;Green Hills MULTI&lt;/code&gt;&lt;/a&gt; generator sets this to the full path to &lt;code&gt;gbuild.exe(Windows)&lt;/code&gt; or &lt;code&gt;gbuild(Linux)&lt;/code&gt; based upon the toolset being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8604c3fb98c53d35df445a293c8e50a8580a8251" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator sets this to &lt;code&gt;ninja&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae10605ab7f680a86639ab6be010e553abef90e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator for Xcode 3.0 and above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50298d5f622eb640a86b86c2021b9c0cea2bb53a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator sets this to &lt;code&gt;xcodebuild&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea95a5067d9474e9cd6e1f01fa599bb1b40a41b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pre_install_script#prop_tgt:PRE_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:PRE_INSTALL_SCRIPT&quot;&gt;&lt;code&gt;PRE_INSTALL_SCRIPT&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;POST_INSTALL_SCRIPT&lt;/code&gt; properties are the old way to specify CMake scripts to run before and after installing a target. They are used only when the old &lt;code&gt;INSTALL_TARGETS&lt;/code&gt; command is used to install the target. Use the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745a3cddefba3797a8ec9121d95e940c2dccabc6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command should be preferred whenever possible. Library dependencies are chained automatically, so directory-wide specification of link libraries is rarely needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c5f66d77d65ef4ad19b2a270b2f00721291dbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$&amp;lt;INSTALL_PREFIX&amp;gt;&lt;/code&gt;&lt;a href=&quot;cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expression&lt;/code&gt;&lt;/a&gt; may be used as a placeholder for the install prefix without resulting in a non-relocatable package. This is necessary if complex generator expressions are used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738fba7d4b5c8bd5b9064f3f8b6101a8ac956d7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; and &lt;a href=&quot;../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-0-prop_tgt:DEBUG_POSTFIX&quot;&gt;&lt;code&gt;DEBUG_POSTFIX&lt;/code&gt;&lt;/a&gt; target properties can also be considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f8883ee34fda042e7a454c3cb318425d4fa310" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; and &lt;a href=&quot;../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-1-prop_tgt:DEBUG_POSTFIX&quot;&gt;&lt;code&gt;DEBUG_POSTFIX&lt;/code&gt;&lt;/a&gt; target properties can also be considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592092e7c293a786cdce19b43e9932ca54adc66b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; and &lt;a href=&quot;../prop_tgt/debug_postfix#prop_tgt:DEBUG_POSTFIX&quot; id=&quot;index-2-prop_tgt:DEBUG_POSTFIX&quot;&gt;&lt;code&gt;DEBUG_POSTFIX&lt;/code&gt;&lt;/a&gt; target properties can also be considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98be8f19b63e47ab6024a50eef97b450c8d6e75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;LANG&amp;gt;_VISIBILITY_PRESET&lt;/code&gt; and &lt;a href=&quot;../prop_tgt/visibility_inlines_hidden#prop_tgt:VISIBILITY_INLINES_HIDDEN&quot; id=&quot;index-0-prop_tgt:VISIBILITY_INLINES_HIDDEN&quot;&gt;&lt;code&gt;VISIBILITY_INLINES_HIDDEN&lt;/code&gt;&lt;/a&gt; target properties affect visibility of symbols during dynamic linking. When first introduced these properties affected compilation of sources only in shared libraries, module libraries, and executables with the &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; property set. This was sufficient for the basic use cases of shared libraries and executables with plugins. However, some sources may be compiled as part of static libraries or object libraries and then linked into a shared library later. CMake 3.3 and above prefer to honor these properties for sources compiled in all target types. This policy preserves compatibility for projects expecting the properties to work only for some target types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9271c6c74d52aa9ee9a0742235ed6e0d3658296" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;LANG&amp;gt;_VISIBILITY_PRESET&lt;/code&gt; property determines the value passed in a visibility related compile option, such as &lt;code&gt;-fvisibility=&lt;/code&gt; for &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;. This property affects compilation in sources of all types of targets (subject to policy &lt;a href=&quot;../policy/cmp0063#policy:CMP0063&quot; id=&quot;index-0-policy:CMP0063&quot;&gt;&lt;code&gt;CMP0063&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613e6e8af3a413b4316f7b795d262a26a4b874b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd40962fcaa4d40729be39afea33e770932c8bff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a092dbe3ec4cc698ff3a17d38716cdf90bd332ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable will be set to &lt;code&gt;TRUE&lt;/code&gt; if all the variables &lt;code&gt;&amp;lt;required-var&amp;gt;...&lt;/code&gt; are valid and any optional constraints are satisfied, and &lt;code&gt;FALSE&lt;/code&gt; otherwise. A success or failure message may be displayed based on the results and on whether the &lt;code&gt;REQUIRED&lt;/code&gt; and/or &lt;code&gt;QUIET&lt;/code&gt; option was given to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2e822d5c4fac2e856252ce382b5121bf66284f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; has the same syntax and is evaluated using the same logic as described at length for the &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d4e1abd0340ea4dfe1123ce45deaa4e75ee02e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; can be any of the download or update/patch options that the &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-1-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; command understands. The configure, build, install and test steps are explicitly disabled and therefore options related to them will be ignored. In most cases, &lt;code&gt;&amp;lt;contentOptions&amp;gt;&lt;/code&gt; will just be a couple of options defining the download method and method-specific details like a commit tag or archive hash. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f3071444e4fdc82282e618eab4f2d6ca55c15e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;docstring&amp;gt;&lt;/code&gt; must be specified as a line of text providing a quick summary of the option for presentation to &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-5-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0f365117477641ee20559779f58712a30fbd23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; arguments are the input and output file, the same way as in &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-2-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0240b93ed3f883c43779630f50127a8d7375ba33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;lcName&amp;gt;_SOURCE_DIR&lt;/code&gt; and &lt;code&gt;&amp;lt;lcName&amp;gt;_BINARY_DIR&lt;/code&gt; variables are still returned to the caller, but since these locations are not stored as global properties when this form is used, they are only available to the calling scope and below rather than the entire project hierarchy. No &lt;code&gt;&amp;lt;lcName&amp;gt;_POPULATED&lt;/code&gt; variable is set in the caller&amp;rsquo;s scope with this form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ba3737392dea26d97fd9ad28241055036a3de0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version of CMake given to the most recent call to the &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9461ecc7b5c4565bc8a31100f2085cce3dec5ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; must be one of the above &lt;a href=&quot;#dashboard-client-modes&quot;&gt;Dashboard Client Modes&lt;/a&gt;, and each &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; must be one of the above &lt;a href=&quot;#dashboard-client-steps&quot;&gt;Dashboard Client Steps&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da876ad5bbb8e6b66a666f67d64cd99b913181ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; argument contains all keywords for this macro which can be followed by more than one value, like e.g. the &lt;code&gt;TARGETS&lt;/code&gt; or &lt;code&gt;FILES&lt;/code&gt; keywords of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="566c1aca16e0b8836c0d2d02575b70f48d585d82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; of the group and &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; argument may contain backslashes to specify subgroups:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6e3b268e712a4bdab364c396f9e710f9e2f767" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; argument contains all keywords for this macro which are followed by one value, like e.g. &lt;code&gt;DESTINATION&lt;/code&gt; keyword of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6893188bef5c6d1a51d1e8b00a44b39013381a9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; argument contains all options for the respective macro, i.e. keywords which can be used when calling the macro without any value following, like e.g. the &lt;code&gt;OPTIONAL&lt;/code&gt; keyword of the &lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fce1e70e7de257bab4f4d31e02704bdedb3d7b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; given to &lt;code&gt;INSTALL_DESTINATION&lt;/code&gt; must be the destination where the &lt;code&gt;FooConfig.cmake&lt;/code&gt; file will be installed to. This path can either be absolute, or relative to the &lt;code&gt;INSTALL_PREFIX&lt;/code&gt; path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbba624b192abc377a9e230c2f3c4f9cd0b6371f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;result&amp;gt;&lt;/code&gt; variable, if specified, receives the status of the operation. It is set to &lt;code&gt;0&lt;/code&gt; upon success or an error message otherwise. If &lt;code&gt;RESULT&lt;/code&gt; is not specified and the operation fails, a fatal error is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e6fae59e18907f2facbdfb1b3a232d9709b275" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; file must call &lt;a href=&quot;cmake-commands.7#ctest-commands&quot;&gt;CTest Commands&lt;/a&gt; commands to run testing steps explicitly as documented below. The commands obtain &lt;a href=&quot;#dashboard-client-configuration&quot;&gt;Dashboard Client Configuration&lt;/a&gt; settings from their arguments or from variables set in the script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc7b97731df7bd602d520f68e5cdb159377ecde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt; must be specified as one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670710aea6435d9c14ea8de710f468de5f251abd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*.user.props&lt;/code&gt; files can be used for Visual Studio wide configuration which is independent from cmake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41245e1d54aa6a41ed16a7316a17356ab31bd89b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--progress&lt;/code&gt; option to &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest&lt;/code&gt;&lt;/a&gt; overrides this environment variable if both are given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6011db2d399e79bb7b832f86a7c7255f904dc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.netrc&lt;/code&gt; file is ignored. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e1f3d42915ee0cf2ac3c8d0670dee9ce96a0eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.netrc&lt;/code&gt; file is optional, and information in the URL is preferred. The file will be scanned to find which ever information is not specified in the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104e3678d9b787caccac14f21ace849fdcdf8ef0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.netrc&lt;/code&gt; file is required, and information in the URL is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920a77b83c924a6d66ba5ba5cc6c6df6b34cb5a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ADD_COMPILER_EXPORT_FLAGS&lt;/code&gt; function adds &lt;code&gt;-fvisibility=hidden&lt;/code&gt; to &lt;code&gt;CMAKE_CXX_FLAGS&lt;/code&gt; if supported, and is a no-op on Windows which does not need extra compiler flags for exporting support. You may optionally pass a single argument to &lt;code&gt;ADD_COMPILER_EXPORT_FLAGS&lt;/code&gt; that will be populated with the &lt;code&gt;CXX_FLAGS&lt;/code&gt; required to enable visibility support for the compiler/architecture in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a53dbfa401eacb358962d8368243e32d5409bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BASE_NAME&lt;/code&gt; argument can be used to override the file name and the names used for the macros:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f274629ac19637bf60bbedbb0debad292aa046" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BASE_NAME&lt;/code&gt; may be overridden by specifying other options in the function. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2cdddbb89616feb6bb80e1f8b0090836cb538d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BRIEF_DOCS&lt;/code&gt; and &lt;code&gt;FULL_DOCS&lt;/code&gt; options are followed by strings to be associated with the property as its brief and full documentation. Corresponding options to the &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-5-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt; command will retrieve the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec60460a54e9b15bbf177a38a35827e15d11b68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BUILD_INTERFACE&lt;/code&gt; expression wraps requirements which are only used when consumed from a target in the same buildsystem, or when consumed from a target exported to the build directory using the &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command. The &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; expression wraps requirements which are only used when consumed from a target which has been installed and exported with the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b893f8a5863fafbcdfdc3deedb2e9f5720c8d5e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BYPRODUCTS&lt;/code&gt; option is ignored on non-Ninja generators except to mark byproducts &lt;code&gt;GENERATED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81560bca6e2da8b43639fc3b9c7545dec9d230a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BYPRODUCTS&lt;/code&gt; option is used by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-1-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator to list byproducts among the outputs of the custom commands that generate them, and is ignored by other generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26912bb8d18f85d0c12a5543205730807ca7215" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER&lt;/code&gt; variables may be set to full paths, or to names of compilers to search for in standard locations. For toolchains that do not support linking binaries without custom flags or scripts one may set the &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; variable to &lt;code&gt;STATIC_LIBRARY&lt;/code&gt; to tell CMake not to try to link executables during its checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4b9140769e0d844974ed9d92dbe7dee9c3bf3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; variables and the configuration-specific equivalents contain flags that will be added to the compile command when compiling a file of a particular language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a7d04c9f59318a51862afdff1f0aa7032586ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_INSTALL_MESSAGE&lt;/code&gt; variable may be set to control which messages are printed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0460a1c73b159e250b3efdfca3e84978aabfb09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_MAKE_PROGRAM&lt;/code&gt; variable is set for use by project code. The value is also used by the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;--build&lt;/code&gt; and &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;--build-and-test&lt;/code&gt; tools to launch the native build process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbb030b4efc03eeb33eff05fe34af82ed31def3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_MSVCIDE_RUN_PATH&lt;/code&gt; environment variable sets the default value for the &lt;a href=&quot;../variable/cmake_msvcide_run_path#variable:CMAKE_MSVCIDE_RUN_PATH&quot; id=&quot;index-0-variable:CMAKE_MSVCIDE_RUN_PATH&quot;&gt;&lt;code&gt;CMAKE_MSVCIDE_RUN_PATH&lt;/code&gt;&lt;/a&gt; variable if not already explicitly set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ff56ace691ad53c2292ebd232248d3a32c948a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt; environment variable sets the default value for the &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; variable. See &lt;a href=&quot;../prop_tgt/osx_architectures#prop_tgt:OSX_ARCHITECTURES&quot; id=&quot;index-0-prop_tgt:OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c42310a1192ec1a68be8217e7cb74f14db0cc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; content is passed to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag, if supported. The path is also stripped from the &lt;code&gt;RPATH&lt;/code&gt;/&lt;code&gt;RUNPATH&lt;/code&gt; if necessary on installation. The &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; is also used to prefix paths searched by the &lt;code&gt;find_*&lt;/code&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bbfc85d048b6e36cd5eb433fca156488815441" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CMAKE_VERSION&lt;/code&gt; variable is defined by CMake 2.6.3 and higher. Earlier versions defined only the individual component variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e329b70af2d2da76e9afe6904613a275fd86a986" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMMAND&lt;/code&gt; and &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; options may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0971610c4096eaeaa22bc385e772c7e79c1b0a33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPATIBILITY&lt;/code&gt; mode &lt;code&gt;AnyNewerVersion&lt;/code&gt; means that the installed package version will be considered compatible if it is newer or exactly the same as the requested version. This mode should be used for packages which are fully backward compatible, also across major versions. If &lt;code&gt;SameMajorVersion&lt;/code&gt; is used instead, then the behaviour differs from &lt;code&gt;AnyNewerVersion&lt;/code&gt; in that the major version number must be the same as requested, e.g. version 2.0 will not be considered compatible if 1.0 is requested. This mode should be used for packages which guarantee backward compatibility within the same major version. If &lt;code&gt;SameMinorVersion&lt;/code&gt; is used, the behaviour is the same as &lt;code&gt;SameMajorVersion&lt;/code&gt;, but both major and minor version must be the same as requested, e.g version 0.2 will not be compatible if 0.1 is requested. If &lt;code&gt;ExactVersion&lt;/code&gt; is used, then the package is only considered compatible if the requested version matches exactly its own version number (not considering the tweak version). For example, version 1.2.3 of a package is only considered compatible to requested version 1.2.3. This mode is for packages without compatibility guarantees. If your project has more elaborated version matching rules, you will need to write your own custom &lt;code&gt;ConfigVersion.cmake&lt;/code&gt; file instead of using this macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de965d4f0204f8e0c67c759611bc772772862a3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPATIBLE_INTERFACE_BOOL&lt;/code&gt; property may contain a list of properties for this target which must be consistent when evaluated as a boolean with the &lt;code&gt;INTERFACE&lt;/code&gt; variant of the property in all linked dependees. For example, if a property &lt;code&gt;FOO&lt;/code&gt; appears in the list, then for each dependee, the &lt;code&gt;INTERFACE_FOO&lt;/code&gt; property content in all of its dependencies must be consistent with each other, and with the &lt;code&gt;FOO&lt;/code&gt; property in the depender.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cfe7f3c1ce04786fa8ab2c229690abfde4f1d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MAX&lt;/code&gt; property may contain a list of properties for this target whose maximum value may be read at generate time when evaluated in the &lt;code&gt;INTERFACE&lt;/code&gt; variant of the property in all linked dependees. For example, if a property &lt;code&gt;FOO&lt;/code&gt; appears in the list, then for each dependee, the &lt;code&gt;INTERFACE_FOO&lt;/code&gt; property content in all of its dependencies will be compared with each other and with the &lt;code&gt;FOO&lt;/code&gt; property in the depender. When reading the &lt;code&gt;FOO&lt;/code&gt; property at generate time, the maximum value will be returned. If the property is not set, then it is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e005cbd6fd4965d956652990ada5bbbda1631171" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPATIBLE_INTERFACE_NUMBER_MIN&lt;/code&gt; property may contain a list of properties for this target whose minimum value may be read at generate time when evaluated in the &lt;code&gt;INTERFACE&lt;/code&gt; variant of the property of all linked dependees. For example, if a property &lt;code&gt;FOO&lt;/code&gt; appears in the list, then for each dependee, the &lt;code&gt;INTERFACE_FOO&lt;/code&gt; property content in all of its dependencies will be compared with each other and with the &lt;code&gt;FOO&lt;/code&gt; property in the depender. When reading the &lt;code&gt;FOO&lt;/code&gt; property at generate time, the minimum value will be returned. If the property is not set, then it is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8670aeaf24cb561e27cac819f7c8394af3fc8ab6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; property may contain a list of properties for this target which must be the same when evaluated as a string in the &lt;code&gt;INTERFACE&lt;/code&gt; variant of the property all linked dependees. For example, if a property &lt;code&gt;FOO&lt;/code&gt; appears in the list, then for each dependee, the &lt;code&gt;INTERFACE_FOO&lt;/code&gt; property content in all of its dependencies must be equal with each other, and with the &lt;code&gt;FOO&lt;/code&gt; property in the depender. If the property is not set, then it is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e435913a2989f293cafcc43b206a5ac9ea5675" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; property may be set to a semicolon-separated list of preprocessor definitions using the syntax &lt;code&gt;VAR&lt;/code&gt; or &lt;code&gt;VAR=value&lt;/code&gt;. Function-style definitions are not supported. CMake will automatically escape the value correctly for the native build system (note that CMake language syntax may require escapes to specify some values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128b3df66062b0803363de35253be4b0eb8dbd86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; property may be set to a semicolon-separated list of preprocessor definitions using the syntax &lt;code&gt;VAR&lt;/code&gt; or &lt;code&gt;VAR=value&lt;/code&gt;. Function-style definitions are not supported. CMake will automatically escape the value correctly for the native build system (note that CMake language syntax may require escapes to specify some values). This property may be set on a per-configuration basis using the name &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; where &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; is an upper-case name (ex. &lt;code&gt;COMPILE_DEFINITIONS_DEBUG&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1181b810363fabe788c3284d9bc8b169b8534ee5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPILE_FLAGS&lt;/code&gt; property sets additional compiler flags used to build sources within the target. Use &lt;a href=&quot;compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; to pass additional preprocessor definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90c07e765b1c29d53a6178ca0d73164e578376d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPILE_FLAGS&lt;/code&gt; property, managed as a string, sets additional compiler flags used to build source files. Use &lt;a href=&quot;compile_definitions#prop_sf:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_sf:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; to pass additional preprocessor definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f798e5c17a32cfecd6773d0da172be983c8ddd1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONFIG&lt;/code&gt; option, the synonymous &lt;code&gt;NO_MODULE&lt;/code&gt; option, or the use of options not specified in the &lt;a href=&quot;#basic-signature&quot;&gt;basic signature&lt;/a&gt; all enforce pure Config mode. In pure Config mode, the command skips Module mode search and proceeds at once with Config mode search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118b5d03638f26df5f41097af7616513328bffa8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CONFIG&lt;/code&gt; parameter is compared case-insensitively with the configuration being built. In the presence of &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets, the content of &lt;code&gt;MAP_IMPORTED_CONFIG_DEBUG&lt;/code&gt; is also accounted for by this expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f94acd80db631b4f062afa489e843c9f215d768" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COPY&lt;/code&gt; signature copies files, directories, and symlinks to a destination folder. Relative input paths are evaluated with respect to the current source directory, and a relative destination is evaluated with respect to the current build directory. Copying preserves input file timestamps, and optimizes out a file if it exists at the destination with the same timestamp. Copying preserves input permissions unless explicit permissions or &lt;code&gt;NO_SOURCE_PERMISSIONS&lt;/code&gt; are given (default is &lt;code&gt;USE_SOURCE_PERMISSIONS&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7085c1efe403a4e68f68f256d52e06375a637064" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ClimbingStats_FINAL&lt;/code&gt; macro will expand to &lt;code&gt;final&lt;/code&gt; if the compiler (and its flags) support the &lt;code&gt;cxx_final&lt;/code&gt; feature, and the &lt;code&gt;ClimbingStats_CONSTEXPR&lt;/code&gt; macro will expand to &lt;code&gt;constexpr&lt;/code&gt; if &lt;code&gt;cxx_constexpr&lt;/code&gt; is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc34098947ea7fc85f9996618e285436ee53b9cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DATA{}&lt;/code&gt; syntax can alternatively match files associated with the named file and contained in the same directory. Associated files may be specified by options using the syntax &lt;code&gt;DATA{&amp;lt;name&amp;gt;,&amp;lt;opt1&amp;gt;,&amp;lt;opt2&amp;gt;,...}&lt;/code&gt;. Each option may specify one file by name or specify a regular expression to match file names using the syntax &lt;code&gt;REGEX:&amp;lt;regex&amp;gt;&lt;/code&gt;. For example, the arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4693f0022ccf3f7f55fd0046016211c1f7ce1539" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DATA{}&lt;/code&gt; syntax can be told to fetch a file series using the form &lt;code&gt;DATA{&amp;lt;name&amp;gt;,:}&lt;/code&gt;, where the &lt;code&gt;:&lt;/code&gt; is literal. If the source tree contains a group of files or content links named like a series then a reference to one member adds rules to fetch all of them. Although all members of a series are fetched, only the file originally named by the &lt;code&gt;DATA{}&lt;/code&gt; argument is substituted for it. The default configuration recognizes file series names ending with &lt;code&gt;#.ext&lt;/code&gt;, &lt;code&gt;_#.ext&lt;/code&gt;, &lt;code&gt;.#.ext&lt;/code&gt;, or &lt;code&gt;-#.ext&lt;/code&gt; where &lt;code&gt;#&lt;/code&gt; is a sequence of decimal digits and &lt;code&gt;.ext&lt;/code&gt; is any single extension. Configure it with a regex that parses &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; parts from the end of &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e187b4e0c6d7fec38141f45fa133a2ff130851e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DATA{}&lt;/code&gt; syntax is literal and the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is a full or relative path within the source tree. The source tree must contain either a real data file at &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; or a &amp;ldquo;content link&amp;rdquo; at &lt;code&gt;&amp;lt;name&amp;gt;&amp;lt;ext&amp;gt;&lt;/code&gt; containing a hash of the real file using a hash algorithm corresponding to &lt;code&gt;&amp;lt;ext&amp;gt;&lt;/code&gt;. For example, the argument &lt;code&gt;DATA{img.png}&lt;/code&gt; may be satisfied by either a real &lt;code&gt;img.png&lt;/code&gt; file in the current source directory or a &lt;code&gt;img.png.md5&lt;/code&gt; file containing its MD5 sum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4c7a134530f0d9c293523dd011eb307fd2a337" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DATA{}&lt;/code&gt; syntax may reference a directory using a trailing slash and a list of associated files. The form &lt;code&gt;DATA{&amp;lt;name&amp;gt;/,&amp;lt;opt1&amp;gt;,&amp;lt;opt2&amp;gt;,...}&lt;/code&gt; adds rules to fetch any files in the directory that match one of the associated file options. For example, the argument &lt;code&gt;DATA{MyDataDir/,REGEX:.*}&lt;/code&gt; will pass the full path to a &lt;code&gt;MyDataDir&lt;/code&gt; directory on the command line and ensure that the directory contains files corresponding to every file or content link in the &lt;code&gt;MyDataDir&lt;/code&gt; source directory. In order to match associated files in subdirectories, specify a &lt;code&gt;RECURSE:&lt;/code&gt; option, e.g. &lt;code&gt;DATA{MyDataDir/,RECURSE:,REGEX:.*}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9de45edd0bd6c2d38bfa90ec234313ac61f7a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DIRECTORY&lt;/code&gt; form installs contents of one or more directories to a given destination. The directory structure is copied verbatim to the destination. The last component of each directory name is appended to the destination directory but a trailing slash may be used to avoid this because it leaves the last component empty. Directory names given as relative paths are interpreted with respect to the current source directory. If no input directory names are given the destination directory will be created but nothing will be installed into it. The &lt;code&gt;FILE_PERMISSIONS&lt;/code&gt; and &lt;code&gt;DIRECTORY_PERMISSIONS&lt;/code&gt; options specify permissions given to files and directories in the destination. If &lt;code&gt;USE_SOURCE_PERMISSIONS&lt;/code&gt; is specified and &lt;code&gt;FILE_PERMISSIONS&lt;/code&gt; is not, file permissions will be copied from the source directory structure. If no permissions are specified files will be given the default permissions specified in the &lt;code&gt;FILES&lt;/code&gt; form of the command, and the directories will be given the default permissions specified in the &lt;code&gt;PROGRAMS&lt;/code&gt; form of the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d49083c1c9b97d1c32dadc3dfd7e004ed589ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOWNLOAD&lt;/code&gt; mode downloads the given &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt; to a local &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt;. The &lt;code&gt;UPLOAD&lt;/code&gt; mode uploads a local &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; to a given &lt;code&gt;&amp;lt;url&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34caa4360a510c81444366827e2c8a08b128d22f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXPORT&lt;/code&gt; form generates and installs a CMake file containing code to import targets from the installation tree into another project. Target installations are associated with the export &lt;code&gt;&amp;lt;export-name&amp;gt;&lt;/code&gt; using the &lt;code&gt;EXPORT&lt;/code&gt; option of the &lt;a href=&quot;#install-targets&quot;&gt;install(TARGETS)&lt;/a&gt; signature documented above. The &lt;code&gt;NAMESPACE&lt;/code&gt; option will prepend &lt;code&gt;&amp;lt;namespace&amp;gt;&lt;/code&gt; to the target names as they are written to the import file. By default the generated file will be called &lt;code&gt;&amp;lt;export-name&amp;gt;.cmake&lt;/code&gt; but the &lt;code&gt;FILE&lt;/code&gt; option may be used to specify a different name. The value given to the &lt;code&gt;FILE&lt;/code&gt; option must be a file name with the &lt;code&gt;.cmake&lt;/code&gt; extension. If a &lt;code&gt;CONFIGURATIONS&lt;/code&gt; option is given then the file will only be installed when one of the named configurations is installed. Additionally, the generated import file will reference only the matching target configurations. The &lt;code&gt;EXPORT_LINK_INTERFACE_LIBRARIES&lt;/code&gt; keyword, if present, causes the contents of the properties matching &lt;code&gt;(IMPORTED_)?LINK_INTERFACE_LIBRARIES(_&amp;lt;CONFIG&amp;gt;)?&lt;/code&gt; to be exported, when policy &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-0-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a466fd0a2c222623220c20a4669434e0ec8c47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;EXPORT&lt;/code&gt; form is useful to help outside projects use targets built and installed by the current project. For example, the code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69089911a8db7d3de62217214fc91215b372cef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_Add_Target&lt;/code&gt; function creates a custom target to manage local instances of data files stored externally:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dfdb4254ac74cfe949cfa1d86a077c80395ff1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_Add_Test&lt;/code&gt; function wraps around the CMake &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; command but supports &lt;code&gt;DATA{}&lt;/code&gt; references in its arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7571f8a4d3117b3a4443f00b513e02d3a02d96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_BINARY_ROOT&lt;/code&gt; variable may be set to the directory to hold the real data files named by expanded &lt;code&gt;DATA{}&lt;/code&gt; references. The default is &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;. The directory layout will mirror that of content links under &lt;code&gt;ExternalData_SOURCE_ROOT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bb8fbdd3094a4c8aa319028751148ffbd0387a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_Expand_Arguments&lt;/code&gt; function evaluates &lt;code&gt;DATA{}&lt;/code&gt; references in its arguments and constructs a new list of arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b240a3bad5aecf05f0d0ba0b18475c5dd513a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_LINK_CONTENT&lt;/code&gt; variable may be set to the name of a supported hash algorithm to enable automatic conversion of real data files referenced by the &lt;code&gt;DATA{}&lt;/code&gt; syntax into content links. For each such &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; a content link named &lt;code&gt;&amp;lt;file&amp;gt;&amp;lt;ext&amp;gt;&lt;/code&gt; is created. The original file is renamed to the form &lt;code&gt;.ExternalData_&amp;lt;algo&amp;gt;_&amp;lt;hash&amp;gt;&lt;/code&gt; to stage it for future transmission to one of the locations in the list of URL templates (by means outside the scope of this module). The data fetch rule created for the content link will use the staged object if it cannot be found using any URL template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782788f4a9132fa41dc6f36fd7fa13a1d2bf12f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_OBJECT_STORES&lt;/code&gt; variable may be set to a list of local directories that store objects using the layout &lt;code&gt;&amp;lt;dir&amp;gt;/%(algo)/%(hash)&lt;/code&gt;. These directories will be searched first for a needed object. If the object is not available in any store then it will be fetched remotely using the URL templates and added to the first local store listed. If no stores are specified the default is a location inside the build tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ae420855a351982486b8e5f5f06b75453dbb8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_SOURCE_ROOT&lt;/code&gt; variable may be set to the highest source directory containing any path named by a &lt;code&gt;DATA{}&lt;/code&gt; reference. The default is &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;. &lt;code&gt;ExternalData_SOURCE_ROOT&lt;/code&gt; and &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; must refer to directories within a single source distribution (e.g. they come together in one tarball).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee283d531aefbe78fb8e4bd2a4939203df9dd0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_TIMEOUT_ABSOLUTE&lt;/code&gt; variable sets the download absolute timeout, in seconds, with a default of &lt;code&gt;300&lt;/code&gt; seconds. Set to &lt;code&gt;0&lt;/code&gt; to disable enforcement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b21d88c76e025880af64beccc9f0d2d14939fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_TIMEOUT_INACTIVITY&lt;/code&gt; variable sets the download inactivity timeout, in seconds, with a default of &lt;code&gt;60&lt;/code&gt; seconds. Set to &lt;code&gt;0&lt;/code&gt; to disable enforcement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd051c2c74f526b166b2a8634962c54608624db7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; may be set to provide a list of of URL templates using the placeholders &lt;code&gt;%(algo)&lt;/code&gt; and &lt;code&gt;%(hash)&lt;/code&gt; in each template. Data fetch rules try each URL template in order by substituting the hash algorithm name for &lt;code&gt;%(algo)&lt;/code&gt; and the hash value for &lt;code&gt;%(hash)&lt;/code&gt;. Alternatively one may use &lt;code&gt;%(algo:&amp;lt;key&amp;gt;)&lt;/code&gt; with &lt;code&gt;ExternalData_URL_ALGO_&amp;lt;algo&amp;gt;_&amp;lt;key&amp;gt;&lt;/code&gt; variables to gain more flexibility in remote URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9407ceab28775e81927bde711d736b4a8898bee2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Add()&lt;/code&gt; function creates a custom target to drive download, update/patch, configure, build, install and test steps of an external project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaa46bdcaf50fd0f35adeead91d9e58f8d7bce6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Add()&lt;/code&gt; function on its own is often sufficient for incorporating an external project into the main build. Certain scenarios require additional work to implement desired behavior, such as adding in a custom step or making steps available as manually triggerable targets. The &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt;, &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; and &lt;code&gt;ExternalProject_Add_StepDependencies&lt;/code&gt; functions provide the lower level control needed to implement such step-level capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e41dbdea893053dd8772cbea8ccb4be6e185865" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Add_Step()&lt;/code&gt; function specifies an additional custom step for an external project defined by an earlier call to &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-0-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0d91aa8e05225fb5733cfadf2e85fb68bcca36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Add_StepDependencies()&lt;/code&gt; function can be used to add dependencies to a step. The dependencies added must be targets CMake already knows about (these can be ordinary executable or library targets, custom targets or even step targets of another external project):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee8571b0a8b47f6a9b8f07df9fa1b5aa7d49de2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; function generates targets for the steps listed. The name of each created target will be of the form &lt;code&gt;&amp;lt;name&amp;gt;-&amp;lt;step&amp;gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a2f5d6aac9ac1fe84ce8e987da67d5366f6169" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt; function retrieves external project target properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f848d58a95b4434b766eb8413072f586e2098d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FATAL_ERROR&lt;/code&gt; option is accepted but ignored by CMake 2.6 and higher. It should be specified so CMake versions 2.4 and lower fail with an error instead of just a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a431b7f417c4b5a48c37dcf20b9e7e0d0571cab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FETCHCONTENT_FULLY_DISCONNECTED&lt;/code&gt; and &lt;code&gt;FETCHCONTENT_UPDATES_DISCONNECTED&lt;/code&gt; cache variables are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2fd972a07ec91a3769e30fa0081767a170db38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FILES&lt;/code&gt; form specifies rules for installing files for a project. File names given as relative paths are interpreted with respect to the current source directory. Files installed by this form are by default given permissions &lt;code&gt;OWNER_WRITE&lt;/code&gt;, &lt;code&gt;OWNER_READ&lt;/code&gt;, &lt;code&gt;GROUP_READ&lt;/code&gt;, and &lt;code&gt;WORLD_READ&lt;/code&gt; if no &lt;code&gt;PERMISSIONS&lt;/code&gt; argument is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2824114f945a538c684d373635f02ab820098b60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FetchContent&lt;/code&gt; module also supports defining and populating content in a single call, with no check for whether the content has been populated elsewhere in the project already. This is a more low level operation and would not normally be the way the module is used, but it is sometimes useful as part of implementing some higher level feature or to populate some content in CMake&amp;rsquo;s script mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be623bd2636a53764f5bf249a3801215af9817c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FetchContent_Declare()&lt;/code&gt; function records the options that describe how to populate the specified content, but if such details have already been recorded earlier in this project (regardless of where in the project hierarchy), this and all later calls for the same content &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; are ignored. This &amp;ldquo;first to record, wins&amp;rdquo; approach is what allows hierarchical projects to have parent projects override content details of child projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4de57c90ee3aecd0996177effd22f142656d94f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FetchContent_Populate()&lt;/code&gt; command also supports a syntax allowing the content details to be specified directly rather than using any saved details. This is more low-level and use of this form is generally to be avoided in favour of using saved content details as outlined above. Nevertheless, in certain situations it can be useful to invoke the content population as an isolated operation (typically as part of implementing some other higher level feature or when using CMake in script mode):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a1ff650d5ace4807542e0c9b8950882391a303" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Foo&lt;/code&gt; fixture has no setup tests defined, only a single cleanup test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce594222819e3b65117efc6db5a647eb703b99a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FortranCInterface_HEADER&lt;/code&gt; function is provided to generate a C header file containing macros to mangle symbol names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b106d542149cc540456cadc3670babc55e4398f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FortranCInterface_VERIFY&lt;/code&gt; function is provided to verify that the Fortran and C/C++ compilers work together:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240ed41de83867b272bf87966a2b5d75c9d56d20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GENERATE_EXPORT_HEADER&lt;/code&gt; function can be used to generate a file suitable for preprocessor inclusion which contains EXPORT macros to be used in library classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34aa8ebbced75a47676899d2f4c65647b37836be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;GLOB_RECURSE&lt;/code&gt; mode will traverse all the subdirectories of the matched directory and match the files. Subdirectories that are symlinks are only traversed if &lt;code&gt;FOLLOW_SYMLINKS&lt;/code&gt; is given or policy &lt;a href=&quot;../policy/cmp0009#policy:CMP0009&quot; id=&quot;index-0-policy:CMP0009&quot;&gt;&lt;code&gt;CMP0009&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078e0c5995804244bba6aed6fb260400e835d69f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IMPORTED_LIBNAME&lt;/code&gt; property is allowed only on &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;imported&lt;/a&gt;&lt;a href=&quot;../manual/cmake-buildsystem.7#interface-libraries&quot;&gt;Interface Libraries&lt;/a&gt; and is rejected on targets of other types (for which the &lt;a href=&quot;imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; target property may be used).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53449ff4823c1fc8cae3e827bf26039848e6a4d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IMPORTED_LOCATION&lt;/code&gt; target property may be overridden for a given configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; by the configuration-specific &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property. Furthermore, the &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property may be used to map between a project&amp;rsquo;s configurations and those of an imported target. If none of these is set then the name of any other configuration listed in the &lt;a href=&quot;imported_configurations#prop_tgt:IMPORTED_CONFIGURATIONS&quot; id=&quot;index-0-prop_tgt:IMPORTED_CONFIGURATIONS&quot;&gt;&lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt;&lt;/a&gt; target property may be selected and its &lt;code&gt;IMPORTED_LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; value used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5c59b9787ace18e258316163fe0859a7c8468a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IMPORTED_TARGET&lt;/code&gt; argument will create an imported target named &lt;code&gt;PkgConfig::&amp;lt;prefix&amp;gt;&lt;/code&gt; that can be passed directly as an argument to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;GLOBAL&lt;/code&gt; argument will make the imported target available in global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a4e50b26800f4ee8a37786ead7a87c3e91fd33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTALL&lt;/code&gt; signature differs slightly from &lt;code&gt;COPY&lt;/code&gt;: it prints status messages (subject to the &lt;a href=&quot;../variable/cmake_install_message#variable:CMAKE_INSTALL_MESSAGE&quot; id=&quot;index-0-variable:CMAKE_INSTALL_MESSAGE&quot;&gt;&lt;code&gt;CMAKE_INSTALL_MESSAGE&lt;/code&gt;&lt;/a&gt; variable), and &lt;code&gt;NO_SOURCE_PERMISSIONS&lt;/code&gt; is default. Installation scripts generated by the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command use this signature (with some undocumented options for internal use).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17edbc53f8c388689aacacfab49f8e258ec7c266" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; is only suitable for specifying the required include directories for headers provided with the target itself, not those provided by the transitive dependencies listed in its &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property. Those dependencies should themselves be targets that specify their own header locations in &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ba09da768041d120ba7bc811a3fdec3cf6e19e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; is only suitable for specifying the required include directories for headers provided with the target itself, not those provided by the transitive dependencies listed in its &lt;a href=&quot;interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property. Those dependencies should themselves be targets that specify their own header locations in &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d15eff5d0ab177e35176d32e96ff32cc30a57b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the features. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/compile_features#prop_tgt:COMPILE_FEATURES&quot; id=&quot;index-0-prop_tgt:COMPILE_FEATURES&quot;&gt;&lt;code&gt;COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_compile_features#prop_tgt:INTERFACE_COMPILE_FEATURES&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_FEATURES&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc6c168e162121e10ade9cf777d3edaf69aa6a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) The following arguments specify compile definitions. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610f7e9e1bfc8b56b8ef780c539c10b614c8783b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) The following arguments specify compile options. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a92c3dbd89c6812e95c114fa92275d8f7c018ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) The following arguments specify include directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e779b970eafe09dbf535874a105ceeeba73d10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/link_options#prop_tgt:LINK_OPTIONS&quot; id=&quot;index-1-prop_tgt:LINK_OPTIONS&quot;&gt;&lt;code&gt;LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_link_options#prop_tgt:INTERFACE_LINK_OPTIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_LINK_OPTIONS&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) The following arguments specify link options. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9011eac1843659786970386ced6052d24adf7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the following arguments. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt;&lt;code&gt;SOURCES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_sources#prop_tgt:INTERFACE_SOURCES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SOURCES&quot;&gt;&lt;code&gt;INTERFACE_SOURCES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items.) The following arguments specify sources. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5712eec44f68e8787d48f786558782602ba8e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE&lt;/code&gt;, &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;PRIVATE&lt;/code&gt; keywords are required to specify the scope of the items that follow them. &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;PUBLIC&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;. &lt;code&gt;PUBLIC&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; items will populate the &lt;a href=&quot;../prop_tgt/interface_link_directories#prop_tgt:INTERFACE_LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; property of &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; (&lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; only support &lt;code&gt;INTERFACE&lt;/code&gt; items). Each item specifies a link directory and will be converted to an absolute path if necessary before adding it to the relevant property. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbbd7b06a8e169c7120b3b19d2dd17de0bc4003" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; property informs consumers of this target whether they must set their &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;ON&lt;/code&gt;. If this property is set to &lt;code&gt;ON&lt;/code&gt;, then the &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-1-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property on all consumers will be set to &lt;code&gt;ON&lt;/code&gt;. Similarly, if this property is set to &lt;code&gt;OFF&lt;/code&gt;, then the &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property on all consumers will be set to &lt;code&gt;OFF&lt;/code&gt;. If this property is undefined, then consumers will determine their &lt;a href=&quot;position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-3-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property by other means. Consumers must ensure that the targets that they link to have a consistent requirement for their &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf68b24177df3b03c987234057696e77e50085a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINKER:&lt;/code&gt; prefix can be specified as part of a &lt;code&gt;SHELL:&lt;/code&gt; prefix expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b002de382dc5e1ad45ce735ace96a2a016d6574" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINKER:&lt;/code&gt; prefix supports, as alternate syntax, specification of arguments using &lt;code&gt;SHELL:&lt;/code&gt; prefix and space as separator. Previous example becomes &lt;code&gt;&quot;LINKER:SHELL:-z defs&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fbd57aa986e0ede14ad199672697bc531bad38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINK_FLAGS&lt;/code&gt; property, managed as a string, can be used to add extra flags to the link step of a target. &lt;code&gt;LINK_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; will add to the configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt;, for example, &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;RELEASE&lt;/code&gt;, &lt;code&gt;MINSIZEREL&lt;/code&gt;, &lt;code&gt;RELWITHDEBINFO&lt;/code&gt;, &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1df8116efcd41ff510d745a2fe958b2ba6ab7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; mode appends the libraries to the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property instead of using them for linking. If policy &lt;a href=&quot;../policy/cmp0022#policy:CMP0022&quot; id=&quot;index-2-policy:CMP0022&quot;&gt;&lt;code&gt;CMP0022&lt;/code&gt;&lt;/a&gt; is not &lt;code&gt;NEW&lt;/code&gt;, then this mode also appends libraries to the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-3-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; and its per-configuration equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e3f274aa77a96d2531c802b86dc372b535a1bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LINK_PUBLIC&lt;/code&gt; and &lt;code&gt;LINK_PRIVATE&lt;/code&gt; modes can be used to specify both the link dependencies and the link interface in one command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5cb55aa078dd963d8f8778acab83a5cb682314" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LibXml2&lt;/code&gt; package is considered to be found if both &lt;code&gt;LIBXML2_LIBRARY&lt;/code&gt; and &lt;code&gt;LIBXML2_INCLUDE_DIR&lt;/code&gt; are valid. Then also &lt;code&gt;LibXml2_FOUND&lt;/code&gt; is set to &lt;code&gt;TRUE&lt;/code&gt;. If it is not found and &lt;code&gt;REQUIRED&lt;/code&gt; was used, it fails with a &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt;&lt;code&gt;message(FATAL_ERROR)&lt;/code&gt;&lt;/a&gt;, independent whether &lt;code&gt;QUIET&lt;/code&gt; was used or not. If it is found, success will be reported, including the content of the first &lt;code&gt;&amp;lt;required-var&amp;gt;&lt;/code&gt;. On repeated CMake runs, the same message will not be printed again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b1f7f7684b865d8ce4fd54008ca16e5b81786f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MACOSX_DEPLOYMENT_TARGET&lt;/code&gt; environment variable sets the default value for the &lt;a href=&quot;../variable/cmake_osx_deployment_target#variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot; id=&quot;index-0-variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot;&gt;&lt;code&gt;CMAKE_OSX_DEPLOYMENT_TARGET&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd84da49955879a2805b05cc5b3c966e8ddce08a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MESSAGE_NEVER&lt;/code&gt; option disables file installation status output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f3992f1bae10041d2b1090eebf76e8b5d13be9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to do nothing when a normal variable of the same name exists. The normal variable is not removed. The cache entry is not created or updated and is ignored if it exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd5ecbdd7b732a5232fa7b89e2ecc3a77b36d73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to ignore &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; whether it is modified or not and honor the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da402cb1b708f7f3076732a464aca9832445cbad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to process &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-5-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; source files in &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-4-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-4-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; just like regular source files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d83e402782fbda1041f3697ecb8e1f79857430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to honor config-specific flag variabldes like &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2a6f75609b87ced86a112fce5a607f7ce11b58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to only use the additional link flags when linking executables if the &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-3-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085d0bba915bf64406329496def2a261bfb80b6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to report an error if an entry in the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of a generator-expression conditionally linked &lt;code&gt;IMPORTED&lt;/code&gt; target does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86d044f8a6320563b251921fb4e8b79d0db7b8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OBJECT&lt;/code&gt; library type defines a non-archival collection of object files resulting from compiling the given source files. The object files collection may be used as source inputs to other targets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ab90ca2f00c246e509cd98b12d1aca3e108242" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is for &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command to populate the user package registry unless &lt;a href=&quot;../variable/cmake_export_no_package_registry#variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot; id=&quot;index-1-variable:CMAKE_EXPORT_NO_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_NO_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; is enabled. The &lt;code&gt;NEW&lt;/code&gt; behavior is for &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command to do nothing unless the &lt;a href=&quot;../variable/cmake_export_package_registry#variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot; id=&quot;index-1-variable:CMAKE_EXPORT_PACKAGE_REGISTRY&quot;&gt;&lt;code&gt;CMAKE_EXPORT_PACKAGE_REGISTRY&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec117d02aff50b78c042f4457c4eb267c6d7e0a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is for &lt;a href=&quot;../module/findboost#module:FindBoost&quot; id=&quot;index-1-module:FindBoost&quot;&gt;&lt;code&gt;FindBoost&lt;/code&gt;&lt;/a&gt; to report &lt;code&gt;Boost_VERSION&lt;/code&gt; as specified in the preprocessor definition &lt;code&gt;BOOST_VERSION&lt;/code&gt; in &lt;code&gt;boost/version.hpp&lt;/code&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is for &lt;a href=&quot;../module/findboost#module:FindBoost&quot; id=&quot;index-2-module:FindBoost&quot;&gt;&lt;code&gt;FindBoost&lt;/code&gt;&lt;/a&gt; to report &lt;code&gt;Boost_VERSION&lt;/code&gt; in &lt;code&gt;x.y.z&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c070c4da1095e37fe93847f5ea445e64ac9f90c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is for &lt;code&gt;BISON_TARGET&lt;/code&gt; to use the current source directory for the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; and where to generate implicit files. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to use the current binary directory for the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; and where to generate implicit files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d65d4cdfa8153ff13314d6b82b4e6902fcf4c57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is not to link executables to &lt;code&gt;qtmain.lib&lt;/code&gt; automatically when they link to the QtCore &lt;code&gt;IMPORTED&lt;/code&gt; target. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to link executables to &lt;code&gt;qtmain.lib&lt;/code&gt; automatically when they link to QtCore &lt;code&gt;IMPORTED&lt;/code&gt; target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c9b07991e3dc80abe60f1fe14832c1dcc37dfb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is not to warn about relative paths in the &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue a &lt;code&gt;FATAL_ERROR&lt;/code&gt; if &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; contains a relative path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53409d740a4d34d5dc79c1b6fd4eb008c855fa8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is not to warn about relative paths in the &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; target property. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue a &lt;code&gt;FATAL_ERROR&lt;/code&gt; if &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; contains a relative path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5891ab01bb75b1d6fe7f1d5d2880d8e87a66d61e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to add &lt;code&gt;-i&lt;/code&gt; to &lt;code&gt;make&lt;/code&gt; calls in CTest. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to not add &lt;code&gt;-i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40778954f322a0b04cd68685fbe017ddb8ff994" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow &lt;a href=&quot;../command/break#command:break&quot; id=&quot;index-2-command:break&quot;&gt;&lt;code&gt;break()&lt;/code&gt;&lt;/a&gt; to be placed outside of loop contexts and ignores any arguments. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue an error if a misplaced break or any arguments are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7696535bbb181874f2bd8ef7abd1bee86e5821ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow creating targets with reserved names or which do not match the validity pattern. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if an add_* command is used with an invalid target name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7282353655f7dedf510c56ec26e1413e7edbc89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow including the result of an &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is not to allow including the result of an &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06858fef883a4fb0946006eb45aac0a1b262a64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow installing the result of an &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-3-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is not to allow installing the result of an &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-4-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93594eb0884eedd93734d3f7f6c5c63386fb13ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow keyword and plain &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-4-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; signatures to be mixed. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to not to allow mixing of the keyword and plain signatures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ef03e6dd8a4f3ee6e803a0741e7f747f628ad8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow reading the &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-3-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; properties from build-targets. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to not to allow reading the &lt;a href=&quot;../prop_tgt/location#prop_tgt:LOCATION&quot; id=&quot;index-4-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; properties from build-targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b091aff65c9c13fb88814081fbe98757714b37c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to allow the use of &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; SOURCE signatures. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue an error if such a signature is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d16da0b8f86d503e5a3f53904d025bd988a2b58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ask the linker to search for libraries whose full paths are known to be in implicit link directories. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to link libraries by full path even if they are in implicit link directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80434789d0aa523b976d81a592f5a9a1d514c346" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to consume the content of the suffixed &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property when generating the compilation command. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to ignore the content of the &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; target property .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b3657f5ca4fb21666cb662d0e4fd57b974c89a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to dereference variables and interpret keywords even if they are quoted or bracketed. The &lt;code&gt;NEW&lt;/code&gt; behavior is to not dereference variables or interpret keywords that have been quoted or bracketed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f66b3e357e10abb9002e5a9f654957be616c4db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to expand such variables when processing the target sources. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue an error if such variables need to be expanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c05a630f26293570103d455906fce6a90583d6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to export the content of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; with the source or binary directory. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue an error if such a directory is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fb23bd0b8b5e9f1a6fbc4ffc122d7899915258" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to fall back to the &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt; if a &lt;code&gt;BUNDLE DESTINATION&lt;/code&gt; is not given. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to produce an error if a bundle target is installed without a &lt;code&gt;BUNDLE DESTINATION&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3eb3c617e40fd8ae48f357ed5d5872c6413553" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to honor the legacy behavior for variable references and escape sequences. The &lt;code&gt;NEW&lt;/code&gt; behavior is to use the simpler variable expansion and escape sequence evaluation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d30f6ec38737fc4eaf121006ddc60203aed569" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-4-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; source files in &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-3-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bbd7b324c26a49f21027e9a6ccaf10c80aca39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; variables. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to use &lt;code&gt;&amp;lt;PackageName&amp;gt;_ROOT&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3249c51e1f3fdb30fad24ab0ed10ee9ffc8ed03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt; in the include file check macros. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to honor &lt;code&gt;CMAKE_REQUIRED_LIBRARIES&lt;/code&gt; in the include file check macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72771179e457048bd0796a6a57f9e8ed18252a38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore attempts to set the link libraries of utility targets. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if an attempt is made to set the link libraries of a utility target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485aa4d5ab39ddec6bd427df1684df6e3267d614" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore custom commands for unknown targets. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if the target referenced in &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; is unknown or was defined outside the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fd4076e3066c2cbfb3df4a04147f6919435b06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore relative path entries if they contain a generator expression. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if a generator expression appears in another location and the path is relative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7ed519c8207daa59a1ed24cda7c6bc5b8016ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore targets which list themselves in their own link implementation. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if a target attempts to link to itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52645e1a5e14bd615cd9dd18cfd4c59f81073c93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; property for in-build targets. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to use the &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; property for in-build targets, and ignore the old properties matching &lt;code&gt;(IMPORTED_)?LINK_INTERFACE_LIBRARIES(_&amp;lt;CONFIG&amp;gt;)?&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f076c54b6f98289adda8dc9e50a546bc1cbf1df6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-1-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property for all targets and use the modified value of &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; for &lt;code&gt;SHARED&lt;/code&gt; and &lt;code&gt;MODULE&lt;/code&gt; libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2c61f46be23474295fd8df211a5f489efd3a92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the &lt;code&gt;TEST&lt;/code&gt; operator. The &lt;code&gt;NEW&lt;/code&gt; behavior is to interpret the &lt;code&gt;TEST&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd43ea84e606f4c09a5d9d865e31f7c77d2871ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the IN_LIST operator. The &lt;code&gt;NEW&lt;/code&gt; behavior is to interpret the IN_LIST operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba29a224c1ebba67c289e9e66654af755b8bba6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to ignore the visibility properties for static libraries, object libraries, and executables without exports. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to honor the visibility properties for all target types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997f9ef8d251e217ec65cd9c9a5a737697317882" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to implicitly dereference variables named like numbers and boolean constants. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to recognize numbers and boolean constants without dereferencing variables with such names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49912b23580714d587eb0031a19d464d41b575a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to issue no warning and set the result variable to a &lt;code&gt;-NOTFOUND&lt;/code&gt; value. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue a &lt;code&gt;FATAL_ERROR&lt;/code&gt; if the command is called with a non-existent target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9ca13bd7e6531702d9427d47629c8b6b55a33f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to leave &lt;code&gt;VERSION&lt;/code&gt; variables untouched. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to set &lt;code&gt;VERSION&lt;/code&gt; as documented by the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-4-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f011f3c0fbab6321b0c07d702f24de046a919a97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to never pass &lt;code&gt;-module&lt;/code&gt; option. The &lt;code&gt;NEW&lt;/code&gt; behavior is to pass &lt;code&gt;-module&lt;/code&gt; option to &lt;code&gt;SWIG&lt;/code&gt; compiler if &lt;code&gt;SWIG_MODULE_NAME&lt;/code&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7f49680d58c18b82b8f526f626915ca2855523" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to not manage &lt;code&gt;PIE&lt;/code&gt; link flags. The &lt;code&gt;NEW&lt;/code&gt; behavior is to add link flags if &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-1-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; is set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd74c243309f1c4e6cb60f36956169b4d03f386" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to not set the value of the &lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-1-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; variable in the generated test project. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to set the value of the &lt;a href=&quot;../variable/cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-2-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; variable in the test project to the same as it is in the calling project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5580a647fda026c5205b65d9daa1946126a0bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to omit &lt;code&gt;TARGET_OBJECTS&lt;/code&gt; expressions from the &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-2-prop_tgt:SOURCES&quot;&gt;&lt;code&gt;SOURCES&lt;/code&gt;&lt;/a&gt; target property. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to include &lt;code&gt;TARGET_OBJECTS&lt;/code&gt; expressions in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b60b29de9e2123399af68616e71659f260d6a0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to perform a case-insensitive comparison with the value in the &lt;code&gt;&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; expression. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to perform a case-sensitive comparison with the value in the &lt;code&gt;&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04a1b8fb7b01c26a36bad53de5e9954354a31eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to place MSVC runtime library flags in the default &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; cache entries and ignore the &lt;a href=&quot;../variable/cmake_msvc_runtime_library#variable:CMAKE_MSVC_RUNTIME_LIBRARY&quot; id=&quot;index-1-variable:CMAKE_MSVC_RUNTIME_LIBRARY&quot;&gt;&lt;code&gt;CMAKE_MSVC_RUNTIME_LIBRARY&lt;/code&gt;&lt;/a&gt; abstraction. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to &lt;em&gt;not&lt;/em&gt; place MSVC runtime library flags in the default cache entries and use the abstraction instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348304e1360f733f0d6d302a04241d3f2f2dde68" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to place MSVC warning flags in the default &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; cache entries. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to &lt;em&gt;not&lt;/em&gt; place MSVC warning flags in the default cache entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5ae191fc0aa545cdb31bc35897edafb3eb4892" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to place definition values given to add_definitions directly in the generated build rules without attempting to escape anything. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to generate correct escapes for all native build tools automatically. See documentation of the &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; target property for limitations of the escaping implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f0ec8b31b9bebc721487fade88a6f250072367" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to proceed even when a normal variable of the same name exists. If the cache entry does not already exist and have a type then it is created and/or given a type and the normal variable is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32560d72ec9076d89eac4b4eebf562697b6ed8f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to provide the list of flags given so far to the &lt;a href=&quot;../command/add_definitions#command:add_definitions&quot; id=&quot;index-0-command:add_definitions&quot;&gt;&lt;code&gt;add_definitions()&lt;/code&gt;&lt;/a&gt; command. The &lt;code&gt;NEW&lt;/code&gt; behavior is to behave as a normal user-defined directory property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9dbfb6bce9ef162ddb0a8c73a6423eb9d74b8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to re-evaluate the values for strict compatibility. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to leave the values untouched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d27f60ec28078179b56c2ff34989f62695be0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to run the install rules from &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-4-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; after the other install rules. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to run all install rules in the order they are declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60533e521ae50c6e528265844d272d7e6ba8ed7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to search for targets, then files on disk, even if the search term contains double-colons. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to issue a &lt;code&gt;FATAL_ERROR&lt;/code&gt; if a link dependency contains double-colons but is not an &lt;code&gt;IMPORTED&lt;/code&gt; target or an &lt;code&gt;ALIAS&lt;/code&gt; target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2999fb6526bcd171d90840701af0c746ec6c556" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to set &lt;code&gt;&amp;lt;tgt&amp;gt;_LIB_DEPENDS&lt;/code&gt; cache entries. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to not set them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f241c40018543a17e51b7eb84980b3ea34614be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to set &lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; to &lt;code&gt;LEGACY&lt;/code&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to set &lt;code&gt;OpenGL_GL_PREFERENCE&lt;/code&gt; to &lt;code&gt;GLVND&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f94d6411006ba4b0379c8bb2df7e6daee91b21d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to silently ignore non-existent dependencies. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to report an error if non-existent dependencies are listed in the &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-1-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b155382697a72e173405dc3c738cfae928e3de8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to silently remove leading and trailing whitespace. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to diagnose the existence of such whitespace as an error. The setting for this policy used when checking the library names is that in effect when the target is created by an &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62059cb4a4e1ae2aee1a36c09e0dde889534db24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to use compiler id &lt;code&gt;Clang&lt;/code&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to use compiler id &lt;code&gt;AppleClang&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b82147017da2b8d19eca37c7d4487ba8a3429f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to use compiler id &lt;code&gt;XL&lt;/code&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to use compiler id &lt;code&gt;XLClang&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4597054428bc391cc3bde8fd8378eca932222c25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy is to use the &lt;code&gt;GNU&lt;/code&gt; compiler id for the qcc and QCC compiler drivers. The &lt;code&gt;NEW&lt;/code&gt; behavior for this policy is to use the &lt;code&gt;QCC&lt;/code&gt; compiler id for those drivers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23785fdef39389c0a06c3c4b38b621ade65dda70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy relies on &lt;code&gt;UseSWIG_TARGET_NAME_PREFERENCE&lt;/code&gt; variable that can be used to specify an explicit preference. The value may be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd326fbf15af7734a1e9f550b38e4b85e048fca6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior for this policy set value &lt;code&gt;VERSION&lt;/code&gt; for variables &lt;code&gt;Python3_FIND_STRATEGY&lt;/code&gt;, &lt;code&gt;Python2_FIND_STRATEGY&lt;/code&gt; and &lt;code&gt;Python_FIND_STRATEGY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2c1d6d520228eca8892355c933d848e487fc06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of a policy is &lt;a href=&quot;../manual/cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-0-manual:cmake-policies(7)&quot;&gt;&lt;code&gt;deprecated by definition&lt;/code&gt;&lt;/a&gt; and may be removed in a future version of CMake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170d99b8f4041fe3a8efa468f90e340b86b5e625" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of a policy is &lt;a href=&quot;../manual/cmake-policies.7#manual:cmake-policies(7)&quot; id=&quot;index-1-manual:cmake-policies(7)&quot;&gt;&lt;code&gt;deprecated by definition&lt;/code&gt;&lt;/a&gt; and may be removed in a future version of CMake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6fb742be5de9c4b6c0082c7db23593cc4f29f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is for &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-6-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-7-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt; to not evaluate generator expressions. The &lt;code&gt;NEW&lt;/code&gt; behavior is to evaluate generator expressions for &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-8-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-9-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e187dcf4d8c6ad3fdcda354e650a09ac7436c657" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is for &lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-4-module:FindQt&quot;&gt;&lt;code&gt;FindQt&lt;/code&gt;&lt;/a&gt; to exist for &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;NEW&lt;/code&gt; behavior is to pretend that it doesn&amp;rsquo;t exist for &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5dd231510717e7e8c75467997d0f1bd195264c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is for &lt;code&gt;$&amp;lt;IN_LIST:...&amp;gt;&lt;/code&gt; to always return &lt;code&gt;0&lt;/code&gt; if the first argument is empty. The &lt;code&gt;NEW&lt;/code&gt; behavior is to return &lt;code&gt;1&lt;/code&gt; if the first argument is empty and the list contains an empty item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80611e54472ee34190f3067dfe2340a32825f86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to allow &lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-3-module:BundleUtilities&quot;&gt;&lt;code&gt;BundleUtilities&lt;/code&gt;&lt;/a&gt; to be included at configure time. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to disallow such inclusion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f48da75d34ce9a5f9c569deab8ebb34e5be769" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to always use the additional link flags when linking executables regardless of the value of the &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-2-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d8a6869ed740909de4e3a358beed710c41c068" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to disallow &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-5-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; calls naming targets from another directory except in the previously accidentally allowed case of using the &lt;code&gt;INTERFACE&lt;/code&gt; keyword only. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to allow all such calls but use the new scoping rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d40240abbfeed19d1cea549a8ebe31f5a8e9e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to ignore config-specific flag variables like &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_DEBUG&lt;/code&gt; and only use CMake&amp;rsquo;s built-in defaults for the current compiler and platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abe5ad8d463d7d9bc07db9d106e04bf6439bf39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to ignore language standard setting variables when generating the &lt;code&gt;try_compile&lt;/code&gt; test project. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to honor language standard setting variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6663140c881a0ec27e772cdc3e54b8dbca251171" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to report a warning if an entry in the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of a generator-expression conditionally linked &lt;code&gt;IMPORTED&lt;/code&gt; target does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fca32ff537b5dbe6bd090f27a25745a71d52b35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OLD&lt;/code&gt; behavior of this policy is to use the &lt;code&gt;RPATH&lt;/code&gt; settings for &lt;code&gt;install_name&lt;/code&gt; on macOS. The &lt;code&gt;NEW&lt;/code&gt; behavior of this policy is to ignore the &lt;code&gt;RPATH&lt;/code&gt; settings for &lt;code&gt;install_name&lt;/code&gt; on macOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb303b96777c1e7be790403c9d1b803328860e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OPTIONAL&lt;/code&gt; keyword is a placeholder for future implementation and does not currently work. Instead you can use the &lt;a href=&quot;../module/checklanguage#module:CheckLanguage&quot; id=&quot;index-0-module:CheckLanguage&quot;&gt;&lt;code&gt;CheckLanguage&lt;/code&gt;&lt;/a&gt; module to verify support before enabling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e3c2b15771b60b266a638f0d666daab2a14e06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;OSX_ARCHITECTURES&lt;/code&gt; property sets the target binary architecture for targets on macOS (&lt;code&gt;-arch&lt;/code&gt;). This property is initialized by the value of the variable &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; if it is set when a target is created. Use &lt;code&gt;OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; to set the binary architectures on a per-configuration basis, where &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt; is an upper-case name (e.g. &lt;code&gt;OSX_ARCHITECTURES_DEBUG&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6b908d2fb99f178c96fb5631aa1f21e1dddba7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PARSE_ARGV&lt;/code&gt; signature is only for use in a &lt;a href=&quot;function#command:function&quot; id=&quot;index-1-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; body. In this case the arguments that are parsed come from the &lt;code&gt;ARGV#&lt;/code&gt; variables of the calling function. The parsing starts with the &lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt;-th argument, where &lt;code&gt;&amp;lt;N&amp;gt;&lt;/code&gt; is an unsigned integer. This allows for the values to have special characters like &lt;code&gt;;&lt;/code&gt; in them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f369facd14f59c430992fa23908cf971c53762" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt; property determines whether position independent executables or shared libraries will be created. This property is &lt;code&gt;True&lt;/code&gt; by default for &lt;code&gt;SHARED&lt;/code&gt; and &lt;code&gt;MODULE&lt;/code&gt; library targets and &lt;code&gt;False&lt;/code&gt; otherwise. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_position_independent_code#variable:CMAKE_POSITION_INDEPENDENT_CODE&quot; id=&quot;index-0-variable:CMAKE_POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;CMAKE_POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb4b12ffeb8230159a16c52dae9b55df5965a77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PRE_INSTALL_SCRIPT&lt;/code&gt; and &lt;a href=&quot;post_install_script#prop_tgt:POST_INSTALL_SCRIPT&quot; id=&quot;index-0-prop_tgt:POST_INSTALL_SCRIPT&quot;&gt;&lt;code&gt;POST_INSTALL_SCRIPT&lt;/code&gt;&lt;/a&gt; properties are the old way to specify CMake scripts to run before and after installing a target. They are used only when the old &lt;code&gt;INSTALL_TARGETS&lt;/code&gt; command is used to install the target. Use the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f935d21bc527050bb63c736677b2b5c7f0c17568" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PROGRAMS&lt;/code&gt; form is identical to the &lt;code&gt;FILES&lt;/code&gt; form except that the default permissions for the installed file also include &lt;code&gt;OWNER_EXECUTE&lt;/code&gt;, &lt;code&gt;GROUP_EXECUTE&lt;/code&gt;, and &lt;code&gt;WORLD_EXECUTE&lt;/code&gt;. This form is intended to install programs that are not targets, such as shell scripts. Use the &lt;code&gt;TARGETS&lt;/code&gt; form to install targets built within the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9462567fa9c4ac1df3525a4aef0f3dea44ace60b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PUBLIC&lt;/code&gt;, &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; keywords can be used to specify both the link dependencies and the link interface in one command. Libraries and targets following &lt;code&gt;PUBLIC&lt;/code&gt; are linked to, and are made part of the link interface. Libraries and targets following &lt;code&gt;PRIVATE&lt;/code&gt; are linked to, but are not made part of the link interface. Libraries following &lt;code&gt;INTERFACE&lt;/code&gt; are appended to the link interface and are not used for linking &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d482c77fdbddea743fc51bc4817c6fe79eabbb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QUIET&lt;/code&gt; option can be given to hide the output associated with populating the specified content. If the population fails, the output will be shown regardless of whether this option was given or not so that the cause of the failure can be diagnosed. The global &lt;code&gt;FETCHCONTENT_QUIET&lt;/code&gt; cache variable has no effect on &lt;code&gt;FetchContent_Populate()&lt;/code&gt; calls where the content details are provided directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e957ae77ff0b62854beeeca26db20df3eafb2999" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RELEASE&lt;/code&gt; variant should be listed first in the property so that the variant is chosen if the user uses a configuration which is not an exact match for any listed &lt;code&gt;IMPORTED_CONFIGURATIONS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7842846fbf5362e4b72261d2ba9806e7cec218a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SCRIPT&lt;/code&gt; form will invoke the given CMake script files during installation. If the script file name is a relative path it will be interpreted with respect to the current source directory. The &lt;code&gt;CODE&lt;/code&gt; form will invoke the given CMake code during installation. Code is specified as a single argument inside a double-quoted string. For example, the code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d820d94b2dde28de18ffd81724b04aa8fc3016ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SOURCE_DIR&lt;/code&gt; and &lt;code&gt;BINARY_DIR&lt;/code&gt; arguments are supported by &lt;a href=&quot;externalproject#command:externalproject_add&quot; id=&quot;index-4-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;, but different default values are used by &lt;code&gt;FetchContent_Populate()&lt;/code&gt;. &lt;code&gt;SOURCE_DIR&lt;/code&gt; defaults to &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-src&lt;/code&gt; and &lt;code&gt;BINARY_DIR&lt;/code&gt; defaults to &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-build&lt;/code&gt;. If a relative path is specified, it will be interpreted as relative to &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe048d0890c7bc9370ac362318ce0511d5e7c32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SOURCE_DIR&lt;/code&gt;, &lt;code&gt;BINARY_DIR&lt;/code&gt; and &lt;code&gt;POPULATED&lt;/code&gt; options can be used to specify which properties should be retrieved. Each option accepts a value which is the name of the variable in which to store that property. Most of the time though, only &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is given, in which case the call will then set the same variables as a call to &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-3-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate(name)&lt;/code&gt;&lt;/a&gt;. This allows the following canonical pattern to be used, which ensures that the relevant variables will always be defined regardless of whether or not the population has been performed elsewhere in the project already:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43db2e5a71863a7cefc543504d98fa0c8f555234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STATIC_LIBRARY_FLAGS&lt;/code&gt; property, managed as a string, can be used to add extra flags to the link step of a static library target. &lt;code&gt;STATIC_LIBRARY_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; will add to the configuration &lt;code&gt;&amp;lt;CONFIG&amp;gt;&lt;/code&gt;, for example, &lt;code&gt;DEBUG&lt;/code&gt;, &lt;code&gt;RELEASE&lt;/code&gt;, &lt;code&gt;MINSIZEREL&lt;/code&gt;, &lt;code&gt;RELWITHDEBINFO&lt;/code&gt;, &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d161e29e991efc4072e92933c16eee92ca198c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;STEP_TARGETS&lt;/code&gt; and &lt;code&gt;INDEPENDENT_STEP_TARGETS&lt;/code&gt; options for &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-5-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt; are generally the easiest way to ensure targets are created for specific steps of interest. For custom steps, &lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt; must be called explicitly if a target should also be created for that custom step. An alternative to these two options is to populate the &lt;code&gt;EP_STEP_TARGETS&lt;/code&gt; and &lt;code&gt;EP_INDEPENDENT_STEP_TARGETS&lt;/code&gt; directory properties. These act as defaults for the step target options and can save having to repeatedly specify the same set of step targets when multiple external projects are being defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ed7ac43500af57c9d624a6fce9ae6e630164e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SUBBUILD_DIR&lt;/code&gt; argument can be provided to change the location of the sub-build created to perform the population. The default value is &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/&amp;lt;lcName&amp;gt;-subbuild&lt;/code&gt; and it would be unusual to need to override this default. If a relative path is specified, it will be interpreted as relative to &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf775d4568be78aec2fb569ebf3f4ae769a87ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TARGETS&lt;/code&gt; form specifies rules for installing targets from a project. There are several kinds of target files that may be installed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1087d278ae5c1e3bc065a5adadbc646b322a2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TEST&lt;/code&gt; operator was added to the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-1-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command to determine if a given test name was created by the &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e4014736b48c189698ca29c696ec1ca249da29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TO_CMAKE_PATH&lt;/code&gt; mode converts a native &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; into a cmake-style path with forward-slashes (&lt;code&gt;/&lt;/code&gt;). The input can be a single path or a system search path like &lt;code&gt;$ENV{PATH}&lt;/code&gt;. A search path will be converted to a cmake-style list separated by &lt;code&gt;;&lt;/code&gt; characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdbb0dce6f025f19a243c204ec5b8cc5d0bce61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TO_NATIVE_PATH&lt;/code&gt; mode converts a cmake-style &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; into a native path with platform-specific slashes (&lt;code&gt;\&lt;/code&gt; on Windows and &lt;code&gt;/&lt;/code&gt; elsewhere).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f5b3ea84ab135082109eda1f5b584d8de2fa5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TRANSFORM&lt;/code&gt; sub-command does not change the number of elements in the list. If a &lt;code&gt;&amp;lt;SELECTOR&amp;gt;&lt;/code&gt; is specified, only some elements will be changed, the other ones will remain the same as before the transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d25ce2504aa363b6c3f9f01866f3b05dca91f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VISIBILITY_INLINES_HIDDEN&lt;/code&gt; property determines whether a flag for hiding symbols for inline functions, such as &lt;code&gt;-fvisibility-inlines-hidden&lt;/code&gt;, should be used when invoking the compiler. This property affects compilation in sources of all types of targets (subject to policy &lt;a href=&quot;../policy/cmp0063#policy:CMP0063&quot; id=&quot;index-0-policy:CMP0063&quot;&gt;&lt;code&gt;CMP0063&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8788569718b4b2bd06266906cf188bc8823b3aac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WHAT&lt;/code&gt; option is the only mandatory option. Here you specify what information will be printed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f191be0e8772bf219ad0c712acb7aee3d9e7a08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[version]&lt;/code&gt; argument requests a version with which the package found should be compatible (format is &lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt;). The &lt;code&gt;EXACT&lt;/code&gt; option requests that the version be matched exactly. If no &lt;code&gt;[version]&lt;/code&gt; and/or component list is given to a recursive invocation inside a find-module, the corresponding arguments are forwarded automatically from the outer call (including the &lt;code&gt;EXACT&lt;/code&gt; flag for &lt;code&gt;[version]&lt;/code&gt;). Version support is currently provided only on a package-by-package basis (see the &lt;a href=&quot;#version-selection&quot;&gt;Version Selection&lt;/a&gt; section below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50d89baa21dfb074c44f4bf8c2ac5423945b298" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;add_jar()&lt;/code&gt; function sets the following target properties on &lt;code&gt;&amp;lt;target_name&amp;gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0452be53e192e365fe2cd3f0e50706936744e889" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;android_add_test_data&lt;/code&gt; function is used to copy files and libraries needed to run project-specific tests. On the host operating system, this is done at build time. For on-device testing, the files are loaded onto the device by the manufactured test at run time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa81d51d5b9d9a92c8eda49af59d3c749158c22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auto-regeneration&lt;/code&gt; rule in &lt;code&gt;top-build-dir/build.ninja&lt;/code&gt; must have an order-only dependency on &lt;code&gt;sub/build.ninja&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e332723db30344f017b0a894e3d1325a8560004a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cache&lt;/code&gt; object kind lists cache entries. These are the &lt;a href=&quot;cmake-language.7#cmake-language-variables&quot;&gt;Variables&lt;/a&gt; stored in the persistent cache (&lt;code&gt;CMakeCache.txt&lt;/code&gt;) for the build tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c263a3c7a2a980f0a747494763c274cd528ff47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmakeFiles&lt;/code&gt; object kind lists files used by CMake while configuring and generating the build system. These include the &lt;code&gt;CMakeLists.txt&lt;/code&gt; files as well as included &lt;code&gt;.cmake&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33660a5902c89ca53f09c28756f2c676be129b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmake_add_fortran_subdirectory&lt;/code&gt; function adds a subdirectory to a project that contains a fortran-only subproject. The module will check the current compiler and see if it can support fortran. If no fortran compiler is found and the compiler is MSVC, then this module will find the MinGW gfortran. It will then use an external project to build with the MinGW tools. It will also create imported targets for the libraries created. This will only work if the fortran code is built into a dll, so &lt;a href=&quot;../variable/build_shared_libs#variable:BUILD_SHARED_LIBS&quot; id=&quot;index-0-variable:BUILD_SHARED_LIBS&quot;&gt;&lt;code&gt;BUILD_SHARED_LIBS&lt;/code&gt;&lt;/a&gt; is turned on in the project. In addition the &lt;a href=&quot;../variable/cmake_gnutoms#variable:CMAKE_GNUtoMS&quot; id=&quot;index-0-variable:CMAKE_GNUtoMS&quot;&gt;&lt;code&gt;CMAKE_GNUtoMS&lt;/code&gt;&lt;/a&gt; option is set to on, so that Microsoft &lt;code&gt;.lib&lt;/code&gt; files are created. Usage is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25722d9bd1bb87c2094d8a1b8fadf17b0a6230d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; command implicitly invokes the &lt;a href=&quot;cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy(VERSION)&lt;/code&gt;&lt;/a&gt; command to specify that the current project code is written for the given range of CMake versions. All policies known to the running version of CMake and introduced in the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; (or &lt;code&gt;&amp;lt;max&amp;gt;&lt;/code&gt;, if specified) version or earlier will be set to use &lt;code&gt;NEW&lt;/code&gt; behavior. All policies introduced in later versions will be unset. This effectively requests behavior preferred as of a given CMake version and tells newer CMake versions to warn about their new policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e63904bcddca948b98c5df624d3cfa435d975df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cmake_policy&lt;/code&gt; command is used to set policies to &lt;code&gt;OLD&lt;/code&gt; or &lt;code&gt;NEW&lt;/code&gt; behavior. While setting policies individually is supported, we encourage projects to set policies based on CMake versions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa065d250695faafc522db8fe7548f8513be45ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;codemodel&lt;/code&gt; object kind describes the build system structure as modeled by CMake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6319a725b665bf9ec48dfec77db348f4e7c9c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;continue&lt;/code&gt; command allows a cmake script to abort the rest of a block in a &lt;a href=&quot;foreach#command:foreach&quot; id=&quot;index-0-command:foreach&quot;&gt;&lt;code&gt;foreach()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt;&lt;code&gt;while()&lt;/code&gt;&lt;/a&gt; loop, and start at the top of the next iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267d2d57f8ac8fcf6789ef8641cef166f6f4faf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create_javadoc()&lt;/code&gt; command can be used to create java documentation based on files or packages. For more details please read the javadoc manpage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531d46941ee91f20393c30f8081b9c8a4c7622bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cxx_alignas&lt;/code&gt; feature provides a macro definition &lt;code&gt;&amp;lt;PREFIX&amp;gt;_ALIGNAS&lt;/code&gt; which expands to either the standard &lt;code&gt;alignas&lt;/code&gt; decorator or a compiler-specific decorator such as &lt;code&gt;__attribute__ ((__aligned__))&lt;/code&gt; used by GNU compilers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e8d5d436ef37fb8d98b0124912b05e2671a87e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cxx_alignof&lt;/code&gt; feature provides a macro definition &lt;code&gt;&amp;lt;PREFIX&amp;gt;_ALIGNOF&lt;/code&gt; which expands to either the standard &lt;code&gt;alignof&lt;/code&gt; decorator or a compiler-specific decorator such as &lt;code&gt;__alignof__&lt;/code&gt; used by GNU compilers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9634625a49995c6ab631973cd290d82d8f3f8348" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cxx_attribute_deprecated&lt;/code&gt; feature provides a macro definition &lt;code&gt;&amp;lt;PREFIX&amp;gt;_DEPRECATED&lt;/code&gt;, which expands to either the standard &lt;code&gt;[[deprecated]]&lt;/code&gt; attribute or a compiler-specific decorator such as &lt;code&gt;__attribute__((__deprecated__))&lt;/code&gt; used by GNU compilers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b658ab25aa7e00b94b913c2bbebcc48811c26f05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exe1&lt;/code&gt; executable will be compiled with &lt;code&gt;-DLIB1_WITH_EXE&lt;/code&gt;, while the &lt;code&gt;shared_lib&lt;/code&gt; shared library will be compiled with &lt;code&gt;-DLIB1_WITH_SHARED_LIB&lt;/code&gt; and &lt;code&gt;-DCONSUMER_CMP0041_NEW&lt;/code&gt;, because policy &lt;a href=&quot;../policy/cmp0041#policy:CMP0041&quot; id=&quot;index-0-policy:CMP0041&quot;&gt;&lt;code&gt;CMP0041&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;NEW&lt;/code&gt; at the point where the &lt;code&gt;shared_lib&lt;/code&gt; target is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c357a996007ce930d93e7cf3c2e1d7b5c287b4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;feature_summary()&lt;/code&gt; macro can be used to print information about enabled or disabled packages or features of a project. By default, only the names of the features/packages will be printed and their required version when one was specified. Use &lt;code&gt;set_package_properties()&lt;/code&gt; to add more useful information, like e.g. a download URL for the respective package or their purpose in the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c5fc9d483723076e0c0c230b982c7ed61a6707" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_dependency()&lt;/code&gt; macro wraps a &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call for a package dependency:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c1259f11a945a9e0e1ff6ad05650ba73f1b3df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_dependency&lt;/code&gt; macro also sets &lt;code&gt;ClimbingStats_FOUND&lt;/code&gt; to &lt;code&gt;False&lt;/code&gt; if the dependency is not found, along with a diagnostic that the &lt;code&gt;ClimbingStats&lt;/code&gt; package can not be used without the &lt;code&gt;Stats&lt;/code&gt; package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0bdd0707bc904b356d6ee820fd031175efd998" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;giflib&lt;/code&gt; library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850c6e9176d893a5aca586003cbbf2d59689a036" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; URL of the dashboard server to send the submission to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4ade2186fdb76b5db5ec239e965d0631b90d06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; URL of the dashboard server to send the submission to. If not given, the &lt;a href=&quot;../variable/ctest_submit_url#variable:CTEST_SUBMIT_URL&quot; id=&quot;index-0-variable:CTEST_SUBMIT_URL&quot;&gt;&lt;code&gt;CTEST_SUBMIT_URL&lt;/code&gt;&lt;/a&gt; variable is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee33fd9265ec282a88d999c83f25584059e755b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;install()&lt;/code&gt; command generates a file, &lt;code&gt;cmake_install.cmake&lt;/code&gt;, inside the build directory, which is used internally by the generated install target and by CPack. You can also invoke this script manually with &lt;code&gt;cmake -P&lt;/code&gt;. This script accepts several variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93867dc3cc122a9aabeffa4f4015aa65a88281f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;install_jar()&lt;/code&gt; function sets the &lt;code&gt;INSTALL_DESTINATION&lt;/code&gt; target property on jars so installed. This property holds the &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; as described above, and is used by &lt;code&gt;install_jar_exports()&lt;/code&gt;. You can get this information with &lt;a href=&quot;../command/get_property#command:get_property&quot; id=&quot;index-0-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;INSTALL_DESTINATION&lt;/code&gt; property key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6813583088a3ea492f8dee9c422fadf2aa60ee5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key=value&lt;/code&gt; pairs form a comma-separated list of options to specify generator-specific details of the toolset selection. Supported pairs are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb506a918e44a6c61476500ed45e416b876c48c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kind&lt;/code&gt; member is a string specifying the object kind name. The &lt;code&gt;version&lt;/code&gt; member is a JSON object with &lt;code&gt;major&lt;/code&gt; and &lt;code&gt;minor&lt;/code&gt; members specifying integer components of the object kind&amp;rsquo;s version. Additional top-level members are specific to each object kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c034b42f76dc6ccf18dbd4ea994396dc49ef595" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib1&lt;/code&gt; and &lt;code&gt;lib2&lt;/code&gt; requirements are not &amp;ldquo;compatible&amp;rdquo;. One of them requires that consumers are built as position-independent-code, while the other requires that consumers are not built as position-independent-code. Because &lt;code&gt;exe2&lt;/code&gt; links to both and they are in conflict, a diagnostic is issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e427d9d5ababcba6191ffcaafe5aeabb42f702" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib1&lt;/code&gt; requirement &lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt; is not &amp;ldquo;compatible&amp;rdquo; with the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-2-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property of the &lt;code&gt;exe1&lt;/code&gt; target. The library requires that consumers are built as position-independent-code, while the executable specifies to not built as position-independent-code, so a diagnostic is issued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbf422c5dc21fe4cb7cd8db9b1b46c6aded3496" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lib&lt;/code&gt; path is always searched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4faaba2c226f06c0077f4081bb84d8a8ee9de6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;macro&lt;/code&gt; command is very similar to the &lt;a href=&quot;function#command:function&quot; id=&quot;index-1-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; command. Nonetheless, there are a few important differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4f20b7922e855adc130c7cbae40dc6dfce1770" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moc&lt;/code&gt; and &lt;code&gt;uic&lt;/code&gt; tools are executed as part of a synthesized &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt;&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;custom target&lt;/code&gt;&lt;/a&gt; generated by CMake. By default that &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; target inherits the dependencies of the &lt;code&gt;&amp;lt;ORIGIN&amp;gt;&lt;/code&gt; target (see &lt;a href=&quot;../prop_tgt/autogen_origin_depends#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt;). Target dependencies may be added to the &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; target by adding them to the &lt;a href=&quot;../prop_tgt/autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273443d7ec911d356807774dd12fdc5fca0f46fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moc&lt;/code&gt; command line will consume the &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target properties from the target it is being invoked for, and for the appropriate build configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fa621fd6732b7d2b2d00a8e2ae52bf0c58b1fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;moc_predefs.h&lt;/code&gt; file, which is generated in &lt;a href=&quot;autogen_build_dir#prop_tgt:AUTOGEN_BUILD_DIR&quot; id=&quot;index-0-prop_tgt:AUTOGEN_BUILD_DIR&quot;&gt;&lt;code&gt;AUTOGEN_BUILD_DIR&lt;/code&gt;&lt;/a&gt;, is passed to &lt;code&gt;moc&lt;/code&gt; as the argument to the &lt;code&gt;--include&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e949dad3104f83b2a8bfaf09736f3554fb93caf8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protobuf_generate_cpp&lt;/code&gt; and &lt;code&gt;protobuf_generate_python&lt;/code&gt; functions and &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; calls only work properly within the same directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d374ff78e9322c2c8ea19366a9e1f625e1c84a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;soname&lt;/code&gt; of an &lt;code&gt;IMPORTED&lt;/code&gt; target of shared library type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc19872790d7f42737bd267a20f15e388ec2bd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toolset&lt;/code&gt; specifies the toolset name. The selected toolset name is provided in the &lt;a href=&quot;cmake_vs_platform_toolset#variable:CMAKE_VS_PLATFORM_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_VS_PLATFORM_TOOLSET&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a954b5e7970bd8d446af50e43c3903a3122490d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write_compiler_detection_header&lt;/code&gt; function also creates compatibility code for other features which have standard equivalents. For example, the &lt;code&gt;cxx_static_assert&lt;/code&gt; feature is emulated with a template and abstracted via the &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT&lt;/code&gt; and &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT_MSG&lt;/code&gt; function-macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e080c2e76d0b93956c0250a63553eeec91e817" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;xctest_add_bundle&lt;/code&gt; function creates a XCTest bundle named &amp;lt;target&amp;gt; which will test the target &amp;lt;testee&amp;gt;. Supported target types for testee are Frameworks and App Bundles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5faef50ebf2bf7885ada7f295a7ce8ff30a1523" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;xctest_add_test&lt;/code&gt; function adds an XCTest bundle to the project to be run by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;. The test will be named &amp;lt;name&amp;gt; and tests &amp;lt;bundle&amp;gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04042168b753afde55b4bcfc575787430f4c7d32" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;uncovered&lt;/em&gt; directory holds any uncovered files found by &lt;a href=&quot;../variable/ctest_extra_coverage_glob#variable:CTEST_EXTRA_COVERAGE_GLOB&quot; id=&quot;index-0-variable:CTEST_EXTRA_COVERAGE_GLOB&quot;&gt;&lt;code&gt;CTEST_EXTRA_COVERAGE_GLOB&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7172b1c79f1723b67e0975c1be9580d9300a17" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ccmake&lt;/strong&gt; executable is the CMake curses interface. Project configuration settings may be specified interactively through this GUI. Brief instructions are provided at the bottom of the terminal when the program is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18fd66065e7a8373849ad46d2879f8ed90e89f6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cmake-gui&lt;/strong&gt; executable is the CMake GUI. Project configuration settings may be specified interactively. Brief instructions are provided at the bottom of the window when the program is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3fae4559052c3e0e6e1d2706fb192aa25fbef7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cmake&lt;/strong&gt; executable is the command-line interface of the cross-platform buildsystem generator CMake. The above &lt;a href=&quot;#synopsis&quot;&gt;Synopsis&lt;/a&gt; lists various actions the tool can perform as described in sections below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77372854ab645ba8cf4dfca3ba05ad8a6c30b04" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cpack&lt;/strong&gt; executable is the CMake packaging program. It generates installers and source packages in a variety of formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbd187881a3cde03ffbf81d402b5eb49e52e515" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cpack&lt;/strong&gt; program is steered by a configuration file written in the &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-0-manual:cmake-language(7)&quot;&gt;&lt;code&gt;CMake language&lt;/code&gt;&lt;/a&gt;. Unless chosen differently through the command-line option &lt;code&gt;--config&lt;/code&gt;, the file &lt;code&gt;CPackConfig.cmake&lt;/code&gt; in the current directory is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537989053739abd06c23b2859a95556877f9bdaa" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ctest&lt;/strong&gt; executable is the CMake test driver program. CMake-generated build trees created for projects that use the &lt;a href=&quot;../command/enable_testing#command:enable_testing&quot; id=&quot;index-0-command:enable_testing&quot;&gt;&lt;code&gt;enable_testing()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; commands have testing support. This program will run the tests and report results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e787bb7330483b6248545973dc08dcd06e71acd1" translate="yes" xml:space="preserve">
          <source>The ALL flag indicates that all components be downloaded. Otherwise, only those components explicitly marked as DOWNLOADED or that have a specified ARCHIVE_FILE will be downloaded. Additionally, the ALL option implies ADD_REMOVE (unless NO_ADD_REMOVE is specified).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a357d92a07d6ffa9aa2604af8ea90d1941c5c932" translate="yes" xml:space="preserve">
          <source>The Android ABI detected from the standalone toolchain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd38c65367fa169103ca2cb5235cebbc0c1dc101" translate="yes" xml:space="preserve">
          <source>The Android API level detected from the standalone toolchain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fc3c2f7e3991d15314cebabe10d8bf04968553" translate="yes" xml:space="preserve">
          <source>The BUILD_TESTING option is created by the Dart module to determine whether testing support should be enabled. The default is ON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df00cecd629f11743fb13e2b10a091015ac11c2" translate="yes" xml:space="preserve">
          <source>The C standard whose features are requested to build this target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280280e2ee6488af9626c009bb578e5ca7be6c34" translate="yes" xml:space="preserve">
          <source>The C++ standard whose features are requested to build this target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a594ae24421123ca53a585614de16ce7af7748" translate="yes" xml:space="preserve">
          <source>The CMake command-line tool displays &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages on stdout with the message preceded by two hyphens and a space. All other message types are sent to stderr and are not prefixed with hyphens. The &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-0-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;CMake GUI&lt;/code&gt;&lt;/a&gt; displays all messages in its log area. The &lt;a href=&quot;../manual/ccmake.1#manual:ccmake(1)&quot; id=&quot;index-0-manual:ccmake(1)&quot;&gt;&lt;code&gt;curses interface&lt;/code&gt;&lt;/a&gt; shows &lt;code&gt;STATUS&lt;/code&gt; to &lt;code&gt;TRACE&lt;/code&gt; messages one at a time on a status line and other messages in an interactive pop-up box. The &lt;code&gt;--loglevel&lt;/code&gt; command-line option to each of these tools can be used to control which messages will be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c35c5b5b7b35f198d5b8a18cd92602a8c99ccb0" translate="yes" xml:space="preserve">
          <source>The CMake file-based API reports semantic information about the build system using the following kinds of JSON objects. Each kind of object is versioned independently using semantic versioning with major and minor components. Every kind of object has the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ae0ca3d238c0e062f2bf3e599d34e855312212" translate="yes" xml:space="preserve">
          <source>The CMake fragment will generate a file in the &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}&lt;/code&gt; called &lt;code&gt;somelib_export.h&lt;/code&gt; containing the macros &lt;code&gt;SOMELIB_EXPORT&lt;/code&gt;, &lt;code&gt;SOMELIB_NO_EXPORT&lt;/code&gt;, &lt;code&gt;SOMELIB_DEPRECATED&lt;/code&gt;, &lt;code&gt;SOMELIB_DEPRECATED_EXPORT&lt;/code&gt; and &lt;code&gt;SOMELIB_DEPRECATED_NO_EXPORT&lt;/code&gt;. They will be followed by content taken from the variable specified by the &lt;code&gt;CUSTOM_CONTENT_FROM_VARIABLE&lt;/code&gt; option, if any. The resulting file should be installed with other headers in the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b1962719177ee0eb09763f22fc1f35e2c1bb88" translate="yes" xml:space="preserve">
          <source>The CMake source tree itself contains a &lt;a href=&quot;#variable:CPACK_PROJECT_CONFIG_FILE&quot; id=&quot;index-2-variable:CPACK_PROJECT_CONFIG_FILE&quot;&gt;&lt;code&gt;CPACK_PROJECT_CONFIG_FILE&lt;/code&gt;&lt;/a&gt;. See the top level file &lt;code&gt;CMakeCPackOptions.cmake.in&lt;/code&gt; for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30294840db63aca6f029648aeabbd4f17d393df" translate="yes" xml:space="preserve">
          <source>The CMake variable &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-0-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; specifies one or more directories to be prepended to all other search directories. This effectively &amp;ldquo;re-roots&amp;rdquo; the entire search under given locations. Paths which are descendants of the &lt;a href=&quot;../variable/cmake_staging_prefix#variable:CMAKE_STAGING_PREFIX&quot; id=&quot;index-0-variable:CMAKE_STAGING_PREFIX&quot;&gt;&lt;code&gt;CMAKE_STAGING_PREFIX&lt;/code&gt;&lt;/a&gt; are excluded from this re-rooting, because that variable is always a path on the host system. By default the &lt;a href=&quot;../variable/cmake_find_root_path#variable:CMAKE_FIND_ROOT_PATH&quot; id=&quot;index-1-variable:CMAKE_FIND_ROOT_PATH&quot;&gt;&lt;code&gt;CMAKE_FIND_ROOT_PATH&lt;/code&gt;&lt;/a&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc2283d69c82ef265d4481b1c31704205d85251" translate="yes" xml:space="preserve">
          <source>The CMake version string as three non-negative integer components separated by &lt;code&gt;.&lt;/code&gt; and possibly followed by &lt;code&gt;-&lt;/code&gt; and other information. The first two components represent the feature level and the third component represents either a bug-fix level or development date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ed2f373816fba2246913a4dbbb4b190a4c7af9" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the C compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b104fe689b2c174400a35f5e1048c0b0209fb6" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the CUDA compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52279f92b995859d9fe00c99025ba495dfcd9a0d" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the CXX compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e41952a88d004d92cd2c0f35d746adcd4564994" translate="yes" xml:space="preserve">
          <source>The CMake&amp;rsquo;s compiler id of the Fortran compiler used. See also the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b561fe14234e6d9b70a14b5cdd3a04543a7721c4" translate="yes" xml:space="preserve">
          <source>The CPack module generates a file &lt;code&gt;CPackConfig.cmake&lt;/code&gt; intended for use in a subsequent run of the &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-0-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; program where it steers the generation of installers or/and source packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6ace0fe62f85283d4e5d362502751ae2b252cd" translate="yes" xml:space="preserve">
          <source>The CPackComponent module is the module which handles the component part of CPack. See CPack module for general information about CPack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf51b930f4094ff782e2d3fe3e38159cfd8f5c2" translate="yes" xml:space="preserve">
          <source>The CUDA/C++ standard whose features are requested to build this target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2e6f0127177bb6735680380ffecaab44564493" translate="yes" xml:space="preserve">
          <source>The Cobertura Coverage parser expects to read the coverage data from a single XML file which contains the coverage data for all modules. Cobertura has a program with the ability to merge given &lt;code&gt;cobertura.ser&lt;/code&gt; files and then another program to generate a combined XML file from the previous merged file. For command line testing, this can be done by hand prior to CTest looking for the coverage files. For script builds, set the &lt;code&gt;CTEST_COVERAGE_COMMAND&lt;/code&gt; variable to point to a file which will perform these same steps, such as a &lt;code&gt;.sh&lt;/code&gt; or &lt;code&gt;.bat&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e514dd9a9ef12461e7928325d29609e68bda0717" translate="yes" xml:space="preserve">
          <source>The Compiler (eg, MSVC, GCC, Clang) and compiler version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49e372a0a60b7a4dbe7634d53d53fb6ce7d7c07" translate="yes" xml:space="preserve">
          <source>The Eclipse project generator generates so-called linked resources e.g. to the subproject root dirs in the source tree or to the source files of targets. This can be disabled by setting this variable to FALSE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964c98f0649faafefc07d2038e62d90ecad61392" translate="yes" xml:space="preserve">
          <source>The Expat &lt;code&gt;expat&lt;/code&gt; library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ee6f15bcc01719b56184c36895b1f42837a3b2" translate="yes" xml:space="preserve">
          <source>The FLTK Forms library (debug)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac717db462c1a69074a6055ddfc971b87b36168a" translate="yes" xml:space="preserve">
          <source>The FLTK Forms library (optimized)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d829c55de3c96b6b98daccec130f85edbd549fcc" translate="yes" xml:space="preserve">
          <source>The FLTK GL library (debug)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2feb1051f7b1d2303d40026e89cdba5270c6eea3" translate="yes" xml:space="preserve">
          <source>The FLTK GL library (optimized)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad11c625eaefa0bd132aee676e34cc0667050cf0" translate="yes" xml:space="preserve">
          <source>The FLTK Images library (debug)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb359fcff4c568bc05990924426869896b012a77" translate="yes" xml:space="preserve">
          <source>The FLTK Images protobuf library (optimized)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c36c40d8514d6b4abb13684e8017392d51b6ca0" translate="yes" xml:space="preserve">
          <source>The FLTK base library (debug)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16381ba0701fd8ef7ad356ecda5c7ac5c797df7" translate="yes" xml:space="preserve">
          <source>The FLTK base library (optimized)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c0d5fa42c040dbdcab8965d586c8855032f197" translate="yes" xml:space="preserve">
          <source>The Fontconfig library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f440cde8c4a4e34b400eea0e40dc2c6e68656c" translate="yes" xml:space="preserve">
          <source>The Freetype &lt;code&gt;freetype&lt;/code&gt; library, if found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3b503abea6a1ca7c1819d25ed63348832fa245" translate="yes" xml:space="preserve">
          <source>The GLEW shared library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fcb654b6536a0f4fe5b1ea26069d40748671b7" translate="yes" xml:space="preserve">
          <source>The GLEW static library, if &lt;code&gt;GLEW_USE_STATIC_LIBS&lt;/code&gt; is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a97c0f2aacd9de3b6da954abdffc054b51de02" translate="yes" xml:space="preserve">
          <source>The GNU Scientific Library (GSL) is a numerical library for C and C++ programmers. It is free software under the GNU General Public License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9828afceb44e5f4025bac54903c487076dfaa880" translate="yes" xml:space="preserve">
          <source>The Google Test &lt;code&gt;gtest&lt;/code&gt; library, if found; adds Thread::Thread automatically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa5ad8b4b429c62849710ee9e035026df9b68c2" translate="yes" xml:space="preserve">
          <source>The Google Test &lt;code&gt;gtest&lt;/code&gt; library; note it also requires linking with an appropriate thread library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bba4fe489a3e96409de3c7b2eed8701681e5038" translate="yes" xml:space="preserve">
          <source>The Google Test &lt;code&gt;gtest_main&lt;/code&gt; library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc17762129a2269fe9fef482eb69eb62dcd21e3" translate="yes" xml:space="preserve">
          <source>The Google Test &lt;code&gt;gtest_main&lt;/code&gt; library, if found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1f9b3477f07c95688fdd14fe585a060e274421" translate="yes" xml:space="preserve">
          <source>The JNI symlink which should be installed. This is used by &lt;code&gt;install_jni_symlink()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd1b7be24bbf9dbd38b05f1c30d81ad95b4a4bc" translate="yes" xml:space="preserve">
          <source>The JPEG library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc81decbfa486804a9bf488e4f5dfdd604a067ea" translate="yes" xml:space="preserve">
          <source>The LTTng-UST include directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53c42a38763dbca1f81b614dd1b70939778d138" translate="yes" xml:space="preserve">
          <source>The LTTng-UST library, if found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231199e2e3cbe087a5a057e23355b8688a8871ef" translate="yes" xml:space="preserve">
          <source>The LTTng-UST version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7eb8fdd0c0261a8b911ce5f1d7985f43404fc0" translate="yes" xml:space="preserve">
          <source>The Message Passing Interface (MPI) is a library used to write high-performance distributed-memory parallel applications, and is typically deployed on a cluster. MPI is a standard interface (defined by the MPI forum) for which many implementations are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ded50fdabf5b7bd714c523ed3b25df3283dbef5" translate="yes" xml:space="preserve">
          <source>The NumPy include directries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d17976d5ac379730a3119214a15da5f567df173" translate="yes" xml:space="preserve">
          <source>The NumPy version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c263480deab5b12602587a57fb6f026edc5059f" translate="yes" xml:space="preserve">
          <source>The OS build ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8cb4f9c0a58cbbc281e2beaf0526a74200dbc03" translate="yes" xml:space="preserve">
          <source>The OS sub-type e.g. on Windows &lt;code&gt;Professional&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a35e5e119e848dfcab5cddfa7884079b9a1f29d" translate="yes" xml:space="preserve">
          <source>The OS version CMake is running on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857bed4fee6d452f5af4ac8e0eeb8bd66177017e" translate="yes" xml:space="preserve">
          <source>The OpenSSL &lt;code&gt;crypto&lt;/code&gt; library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea15862862d4c1872a736b205de561e36c55e44" translate="yes" xml:space="preserve">
          <source>The OpenSSL &lt;code&gt;ssl&lt;/code&gt; library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1b08adb82d669febb6687187ac4f74a941a085" translate="yes" xml:space="preserve">
          <source>The OpenSSL SSL library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591c97a27b6489d6aa81c43282b70409d6291b33" translate="yes" xml:space="preserve">
          <source>The OpenSSL crypto library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aeb7095772e0407e2d04b5e2c20f1d4c519b24c" translate="yes" xml:space="preserve">
          <source>The OpenSSL include directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85faecb45dcef4cdc334ee265690264f61097d94" translate="yes" xml:space="preserve">
          <source>The Platform (eg, Windows, APPLE, Linux).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25f2d99bda4b384a66bf893b2d3a6d663904ee7" translate="yes" xml:space="preserve">
          <source>The Python 2 include directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c274c795ff03a03e0d01987909b24eb652884af3" translate="yes" xml:space="preserve">
          <source>The Python 2 libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89dd0dd0b8a737358c28e07d5af0bc1c2e79360" translate="yes" xml:space="preserve">
          <source>The Python 2 library directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6f5ababe52280651ae353ae8cd3b661965197c" translate="yes" xml:space="preserve">
          <source>The Python 2 runtime library directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520164a74796d97610f2cc257bdac157f65bfe80" translate="yes" xml:space="preserve">
          <source>The Python 3 include directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebf03bbbca6c7bd2a8ff2a1a97a45bd84ba1862" translate="yes" xml:space="preserve">
          <source>The Python 3 libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621bb58fd1d586c9fd083f126df4cafa00a1f3e0" translate="yes" xml:space="preserve">
          <source>The Python 3 library directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17d050a728a0a902fd2e2ab97866aab584b5f63" translate="yes" xml:space="preserve">
          <source>The Python 3 runtime library directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7e0f0f46bc89f8b0ba0687275b2db4968b998a" translate="yes" xml:space="preserve">
          <source>The Python include directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10ba58cd01e24d6941f2029fa750723f0e8f421" translate="yes" xml:space="preserve">
          <source>The Python libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868b0c82e5b1d74d436fe1dd18e89d8d43f5ee7b" translate="yes" xml:space="preserve">
          <source>The Python library directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b3947e8d53b28a46c842b4ad09186f3d3a4e38" translate="yes" xml:space="preserve">
          <source>The Python runtime library directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e00e126f2094afa03674bd8afd9fc7cd1ce6feb" translate="yes" xml:space="preserve">
          <source>The Python_ADDITIONAL_VERSIONS variable can be used to specify a list of version numbers that should be taken into account when searching for Python. You need to set this variable before calling find_package(PythonInterp).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfc0e02d98eab78087305fd918055aec4608a8c" translate="yes" xml:space="preserve">
          <source>The Python_ADDITIONAL_VERSIONS variable can be used to specify a list of version numbers that should be taken into account when searching for Python. You need to set this variable before calling find_package(PythonLibs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c271340774715ae0f19da0dca933c71373124718" translate="yes" xml:space="preserve">
          <source>The QAxContainer target (Windows only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884f20996f7794ee8682476635ac7107a6c54f56" translate="yes" xml:space="preserve">
          <source>The QAxServer target (Windows only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f75a3f6cae1c11f167678eb1fe192513bcd1827" translate="yes" xml:space="preserve">
          <source>The Qt 4 and 5 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets for the QtGui libraries specify that the qtmain.lib static library shipped with Qt will be linked by all dependent executables which have the &lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:WIN32_EXECUTABLE&quot;&gt;&lt;code&gt;WIN32_EXECUTABLE&lt;/code&gt;&lt;/a&gt; enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2240f53f1370db3929c0ecb0dee10c89d2fff70f" translate="yes" xml:space="preserve">
          <source>The Qt toolkit may contain both debug and release libraries. &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; will choose the appropriate version based on the build configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9169647844f256f984f333b89d5dfd6dc8962f" translate="yes" xml:space="preserve">
          <source>The Qt3Support target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31931791e27652347b5b374725d57c46ef6e7265" translate="yes" xml:space="preserve">
          <source>The QtAssistant target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530564c11eb98a7255eb0397b9163a3d46d51018" translate="yes" xml:space="preserve">
          <source>The QtAssistantClient target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8948e52d31782c1b370a75b1de4ecfdcf58664" translate="yes" xml:space="preserve">
          <source>The QtCore target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea00482e75ca181a1694ff888bf4034e1aac63d" translate="yes" xml:space="preserve">
          <source>The QtDBus target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209eaecacfc446ce8cd8f33eb6aad38c257c387b" translate="yes" xml:space="preserve">
          <source>The QtDeclarative target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9bd71da6cdd16ce56915057f7df66e118018b2" translate="yes" xml:space="preserve">
          <source>The QtDesigner target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a052b8aee53febe9f04cd17782d0143ac0de65" translate="yes" xml:space="preserve">
          <source>The QtDesignerComponents target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687095bd03db1f3fb4bfc8a0da740a15ac48589f" translate="yes" xml:space="preserve">
          <source>The QtGui target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c423522327b2285107a73042fd104b14d0abde8" translate="yes" xml:space="preserve">
          <source>The QtHelp target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0b52830f04d326abf44b60cea65d688235491a" translate="yes" xml:space="preserve">
          <source>The QtMotif target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be87f9e3dc14554af331967cc24429b079b9cbe" translate="yes" xml:space="preserve">
          <source>The QtMultimedia target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb09b4e8685123841b8a97b4fcc4a49bdd29f3b" translate="yes" xml:space="preserve">
          <source>The QtNetwork target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254cad18c47a2047aaa4b7773522a64800a7ec7c" translate="yes" xml:space="preserve">
          <source>The QtNsPLugin target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e8074e226280475f6112e40366174a148d177c" translate="yes" xml:space="preserve">
          <source>The QtOpenGL target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6069e4baa66016bc15f1224d8a662e4a7c6291b7" translate="yes" xml:space="preserve">
          <source>The QtScript target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269b1479bfd7a42720416422ab3504b5e06e916c" translate="yes" xml:space="preserve">
          <source>The QtScriptTools target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82a9a643a1b1fdc4f6d25cff70179e94e37802c" translate="yes" xml:space="preserve">
          <source>The QtSql target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d5c04bceac8ea15c8efdf42707ce4fe1482d0a" translate="yes" xml:space="preserve">
          <source>The QtSvg target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e0bc0ebbf5532763df4aafac5d14ee311d769e" translate="yes" xml:space="preserve">
          <source>The QtTest target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63d5ec2bbc5f54d7cb932949fa03c7ffe152463" translate="yes" xml:space="preserve">
          <source>The QtUiTools target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3167cf31eb4179d9d46b5d5896e18d2a13358030" translate="yes" xml:space="preserve">
          <source>The QtWebKit target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf377078b3336eb8b8ccda7cad637b1d07692c2" translate="yes" xml:space="preserve">
          <source>The QtXml target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3c3bd9cd98fd8a9a0e569b166cc3028cf4f780" translate="yes" xml:space="preserve">
          <source>The QtXmlPatterns target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac340259ad081f32bbeedfaae2f44a41a2453fc5" translate="yes" xml:space="preserve">
          <source>The System Package Registry is stored in a system-wide location. CMake currently provides no interface to add to the system package registry. Installers must be manually taught to register their packages if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da8dd991bf2a3dec341fed0d83528c90eec1bcc" translate="yes" xml:space="preserve">
          <source>The TIFF library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e648deb79f1df16c1cc8b031367cf30bbb3dc691" translate="yes" xml:space="preserve">
          <source>The User Package Registry is stored in a per-user location. The &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-1-command:export&quot;&gt;&lt;code&gt;export(PACKAGE)&lt;/code&gt;&lt;/a&gt; command may be used to register a project build tree in the user package registry. CMake currently provides no interface to add install trees to the user package registry. Installers must be manually taught to register their packages if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171cc3db680534cc5c22aedd7eb81767c14118e8" translate="yes" xml:space="preserve">
          <source>The Visual Studio generator defines the &lt;code&gt;clr&lt;/code&gt; parameter depending on the value of &lt;code&gt;COMMON_LANGUAGE_RUNTIME&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76789ca3f1f2e0289c7afd2055ee1b4ae9bafc9d" translate="yes" xml:space="preserve">
          <source>The Xalan-C++ &lt;code&gt;xalan-c&lt;/code&gt; library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd2662c3e0df8ed6cdc9adea2cac9489a950bf3" translate="yes" xml:space="preserve">
          <source>The Xerces-C++ &lt;code&gt;xerces-c&lt;/code&gt; library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea2110693b974942eb53358f5147113c7801f3a" translate="yes" xml:space="preserve">
          <source>The above &amp;ldquo;unquoted_legacy&amp;rdquo; production represents such arguments. We do not recommend using legacy unquoted arguments in new code. Instead use a &lt;a href=&quot;#quoted-argument&quot;&gt;Quoted Argument&lt;/a&gt; or a &lt;a href=&quot;#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt; to represent the content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2240a128da330bbad2348293554ca385212a40a" translate="yes" xml:space="preserve">
          <source>The above command not only populates the content, it also adds it to the main build (if possible) so that the main build can use the populated project&amp;rsquo;s targets, etc. In some cases, the main project may need to have more precise control over the population or may be required to explicitly define the population steps (e.g. if CMake versions earlier than 3.14 need to be supported). The typical pattern of such custom steps looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5540b0edb9239b7d50ccb9546a76f8d5fa67c2b" translate="yes" xml:space="preserve">
          <source>The above is such a common pattern that, where no custom steps are needed between the calls to &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-1-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-1-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt;, equivalent logic can be obtained by calling &lt;a href=&quot;#command:fetchcontent_makeavailable&quot; id=&quot;index-1-command:fetchcontent_makeavailable&quot;&gt;&lt;code&gt;FetchContent_MakeAvailable()&lt;/code&gt;&lt;/a&gt; instead (and should be preferred where it meets the needs of the project).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd81462a423d0b317ded059f1919fbe83bcd3196" translate="yes" xml:space="preserve">
          <source>The above pattern allows other parts of the overall project hierarchy to re-use the same content and ensure that it is only populated once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde12d6aa67a541a30305365f13c1e091f0670e6" translate="yes" xml:space="preserve">
          <source>The absolute path generated from the corresponding &lt;code&gt;CMAKE_INSTALL_&amp;lt;dir&amp;gt;&lt;/code&gt; value. If the value is not already an absolute path, an absolute path is constructed typically by prepending the value of the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; variable. However, there are some &lt;a href=&quot;#special-cases&quot;&gt;special cases&lt;/a&gt; as documented below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb5b247dea0d36df3ea9fea81d7dd162b83ad24" translate="yes" xml:space="preserve">
          <source>The absolute path prefix to the &lt;code&gt;binutils&lt;/code&gt; in the standalone toolchain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e45b50e32ed17d478926356dbf7b3a3505b7ac" translate="yes" xml:space="preserve">
          <source>The absolute path prefix to the binutils in the NDK toolchain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3788421c7ea60194ff0b67a68304eebb16c4a2" translate="yes" xml:space="preserve">
          <source>The allowed values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c02a5206104c236bc90a4f37b8a910801dac64b" translate="yes" xml:space="preserve">
          <source>The approach follows that taken for the autoconf macro file, &lt;code&gt;acx_lapack.m4&lt;/code&gt; (distributed at &lt;a href=&quot;http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html&quot;&gt;http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629bfd4051da2fa1a32d9993713c3423b906b41a" translate="yes" xml:space="preserve">
          <source>The arguments are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6587826fbec09fd721bbad3a5d1cfbac68bef72f" translate="yes" xml:space="preserve">
          <source>The arguments have the following meaning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd31442d81b945b2c89344efd2ade561b1c562a" translate="yes" xml:space="preserve">
          <source>The base name corresponds to the target PDB file name (see &lt;code&gt;$&amp;lt;TARGET_PDB_FILE_NAME:tgt&amp;gt;&lt;/code&gt;) without prefix and suffix. For example, if target file name is &lt;code&gt;base.pdb&lt;/code&gt;, the base name is &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e4559cf56fc80c30104d79a441c438447d8c16" translate="yes" xml:space="preserve">
          <source>The base name corresponds to the target file name (see &lt;code&gt;$&amp;lt;TARGET_FILE_NAME:tgt&amp;gt;&lt;/code&gt;) without prefix and suffix. For example, if target file name is &lt;code&gt;libbase.so&lt;/code&gt;, the base name is &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b70756bf566982d976d9d6ba026479ae9a78b0d" translate="yes" xml:space="preserve">
          <source>The base name corresponds to the target linker file name (see &lt;code&gt;$&amp;lt;TARGET_LINKER_FILE_NAME:tgt&amp;gt;&lt;/code&gt;) without prefix and suffix. For example, if target file name is &lt;code&gt;libbase.a&lt;/code&gt;, the base name is &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7e574a92db0658f60e75cf344ad399d6d53cc0" translate="yes" xml:space="preserve">
          <source>The behavior is to check &lt;code&gt;CMAKE_BACKWARDS_COMPATIBILITY&lt;/code&gt; and present it to the user. The &lt;code&gt;NEW&lt;/code&gt; behavior is to ignore CMAKE_BACKWARDS_COMPATIBILITY completely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17702f794d5306d5ceaf08b456c536585eab5ed" translate="yes" xml:space="preserve">
          <source>The behavior of this command is the same as &lt;a href=&quot;#command:pkg_check_modules&quot; id=&quot;index-1-command:pkg_check_modules&quot;&gt;&lt;code&gt;pkg_check_modules()&lt;/code&gt;&lt;/a&gt;, except that rather than checking for all the specified modules, it searches for just the first successful match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52517ff9d3e3ef5658e226bad6a5da37481d95c" translate="yes" xml:space="preserve">
          <source>The boolean value of this property is &lt;code&gt;True&lt;/code&gt; for targets created with the &lt;code&gt;IMPORTED&lt;/code&gt; option to &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;. It is &lt;code&gt;False&lt;/code&gt; for targets built within the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7583c75b11d3859ac5c66491ea7d0b6a7181dce" translate="yes" xml:space="preserve">
          <source>The boolean value of this property is True for targets created with the &lt;code&gt;IMPORTED&lt;/code&gt;&lt;code&gt;GLOBAL&lt;/code&gt; options to &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;. It is always False for targets built within the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bdb8af486b07fcd9694ded1df6d2e944ac342f" translate="yes" xml:space="preserve">
          <source>The build configuration (eg, Debug, Release, Coverage).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375236c4a5827ae3e52e15ee848174f3f98dd3e3" translate="yes" xml:space="preserve">
          <source>The buildsystem targets created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-3-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-2-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; commands create rules to create binary outputs. The exact output location of the binaries can only be determined at generate-time because it can depend on the build-configuration and the link-language of linked dependencies etc. &lt;code&gt;TARGET_FILE&lt;/code&gt;, &lt;code&gt;TARGET_LINKER_FILE&lt;/code&gt; and related expressions can be used to access the name and location of generated binaries. These expressions do not work for &lt;code&gt;OBJECT&lt;/code&gt; libraries however, as there is no single file generated by such libraries which is relevant to the expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b474d07ddb1d2773594d2652d1c45bc229dc8977" translate="yes" xml:space="preserve">
          <source>The builtin graphviz support of CMake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71327c3fa10b4328fc5fb6abfa6393125a0789d" translate="yes" xml:space="preserve">
          <source>The call to &lt;a href=&quot;../command/return#command:return&quot; id=&quot;index-1-command:return&quot;&gt;&lt;code&gt;return()&lt;/code&gt;&lt;/a&gt; makes this macro unsuitable to call from &lt;a href=&quot;../manual/cmake-developer.7#find-modules&quot;&gt;Find Modules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfe85589b1c9ab8c678baa74a858e4977169942" translate="yes" xml:space="preserve">
          <source>The case for a global symbol with an underscore, either &lt;code&gt;UPPER&lt;/code&gt; or &lt;code&gt;LOWER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f1a4856af4f913441176939ee6a7b1370c2d76" translate="yes" xml:space="preserve">
          <source>The case for a global symbol without an underscore, either &lt;code&gt;UPPER&lt;/code&gt; or &lt;code&gt;LOWER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5765888348e288000ebf16af7039052a7d0e3e08" translate="yes" xml:space="preserve">
          <source>The case for a module symbol with an underscore, either &lt;code&gt;UPPER&lt;/code&gt; or &lt;code&gt;LOWER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400ed6502151ea040f4e6f1e4a5036ea3a7485bd" translate="yes" xml:space="preserve">
          <source>The case for a module symbol without an underscore, either &lt;code&gt;UPPER&lt;/code&gt; or &lt;code&gt;LOWER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba522c288be892b627f9565120aa74fcfba7734" translate="yes" xml:space="preserve">
          <source>The check is only performed once, with the result cached in the variable named by &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt;. Every subsequent CMake run will re-use this cached value rather than performing the check again, even if the &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; changes. In order to force the check to be re-evaluated, the variable named by &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt; must be manually removed from the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16de8b33db3f845ca927858f50166796a80ce03c" translate="yes" xml:space="preserve">
          <source>The cmake server may sent signals with the following names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadf6a16d1f695281c424c273a862161064229e3" translate="yes" xml:space="preserve">
          <source>The cmake version suffix string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44565daf2fbbce319a22d8de63a56724dd0c138" translate="yes" xml:space="preserve">
          <source>The cmake_add_component command describes an installation component, which the user can opt to install or remove as part of the graphical installation process. compname is the name of the component, as provided to the COMPONENT argument of one or more CMake INSTALL commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e7ac32fdd25587ff25613c66203e03483f1d56" translate="yes" xml:space="preserve">
          <source>The combined &lt;code&gt;coberturamerge.ser&lt;/code&gt; file is then used to generate the XML report using the &lt;code&gt;cobertura-report&lt;/code&gt; program. The call to the cobertura-report program requires some named arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c011ea0fbb4ce5de358393c8893a5f253b013a1" translate="yes" xml:space="preserve">
          <source>The command &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; operates without an explicit mode when the reduced signature is used without the &lt;code&gt;MODULE&lt;/code&gt; option. In this case, by default, CMake first tries Module mode by searching for a &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; module. If it fails, CMake then searches for the package using Config mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e67666e6320da121546878de2adba2c1db2f1e6" translate="yes" xml:space="preserve">
          <source>The command &lt;a href=&quot;target_compile_options#command:target_compile_options&quot; id=&quot;index-0-command:target_compile_options&quot;&gt;&lt;code&gt;target_compile_options()&lt;/code&gt;&lt;/a&gt; adds target-specific options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f1e52f2ecf491a63ffb6847e03946df6149614" translate="yes" xml:space="preserve">
          <source>The command and arguments are optional and if not specified an empty target will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a044b6acf59b83d6bda50ada31802c6d18f0356" translate="yes" xml:space="preserve">
          <source>The command being run will be echo&amp;rsquo;ed to &lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt; with &lt;code&gt;&amp;lt;where&amp;gt;&lt;/code&gt; being set to one of &lt;code&gt;STDERR&lt;/code&gt;, &lt;code&gt;STDOUT&lt;/code&gt; or &lt;code&gt;NONE&lt;/code&gt;. See the &lt;a href=&quot;../variable/cmake_execute_process_command_echo#variable:CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&quot; id=&quot;index-0-variable:CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&quot;&gt;&lt;code&gt;CMAKE_EXECUTE_PROCESS_COMMAND_ECHO&lt;/code&gt;&lt;/a&gt; variable for a way to control the default behavior when this option is not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f684c20e57db9848582a4c3cc3a0affd8ceb33a4" translate="yes" xml:space="preserve">
          <source>The command has two modes by which it searches for packages: &amp;ldquo;Module&amp;rdquo; mode and &amp;ldquo;Config&amp;rdquo; mode. The above signature selects Module mode. If no module is found the command falls back to Config mode, described below. This fall back is disabled if the &lt;code&gt;MODULE&lt;/code&gt; option is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19e0be928415f6eed8279cc93859b810cdb21d7" translate="yes" xml:space="preserve">
          <source>The command line to be executed by this custom step (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-9-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). This option can be repeated multiple times to specify multiple commands to be executed in order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89d0b7eb5c72c00c1f84e2ecab193c7fd730a50" translate="yes" xml:space="preserve">
          <source>The command line, comment, working directory and byproducts of every standard and custom step are processed to replace the tokens &lt;code&gt;&amp;lt;SOURCE_DIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;SOURCE_SUBDIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;BINARY_DIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;INSTALL_DIR&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;TMP_DIR&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;DOWNLOAD_DIR&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;DOWNLOADED_FILE&amp;gt;&lt;/code&gt; with their corresponding property values defined in the original call to &lt;a href=&quot;#command:externalproject_add&quot; id=&quot;index-2-command:externalproject_add&quot;&gt;&lt;code&gt;ExternalProject_Add()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106ba29012a42c83bbce04a2a925e18d413efed7" translate="yes" xml:space="preserve">
          <source>The command to run as the test step with the &lt;code&gt;--build-and-test&lt;/code&gt; option. All arguments following this keyword will be assumed to be part of the test command line, so it must be the last option given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca2739db5c0f27f5c697364e71107c1e9de68b1" translate="yes" xml:space="preserve">
          <source>The command will be given direct access to the terminal if possible. With the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-2-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt; generator, this places the command in the &lt;code&gt;console&lt;/code&gt;&lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-2-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;pool&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17038206e0e462cfb36a5866860938c1d3414f3" translate="yes" xml:space="preserve">
          <source>The command will be used to run &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; generated executables, which avoids manual population of the &lt;code&gt;TryRunResults.cmake&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d32dc7628de59a311c57fd3bcacb4eef43479c9" translate="yes" xml:space="preserve">
          <source>The command-line executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8fea870371cb5a59369079bc90a4bbdf19545a" translate="yes" xml:space="preserve">
          <source>The commands &lt;a href=&quot;break#command:break&quot; id=&quot;index-0-command:break&quot;&gt;&lt;code&gt;break()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;continue#command:continue&quot; id=&quot;index-0-command:continue&quot;&gt;&lt;code&gt;continue()&lt;/code&gt;&lt;/a&gt; provide means to escape from the normal control flow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b18422b9a23fc09d9dda026321511a15f4979bc" translate="yes" xml:space="preserve">
          <source>The compile language of source files when evaluating compile options. See &lt;a href=&quot;#boolean-compile-language-generator-expression&quot;&gt;the related boolean expression&lt;/a&gt;&lt;code&gt;$&amp;lt;COMPILE_LANGUAGE:language&amp;gt;&lt;/code&gt; for notes about the portability of this generator expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1e4df0fe20d819a076737bab898f4b6c8410e0" translate="yes" xml:space="preserve">
          <source>The compiler flag can only be used with the imported target. Use of both the imported target as well as this switch is highly recommended for new code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b2375139b5cb1ebd70b280b4ce317f58ae3a99" translate="yes" xml:space="preserve">
          <source>The compiler-generated program database files are specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag and are not the same as linker-generated program database files specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag. Use the &lt;a href=&quot;pdb_name#prop_tgt:PDB_NAME&quot; id=&quot;index-1-prop_tgt:PDB_NAME&quot;&gt;&lt;code&gt;PDB_NAME&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99113a252108f7d737d3b7340ebe198b3c3f6b9" translate="yes" xml:space="preserve">
          <source>The compiler-generated program database files are specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag and are not the same as linker-generated program database files specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag. Use the &lt;a href=&quot;pdb_output_directory#prop_tgt:PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-1-prop_tgt:PDB_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;PDB_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec571dc7a527a79653c5d2bcd5f14a671c291df" translate="yes" xml:space="preserve">
          <source>The compiler-generated program database files are specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag and are not the same as linker-generated program database files specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag. Use the &lt;code&gt;PDB_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to specify the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489bf4a32a616709760cfb71b4c7db10c5872bc2" translate="yes" xml:space="preserve">
          <source>The compiler-generated program database files are specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag and are not the same as linker-generated program database files specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag. Use the &lt;code&gt;PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to specify the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974fa72f1937fb36d8dd51c18298747a76aeb217" translate="yes" xml:space="preserve">
          <source>The complete Config mode command signature is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ebfbbcbb63a4576a087f00f4e95b9c9a98c12c" translate="yes" xml:space="preserve">
          <source>The concept of a fixture is different to that of a resource specified by &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-0-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt;, but they may be used together. A fixture defines a set of tests which share setup and cleanup requirements, whereas a resource lock has the effect of ensuring a particular set of tests do not run in parallel. Some situations may need both, such as setting up a database, serialising test access to that database and deleting the database again at the end. For such cases, tests would populate both &lt;code&gt;FIXTURES_REQUIRED&lt;/code&gt; and &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-1-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt; to combine the two behaviours. Names used for &lt;a href=&quot;resource_lock#prop_test:RESOURCE_LOCK&quot; id=&quot;index-2-prop_test:RESOURCE_LOCK&quot;&gt;&lt;code&gt;RESOURCE_LOCK&lt;/code&gt;&lt;/a&gt; have no relationship with names of fixtures, so note that a resource lock does not imply a fixture and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ca85a34c431bb395f814244cfe7696751f12c2" translate="yes" xml:space="preserve">
          <source>The conditions inside the parenthesis are evaluated first and then the remaining condition is evaluated as in the previous examples. Where there are nested parenthesis the innermost are evaluated as part of evaluating the condition that contains them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd9da076442032efff634d1221e290ae606bd20" translate="yes" xml:space="preserve">
          <source>The configure and test steps are optional. The arguments to this command line are the source and binary directories. The &lt;code&gt;--build-generator&lt;/code&gt; option &lt;em&gt;must&lt;/em&gt; be provided to use &lt;code&gt;--build-and-test&lt;/code&gt;. If &lt;code&gt;--test-command&lt;/code&gt; is specified then that will be run after the build is complete. Other options that affect this mode include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee116751300e5f72ebdc8e1eaf0b7d36ed6774e" translate="yes" xml:space="preserve">
          <source>The configure step is run after the download and update steps. By default, the external project is assumed to be a CMake project, but this can be overridden if required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7781442d9f02a390873828cb9a421626d0a5fb3" translate="yes" xml:space="preserve">
          <source>The content &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; can be any string without spaces, but good practice would be to use only letters, numbers and underscores. The name will be treated case-insensitively and it should be obvious for the content it represents, often being the name of the child project or the value given to its top level &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command (if it is a CMake project). For well-known public projects, the name should generally be the official name of the project. Choosing an unusual name makes it unlikely that other projects needing that same content will use the same name, leading to the content being populated multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1636bf8ae4772b3fbbbae5db019e2e6b49e7078" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-2-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-2-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties are used appropriately when compiling the source files of a binary target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e85f6faebdd3d135fa5bdc48c7b2f5f1169d4e6" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-1-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/interface_compile_options#prop_tgt:INTERFACE_COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:INTERFACE_COMPILE_OPTIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; target properties are &lt;em&gt;Usage Requirements&lt;/em&gt; &amp;ndash; they specify content which consumers must use to correctly compile and link with the target they appear on. For any binary target, the contents of each &lt;code&gt;INTERFACE_&lt;/code&gt; property on each target specified in a &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command is consumed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14ab16c03e3d454c0ab39aeeaea9d0c5ed590a7" translate="yes" xml:space="preserve">
          <source>The contents of the &lt;a href=&quot;interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property of imported targets are treated as &lt;code&gt;SYSTEM&lt;/code&gt; includes by default. If this property is enabled on a target, compilation of sources in that target will not treat the contents of the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; of consumed imported targets as system includes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2440a924458aa6c3c714b651cc84bce3eaed19c" translate="yes" xml:space="preserve">
          <source>The contents of the generated &lt;code&gt;Doxyfile&lt;/code&gt; can be customized by setting CMake variables before calling &lt;code&gt;doxygen_add_docs()&lt;/code&gt;. Any variable with a name of the form &lt;code&gt;DOXYGEN_&amp;lt;tag&amp;gt;&lt;/code&gt; will have its value substituted for the corresponding &lt;code&gt;&amp;lt;tag&amp;gt;&lt;/code&gt; configuration option in the &lt;code&gt;Doxyfile&lt;/code&gt;. See the &lt;a href=&quot;http://www.doxygen.org/manual/config.html&quot;&gt;Doxygen documentation&lt;/a&gt; for the full list of supported configuration options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4101743d99295c4af0757b17951225a87e2e4a" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;COMPILE_DEFINITIONS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property may be set to specify per-configuration definitions. Generator expressions should be preferred instead of setting the alternative property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810543d7411dc5041bcec865d1562e185945c53f" translate="yes" xml:space="preserve">
          <source>The cpack_add_component_group describes a group of installation components, which will be placed together within the listing of options. Typically, component groups allow the user to select/deselect all of the components within a single group via a single group-level option. Use component groups to reduce the complexity of installers with many options. groupname is an arbitrary name used to identify the group in the GROUP argument of the cpack_add_component command, which is used to place a component in a group. The name of the group must not conflict with the name of any component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59d3ef1e7d7cf5895b7b8110db3a50f08e59523" translate="yes" xml:space="preserve">
          <source>The cpack_add_install_type command identifies a set of preselected components that represents a common use case for an application. For example, a &amp;ldquo;Developer&amp;rdquo; install type might include an application along with its header and library files, while an &amp;ldquo;End user&amp;rdquo; install type might just include the application&amp;rsquo;s executable. Each component identifies itself with one or more install types via the INSTALL_TYPES argument to cpack_add_component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b693fddfa731eab3034ab3102c99e5a73cf43a4" translate="yes" xml:space="preserve">
          <source>The cpack_configure_downloads command configures installation-time downloads of selected components. For each downloadable component, CPack will create an archive containing the contents of that component, which should be uploaded to the given site. When the user selects that component for installation, the installer will download and extract the component in place. This feature is useful for creating small installers that only download the requested components, saving bandwidth. Additionally, the installers are small enough that they will be installed as part of the normal installation process, and the &amp;ldquo;Change&amp;rdquo; button in Windows Add/Remove Programs control panel will allow one to add or remove parts of the application after the original installation. On Windows, the downloaded-components functionality requires the ZipDLL plug-in for NSIS, available at:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba074c06c7acb426dde27055fc3edf4712282341" translate="yes" xml:space="preserve">
          <source>The cproject file defines the CDT specific information. Some third party IDE&amp;rsquo;s are based on Eclipse with the addition of other information specific to that IDE. Through this property, it is possible to add this additional contents to the generated project. It is expected to contain valid XML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e947d98facd5ad810ae184587e6b6803dee9cdba" translate="yes" xml:space="preserve">
          <source>The current settings of &lt;a href=&quot;../policy/cmp0065#policy:CMP0065&quot; id=&quot;index-0-policy:CMP0065&quot;&gt;&lt;code&gt;CMP0065&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../policy/cmp0083#policy:CMP0083&quot; id=&quot;index-1-policy:CMP0083&quot;&gt;&lt;code&gt;CMP0083&lt;/code&gt;&lt;/a&gt; are propagated through to the generated test project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdaeaa2284a492e71ec20c90b4a15163b9b6a2fe" translate="yes" xml:space="preserve">
          <source>The current stack of listfiles being processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf57c2820a19152cf1abae55b0995334801c541" translate="yes" xml:space="preserve">
          <source>The current system&amp;rsquo;s CMake platform id. See also the &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8840fdfcf9ee833136503d8c3f0249a2dc770e5" translate="yes" xml:space="preserve">
          <source>The custom &lt;code&gt;&amp;lt;origin&amp;gt;_autogen&lt;/code&gt; target starts a number of threads of which each one parses a source file and on demand starts a &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; process. &lt;a href=&quot;#prop_tgt:AUTOGEN_PARALLEL&quot; id=&quot;index-0-prop_tgt:AUTOGEN_PARALLEL&quot;&gt;&lt;code&gt;AUTOGEN_PARALLEL&lt;/code&gt;&lt;/a&gt; controls how many parallel threads (and therefore &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes) are started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdb6f7e1cdc6ca6447719bc551213d32c61b949" translate="yes" xml:space="preserve">
          <source>The custom fetch script is expected to store fetched content in the file or set a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c4429ce3af208c96d8ef3d0d5454e1137bc4d1" translate="yes" xml:space="preserve">
          <source>The custom step could then be triggered from the main build like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a77f522268d3182deff3287a887a8bd3aba4e2" translate="yes" xml:space="preserve">
          <source>The debug object supports the &amp;ldquo;showStats&amp;rdquo; key, which takes a boolean and makes the server mode return a &amp;ldquo;zzzDebug&amp;rdquo; object with stats as part of its response. &amp;ldquo;dumpToFile&amp;rdquo; takes a string value and will cause the cmake server to copy the response into the given filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90db2f41dc4566713ae0651e4a357bd3dc39f14d" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;OUTPUT_DIR&lt;/code&gt; can also be changed by setting the variable &lt;code&gt;CMAKE_JAVA_TARGET_OUTPUT_DIR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b9b4a80bb223fcf161dde2aca323870fa0c91e" translate="yes" xml:space="preserve">
          <source>The default behavior or when the property is &lt;code&gt;OFF&lt;/code&gt; is to generate a project file for the target and then a sub-project file for each source group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c15b916d77afa23cdde286369965662899b756c" translate="yes" xml:space="preserve">
          <source>The default build configuration for &lt;a href=&quot;../manual/cmake.1#build-tool-mode&quot;&gt;Build a Project&lt;/a&gt; and &lt;code&gt;ctest&lt;/code&gt; build handler when there is no explicit configuration given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032049d73737f9fa4a2f26df91d70ec49e05c964" translate="yes" xml:space="preserve">
          <source>The default configuration of the Cray Programming Environment is to only support static libraries. This can be overridden and shared libraries enabled by setting the &lt;code&gt;CRAYPE_LINK_TYPE&lt;/code&gt; environment variable to &lt;code&gt;dynamic&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728a99b3ca8300b8e4555abf1a670f88e573f552" translate="yes" xml:space="preserve">
          <source>The default configure command runs CMake with options based on the main project. For non-CMake external projects, the &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; option must be used to override this behavior (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-2-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). For projects that require no configure step, specify this option with an empty string as the command to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9457cfae3ee78768fb35bc50aba0f74c19e2e7ff" translate="yes" xml:space="preserve">
          <source>The default for either approach produces identical compilation flags, but if a project modifies &lt;code&gt;CMAKE_SHARED_LIBRARY_&amp;lt;Lang&amp;gt;_FLAGS&lt;/code&gt; from its original value this policy determines which approach to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d135b421fb17257f3960e1bbfa5328aa85c760" translate="yes" xml:space="preserve">
          <source>The default order for sorting packages found using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. It can assume one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af42dbb9e1845011fdbd98e33f9f184d0b6031f7" translate="yes" xml:space="preserve">
          <source>The default package types are , &lt;code&gt;RUNTIME&lt;/code&gt;, &lt;code&gt;OPTIONAL&lt;/code&gt;, &lt;code&gt;RECOMMENDED&lt;/code&gt; and &lt;code&gt;REQUIRED&lt;/code&gt;, and their importance is &lt;code&gt;RUNTIME &amp;lt; OPTIONAL &amp;lt; RECOMMENDED &amp;lt; REQUIRED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b4eb721215fcb126af174662f311fc9932f1bb" translate="yes" xml:space="preserve">
          <source>The default search order is designed to be most-specific to least-specific for common use cases. Projects may override the order by simply calling the command multiple times and using the &lt;code&gt;NO_*&lt;/code&gt; options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efde9d994b3f66593ba8e29cb4cf0c8c19b90106" translate="yes" xml:space="preserve">
          <source>The default timeout for each test if not specified by the &lt;a href=&quot;../prop_test/timeout#prop_test:TIMEOUT&quot; id=&quot;index-1-prop_test:TIMEOUT&quot;&gt;&lt;code&gt;TIMEOUT&lt;/code&gt;&lt;/a&gt; test property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9241f39e6445568ec875a4069f567110c7d110" translate="yes" xml:space="preserve">
          <source>The default value for this global property is &lt;code&gt;OPTIONAL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cfd446059291cadca70b7e357b78f4ae8bf0a3" translate="yes" xml:space="preserve">
          <source>The default value for this global property is &lt;code&gt;REQUIRED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a093b81019ceef6f4814a47306ba71cf04d0f71" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;Q_OBJECT;Q_GADGET;Q_NAMESPACE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e34c800a92f6ebfad8c92ab96e8e639ec24360" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;bundle&lt;/code&gt;, &lt;code&gt;framework&lt;/code&gt;, or &lt;code&gt;app&lt;/code&gt; for the respective target types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49810283fa6eabb51cd93f454c4dd41f685397d6" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;gnustl_static&lt;/code&gt; on NDK versions that provide it and otherwise &lt;code&gt;c++_static&lt;/code&gt;. Note that this default differs from the native NDK build system because CMake may be used to build projects for Android that are not natively implemented for it and use the C++ standard library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5ce237429b230b595ab49a2c73077808ac5873" translate="yes" xml:space="preserve">
          <source>The default value of this variable is computed by CPack and contains all components defined by the project. The user may set it to only include the specified components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701a9695872fbd9ead8984d6b0751bb68adb159b" translate="yes" xml:space="preserve">
          <source>The dependencies (list of components) on which this component depends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab8c851f8fce2e89071a3cf43f8a6e6f95b7564" translate="yes" xml:space="preserve">
          <source>The description of a component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80b38fd245eb8f0b5b92facd960213fb707f6ab" translate="yes" xml:space="preserve">
          <source>The description of the top level project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc41de492aa21d22eae8ce8b445329e446b149af" translate="yes" xml:space="preserve">
          <source>The different dependency types &lt;code&gt;PUBLIC&lt;/code&gt;, &lt;code&gt;PRIVATE&lt;/code&gt; and &lt;code&gt;INTERFACE&lt;/code&gt; are represented as solid, dashed and dotted edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22ebf81277ca4e20b64413c426c63261581db85" translate="yes" xml:space="preserve">
          <source>The directories are added to the &lt;a href=&quot;../prop_dir/link_directories#prop_dir:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_dir:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; directory property for the current &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, converting relative paths to absolute as needed. The command will apply only to targets created after it is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c1d2873dbc82fecfa40e25d55608f8087d370c" translate="yes" xml:space="preserve">
          <source>The directories containing the iconv headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9d396df9107dfb15908560c9ad531931c217c5" translate="yes" xml:space="preserve">
          <source>The directory &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; is relative to the installation prefix, which is stored in the variable &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917980abd5e99862ffe6bef50d073fabe2825e8d" translate="yes" xml:space="preserve">
          <source>The directory containing &lt;code&gt;gdal.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcefa9a19e036fcc7b26d7ce9be209e2317ea614" translate="yes" xml:space="preserve">
          <source>The directory containing the XCTest Framework headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4068c962246271364fca545817bc7af88812025" translate="yes" xml:space="preserve">
          <source>The directory containing the iconv headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aad1e5856f81376865210f72ce7589b6a7b49a9" translate="yes" xml:space="preserve">
          <source>The directory from which the test executable will be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e492d39b064873c58dc65ab3c5bb06e04a80563a" translate="yes" xml:space="preserve">
          <source>The directory holding the &lt;code&gt;backtrace(3)&lt;/code&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1a23d10f2ab60366988fa3ef0aafa96a690537" translate="yes" xml:space="preserve">
          <source>The directory in which CPack is doing its packaging. If it is not set then this will default (internally) to the build dir. This variable may be defined in a CPack config file or from the &lt;a href=&quot;../manual/cpack.1#manual:cpack(1)&quot; id=&quot;index-3-manual:cpack(1)&quot;&gt;&lt;code&gt;cpack&lt;/code&gt;&lt;/a&gt; command line option &lt;code&gt;-B&lt;/code&gt;. If set, the command line option overrides the value found in the config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f00e991d51d8914c7b0802e611127a81cb6f027" translate="yes" xml:space="preserve">
          <source>The directory is created on demand and automatically added to the &lt;a href=&quot;additional_clean_files#prop_tgt:ADDITIONAL_CLEAN_FILES&quot; id=&quot;index-0-prop_tgt:ADDITIONAL_CLEAN_FILES&quot;&gt;&lt;code&gt;ADDITIONAL_CLEAN_FILES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a2b8695b9168b3b0c2de986216d07807ea3d5c" translate="yes" xml:space="preserve">
          <source>The directory property is used to initialize the &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property when a target is created. That target property is used by the generators to set the library search directories for the linker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dca176c4023a2f1884f8728426ee259561f051a" translate="yes" xml:space="preserve">
          <source>The directory where the class files can be found. For example to use them with &lt;code&gt;javah&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d489c4fb9f8de008d49b0f555d90d54402a37296" translate="yes" xml:space="preserve">
          <source>The directory with the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3416dab1ae5b5452859edd263b091fd191552de0" translate="yes" xml:space="preserve">
          <source>The documentation file is not processed and should be in the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26125fe1fc422c3b2c96e73d9de946ef0615e539" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Archive generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/archive.html#cpack_gen:CPack%20Archive%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Archive Generator&quot;&gt;&lt;code&gt;CPack Archive Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561e9feb59c259285b4c882f898f25931c694e88" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Bundle generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/bundle.html#cpack_gen:CPack%20Bundle%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Bundle Generator&quot;&gt;&lt;code&gt;CPack Bundle Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4cac2c3daccfbef1511050aa6369461324c9f3c" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack Cygwin generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/cygwin.html#cpack_gen:CPack%20Cygwin%20Generator&quot; id=&quot;index-0-cpack_gen:CPack Cygwin Generator&quot;&gt;&lt;code&gt;CPack Cygwin Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e524bb8601731b38778bd205d48423eb830bbdb3" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DEB generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/deb.html#cpack_gen:CPack%20DEB%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DEB Generator&quot;&gt;&lt;code&gt;CPack DEB Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faec3bda0ade575c81908efe5e7bed3589f72318" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack DragNDrop generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/dmg.html#cpack_gen:CPack%20DragNDrop%20Generator&quot; id=&quot;index-0-cpack_gen:CPack DragNDrop Generator&quot;&gt;&lt;code&gt;CPack DragNDrop Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a032fbc375d987088b0bdfb9a9f3469ed206ca1" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack FreeBSD generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/freebsd.html#cpack_gen:CPack%20FreeBSD%20Generator&quot; id=&quot;index-0-cpack_gen:CPack FreeBSD Generator&quot;&gt;&lt;code&gt;CPack FreeBSD Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b34048823d186128efc6cc3b5af1eb8f289d15b" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack IFW generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/ifw.html#cpack_gen:CPack%20IFW%20Generator&quot; id=&quot;index-0-cpack_gen:CPack IFW Generator&quot;&gt;&lt;code&gt;CPack IFW Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986566636e1ae033e6cdecb5d86bb56dee5a9aad" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NSIS generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/nsis.html#cpack_gen:CPack%20NSIS%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NSIS Generator&quot;&gt;&lt;code&gt;CPack NSIS Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b499d8296ac3034c848b039a2f8bd3b3205f9025" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack NuGet generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/nuget.html#cpack_gen:CPack%20NuGet%20Generator&quot; id=&quot;index-0-cpack_gen:CPack NuGet Generator&quot;&gt;&lt;code&gt;CPack NuGet Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59383a85f81e3a2c63bfe74645f5572190773437" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack PackageMaker generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/packagemaker.html#cpack_gen:CPack%20PackageMaker%20Generator&quot; id=&quot;index-0-cpack_gen:CPack PackageMaker Generator&quot;&gt;&lt;code&gt;CPack PackageMaker Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c702f4ec09a030005cde9204430416dfa1af6f33" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack RPM generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/rpm.html#cpack_gen:CPack%20RPM%20Generator&quot; id=&quot;index-0-cpack_gen:CPack RPM Generator&quot;&gt;&lt;code&gt;CPack RPM Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39dd93852509d0c4cfbf97ce16f29a578a84042d" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack WIX generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f102ca41acb2c64d823b5185fad17efc9d0f94" translate="yes" xml:space="preserve">
          <source>The documentation for the CPack productbuild generator has moved here: &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/productbuild.html#cpack_gen:CPack%20productbuild%20Generator&quot; id=&quot;index-0-cpack_gen:CPack productbuild Generator&quot;&gt;&lt;code&gt;CPack productbuild Generator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07c2990ce8a0d61a14a814a03a7ebd1e33aa75e" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;ICE_HOME&lt;/code&gt; may also be used; the Ice_HOME variable takes precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d434912dec1f581b5adfa63bac70869385903b" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;ICU_ROOT&lt;/code&gt; may also be used; the ICU_ROOT variable takes precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66b68a7573bee06149df050e6ede72ea8cdf0fb" translate="yes" xml:space="preserve">
          <source>The exact compile flags and language standard are deliberately not part of the user interface for this use-case. CMake will compute the appropriate compile flags to use by considering the features specified for each target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565f19f0423372ff3e34a53d8c4d9a4da9285f62" translate="yes" xml:space="preserve">
          <source>The exact parsing rules depend on the operating system. They are specified by the &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; argument which must be one of the following keywords:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fd747a002f5588632b26df6e05a059cb0976e8" translate="yes" xml:space="preserve">
          <source>The executable file (e.g. &lt;code&gt;.exe&lt;/code&gt;) of an executable target created by the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-3-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce833ca73d0adc97b00113c9bb1344808cf8469" translate="yes" xml:space="preserve">
          <source>The executable is run in the optionally specified directory. The executable can include arguments if it is double quoted, but it is better to use the optional &lt;code&gt;ARGS&lt;/code&gt; argument to specify arguments to the program. This is because cmake will then be able to escape spaces in the executable path. An optional argument &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; specifies a variable in which to store the output. To capture the return value of the execution, provide a &lt;code&gt;RETURN_VALUE&lt;/code&gt;. If &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; is specified, then no output will go to the stdout/stderr of the console running cmake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06128cea25f99cee949b9db1acbdbf56d396bb5" translate="yes" xml:space="preserve">
          <source>The existence of &lt;a href=&quot;../module/findqt#module:FindQt&quot; id=&quot;index-1-module:FindQt&quot;&gt;&lt;code&gt;FindQt&lt;/code&gt;&lt;/a&gt; means that for Qt upstream to provide package config files that can be found by &lt;code&gt;find_package(Qt)&lt;/code&gt;, the consuming project has to explicitly specify &lt;code&gt;find_package(Qt CONFIG)&lt;/code&gt;. Removing this module gives Qt a path forward for exporting its own config files which can easily be found by consuming projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de824a8c82ad42d2c1280e14f2edbeb9aaf6e8a" translate="yes" xml:space="preserve">
          <source>The external library providing backtrace, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66abe0c3869182d7d42a5560943ad9d968b53356" translate="yes" xml:space="preserve">
          <source>The external project&amp;rsquo;s own install step is invoked as part of the main project&amp;rsquo;s &lt;em&gt;build&lt;/em&gt;. It is done after the external project&amp;rsquo;s build step and may be before or after the external project&amp;rsquo;s test step (see the &lt;code&gt;TEST_BEFORE_INSTALL&lt;/code&gt; option below). The external project&amp;rsquo;s install rules are not part of the main project&amp;rsquo;s install rules, so if anything from the external project should be installed as part of the main build, these need to be specified in the main build as additional &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; commands. The default install step builds the &lt;code&gt;install&lt;/code&gt; target of the external project, but this can be overridden with a custom command using this option (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-6-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). Passing an empty string as the &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; makes the install step do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d79013701b2af46cc384214309f6f04feb69e5" translate="yes" xml:space="preserve">
          <source>The external toolchain for cross-compiling, if supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29334c937856e1acf5ad5dd3f7ff1bd761dcc263" translate="yes" xml:space="preserve">
          <source>The extra generator used to build the project. See &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;cmake-generators(7)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f71449aae8ecc35b9768f54f3391aeb545f0f3" translate="yes" xml:space="preserve">
          <source>The fatal error is emitted before the installation of the offending file takes place. Some CPack generators, like &lt;code&gt;NSIS&lt;/code&gt;, enforce this internally. This variable triggers the definition of &lt;a href=&quot;cmake_error_on_absolute_install_destination#variable:CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&quot; id=&quot;index-0-variable:CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&quot;&gt;&lt;code&gt;CMAKE_ERROR_ON_ABSOLUTE_INSTALL_DESTINATION&lt;/code&gt;&lt;/a&gt; when CPack runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527af01fccaf230d8c8c65ff8e4b497738c28589" translate="yes" xml:space="preserve">
          <source>The fatal error is emitted before the installation of the offending file takes place. This variable is used by CMake-generated &lt;code&gt;cmake_install.cmake&lt;/code&gt; scripts. If one sets this variable to &lt;code&gt;ON&lt;/code&gt; while running the script, it may get fatal error messages from the script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75fd211f9c9f73124ac9f362f5cb3df7f4f54aeb" translate="yes" xml:space="preserve">
          <source>The features known to this version of CMake are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae763a9b48bb1cd5c6443c5c73badf44c61185e" translate="yes" xml:space="preserve">
          <source>The features listed here may be used with the &lt;a href=&quot;../command/target_compile_features#command:target_compile_features&quot; id=&quot;index-0-command:target_compile_features&quot;&gt;&lt;code&gt;target_compile_features()&lt;/code&gt;&lt;/a&gt; command. See the &lt;a href=&quot;../manual/cmake-compile-features.7#manual:cmake-compile-features(7)&quot; id=&quot;index-0-manual:cmake-compile-features(7)&quot;&gt;&lt;code&gt;cmake-compile-features(7)&lt;/code&gt;&lt;/a&gt; manual for information on compile features and a list of supported compilers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821fccea7b3508458b393643ca5fcaeb0e2fdb93" translate="yes" xml:space="preserve">
          <source>The features listed in this global property may be known to be available to the C compiler. If the feature is available with the C compiler, it will be listed in the &lt;a href=&quot;../variable/cmake_c_compile_features#variable:CMAKE_C_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_C_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f2fa253a023446d07e984a34fdb2488d11ddc4" translate="yes" xml:space="preserve">
          <source>The features listed in this global property may be known to be available to the C++ compiler. If the feature is available with the C++ compiler, it will be listed in the &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a7ad53a740d4b7a65b12dcf680cdc9cebf9830" translate="yes" xml:space="preserve">
          <source>The file created by this command is specific to the build tree and should never be installed. See the &lt;a href=&quot;install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command to export targets from an installation tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddd6003fcdeafb6b43057e710d92ba57728d9b0" translate="yes" xml:space="preserve">
          <source>The file extension used to name a &lt;a href=&quot;bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt;&lt;code&gt;BUNDLE&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; target on the macOS and iOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4993cbb8a00d41faa56d40fce2929e47a32fdf9" translate="yes" xml:space="preserve">
          <source>The file name found in the first match group is searched for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5081c41045e4133663e490649981dd15ed49c209" translate="yes" xml:space="preserve">
          <source>The file named will be attached to the standard input of the first process, standard output of the last process, or standard error of all processes, respectively. If the same file is named for both output and error then it will be used for both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d79fa8813072c0b87b589ddfcb3a0cfff1ee705" translate="yes" xml:space="preserve">
          <source>The file-based API uses a &lt;code&gt;&amp;lt;build&amp;gt;/.cmake/api/&lt;/code&gt; directory at the top of a build tree. The API is versioned to support changes to the layout of files within the API directory. API file layout versioning is orthogonal to the versioning of &lt;a href=&quot;#object-kinds&quot;&gt;Object Kinds&lt;/a&gt; used in replies. This version of CMake supports only one API version, &lt;a href=&quot;#api-v1&quot;&gt;API v1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bbcd86cda99257a79ec483b6cda229f78fa69a" translate="yes" xml:space="preserve">
          <source>The files which should be installed. This is used by &lt;code&gt;install_jar()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1035d9a63f05364a648fc61458f726fbabaadb" translate="yes" xml:space="preserve">
          <source>The final &lt;code&gt;\&lt;/code&gt; on any line ending in an odd number of backslashes is treated as a line continuation and ignored along with the immediately following newline character. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8c8d234e4e62b21cb309a7a53e0b10b70da66c" translate="yes" xml:space="preserve">
          <source>The final set of compile or link options used for a target is constructed by accumulating options from the current target and the usage requirements of it dependencies. The set of options is de-duplicated to avoid repetition. While beneficial for individual options, the de-duplication step can break up option groups. For example, &lt;code&gt;-D A -D B&lt;/code&gt; becomes &lt;code&gt;-D A B&lt;/code&gt;. One may specify a group of options using shell-like quoting along with a &lt;code&gt;SHELL:&lt;/code&gt; prefix. The &lt;code&gt;SHELL:&lt;/code&gt; prefix is dropped and the rest of the option string is parsed using the &lt;a href=&quot;separate_arguments#command:separate_arguments&quot; id=&quot;index-0-command:separate_arguments&quot;&gt;&lt;code&gt;separate_arguments()&lt;/code&gt;&lt;/a&gt;&lt;code&gt;UNIX_COMMAND&lt;/code&gt; mode. For example, &lt;code&gt;&quot;SHELL:-D A&quot; &quot;SHELL:-D B&quot;&lt;/code&gt; becomes &lt;code&gt;-D A -D B&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14b124c683356bfd85eb5cf93a9fefd7f73657b" translate="yes" xml:space="preserve">
          <source>The final set of include directories listed in one variable for use by client code. This should not be a cache entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8592e29b381cf1a3977856a9ab4e5f28e6a1c6" translate="yes" xml:space="preserve">
          <source>The find module implementation may begin below the documentation block. Now the actual libraries and so on have to be found. The code here will obviously vary from module to module (dealing with that, after all, is the point of find modules), but there tends to be a common pattern for libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fe84daf7c67a9a0d33395778d2f3200eb97793" translate="yes" xml:space="preserve">
          <source>The first argument (&lt;code&gt;TEST_VARIABLE&lt;/code&gt;) is the name of the variable to be tested, if that variable is false nothing else is done. If &lt;code&gt;TEST_VARIABLE&lt;/code&gt; is true, then the next argument (&lt;code&gt;RESULT_VARIABLE&lt;/code&gt;) is a variable that is set to true if all the required variables are set. The rest of the arguments are variables that must be true or not set to &lt;code&gt;NOTFOUND&lt;/code&gt; to avoid an error. If any are not true, an error is reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb5eba87d5d3604bc82922ac7730f4af497abc1" translate="yes" xml:space="preserve">
          <source>The first argument determines the scope in which the property is set. It must be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57df7e69cbb25bed3a0fb3a3dd7147d14fc9d98" translate="yes" xml:space="preserve">
          <source>The first argument is the file name, the rest of the arguments are messages to write. If the argument &lt;code&gt;APPEND&lt;/code&gt; is specified, then the message will be appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437be15c3f07df6e99084228b2738011a1a63786" translate="yes" xml:space="preserve">
          <source>The first argument specifies the variable in which to store the result. The second argument determines the scope from which to get the property. It must be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55932d01770dd21962fa6b91f46a7a44a87de37" translate="yes" xml:space="preserve">
          <source>The first request that the client may send to the server is of type &amp;ldquo;handshake&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c04f980f20a6a0e448497eeb4a48feaf2197992" translate="yes" xml:space="preserve">
          <source>The first signature is for adding a custom command to produce an output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462d16c548a693bf8ebaef9d063f1c2590a80f5b" translate="yes" xml:space="preserve">
          <source>The first signature reads processes arguments passed in the &lt;code&gt;&amp;lt;args&amp;gt;...&lt;/code&gt;. This may be used in either a &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6ebc0311cb48b12659624e8cc7964609da9210" translate="yes" xml:space="preserve">
          <source>The flag to be used to add a library search path to a compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d879b88c0a74d2478e89e60362e1044a8b7f6c5a" translate="yes" xml:space="preserve">
          <source>The flag will be used before a library file path is given to the linker. This is needed only on very few platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e879feb0048be3230134b41971858823311192" translate="yes" xml:space="preserve">
          <source>The flag will be used to add a &lt;code&gt;.def&lt;/code&gt; file when creating a dll on Windows; this is only defined on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb81e80f1b480e8eacc274efc517c292004fde26" translate="yes" xml:space="preserve">
          <source>The flag will be used to specify a library directory to the compiler. On most compilers this is &lt;code&gt;-L&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac47f8473a635847737682145aafc18a4f64e62d" translate="yes" xml:space="preserve">
          <source>The flag will be used to specify a library to link to an executable. On most compilers this is &lt;code&gt;-l&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e5d253ec168df2a1d59a493891c587ae6bc31e" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets are also defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27dcabb615138b975704367a4d2fbc1e3da31132" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;cmake -E&lt;/code&gt; commands are available only on Windows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4733c04f7ff100352817453c2353db9d0e905a" translate="yes" xml:space="preserve">
          <source>The following CPack variables are specific to source packages, and will not affect binary packages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4548898349f3edeefd7d5a96d5dfca9cf167329a" translate="yes" xml:space="preserve">
          <source>The following are set after the configuration is done for both windows and unix style:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327d25567d388ab1f031b487dd318997317991c4" translate="yes" xml:space="preserve">
          <source>The following cache variable will be set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319b4c74978db6951bf33251c05778bd355efc77" translate="yes" xml:space="preserve">
          <source>The following cache variables are also available to set or use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a7e43e228cd8436b60833287dd1038d9e5518d" translate="yes" xml:space="preserve">
          <source>The following cache variables may also be set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac76b281ad06b9b40a44990ddac4b63adbeaee47" translate="yes" xml:space="preserve">
          <source>The following characters have special meaning in regular expressions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff366673b34a10827273c589c1c62268ac780e6a" translate="yes" xml:space="preserve">
          <source>The following environment variables are also respected for finding the OSG and it&amp;rsquo;s various components. &lt;a href=&quot;../variable/cmake_prefix_path#variable:CMAKE_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; can also be used for this (see &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; CMake documentation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7c6bcc427e8383ab274a42eaaab00aabeb3973" translate="yes" xml:space="preserve">
          <source>The following example shows how the &lt;code&gt;LISTS&lt;/code&gt; option is processed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7fd1c7bcd656380c5588ad3aa86ed07c5a7c8f" translate="yes" xml:space="preserve">
          <source>The following example shows how to download and build a hypothetical project called &lt;em&gt;FooBar&lt;/em&gt; from github:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1e69acb46c51cff9c75a3db4e11d049b73d2d1" translate="yes" xml:space="preserve">
          <source>The following features generate corresponding symbol defines and if they are available as &lt;code&gt;BARE_FEATURES&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af87b0c885535a5fdd9b6e360cc23313054eeaeb" translate="yes" xml:space="preserve">
          <source>The following functions are provided by this module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33822d2ea5ac830e8b12ddc2646800c04544db27" translate="yes" xml:space="preserve">
          <source>The following hash algorithms are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba646baa7466e79f29be4c2bd24d116085ac4f4" translate="yes" xml:space="preserve">
          <source>The following import target is created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9c1221808914118a7fb3f5d11863ffe58749ff" translate="yes" xml:space="preserve">
          <source>The following macros are provided for compatibility with previous CMake versions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a71647e556425e40edfbf08e018290c1129b943" translate="yes" xml:space="preserve">
          <source>The following names should not usually be used in CMakeLists.txt files, but are typically cache variables for users to edit and control the behaviour of find modules (like entering the path to a library manually)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626346361168a6be6f519db1fc622d19c97c67b3" translate="yes" xml:space="preserve">
          <source>The following resources are available to get help using CMake:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9c6074a1987864439ac94999d66ad6ca16042e" translate="yes" xml:space="preserve">
          <source>The following settings are defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79d633c8959dce75f4438afbe0c918f9ff0ba2b" translate="yes" xml:space="preserve">
          <source>The following settings should not be used in general.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8447973b80aa1708bf7500ec7c85eeab2cc3d1dd" translate="yes" xml:space="preserve">
          <source>The following shows a typical example of declaring content details:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e9f7ca084e8ce25a2ecf4e16080578cc0bef73" translate="yes" xml:space="preserve">
          <source>The following single value Doxygen options will be quoted automatically if they contain at least one space:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b135b37f8ef7289c9c0a82ebf5c2d0f1274dd4dd" translate="yes" xml:space="preserve">
          <source>The following string-valued generator expressions are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0c687f34292697391261a456dd61db2b0fffa4" translate="yes" xml:space="preserve">
          <source>The following syntax applies to the &lt;code&gt;condition&lt;/code&gt; argument of the &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;elseif&lt;/code&gt; and &lt;a href=&quot;while#command:while&quot; id=&quot;index-0-command:while&quot;&gt;&lt;code&gt;while()&lt;/code&gt;&lt;/a&gt; clauses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22c7024babde5966495649dabdbfd19e22728aa" translate="yes" xml:space="preserve">
          <source>The following table shows the target types with their associated variables and built-in defaults that apply when no destination is given:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b304c4198d8ab217d8a53fb4e305e550b603fb1e" translate="yes" xml:space="preserve">
          <source>The following target properties are output properties and can be used to get information about support files generated by &lt;code&gt;SWIG&lt;/code&gt; interface compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7948d70e1e8f940b3f93c0c2143cb58ce7a234" translate="yes" xml:space="preserve">
          <source>The following target properties may be set to specify content to be configured into the file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6af0f6c2884381de847cfa5cd228b6961243e3" translate="yes" xml:space="preserve">
          <source>The following target properties overwrite the default of the corresponding settings on the &amp;ldquo;Diagnostic&amp;rdquo; tab for each schema file. Each of those is initialized by the respective &lt;code&gt;CMAKE_&lt;/code&gt; variable at target creation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73b0a838c512e73906fb91ce122aea4314e771e" translate="yes" xml:space="preserve">
          <source>The following target properties will be applied on the &amp;ldquo;Info&amp;rdquo; and &amp;ldquo;Arguments&amp;rdquo; tab:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fc6a02c40e7b60505a045cf7bbc82f10cb63e8" translate="yes" xml:space="preserve">
          <source>The following user adjustable options are provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71b319cf663993159fcec0552cc51be597a483e" translate="yes" xml:space="preserve">
          <source>The following values of &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt; are special:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fa440d5b129df3a975d499ad8e4a6af97bb094" translate="yes" xml:space="preserve">
          <source>The following variable are provided for backward compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858c3fb8d045a3193d9882267ec509a8d5574431" translate="yes" xml:space="preserve">
          <source>The following variable are provided for backward compatibility:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1e1150295844d9b2e62f831121f5be52870ccd" translate="yes" xml:space="preserve">
          <source>The following variable can be set to guide the search for HDF5 libraries and includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dc1b23de57217623c181a845cc732be395bb7c" translate="yes" xml:space="preserve">
          <source>The following variables affect the behavior of the macros in the script (in alphabetical order). Note that any of these flags can be changed multiple times in the same directory before calling &lt;code&gt;CUDA_ADD_EXECUTABLE&lt;/code&gt;, &lt;code&gt;CUDA_ADD_LIBRARY&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE_PTX&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE_FATBIN&lt;/code&gt;, &lt;code&gt;CUDA_COMPILE_CUBIN&lt;/code&gt; or &lt;code&gt;CUDA_WRAP_SRCS&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bce7f07ef0e7a6c6e109e21ecd85b1c0ebee705" translate="yes" xml:space="preserve">
          <source>The following variables are defined by this module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5f3bf4caca26f3eb7cc7ef68e1ec6feaf1ceba" translate="yes" xml:space="preserve">
          <source>The following variables are for advanced uses of CPack:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12afa14b0c5de3d8bb87df12a8d1ce37575c74b4" translate="yes" xml:space="preserve">
          <source>The following variables are provided to indicate iconv support:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba80994bbac8b987d781180531475f41f0c54a0" translate="yes" xml:space="preserve">
          <source>The following variables are set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169bfa46b2e3ea97a91cb9ebc7988896293ccac2" translate="yes" xml:space="preserve">
          <source>The following variables are set by including this module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f959b65accfbceecfc289d0a12605fdbdde53f52" translate="yes" xml:space="preserve">
          <source>The following variables can be set and are optional:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f03e5e975cd583148b792c3b5c4c3e5c7f7dfd" translate="yes" xml:space="preserve">
          <source>The following variables configure behavior. They should be set before calling any of the functions provided by this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bfad48e46fefc716c849c2906a4f09f26d5157" translate="yes" xml:space="preserve">
          <source>The following variables indicating which bindings are present will be defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f6c966a6af4260b8dcca888a07f46a29daff30" translate="yes" xml:space="preserve">
          <source>The following variables may also be set, for backwards compatibility:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e5af84628ffa18059b3a35c0d832529ea84805" translate="yes" xml:space="preserve">
          <source>The following variables may be set before calling this function to modify the way the check is run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79520afc50139fd60f32f42c9809126f7926dceb" translate="yes" xml:space="preserve">
          <source>The following variables may be set before calling this macro to modify the way the check is run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9966ada739bc8f2ac6bbcc6adc9f4926cff3d454" translate="yes" xml:space="preserve">
          <source>The following variables may be set to influence this module&amp;rsquo;s behavior:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983929f2a97807e678aa9104c46ee8fa1cba3713" translate="yes" xml:space="preserve">
          <source>The following variables may be set upon return. Two sets of values exist: One for the common case (&lt;code&gt;&amp;lt;XXX&amp;gt; = &amp;lt;prefix&amp;gt;&lt;/code&gt;) and another for the information &lt;code&gt;pkg-config&lt;/code&gt; provides when called with the &lt;code&gt;--static&lt;/code&gt; option (&lt;code&gt;&amp;lt;XXX&amp;gt; = &amp;lt;prefix&amp;gt;_STATIC&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1abe9f1179e57385759c159f8f980bb1e9001c" translate="yes" xml:space="preserve">
          <source>The following variables will be computed and provided automatically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cec2db2cd7b28b17e1d54c2accaad792be07f36" translate="yes" xml:space="preserve">
          <source>The following variables will be defined for your use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e5a2ea0eb33aaf1f187ca650830245b5b5888f" translate="yes" xml:space="preserve">
          <source>The following variables will be defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d53c477f09906bda4ed926d5c37b0cf837a87f" translate="yes" xml:space="preserve">
          <source>The full path to a source file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9fe8aeee2bc39a5a8123820c92477c8f2f895b" translate="yes" xml:space="preserve">
          <source>The full path to the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be9cd0de324758464b43541a5ebb28ceed951d9" translate="yes" xml:space="preserve">
          <source>The full path to the compiler for &lt;code&gt;LANG&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d08917bb106ad5765397453a477b528046e35f" translate="yes" xml:space="preserve">
          <source>The full path to the library file will be quoted/escaped for the shell automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf041c5171cb925f230ca6adafaec7d0aaa4fbb" translate="yes" xml:space="preserve">
          <source>The full path to the project build tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7cea3ebd58c660dc0d06a07d3d5866b4e73e0e" translate="yes" xml:space="preserve">
          <source>The full path to the project source tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac51fb021a12f3175a9b41f7347e19087795c0e7" translate="yes" xml:space="preserve">
          <source>The full path to the target&amp;rsquo;s artifact will be quoted/escaped for the shell automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34d73e9c7b8aa7c4ec2eb21ec776c8291635a15" translate="yes" xml:space="preserve">
          <source>The full version string as displayed by cmake &lt;code&gt;--version&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772aaee3ad64351a87d264736d690659eb5116f8" translate="yes" xml:space="preserve">
          <source>The full version string of the package found, if any. Note that many existing modules provide &lt;code&gt;Xxx_VERSION_STRING&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7bc43b9c13b739b1c162497ae0c1b09e964d69" translate="yes" xml:space="preserve">
          <source>The function arguments are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a77d32e673e713341a8c2402142fd822a31a14" translate="yes" xml:space="preserve">
          <source>The function constructs a &lt;code&gt;Doxyfile&lt;/code&gt; and defines a custom target that runs Doxygen on that generated file. The listed files and directories are used as the &lt;code&gt;INPUT&lt;/code&gt; of the generated &lt;code&gt;Doxyfile&lt;/code&gt; and they can contain wildcards. Any files that are listed explicitly will also be added as &lt;code&gt;SOURCES&lt;/code&gt; of the custom target so they will show up in an IDE project&amp;rsquo;s source list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efb952b05ca9b4af2f450102d6d19029ac4d206" translate="yes" xml:space="preserve">
          <source>The function expects one Matlab test script file to be given. In the case &lt;code&gt;NO_UNITTEST_FRAMEWORK&lt;/code&gt; is given, the unittest script file should contain the script to be run, plus an exit command with the exit value. This exit value will be passed to the ctest framework (0 success, non 0 failure). Additional arguments accepted by &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; can be passed through &lt;code&gt;TEST_ARGS&lt;/code&gt; (eg. &lt;code&gt;CONFIGURATION &amp;lt;config&amp;gt; ...&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1e3a606e6e2388589c1e79edc11e85381c9be9" translate="yes" xml:space="preserve">
          <source>The function invocation is case-insensitive. A function defined as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb60e4528b9e07d1170279337ffa20c6f1db734f" translate="yes" xml:space="preserve">
          <source>The function stores property values in variables of the same name. Property names correspond to the keyword argument names of &lt;code&gt;ExternalProject_Add()&lt;/code&gt;. For example, the source directory might be retrieved like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2560b82c0cecf20c08907630c0a29206e574f680" translate="yes" xml:space="preserve">
          <source>The functionality of this module has been superseded by the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_VERSION&lt;/code&gt; variable that contains the compiler version number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4907baea6f7a4813a0ecf1fa6b16106db36ceead" translate="yes" xml:space="preserve">
          <source>The general signature is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2407afbfd580f80af484cff504609ed457d63fe" translate="yes" xml:space="preserve">
          <source>The generated &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets have appropriate properties set to define their &lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;usage requirements&lt;/a&gt;, such as &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_tgt/interface_compile_definitions#prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot; id=&quot;index-0-prop_tgt:INTERFACE_COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;INTERFACE_COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; and other relevant built-in &lt;code&gt;INTERFACE_&lt;/code&gt; properties. The &lt;code&gt;INTERFACE&lt;/code&gt; variant of user-defined properties listed in &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; and other &lt;a href=&quot;cmake-buildsystem.7#compatible-interface-properties&quot;&gt;Compatible Interface Properties&lt;/a&gt; are also propagated to the generated &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-4-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets. In the above case, &lt;code&gt;ClimbingStats_MAJOR_VERSION&lt;/code&gt; is defined as a string which must be compatible among the dependencies of any depender. By setting this custom defined user property in this version and in the next version of &lt;code&gt;ClimbingStats&lt;/code&gt;, &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; will issue a diagnostic if there is an attempt to use version 3 together with version 4. Packages can choose to employ such a pattern if different major versions of the package are designed to be incompatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ccb8d4f6d8f13188e5eefed34463bdbd94261a" translate="yes" xml:space="preserve">
          <source>The generated generated &lt;code&gt;ui_*.h&lt;/code&gt; files are placed in the &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/include&lt;/code&gt; directory which is automatically added to the target&amp;rsquo;s &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979093fd6920c79ce080c852ec6550c2e32ff18b" translate="yes" xml:space="preserve">
          <source>The generator used to build the project. See &lt;a href=&quot;../manual/cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;cmake-generators(7)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea2e2f709f1910bfccbf5c7f29dd658f44449ee" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%2010%202010.html#generator:Visual%20Studio%2010%202010&quot; id=&quot;index-0-generator:Visual Studio 10 2010&quot;&gt;&lt;code&gt;Visual Studio 10 2010&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;MSBuild.exe&lt;/code&gt; command installed with the corresponding Visual Studio version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dda4de0dc9ffd74e25eadcf30ada99345ca3fb5" translate="yes" xml:space="preserve">
          <source>The generators for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt;&lt;code&gt;Visual Studio 9 2008&lt;/code&gt;&lt;/a&gt; and above set this variable to the &lt;code&gt;devenv.com&lt;/code&gt; command installed with the corresponding Visual Studio version. Note that this variable may be empty on Visual Studio Express editions because they do not provide this tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a143d0d01a88ea21217145a8a97cd30e941c646c" translate="yes" xml:space="preserve">
          <source>The given locations are searched for a library whose name is cmCOMMAND_NAME. If found, it is loaded as a module and the command is added to the set of available CMake commands. Usually, &lt;a href=&quot;try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; is used before this command to compile the module. If the command is successfully loaded a variable named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996c458fc513621aeb83c98b7c9f4595376ade5e" translate="yes" xml:space="preserve">
          <source>The given test command is expected to exit with code &lt;code&gt;0&lt;/code&gt; to pass and non-zero to fail, or vice-versa if the &lt;a href=&quot;../prop_test/will_fail#prop_test:WILL_FAIL&quot; id=&quot;index-0-prop_test:WILL_FAIL&quot;&gt;&lt;code&gt;WILL_FAIL&lt;/code&gt;&lt;/a&gt; test property is set. Any output written to stdout or stderr will be captured by &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-1-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; but does not affect the pass/fail status unless the &lt;a href=&quot;../prop_test/pass_regular_expression#prop_test:PASS_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:PASS_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;PASS_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_test/fail_regular_expression#prop_test:FAIL_REGULAR_EXPRESSION&quot; id=&quot;index-0-prop_test:FAIL_REGULAR_EXPRESSION&quot;&gt;&lt;code&gt;FAIL_REGULAR_EXPRESSION&lt;/code&gt;&lt;/a&gt; test property is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada39a25d8116322468d78732c2f96f93ca6319c" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&quot; id=&quot;index-0-variable:FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&quot;&gt;&lt;code&gt;FeatureSummary_&amp;lt;TYPE&amp;gt;_DESCRIPTION&lt;/code&gt;&lt;/a&gt; can be defined for each type to replace the type name with the specified string whenever the package type is used in an output string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9997e476b970743e029b2bf2c9fac97c4c1a6694" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_DEFAULT_PKG_TYPE&quot; id=&quot;index-0-variable:FeatureSummary_DEFAULT_PKG_TYPE&quot;&gt;&lt;code&gt;FeatureSummary_DEFAULT_PKG_TYPE&lt;/code&gt;&lt;/a&gt; defines which package type is the default one. When calling &lt;a href=&quot;#command:feature_summary&quot; id=&quot;index-1-command:feature_summary&quot;&gt;&lt;code&gt;feature_summary()&lt;/code&gt;&lt;/a&gt;, if the user did not set the package type explicitly, the package will be assigned to this category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbd88240387289669cc1fba5e937226d3a1e237" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_PKG_TYPES&quot; id=&quot;index-0-variable:FeatureSummary_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_PKG_TYPES&lt;/code&gt;&lt;/a&gt; defines the type of packages used by &lt;code&gt;FeatureSummary&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbe57db89431afbbb254c3d130ebfe208361dd5" translate="yes" xml:space="preserve">
          <source>The global property &lt;a href=&quot;#variable:FeatureSummary_REQUIRED_PKG_TYPES&quot; id=&quot;index-0-variable:FeatureSummary_REQUIRED_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_REQUIRED_PKG_TYPES&lt;/code&gt;&lt;/a&gt; defines which package types are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e957d28d12e66e55fa8be287bdb5f0cc428b09" translate="yes" xml:space="preserve">
          <source>The graph name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9ee55ad559de46d0258e0bd629633236707604" translate="yes" xml:space="preserve">
          <source>The graph type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15db1a3e8a9c1528e176dc8851fd38cafb02ac9c" translate="yes" xml:space="preserve">
          <source>The group of a component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249cf166eb6586561669e75ae8512fe7ea08ef1f" translate="yes" xml:space="preserve">
          <source>The header file generated by bison</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03f264c47e9281858c23a1fa359de269ff1c054" translate="yes" xml:space="preserve">
          <source>The header file needed for &lt;code&gt;backtrace(3)&lt;/code&gt;. Cached. Could be forcibly set by user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce102b99dca7c8f64e39f2d74db3a14dfea5eb7" translate="yes" xml:space="preserve">
          <source>The header will be &lt;code&gt;moc&lt;/code&gt; compiled again if a file from the additional file dependencies changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8748d0c639ab9cf25e064b9941d07024105b546" translate="yes" xml:space="preserve">
          <source>The header written at the top of the graphviz file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5e8dceb6dd93113215243ba5452e8d3fddb042" translate="yes" xml:space="preserve">
          <source>The homepage URL of the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e79a77aba6b0975f6e513f21778e89198918fbb" translate="yes" xml:space="preserve">
          <source>The homepage URL of the top level project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c42f0a23a7922ae97ca336b2ba1e714b6ee4cc0" translate="yes" xml:space="preserve">
          <source>The host platform suffix of the &lt;code&gt;binutils&lt;/code&gt; in the standalone toolchain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10dbb063ef27e8c281624eeece9a59276e9bb233" translate="yes" xml:space="preserve">
          <source>The host platform suffix of the binutils in the NDK toolchain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbff586aef8016c473142584874288c1786c9d52" translate="yes" xml:space="preserve">
          <source>The iconv libraries to be linked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df737933f31947c15d60460fb78d26589023e595" translate="yes" xml:space="preserve">
          <source>The iconv library (if not implicitly given in the C library).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda06fdf97ed5372e2c715a6602cebce7e9a8916" translate="yes" xml:space="preserve">
          <source>The if command was written very early in CMake&amp;rsquo;s history, predating the &lt;code&gt;${}&lt;/code&gt; variable evaluation syntax, and for convenience evaluates variables named by its arguments as shown in the above signatures. Note that normal variable evaluation with &lt;code&gt;${}&lt;/code&gt; applies before the if command even receives the arguments. Therefore code like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1ce6cd35f2b94612a54f829dc54d1c30683dc8" translate="yes" xml:space="preserve">
          <source>The implementation of this command has been empty since December 2001 but was kept in CMake for compatibility for a long time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cee72e798f5376932eb7024779f39cb61a9582" translate="yes" xml:space="preserve">
          <source>The include directories are added to the &lt;a href=&quot;../prop_dir/include_directories#prop_dir:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_dir:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; directory property for the current &lt;code&gt;CMakeLists&lt;/code&gt; file. They are also added to the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property for each target in the current &lt;code&gt;CMakeLists&lt;/code&gt; file. The target property values are the ones used by the generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c608a1bb2dbf4fdce14f5bc78838422a7f658465" translate="yes" xml:space="preserve">
          <source>The include directories needed to use &lt;code&gt;backtrace(3)&lt;/code&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d42480d0497ff5ab81ddc4dfb1c586411444d2c" translate="yes" xml:space="preserve">
          <source>The include directories needed to use Curses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1401d30cc2139ca41d9288d0a0acf9424c693e4d" translate="yes" xml:space="preserve">
          <source>The include directory for protocol buffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ce86c568aa8e5551b56837b1e2df704725bff9" translate="yes" xml:space="preserve">
          <source>The include directory is automatically added to the target&amp;rsquo;s &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4bc7891cd197d22d27b19b2cef49282f1f9f05" translate="yes" xml:space="preserve">
          <source>The include guard applies globally to the whole build. The current file will only be included once regardless of the scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97fc6b2b9b96ec626ced221881bc056de0059a8" translate="yes" xml:space="preserve">
          <source>The include guard applies within the current directory and below. The file will only be included once within this directory scope, but may be included again by other files outside of this directory (i.e. a parent directory or another directory not pulled in by &lt;a href=&quot;add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; from the current file or its children).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1da10426c27ed44ffdb5a5957dafff4397bae2" translate="yes" xml:space="preserve">
          <source>The individual steps within the process can be driven independently if required (e.g. for CDash submission) and extra custom steps can be defined, along with the ability to control the step dependencies. The directory structure used for the management of the external project can also be customized. The function supports a large number of options which can be used to tailor the external project behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8f13f221a1d6113c8ecfe80aef117547108d6f" translate="yes" xml:space="preserve">
          <source>The initial message send by the cmake server on startup is of type &amp;ldquo;hello&amp;rdquo;. This is the only message ever sent by the server that is not of type &amp;ldquo;reply&amp;rdquo;, &amp;ldquo;progress&amp;rdquo; or &amp;ldquo;error&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deeff57bb461c7164e68279cd60bbdd3d8a39477" translate="yes" xml:space="preserve">
          <source>The input source file, an alias for &amp;lt;YaccInput&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8610b73d50214f80b55242009a473df06cc60d26" translate="yes" xml:space="preserve">
          <source>The installation prefix is also added to &lt;a href=&quot;cmake_system_prefix_path#variable:CMAKE_SYSTEM_PREFIX_PATH&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_PREFIX_PATH&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_PREFIX_PATH&lt;/code&gt;&lt;/a&gt; so that &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_program#command:find_program&quot; id=&quot;index-0-command:find_program&quot;&gt;&lt;code&gt;find_program()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_path#command:find_path&quot; id=&quot;index-0-command:find_path&quot;&gt;&lt;code&gt;find_path()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/find_file#command:find_file&quot; id=&quot;index-0-command:find_file&quot;&gt;&lt;code&gt;find_file()&lt;/code&gt;&lt;/a&gt; will search the prefix for other software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694569c7652c7f39f3a1797d7d44a0ee86858115" translate="yes" xml:space="preserve">
          <source>The key of which the base will be computed. Expected to be a upper case full filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249cd7279e3c1d1683183deb69838e47889805d2" translate="yes" xml:space="preserve">
          <source>The language of the source files compiled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538490f6bf6c0958d609785ee55c1e1e280900e2" translate="yes" xml:space="preserve">
          <source>The left and right hand arguments to &lt;code&gt;AND&lt;/code&gt; and &lt;code&gt;OR&lt;/code&gt; are independently tested to see if they are boolean constants, if so they are used as such, otherwise they are assumed to be variables and are dereferenced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca92318e7b6e875d2797cddc9ed5eaaf9a9d4f2b" translate="yes" xml:space="preserve">
          <source>The left hand argument to &lt;code&gt;MATCHES&lt;/code&gt; is first checked to see if it is a defined variable, if so the variable&amp;rsquo;s value is used, otherwise the original value is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215e678c4a0a9f06245697e70224e28edf8a42d6" translate="yes" xml:space="preserve">
          <source>The libgdal library file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c763b8a1d860c4c95c455d81a5536ce39e692dd9" translate="yes" xml:space="preserve">
          <source>The libinput library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d2a06f2e9c1ef850258d6e796ca3fc7e14e8b3" translate="yes" xml:space="preserve">
          <source>The libpng library, if found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b067232aab9867bdbbdc7f706cce622689314272" translate="yes" xml:space="preserve">
          <source>The libraries (linker flags) needed to use &lt;code&gt;backtrace(3)&lt;/code&gt;, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28ebd58cda5ffbe38f30abfbb202cf0087294e8" translate="yes" xml:space="preserve">
          <source>The libraries needed to use Curses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3173927d81b88829ad6867109cb25474d3b416a3" translate="yes" xml:space="preserve">
          <source>The libraries needed to use LTTng-UST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e85d5f8177db9b575cfeba9bc28242a0ea137bf" translate="yes" xml:space="preserve">
          <source>The libraries to link against for the osgDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde66fd62c883f9f2b29bbb3152a00315c28a434" translate="yes" xml:space="preserve">
          <source>The libraries to link against to use Xxx. These should include full paths. This should not be a cache entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5758a92e1447d33067d81fe92459449a021c5036" translate="yes" xml:space="preserve">
          <source>The library dependency graph is normally acyclic (a DAG), but in the case of mutually-dependent &lt;code&gt;STATIC&lt;/code&gt; libraries CMake allows the graph to contain cycles (strongly connected components). When another target links to one of the libraries, CMake repeats the entire connected component. For example, the code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50792cfdf6a745ca9277b9656fb4f65f85b34832" translate="yes" xml:space="preserve">
          <source>The library name/flag is treated as a command-line string fragment and will be used with no extra quoting or escaping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbc94482b7d8fd2a9788aa136362d78fa80a88e" translate="yes" xml:space="preserve">
          <source>The library or executable may not be necessary in the primary deploy/debug scenario, and excluding from deployment saves time in the develop/download/debug cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84569b1e2daf01293a78ce1824f73d2c7e31303f" translate="yes" xml:space="preserve">
          <source>The library variables below are set as normal variables. These contain debug/optimized keywords when a debugging library is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f2dfca08c8b5bf3c097102d72ce9a580fa7c50" translate="yes" xml:space="preserve">
          <source>The line number of the current file being processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd834512d7f3a77cf56097f0b65e2afdf3f4f87" translate="yes" xml:space="preserve">
          <source>The link (or archiving) step of those other targets will use the object files collection in addition to those from their own sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4f93cc2bf96071fa7f894cfbb7adc00bc41c96" translate="yes" xml:space="preserve">
          <source>The link (or archiving) step of those other targets will use the object files from &lt;code&gt;OBJECT&lt;/code&gt; libraries that are &lt;em&gt;directly&lt;/em&gt; linked. Additionally, usage requirements of the &lt;code&gt;OBJECT&lt;/code&gt; libraries will be honored when compiling sources in those other targets. Furthermore, those usage requirements will propagate transitively to dependents of those other targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10902b613679b542c34c30b1079fb6217bfab5b" translate="yes" xml:space="preserve">
          <source>The link flag is treated as a command-line string fragment and will be used with no extra quoting or escaping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80207255ffe73e66b68b9d238e7cd72770bb3ea4" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;a href=&quot;compile_pdb_name#prop_tgt:COMPILE_PDB_NAME&quot; id=&quot;index-1-prop_tgt:COMPILE_PDB_NAME&quot;&gt;&lt;code&gt;COMPILE_PDB_NAME&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692998fa3b519166e20bddc1a2d4cb1d79d14a36" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;a href=&quot;compile_pdb_output_directory#prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot; id=&quot;index-1-prop_tgt:COMPILE_PDB_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; property to specify the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e5486ef25a6e2ae4fdb6aa80033b958196cd6e" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;code&gt;COMPILE_PDB_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to specify the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18974999f3b1fb52c494554dcc1fc1da5b48504a" translate="yes" xml:space="preserve">
          <source>The linker-generated program database files are specified by the &lt;code&gt;/pdb&lt;/code&gt; linker flag and are not the same as compiler-generated program database files specified by the &lt;code&gt;/Fd&lt;/code&gt; compiler flag. Use the &lt;code&gt;COMPILE_PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property to specify the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20221775e9dbaa8b74542d5033862ee28cb0c62" translate="yes" xml:space="preserve">
          <source>The list contains all commands for which help may be obtained by using the &lt;code&gt;--help-command&lt;/code&gt; option followed by a command name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91cfc8f1046f406689231c3f0c1c7d047f93589" translate="yes" xml:space="preserve">
          <source>The list contains all manuals for which help may be obtained by using the &lt;code&gt;--help-manual&lt;/code&gt; option followed by a manual name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac947f560d8fa2746db08c981fc12b947911df61" translate="yes" xml:space="preserve">
          <source>The list contains all modules for which help may be obtained by using the &lt;code&gt;--help-module&lt;/code&gt; option followed by a module name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ece94a4ba64c7e174e226d433b228ae0efdcc75" translate="yes" xml:space="preserve">
          <source>The list contains all policies for which help may be obtained by using the &lt;code&gt;--help-policy&lt;/code&gt; option followed by a policy name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de77fdd97fa13ac556227133dcef245ddf70ce5" translate="yes" xml:space="preserve">
          <source>The list contains all properties for which help may be obtained by using the &lt;code&gt;--help-property&lt;/code&gt; option followed by a property name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debcca7b4116a7b6c3caa4ac17d9621521a04095" translate="yes" xml:space="preserve">
          <source>The list contains all variables for which help may be obtained by using the &lt;code&gt;--help-variable&lt;/code&gt; option followed by a variable name. The help is printed to a named &amp;lt;f&amp;gt;ile if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa82080282107c238f6247ca5941013c0d8955e" translate="yes" xml:space="preserve">
          <source>The list is reported in dashboard submissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6ef684097965a32f5e520844e4e1fabcc16107" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;dirs...&lt;/code&gt; given to &lt;code&gt;DIRECTORY&lt;/code&gt; and an install destination given as a &lt;code&gt;DESTINATION&lt;/code&gt; argument may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-3-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65edfe6f991d315640a7c43196b52fec7bd9ad9" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;files...&lt;/code&gt; given to &lt;code&gt;FILES&lt;/code&gt; or &lt;code&gt;PROGRAMS&lt;/code&gt; may use &amp;ldquo;generator expressions&amp;rdquo; with the syntax &lt;code&gt;$&amp;lt;...&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;cmake-generator-expressions(7)&lt;/code&gt;&lt;/a&gt; manual for available expressions. However, if any item begins in a generator expression it must evaluate to a full path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad21660e014ccbaf54a074709ed54eef4f1f31b" translate="yes" xml:space="preserve">
          <source>The list of component to install.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac4fe94c40246d9ced84c58d469e39c59d6c546" translate="yes" xml:space="preserve">
          <source>The list of features in this property are a subset of the features listed in the &lt;a href=&quot;../variable/cmake_cxx_compile_features#variable:CMAKE_CXX_COMPILE_FEATURES&quot; id=&quot;index-0-variable:CMAKE_CXX_COMPILE_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_COMPILE_FEATURES&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d692ff2433be0587c17848648b17252fbb07a0ed" translate="yes" xml:space="preserve">
          <source>The list of files which &amp;ldquo;isCMake&amp;rdquo; set to true are part of the cmake installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a85a4881d90962f11ad36e353d437651f0a379" translate="yes" xml:space="preserve">
          <source>The list of files witch &amp;ldquo;isTemporary&amp;rdquo; set to true are part of the build directory and will not survive the build directory getting cleaned out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a994de45b34394cd195dc630061f5602f292603c" translate="yes" xml:space="preserve">
          <source>The list subcommands &lt;code&gt;APPEND&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;FILTER&lt;/code&gt;, &lt;code&gt;PREPEND&lt;/code&gt;, &lt;code&gt;POP_BACK&lt;/code&gt;, &lt;code&gt;POP_FRONT&lt;/code&gt;, &lt;code&gt;REMOVE_AT&lt;/code&gt;, &lt;code&gt;REMOVE_ITEM&lt;/code&gt;, &lt;code&gt;REMOVE_DUPLICATES&lt;/code&gt;, &lt;code&gt;REVERSE&lt;/code&gt; and &lt;code&gt;SORT&lt;/code&gt; may create new values for the list within the current CMake variable scope. Similar to the &lt;a href=&quot;set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; command, the LIST command creates new variable values in the current scope, even if the list itself is actually defined in a parent scope. To propagate the results of these operations upwards, use &lt;a href=&quot;set#command:set&quot; id=&quot;index-1-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;PARENT_SCOPE&lt;/code&gt;, &lt;a href=&quot;set#command:set&quot; id=&quot;index-2-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;CACHE INTERNAL&lt;/code&gt;, or some other means of value propagation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009cfce0d2f5674508b9c08b112f32628076958c" translate="yes" xml:space="preserve">
          <source>The loadable module file (e.g. &lt;code&gt;.dll&lt;/code&gt; or &lt;code&gt;.so&lt;/code&gt;) of a module library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-5-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;MODULE&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c549a8d45905d6133251ddaea8047709468d4da" translate="yes" xml:space="preserve">
          <source>The loaded environment will not survive past the end of the calling process. Do not use this module in project code (&lt;code&gt;CMakeLists.txt&lt;/code&gt; files) to load a compiler environment; it will not be available during the build. Instead load the environment manually before running CMake or using the generated build system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2c12ea686019734eb961386aa09699d7197f29" translate="yes" xml:space="preserve">
          <source>The local option takes precedence over this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9caf93e9f677baef4383a82ff6e9d520667210ca" translate="yes" xml:space="preserve">
          <source>The location of a library called &lt;code&gt;&amp;lt;lib_name&amp;gt;&lt;/code&gt; for use with MPI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683382c26145fbc52b488c275f48cfd38b656950" translate="yes" xml:space="preserve">
          <source>The location of the XCTest Framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5841b9cf264645584c3df9c8f2ba73ed4014abb" translate="yes" xml:space="preserve">
          <source>The location of the jar file so that you can include it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1c7d7d9a705e2da3fbe1e70809cf394c21ab6a" translate="yes" xml:space="preserve">
          <source>The logging output during population can be quite verbose, making the configure stage quite noisy. This cache option (&lt;code&gt;ON&lt;/code&gt; by default) hides all population output unless an error is encountered. If experiencing problems with hung downloads, temporarily switching this option off may help diagnose which content population is causing the issue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6229b83bfac70060e36abec55cc40a55fc41af0e" translate="yes" xml:space="preserve">
          <source>The logical name of executable and library targets does not have to correspond to the physical file names built. Consider using the &lt;a href=&quot;../prop_tgt/output_name#prop_tgt:OUTPUT_NAME&quot; id=&quot;index-0-prop_tgt:OUTPUT_NAME&quot;&gt;&lt;code&gt;OUTPUT_NAME&lt;/code&gt;&lt;/a&gt; target property to create two targets with the same physical name while keeping logical names distinct. Custom targets must simply have globally unique names (unless one uses the global property &lt;a href=&quot;../prop_gbl/allow_duplicate_custom_targets#prop_gbl:ALLOW_DUPLICATE_CUSTOM_TARGETS&quot; id=&quot;index-0-prop_gbl:ALLOW_DUPLICATE_CUSTOM_TARGETS&quot;&gt;&lt;code&gt;ALLOW_DUPLICATE_CUSTOM_TARGETS&lt;/code&gt;&lt;/a&gt; with a Makefiles generator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3d0b2897abea141d8e9f6274641dae72d3ccfe" translate="yes" xml:space="preserve">
          <source>The low level module command to use. Currently supported implementations are the Lua based Lmod and TCL based EnvironmentModules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b4300a74f47a8c072c54fbb4b3616598819612" translate="yes" xml:space="preserve">
          <source>The macro defines the following variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e16df74b441432c8e1cabac63d76e390a3f4d2d" translate="yes" xml:space="preserve">
          <source>The macro invocation is case-insensitive. A macro defined as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c89de410121242df0245cc214e16d8ae9341a3" translate="yes" xml:space="preserve">
          <source>The macros provided by &lt;a href=&quot;../module/bundleutilities#module:BundleUtilities&quot; id=&quot;index-1-module:BundleUtilities&quot;&gt;&lt;code&gt;BundleUtilities&lt;/code&gt;&lt;/a&gt; are intended to be invoked at install time rather than at configure time, because they depend on the listed targets already existing at the time they are invoked. If they are invoked at configure time, the targets haven&amp;rsquo;t been built yet, and the commands will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577774d5f7eb9657a182d6aa83933693a33db6b8" translate="yes" xml:space="preserve">
          <source>The macros provided by this module were once intended for use by cross-compiling toolchain files when CMake was not able to automatically detect the compiler identification. Since the introduction of this module, CMake&amp;rsquo;s compiler identification capabilities have improved and can now be taught to recognize any compiler. Furthermore, the suite of information CMake detects from a compiler is now too extensive to be provided by toolchain files using these macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f298b4a6ce2c0901484026c037df64c760795436" translate="yes" xml:space="preserve">
          <source>The main interesting messages that project users might be interested in. Ideally these should be concise, no more than a single line, but still informative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814a73cdd9e2fc9a653dcd7f77d37a071b700550" translate="yes" xml:space="preserve">
          <source>The major version number in integer form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de73324432eebe976bb875eb87d08650e007147f" translate="yes" xml:space="preserve">
          <source>The major version of Qt found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf10b8d809d9335970ddd512f819035519df74b" translate="yes" xml:space="preserve">
          <source>The major version of lzma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de8c47e71618f49f7da153972eaf8e059afb820" translate="yes" xml:space="preserve">
          <source>The major version of the package found, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc293eff8e79e3986d5b645e09adb33ef844685" translate="yes" xml:space="preserve">
          <source>The major version of the top level project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d831da7f1c5d9c52ab5b100a23aff004fd1a5f" translate="yes" xml:space="preserve">
          <source>The mapping of the release names and the version of Matlab is performed by defining pairs (name, version). The variable &lt;a href=&quot;#variable:MATLAB_ADDITIONAL_VERSIONS&quot; id=&quot;index-0-variable:MATLAB_ADDITIONAL_VERSIONS&quot;&gt;&lt;code&gt;MATLAB_ADDITIONAL_VERSIONS&lt;/code&gt;&lt;/a&gt; may be provided before the call to the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; in order to handle additional versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6854a55dc70d3b17698aa8eec4dfe070fbe440" translate="yes" xml:space="preserve">
          <source>The mathematical expression must be given as a string (i.e. enclosed in double quotation marks). An example is &lt;code&gt;&quot;5 * (10 + 13)&quot;&lt;/code&gt;. Supported operators are &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;(...)&lt;/code&gt;; they have the same meaning as in C code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e681f7ad4969baed5276f81adb11fd847f9774" translate="yes" xml:space="preserve">
          <source>The maximum number of concurrent processes to use when building. If &lt;code&gt;&amp;lt;jobs&amp;gt;&lt;/code&gt; is omitted the native build tool&amp;rsquo;s default number is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3f03aaf0f5aa8b004f1216451be62a576d8622" translate="yes" xml:space="preserve">
          <source>The maximum number of errors in a single build step which will be detected. After this, the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command will truncate the output. Defaults to 50.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4abd791ec4ef732f02378f6beef064afbe683c" translate="yes" xml:space="preserve">
          <source>The maximum number of warnings in a single build step which will be detected. After this, the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command will truncate the output. Defaults to 50.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4dd7ff4b6de068b8ddcb130b1e1d9282cff78c8" translate="yes" xml:space="preserve">
          <source>The members are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bcac00aaf7452adc0a3cdd236c640b0b211a5e" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;cache&lt;/code&gt; objects are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f190ae54ea7bbdcd29365c5a8a26a077581c08" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;cmakeFiles&lt;/code&gt; objects are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe87a1e2d0931c71c2125de94215e978bd24d67" translate="yes" xml:space="preserve">
          <source>The members specific to &lt;code&gt;codemodel&lt;/code&gt; objects are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1792c6629e57c460d4813faeca99c278a798ef" translate="yes" xml:space="preserve">
          <source>The message may &amp;ndash; depending on the type of the original request &amp;ndash; contain values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22dc890998888058f8c11f9d033b3decd3480b9c" translate="yes" xml:space="preserve">
          <source>The minimum required version of &lt;code&gt;bison&lt;/code&gt; can be specified using the standard CMake syntax, e.g. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(BISON 2.1.3)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85d991d8e1a572eae2c3491c5c9cfc377f01a4e" translate="yes" xml:space="preserve">
          <source>The minimum required version of Java can be specified using the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; syntax, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189fd75d99fa7caa9b9e33b25aad11c00954fb60" translate="yes" xml:space="preserve">
          <source>The minimum required version of Perl can be specified using the standard syntax, e.g. find_package(PerlLibs 6.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1602e7ddc541618ce75450a8c9e30582fb6e4179" translate="yes" xml:space="preserve">
          <source>The minimum required version of Ruby can be specified using the standard syntax, e.g. find_package(Ruby 1.8)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd8f6a11bed00665aabe4196cd5e61530a3d414" translate="yes" xml:space="preserve">
          <source>The minimum required version of SWIG can be specified using the standard syntax, e.g. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(SWIG 1.1)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3988367ee15273593a3cf1c70a976cc8485446" translate="yes" xml:space="preserve">
          <source>The minimum required version of Subversion can be specified using the standard syntax, e.g. &lt;code&gt;find_package(Subversion 1.4)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28e782ab537f27786212e867bedb52e207f9fd4" translate="yes" xml:space="preserve">
          <source>The minimum required version of flex can be specified using the standard syntax, e.g. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package(FLEX 2.5.13)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0583fd23f39802fb496fc3e1ed217807c5bb6a3d" translate="yes" xml:space="preserve">
          <source>The minor version number in integer form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc767e8b11008c5dc7437c5cf9dcae4b094a41b" translate="yes" xml:space="preserve">
          <source>The minor version of Qt found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6649905529df4f59b07233073ba53185f732d2ad" translate="yes" xml:space="preserve">
          <source>The minor version of lzma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99696d8c3125bcff589eff6336cd232718c2368e" translate="yes" xml:space="preserve">
          <source>The minor version of the package found, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c5bacd1a4bcdf8e23537691f736550c32a211b" translate="yes" xml:space="preserve">
          <source>The minor version of the top level project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d277a1f123c3e698ee452cf0cc10406ffb2625" translate="yes" xml:space="preserve">
          <source>The module also defines several commands to control the behavior of the CPack &lt;code&gt;IFW&lt;/code&gt; generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c268c3dac2abf37e9941724d40fd6fe0ef6e5413" translate="yes" xml:space="preserve">
          <source>The module automatically creates a &lt;code&gt;BUILD_TESTING&lt;/code&gt; option that selects whether to enable testing support (&lt;code&gt;ON&lt;/code&gt; by default). After including the module, use code like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2625e3b9376e9e00c5e73ad882000ab3ded0080" translate="yes" xml:space="preserve">
          <source>The module can perform some advanced feature detections upon explicit request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099733639d9f01d31c13d4fd4ebf41911c6981bc" translate="yes" xml:space="preserve">
          <source>The module defines &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; similar command to configure file templates prepared in QtIFW/SDK/Creator style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704a7786f2e3d042e6e586e957bcf31669361906" translate="yes" xml:space="preserve">
          <source>The module defines &lt;code&gt;IMPORTED&lt;/code&gt; targets for Doxygen and each component found. These can be used as part of custom commands, etc. and should be preferred over old-style (and now deprecated) variables like &lt;code&gt;DOXYGEN_EXECUTABLE&lt;/code&gt;. The following import targets are defined if their corresponding executable could be found (the component import targets will only be defined if that component was requested):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0a3bf546a81ba756292a683a782b157ed8b43c" translate="yes" xml:space="preserve">
          <source>The module defines the following &lt;code&gt;IMPORTED&lt;/code&gt; targets (when &lt;a href=&quot;../prop_gbl/cmake_role#prop_gbl:CMAKE_ROLE&quot; id=&quot;index-0-prop_gbl:CMAKE_ROLE&quot;&gt;&lt;code&gt;CMAKE_ROLE&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;PROJECT&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa37d670194d6ec721db39c5782bbdfdba9b55f" translate="yes" xml:space="preserve">
          <source>The module defines the following commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf88c0fc1e85025aee9056c781e66efa090defb3" translate="yes" xml:space="preserve">
          <source>The module defines the following variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2d39c9a1313029253f30df5aba314b6abcd414" translate="yes" xml:space="preserve">
          <source>The module documentation consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9d7286692b61919f5e4079c9ce01cdc5304870" translate="yes" xml:space="preserve">
          <source>The module exposes the components &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;MPICXX&lt;/code&gt; and &lt;code&gt;Fortran&lt;/code&gt;. Each of these controls the various MPI languages to search for. The difference between &lt;code&gt;CXX&lt;/code&gt; and &lt;code&gt;MPICXX&lt;/code&gt; is that &lt;code&gt;CXX&lt;/code&gt; refers to the MPI C API being usable from C++, whereas &lt;code&gt;MPICXX&lt;/code&gt; refers to the MPI-2 C++ API that was removed again in MPI-3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8ada8d02c76f774006e6df6ae5f22bea570804" translate="yes" xml:space="preserve">
          <source>The module exposes the components &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, and &lt;code&gt;Fortran&lt;/code&gt;. Each of these controls the various languages to search OpenMP support for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d93e1f01c41617b1541bd9d9efc107dd8c0fcf" translate="yes" xml:space="preserve">
          <source>The module provides a &lt;code&gt;BISON_TARGET&lt;/code&gt; macro which generates BISON output. In CMake 3.13 and below the macro would generate a custom command that runs &lt;code&gt;bison&lt;/code&gt; in the source directory. CMake 3.14 and later prefer to run it in the build directory and use &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; as the &lt;code&gt;WORKING_DIRECTORY&lt;/code&gt; of its &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; invocation. This ensures that any implicitly generated file is written to the build tree rather than the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af2ace897924944d849e09b56e4511e719e8c77" translate="yes" xml:space="preserve">
          <source>The module sub-command and arguments to execute as if they were passed directly to the module command in your shell environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259162abdc8502204de79e93a5d266f3ebe32598" translate="yes" xml:space="preserve">
          <source>The module supports the following components:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f3dbb19c0062f71b5a7f0421bcf87257a90bf8" translate="yes" xml:space="preserve">
          <source>The module will also define two cache variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320120221ea7d1084aa37e1f31692ee989abaa55" translate="yes" xml:space="preserve">
          <source>The module will also try to provide the OpenACC version variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def309404f771d7f935e51c9c1adf4b665910405" translate="yes" xml:space="preserve">
          <source>The module will also try to provide the OpenMP version variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfcfdc06bb23f5f20bd9839a8632809cc91c36f" translate="yes" xml:space="preserve">
          <source>The module will optionally accept the &lt;code&gt;COMPONENTS&lt;/code&gt; argument. If no &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, then the find module will default to finding only the &lt;code&gt;HDF5&lt;/code&gt; C library. If one or more &lt;code&gt;COMPONENTS&lt;/code&gt; are specified, the module will attempt to find the language bindings for the specified components. The only valid components are &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;CXX&lt;/code&gt;, &lt;code&gt;Fortran&lt;/code&gt;, &lt;code&gt;HL&lt;/code&gt;, and &lt;code&gt;Fortran_HL&lt;/code&gt;. If the &lt;code&gt;COMPONENTS&lt;/code&gt; argument is not given, the module will attempt to find only the C bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609d7f9e93163d1f10fb3ce41df1e30c4a5aa629" translate="yes" xml:space="preserve">
          <source>The modules listed here are part of the CMake distribution. Projects may provide further modules; their location(s) can be specified in the &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb1ce194c3bf90b4a0bd86856fe2232e2231bb0" translate="yes" xml:space="preserve">
          <source>The more modern approach is to behave as much like &lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;config file packages&lt;/a&gt; files as possible, by providing &lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;imported target&lt;/a&gt;. This has the advantage of propagating &lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;Transitive Usage Requirements&lt;/a&gt; to consumers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20963a1917b21713e8e9aee035c81b8a48bf7cbe" translate="yes" xml:space="preserve">
          <source>The most important properties are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22b45ca9f371af68608d1037fb1e4ed6871944c" translate="yes" xml:space="preserve">
          <source>The most recently seen &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command from the top level CMakeLists.txt would be &lt;code&gt;project(Second ...)&lt;/code&gt;, so this will print:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c5d842c821d863f8b597742e699eb8d22e411b" translate="yes" xml:space="preserve">
          <source>The most recently seen &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command from the top level CMakeLists.txt would be &lt;code&gt;project(Second)&lt;/code&gt;, so this will print:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31b0ec300496c25eb19f25a6b2b0560bfb23920" translate="yes" xml:space="preserve">
          <source>The name of the CPU CMake is building for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d50986ef173e9726714caf993f637076fba01a" translate="yes" xml:space="preserve">
          <source>The name of the CPU CMake is running on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c85a7da49b9359cc9c431f86aa143bd8bb1080e" translate="yes" xml:space="preserve">
          <source>The name of the CPack binary configuration file. This file is the CPack configuration generated by the CPack module for binary installers. Defaults to &lt;code&gt;CPackConfig.cmake&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1853d6f8248e03779889087d355f273adea747" translate="yes" xml:space="preserve">
          <source>The name of the CPack source configuration file. This file is the CPack configuration generated by the CPack module for source installers. Defaults to &lt;code&gt;CPackSourceConfig.cmake&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989bb535c25f2dc9b2a197ac0a274077ae26498b" translate="yes" xml:space="preserve">
          <source>The name of the generator that is being used to generate the build files. (e.g. &lt;code&gt;Unix Makefiles&lt;/code&gt;, &lt;code&gt;Ninja&lt;/code&gt;, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e303a744f0e75170f361572d7bc74a5c67c8e730" translate="yes" xml:space="preserve">
          <source>The name of the global &lt;code&gt;autogen&lt;/code&gt; target can be changed by setting &lt;a href=&quot;cmake_global_autogen_target_name#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180e10fe730075f8cf20f33eb6e823a112cba895" translate="yes" xml:space="preserve">
          <source>The name of the global &lt;code&gt;autorcc&lt;/code&gt; target can be changed by setting &lt;a href=&quot;cmake_global_autorcc_target_name#variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET_NAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f44df70abd0a1a5045ae1496c1f13b52074e9b" translate="yes" xml:space="preserve">
          <source>The name of the library that has &lt;code&gt;dlopen&lt;/code&gt; and &lt;code&gt;dlclose&lt;/code&gt; in it, usually &lt;code&gt;-ldl&lt;/code&gt; on most UNIX machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac6dee17146c3bbed2cc72f18679ad90a8aa7be" translate="yes" xml:space="preserve">
          <source>The name of the operating system for which CMake is to build. See the &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable for the OS version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d5cf4ca4d9699099795d32ff3c0ccf9513f6e8" translate="yes" xml:space="preserve">
          <source>The name of the package (or application). If not specified, it defaults to the project name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead5f342705a939e4698dad9eff6e5a3cc5a7534" translate="yes" xml:space="preserve">
          <source>The name of the package file to generate, not including the extension. For example, &lt;code&gt;cmake-2.6.1-Linux-i686&lt;/code&gt;. The default value is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea645e97b13d1eb72241195f136ea1b9f47d621" translate="yes" xml:space="preserve">
          <source>The name of the package vendor. (e.g., &amp;ldquo;Kitware&amp;rdquo;). The default is &amp;ldquo;Humanity&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3498a277d2ab7672c2d7231e42fd864c4f63ac" translate="yes" xml:space="preserve">
          <source>The name of the package version file must match that of the package configuration file but has either &lt;code&gt;-version&lt;/code&gt; or &lt;code&gt;Version&lt;/code&gt; appended to the name before the &lt;code&gt;.cmake&lt;/code&gt; extension. For example, the files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c09b2097b61bd91f3fc42935a1ad75a56a41a31" translate="yes" xml:space="preserve">
          <source>The name of the source package. For example &lt;code&gt;cmake-2.6.1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acafaa3b40572ac641f330c2ef1155462ee2591" translate="yes" xml:space="preserve">
          <source>The name of the top level project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371d45d6b821a234aa08c66c1b558b7d015de274" translate="yes" xml:space="preserve">
          <source>The name to be displayed for a component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d070d5953e04c49aecc5dafa6e5f03f4138d725f" translate="yes" xml:space="preserve">
          <source>The named &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; must have been created by a command such as &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and must not be an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f8fcea0268c49988f9e4da47401deef075aee2" translate="yes" xml:space="preserve">
          <source>The named &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; must have been created by a command such as &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and must not be an &lt;a href=&quot;../manual/cmake-buildsystem.7#alias-targets&quot;&gt;ALIAS target&lt;/a&gt;. If policy &lt;a href=&quot;../policy/cmp0079#policy:CMP0079&quot; id=&quot;index-0-policy:CMP0079&quot;&gt;&lt;code&gt;CMP0079&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt; then the target must have been created in the current directory. Repeated calls for the same &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; append items in the order called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382138c63570c4631739f2ad28d5960d9575041b" translate="yes" xml:space="preserve">
          <source>The named directory will be set as the current working directory of the child processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32cab0d2872a502365476f57f9461e7805a02cb" translate="yes" xml:space="preserve">
          <source>The named target must be created by &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; within the project or as an &lt;a href=&quot;../manual/cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED library&lt;/a&gt;. If it is created within the project an ordering dependency will automatically be added in the build system to make sure the named library target is up-to-date before the &lt;code&gt;&amp;lt;target&amp;gt;&lt;/code&gt; links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31ab7d6a41645762914172c44c79b27451c3bf8" translate="yes" xml:space="preserve">
          <source>The number of lines to include as context which follow an error message by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command. The default is 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f75e4d7c9c4c5b1706c64ae13b92638d13a1f1e" translate="yes" xml:space="preserve">
          <source>The number of lines to include as context which precede an error message by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command. The default is 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1a109c274de36bea70d4810bd01a938b5cb1f7" translate="yes" xml:space="preserve">
          <source>The number of matches with the last regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ebfd5d25f4978dd7e740aabcc7fb4a4ffe6e80" translate="yes" xml:space="preserve">
          <source>The number of parallel compile processes could be limited by defining pools with the global &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; property and then specifying here the pool name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c4fa36942b63230c1e419286411f7bd12cf5a5" translate="yes" xml:space="preserve">
          <source>The number of parallel link processes could be limited by defining pools with the global &lt;a href=&quot;../prop_gbl/job_pools#prop_gbl:JOB_POOLS&quot; id=&quot;index-0-prop_gbl:JOB_POOLS&quot;&gt;&lt;code&gt;JOB_POOLS&lt;/code&gt;&lt;/a&gt; property and then specifying here the pool name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472479172cef569a0a4c9dcee9983feb201dcb41" translate="yes" xml:space="preserve">
          <source>The old-style library dependencies file does not take into account per-configuration names of libraries or the &lt;a href=&quot;../prop_tgt/link_interface_libraries#prop_tgt:LINK_INTERFACE_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_INTERFACE_LIBRARIES&quot;&gt;&lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cadbf27a1b47c16cb696a1f6b5d08b5eb8f6b10" translate="yes" xml:space="preserve">
          <source>The option KDE3_ENABLE_FINAL to enable all-in-one compilation is no longer supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9733d3a1582e128032657a04d9331556d49996d8" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the argument of the opening &lt;code&gt;if&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd7ba138781ab64e2a79c10500e9f87ce7e6fd0" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the argument of the opening &lt;code&gt;while&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff2d7c035887f33175821c5754f26a7280040e4" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;format string&amp;gt;&lt;/code&gt; may contain the following format specifiers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470bf9c847620216dc5229a642208a92e321d8f4" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; argument of the opening &lt;code&gt;foreach&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828febdea1e147044923db7753986c59836d471f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;mode&amp;gt;&lt;/code&gt; keyword determines the type of message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a623b31437f0a3f20ce7763d1a3c85116964b624" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument of the opening &lt;code&gt;function&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e4273c4ee61416535ca928e1aff3ef594025c8" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument is supported for backward compatibility only. If used it must be a verbatim repeat of the &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument of the opening &lt;code&gt;macro&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c537ec50996a887513542a6cd5ea983fd0dbe804" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;UTC&lt;/code&gt; flag requests the current date/time representation to be in Coordinated Universal Time (UTC) rather than local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530cefe29f7f34827121fd6ab5cc80dba858f885" translate="yes" xml:space="preserve">
          <source>The optional name of the remote. If this option is not specified, it defaults to &lt;code&gt;origin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc030680dac1e5576f7a0a32beac02271b1de9f" translate="yes" xml:space="preserve">
          <source>The options are:</source>
          <target state="translated">Опции есть:</target>
        </trans-unit>
        <trans-unit id="2a2bfdecde870f0d23357e40c7eca9ad75e1fc1a" translate="yes" xml:space="preserve">
          <source>The options set on the &lt;code&gt;.qrc&lt;/code&gt; source file may override &lt;a href=&quot;../prop_tgt/autorcc_options#prop_tgt:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798d46295b31c896c3f8ce628302c7357ebda37c" translate="yes" xml:space="preserve">
          <source>The options set on the &lt;code&gt;.ui&lt;/code&gt; source file may override &lt;a href=&quot;../prop_tgt/autouic_options#prop_tgt:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_tgt:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d971ac1b0c5f37f8e460ccb3501da715321c4cd5" translate="yes" xml:space="preserve">
          <source>The options set on the target may be overridden by &lt;a href=&quot;../prop_sf/autorcc_options#prop_sf:AUTORCC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTORCC_OPTIONS&quot;&gt;&lt;code&gt;AUTORCC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the &lt;code&gt;.qrc&lt;/code&gt; source file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cc0304afae0ced519877f7bee242e20866124c" translate="yes" xml:space="preserve">
          <source>The options set on the target may be overridden by &lt;a href=&quot;../prop_sf/autouic_options#prop_sf:AUTOUIC_OPTIONS&quot; id=&quot;index-0-prop_sf:AUTOUIC_OPTIONS&quot;&gt;&lt;code&gt;AUTOUIC_OPTIONS&lt;/code&gt;&lt;/a&gt; set on the &lt;code&gt;.ui&lt;/code&gt; source file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae09b903eea6453c2eb69e3797f35a009ef48d19" translate="yes" xml:space="preserve">
          <source>The options unique to this command are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9344a83a9fd785e0a8087854a315258b87146d7" translate="yes" xml:space="preserve">
          <source>The order in this list is important, the first package type in the list is the least important, the last is the most important. the of a package can only be changed to higher types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2558e2023e451f0b17577c9932a6714bf16c27" translate="yes" xml:space="preserve">
          <source>The order of entries in this list matters when several versions of Matlab are installed. The priority is set according to the ordering in this list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6128279f042f41ba41931ed71da9cc0adcda187a" translate="yes" xml:space="preserve">
          <source>The osgDB debug library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9e20aba67bd450375dd3c721f7e89300777037" translate="yes" xml:space="preserve">
          <source>The osgDB library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29f69cfac2eeeb3480c4ba9d0f053ce3b781bef" translate="yes" xml:space="preserve">
          <source>The other actions are meant for use by software developers writing scripts in the &lt;a href=&quot;cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-0-manual:cmake-language(7)&quot;&gt;&lt;code&gt;CMake language&lt;/code&gt;&lt;/a&gt; to support their builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb15e64be3792b1e82108da32207de467e0af61" translate="yes" xml:space="preserve">
          <source>The output can be limited to a list of keys by passing an array of key names to the &amp;ldquo;keys&amp;rdquo; optional field of the &amp;ldquo;cache&amp;rdquo; request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9921268cba50667716f2646758409485393b40" translate="yes" xml:space="preserve">
          <source>The output must match this regular expression for the test to pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689be0ad0c03f9d7efa00c893004bb96db67e2e7" translate="yes" xml:space="preserve">
          <source>The parameters are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c515ba4949cbf83040646f3dd241b77a22e584" translate="yes" xml:space="preserve">
          <source>The parameters for &lt;code&gt;ctest_start()&lt;/code&gt; can be issued in any order, with the exception that &lt;code&gt;&amp;lt;model&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;binary&amp;gt;&lt;/code&gt; have to appear in that order with respect to each other. The following are all valid and equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758db9a08f2adf51e1b7bab347adc42329480e58" translate="yes" xml:space="preserve">
          <source>The patch level in integer form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a1dd7d82bde9289306b3b2af87efff378d576e" translate="yes" xml:space="preserve">
          <source>The patch version of Qt found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41770a98d9db696400ed6227ad5eb075df38a9b0" translate="yes" xml:space="preserve">
          <source>The patch version of lzma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747eaa7c9f651d4e6dd8203bce80cef6a0697048" translate="yes" xml:space="preserve">
          <source>The patch version of the package found, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8754fbe5d9757d9cb26b779b6b7c88134d92bfe" translate="yes" xml:space="preserve">
          <source>The patch version of the top level project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4deb15f398f5064cf94fcf53a8b03f4bb5a06a4a" translate="yes" xml:space="preserve">
          <source>The path entries in that target property should not be relative. High-level API should ensure that by adding either a source directory or a install directory prefix, as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ea282a4a6fabe01829348237057c96a4eb66e7" translate="yes" xml:space="preserve">
          <source>The path of the Xxx library (as used with &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761ef366dc5ca1ccea61b4db8b2dc0c7fc3a9b3c" translate="yes" xml:space="preserve">
          <source>The path of the Yy library that is part of the Xxx system. It may or may not be required to use Xxx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8da2b58c40ec2a14a01e5c8d616edc50c326678" translate="yes" xml:space="preserve">
          <source>The path to mesa includes, should contain &lt;code&gt;gl_mangle.h&lt;/code&gt;. The mesa headers are copied to the specified output directory. This allows mangled mesa headers to override other GL headers by being added to the include directory path earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387e1a2ff1b90eb0b52ae8a871927f5c8eb52fd9" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;dot&lt;/code&gt; command. If projects need to refer to the &lt;code&gt;dot&lt;/code&gt; executable directly, they should use the &lt;code&gt;Doxygen::dot&lt;/code&gt; import target instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de99a1eb6e5044a959c716fad0908730594ca958" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;doxygen&lt;/code&gt; command. If projects need to refer to the &lt;code&gt;doxygen&lt;/code&gt; executable directly, they should use the &lt;code&gt;Doxygen::doxygen&lt;/code&gt; import target instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493577ca08771db9b62de7507adda35cc36652e9" translate="yes" xml:space="preserve">
          <source>The path to the binary directory currently being processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c66f4b6cf146974b8f0b5ed20369b72e9c50beb" translate="yes" xml:space="preserve">
          <source>The path to the directory containing the &lt;code&gt;dot&lt;/code&gt; executable as reported in &lt;code&gt;DOXYGEN_DOT_EXECUTABLE&lt;/code&gt;. The path may have forward slashes even on Windows and is not suitable for direct substitution into a &lt;code&gt;Doxyfile.in&lt;/code&gt; template. If you need this value, get the &lt;a href=&quot;../prop_tgt/imported_location#prop_tgt:IMPORTED_LOCATION&quot; id=&quot;index-0-prop_tgt:IMPORTED_LOCATION&quot;&gt;&lt;code&gt;IMPORTED_LOCATION&lt;/code&gt;&lt;/a&gt; property of the &lt;code&gt;Doxygen::dot&lt;/code&gt; target and use &lt;a href=&quot;../command/get_filename_component#command:get_filename_component&quot; id=&quot;index-0-command:get_filename_component&quot;&gt;&lt;code&gt;get_filename_component()&lt;/code&gt;&lt;/a&gt; to extract the directory part of that path. You may also want to consider using &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(TO_NATIVE_PATH)&lt;/code&gt;&lt;/a&gt; to prepare the path for a Doxygen configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aefe992905eced5fc3dec16c8f6af7b854c68f2" translate="yes" xml:space="preserve">
          <source>The path to the source directory currently being processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3e2d0e7260846667980a4249dbbdcb944df526" translate="yes" xml:space="preserve">
          <source>The path to the test executable or the name of a CMake target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673833e98c36a6ebfb4b826338a205dd49755e56" translate="yes" xml:space="preserve">
          <source>The path to the top level of the build tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1e85a909be88a2219c3e4c9e8b78c65957b038" translate="yes" xml:space="preserve">
          <source>The path to the top level of the source tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e8743b3c556fedf19006d9612e3a76a71b9c053" translate="yes" xml:space="preserve">
          <source>The path to the xctest command line tool used to execute XCTest bundles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020d25ee72df24a058e43913688c108390e71617" translate="yes" xml:space="preserve">
          <source>The phonon target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41302b10fb77f0980bf3bbc20508a924f83828c" translate="yes" xml:space="preserve">
          <source>The prefix for each node in the graphviz file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3072cbc71276575005203d041d4be1bb9f0a373c" translate="yes" xml:space="preserve">
          <source>The prefix for import libraries that you link to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba85ca71aed04c0b08636b3c13616d644524ec3e" translate="yes" xml:space="preserve">
          <source>The prefix for loadable modules that you link to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf7b9db8093dc025311429d36992f133a8202b3" translate="yes" xml:space="preserve">
          <source>The prefix for shared libraries that you link to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd7e8708b57e87bd6992bf100b8f08498a70bb5" translate="yes" xml:space="preserve">
          <source>The prefix for static libraries that you link to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746019558c89a6d3ec44bbacf34d31e45100a355" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of a loadable module on this platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49278ad624fd16cd750d078c1c4678ca36967d0" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of a shared library, &lt;code&gt;lib&lt;/code&gt; on UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247578078bd4389f67138722d4e89ba3a64447e4" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of a static library, &lt;code&gt;lib&lt;/code&gt; on UNIX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c140bbce28b40469b5bb76c34695111f99c294" translate="yes" xml:space="preserve">
          <source>The prefix to use for the name of an import library if used on this platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c3bf6556ad1c87377554113aa82e344961c3e0" translate="yes" xml:space="preserve">
          <source>The prefix used in the built package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f661a4c04635c98524da6725b155fc2a5cba1f9a" translate="yes" xml:space="preserve">
          <source>The primary starting point for learning about CMake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffab2fd17f335501a1b8a9862731c7847f68bc7" translate="yes" xml:space="preserve">
          <source>The primary task of a find module is to determine whether a package exists on the system, set the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable to reflect this and provide any variables, macros and imported targets required to use the package. A find module is useful in cases where an upstream library does not provide a &lt;a href=&quot;cmake-packages.7#config-file-packages&quot;&gt;config file package&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7533c0aa587fdb18b73310ce256889b2ef736c64" translate="yes" xml:space="preserve">
          <source>The program in &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; will be found in the system search path or left as a full path. If &lt;code&gt;PROGRAM_ARGS&lt;/code&gt; is present with &lt;code&gt;PROGRAM&lt;/code&gt;, then any command-line arguments present in the &lt;code&gt;&amp;lt;FileName&amp;gt;&lt;/code&gt; string are split from the program name and stored in &lt;code&gt;&amp;lt;arg_var&amp;gt;&lt;/code&gt;. This is used to separate a program name from its arguments in a command line string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71654802dbbf98b220e40fba72392a9be4dbd06" translate="yes" xml:space="preserve">
          <source>The project could be configured to use one of the downloaded toolchains like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cd9fd7ba02cb96e3dc3246210d87326b59e703" translate="yes" xml:space="preserve">
          <source>The properties permitted to be set on or read from an &lt;code&gt;INTERFACE&lt;/code&gt; library are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5352fa6dcb1ae2eda9da30c134fd1b774ed42d" translate="yes" xml:space="preserve">
          <source>The properties set on the generated IMPORTED targets will have the same values as the final values of the input TARGETS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db1528adb176abacc985fb6033a986753649f60" translate="yes" xml:space="preserve">
          <source>The property can contain multiple list entries, each of which has to match the following format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d652639af835cc075b39a1d4eba63d5893af9c4" translate="yes" xml:space="preserve">
          <source>The property is currently only supported by the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/cpack_gen/wix.html#cpack_gen:CPack%20WIX%20Generator&quot; id=&quot;index-0-cpack_gen:CPack WIX Generator&quot;&gt;&lt;code&gt;CPack WIX Generator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866ddb4ff3305ee7d76c0a1cbe1a1100b479b274" translate="yes" xml:space="preserve">
          <source>The property must be set to a semicolon-separated list of &lt;code&gt;key=value&lt;/code&gt; pairs. Each such pair will be transformed into an entry in the solution global section. Whitespace around key and value is ignored. List elements which do not contain an equal sign are skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f234efb5d6fe9a3b473a2f364deb0eb3817b1107" translate="yes" xml:space="preserve">
          <source>The property must be set to the name of an existing target. This will cause that project to be listed first in the generated solution file causing Visual Studio to make it the startup project if the solution has never been opened before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6b6b35d0d9fecf780bd7d7d817066ca3d5c538" translate="yes" xml:space="preserve">
          <source>The protobuf libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03b6193170ba4a2c20d62459b91084642e0acc0" translate="yes" xml:space="preserve">
          <source>The protobuf library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48720c814533c7b7b6636e7eedab88741fc033f9" translate="yes" xml:space="preserve">
          <source>The protobuf library (debug)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2650acff070f276c19162aa05f09fd4cf3b44279" translate="yes" xml:space="preserve">
          <source>The protobuf library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c84184a01676ec3497b5bb78c511a981baaed89" translate="yes" xml:space="preserve">
          <source>The protobuf lite library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e7731ee4abf966d682d781062129c813618edf" translate="yes" xml:space="preserve">
          <source>The protobuf lite library (debug)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3110a7e942d3b67fdff32b1247fe123c88d19d8f" translate="yes" xml:space="preserve">
          <source>The protobuf lite library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe76ee6c476a785268e65c827ae13fdd939bcfc1" translate="yes" xml:space="preserve">
          <source>The protobuf-lite libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7ac0f0713649d59acbff5fed3a5a3967a3f68b" translate="yes" xml:space="preserve">
          <source>The protoc compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094d7dab5861a5d1b502f6d24e2bbdce2377c6fd" translate="yes" xml:space="preserve">
          <source>The protoc compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fd803373bae0678ced3082cff9c07dc21235cb" translate="yes" xml:space="preserve">
          <source>The protoc libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67bd1f75b9fc0444a0ced5c8e41099016141d9f" translate="yes" xml:space="preserve">
          <source>The protoc library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c363028dd3ae380cb8fdffaaba9ec9385fae9fb1" translate="yes" xml:space="preserve">
          <source>The protoc library (debug)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f21ef7d6b8384bc06cc28823442fcc943ff6cd9" translate="yes" xml:space="preserve">
          <source>The protoc library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831bea72899a52bd35cd0e2f4468204fcd3cb41c" translate="yes" xml:space="preserve">
          <source>The protocol aims to provide information to tooling to satisfy several needs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fcd95299c75bad5c63b652c87e61eb76602ab82" translate="yes" xml:space="preserve">
          <source>The protocol is designed to be useful to IDEs, refactoring tools, and other tools which have a need to understand the buildsystem in entirety.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198c883d8a4820112f7d698a968b83a99e71b2f2" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[ \t\r\n]&quot;&lt;/code&gt; specifies a regex that matches any single whitespace character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb260368c9a748077e2f7bb1cf2641ded184e0f0" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[/\\]&quot;&lt;/code&gt; specifies a regex that matches a single forward slash &lt;code&gt;/&lt;/code&gt; or backslash &lt;code&gt;\&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c237201d36a9240d67f1e82c725faaa9f8ade1" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;[A-Za-z0-9_]&quot;&lt;/code&gt; specifies a regex that matches any single &amp;ldquo;word&amp;rdquo; character in the C locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e250217d3bf3a529d1d2967ab005929f3cdc2700" translate="yes" xml:space="preserve">
          <source>The quoted argument &lt;code&gt;&quot;\\(\\a\\+b\\)&quot;&lt;/code&gt; specifies a regex that matches the exact string &lt;code&gt;(a+b)&lt;/code&gt;. Each &lt;code&gt;\\&lt;/code&gt; is parsed in a quoted argument as just &lt;code&gt;\&lt;/code&gt;, so the regex itself is actually &lt;code&gt;\(\a\+\b\)&lt;/code&gt;. This can alternatively be specified in a &lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt; without having to escape the backslashes, e.g. &lt;code&gt;[[\(\a\+\b\)]]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77dce416a0548e7f996511d2a442d222eac6b5b6" translate="yes" xml:space="preserve">
          <source>The real data files named by expanded &lt;code&gt;DATA{}&lt;/code&gt; references may be made available under &lt;code&gt;ExternalData_BINARY_ROOT&lt;/code&gt; using symbolic links on some platforms. The &lt;code&gt;ExternalData_NO_SYMLINKS&lt;/code&gt; variable may be set to disable use of symbolic links and enable use of copies instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5d63ccc73ea21c633b67126b20c62b5acc0c27" translate="yes" xml:space="preserve">
          <source>The referenced variables may contain the absolute paths to libraries and include directories &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;. This would create a package with hard-coded paths to dependencies and not suitable for relocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f96c7b7859944e72577d4375755bdd5deff6b6" translate="yes" xml:space="preserve">
          <source>The registries are especially useful to help projects find packages in non-standard install locations or directly in their own build trees. A project may populate either the user or system registry (using its own means, see below) to refer to its location. In either case the package should store at the registered location a &lt;a href=&quot;#package-configuration-file&quot;&gt;Package Configuration File&lt;/a&gt; (&lt;code&gt;&amp;lt;PackageName&amp;gt;Config.cmake&lt;/code&gt;) and optionally a &lt;a href=&quot;#package-version-file&quot;&gt;Package Version File&lt;/a&gt; (&lt;code&gt;&amp;lt;PackageName&amp;gt;ConfigVersion.cmake&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff58885d0a9c7e4f279c402cafcde33f2189660" translate="yes" xml:space="preserve">
          <source>The replace expression may refer to paren-delimited subexpressions of the match using &lt;code&gt;\1&lt;/code&gt;, &lt;code&gt;\2&lt;/code&gt;, &amp;hellip;, &lt;code&gt;\9&lt;/code&gt;. Note that two backslashes (&lt;code&gt;\\1&lt;/code&gt;) are required in CMake code to get a backslash through argument parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b1ab7bd5cfaba14fe9f1d2252bdd68e09e2666" translate="yes" xml:space="preserve">
          <source>The reply index file contains a JSON object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecf23f15a38ddb486512f6964d897785f7f322a" translate="yes" xml:space="preserve">
          <source>The reply index file represents each reference to another reply file using a JSON object with members:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f31718f94ac86520fe999becd1c3d96b9208e6" translate="yes" xml:space="preserve">
          <source>The reply will contain a key &amp;ldquo;configurations&amp;rdquo;, which will contain a list of configuration objects. Configuration objects are used to destinquish between different configurations the build directory might have enabled. While most generators only support one configuration, others might support several.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
