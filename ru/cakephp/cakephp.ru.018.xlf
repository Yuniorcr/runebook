<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="cakephp">
    <body>
      <group id="cakephp">
        <trans-unit id="6514211b93dd9514ab0d89e44d17f16881ec644f" translate="yes" xml:space="preserve">
          <source>HelperRegistry::__get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7e5ce52bdc416a338a92f0794d5528f9d68bba" translate="yes" xml:space="preserve">
          <source>HelperRegistry::__isset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0213995a8bd287ad62f82d79668ffa7cd39a9d3d" translate="yes" xml:space="preserve">
          <source>HelperRegistry::_create()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654602255f8c858c4595c9aa89c3037a569fd153" translate="yes" xml:space="preserve">
          <source>HelperRegistry::_resolveClassName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bea54ce0bfd58e536679d78396a8855590480a" translate="yes" xml:space="preserve">
          <source>HelperRegistry::_throwMissingClassError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450b1e0d9fc6b7ec3f00d25e78e4fa5fc8f33e94" translate="yes" xml:space="preserve">
          <source>HelperRegistry::setIo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206b8ecf111df78ec24a1026fb47ad402a1b946f" translate="yes" xml:space="preserve">
          <source>Helpers collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c60fb0749479c0154031de1575be55ce87c894" translate="yes" xml:space="preserve">
          <source>Helpers list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627b7c88ecc00e59edff0903af295805c01456cd" translate="yes" xml:space="preserve">
          <source>Helpers support a number of callback methods. These callbacks allow you to hook into the various view lifecycle events and either modify existing view content or perform other application specific logic. The events are not implemented by this base class, as implementing a callback method subscribes a helper to the related event. The callback methods are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55326dcb7e51b84d78dc99a6f83d77bfd632d4ef" translate="yes" xml:space="preserve">
          <source>Helpers to be used in render</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68d50cd1d35208e4e24b6ee51845a4c509ab0fc" translate="yes" xml:space="preserve">
          <source>Helpers to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc0a54ab1b41a6a117aa7e5034b08de16008efb" translate="yes" xml:space="preserve">
          <source>Helpers used by RSS Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d19ac73a4c00092906fd4be642c00930be86da" translate="yes" xml:space="preserve">
          <source>Helps calling the &lt;code&gt;and()&lt;/code&gt; and &lt;code&gt;or()&lt;/code&gt; methods transparently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b64560eb1546e9f4225ee2291a61468970946e" translate="yes" xml:space="preserve">
          <source>Helps generate SQL with the correct number of placeholders and bind values correctly into the statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae6b6457719c3e1c9d3764f022ec5219f401a0b" translate="yes" xml:space="preserve">
          <source>Helps join &lt;code&gt;uploadError&lt;/code&gt;, &lt;code&gt;fileSize&lt;/code&gt; and &lt;code&gt;mimeType&lt;/code&gt; into one higher level validation method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbe9da2536dbc9ff5dbe1e01a047ea3c4b0ee9a" translate="yes" xml:space="preserve">
          <source>Highlights a given phrase in a text. You can specify any expression in highlighter that may include the \1 expression to include the $phrase found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51f3e959b6ca796d83151fe437e017e4e6958b0" translate="yes" xml:space="preserve">
          <source>Hints this object to associate the correct types when casting conditions for the database. This is done by extracting the field types from the schema associated to the passed table object. This prevents the user from repeating themselves when specifying conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf162f2ce72f3c6be206cfd575dbfd7e60e79f83" translate="yes" xml:space="preserve">
          <source>Holds HTTP response statuses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc868143655dcd0faeb5b1e967ff235e65928760" translate="yes" xml:space="preserve">
          <source>Holds a cached list of getters/setters per class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b186e9f6e6f7728900092c8f10b0b0e057a2b29b" translate="yes" xml:space="preserve">
          <source>Holds a list of all loaded plugins and their configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eafc3e165e2baee16868e85f153258685f832c5" translate="yes" xml:space="preserve">
          <source>Holds a list of the properties that were modified or added after this object was originally created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b976fca92793a03131f50a1d89335ec89a2328b" translate="yes" xml:space="preserve">
          <source>Holds a reference to the container test suite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da61a030ccd6808ab2304603cc7e427e744b107" translate="yes" xml:space="preserve">
          <source>Holds all passed params.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc886c3cb687114c30a9a4aac3ce0c1beab27ae" translate="yes" xml:space="preserve">
          <source>Holds all properties and their values for this entity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026d2dffc959040187abc42c29ed314a07b3bb35" translate="yes" xml:space="preserve">
          <source>Holds all properties that have been changed and their original values for this entity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec5cdfd04eb2da8381db15218090ab634f0df7e" translate="yes" xml:space="preserve">
          <source>Holds all the cache directives that will be converted into headers when sending the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472e9b969f0d3621a52b040220d0a32251af77b7" translate="yes" xml:space="preserve">
          <source>Holds an array of errors messages set in this class. These are used for debugging purposes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5e4f97048c8db58d97817a82a6e35a5a3c477b" translate="yes" xml:space="preserve">
          <source>Holds an array of paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ba7c28ca183c2782326134197a0118c0f3f4ad" translate="yes" xml:space="preserve">
          <source>Holds an array of plugin paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ea842c32cf340b89ae95f3f332bdd39068ae5f" translate="yes" xml:space="preserve">
          <source>Holds any custom options passed using applyOptions that could not be processed by any method in this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de0665a4ccb9248be05a5d73b0f2ea38957c06c" translate="yes" xml:space="preserve">
          <source>Holds array of complete directory paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5e8477649b21384db887f8e348dd64375cf755" translate="yes" xml:space="preserve">
          <source>Holds array of complete file paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43acc4fdfe625ea5a2bf09675d66d9444bbd11c0" translate="yes" xml:space="preserve">
          <source>Holds current output data when outputFormat is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab496107666a26da49b99f8176d28bc2ab1a074b" translate="yes" xml:space="preserve">
          <source>Holds errors from last method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c118c3747db3d97d04a57332f831dfa62c0c2a30" translate="yes" xml:space="preserve">
          <source>Holds messages from last method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c68eda240089c19d03d6e834f63ff070a05262b" translate="yes" xml:space="preserve">
          <source>Holds onto plugin objects loaded into an application, and provides methods for iterating, and finding plugins based on criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d99fdf19c847c50215f062d15a9bd75a4f0fc7" translate="yes" xml:space="preserve">
          <source>Holds the ValidationRule objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45c42bb447971fbc8fa9c95b2a3d17c58172a4a" translate="yes" xml:space="preserve">
          <source>Holds the ValidationSet objects array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868a51849e8fa81375056ccfca460d086bd6b330" translate="yes" xml:space="preserve">
          <source>Holds the count of records in this result set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a252d5ffbaf0dd5855de3032eb807f4b57f846" translate="yes" xml:space="preserve">
          <source>Holds the current action of the controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b9bcd821a64d662bca0de6efbfcc3eff8d749f" translate="yes" xml:space="preserve">
          <source>Holds the file handler resource if the file is opened</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7befcfccc59f6ba0e84723fdcf3c03f9bcb6f10" translate="yes" xml:space="preserve">
          <source>Holds the fixture classes that where instantiated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c93914f5141a2a513c60cdceef4ae534ce7b23" translate="yes" xml:space="preserve">
          <source>Holds the fixture classes that where instantiated indexed by class name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88496c5928729472104649fda4aead475fb2fc50" translate="yes" xml:space="preserve">
          <source>Holds the identifier string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad71ba4c251e63d7eadadf103bfef747c336b970" translate="yes" xml:space="preserve">
          <source>Holds the list of password hasher objects that will be used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10dcb0da6a7b018f4e41eaa4fcb20b70a0105ea" translate="yes" xml:space="preserve">
          <source>Holds the name of the class for the instance object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199c01c5d0a20309894d53e4c035e955cff3fd58" translate="yes" xml:space="preserve">
          <source>Holds the original data that needs to be processed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c5bbaaeb996c3a8d9ce70636e7b1cc868b59c6" translate="yes" xml:space="preserve">
          <source>Holds the results as emitted during the reduce phase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272f26dea0f5bc015badf63cbf3fb2b5933b59be" translate="yes" xml:space="preserve">
          <source>Holds the shuffled results that were emitted from the map phase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6253d5abfc1960b89322e816679d45f3255d8748" translate="yes" xml:space="preserve">
          <source>Holds the validation string domain to use for validation messages when extracting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39b3282dd0de5de279c60414e1423bb9a11af09" translate="yes" xml:space="preserve">
          <source>Holds the value which the unary expression operates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3aee054befa69929358b2d41859f6271552e459" translate="yes" xml:space="preserve">
          <source>Holds type key to mime type mappings for known mime types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba74a53544a0a40e7f7c2adf8d771a7386711d96" translate="yes" xml:space="preserve">
          <source>Holds whether the values collection is still valid. (has more records)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54d8199a33ebbcfd033a26cfd9d41ffd7474d38" translate="yes" xml:space="preserve">
          <source>Holds whether this call should extract the CakePHP Lib messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b1d563705a8e32538647f8e65bfabe92f62b01" translate="yes" xml:space="preserve">
          <source>Hook method for defining this command's option parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0345205ecd8541a98535ae1378e7f2c25e3b259b" translate="yes" xml:space="preserve">
          <source>Hook method invoked by CakePHP when a command is about to be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c543456504559905848bb09f0581ff3fe3192139" translate="yes" xml:space="preserve">
          <source>Hook method to be implemented in subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67da05e8607d05210d7f812de3baf9172d2bc451" translate="yes" xml:space="preserve">
          <source>Host name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8206fa86008d5b59923bb7eb96d8b71d24e34d30" translate="yes" xml:space="preserve">
          <source>How many places to move the node or true to move to last position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e0a37766d89f4495b1c801c9127b7c5180542d" translate="yes" xml:space="preserve">
          <source>How many places to move the node, or true to move to first position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b71915139accf2694f8386e97ff139cabdc787b" translate="yes" xml:space="preserve">
          <source>How many places to move the node, or true to move to last position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a49ea14557820ca430b25abac04f72c1a80539" translate="yes" xml:space="preserve">
          <source>How much to add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26085df63065369f688996288b0ed7652a9ae67f" translate="yes" xml:space="preserve">
          <source>How much to increment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57325807ac302a83837b13c53fe41bf5be7d9e1" translate="yes" xml:space="preserve">
          <source>How much to subtract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5bb307fc84d1aaf45f2e787b5fb015afa93dd8" translate="yes" xml:space="preserve">
          <source>Html Helper class for easy use of HTML widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29ab77ffa647a661302a5ee29d13ae3d85e1ad2" translate="yes" xml:space="preserve">
          <source>Html message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2de5eeffd5c4da84c47fd7e069281095e543b03" translate="yes" xml:space="preserve">
          <source>HtmlHelper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5898d1ce6ef39d88dbb4f37e33c4a0d3bd48db" translate="yes" xml:space="preserve">
          <source>HtmlHelper (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac1094bffe39f2ec72017e62e1355642603974c" translate="yes" xml:space="preserve">
          <source>HtmlHelper encloses all methods needed while working with HTML pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9b419c73c3644e7431fcc30dd4a66e1c6965e3" translate="yes" xml:space="preserve">
          <source>HtmlHelper::$Url</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fe044a7f3999a9846dc945bfef63ddd99c7b12" translate="yes" xml:space="preserve">
          <source>HtmlHelper::$_crumbs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76f7019082324436efd57779f3f9b4256ca42a9" translate="yes" xml:space="preserve">
          <source>HtmlHelper::$_defaultConfig</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71fd53396f2c576c49f46b8b65d8f129d3f0a42" translate="yes" xml:space="preserve">
          <source>HtmlHelper::$_docTypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6996cf01ff3a08fc02367281b06ac3f2ea7c30af" translate="yes" xml:space="preserve">
          <source>HtmlHelper::$_includedAssets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7041330cf5ea33ee8592a8441144f6d16cf47bdd" translate="yes" xml:space="preserve">
          <source>HtmlHelper::$_scriptBlockOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6ce6dbf6d3c99f9d72b73a4707f5d318cd7535" translate="yes" xml:space="preserve">
          <source>HtmlHelper::$helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488e2374d77ea688981a92ec0f58128b015769a4" translate="yes" xml:space="preserve">
          <source>HtmlHelper::$response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40ba678bb055cfc51b41b9fbfc88852d16519ff" translate="yes" xml:space="preserve">
          <source>HtmlHelper::__construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04da37a2758ce25c15521809f80be102b39074b" translate="yes" xml:space="preserve">
          <source>HtmlHelper::_nestedListItem()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5723608ab90f65df617c7ba13e45bd6135ca6fa" translate="yes" xml:space="preserve">
          <source>HtmlHelper::_prepareCrumbs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f792497b76bc71afcb8d582458067409ed1955a3" translate="yes" xml:space="preserve">
          <source>HtmlHelper::_renderCells()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ad3db40c5ccf9c7402206d2cffe659048c2683" translate="yes" xml:space="preserve">
          <source>HtmlHelper::addCrumb()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07733737822100adecd30e0d9e40b410af5f8827" translate="yes" xml:space="preserve">
          <source>HtmlHelper::charset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e9cb25613570cfbea077972feb770be500553b" translate="yes" xml:space="preserve">
          <source>HtmlHelper::css()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e603b822b57f6caa0463f8fb5779981bf0579f" translate="yes" xml:space="preserve">
          <source>HtmlHelper::div()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bfca1b38ddbaef6b8c826c3e6c59c7ac4da2e2" translate="yes" xml:space="preserve">
          <source>HtmlHelper::docType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b0a2d4a47647b54e527563e01f2b022bb11f1f" translate="yes" xml:space="preserve">
          <source>HtmlHelper::getCrumbList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a699d82cd191348fbee8358e01dbc290e40f5d97" translate="yes" xml:space="preserve">
          <source>HtmlHelper::getCrumbs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec943d7ecaa2d2713684ec817e99cb838b79c3bc" translate="yes" xml:space="preserve">
          <source>HtmlHelper::image()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdd1c9f67a5e321bf8d5b6ad7134ca27ce6f048" translate="yes" xml:space="preserve">
          <source>HtmlHelper::implementedEvents()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f6d61f31cda3b3717191d5dca33824f6404a08" translate="yes" xml:space="preserve">
          <source>HtmlHelper::link()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd690455d04388ae86d776717864800155060df" translate="yes" xml:space="preserve">
          <source>HtmlHelper::media()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e945ee54cc064de90816106fb8e0f7f5540aed" translate="yes" xml:space="preserve">
          <source>HtmlHelper::meta()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4c491cb78ee3f17968153771f8ea4374089b70" translate="yes" xml:space="preserve">
          <source>HtmlHelper::nestedList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ea480e3e7a6bc945ab14c037a32d51a7d53c08" translate="yes" xml:space="preserve">
          <source>HtmlHelper::para()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0829cbba21b8b6c9759a422e43fd9c9d55c7e3e9" translate="yes" xml:space="preserve">
          <source>HtmlHelper::script()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d028ab97d50d8f23568ab32391b66b34d79f28" translate="yes" xml:space="preserve">
          <source>HtmlHelper::scriptBlock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8126c5f3adba5d1b9a4bee5fae0be1a69c6e49" translate="yes" xml:space="preserve">
          <source>HtmlHelper::scriptEnd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d476630c93acb2195a3fac644a3983b51f079ea" translate="yes" xml:space="preserve">
          <source>HtmlHelper::scriptStart()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d3064d7406c664802edd9a663a3833caf39205" translate="yes" xml:space="preserve">
          <source>HtmlHelper::style()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5f0c964e7530af448521467f915a8a1d85f03b" translate="yes" xml:space="preserve">
          <source>HtmlHelper::tableCell()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cfff27119bc04df70a265179421d45673bb1738" translate="yes" xml:space="preserve">
          <source>HtmlHelper::tableCells()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d9a11b76888315b5630250463f2a112e7e8e70" translate="yes" xml:space="preserve">
          <source>HtmlHelper::tableHeaders()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49a96f3e4efd25ab8ebe6442149f43376a13ecf" translate="yes" xml:space="preserve">
          <source>HtmlHelper::tableRow()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42dcf6868255f2f1ed84582fb383ca6a619183fb" translate="yes" xml:space="preserve">
          <source>HtmlHelper::tag()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5c6c62bf80b8c73f40fbbb8ffdc8cf06e4cb8f" translate="yes" xml:space="preserve">
          <source>Http</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c15df5e57009459379229d9a537d3f97d4b041" translate="yes" xml:space="preserve">
          <source>Http client object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79730dc3715e79ddf3b738d65baa077e6a6fb08" translate="yes" xml:space="preserve">
          <source>HttpApplicationInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2133e5316d54571f524f77ad55929bf7fdb9b629" translate="yes" xml:space="preserve">
          <source>HttpApplicationInterface (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a431695d2045d6b0bbe41e54517308310696fc" translate="yes" xml:space="preserve">
          <source>HttpApplicationInterface::__invoke()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8870c4bc6b21a6e9eda2777d7fe2cd9a941f6c0e" translate="yes" xml:space="preserve">
          <source>HttpApplicationInterface::bootstrap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e32f36bd516a005a7982dbd894ec6ecd6096b20" translate="yes" xml:space="preserve">
          <source>HttpApplicationInterface::middleware()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0258f45a0efffdd71dd04f45590e34e47c5d92" translate="yes" xml:space="preserve">
          <source>HttpApplicationInterface::routes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e788520269a8d2f4bace94042d1b25ee2e6475e" translate="yes" xml:space="preserve">
          <source>HttpException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7aadcf5287187c3b235c16f747036e8aa2a16f7" translate="yes" xml:space="preserve">
          <source>Http\Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c26c9a24f3b606cbccd327a984100747033684" translate="yes" xml:space="preserve">
          <source>Http\Client\Adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df78df1a48d7616d1aed8fa0e8928b8cae4a0d89" translate="yes" xml:space="preserve">
          <source>Http\Client\Auth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9babacd8a414ee3543a4d0f93e07fa84e3e49c" translate="yes" xml:space="preserve">
          <source>Http\Cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45244cdf3d4f52a0cb560248cc5af2cbc345f80" translate="yes" xml:space="preserve">
          <source>Http\Middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87806d1599f6a29336f3306703fc1e3de1fc2ef" translate="yes" xml:space="preserve">
          <source>Http\Session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce033781b9603bda62502457f3838c8c11578e4" translate="yes" xml:space="preserve">
          <source>Human name giving to this particular instance. Multiple objects representing the same database table can exist by using different aliases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1413985dabc855a436dd69b7d775492209b8ef5" translate="yes" xml:space="preserve">
          <source>Human readable size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f069a7d8013eddc33bab68bbeea61e53af49d9d" translate="yes" xml:space="preserve">
          <source>Human-readable string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de096a50fc97ac768c8f4b470a6dd29284487f13" translate="yes" xml:space="preserve">
          <source>Hydrate many entities and their associated data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3af78b90e34d190f5dc488d0c3e0c5a2a8d8c00" translate="yes" xml:space="preserve">
          <source>Hydrate one entity and its associated data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2bd2f3434ca97391c10395240c6f0082f267bb" translate="yes" xml:space="preserve">
          <source>I18n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef76ac19646422e150de1a9ae7e89898641e380" translate="yes" xml:space="preserve">
          <source>I18n handles translation of Text and time format strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939290dffd0f7c46812c42b33bdbbe28078011c1" translate="yes" xml:space="preserve">
          <source>I18nShell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d0cf106ef8c9d21010666b4d83234f953a313d" translate="yes" xml:space="preserve">
          <source>I18nShell (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be87267cf85b42b6fcb2ec3250034de0dbd6280" translate="yes" xml:space="preserve">
          <source>I18nShell::$Extract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78a802ef7aefe3f963e258174425f556063febf" translate="yes" xml:space="preserve">
          <source>I18nShell::$_paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d7d5d01c6a30218758b623cc95b65223dcf35c" translate="yes" xml:space="preserve">
          <source>I18nShell::$tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5ac7f8db785e92032e32dd14108687299851c5" translate="yes" xml:space="preserve">
          <source>I18nShell::getOptionParser()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5c98e675918bbb93d8e291da2d76049517c9cf" translate="yes" xml:space="preserve">
          <source>I18nShell::init()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156ebdc2eeffdda1536307fe16402d255cc3bcf4" translate="yes" xml:space="preserve">
          <source>I18nShell::main()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d760972934dbf28108f444ee70cfd8abac1fe9d" translate="yes" xml:space="preserve">
          <source>I18n\Formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abfefa4b3dfc40926d26f869ba77d7ad3dddcb2" translate="yes" xml:space="preserve">
          <source>I18n\Middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897589653d6e4c8a8798fd16d7815c09a727b56f" translate="yes" xml:space="preserve">
          <source>I18n\Parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef256cb0afb3183ccd2b155ff356ce9e1f11566" translate="yes" xml:space="preserve">
          <source>ID that uniquely identifies session in cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67fdf0273d9ff7215101f800a8acea2cd65707a" translate="yes" xml:space="preserve">
          <source>ID that uniquely identifies session in database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a1caa5a191378660330a2316dc747ce9d779fb" translate="yes" xml:space="preserve">
          <source>IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d68eb41b0bf6d9f4a1f3670230185ea623a1f26" translate="yes" xml:space="preserve">
          <source>IP addresses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015060dc30613c816711fa8cfb3b9b2e4d12738f" translate="yes" xml:space="preserve">
          <source>IcuFormatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316c7a59cb6a56f767102fbd904e2c3e6bea2a7b" translate="yes" xml:space="preserve">
          <source>IcuFormatter (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6c70ae8aed99a4fa46a75513cc6cf479cb5093" translate="yes" xml:space="preserve">
          <source>IcuFormatter::_formatMessage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e597f3672f6eb2b44ca80d34df0ce57776b845" translate="yes" xml:space="preserve">
          <source>IcuFormatter::format()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eacb35ccd0170459299a9f94028114d8a46cee96" translate="yes" xml:space="preserve">
          <source>Id to replace the current session id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399dc79fb780410f4401a646a9dade63880e161d" translate="yes" xml:space="preserve">
          <source>IdGeneratorTrait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed15192888bfbd020bb2c65496aa6a0cdf318f64" translate="yes" xml:space="preserve">
          <source>IdGeneratorTrait (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee85327233b14236d6f97a542dde3e2ee54e6757" translate="yes" xml:space="preserve">
          <source>IdGeneratorTrait::$_idPrefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4eb5a9d4fffc37d360dc8164eea15d691a830d6" translate="yes" xml:space="preserve">
          <source>IdGeneratorTrait::$_idSuffixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6abdd6a8e274c0f36662cd944a111e03a67398c" translate="yes" xml:space="preserve">
          <source>IdGeneratorTrait::_clearIds()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe84a29da090e580b5e4b57f2cde887aa5e12a1" translate="yes" xml:space="preserve">
          <source>IdGeneratorTrait::_domId()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff97ec7f2cd2089316ef15e9ce02d718416788df" translate="yes" xml:space="preserve">
          <source>IdGeneratorTrait::_id()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0ad99768b4e781ba7c59d11887ef6c6636bd0d" translate="yes" xml:space="preserve">
          <source>IdGeneratorTrait::_idSuffix()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6c91bb49a501f5df0cad522ac68e763fccd62f" translate="yes" xml:space="preserve">
          <source>Identifier for the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc940479d4a80385d794a3da10cbcadec1425fc6" translate="yes" xml:space="preserve">
          <source>Identifier for the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2576a22c355b925a64a90e66eae38af8f9a4eb09" translate="yes" xml:space="preserve">
          <source>Identifier name for this type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9969cd82215d2adb285e5ccbcdeba7c521c034" translate="yes" xml:space="preserve">
          <source>Identifier name for this type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c414249dbd06ed684233b67d59aa5dc5e957ffb1" translate="yes" xml:space="preserve">
          <source>Identifier values are unsafe with user supplied data. Values will be quoted when identifier quoting is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e0660c657e9ad6d77c23a3192a99ebe1d33483" translate="yes" xml:space="preserve">
          <source>IdentifierExpression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2441273b6e23c102eaa61dd801d0f9bb002e9c" translate="yes" xml:space="preserve">
          <source>IdentifierExpression (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9df7e5668b653c5685da63198567523322148cc" translate="yes" xml:space="preserve">
          <source>IdentifierExpression::$_identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f485c5aa73480604d7f7e35903e72186a5ab125b" translate="yes" xml:space="preserve">
          <source>IdentifierExpression::__construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8fbb8f675120445ecbcc615d09c92f8f086110" translate="yes" xml:space="preserve">
          <source>IdentifierExpression::getIdentifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6099cc0794a23de23debb5d475d02c600023c8f" translate="yes" xml:space="preserve">
          <source>IdentifierExpression::setIdentifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e94f030602166c86d7a4cff6ba98d18e3d42663" translate="yes" xml:space="preserve">
          <source>IdentifierExpression::sql()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c564fb3145bf6b4fc805f7c5ea86b05fe57985" translate="yes" xml:space="preserve">
          <source>IdentifierExpression::traverse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7261f7fdabafaa89e8a5a4d73c81294fa167f763" translate="yes" xml:space="preserve">
          <source>If $_SERVER['HTTP_RANGE'] is set a slice of the file will be returned instead of the entire file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0585e5fb3809ee73b23d8dc0cf6a5f2ee0098e79" translate="yes" xml:space="preserve">
          <source>If $check is passed as a string, $regex must also be set to valid regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abcda9b1a3ec2275d33cc663c39bb201e1d48b9" translate="yes" xml:space="preserve">
          <source>If $code is an integer, then the corresponding code/message is returned if it exists, null if it does not exist. If $code is an array, then the keys are used as codes and the values as messages to add to the default HTTP codes. The codes must be integers greater than 99 and less than 1000. Keep in mind that the HTTP specification outlines that status codes begin with a digit between 1 and 5, which defines the class of response the client is to expect. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15e2a1b998d91d24099fcf81108a45886be0b92" translate="yes" xml:space="preserve">
          <source>If $keys is neither an array nor a Traversable, or if any of the $keys are not a legal value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6adc176f6ea905edd3f8c2419ca509537d1b52d2" translate="yes" xml:space="preserve">
          <source>If $lower and $upper are set, the range is inclusive. If they are not set, will return true if $check is a legal finite on this platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c90e3e7f31aa786de09c815d6006e0ebf2183e7" translate="yes" xml:space="preserve">
          <source>If $secureAttributes is set, these HTML attributes will be merged into the hidden input tags generated for the Security Component. This is especially useful to set HTML5 attributes like 'form'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186c448485a4100484958d81a462f1dfc7caf36b" translate="yes" xml:space="preserve">
          <source>If $type is a friendly type name that is associated with more than one type of content, $index is used to select which content-type to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbc7b7905f078b004372f8d16bc83b1b0701893" translate="yes" xml:space="preserve">
          <source>If $type is null or not provided, the first content-type in the list, based on preference, is returned. If a single type is provided a boolean will be returned if that type is preferred. If an array of types are provided then the first preferred type is returned. If no type is provided the first preferred type is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fd4d91f2c1657b53e8fec88c106bf7d034faf2" translate="yes" xml:space="preserve">
          <source>If $type is null then array with current map, if $className is null string configured class name for give $type, null otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f10729a7c207d6929c2ca2b31b404316371092" translate="yes" xml:space="preserve">
          <source>If $url starts with &quot;http://&quot; this is treated as an external link. Else, it is treated as a path to controller/action and parsed with the UrlHelper::build() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c21a5c96f2e4b923bea47d3b2e199040ad45f77" translate="yes" xml:space="preserve">
          <source>If $values is neither an array nor a Traversable, or if any of the $values are not a legal value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c12cc1adbc629a9a794724c9c2c1f7cdc68906" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$_SERVER['HTTP_RANGE']&lt;/code&gt; is set, a slice of the file will be returned instead of the entire file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b757f4d9c3ddb92987cb74c69dff9ed40a6197f8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;$startText&lt;/code&gt; is an array, the accepted keys are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ac024e53df7f88f6d263f3486aa4dda23505da" translate="yes" xml:space="preserve">
          <source>If Association|Table is not passed in first argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ceb0742e4e0430d7e237ff1f516315197f3ff4" translate="yes" xml:space="preserve">
          <source>If Cell class does not specified cell action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec45c739aa76765276ce2d6a83acdee2e1905cb" translate="yes" xml:space="preserve">
          <source>If Cell class was not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da79bb1297b3488454666cafb5d584a5d8ba47e4" translate="yes" xml:space="preserve">
          <source>If Router::extensions() is enabled, the layout and template type are switched based on the parsed extension or &lt;code&gt;Accept&lt;/code&gt; header. For example, if &lt;code&gt;controller/action.xml&lt;/code&gt; is requested, the view path becomes &lt;code&gt;app/View/Controller/xml/action.ctp&lt;/code&gt;. Also if &lt;code&gt;controller/action&lt;/code&gt; is requested with &lt;code&gt;Accept: application/xml&lt;/code&gt; in the headers the view path will become &lt;code&gt;app/View/Controller/xml/action.ctp&lt;/code&gt;. Layout and template types will only switch to mime-types recognized by Cake\Http\Response. If you need to declare additional mime-types, you can do so using Cake\Http\Response::type() in your controller's beforeFilter() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="338a6e30b5fe3c776ce3db11b8364e8f96b9716f" translate="yes" xml:space="preserve">
          <source>If View::$autoRender is false and no &lt;code&gt;$layout&lt;/code&gt; is provided, the template will be returned bare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed746f82372624059faae70450d8771ee4aeceb" translate="yes" xml:space="preserve">
          <source>If ViewBlock::APPEND content will be appended to existing content. If ViewBlock::PREPEND it will be prepended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4609adfcfd95c7cce9fc88595c192869ec939913" translate="yes" xml:space="preserve">
          <source>If ViewBlock::OVERRIDE existing content will be overridden by new content. If ViewBlock::APPEND content will be appended to existing content. If ViewBlock::PREPEND it will be prepended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89126b7425959843e9f3db2d188ed2dec5d005c" translate="yes" xml:space="preserve">
          <source>If a $language is provided, a boolean. Otherwise the array of accepted languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a034cc52d548ff512ab71f6a14010c598c44d288" translate="yes" xml:space="preserve">
          <source>If a $name argument has not been provided, the default validator will be returned. You can configure your default validator name in a &lt;code&gt;DEFAULT_VALIDATOR&lt;/code&gt; class constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf115ab82d44469944659909616dc96f5e0dde8" translate="yes" xml:space="preserve">
          <source>If a Cake\Http\Response object instance is returned, it will be served at the end of the event cycle, not calling any controller as a result. This will also have the effect of not calling the after event in the dispatcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fa832ed13eccfc2b7313548332baba1f7a7614" translate="yes" xml:space="preserve">
          <source>If a TableSchema is passed, it will be used for this table instead of the default one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37589272126aba9a09166fe21799ce6c2023f138" translate="yes" xml:space="preserve">
          <source>If a behavior is being reloaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ac7d103fe90965c78f5cdfb9a237a01a74102f" translate="yes" xml:space="preserve">
          <source>If a callable function is passed, the returning array of the function will be used as the list of fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b45bfa13a7e9d733042d2b3a6b914c8839db18" translate="yes" xml:space="preserve">
          <source>If a callable is passed as first argument, The returned value of this function will be the result of the callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da77ecc3b5cdd9eb00f614ce3003c6f3d2948c88" translate="yes" xml:space="preserve">
          <source>If a column or property could not be found for a particular element in the collection as part of the path, the element will be kept unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53b63079f598f780401931a5b696d5ce3a029b2" translate="yes" xml:space="preserve">
          <source>If a column or property could not be found for a particular element in the collection, that position is filled with null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ea27907f287622cbcc027cf0f36a32c780f3eb" translate="yes" xml:space="preserve">
          <source>If a custom regular expression is used this is the only validation that will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91056790835db1bd562635f19680fdc23684fbea" translate="yes" xml:space="preserve">
          <source>If a custom regular expression is used, this is the only validation that will occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba83c980349961825bb61a21248e4173ad932b86" translate="yes" xml:space="preserve">
          <source>If a duplicate is being loaded and has different configuration, that is bad and an exception will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3968d2215ad7438498fed645ee939fabd6c86ec6" translate="yes" xml:space="preserve">
          <source>If a file exists, require it from the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18f5caddb2e8cc6d1878a9699f487627350cba9" translate="yes" xml:space="preserve">
          <source>If a given option key does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e274bef58ff8f79bfe38a0779700eda20103f1a2" translate="yes" xml:space="preserve">
          <source>If a helper with the same name as the extension exists, it is added to the controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7b7bb4eb092548d9c9b8254ea4ae150a507269" translate="yes" xml:space="preserve">
          <source>If a key already exists it will not be overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c12d7ef190ef5c163f503d186e60fd56c44e992" translate="yes" xml:space="preserve">
          <source>If a plugin has been loaded already, it will not be reloaded by loadAll().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444bba8e4f141b6f3bc6a81634c79753b2f60d56" translate="yes" xml:space="preserve">
          <source>If a plugin name is provided, the return value will be a bool indicating whether or not the named plugin is loaded. This usage is deprecated. Instead you should use Plugin::isLoaded($name)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5162e0df113444c60bb7c868794f37655b2bae44" translate="yes" xml:space="preserve">
          <source>If a query has caching enabled, it will do the following when executed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4eaf1953b3ffeb63f37f2e9f2ca61d0eb1a2ba" translate="yes" xml:space="preserve">
          <source>If a repository provider does not return an object a MissingModelException will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57c82725392170ddc5a1749de19cc03eb4f8dc9" translate="yes" xml:space="preserve">
          <source>If a routing key is defined in both &lt;code&gt;$url&lt;/code&gt; and the entity, the value defined in &lt;code&gt;$url&lt;/code&gt; will be preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee0ff14f799da8b9920f2e826372f1f7cf4f8f8" translate="yes" xml:space="preserve">
          <source>If a session object is passed as first argument it will be set as the session to use for this request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01aeeed6a7bf940d378d73bfa92b75d5229e5c97" translate="yes" xml:space="preserve">
          <source>If a shell implements a &lt;code&gt;main()&lt;/code&gt; method, all missing method calls will be sent to &lt;code&gt;main()&lt;/code&gt; with the original method name in the argv.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bc049d365e97443f9b3b9f9f16f78e1a628478" translate="yes" xml:space="preserve">
          <source>If a single type is supplied a boolean will be returned. If no type is provided The mapped value of CONTENT_TYPE will be returned. If an array is supplied the first type in the request content type will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fa4489df67c8bb869903ba378d685341deebba" translate="yes" xml:space="preserve">
          <source>If a third argument is passed, that value is used to compare with the value in $dataKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73d4597aee9693951a59ec1e5c40a682566ccca" translate="yes" xml:space="preserve">
          <source>If a valid callback is not passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9b59e165f1a819e7ee22f908ac41255c4f158d" translate="yes" xml:space="preserve">
          <source>If a validator has not been set earlier, this method will build a valiator using a method inside your class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f92c3d5debff5997e921ea416e183678a7e7561" translate="yes" xml:space="preserve">
          <source>If all the tables that use this Driver specify their own schemas, then this may return null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331eac9ee7b05d0fda80c87518d1d5976c5903a1" translate="yes" xml:space="preserve">
          <source>If all you are looking for is a button to submit your form, then you should use &lt;code&gt;FormHelper::button()&lt;/code&gt; or &lt;code&gt;FormHelper::submit()&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b45dc9c0ba82cd0af5944b155a80735c1fb2f0" translate="yes" xml:space="preserve">
          <source>If an array is passed values will be imploded into a comma separated string. If no parameters are passed, then an array with the current Vary header value is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36017e195de82eb7724b9cd49474137fd5278223" translate="yes" xml:space="preserve">
          <source>If an array is passed, a new TableSchema will be constructed out of it and used as the schema for this table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b70579da98d1c95842cc5ada9495c53072bd58" translate="yes" xml:space="preserve">
          <source>If an array is passed, keys will be used as the field itself and the value will represent the order in which such field should be ordered. When called multiple times with the same fields as key, the last order definition will prevail over the others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a2175ffe4f869f9c6f9dc1c066a1403659187f" translate="yes" xml:space="preserve">
          <source>If an array is passed, keys will be used to alias fields using the value as the real field to be aliased. It is possible to alias strings, Expression objects or even other Query objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8a3e889a76ce721f48bc6cee46ef04b67146af" translate="yes" xml:space="preserve">
          <source>If an array is passed, keys will be used to alias tables using the value as the real field to be aliased. It is possible to alias strings, ExpressionInterface objects or even other Query objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec3926b95021e92cc528c8e7703922126887478" translate="yes" xml:space="preserve">
          <source>If an attempt is made to add an invalid status code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15022c6733446b8c5957512d9f0f1c3eade2795" translate="yes" xml:space="preserve">
          <source>If an instance of a SessionHandlerInterface is provided as the first argument, the handler will be set to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5423075fcad07ac3fdf4949ce248e79fa819f2fe" translate="yes" xml:space="preserve">
          <source>If an invalid range is requested a 416 Status code will be used in the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252383438da697e86af403f576a39e53b74f23ef" translate="yes" xml:space="preserve">
          <source>If an object is provided as the table option, it will be used as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2d809c66c3fc879981bc8a08e13ed162c8c69c" translate="yes" xml:space="preserve">
          <source>If any error related to the passed variables is found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6673d16dfc586a21a807ff743f4d55e43679a0fd" translate="yes" xml:space="preserve">
          <source>If any leaf elements are not valid files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2778ce26c109cd9c4ec82b1050441af9f87beed7" translate="yes" xml:space="preserve">
          <source>If any of your patterns contain multibyte values, the &lt;code&gt;multibytePattern&lt;/code&gt; mode will be enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21492b2ada15ce2397a01e07167bab7464ce80ad" translate="yes" xml:space="preserve">
          <source>If boolean sets or unsets the directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4673c3912d7d32138562c852c9eadb3a17f768d" translate="yes" xml:space="preserve">
          <source>If both fields have exactly the same value this method will return true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fb1aa28aec3b9fe9d118b57941c8f4ccf05cd0" translate="yes" xml:space="preserve">
          <source>If both fields have the exact same value the rule will pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500f30dfab7a45a9eee2d0b26161e9020d97d96c" translate="yes" xml:space="preserve">
          <source>If caching has been disabled with Cache::disable() this method will reverse that effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee773f7078d0ddd2f45a79d5a8c751af00417fb" translate="yes" xml:space="preserve">
          <source>If called with a boolean argument, it will toggle the auto quoting setting to the passed value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8a8e7d7f84abb2cc87f95735f02c772e71e982" translate="yes" xml:space="preserve">
          <source>If called with a boolean it will set the known status of this instance, true means that the instance is not yet persisted in the database, false that it already is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55518b11364596c9619afd0395f9622f891d953" translate="yes" xml:space="preserve">
          <source>If called with a boolean, this method will set the status of this instance. Using &lt;code&gt;true&lt;/code&gt; means that the instance has not been persisted in the database, &lt;code&gt;false&lt;/code&gt; that it already is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b1a67bc09beeffb4ed4f75540a362315b50e60" translate="yes" xml:space="preserve">
          <source>If called with an empty first argument and &lt;code&gt;$override&lt;/code&gt; is set to true, the previous list will be emptied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1e446e4555a7592ffd64fa904fae6a3df2fd9e" translate="yes" xml:space="preserve">
          <source>If called with no arguments it will return the current tree of associations to be matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb900a3356e9f43822f54b9de08b92d280baa180" translate="yes" xml:space="preserve">
          <source>If called with no arguments it will return the currently configured types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fb957e9415c83d27f5704b9c3375f15a67a6e3" translate="yes" xml:space="preserve">
          <source>If called with no arguments, it returns the alias of the repository this entity came from if it is known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232edc7275c6bb532ca35eb91f850672ddc146e6" translate="yes" xml:space="preserve">
          <source>If called with no arguments, it will return the currently configured value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c902e99b768bd8251230f4ac1c248754d67d8a0c" translate="yes" xml:space="preserve">
          <source>If called with no arguments, it will return the provider stored under that name if it exists, otherwise it returns this instance of chaining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9c11b06bec42a22300a9b76bd4c596d959762e" translate="yes" xml:space="preserve">
          <source>If called with no arguments, it will return whether or not buffering is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a953bab51cf09b94317c58267513c804fd1418" translate="yes" xml:space="preserve">
          <source>If called with no arguments, this function will return an array with with the list of previously configured associations to be contained in the result. This getter part is deprecated as of 3.6.0. Use getContain() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac37ab1fbd8ac35bdbfa6cef1d3e4344255d3205" translate="yes" xml:space="preserve">
          <source>If called with the first parameter, it will be set as the controller $this-&amp;gt;_components property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57877911f7534215580416a2e02a0ecf0104a5f" translate="yes" xml:space="preserve">
          <source>If called with the first parameter, it will be set as the globally available instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bf273a83c60770be19487c828bd1bc1d9a7cb3" translate="yes" xml:space="preserve">
          <source>If className() is null, App\View\AppView will be used. If that class does not exist, then Cake\View\View will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd40ce6287ab42dfa20a16771f4544460494bd1e" translate="yes" xml:space="preserve">
          <source>If contains keys &quot;file&quot; and &quot;line&quot; their values will be used to show location info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fb94116eaf50116fcbf714acf51e316138f455" translate="yes" xml:space="preserve">
          <source>If controller does not have method &lt;code&gt;isAuthorized()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b61ac3c704f9a11930df4a27eb983ce131e857" translate="yes" xml:space="preserve">
          <source>If email address does not validate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0ab1750c78c48f98540aa460f49cf5cb5c49ed" translate="yes" xml:space="preserve">
          <source>If events are specified - do &lt;em&gt;not&lt;/em&gt; merge them with existing events, overwrite the events to listen on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c287c49d6d524ae9885a4cb42f34e8a9464d4e" translate="yes" xml:space="preserve">
          <source>If false is returned, the event will be stopped and no more listeners will be notified. Alternatively you can call &lt;code&gt;$event-&amp;gt;stopPropagation()&lt;/code&gt; to achieve the same result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad2f8ebdb1123f3770b13860d598cef2b6494e2" translate="yes" xml:space="preserve">
          <source>If false, will use a non-static $count variable, so that the odd/even count is reset to zero just for that call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f68d1f88995b40796f83fe9edb638a592569085" translate="yes" xml:space="preserve">
          <source>If field is already aliased it will result in no-op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ab817f4c0908de18488fa2f7056c1e73658ed9" translate="yes" xml:space="preserve">
          <source>If given connection object is not compatible with schema caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f9481a01850f55d3aecb9c7da41864e42c91bb" translate="yes" xml:space="preserve">
          <source>If html is one of the preferred types, no content type will be set, this is to avoid issues with browsers that prefer HTML and several other content types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d192b9bcaa6cb0c57fbadbad97dd568f3ee5ee" translate="yes" xml:space="preserve">
          <source>If invalid callable is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2104a44fd657f522a2e5fbc4e31c8dde488b5adb" translate="yes" xml:space="preserve">
          <source>If invalid level is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5882fb15c7b9b3f655de087e78f8b2bbbd5c6b00" translate="yes" xml:space="preserve">
          <source>If invoked extension is not configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1add3fcaaed9c8c4cf23b87abdc1ae023ad5775" translate="yes" xml:space="preserve">
          <source>If it is known whether the entity was already persisted null otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed172a0237afa877850bc8134c6e713e728bbd38" translate="yes" xml:space="preserve">
          <source>If it was impossible to parse the provided time, null will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b09b62fc6d3bfda6af7a2e40101a2824489311" translate="yes" xml:space="preserve">
          <source>If key's value is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a6b18b370ca6bc999902c3b524af834ef84d76" translate="yes" xml:space="preserve">
          <source>If login was called during this request and the user was successfully authenticated, this function will return the instance of the authentication object that was used for logging the user in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596dd904a88168fade2b6f9c808446614cf3e01e" translate="yes" xml:space="preserve">
          <source>If middleware to insert before is not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f18ab1b1faafdf61e9bedfa813f3bf7f826212" translate="yes" xml:space="preserve">
          <source>If missing the flash message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196df36cfd8ba67420cd5d64f05403e531669a63" translate="yes" xml:space="preserve">
          <source>If modify passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b8ed20543d8b79695da6a801aa5237b5ecd812" translate="yes" xml:space="preserve">
          <source>If no argument is passed the currently set &lt;code&gt;allowEmpty&lt;/code&gt; value will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8009769fa7ba7ecd88c0dae1406c87292d33c25c" translate="yes" xml:space="preserve">
          <source>If no argument is passed the currently set &lt;code&gt;validatePresent&lt;/code&gt; value will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81c1f0cf0caa96fe186dee7e7e25097f713222f" translate="yes" xml:space="preserve">
          <source>If no arguments are passed it will return the currently configured handler instance or null if none exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ccaed47ec674d2ef02563616553d9175647d60" translate="yes" xml:space="preserve">
          <source>If no arguments are passed it will return the full configuration array for all aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babb659cbc9e742ffb3f553e94124264dfa43bda" translate="yes" xml:space="preserve">
          <source>If no configured logger can handle a log message (because of level or scope restrictions) then the logged message will be ignored and silently dropped. You can check if this has happened by inspecting the return of write(). If false the message was not handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149e2d9518680978d6f3c611bab118b131d3fb40" translate="yes" xml:space="preserve">
          <source>If no controller of given name can be found, invoke() will throw an exception. If the controller is found, and the action is not found an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5c6eba9dad062d04978902a30564cc792025ca" translate="yes" xml:space="preserve">
          <source>If no locale has been explicitly set via &lt;code&gt;setLocale()&lt;/code&gt;, this method will return the currently configured global locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2168c271cd654f2ae7c38c0ecf5dcc8c55c3a67" translate="yes" xml:space="preserve">
          <source>If no locale is passed then it takes the value returned by the &lt;code&gt;getLocale()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73ba4cf2bea3e45dfdce16850bd54cd92030f1a" translate="yes" xml:space="preserve">
          <source>If no message is given 'Bad Request' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4250b9925e1d13c5ed6613c2066d0adb3966c699" translate="yes" xml:space="preserve">
          <source>If no message is given 'Conflict' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd62e650f600c417614faea06fc040a26028edc" translate="yes" xml:space="preserve">
          <source>If no message is given 'Forbidden' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59afc9180be07e97dfd09ae3229adcb94abda50" translate="yes" xml:space="preserve">
          <source>If no message is given 'Gone' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68aba6af33a1f05719cb70f1ff406ed160aeeb4" translate="yes" xml:space="preserve">
          <source>If no message is given 'Internal Server Error' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4bc97a6c68656f441d64bd84a8cf7adadb0106" translate="yes" xml:space="preserve">
          <source>If no message is given 'Invalid CSRF Token' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3c4c7cc974f921dffa9c07cdbf8792d2c1db8e" translate="yes" xml:space="preserve">
          <source>If no message is given 'Method Not Allowed' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6147211580ffe57a6cd8156db3e4bb87c3f70b" translate="yes" xml:space="preserve">
          <source>If no message is given 'Not Acceptable' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5bc4f93ce00c958cbf5b10b24e6ac395cb7950" translate="yes" xml:space="preserve">
          <source>If no message is given 'Not Found' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96cc0111286dc6b91193b55b1afc7b908288d0d9" translate="yes" xml:space="preserve">
          <source>If no message is given 'Service Unavailable' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5460b1a0b79e0f2a9319f313f271761978158e38" translate="yes" xml:space="preserve">
          <source>If no message is given 'Unauthorized' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84c5f81acb3962c3b081b5e2c27f4b89c1ade96" translate="yes" xml:space="preserve">
          <source>If no message is given 'Unavailable For Legal Reasons' will be the message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a0b33c7c7a90e3d6f852ab9215a82ff6b5c976" translate="yes" xml:space="preserve">
          <source>If no message is given a default meesage will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58beac2106d0165a03a43cd46f675e6a4d94a52" translate="yes" xml:space="preserve">
          <source>If no model type has been defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b085edfe1a2402f8d4bd0d98101ebdc1fa78d5" translate="yes" xml:space="preserve">
          <source>If no parameter is passed, gets the authentication redirect URL. The URL returned is as per following rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738dba428cfd30050b4a3a2b4a4148b5ed05b1ba" translate="yes" xml:space="preserve">
          <source>If no parameters are passed the current field is returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0088e432a9c916fae56d1a3a47f47dd3e7315b" translate="yes" xml:space="preserve">
          <source>If no parameters are passed the current setting is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1459ca9849221c06bf975363469c25b9e151068" translate="yes" xml:space="preserve">
          <source>If no parameters are passed, current Etag header is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71dbfc7b1d6ce26d5e6ccda9e395ff9edf50fe26" translate="yes" xml:space="preserve">
          <source>If no params are passed it will return the current driver instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d9caae29f15eda797143cebd108736f8272bcd" translate="yes" xml:space="preserve">
          <source>If no positional arguments are defined, all of them will be parsed. If you define positional arguments any arguments greater than those defined will cause exceptions. Additionally you can declare arguments as optional, by setting the required param to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11276c63aa2a42ee0925f433c4133920a1a66637" translate="yes" xml:space="preserve">
          <source>If no reason phrase is specified, implementations MAY choose to default to the RFC 7231 or IANA recommended reason phrase for the response's status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e232ab19cfdd7875dd4f70218f1927547e601bc" translate="yes" xml:space="preserve">
          <source>If no record can be found, a new entity will be created with the $search properties. If a callback is provided, it will be called allowing you to define additional default values. The new entity will be saved and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbfb3f2413d95cab77cb24ee44c00e5e79c3653" translate="yes" xml:space="preserve">
          <source>If no such association exists for the given table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc867aa8f8ad636fab9fc623fdf99c42fd0ee4f9" translate="yes" xml:space="preserve">
          <source>If no table option is provided, the table name will be derived based on naming conventions. This inference will work with a number of common objects like arrays, Collection objects and ResultSets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cde268b39f2ae1b74d729a858936198e242fe13" translate="yes" xml:space="preserve">
          <source>If no transformer function is passed, an &quot;identity&quot; function will be used. This is useful when each of the elements in the source collection are lists of items to be appended one after another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d27498e4d2bb2bc0e3daba55a9b13a4dad31e0" translate="yes" xml:space="preserve">
          <source>If no translator with that name could be found for the given locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d48a91c7edc4a3fbee050a69849f2175e5927e0" translate="yes" xml:space="preserve">
          <source>If no type can be matched a NullContext will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20a7d9d23bb942fab8c76705091e2a2aa566ca4" translate="yes" xml:space="preserve">
          <source>If no validator can be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c371fb3165f4dfd6cb44dc37b4c2901b1d39f2d8" translate="yes" xml:space="preserve">
          <source>If non persisted entities are passed or if any of them is lacking a primary key value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ede3d99f1da38335abd8af4a6912988d11a228" translate="yes" xml:space="preserve">
          <source>If not passed a string, or passed an invalid string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40450b0a3b47b0d798877cebde354eb14cf07ae4" translate="yes" xml:space="preserve">
          <source>If null or no parameter is passed, returns an array of content types the client accepts. If a string is passed, returns true if the client accepts it. If an array is passed, returns true if the client accepts one or more elements in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a19564c52e6034ed2f63c5a5d622b55c903f83b" translate="yes" xml:space="preserve">
          <source>If null, filter_var() will be used. Use the emailPattern() method to set a custom pattern.'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc76545aa3549edbcd64e6959f2fd5adfb9a099b" translate="yes" xml:space="preserve">
          <source>If page number &amp;lt; 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfc0f8637917b4f2e282962cae14eda77f43c57" translate="yes" xml:space="preserve">
          <source>If passed an options array, it will be used as a common default for all plugins to be loaded It is possible to set specific defaults for each plugins in the options array. Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427a372a4fe2814e2ff28d0c0a3cfb30f955243b" translate="yes" xml:space="preserve">
          <source>If passed incorrect type for items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105170d30fc891f379c462bcbf0de31e8e9f0a25" translate="yes" xml:space="preserve">
          <source>If password hasher class not found or it does not extend AbstractPasswordHasher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7db0112727cbc279885a563d1b2410535c6d75" translate="yes" xml:space="preserve">
          <source>If password hasher class not found or it does not extend Cake\Auth\AbstractPasswordHasher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821de1d4370e44b5f0ade2bbff4ffbb497c5f24f" translate="yes" xml:space="preserve">
          <source>If plugin has not been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936f727b1b8dc5b0cab68840b0fa59265860ed26" translate="yes" xml:space="preserve">
          <source>If present and a valid subcommand that has a linked parser. That subcommands help will be shown instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae011c354742355606a510da8e80c7bbb4ce2415" translate="yes" xml:space="preserve">
          <source>If provided as a string, it represents the title of the crumb. Alternatively, if you want to add multiple crumbs at once, you can provide an array, with each values being a single crumb. Arrays are expected to be of this form: - &lt;em&gt;title&lt;/em&gt; The title of the crumb - &lt;em&gt;link&lt;/em&gt; The link of the crumb. If not provided, no link will be made - &lt;em&gt;options&lt;/em&gt; Options of the crumb. See description of params option of this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46609cdf6dfcd6690c255a7d65045f4972284b7b" translate="yes" xml:space="preserve">
          <source>If session should be renewed, as well. Defaults to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28cd1bd7a03b09664e77bf6231f4ecdd6fc8ff43" translate="yes" xml:space="preserve">
          <source>If set specifies the list of fields to use when generating the hash, else $this-&amp;gt;fields is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dc12d1abd3e90dfc398fdd4e7cb1ad5541a45c" translate="yes" xml:space="preserve">
          <source>If set specifies the list of fields to use when generating the hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055a4cb72eb8d20aa9feda292143c0627ea61eea" translate="yes" xml:space="preserve">
          <source>If set to a string or array the value is used as a URL to redirect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcddf5cb7a28cf85ba3923f094887660b7ce9d1" translate="yes" xml:space="preserve">
          <source>If set to false a &lt;code&gt;ForbiddenException&lt;/code&gt; exception is thrown instead of redirecting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f17fe16f31eb9bc4a1b6ff5f814f7be6533691" translate="yes" xml:space="preserve">
          <source>If set to false array results will be returned for the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64515b4ae6db3eda2631d3bce51fc0ba2d2e840e" translate="yes" xml:space="preserve">
          <source>If set to false array results will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6cd8d81e81874341509e1a7310ff5eaf7bd7ec" translate="yes" xml:space="preserve">
          <source>If set to true, the Cache-Control header will be set as public if set to false, the response will be set to private if no value is provided, it will return whether the response is sharable or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a21d92042ee0ad269d11686b6a0da6b7f6d3d3" translate="yes" xml:space="preserve">
          <source>If set to true, the Cache-Control header will be set as public if set to false, the response will be set to private.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44cf89cdd2c05478053f59c9c722b852cd31e251" translate="yes" xml:space="preserve">
          <source>If set to true, the method prints from where the function was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073fbd4d48f9f209e9d17eff740fda7bf34e0c5b" translate="yes" xml:space="preserve">
          <source>If set to true, the method prints the debug data in a browser-friendly way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044d094bacda91a5d33bd301ce4f72fa9eb36763" translate="yes" xml:space="preserve">
          <source>If set will overrule the value of &lt;code&gt;Asset.timestamp&lt;/code&gt; in Configure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f969f15392d91d8bbe98f07d4d1c2962b8aa476" translate="yes" xml:space="preserve">
          <source>If set, boundary to use for multipart mime messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692bbb37919ac36ac3c298b4de46c2ea5a6a9acb" translate="yes" xml:space="preserve">
          <source>If set, this will be request used to create the controller that will render the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54516812050c034be2ea87d1306a0bb1a408cbed" translate="yes" xml:space="preserve">
          <source>If specified, controller blackHoleCallback's response, or no return otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bbdb61525acfe4066a48938579b4f1d416a67a" translate="yes" xml:space="preserve">
          <source>If stream content has an invalid format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901b9aeac09afe10020529b8eae216b7b9090755" translate="yes" xml:space="preserve">
          <source>If string it will be use as replacement character or an array of options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c58455cf788cf62c8e5ec7b0a048f4310773846" translate="yes" xml:space="preserve">
          <source>If string name of type to map, if array list of arrays to be mapped</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb11c851049ee4aacd5727697b69b96589d8a3f" translate="yes" xml:space="preserve">
          <source>If the $key string is not a legal value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56e06bdf96487688571b5662d6c27b790011d80" translate="yes" xml:space="preserve">
          <source>If the $request-&amp;gt;body() is a string, it will be used as is. Array data will be processed with Cake\Http\Client\FormData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4affd23c17379ca79951c1eced1586dac1cdfb" translate="yes" xml:space="preserve">
          <source>If the $url is empty, $title is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5eef1c1001e2bb69d641b9b30347b8e3ac0ffe3" translate="yes" xml:space="preserve">
          <source>If the $value is an array, multiple parts will be added. Files will be read from their current position and saved in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33db20cffb8b774292f1679f59473c2254c9dacb" translate="yes" xml:space="preserve">
          <source>If the 'for' key is missing in options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="385f8306abbe9aed771e8a346ef5b30db409dfca" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;locales&lt;/code&gt; array is not passed, it will bring all translations found for each record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e92db5f0d5466c1922b6c612269d3ceca51afc8" translate="yes" xml:space="preserve">
          <source>If the URL matches the route parameters and settings, then return a generated string URL. If the URL doesn't match the route parameters, false will be returned. This method handles the reverse routing or conversion of URL arrays into string URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972700b51e6c96a450f456e6946a25798f863729" translate="yes" xml:space="preserve">
          <source>If the XML data is POSTed, the data is parsed into an XML object, which is assigned to the $data property of the controller, which can then be saved to a model object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfaadeba91bb5ee6f15ffe3a927301748c139e8" translate="yes" xml:space="preserve">
          <source>If the address contains non alphanumeric/whitespace characters, it will be quoted as characters like &lt;code&gt;:&lt;/code&gt; and &lt;code&gt;,&lt;/code&gt; are known to cause issues in address header fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500f30dde3657700336be171db7c90a352dea3a0" translate="yes" xml:space="preserve">
          <source>If the alias added contains a &lt;code&gt;.&lt;/code&gt; the part preceding the &lt;code&gt;.&lt;/code&gt; will be dropped. This makes using plugins simpler as the Plugin.Class syntax is frequently used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f191904096d2711a9e7ffc6de3aff33c90024a" translate="yes" xml:space="preserve">
          <source>If the application does not support events and this method is used as a setter, an exception will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c70e50e5589b2f5578e7f6deb46717df2dff4f" translate="yes" xml:space="preserve">
          <source>If the behavior does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbe57ee8a2f2e84475b25e8f1e0f0b11f49ddb0" translate="yes" xml:space="preserve">
          <source>If the builder has no Origin, or if there are no allowed domains, or if the allowed domains do not match the Origin header no headers will be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278473c4ef80625fdc854ebcbb1c7d25198d7503" translate="yes" xml:space="preserve">
          <source>If the cache engine &amp;amp; configuration are missing an error will be triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde36b959822f58d61ca6bdd75541f6bba0e1603" translate="yes" xml:space="preserve">
          <source>If the class cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6251b1372ab8621a8de40f1919b873cfe914dee0" translate="yes" xml:space="preserve">
          <source>If the client is requesting a recognized asset, null otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67864d2a2fee7b53dd54a9ccb9888758a852e374" translate="yes" xml:space="preserve">
          <source>If the column is not defined in the table, no error will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d2583a719417d6e160ea432db0d534d566cb1d" translate="yes" xml:space="preserve">
          <source>If the connection has not been constructed an instance will be added to the registry. This method will use any aliases that have been defined. If you want the original unaliased connections pass &lt;code&gt;false&lt;/code&gt; as second parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9834ec55083212cfd321d2f68a0860b037ffafe" translate="yes" xml:space="preserve">
          <source>If the content is a callable, it is invoked. The callable should either return a string or output content directly and have no return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11374f0388cec39db4e54eecbaa60d7e08c826a4" translate="yes" xml:space="preserve">
          <source>If the context is for a collection or array the first object in the collection will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28475dc5cde0153583ab7a4d7bc438568c940e3d" translate="yes" xml:space="preserve">
          <source>If the context is for a single entity, the entity's isNew() method will be used. If isNew() returns null, a create operation will be assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7c53607d1e9b884b4cde7a669c329f2ae6f4ad" translate="yes" xml:space="preserve">
          <source>If the context is for an array of entities, the 0th index will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a5ae9116044846e40862fae7dc2f1f5933f7c6" translate="yes" xml:space="preserve">
          <source>If the controller action returns a non-response value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4d4700b659765f84ba2c9467674859e5979d0a" translate="yes" xml:space="preserve">
          <source>If the cookie is not in the collection, this method will do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9e90749f6a8eaa8356811010edda5cf4d2a004" translate="yes" xml:space="preserve">
          <source>If the current status code is 200, it will be replaced with 302.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f03f33ea810db49cc2e6d29b131b8a0c2a74c1" translate="yes" xml:space="preserve">
          <source>If the cut is set to true, the string is always wrapped at the specified width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7373e8cf29160b6d227a523c34bec15f04fd257d" translate="yes" xml:space="preserve">
          <source>If the direct option is set to true, only the direct children are returned (based upon the parent_id field)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0037778e0451b9c295f6188edf40989b9f43963" translate="yes" xml:space="preserve">
          <source>If the event is stopped the controller will not continue on to redirect the request. The $url and $status variables have same meaning as for the controller's method. You can set the event result to response instance or modify the redirect location using controller's response instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9da4b06ae657c16d3788aa0534e8a1721c9523c" translate="yes" xml:space="preserve">
          <source>If the extension is of a type that RequestHandler understands, it will set that Content-type in the response header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a13d33df210c88e8642d1220d724225c5bd972" translate="yes" xml:space="preserve">
          <source>If the field is already aliased, then it will not be changed. If no $alias is passed, the default table for this query will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2435646f06f0f158a979cae3f4929d9db81ce6" translate="yes" xml:space="preserve">
          <source>If the filename is prefixed with &quot;/&quot;, the path will be relative to the base path of your application. Otherwise, the path will be relative to your JavaScript path, usually webroot/js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edd0c8fa995b9861de27bc95860821145575621" translate="yes" xml:space="preserve">
          <source>If the first argument is set to null, it will return the list of previously registered format routines. This is deprecated as of 3.6.0 - use getResultFormatters() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d33ad4d1f450865a793f1e9a13755bd5b515f09" translate="yes" xml:space="preserve">
          <source>If the first argument is set to null, it will return the list of previously registered map reduce routines. This is deprecated as of 3.6.0 - use getMapReducers() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64654cdf268dcd48ca029a26617629651e6d34f3" translate="yes" xml:space="preserve">
          <source>If the first param is a null value, the built-in counter function will be called instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3af220f7482de642e30f16de785d87f7ed03ffb" translate="yes" xml:space="preserve">
          <source>If the header is not defined in the request, this method will fallback to reading data from $_SERVER and $_ENV. This fallback behavior is deprecated, and will be removed in 4.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132b7ea7afd293ea38c45f281787eb5e3ba65294" translate="yes" xml:space="preserve">
          <source>If the implementing class also implements EventAwareTrait, then events will be emitted when rules are checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d99065ad37c0ad6710661375b54ba83e43497e" translate="yes" xml:space="preserve">
          <source>If the implementing objects supports a &lt;code&gt;$_registry&lt;/code&gt; object the named configuration will also be unloaded from the registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4ff5b6682723cf745a5a4070c4b297f31280d4" translate="yes" xml:space="preserve">
          <source>If the including class also implements events the &lt;code&gt;Model.buildValidator&lt;/code&gt; event will be triggered when validators are created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f370601f51c28515bac40c06ed3cb0f92ca67c2c" translate="yes" xml:space="preserve">
          <source>If the index already exists, the new callable will be inserted, and the existing element will be shifted one index greater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6421f96c764fe236cd1c43ec36d60edee5e06c" translate="yes" xml:space="preserve">
          <source>If the index already exists, the new crumb will be inserted, and the existing element will be shifted one index greater. If the index is out of bounds, it will throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b6ddb40527986387da7b25c33d9efcdd003107" translate="yes" xml:space="preserve">
          <source>If the input contains a dot, assume that the right side is the real table name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666906c46553f7ed29d7ad875d8ef3f81f54d313" translate="yes" xml:space="preserve">
          <source>If the input matches an alias, return the aliased shell name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d5ee4bb9a508dc141879259abba520589bbeef" translate="yes" xml:space="preserve">
          <source>If the key is found: the cached data, false if the data missing/expired, or an error. If the key is not found: boolean of the success of the write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b324fda0e841f7f5945182a4a075e007f6241f" translate="yes" xml:space="preserve">
          <source>If the key is undefined, the cell class and action name will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6389396ad2030074b3b2232b3f505788980fa3b" translate="yes" xml:space="preserve">
          <source>If the keys of the array should be preserved</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768bbece4c3f9d8bf8b7789bf5f9e8023bdf8ab0" translate="yes" xml:space="preserve">
          <source>If the method is called with a string as argument, it returns either the given configuration if it is set, or null, if it's not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a69f1d94869e20fbc48731a6b29b883815731b" translate="yes" xml:space="preserve">
          <source>If the method is called with an array as argument, it will set the cookie configuration to the cookie container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c6878fef7eec2ef3ba4a8e944327577a8dd8a3" translate="yes" xml:space="preserve">
          <source>If the middleware is created without an Application, routes will be loaded via the automatic route loading that pre-dates the routes() hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a647e90dcfbcebaf97347fc41f45ce23b84e9060" translate="yes" xml:space="preserve">
          <source>If the model class cannot be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf33b0f83134c7498518121c4448f51efdf26b93" translate="yes" xml:space="preserve">
          <source>If the named plugin does not exist, or does not define a Plugin class, an instance of &lt;code&gt;Cake\Core\BasePlugin&lt;/code&gt; will be used. This generated class will have all plugin hooks enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9baff8ad5e47aa2e2c63b4c1ab3a646f7a713b9" translate="yes" xml:space="preserve">
          <source>If the node is the first child, or is a top level node with no previous node this method will return false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1b131ba0e2b31412ef6bb28b95b80708e0d270" translate="yes" xml:space="preserve">
          <source>If the node is the last child, or is a top level node with no subsequent node this method will return false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cea778778e0b7bcd8cc2ca78963433da8fb0e1" translate="yes" xml:space="preserve">
          <source>If the output should be escaped or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe51c3d3afc8347de4f10f66960de4ae7d6851c1" translate="yes" xml:space="preserve">
          <source>If the properties are already set they will not be overwritten</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cc6504a49b2f42a01786d591c5639ce207c972" translate="yes" xml:space="preserve">
          <source>If the properties argument is null, the currently hidden properties will be returned. Otherwise the hidden properties will be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c25f8fe50617be7cfbf15b001e46562ce5965c" translate="yes" xml:space="preserve">
          <source>If the properties argument is null, the currently virtual properties will be returned. Otherwise the virtual properties will be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f530fe19aac8580b6139173d63bdf43a41ed7f9" translate="yes" xml:space="preserve">
          <source>If the registry subclass has an event manager, the objects will be detached from events as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b94b6b1b86fbec6c26ee1676bcb28595f86ccd" translate="yes" xml:space="preserve">
          <source>If the request Content-Type is either application/x-www-form-urlencoded or multipart/form-data, and the request method is POST, this will be the post data. For other content types, it may be the deserialized request body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6ef47025d7fd662d9311ea8cdf04209a7654b9" translate="yes" xml:space="preserve">
          <source>If the request data is missing or does not match the cookie data, an InvalidCsrfTokenException will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1347ff748868a3ed998bef106799c399e0974316" translate="yes" xml:space="preserve">
          <source>If the request would be GET, response header &quot;Allow: POST, DELETE&quot; will be set and a 405 error will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de50e4ad001d6ac12e31c2e7d64f584801c35546" translate="yes" xml:space="preserve">
          <source>If the requested field is configured as a translation field, the &lt;code&gt;content&lt;/code&gt; field with an alias of a corresponding association is returned. Table-aliased field name is returned for all other fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d42330a1f7bf291e3af05babee3fe337e0c1d5" translate="yes" xml:space="preserve">
          <source>If the response cannot be decoded, null will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052d508e72b7c1afd42baf7c8daa0ac4049a7b64" translate="yes" xml:space="preserve">
          <source>If the route can be parsed an array of parameters will be returned; if not false will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba0fe8a2244e9be3f9a567ec8e096a6544d860b" translate="yes" xml:space="preserve">
          <source>If the route can be parsed an array of parameters will be returned; if not false will be returned. String URLs are parsed if they match a routes regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c558d7737f617b0e1d993ca7423a04d6663654" translate="yes" xml:space="preserve">
          <source>If the second argument is set to true, it will erase previous formatters and replace them with the passed first argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cbecf233a96e6ce5985108ce0ace9cdc2984ed" translate="yes" xml:space="preserve">
          <source>If the specified repository type has no factory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e5c6aaa8f56a5b333242605ae93a03e78a2869" translate="yes" xml:space="preserve">
          <source>If the status code is 304 or 204, the existing Content-Type header will be cleared, as these response codes have no body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4c4a8394bf96d518ffbbfd59126eb4bf01f554" translate="yes" xml:space="preserve">
          <source>If the table option was provided to the constructor and it was a string, TableLocator will be used to get the correct table instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d69c2029a648262523433474d143b321477d37" translate="yes" xml:space="preserve">
          <source>If the third argument is set to true, it will erase previous map reducers and replace it with the arguments passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfb5f22d21d60c336eb765de5a43c54820d2b68" translate="yes" xml:space="preserve">
          <source>If the transaction is aborted in the afterSave event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddaefd2c8a7eaa7f55d341bd251f11ce1316c8b" translate="yes" xml:space="preserve">
          <source>If the type passed for any of the fields is expressed &quot;type[]&quot; (note braces) then it will cause the placeholder to be re-written dynamically so if the value is an array, it will create as many placeholders as values are in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08213899dc6c8ee9eae40d000bf6830e5f282623" translate="yes" xml:space="preserve">
          <source>If the user replies &lt;code&gt;a&lt;/code&gt; subsequent &lt;code&gt;forceOverwrite&lt;/code&gt; parameters will be coerced to true and all files will be overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dc092b409b6e9e59734e6304816a39889909da" translate="yes" xml:space="preserve">
          <source>If the value represents an array of values, this method will recursively process the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a970421c12682ce23d78ace566d2f744c8777833" translate="yes" xml:space="preserve">
          <source>If the view variable does not exist, null will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bc2a0edcf8e3c763e718b9332f50157364a41d" translate="yes" xml:space="preserve">
          <source>If there are errors this method returns true, else false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e82b582f4b8c9574df3ffaab9ea957bc15c4dd5" translate="yes" xml:space="preserve">
          <source>If there is a loaded plugin with the underscored version of $name, the translation file will be loaded from such plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e61304a544eb1ac726b85eecce20dbe640c9e1" translate="yes" xml:space="preserve">
          <source>If there is an error in the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405faf6d06cec2174adb3c7ce6fe29188cd4512d" translate="yes" xml:space="preserve">
          <source>If there is no URL returned from storage and there is a config &lt;code&gt;loginRedirect&lt;/code&gt;, the &lt;code&gt;loginRedirect&lt;/code&gt; value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78a50753f4cf814fc3ddb831cff6250d3492137" translate="yes" xml:space="preserve">
          <source>If there is no active form null will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc36fb3ab24e6f6f5bfd0f7b0376c2a93f05896" translate="yes" xml:space="preserve">
          <source>If there is no session and no &lt;code&gt;loginRedirect&lt;/code&gt;, / is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91ec3385d39eab2cf92df5ef57d4c99cf1e2b36" translate="yes" xml:space="preserve">
          <source>If there was any authorization processing for the current request, this function will return the instance of the Authorization object that granted access to the user to the current address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2cd8f1fb42a1da68565b35eff1abb7dacb065a" translate="yes" xml:space="preserve">
          <source>If this collection implements events, the passed object will be attached into the event manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f03bfc471ccd235af9f7bd27d19bd9499e03633" translate="yes" xml:space="preserve">
          <source>If this object contains files, &lt;code&gt;multipart/form-data&lt;/code&gt; will be used, otherwise &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa31aaa6fa559dab23bf66491d853d81b9e249b" translate="yes" xml:space="preserve">
          <source>If this registry has an event manager, the object will be detached from any events as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520ae0eae8eccbf336035a4feeef13f3c9ded8ac" translate="yes" xml:space="preserve">
          <source>If true (default value) groups the identifiers list by primary region. Otherwise, an array containing &lt;code&gt;group&lt;/code&gt;, &lt;code&gt;abbr&lt;/code&gt;, &lt;code&gt;before&lt;/code&gt;, and &lt;code&gt;after&lt;/code&gt; keys. Setting &lt;code&gt;group&lt;/code&gt; and &lt;code&gt;abbr&lt;/code&gt; to true will group results and append timezone abbreviation in the display value. Set &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; to customize the abbreviation wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a662bd80f62a4c9fe164010b7c5e8bcf2adb23" translate="yes" xml:space="preserve">
          <source>If true forces Windows new line string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a547485ea13cc920ec7e0646ad833a39efcd0d6" translate="yes" xml:space="preserve">
          <source>If true no deletes will occur and instead CakePHP will rely on key TTL values. Unused for Xcache engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309430cdb575eedd456ad75fb6012368b1879255" translate="yes" xml:space="preserve">
          <source>If true then the file will be re-opened even if its already opened, otherwise it won't</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a416676a319a3544b08e9ba3b77a1b5b3feb1e" translate="yes" xml:space="preserve">
          <source>If true timestamp is refreshed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1f246138be22720a5e14fc00d682508128dd8c" translate="yes" xml:space="preserve">
          <source>If true uses the plugin set in the current Request when parsed plugin is not loaded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6b3d0ecb4d885cece6eb758df2fec7b504b342" translate="yes" xml:space="preserve">
          <source>If true will check expiration, otherwise delete all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0986d907f020cca2b30e3d12955962c7909af3" translate="yes" xml:space="preserve">
          <source>If true, $data will be converted to an associative array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1242d3617f0ba44968783ff3d0c58727d49a2e2f" translate="yes" xml:space="preserve">
          <source>If true, all rows were fetched</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f739c0318be2a92ea6f2f6a89e53638fb7752732" translate="yes" xml:space="preserve">
          <source>If true, automatically prepends the application's salt value to $string (Security.salt).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9539679041f3b556a16ec5de3e0e634ab45f12" translate="yes" xml:space="preserve">
          <source>If true, nothing will be cleared, as entries are removed from APC as they expired. This flag is really only used by FileEngine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d1ae2c0282ce0a2367b7f25a2f74de696ba994" translate="yes" xml:space="preserve">
          <source>If true, nothing will be cleared, as entries will naturally expire in wincache..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533027eb50a61dfbb07e55ed6064734385c26cab" translate="yes" xml:space="preserve">
          <source>If true, prepend the base directory to the stack instead of appending it; this causes it to be searched first rather than last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13485dc290701d12c61f9c4f401446d2254da87" translate="yes" xml:space="preserve">
          <source>If true, restrict referring URLs to local server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3908289c56b1011fc13f25c174b605ea26df718" translate="yes" xml:space="preserve">
          <source>If true, tables will still be dropped at the end of each test runner execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91522ec770e4b7db9161503803a7fa5d5f717216" translate="yes" xml:space="preserve">
          <source>If true, the full base URL will be prepended to the result. Default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f753a0aaf33fd2288eb1ffae8aa8d5c8617988aa" translate="yes" xml:space="preserve">
          <source>If true, the script will ask for permission to perform actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b2ed7e205c26ed3b802622fbc68ee21285d02c" translate="yes" xml:space="preserve">
          <source>If true, will unset default inflections for all new rules that are being defined in $rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bed9a0929b1d84a3e5307dfa37479c17ce7cddb" translate="yes" xml:space="preserve">
          <source>If type identifier is unknown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a7ec14c9e96b4e67b87d5a913bee318785760f" translate="yes" xml:space="preserve">
          <source>If using &lt;code&gt;default&lt;/code&gt; config and no engine has been configured for it yet, one will be automatically created using PhpConfig</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6efbca879cf7ea947679ac2312d2a2edc5d728" translate="yes" xml:space="preserve">
          <source>If using array as input, you can pass &lt;code&gt;options&lt;/code&gt; from Xml::fromArray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8bff55d2f41d14353c560f0549d153ee87395e" translate="yes" xml:space="preserve">
          <source>If value for any option key is set to &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, that option will be excluded from output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8da668d5c7f3d14d672d3f02d25c97be31bc4fb" translate="yes" xml:space="preserve">
          <source>If value for flash settings key is not an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90134662e814886868db67c289af5412dffa59d" translate="yes" xml:space="preserve">
          <source>If view class was not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d28a1126da458c6666c7c05d49c88bc20c6559e" translate="yes" xml:space="preserve">
          <source>If you are getting styles, the style or null will be returned. If you are creating/modifying styles true will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be9fd69def34c5d31b6e82eebd37d8298a3c90f" translate="yes" xml:space="preserve">
          <source>If you are trying to enable this feature, make sure you check the return value of this function to verify it was enabled successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cddcb22e887892d39c4501ff42035e24c32be7f" translate="yes" xml:space="preserve">
          <source>If you attempt to set the type on a 304 or 204 status code response, the content type will not take effect as these status codes do not have content-types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575bad3181b776973b212c1a9785972939e94be0" translate="yes" xml:space="preserve">
          <source>If you change the configuration value &lt;code&gt;App.fullBaseUrl&lt;/code&gt; during runtime and expect the router to produce links using the new setting, you are required to call this method passing such value again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5810064346d5634718bf5843357d3f530d8602" translate="yes" xml:space="preserve">
          <source>If you don't use the &lt;code&gt;_serialize&lt;/code&gt; key, you will need a view. You can use extended views to provide layout like functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f1f93c3cb4a137127d6a65d567901694622d6e" translate="yes" xml:space="preserve">
          <source>If you don't use the &lt;code&gt;_serialize&lt;/code&gt;, you will need a view template. You can use extended views to provide layout-like functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc6b9792f21a60361d3a1ad9b46596edaf563f7" translate="yes" xml:space="preserve">
          <source>If you don't want to take control of the exception handling, but want to change how exceptions are rendered you can use &lt;code&gt;exceptionRenderer&lt;/code&gt; option to choose a class to render exception pages. By default &lt;code&gt;Cake\Error\ExceptionRenderer&lt;/code&gt; is used. Your custom exception renderer class should be placed in src/Error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7862b7fd98ba569dac650a2e261e4549599ad90" translate="yes" xml:space="preserve">
          <source>If you have an un-even or heterogeneous array, consider using Hash::maxDimensions() to get the dimensions of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c26de81cd9cb3f47617d955fa036460c7fb668" translate="yes" xml:space="preserve">
          <source>If you have multiple options that need to have the same value attribute, you can use an array of arrays to express this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789124e623432248f1967ce11d66dd3660933d7f" translate="yes" xml:space="preserve">
          <source>If you have several messages stored in the Session, each message will be rendered in its own element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebd05463d8e98a5b0ca7a959ec4ec013c977e4a" translate="yes" xml:space="preserve">
          <source>If you make consecutive calls to this method, the messages will stack (if they are set with the same flash key)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bd702cfff1814622818045b1796c589cd9b9ee" translate="yes" xml:space="preserve">
          <source>If you need fine grained control over how routes are loaded for plugins, you can use Cake\Routing\RouteBuilder::loadPlugin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1272e53b2d7e9e62f4db000418b3ad22fb8e0cd1" translate="yes" xml:space="preserve">
          <source>If you need the count of elements after taking the keys in consideration (the count of unique keys), you can call &lt;code&gt;countKeys()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda59d558ecbaf92a944a24405f21d5505c847b0" translate="yes" xml:space="preserve">
          <source>If you need to define additional attributes on your option elements you can use the complex form for options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f497a550fbfe3ebffd7a0dadb0f688ed5dc59b" translate="yes" xml:space="preserve">
          <source>If you need to define option groups you can do those using nested arrays:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf7f813c6d38da0351f6b0ec7f33a9de2a42734" translate="yes" xml:space="preserve">
          <source>If you need to display the date in a different timezone than the one being used for this Time object without altering its internal state, you can pass a timezone string or object as the second parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8aeb40ce6aaade21f034ef1600324ce6157cda" translate="yes" xml:space="preserve">
          <source>If you need to have prefix with dots, eg: '/api/v1.0', use 'path' key for $params argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f31d05cc719e669b588d455c53c0915d41bdbf" translate="yes" xml:space="preserve">
          <source>If you need to set complex expressions as order conditions, you should use &lt;code&gt;orderAsc()&lt;/code&gt; or &lt;code&gt;orderDesc()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8a0e015c1603c92a0eb3c7b0ef2b0463d11659" translate="yes" xml:space="preserve">
          <source>If you need to sort on associated columns or synthetic properties you will need to use a whitelist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8eaf951a470dc11090ebc69b5e6b2038691d48" translate="yes" xml:space="preserve">
          <source>If you only want the terminal Entity for a path use &lt;code&gt;leafEntity&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d072710840081699a78d7eb310715109501e849" translate="yes" xml:space="preserve">
          <source>If you pass an instance of a &lt;code&gt;Cake\ORM\Table&lt;/code&gt; or &lt;code&gt;Cake\ORM\Association&lt;/code&gt; class, all the fields in the schema of the table or the association will be added to the select clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56002185ed5af8c7a83e26906462a52de9b342f0" translate="yes" xml:space="preserve">
          <source>If you re-use an alias the last alias set will be the one available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1597f08e6defd9dda49c4cddb74470253cdbaa8c" translate="yes" xml:space="preserve">
          <source>If you use string conditions make sure that your values are correctly quoted. The safest thing you can do is to never use string conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61207cedee2c2a16dcc4f89b26e081b83e254103" translate="yes" xml:space="preserve">
          <source>If you want to allow other kind of empty data on a field, you need to pass other flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f718c665b69422db89f1d1f2c1d2edb2b8f934f" translate="yes" xml:space="preserve">
          <source>If you want to bring all or certain languages for each of the fetched records, you can use the custom &lt;code&gt;translations&lt;/code&gt; finders that is exposed to the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47eaf1faa70973b164db59ae64b662ce94d3330f" translate="yes" xml:space="preserve">
          <source>If you want to nest inputs in the labels, you will need to modify the default templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0a40de4090dcb29dcbe949b62eadecf5483f0b" translate="yes" xml:space="preserve">
          <source>If you want to use an element from a plugin for rendering your flash message you can use the dot notation for the plugin's element name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0edccc35734c87bae5157b33a89f72aed989ffb" translate="yes" xml:space="preserve">
          <source>If you wish to filter duplicates based of those rows sharing a particular field or set of fields, you may pass an array of fields to filter on. Beware that this option might not be fully supported in all database systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993a6bae74b8e1445fda4b9cfd8ee97872ae2e99" translate="yes" xml:space="preserve">
          <source>If you wish to include a prefix to all messages, for instance to identify the application or the web server, then use the prefix option. Please keep in mind the prefix is shared by all streams using syslog, as it is dependent of the running process. For a local prefix, to be used only by one stream, you can use the format key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e9c3257c8f53ef681f8c3244a0b45575d5ee29" translate="yes" xml:space="preserve">
          <source>If you wish to modify an existing configuration, you should drop it, change configuration and then re-add it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de06d1dfef1e66f480b2337dfdfa81b929d8bda" translate="yes" xml:space="preserve">
          <source>If you wish to override fields, you need to call the &lt;code&gt;locale&lt;/code&gt; method in this behavior for setting the language you want to fetch from the translations table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc8e1eef73b48e85f405dbc2c4713542a974e69" translate="yes" xml:space="preserve">
          <source>If you wish to remove all decorators from the stack, set the first parameter to null and the second to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472a95c50e63eb07d9f2d02c31514d32b04e41cd" translate="yes" xml:space="preserve">
          <source>If you wish to use digest authentication alongside other authentication methods, it's recommended that you store the digest authentication separately. For example &lt;code&gt;User.digest_pass&lt;/code&gt; could be used for a digest password, while &lt;code&gt;User.password&lt;/code&gt; would store the password hash for use with other methods like Basic or Form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6418e97f246e6100ce99e28b8b7c272a3fbf58" translate="yes" xml:space="preserve">
          <source>If you're doing multiple requests to the same hostname it's often convenient to use the constructor arguments to create a scoped client. This allows you to keep your code DRY and not repeat hostnames, authentication, and other options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701ac75044b0edbfe83e35faec33b04b8eb0aa23" translate="yes" xml:space="preserve">
          <source>If your Table uses any behaviors you can call them as if they were on the table object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0de477ba8efd5dc7361acf119b1966cb1eb53a" translate="yes" xml:space="preserve">
          <source>If your association includes conditions, the junction table will be included in the query's contained associations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6d5af7ada14a0175209746d285e65cdf832212" translate="yes" xml:space="preserve">
          <source>If your client supports it you can use native HTTP methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4898ed22f43079790d1e73c106e3006dc7888743" translate="yes" xml:space="preserve">
          <source>If your find conditions require custom order, associations or conditions, then the $search parameter can be a callable that takes the Query as the argument, or a \Cake\ORM\Query object passed as the $search parameter. Allowing you to customize the find results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0cecd85a255e66c843057312e84b6f7e22d78e" translate="yes" xml:space="preserve">
          <source>If your response body is in XML or JSON you can use special content type specific accessors to read the decoded data. JSON data will be returned as arrays, while XML data will be returned as SimpleXML nodes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73127e7a78db42b54566c36ed4012eda0bb4a4c5" translate="yes" xml:space="preserve">
          <source>If your settings contain a key with the current table's alias. The data inside that key will be used. Otherwise the top level configuration will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6aaf92a69653b623e112bed1f0cbea7e3a10c41" translate="yes" xml:space="preserve">
          <source>If your when condition returns &lt;code&gt;true&lt;/code&gt; the before/after methods will be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8df264e173224f8cff8023ffb922de85746938b" translate="yes" xml:space="preserve">
          <source>Ignore updating the field if it is dirty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b136ad66fe86623e90711c8ce83e5feb2fca07c" translate="yes" xml:space="preserve">
          <source>Ignoring the requested protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d4214d60e82efd786a3db2073865df139f3ef2" translate="yes" xml:space="preserve">
          <source>Implement the Countable interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca91a1e05a0f79fb70acfef38e540544e7691c3" translate="yes" xml:space="preserve">
          <source>Implement this method to avoid having to overwrite the constructor and call parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c524cc4e7c16c10ea7d7b062ace03f8984c74227" translate="yes" xml:space="preserve">
          <source>Implement this method to avoid having to overwrite the constructor and calling parent::__construct().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85863607794004244e2c02ef3d2996da0eaab765" translate="yes" xml:space="preserve">
          <source>Implement this method with your command's logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c50da971ecfbcfbd2a00da20546ff866d43c6a" translate="yes" xml:space="preserve">
          <source>Implementation of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbd5877efc5c4e752917a1cd898076770959294" translate="yes" xml:space="preserve">
          <source>Implementation of Countable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565a94c2be7588b1f089d3535080a62d3a4a2d5b" translate="yes" xml:space="preserve">
          <source>Implementation of IteratorAggregate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ace938f10c97fea648706a1d6a4814cb970d74" translate="yes" xml:space="preserve">
          <source>Implemented events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c491e36ef2d198140afc41c6295cd35a1de9cd4" translate="yes" xml:space="preserve">
          <source>Implemented in subclasses that need it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e502b18c6447da4971b10a304a741538b02c4aa" translate="yes" xml:space="preserve">
          <source>Implementing application specific exception handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5c6eb3ba7fec5857c552cc229ff0da21585b00" translate="yes" xml:space="preserve">
          <source>Implementing application specific exception rendering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0e1c58d1de5ee393b85f2d8f185f9a696ebeec" translate="yes" xml:space="preserve">
          <source>Implementing objects are expected to declare a &lt;code&gt;$_defaultConfig&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f34a6b085d4026f490615d90c219c2b3979ed9b" translate="yes" xml:space="preserve">
          <source>Implementing objects are expected to declare a static &lt;code&gt;$_dsnClassMap&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d28bb088ff84de4c052e7b8928ec0704298e728" translate="yes" xml:space="preserve">
          <source>Implementing objects are expected to modify the &lt;code&gt;$_compareBasePath&lt;/code&gt; property before use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c6d8f651dd3c780ddc9529335befd647611edd" translate="yes" xml:space="preserve">
          <source>Implements $entity[$offset] = $value;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f08b9ca1ce8cab72f5aa4f2130a25ff5d5b84b" translate="yes" xml:space="preserve">
          <source>Implements $entity[$offset];</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e1fe1534aadd5f166c450424cc833cd289bf4c" translate="yes" xml:space="preserve">
          <source>Implements ArrayAccess to easily modify rules in the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e8556d87ce7f4dfe9c5908e40d7882194f31a5" translate="yes" xml:space="preserve">
          <source>Implements Cake\Event\EventDispatcherInterface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453c4fb74912322b0dbd0425bd44c4d9890265e3" translate="yes" xml:space="preserve">
          <source>Implements a simplistic version of the popular Map-Reduce algorithm. Acts like an iterator for the original passed data after each result has been processed, thus offering a transparent wrapper for results coming from any source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b110db0edcdc7d6e516b1707b283b9cd64fbb3" translate="yes" xml:space="preserve">
          <source>Implements cascading deletes for dependent associations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84eb2e96cda0d199fe560f9415f8b63518e502b" translate="yes" xml:space="preserve">
          <source>Implements default and single-use mappings for columns to their associated types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c556a3f5fb954d657174b2d3bedde19ad3119240" translate="yes" xml:space="preserve">
          <source>Implements isset($entity);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72f0ba80e1731f0cb6bf417f66bfcdce6c176df" translate="yes" xml:space="preserve">
          <source>Implements methods for HTTP requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c860664b7b2ef228578d36b083f98093e7f58f" translate="yes" xml:space="preserve">
          <source>Implements methods for HTTP responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dd16e83c3ae484c6509fffc27052c9ece6d830" translate="yes" xml:space="preserve">
          <source>Implements sending Cake\Http\Client\Request via ext/curl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e646a94aa1c9612226cfd13e622f6669280923" translate="yes" xml:space="preserve">
          <source>Implements sending Cake\Http\Client\Request via php's stream API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b88b3357293333f6024573f7d12262d9a99a3f4" translate="yes" xml:space="preserve">
          <source>Implements the TypedResultInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d70f178689e2d4ab4223b4cae8415902184c8d" translate="yes" xml:space="preserve">
          <source>Implements unset($result[$offset]);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89116743ce7b83cd75ea7682d90238e03b3fc490" translate="yes" xml:space="preserve">
          <source>Implements writing to console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7cf921dde0df8046357cc9698b355dad8d4da10" translate="yes" xml:space="preserve">
          <source>Implements writing to log files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe41326d6910212f0994dd469b61dad8e59839c1" translate="yes" xml:space="preserve">
          <source>Implode method to keep keys are multidimensional arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee92b2dc96f164b828fac5c0aa6d449a7c3da90" translate="yes" xml:space="preserve">
          <source>Important Keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8488184ca3b6277d38954255dc111927dd5977" translate="yes" xml:space="preserve">
          <source>Important keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fde4625502a4da6dd3fc4f2bcc6ae6f237ec87" translate="yes" xml:space="preserve">
          <source>Important: This function is very forgiving about whitespace and also accepts any permutation of attribute order. It will also allow whitespace between specified tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a5ac2edd0b9eabb81a74235d4df63af8873457" translate="yes" xml:space="preserve">
          <source>In 4.x the following methods will officially be added to the interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284d5c4e46c8b04c3245d415b8b9513921125e2b" translate="yes" xml:space="preserve">
          <source>In addition to simple path based matching you can use a closure to match on arbitrary request or response conditions. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aed6f14aaf6ebd3814f18506f566dab4185f549" translate="yes" xml:space="preserve">
          <source>In addition to the above keys, the following keys are implemented in some database dialects, but not all:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679caf214034f2dfd4aca5d0ebf688aa8c2fe107" translate="yes" xml:space="preserve">
          <source>In addition to the above options, the following options allow you to control which input elements are generated. By setting any option to false you can disable that input picker. In addition each picker allows you to set additional options that are set as HTML properties on the picker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cd666cac7b483b95fb6416c6cf1d08a0e9e765" translate="yes" xml:space="preserve">
          <source>In addition to the core events, behaviors can respond to any event fired from your Table classes including custom application specific ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb561c559b1d7ba7afea0de4e35696e26ec2395" translate="yes" xml:space="preserve">
          <source>In addition to the default routes, this would also connect a route for &lt;code&gt;/articles/delete_all&lt;/code&gt;. By default the path segment will match the key name. You can use the 'path' key inside the resource definition to customize the path name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41da087bcedfdfca9a918a4bb5a9070f66e155d8" translate="yes" xml:space="preserve">
          <source>In addition to the native &lt;code&gt;parse_ini_file&lt;/code&gt; features, IniConfig also allows you to create nested array structures through usage of &lt;code&gt;.&lt;/code&gt; delimited names. This allows you to create nested arrays structures in an ini config file. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1c61c273e1207d5b14399aead93499fb911d94" translate="yes" xml:space="preserve">
          <source>In addition to the standard find($type) finder methods, CakePHP provides dynamic finder methods. These methods allow you to easily set basic conditions up. For example to filter users by username you would call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d14351ae374bd8484ba894a941f1ccb268d81d" translate="yes" xml:space="preserve">
          <source>In addition to the standard options documented in Cake\Http\Client, this adapter supports all available curl options. Additional curl options can be set via the &lt;code&gt;curl&lt;/code&gt; option key when making requests or configuring a client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf4d1cdfe493cadb161fed99f803c016b72e15b" translate="yes" xml:space="preserve">
          <source>In case the class name is set after the target table has been resolved, and it doesn't match the target table's class name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785b82de83f02c126c2a80c20fe133e5ef861a41" translate="yes" xml:space="preserve">
          <source>In case the index is out of bound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4910ed88c4b06b1225195809313cb1ed21be1a" translate="yes" xml:space="preserve">
          <source>In case the matching crumb can not be found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb595174238f55d43f68396a303e378cdaa4771" translate="yes" xml:space="preserve">
          <source>In case the matching crumb can not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d8a53ae0f468002727e49f1bcd3189f95e90f4" translate="yes" xml:space="preserve">
          <source>In case the processed query contains any joins, as removing aliases from the conditions can break references to the joined tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497adf8841580c266d3f28d01290810d56abe1fc" translate="yes" xml:space="preserve">
          <source>In general all Cache operations are supported by all cache engines. However, Cache::increment() and Cache::decrement() are not supported by File caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1e2bc9eb14e5511e480e6fded0a79ba77a97c1" translate="yes" xml:space="preserve">
          <source>In order to mark a response as not modified, you need to set at least the Last-Modified etag response header before calling this method. Otherwise a comparison will not be possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6a3b58eaefa337795e5b96c3fa6a10d5f2e196" translate="yes" xml:space="preserve">
          <source>In some databases, this operation might not be supported or will require the query to be transformed in order to limit the result set size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e661b89fb1a3939112610d0f65f7236485a29a5d" translate="yes" xml:space="preserve">
          <source>In terminals this will act similar to using json_encode() with JSON_PRETTY_PRINT directly, when not run on cli will also wrap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353bb95314060ac4cc071ddfbb9a570eba7a5dc3" translate="yes" xml:space="preserve">
          <source>In terminals this will act similar to using print_r() directly, when not run on cli print_r() will also wrap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3024c99953b518eb20825f43188f386ab23c617e" translate="yes" xml:space="preserve">
          <source>In the above example, had the collection not been compiled before, the iterations for &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;sortBy&lt;/code&gt; and &lt;code&gt;extract&lt;/code&gt; would've been executed twice: once for getting &lt;code&gt;$isJohnHere&lt;/code&gt; and once for &lt;code&gt;$allButJohn&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadac3a23ce20ae25389182188229a9a44177815" translate="yes" xml:space="preserve">
          <source>In the above example, no field would be generated for the title field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784b7535ae32e83cf7f988bfe2a4a7a655e58cbd" translate="yes" xml:space="preserve">
          <source>In the above example, the email uniqueness will be scoped to only rows having the same site_id. Scoping will only be used if the scoping field is present in the data to be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc34b072599666d306fa10202b90f11ec787add" translate="yes" xml:space="preserve">
          <source>In the future this might be refactored into a separate widget as other input types (multi-checkboxes) will also need labels generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e1f883de40798ed4e3ee793925cde14a0c92aa" translate="yes" xml:space="preserve">
          <source>In this class we want Date objects to have their time set to the beginning of the day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d743329c501aae0f3cf506652e2ae08152663ad7" translate="yes" xml:space="preserve">
          <source>In this context class, this is simply defined by the 'length' array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf6ffe604a4be4f9965c8b8001bbc26c0aff973" translate="yes" xml:space="preserve">
          <source>In this context class, this is simply defined by the 'required' array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a402d45ea79a80d4d866dc0d5d2e2a1448f83c5a" translate="yes" xml:space="preserve">
          <source>In your controller, you could do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eec0ff4526a4e8d3efef3266047d6f425cf4935" translate="yes" xml:space="preserve">
          <source>In your controller: $this-&amp;gt;Flash-&amp;gt;set('This has been saved');</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f5e2634cc431a0693078c57c5a35b8b45863f8" translate="yes" xml:space="preserve">
          <source>In your template file: $this-&amp;gt;Flash-&amp;gt;render('somekey'); Will default to flash if no param is passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110f1cb43fd21e20e0ba4c6583eae567465e5fea" translate="yes" xml:space="preserve">
          <source>In your view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5d83183e9d6c943d20cd6c4d8f00ad10e70af0" translate="yes" xml:space="preserve">
          <source>In-memory cache of date formatters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80b01dd169a06b8517bf07e9a585dcaf7223466" translate="yes" xml:space="preserve">
          <source>In-memory group all results by the value of a column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741c47d1cbc1161e3846cae1b35d669a0db40f6b" translate="yes" xml:space="preserve">
          <source>In-memory limit and offset for the query results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203c758cb11a8560e084fa95f1d147ef2c8ea8c8" translate="yes" xml:space="preserve">
          <source>In-memory randomize the order the results are returned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2a37416957275c5515a0d01e624adf2189cf99" translate="yes" xml:space="preserve">
          <source>In-memory shuffle the results and return a subset of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097f0606263f890a0a4732fd10d410bce74ca00b" translate="yes" xml:space="preserve">
          <source>Include error details for PHP 7 fatal errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1b2f6d9e5c9ee1ada97609a1ff37635d89908a" translate="yes" xml:space="preserve">
          <source>Include file, ignoring include error if needed if file is missing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f64ddb41488d9f5c139487b9056939ccc0b6c0" translate="yes" xml:space="preserve">
          <source>Include multiple CSS files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bfe858bffbe857a8732ac2e54ccaf0204ec079" translate="yes" xml:space="preserve">
          <source>Include multiple script files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc9b1fa8055844b0efd221380b71c1a5d6584d2" translate="yes" xml:space="preserve">
          <source>Include one CSS file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4ce55099315a73dbc161a5312b0878c76ba712" translate="yes" xml:space="preserve">
          <source>Include one script file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acf6f8a749b23d77526ee2a9888ac506ce76491" translate="yes" xml:space="preserve">
          <source>Include the base path, set to false to trim the base path off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b6326094d6087872529746e29dfd80c0d411d6" translate="yes" xml:space="preserve">
          <source>Included by HasOne and HasMany association classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f287eda001408fc9101f1ec166f53566afbfa3" translate="yes" xml:space="preserve">
          <source>Includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1803614d926fdb0de0d481e9b9503b7fce8f91" translate="yes" xml:space="preserve">
          <source>Increases the PHP &quot;memory_limit&quot; ini setting by the specified amount in kilobytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df0044668fefff5f5cff15d549495f24d2fd472" translate="yes" xml:space="preserve">
          <source>Increment a number under the key and return incremented value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6d93c98f8ad4bca2738950db616f6cf83e636a" translate="yes" xml:space="preserve">
          <source>Increment a number under the key and return incremented value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396b3aec79c888b038d9a8fdffd599953b574320" translate="yes" xml:space="preserve">
          <source>Increment the progress bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f3763e4002733053c57585327a3f52cb218863" translate="yes" xml:space="preserve">
          <source>Increments the group value to simulate deletion of all keys under a group old values will remain in storage until they expire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd11e96089137c2fb571352bc3facaadb5008eaa" translate="yes" xml:space="preserve">
          <source>Increments the value of an integer cached key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fede8555bb57e6c6b6a743680b7243822facb0e" translate="yes" xml:space="preserve">
          <source>Increments the value of an integer cached key &amp;amp; update the expiry time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cef3b2ca06dc59888a6b4f8f7c9e227ab30c00" translate="yes" xml:space="preserve">
          <source>Increments the value of an integer cached key If the cache key is not an integer it will be treated as 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0a32478c407d4aa482d1e0f5838d4f152eddbe" translate="yes" xml:space="preserve">
          <source>Index of the crumb found, or null if it can not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab59c235876a721e1fd02492a697469e7efdf4aa" translate="yes" xml:space="preserve">
          <source>Indexes in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c718ddec01be57163a018e92380eae4bf8ff14d4" translate="yes" xml:space="preserve">
          <source>Indicate an invalid marker on a processed file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d3a27cda04f7a9466187489b368bb1fbc57376" translate="yes" xml:space="preserve">
          <source>Indicate whether or not this instance has been persisted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8824858281720162e4d29dadcf664745129b877b" translate="yes" xml:space="preserve">
          <source>Indicates when the field is allowed to be empty Valid values are true (always), 'create', 'update'. If a callable is passed then the field will allowed to be empty only when the callback returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a510cd76ded7bc10c56e0e73f7350628645db4db" translate="yes" xml:space="preserve">
          <source>Indicates when the field is allowed to be empty Valid values are true, 'create', 'update'. If a callable is passed then the field will allowed to be empty only when the callback returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f370c7c1257d999879e20542f131ea57c3bb3b59" translate="yes" xml:space="preserve">
          <source>Indicates when the field is allowed to be empty Valid values are true, false, 'create', 'update'. If a callable is passed then the field will allowed to be empty only when the callback returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720090e9e11421352cfbd36c0060ebe40b8b4cc8" translate="yes" xml:space="preserve">
          <source>Indicates when the field is allowed to be empty Valid values are true, false, 'create', 'update'. If a callable is passed then the field will allowed to be empty only when the callback returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae437625d37310c372f03523c5a9740c4c7646d9" translate="yes" xml:space="preserve">
          <source>Indicates when the field is not allowed to be empty. Valid values are false (never), 'create', 'update'. If a callable is passed then the field will be required to be not empty when the callback returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3a2d4393b716d4a9eec557ce3f3e5e31e00b51" translate="yes" xml:space="preserve">
          <source>Indicates when the field is not allowed to be empty. Valid values are true (always), 'create', 'update'. If a callable is passed then the field will allowed to be empty only when the callback returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b4922bcf8f6973599e0f5a768b0ce410a5c179" translate="yes" xml:space="preserve">
          <source>Indicates whether internal state of this query was changed, this is used to discard internal cached objects such as the transformed query or the reference to the executed statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856303943d5f889a35987df19d75aca4cf5c29c5" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the driver is doing automatic identifier quoting for all queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87703b0b7867bc49280319177d3565622eddac99" translate="yes" xml:space="preserve">
          <source>Indicates whether or not this entity is yet to be persisted. Entities default to assuming they are new. You can use Table::persisted() to set the new flag on an entity based on records in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4037f461f9484b272e577c3a1f97859a790e3170" translate="yes" xml:space="preserve">
          <source>Indicates whether the sessions has already started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc67506bec9fe97413fcd796806709ab3a74efb" translate="yes" xml:space="preserve">
          <source>Indirect Implementers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c04cc18be7a52403fd9c05a38a5925261a62dc4" translate="yes" xml:space="preserve">
          <source>Indirect Subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ef105476d9c198b6ecd775932f2e23dc00e1a3" translate="yes" xml:space="preserve">
          <source>Indirect Users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196423c0ec4302dd36ed7e139885b968b66ff86b" translate="yes" xml:space="preserve">
          <source>Inflect the theme name to its underscored version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafd00de01c4811a03238d79317158fcdd89f7fe" translate="yes" xml:space="preserve">
          <source>Inflected name of the theme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d406f4e5eb324400cc7984e9de2b53fbf6103bb2" translate="yes" xml:space="preserve">
          <source>Inflected value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6281ab7e03065c8421c8392d2dc4678570695c" translate="yes" xml:space="preserve">
          <source>Inflected value on cache hit or false on cache miss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fc83a7e9d34953d3dccbfb4e5fa6b48bcfcdde8" translate="yes" xml:space="preserve">
          <source>InflectedRoute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e26812a4c1266e80f64291fdc5fac187051e59" translate="yes" xml:space="preserve">
          <source>InflectedRoute (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db43beb3cf567acedc8152ce153bd0592b3e1c7" translate="yes" xml:space="preserve">
          <source>InflectedRoute::$_inflectedDefaults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f017dae50c4b18ec6f3f1cb4e71abe9f76bf77e" translate="yes" xml:space="preserve">
          <source>InflectedRoute::_underscore()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d199705277fe84e9ac7d3e6dc6c92c45a8ad1b2f" translate="yes" xml:space="preserve">
          <source>InflectedRoute::match()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d3d612b9c341767c8df176ef160675a9a38a43" translate="yes" xml:space="preserve">
          <source>InflectedRoute::parse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e074448d0469543888c91bb6f23be554d3effa21" translate="yes" xml:space="preserve">
          <source>Inflection type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6bdab0c6db458e90545a059bae821391f2bc1c" translate="yes" xml:space="preserve">
          <source>Inflector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69194b61df82ce1eb0977080e18f9c56568c709" translate="yes" xml:space="preserve">
          <source>Inflector (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4f43a0d7e0392b6162ce742c97e76c9da95d30" translate="yes" xml:space="preserve">
          <source>Inflector pluralizes and singularizes English nouns. Used by CakePHP's naming conventions throughout the framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20d2af487bb309cdf6c8c3ef143e5e40b02d5c1" translate="yes" xml:space="preserve">
          <source>Inflector::$_cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76942cf44897bb486d2ffe8e1daee3f7792c87e" translate="yes" xml:space="preserve">
          <source>Inflector::$_initialState</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d6135aef5dfbc0d02b7db3c20fd4bc9e5594d0" translate="yes" xml:space="preserve">
          <source>Inflector::$_irregular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95297a9ed7dbb65c0826b7e62e8b1a2aa2010ea4" translate="yes" xml:space="preserve">
          <source>Inflector::$_plural</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88bcb4e44470e407d9f3d77379b9f54bd93ba0c" translate="yes" xml:space="preserve">
          <source>Inflector::$_singular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b31e1585a46b242f07641a82b7a402021df8ea" translate="yes" xml:space="preserve">
          <source>Inflector::$_transliteration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4467aad7d1440160e8047f0b7f3217dc3020a851" translate="yes" xml:space="preserve">
          <source>Inflector::$_uninflected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1606595f3f2a77dc1c8c8970c291ca72c221a77" translate="yes" xml:space="preserve">
          <source>Inflector::_cache()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b405254f2b536494f05a4ef734bff9797256027" translate="yes" xml:space="preserve">
          <source>Inflector::camelize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f049e6f305f5c5ccc7dce473879f34c9f5ee538" translate="yes" xml:space="preserve">
          <source>Inflector::classify()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7198c6f2e639cc131693b9eb8f116b6c5a190bbb" translate="yes" xml:space="preserve">
          <source>Inflector::dasherize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288335777cfb0cbc947f6a4049f34da932e78715" translate="yes" xml:space="preserve">
          <source>Inflector::delimit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de65b2a459c15f4e46c8c09ef11400e12edbd02" translate="yes" xml:space="preserve">
          <source>Inflector::humanize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1d84bd2ac5c02a323d5e12c6d4dcd45136ec7f" translate="yes" xml:space="preserve">
          <source>Inflector::pluralize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db6d437cd2598bc69edacfcc9330c034b19f5ab" translate="yes" xml:space="preserve">
          <source>Inflector::reset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1614a43bc5f5ceb7431e7c8cb69495736f76e995" translate="yes" xml:space="preserve">
          <source>Inflector::rules()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246d06451b6c7ccdfd353053e83b8ecc43e96def" translate="yes" xml:space="preserve">
          <source>Inflector::singularize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7f1d39436907508a662426004e573a7c246575" translate="yes" xml:space="preserve">
          <source>Inflector::slug()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2955c955461231c0a5a4facd39e60e05fe6c389d" translate="yes" xml:space="preserve">
          <source>Inflector::tableize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5ceffca26030960f93d18986633e0a40687dac" translate="yes" xml:space="preserve">
          <source>Inflector::underscore()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64a1efb218eda0a8332c22715619a09404f5e1c" translate="yes" xml:space="preserve">
          <source>Inflector::variable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77fd6c17c4c4cced50164eb62b953b81ddd8c994" translate="yes" xml:space="preserve">
          <source>Inherited Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d479326ddff8b6c95955f7267cc1e2a82b30935" translate="yes" xml:space="preserve">
          <source>Inherited Magic Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97b2d009dc11ee2399b0468fc72e941eebbf165" translate="yes" xml:space="preserve">
          <source>Inherited Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a89bde0cf949ea9d3d0595c8865e61f6afb9d41" translate="yes" xml:space="preserve">
          <source>Ini file configuration engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ae2a2b88a3b3c42144d2626c066b69e3ebc27d" translate="yes" xml:space="preserve">
          <source>Ini options to set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abaadcdc2c6d35e848edf6d4c21954f4fd297340" translate="yes" xml:space="preserve">
          <source>IniConfig</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fb6683ce7ae0fbc95a3086d0ff04b5748a1985" translate="yes" xml:space="preserve">
          <source>IniConfig (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e215e6df9b761726d83dd107fa9f8d56a4436055" translate="yes" xml:space="preserve">
          <source>IniConfig also manipulates how the special ini values of 'yes', 'no', 'on', 'off', 'null' are handled. These values will be converted to their boolean equivalents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed54374106c7450ab640f63f03f1133069032f0" translate="yes" xml:space="preserve">
          <source>IniConfig::$_extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c14ebcb7b3b859cd6c50d1050967a6d7ba056f1" translate="yes" xml:space="preserve">
          <source>IniConfig::$_section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42ef0b8de287033e37e18d1f1d562c8dd403132" translate="yes" xml:space="preserve">
          <source>IniConfig::__construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4271f50226e56960a85c45357891b2b24e791c" translate="yes" xml:space="preserve">
          <source>IniConfig::_parseNestedValues()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efeca19c4785566f3c6d72c19733223f4ad71f3" translate="yes" xml:space="preserve">
          <source>IniConfig::_value()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e7cecdb171f463b2ef36fc4b386cea6bd1c28b" translate="yes" xml:space="preserve">
          <source>IniConfig::dump()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737d26114e233b735df665b97d26880259088127" translate="yes" xml:space="preserve">
          <source>IniConfig::read()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c373aaaf2ddf2b08e071fa0775aa05bd3e3288" translate="yes" xml:space="preserve">
          <source>Initial state is populated the first time reload() is called which is at the bottom of this file. This is a cheat as get_class_vars() returns the value of static vars even if they have changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ccdb1dadd688312724179edb27aca104d2437b" translate="yes" xml:space="preserve">
          <source>Initialization hook method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b0cfb21a4a000577d3d125dce74bffd0c3e0ea" translate="yes" xml:space="preserve">
          <source>Initialize File Cache Engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0dc7eff4de8fb917609915315c90391f7c9883" translate="yes" xml:space="preserve">
          <source>Initialize SimpleXMLElement or DOMDocument from a given XML string, file path, URL or array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bfb16bf860a7a3059755d2a2a85686922f9ad9" translate="yes" xml:space="preserve">
          <source>Initialize a table instance. Called after the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77b70f4c5f2bfa0f02610c7b7175e7b865b60c7" translate="yes" xml:space="preserve">
          <source>Initialize config data and properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd258b44bc721f67f27c3d0b329b7b52025d68bc" translate="yes" xml:space="preserve">
          <source>Initialize environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a96b8fa98aebb924061cdb095ff79db2c30064b" translate="yes" xml:space="preserve">
          <source>Initialize hook</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf478d72abfdcdcecd5f2758e1422be5d959a14" translate="yes" xml:space="preserve">
          <source>Initialize properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2480135eb2a88f069403694dd5bba12c48855e45" translate="yes" xml:space="preserve">
          <source>Initialize the Cache Engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf11e8046f958abc4f49cec6639ef3461c929e29" translate="yes" xml:space="preserve">
          <source>Initialize the cache engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ff52d1ac9516df8f358c98ba1301f7aa8d041b" translate="yes" xml:space="preserve">
          <source>Initialize the fixture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecb7eb83d3c7dedc3f067a61ef462622142fe6e" translate="yes" xml:space="preserve">
          <source>Initialize the progress bar for use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea3bacd4b0e6f1b7ffdc0387d18c3c829c09b8d" translate="yes" xml:space="preserve">
          <source>Initialized with the env variable UPDATE_TEST_COMPARISON_FILES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d926d9bf101572e06f7f8b0dd7c754656c894a" translate="yes" xml:space="preserve">
          <source>Initializes a new instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aa0365951d7a3d0a00cba0e2e6979e17ab28e0" translate="yes" xml:space="preserve">
          <source>Initializes components, which fires their &lt;code&gt;initialize&lt;/code&gt; callback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbc5faa0c7a312fee0b0d171365d1692b72a906" translate="yes" xml:space="preserve">
          <source>Initializes registry and configurations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17167a9f289e1e6a9eacaa059f4b73dfb6f231a" translate="yes" xml:space="preserve">
          <source>Initializes the Shell acts as constructor for subclasses allows configuration of tasks prior to shell execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa55a26f7567e1e2b7779436518e7938ac558909" translate="yes" xml:space="preserve">
          <source>Initializes the environment and loads the CakePHP core.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ec3823241855d0626b1aa52164bdeccd4190cc" translate="yes" xml:space="preserve">
          <source>Initializes the internal properties of this entity out of the keys in an array. The following list of options can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445b6f5a4d6a67d4a6f42dbe9c4474de81bb4b5e" translate="yes" xml:space="preserve">
          <source>Initializes this class with a DataSource object to use as default for all fixtures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984bbb9b156b408f2d4fb70b4fcc33bbcef301bc" translate="yes" xml:space="preserve">
          <source>Inits PO file from POT file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06964c0512e62c021f672474b6eeb079a209fe4" translate="yes" xml:space="preserve">
          <source>Injectable registry object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9f48f23ac298fec13f3373deb947f0cf55f7d5" translate="yes" xml:space="preserve">
          <source>Injecting a constructed adapter in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252170534d166cfd649dbdff82e1404f6fcb6340" translate="yes" xml:space="preserve">
          <source>Injects mock and stub io components into the shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8412738d27dd1ecd0c1b5a0f59c5043f7db5347" translate="yes" xml:space="preserve">
          <source>Input (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4233c554377ae7d31020d23c55dac01724d7082f" translate="yes" xml:space="preserve">
          <source>Input passwords will be hashed even when a user doesn't exist. This helps mitigate timing attacks that are attempting to find valid usernames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103b73f8b8612de7f92ed544d130aab2ccb3dead" translate="yes" xml:space="preserve">
          <source>Input value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927e2fa04410d99fc5977066ddbff443b9ea3d6f" translate="yes" xml:space="preserve">
          <source>Input values to pass to an interactive shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ec93359522e841db286d7c9b002cc4e1331eb9" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a date time input widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2ba82321cecafeefee11f86800f5bcb9eeb5b8" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a file upload control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926653b5901b8fd93492f40a14f17162b3c48028" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a selectbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f57d3865d0cb8169ace820702403aa81d7b88fb" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a set of radio buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccaceafb6f54299fe7b023f771aa9eaf4f3b4e5" translate="yes" xml:space="preserve">
          <source>Input widget class for generating a textarea control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eeb270812a9953fdee8d9b9a4e2f18c7e0ba98a" translate="yes" xml:space="preserve">
          <source>Input widget class for generating multiple checkboxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cb1f6dbeed3db05ee440b39c0daa415f31fe71" translate="yes" xml:space="preserve">
          <source>Input widget for creating checkbox widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f633addab73227371df9f37f126c2830a1a01476" translate="yes" xml:space="preserve">
          <source>Input::$_canReadline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98287869a9bcb2edf891decd3472e68ceb553b69" translate="yes" xml:space="preserve">
          <source>Input::$_input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865f98c1404db47ae344e1dacf938595ae771af8" translate="yes" xml:space="preserve">
          <source>Input::__construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229ba39b07cb8658df90733c897314511fdf4b36" translate="yes" xml:space="preserve">
          <source>Input::dataAvailable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b872a644e7f7ce4a200e4531b18dfb02571a4934" translate="yes" xml:space="preserve">
          <source>Input::read()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7806a8ccd0ae148ded5fcad2fc2fdae6635ca4bc" translate="yes" xml:space="preserve">
          <source>InputArgument (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a010cabb65feeb6b9c30bc980b1d0616c527abca" translate="yes" xml:space="preserve">
          <source>InputArgument::$_choices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c794d4433f4117604b4284c333d32cd8ef942d75" translate="yes" xml:space="preserve">
          <source>InputArgument::$_help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda239e4d5126c5a11a6fd23058b89f389de77a9" translate="yes" xml:space="preserve">
          <source>InputArgument::$_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7490fbb88eea4bad5ec280720f8f204b144c3d7" translate="yes" xml:space="preserve">
          <source>InputArgument::$_required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7e112208b6a547bd1912ff31e5eddbb9de7d78" translate="yes" xml:space="preserve">
          <source>InputArgument::__construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781da8b093c37e7d4d5b4fb8faa8acbcd1882022" translate="yes" xml:space="preserve">
          <source>InputArgument::help()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6670c449e15e457d54a2390ffaec0633573900" translate="yes" xml:space="preserve">
          <source>InputArgument::isEqualTo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c3d3a73f7d066cfd54ad814e097a8ba3af9908" translate="yes" xml:space="preserve">
          <source>InputArgument::isRequired()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc38b28bdc42f8f62797c0fd581bfc392413fea1" translate="yes" xml:space="preserve">
          <source>InputArgument::name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed9857254ff966511702d13b919ef514aefc102" translate="yes" xml:space="preserve">
          <source>InputArgument::usage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2765cf5ff65732af7695bd091ea09c7e295381" translate="yes" xml:space="preserve">
          <source>InputArgument::validChoice()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d331dc4ab1ad73e26ebb1082d90d14f0fce3b6f" translate="yes" xml:space="preserve">
          <source>InputArgument::xml()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f951ad022d0036fcc74400a3971dcd497163cad2" translate="yes" xml:space="preserve">
          <source>InputOption (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cb950c90838751d3573cc1f7d0e0ce89794ad2" translate="yes" xml:space="preserve">
          <source>InputOption::$_boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238c95d200cad6d017e3bd32f19b1fc7981efabd" translate="yes" xml:space="preserve">
          <source>InputOption::$_choices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d64ce73d7e39bfa629380812c2792e8a1ff3884" translate="yes" xml:space="preserve">
          <source>InputOption::$_default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a723afaa73e05950932c07eca6103ef99eea1760" translate="yes" xml:space="preserve">
          <source>InputOption::$_help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9a653b9616df3735eee0c7183ab481f2aa1e79" translate="yes" xml:space="preserve">
          <source>InputOption::$_multiple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfccc75d43f69fda44cd71110fdeba9b351f08ea" translate="yes" xml:space="preserve">
          <source>InputOption::$_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd04436d3d2943f0e3419e2b4eb40602ed9383f" translate="yes" xml:space="preserve">
          <source>InputOption::$_short</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c54af0955d8054c444eb0fd72651dfca1192736" translate="yes" xml:space="preserve">
          <source>InputOption::__construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e1a10e6aa755037e3e1d9cfec72a8caedbc354" translate="yes" xml:space="preserve">
          <source>InputOption::acceptsMultiple()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f360d051c8018e8fd965b8c41cf8f600ed72f38" translate="yes" xml:space="preserve">
          <source>InputOption::defaultValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52179dbc983772b5e7b9bf17f62d7db5a7324fa2" translate="yes" xml:space="preserve">
          <source>InputOption::help()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23d2e6f32fb2d0358f6a8bc6c9c2cbf23da44fb" translate="yes" xml:space="preserve">
          <source>InputOption::isBoolean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856765f7a9679b2e0712662404128a545d49deb0" translate="yes" xml:space="preserve">
          <source>InputOption::name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64b557207cbb84834f703285e4abf7f5cd8175a" translate="yes" xml:space="preserve">
          <source>InputOption::short()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e9ada919f688880bb66e776b4451daa7da9d6f" translate="yes" xml:space="preserve">
          <source>InputOption::usage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e92caa37e06558f62f34504a275d1bc9b6aa7aa" translate="yes" xml:space="preserve">
          <source>InputOption::validChoice()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd183e7aa2518b2c31328e82b5b29308c38103c5" translate="yes" xml:space="preserve">
          <source>InputOption::xml()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6d564d763f4dd6148bd5e1da6853728fda4bc2" translate="yes" xml:space="preserve">
          <source>InputSubcommand (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91446c0f5480de2d793354a91ec84568d042c3a" translate="yes" xml:space="preserve">
          <source>InputSubcommand::$_help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30104601ec033c9f7d2f075e9c59260c5056760" translate="yes" xml:space="preserve">
          <source>InputSubcommand::$_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f8b28cfe4843941cc6797965455096dac43ff5" translate="yes" xml:space="preserve">
          <source>InputSubcommand::$_parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b7809f7148143b3900d0983912e6ce0c71cb00" translate="yes" xml:space="preserve">
          <source>InputSubcommand::__construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50117fa8ca86586965b11cad281616059d0b223" translate="yes" xml:space="preserve">
          <source>InputSubcommand::getRawHelp()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bef9fbccca3516fb95ee515a81849db0db28ae7" translate="yes" xml:space="preserve">
          <source>InputSubcommand::help()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e014365ae79cbedc60a577044cca7c1bb164738" translate="yes" xml:space="preserve">
          <source>InputSubcommand::name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9023e9d1b71b39f967a50bde511327256d93d95" translate="yes" xml:space="preserve">
          <source>InputSubcommand::parser()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4faa13d5d4f53a2ef533cb371d7511fdcaeb9438" translate="yes" xml:space="preserve">
          <source>InputSubcommand::xml()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f5f09501c5157547c23b76cf049feb5191a804" translate="yes" xml:space="preserve">
          <source>Insert $values into an array with the given $path. You can use &lt;code&gt;{n}&lt;/code&gt; and &lt;code&gt;{s}&lt;/code&gt; elements to insert $data multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38be00f07e14caaef8d0da57826635075e2f97d" translate="yes" xml:space="preserve">
          <source>Insert a crumb after the first matching crumb with the specified title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb40da3fe5fdfeeea4d0ea2d9eec12ae3919342" translate="yes" xml:space="preserve">
          <source>Insert a crumb at a specific index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b61b72b8a42ad0ec9de30e3ec011ca5b9a5266" translate="yes" xml:space="preserve">
          <source>Insert a crumb before the first matching crumb with the specified title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3553056af60e00aa068a8616ff1bff8d6bf410bb" translate="yes" xml:space="preserve">
          <source>Insert a middleware callable at a specific index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce210d1e94a8a8c6be0adf3c827632035d06435a" translate="yes" xml:space="preserve">
          <source>Insert a middleware object after the first matching class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087a893bff5829c67fc3d10ae481c5a22e3c2a7d" translate="yes" xml:space="preserve">
          <source>Insert a middleware object before the first matching class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4094ce54284b6a886a66f6c76867ea4c13e2724d" translate="yes" xml:space="preserve">
          <source>Insert ages into a collection containing users:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2f9eda45eb8fcbdb00ef0c68a02c80566283ec" translate="yes" xml:space="preserve">
          <source>InsertIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748ca27801f406b1dbd1c56cd3e379d1a9086e60" translate="yes" xml:space="preserve">
          <source>InsertIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dfa37020cabe916b1f85e5973581e9ef2457f0" translate="yes" xml:space="preserve">
          <source>InsertIterator::$_path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4afc10d395f6a469b235fe82271fe34ef1f995" translate="yes" xml:space="preserve">
          <source>InsertIterator::$_target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87dcebf1b950f89c20f27d8422c26a2e3bc6dc78" translate="yes" xml:space="preserve">
          <source>InsertIterator::$_validValues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9938f91daf1e5af5a9fbac7fbfdadfa4300858" translate="yes" xml:space="preserve">
          <source>InsertIterator::$_values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0cefb4a0909404f3e0d638d517b386da54e759" translate="yes" xml:space="preserve">
          <source>InsertIterator::__construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6230f45fbceadd1d58dee5488beea4471d12ce3e" translate="yes" xml:space="preserve">
          <source>InsertIterator::current()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca39deed642cfd9117de7ff8dbfea2fbdea57bc" translate="yes" xml:space="preserve">
          <source>InsertIterator::next()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c33bf5b29747fda74a6d3ea21a44acc73a8c0e3" translate="yes" xml:space="preserve">
          <source>InsertIterator::rewind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a70be2d98b36400da5562939502aff1e32d356" translate="yes" xml:space="preserve">
          <source>Inspect controller to extract possible causes of the failed assertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6bbc5c85189228c7a3d0214edb5de0ee8bee377" translate="yes" xml:space="preserve">
          <source>Inspecting loaded paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cccb1154daad520d96f4e4114f6383b93b895e4" translate="yes" xml:space="preserve">
          <source>Inspects if there are any set fields for selecting, otherwise adds all the fields for the default table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cd9ca0361a237fb9e260b0fb6e68e2208e8b2b" translate="yes" xml:space="preserve">
          <source>Inspects the request for the Accept-Language header and sets the Locale for the current runtime if it matches the list of valid locales as passed in the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4f782e8047f98693a29014f611941eb3d9975f" translate="yes" xml:space="preserve">
          <source>Inspects the test to look for unloaded fixtures and loads them</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c302d039041ad704cf6ccc9002abf730390055b" translate="yes" xml:space="preserve">
          <source>Instance cache for results of is(something) calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96d5e001a4d947fb71f44b118090c02d4e83127" translate="yes" xml:space="preserve">
          <source>Instance of BaseLog or false if not found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c000fa82ad1cb7da181307910252ec94b2ffe136" translate="yes" xml:space="preserve">
          <source>Instance of Cake\Http\Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97210a1e475439ed6b7725df1dce785ba193da1" translate="yes" xml:space="preserve">
          <source>Instance of Cake\Mailer\Email</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d03a47269a9109b842571ef753230a228926ea0" translate="yes" xml:space="preserve">
          <source>Instance of ComponentRegistry used to create Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c47c26dd908c42ab74b0cdcae03fbfd54ae282" translate="yes" xml:space="preserve">
          <source>Instance of PDO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfd24e74b1b2e3fb06de7e247db71514ac31052" translate="yes" xml:space="preserve">
          <source>Instance of SplFileObject class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3629f8c9622180bfaeb712776a65666d44a7cf3f" translate="yes" xml:space="preserve">
          <source>Instance of Table responsible for translating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d890252aef3d3d2e16aac366941792478709c3" translate="yes" xml:space="preserve">
          <source>Instance of a Session object relative to this request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8607501a7dc3a08f32ab4799b439fc1fcabeb21b" translate="yes" xml:space="preserve">
          <source>Instance of a class responsible for storing association containments and for eager loading them when this query is executed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe67ae6899a507498977245e14db0105208ecb6a" translate="yes" xml:space="preserve">
          <source>Instance of a locator to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb0b0ba49a43ffc3188106e8f0a3a355a0d14c3" translate="yes" xml:space="preserve">
          <source>Instance of a table object this query is bound to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4aee8e0ce6a747e714caebee927e8fdaf4a4231" translate="yes" xml:space="preserve">
          <source>Instance of functions builder object used for generating arbitrary SQL functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a709a2a9cb8d2f8b5844231a35283766bcad563" translate="yes" xml:space="preserve">
          <source>Instance of the Cake\Event\EventManager this object is using to dispatch inner events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2743294a4a04d32a8e77463fb161cf0f28808d71" translate="yes" xml:space="preserve">
          <source>Instance of the Session object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bde2d11aba7de708b351d33cfe4ac70dd035e3" translate="yes" xml:space="preserve">
          <source>Instance of the View created during rendering. Won't be set until after Cell::__toString()/render() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c79e7f030bd8c9a6396637768fc76f8288b2310" translate="yes" xml:space="preserve">
          <source>Instance of the View created during rendering. Won't be set until after Controller::render() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d084dc45adc3e84f2376fd9cf20b86cc78ef2c9" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4f476c33061e73c1890da46b9cfab0c8896c75" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ad5c4b3be5755e8a49d9c27782b57289d5776d" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::$_config</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca925502536b755363c79430e8269c4783ade0db" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::$_configInitialized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a98ff15f9f53e8a67680d47b7b3f42ab838248d" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::_configDelete()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7eed20d5bc39077fa90897c7c72de5b4d0d5ed" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::_configRead()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d7ca3376fab2cde9217913935ffbe0919685d8" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::_configWrite()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a2dfc3eaf6f4aeaa12ba41d92ba770e264846a" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::config()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2201d801797d8fb92e783194c98e2eda014678" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::configShallow()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e482a82880fdbe97cd08339ef996d4d917cb96" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::getConfig()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb83cae5df234d0f3845bf2bfba6473831c9266" translate="yes" xml:space="preserve">
          <source>InstanceConfigTrait::setConfig()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc56b17f3df721e70bcb2717a0c09349817d8c0e" translate="yes" xml:space="preserve">
          <source>Instances of filters will be re-used across all sub-requests in a request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478709b4e14a9fcb07135f8304c26456b4fb3828" translate="yes" xml:space="preserve">
          <source>Instances that belong to the registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad34b18f05a6a1444342130ce8825daafb45cceb" translate="yes" xml:space="preserve">
          <source>Instantiate the fixture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c9f1913e66482e35b1f61338d0882035e5a382" translate="yes" xml:space="preserve">
          <source>Instantiates the correct view class, hands it its data, and uses it to render the view output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd8e983866b583cf4d826bb07212a1024afe578" translate="yes" xml:space="preserve">
          <source>Instantiating controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d6f03ded73b9404610661e3796397fb6363b6f" translate="yes" xml:space="preserve">
          <source>Instead we need to handle those errors manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c675a2884045c1c230c0f0c668aab1143adcab" translate="yes" xml:space="preserve">
          <source>Instructs the router to parse out file extensions from the URL. For example, http://example.com/posts.rss would yield a file extension of &quot;rss&quot;. The file extension itself is made available in the controller as &lt;code&gt;$this-&amp;gt;request-&amp;gt;getParam('_ext')&lt;/code&gt;, and is used by the RequestHandler component to automatically switch to alternate layouts and templates, and load helpers corresponding to the given content, i.e. RssHelper. Switching layouts and helpers requires that the chosen extension has a defined mime type in &lt;code&gt;Cake\Http\Response&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2fcbe23f9fcab09f8e2f4ac089942f0fb36fba" translate="yes" xml:space="preserve">
          <source>Integer of the level or false if the node does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71dd1904e66105b87986c7593edc281e3e11f8a" translate="yes" xml:space="preserve">
          <source>Integer type converter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1654cbf5d4bc76e43db53e3a1f62a2b020390ea" translate="yes" xml:space="preserve">
          <source>Integer, even &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3e335bf751506bceedcb32c9cd8fe826512024" translate="yes" xml:space="preserve">
          <source>IntegerType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5e159889e08ce11631b1560a8ccf8c1f138f58" translate="yes" xml:space="preserve">
          <source>IntegerType (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ee477def1e3700f110e4e014d922fed8a77453" translate="yes" xml:space="preserve">
          <source>IntegerType::$_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b479384ba73d349e6d10724c093fc424dec1e222" translate="yes" xml:space="preserve">
          <source>IntegerType::__construct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27abc3164c9639d396bf07cac62dd3f788c6061a" translate="yes" xml:space="preserve">
          <source>IntegerType::checkNumeric()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617b2e248deb8efd5d32b0affe2d6ee56f1e3877" translate="yes" xml:space="preserve">
          <source>IntegerType::manyToPHP()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9333e2955bff7131d286322cffeaabfb4b5caaf3" translate="yes" xml:space="preserve">
          <source>IntegerType::marshal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1f7ad54046d13705c909f70e0f4e7422f11937" translate="yes" xml:space="preserve">
          <source>IntegerType::toDatabase()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5532d1ff8b36a847129d4be3f79ca82fa8b758" translate="yes" xml:space="preserve">
          <source>IntegerType::toPHP()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e157dcb3d35f75be049c74566dbcda27b77a958" translate="yes" xml:space="preserve">
          <source>IntegerType::toStatement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df22c29249ca76094f0b5e0241cbb29fc3a5d3e" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5974f6de0ca76b1102ad4fe6366ff2b297d42fd" translate="yes" xml:space="preserve">
          <source>IntegrationTestCase (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ba075642906c31670f06e48b0b15f011c24d4f" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf550e45f935d85668bfc6147c0ec4c96f4c714" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acc288bae758fee694470e753e7e61d10ee6b43" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_appArgs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986c588838d40a7863a1bee922f76f2122deee7a" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_appClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e54a37eb3e0c564aca796e99f1523a28e3d3944" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef667ca85ebe10f957affb0eb96035d676084c94" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76f66a38d476a1ece0121d636f08c21d99487c3" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_cookieEncryptionKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a904c07bc5c47ff9c08e05f3fabbff87afabb2b7" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_csrfToken</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c609f50fcd1d22ff32fb22d906e21ae34d35af" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7259438d2384b5c828ec0baf27a7089e5d17f5" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_flashMessages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3545ca26fd35a0545320ba900d7050942d6b8b3a" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_layoutName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1fb4a5a68d437af9f623588f087c6a83d2a01c5" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e4c261a40ef377a7204766a538595eb4f50942" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_requestSession</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557ab5bd0bcee1466b421eda9c1fb5f70fbda30a" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27999db6a7c40b51023a1cc09b589c38228fa83" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_retainFlashMessages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ec3b5b009d6919710846376e68404d00eb27c4" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_securityToken</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed24fc20f77c1d1192ba95ce51ac73a65dca0c1d" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013ef2fb5836ec4551936983ea7383a778dd3a5a" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_unlockedFields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840880f4493474981c354eaeb033adff47888fb6" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_useHttpServer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f213b8a5498c2c51b2374a78c093bf9f89399fed" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::$_viewName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153f4b1c4be4682aa9f1bbceffea1aebc5ea69e7" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::_addTokens()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eab23aa981c2ee687ab3e8d2a6d674caa6bc9a9" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::_buildRequest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3050c60063d1e18c55f45e5c1b6f3e3a2453b7aa" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::_castToString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06993abd68e449c1ca47a8bf92ffb254c65de3d9" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::_getBodyAsString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee886813b489f5165f6191a150babfdb5eb44be" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::_getCookieEncryptionKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30a1de39f6067c39d36a81839b57fa62f16773d" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::_handleError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb230605143f3085553453ffb64e96ba584d3afd" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::_makeDispatcher()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c86074ad75db62d21052282754f5ae64cf81ecd" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::_sendRequest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69df6a032a47eacf9568a339619c0b03bcc4c47" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::_url()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa77d277cf97605e78afd9142fa9584b4e64d0ff" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertContentType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69a527f696823763f333d028b1daf6a8e0f8b3e" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertCookie()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214b4554183da99a7f3d744791bdf26f96f1f6cd" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertCookieEncrypted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a454e2d18243b4539db73cd73e90c3d47901a51b" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertCookieNotSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5dce2de9cafa973442ba44e2393311cdd8bea0" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertFileResponse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba16042277aca2d9524b55407aa21e12148d3c9a" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertFlashElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4231f2bdd41c929de27c0dcb1b5eeb82386f927" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertFlashElementAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86367982c3f7a9b551fe842499a527073e2da14d" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertFlashMessage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71e2ecce08c636d54a8d5e4d4f005215f5ca3fe" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertFlashMessageAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2bc747b8a18305830412f7b42d696da047c8d3" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertHeader()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a79c5606c0b5a80fa52645b5f659531377e3787" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertHeaderContains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b71f8c4e45a9e6d4fb691a5953bb11da07cbb7" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertHeaderNotContains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7117dc18bae0055483db39ff76fc0fcca4f428a" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertLayout()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c62c865b1b9ead519412a743fff80543b79426c2" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertNoRedirect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267a211ba1730474f5b4fc349e800b974f78a52c" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertRedirect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f618436651e944706d7c188b95c32384cad1ab" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertRedirectContains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9cb7c4947f01a6f51a8530ee45a2293cd7c3e1" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertRedirectNotContains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0095d6dcf1339edd5b54280e9107dcccc781db3" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f565c5ed2906a6e2b4fb7aa5ffdb59446c78899" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseContains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1086732c721d04628204f6a07479c4dab848d0f7" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a7194da165d30849f16895bf44cbfca650c79c" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseEquals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fa532a70ba9ced5cfae1780976b8f9495db17c" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409da0d06d054a040baac45007b2bc7f25499543" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseFailure()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5376e4a285c2c06888a26293596c6f91ac6d63" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseNotContains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e5fbc1c73e907fe61c3e557cc2afb976820e97" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseNotEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f960c790581924bcf19e97d87ce505bedbb9213" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseNotEquals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccdf965cca0c375c4c4b5af5b8a01e5f5fb5931" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseNotRegExp()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e264930a94f6dcdee955255b97946b2c42fafeec" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseOk()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e0097534446dfcbb3b082e9d9f32981b70a3fe" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseRegExp()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9acd1691f4377ae2ad2eb4b48a3e881d968887" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertResponseSuccess()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130f94b902cf3307995769c6cd6127c3fc8e662c" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertSession()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c248c0cb609560a5443f87507f098d688ff84b4d" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::assertTemplate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89975a7eb8757495ec0376f3de39897f6a606be4" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::cleanup()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40912481d0a788a8a27deeafc13b10e90543edd0" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::configApplication()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951911dcd57995797fc56c535de763cfd132a402" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::configRequest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a42db110f8d01b1d64a8bbf14e1e43fbd48c72" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::controllerSpy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2defb1fe60df852c72108d0138ea5d2901cb538c" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::cookie()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7874704b7f7db72762fffc7071737f58382052" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::cookieEncrypted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56cb083a28e2739a9e62b2da8a72ac70e4eec4e0" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::delete()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cb103b63bdd2dc35d9390e1f69d248ee7e0bc6" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::disableErrorHandlerMiddleware()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5512e1fab86539781b79206293f48a4255d01d1d" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::enableCsrfToken()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c33eea7042bda68818efe1f2a1f4e5b18f2243" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::enableRetainFlashMessages()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3398bfbf84a324ab22f81c8973f435484456f3ab" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::enableSecurityToken()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb42fcca6c7462fb98c572433cd25db80ddb572a" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::extractExceptionMessage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ce84d06f919250229b4fc050e6cd5c9c0827e5" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::extractVerboseMessage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fed1540de25a1e91df36b539771fbb865253b0" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efde514853dfd33f04e8680b57a06125ff2620fa" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::head()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71bd4ee382fbbe716fd9ea328e16d93778163d5" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::options()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4501a5857ba33162de9c0f17bb0b9a8195f44354" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::patch()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af281b8d1d0c96cbbeaffc1d94bf946d336fe8ee" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::post()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee798d56941831b073ad1cfb11888b151b045ab" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025130e89fdd4f40112c5c6671798d3aee0f7c3c" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::session()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36395246b8943d8ab59ca9cd5882e6d2d897dbe" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::setUnlockedFields()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7568cde619566bbae20dc7ffa82c1e133097bf" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::setupServer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d39bba5cd0da0864e51f7489a98ade0638123d3" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::useHttpServer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2cd6f7df0481d3272f4c1a134f74a2036cb2f2" translate="yes" xml:space="preserve">
          <source>IntegrationTestTrait::viewVariable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e00c6e44f82da73fbb2a49993b925b59aee5e2" translate="yes" xml:space="preserve">
          <source>Interact with the HelperRegistry to load all the helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7951bbe38b02cec1a4398645fe8cb8251a38940" translate="yes" xml:space="preserve">
          <source>Interface (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e7bebb1dac9c4312ec8d70993d1a5584344463" translate="yes" xml:space="preserve">
          <source>Interface AdapterInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475ca5699b7e8cf43963a69d5a899bb09b1268b8" translate="yes" xml:space="preserve">
          <source>Interface BatchCastingInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ecc07d70fe4c3f244a249a1aa28b5d4b2988ec" translate="yes" xml:space="preserve">
          <source>Interface CacheEngineInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd61e68436f71ec88fd8ee290833b0763e49f339" translate="yes" xml:space="preserve">
          <source>Interface CollectionInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b120341e4c2923fdbabac8f30769cb11fdc2a9" translate="yes" xml:space="preserve">
          <source>Interface CommandCollectionAwareInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a615d86df30801a9ac56100357d9fc5a476777d" translate="yes" xml:space="preserve">
          <source>Interface CommandFactoryInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192a8685ac13188491c02d5c2c4361a53d171e88" translate="yes" xml:space="preserve">
          <source>Interface ConfigEngineInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8f8ca520b836d6210fb063303e8bab61433160" translate="yes" xml:space="preserve">
          <source>Interface ConnectionInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab83f538723942a11ad4be41f3939c766637e18" translate="yes" xml:space="preserve">
          <source>Interface ConsoleApplicationInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b268a573e7ebba2f7b47e9830296872a025be08" translate="yes" xml:space="preserve">
          <source>Interface ContextInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a211785531f279fc2ef610d67436ac6cebf9577" translate="yes" xml:space="preserve">
          <source>Interface CookieInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d0035e61707b91042b54af2a5fa76a550c03df" translate="yes" xml:space="preserve">
          <source>Interface DriverInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a21f44415b9b45c7cf458d08250e9abd802e400" translate="yes" xml:space="preserve">
          <source>Interface EntityInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47dcf31ebf90beb9e658dc205d791d06e28ccfe" translate="yes" xml:space="preserve">
          <source>Interface EventDispatcherInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c71a3c2a0f9150201f20138882a1d6d306a56e" translate="yes" xml:space="preserve">
          <source>Interface EventInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4322806f77899db51d6f59b9cf7ac4d9d710a1" translate="yes" xml:space="preserve">
          <source>Interface EventListenerInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b340fe1e2e29c1b93da9fa2f10fb714353dcceed" translate="yes" xml:space="preserve">
          <source>Interface EventManagerInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d703f52ee59d312f17b18c0920bd893d104405b7" translate="yes" xml:space="preserve">
          <source>Interface ExceptionRendererInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba548909afbff782692047bc9aaa6f323eb9be9" translate="yes" xml:space="preserve">
          <source>Interface ExpressionInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62745a4513f9c22048cb604f41642fe06aaefc92" translate="yes" xml:space="preserve">
          <source>Interface ExpressionTypeInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6583248c22907eb7a5060207f5b193b0c18b6910" translate="yes" xml:space="preserve">
          <source>Interface FieldInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27787f710bb7e0f1124a929f1540b8b886a719b0" translate="yes" xml:space="preserve">
          <source>Interface FixtureInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a19e5fd20eccfd55b449c9fbe7068dfa0efddb" translate="yes" xml:space="preserve">
          <source>Interface HttpApplicationInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854d22784157a9f564edaf92529ab6f0af796746" translate="yes" xml:space="preserve">
          <source>Interface InvalidPropertyInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6d4ea3f5a3eed387bf7271077a37195560db03" translate="yes" xml:space="preserve">
          <source>Interface LocatorInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd0bd011c269a6d70ce58d8b9692d169f559d45" translate="yes" xml:space="preserve">
          <source>Interface OptionalConvertInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd76927d71865cb377563e2bfe0c1d1e2d018c1" translate="yes" xml:space="preserve">
          <source>Interface PaginatorInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be65c7d8f2d6e018d838ade07a0dc7ddc9e7c03" translate="yes" xml:space="preserve">
          <source>Interface PluginApplicationInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438bc6a03c2fd050dfe65bc50491ba755031ecf0" translate="yes" xml:space="preserve">
          <source>Interface PluginInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a06d8e03a699ad2a4773ceada78f4fed15717e" translate="yes" xml:space="preserve">
          <source>Interface PropertyMarshalInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da96c2200d4682547918660c261899dfad61cd13" translate="yes" xml:space="preserve">
          <source>Interface QueryInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe748287dbf460f26ff797a2cece6f15c03b0f4" translate="yes" xml:space="preserve">
          <source>Interface RepositoryInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0bd8e41318abfd5231674ed7a225cfc7ff5b1e" translate="yes" xml:space="preserve">
          <source>Interface ResultSetInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31c72e3c5a144a1e497c6a1c0e333adfc70b44e" translate="yes" xml:space="preserve">
          <source>Interface RetryStrategyInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa565b410c1200889260cef0545198e7ca601fed" translate="yes" xml:space="preserve">
          <source>Interface SchemaInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec3333a23b122e4160bc1bd4e567baece82bd7d" translate="yes" xml:space="preserve">
          <source>Interface SqlGeneratorInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd0cfc05e388b2265a6677a722059743b55013f" translate="yes" xml:space="preserve">
          <source>Interface StatementInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27633c83abfbfeaefb409b9756b50c129c19591" translate="yes" xml:space="preserve">
          <source>Interface StorageInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028b6d45dffc2a6fe411af21a8ff0f0bdaa543c7" translate="yes" xml:space="preserve">
          <source>Interface TableSchemaAwareInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6906880dd690a9ed61342a9b378c2c7b6f97a065" translate="yes" xml:space="preserve">
          <source>Interface TableSchemaInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f034c7a9850f02e24dce136788ccccca2627ea" translate="yes" xml:space="preserve">
          <source>Interface TypeInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218edf3afee4d574b17e54ba9eec24459a6d6efe" translate="yes" xml:space="preserve">
          <source>Interface TypedResultInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802bf9f011842fd256ff8f7d5f1aaf3bc87a5f22" translate="yes" xml:space="preserve">
          <source>Interface ValidatableInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f9799eecfcfe04d10c95ebab578121b22bdca3" translate="yes" xml:space="preserve">
          <source>Interface ValidatorAwareInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6710254eaa9bca8630e54b3f33ee6700fa873383" translate="yes" xml:space="preserve">
          <source>Interface WidgetInterface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bf91d9fbb07d687233666f6abeb51962883c96" translate="yes" xml:space="preserve">
          <source>Interface for Applications that leverage plugins &amp;amp; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1071f482c57078a7aed6f176d39a275baacfbb" translate="yes" xml:space="preserve">
          <source>Interface for FormHelper context implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa59b001022317f8c3a89d1e53c1bdf9401e52b0" translate="yes" xml:space="preserve">
          <source>Interface for cache engines that defines methods outside of the PSR16 interface that are used by &lt;code&gt;Cache&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90d03ec42818abc8073474cf928d0f5559efdda" translate="yes" xml:space="preserve">
          <source>Interface for database driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa993bb7a1d430e9a0d7e4cd6a0239804835f5b" translate="yes" xml:space="preserve">
          <source>Interface for input widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8873f2f275fc3d04e287583692ce796ac999abd" translate="yes" xml:space="preserve">
          <source>Interface summary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb0d0bc0e9774231a160f12034a7bb16c6e5a3b" translate="yes" xml:space="preserve">
          <source>Interface::$data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d457384e6c5797cab380bc7eeaaafbdd0e090508" translate="yes" xml:space="preserve">
          <source>Interface::$name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af4e59ad3cf1c455ab236c3fb06293a6a721fe4" translate="yes" xml:space="preserve">
          <source>Interface::$result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e4cdd7ea28c9b3c7f76f9b9ee64122df9666d9" translate="yes" xml:space="preserve">
          <source>Interface::$subject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1b9749a131fc2a4d38c339e29c4ef7def5fb1e" translate="yes" xml:space="preserve">
          <source>Interface::append()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64d6fa8f3c38dce7a6ed8d1250ab5e17eaa9b7c" translate="yes" xml:space="preserve">
          <source>Interface::avg()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce68d8ac36a61fd63cf309d3dc7313f100e363dd" translate="yes" xml:space="preserve">
          <source>Interface::buffered()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a2e09a9422ac0c15973fc2af70da941c6e294c" translate="yes" xml:space="preserve">
          <source>Interface::cartesianProduct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d775cb807ef0ef610d3f6c5bc1871305e8be0977" translate="yes" xml:space="preserve">
          <source>Interface::chunk()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dec74ea239875f89b148f41ef7ff03fd45606f" translate="yes" xml:space="preserve">
          <source>Interface::chunkWithKeys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804738cf173de064f0aa024fc03394253aeca863" translate="yes" xml:space="preserve">
          <source>Interface::combine()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b36ef7da385ef4e52a3e5b4366c7816058e7f05" translate="yes" xml:space="preserve">
          <source>Interface::compile()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6189a8ca4b13bb2795ca45f02e4018860e6720f" translate="yes" xml:space="preserve">
          <source>Interface::contains()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fcbc02b0fcb4904557c68b8900e13138678dbd" translate="yes" xml:space="preserve">
          <source>Interface::count()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befb88de85440c85731683f0f1a5ba03e5620b60" translate="yes" xml:space="preserve">
          <source>Interface::countBy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027b201e483db85174da8def6c42ff39b5564349" translate="yes" xml:space="preserve">
          <source>Interface::countKeys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d590ed7eb6fbe3b287f929b4e718f48fccadd47" translate="yes" xml:space="preserve">
          <source>Interface::each()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f036f34d74d0babdbbf2cc784c1a746807c69d4e" translate="yes" xml:space="preserve">
          <source>Interface::every()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd98894aafbf0d3a60838762787bd834a2fe27f7" translate="yes" xml:space="preserve">
          <source>Interface::extract()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4292fbaab3686905ccf967918eb77736ad2a7f" translate="yes" xml:space="preserve">
          <source>Interface::filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1ce5c8312195656f77a21b2a215ca000b6eeaa" translate="yes" xml:space="preserve">
          <source>Interface::first()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272df04b52f4782447cd5d888531b94cc059326d" translate="yes" xml:space="preserve">
          <source>Interface::firstMatch()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fb0dc8b5e2ce428a54c63e00991e49421bf02d" translate="yes" xml:space="preserve">
          <source>Interface::getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4954186ed9f107d5450bb9cadc92fe103d4663c" translate="yes" xml:space="preserve">
          <source>Interface::getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f99a113123bb85e344ec4fac34cfb0f7e58caa" translate="yes" xml:space="preserve">
          <source>Interface::getResult()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aaa79931b9c07c7a9ca2c6187911e7be7690f75" translate="yes" xml:space="preserve">
          <source>Interface::getSubject()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379832156879328b73280863fc33d3fe08d3dddf" translate="yes" xml:space="preserve">
          <source>Interface::groupBy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29563bf15322621b4259f4f3c3364cb651b84faf" translate="yes" xml:space="preserve">
          <source>Interface::indexBy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe45200075cb4d7ed7908d6930ca30021b6d4372" translate="yes" xml:space="preserve">
          <source>Interface::insert()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b268ebf684fdc37aa0cb685fc8c99b65e9249d47" translate="yes" xml:space="preserve">
          <source>Interface::isEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed5344f93721e58683c75b2df68dcda25f71746" translate="yes" xml:space="preserve">
          <source>Interface::isStopped()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af54fd1cc8fb05ea9286dcf22f01a49c5413054" translate="yes" xml:space="preserve">
          <source>Interface::jsonSerialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4848132bdc0e63710d1dbc4a1596b5ae9201265e" translate="yes" xml:space="preserve">
          <source>Interface::last()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c07f479e0ada30e7a1a560fd6e54039a626abc" translate="yes" xml:space="preserve">
          <source>Interface::lazy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62297aceefd49f03eea76601fd4be8879d5b161" translate="yes" xml:space="preserve">
          <source>Interface::listNested()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f89185ad2b2a282c64c93fda586b570493712f" translate="yes" xml:space="preserve">
          <source>Interface::map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e05988377efefc5197dcf2e99a6395378e4bf7f" translate="yes" xml:space="preserve">
          <source>Interface::match()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee56bb370600ce8ee73ed83df7ef1c143b5920ea" translate="yes" xml:space="preserve">
          <source>Interface::max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea516060203dcb3b9f0db7bc3fbd8e8ec5ce5f8" translate="yes" xml:space="preserve">
          <source>Interface::median()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7276457fa8d37a27c27797c05d2dd013ac11e88b" translate="yes" xml:space="preserve">
          <source>Interface::min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6112607254ed018d629cd40d1ab8b64aecaf0f5d" translate="yes" xml:space="preserve">
          <source>Interface::nest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8fe62d760edb40acf3f684ba3c572d7570a66a" translate="yes" xml:space="preserve">
          <source>Interface::reduce()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2316c95a066e790ec984eb0ff4a629f2b0797045" translate="yes" xml:space="preserve">
          <source>Interface::reject()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c127780413c547c92c1c5070526e67f081f351" translate="yes" xml:space="preserve">
          <source>Interface::sample()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece3fc63f7fdf006f0ed6d3863dfed88bf6cff34" translate="yes" xml:space="preserve">
          <source>Interface::setData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db250b0e52a915a7daeb57fbf3e2bd2136692a6c" translate="yes" xml:space="preserve">
          <source>Interface::setResult()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d965385584f7ef2d8898e42a8bdbd865efde4a6" translate="yes" xml:space="preserve">
          <source>Interface::shuffle()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd5baac33d9c23cd8a62bd3c117a71a9853abaf" translate="yes" xml:space="preserve">
          <source>Interface::skip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09eee5dc8a9a71a15ec4ffa2623ebc65e37564e2" translate="yes" xml:space="preserve">
          <source>Interface::some()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ded8c8ac30b6eff4f0fdbdf6dbae6cc135ec5e" translate="yes" xml:space="preserve">
          <source>Interface::sortBy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a99edfdf9b49b74143d19c11734660c6b6ade3" translate="yes" xml:space="preserve">
          <source>Interface::stopPropagation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8077d9a21bea4bb9d4ccdb233dd0874bdfe5fb" translate="yes" xml:space="preserve">
          <source>Interface::stopWhen()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7b30751661c9e5c93149051d526759156b8814" translate="yes" xml:space="preserve">
          <source>Interface::sumOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e022c84eea838c90d82170b7da4aaf25663a7de" translate="yes" xml:space="preserve">
          <source>Interface::take()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f796f6fce1d3d6dc76714080878710c3eb6cbed" translate="yes" xml:space="preserve">
          <source>Interface::takeLast()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1191afdc699d9b5594647186015c75ef2539f77b" translate="yes" xml:space="preserve">
          <source>Interface::through()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d090db96249cc45897edd6003e7fa3b80ae0fd" translate="yes" xml:space="preserve">
          <source>Interface::toArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55dfba49c3dca1178be6e340dc2251721a784b7" translate="yes" xml:space="preserve">
          <source>Interface::toList()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fbcca0cde6b8c2b4fa7206089edea2d6ce150e" translate="yes" xml:space="preserve">
          <source>Interface::transpose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101c8aae94b647e4725731c87fdd24e8ee22a6c5" translate="yes" xml:space="preserve">
          <source>Interface::unfold()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eafce79241b76f12a80b5674873bc2c7bd229ea" translate="yes" xml:space="preserve">
          <source>Interface::unwrap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c378f9183ffb4c9d8d75c5ae45416c26b66f40" translate="yes" xml:space="preserve">
          <source>Interface::zip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f04018d5e9dd8b2a24ade6f815be5a5aa9b3e1b" translate="yes" xml:space="preserve">
          <source>Interface::zipWith()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91d276543e15048270460fedcc4326b06019abd" translate="yes" xml:space="preserve">
          <source>Internal flag for tracking whether or not configuration has been changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d704754be8d2b97d64488b6025aca81fa4497e5" translate="yes" xml:space="preserve">
          <source>Internal flag to distinguish a common manager from the singleton</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edfc0d467a472111f345a223b23bb56a4e4a3f2" translate="yes" xml:space="preserve">
          <source>Internal function to build a nested list (UL/OL) out of an associative array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da721927efbd385a56cbf2c29f6cbb68b17e0085" translate="yes" xml:space="preserve">
          <source>InternalErrorException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2343e2cec9caa54dd65915c8de6f7b1a724e8fae" translate="yes" xml:space="preserve">
          <source>InternalErrorException (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781d612567b2ac7b9ebce34bc8a044eeb0c0e333" translate="yes" xml:space="preserve">
          <source>Internally Cache uses this interface when calling engine methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15ec4f457c191a597af8a05d78a679742748887" translate="yes" xml:space="preserve">
          <source>Internally redirects one action to another. Does not perform another HTTP request unlike Controller::redirect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fe73f62a6c5417b47392bea93a36fb9a51dfc6" translate="yes" xml:space="preserve">
          <source>International currency name such as 'USD', 'EUR', 'JPY', 'CAD'</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
