<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="matplotlib">
    <body>
      <group id="matplotlib">
        <trans-unit id="c4c52926c6188d06cac3ca970857b20de1c583e9" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;../text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97dc26013d60aa72c0db2ac0c14bc89b32229718" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;_as_gen/matplotlib.patches.circle#matplotlib.patches.Circle&quot;&gt;&lt;code&gt;Circle&lt;/code&gt;&lt;/a&gt; instances defining the buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8546ba373086039d3caa8c3f9c3ddc24e9352c16" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;matplotlib.lines.line2d#matplotlib.lines.Line2D&quot;&gt;&lt;code&gt;Line2D&lt;/code&gt;&lt;/a&gt; objects representing the plotted data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9ad5a57ae2e749f5ceaebb73357ad42fe1e5b6" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; instances containing the button labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b91755ff7383d7fad5360eb35222997d2bad3a" translate="yes" xml:space="preserve">
          <source>A list of &lt;a href=&quot;text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; instances for the labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a821f8f1d26b27f2ed0fd34b730b89267916bcf" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;LineCollection&lt;/code&gt; if lines were drawn, otherwise an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40726b4bd20af1787e2ff4a058e3243a06e57aea" translate="yes" xml:space="preserve">
          <source>A list of Artists (lines, patches) to be added to the legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5b26018da21d0db3c52e5c500e3f3bfcec1dd7" translate="yes" xml:space="preserve">
          <source>A list of Artists (lines, patches) to be added to the legend. Use this together with &lt;em&gt;labels&lt;/em&gt;, if you need full control on what is shown in the legend and the automatic mechanism described above is not sufficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a61afc991b689300a6d51921a0db0f8ea5d80f7" translate="yes" xml:space="preserve">
          <source>A list of cross hatch patterns to use on the filled areas. If None, no hatching will be added to the contour. Hatching is supported in the PostScript, PDF, SVG and Agg backends only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3301f7bea5accafe4d9f7677beabd4cd1049fb" translate="yes" xml:space="preserve">
          <source>A list of dictionaries containing stats for each boxplot. Required keys are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc43f591112cd0b0830a41985bd9bf8a90649a8" translate="yes" xml:space="preserve">
          <source>A list of dictionaries containing stats for each violin plot. Required keys are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1041c36f1791f94836e7691c1263e59caa01ab" translate="yes" xml:space="preserve">
          <source>A list of dictionaries containing the results for each column of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3beaf2dcc6fac45171222f3cf1cc1363007b398c" translate="yes" xml:space="preserve">
          <source>A list of dictionaries containing the results for each column of data. Keys of each dictionary are the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ba9bf091d60d50ca255a4375a5507e0da0f6de" translate="yes" xml:space="preserve">
          <source>A list of explicit labels to place at the given &lt;em&gt;locs&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf7980c38283963a2d472ad429ad5213cec00e3" translate="yes" xml:space="preserve">
          <source>A list of extra artists that will be considered when the tight bbox is calculated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a36680362f760c5d44d933261fc1f359723882c" translate="yes" xml:space="preserve">
          <source>A list of extra string arguments to be passed to the underlying movie utility. The default is &lt;code&gt;None&lt;/code&gt;, which passes the additional arguments in the &lt;code&gt;animation.extra_args&lt;/code&gt; rcParam.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bd9fced0c82ef31af5b3263ec3a7185a8a76cb" translate="yes" xml:space="preserve">
          <source>A list of floating point numbers indicating the contour levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50adfed061764fc01c59b277dbc5e6936ede4d9e" translate="yes" xml:space="preserve">
          <source>A list of integers indicating which mouse buttons should be used for rectangle selection. You can also specify a single integer if only a single button is desired. Default is &lt;code&gt;None&lt;/code&gt;, which does not limit which button can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7526e537ad1e56b77bb0e535f7d58118213c5b8" translate="yes" xml:space="preserve">
          <source>A list of keys which may not be in kwargs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a41a8da191f31b8c57e6c271bc73adc03c4a619" translate="yes" xml:space="preserve">
          <source>A list of labels to show next to the artists. The length of handles and labels should be the same. If they are not, they are truncated to the smaller of both lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19e448dd448421054240882d38eacde5b5c0e67" translate="yes" xml:space="preserve">
          <source>A list of labels to show next to the artists. Use this together with &lt;em&gt;handles&lt;/em&gt;, if you need full control on what is shown in the legend and the automatic mechanism described above is not sufficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf9201bc03714a17d83a042a282ee48c11bc207" translate="yes" xml:space="preserve">
          <source>A list of level values, that should be labeled. The list must be a subset of &lt;code&gt;cs.levels&lt;/code&gt;. If not given, all levels are labeled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33837b421a813ef66369578a66b6fcc06b22e53e" translate="yes" xml:space="preserve">
          <source>A list of nodes (either horizontal or vertical).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d81b467bacd13dc4dd9a1534300fc24c655f7e" translate="yes" xml:space="preserve">
          <source>A list of objects to find cycles in. It is often useful to pass in gc.garbage to find the cycles that are preventing some objects from being garbage collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b362c43c3daaa327ef8e29adbfc4d608e18ef0" translate="yes" xml:space="preserve">
          <source>A list of positions at which ticks should be placed. You can pass an empty list to disable xticks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc25a2d438fbee22914239b9f7b155aaa71fc9a" translate="yes" xml:space="preserve">
          <source>A list of positions at which ticks should be placed. You can pass an empty list to disable yticks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0943920a03c60fb47234fbd6ffe6c07c2305233" translate="yes" xml:space="preserve">
          <source>A list of strings specifying the names of the images generated by calls to &lt;code&gt;matplotlib.figure.savefig()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bb3479445ea1adcb5b56ea86fb26aa610de528" translate="yes" xml:space="preserve">
          <source>A list of style specifiers (str or dict) applied from first to last in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472f08829b5be1b2408665b84723ee9a010f0f9c" translate="yes" xml:space="preserve">
          <source>A list of the artists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28f864274f6daef6408392331d349f5fcdebbee" translate="yes" xml:space="preserve">
          <source>A list of the clicked (x, y) coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7e3c1a217f74d589669f4e5d6ac83267f0d936" translate="yes" xml:space="preserve">
          <source>A list of the label &lt;a href=&quot;../text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;matplotlib.text.Text&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36f96a03c840c34366d0b5d7f63893a4ae7d8ee" translate="yes" xml:space="preserve">
          <source>A list of the labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22011056a4d07bf1fde6464ab3087f2a2ae8246f" translate="yes" xml:space="preserve">
          <source>A list of the vertices of the polygon as &lt;code&gt;(xdata, ydata)&lt;/code&gt; tuples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e64c63a57e15e5c42895178d0d1a7d49e2eeb1e" translate="yes" xml:space="preserve">
          <source>A list or tuple of colors. These will be cycled through and used to colour the stacked areas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dade9f2343fe414073c8ee396541247f5228ff41" translate="yes" xml:space="preserve">
          <source>A mapping between a canonical name to a list of aliases, in order of precedence from lowest to highest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0d97a375dae0ce6ec4322e5993ca24ae235247" translate="yes" xml:space="preserve">
          <source>A marker for the end of the entire path (currently not required and ignored)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec844576ba59853216a445fda8bd43fe4bc4d3a1" translate="yes" xml:space="preserve">
          <source>A match between 'italic' and 'oblique' returns 0.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b3a0d14ff06a8e3430b6b81a43fbfd784bca33" translate="yes" xml:space="preserve">
          <source>A match further down the list will return between 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d657855670b4bbe7c0383300e5e7a08c68355b7" translate="yes" xml:space="preserve">
          <source>A math expression. The math portion should be enclosed in dollar signs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb48236c384909b0be070d8ca6a2e94b6bf9ae4d" translate="yes" xml:space="preserve">
          <source>A mathtext image as numpy array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10386681003aac45c787d2af5a4f43be05e017f7" translate="yes" xml:space="preserve">
          <source>A matplotlib color arg which gives the color the errorbar lines. If None, use the color of the line connecting the markers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9eb968c34ddb1097abc606e328ff6882d140a76" translate="yes" xml:space="preserve">
          <source>A matplotlib event. Attach additional attributes as defined in &lt;a href=&quot;#matplotlib.backend_bases.FigureCanvasBase.mpl_connect&quot;&gt;&lt;code&gt;FigureCanvasBase.mpl_connect()&lt;/code&gt;&lt;/a&gt;. The following attributes are defined and shown with their default values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4271057d33601d2930e8d5bfbcad6efddeff963b" translate="yes" xml:space="preserve">
          <source>A module for converting numbers or color arguments to &lt;em&gt;RGB&lt;/em&gt; or &lt;em&gt;RGBA&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a46070fe3c3d9d84da2456d99ef38742d5c734" translate="yes" xml:space="preserve">
          <source>A module for dealing with the polylines used throughout Matplotlib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4db69fa444b6adbd289c422146db616c99a44f" translate="yes" xml:space="preserve">
          <source>A module for finding, managing, and using fonts across platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce8afd091edfa4d474bdf3e84019f546c6b24df" translate="yes" xml:space="preserve">
          <source>A module for parsing and generating &lt;a href=&quot;https://www.freedesktop.org/software/fontconfig/fontconfig-user.html&quot;&gt;fontconfig patterns&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fd0da1c558b4deec55ab3b2c83a5f1131ad4af" translate="yes" xml:space="preserve">
          <source>A module for reading dvi files output by TeX. Several limitations make this not (currently) useful as a general-purpose dvi preprocessor, but it is currently used by the pdf backend for processing usetex text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c767c08bd2a33452da7ef0490f7ead07743f06" translate="yes" xml:space="preserve">
          <source>A module-level registry is provided to map between the name of the writer and the class to allow a string to be passed to &lt;a href=&quot;_as_gen/matplotlib.animation.animation#matplotlib.animation.Animation.save&quot;&gt;&lt;code&gt;Animation.save&lt;/code&gt;&lt;/a&gt; instead of a writer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c892b6cb58ef081d89b3d65cc84e6c61ce0c8b5b" translate="yes" xml:space="preserve">
          <source>A more object-oriented alternative, given any &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;Figure&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;fig&lt;/code&gt;, that was created using a &lt;a href=&quot;matplotlib.pyplot#module-matplotlib.pyplot&quot;&gt;&lt;code&gt;pyplot&lt;/code&gt;&lt;/a&gt; function, is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa70c5c9291ab98c5883613cde0da3561ffa5aa0" translate="yes" xml:space="preserve">
          <source>A mouse event ('button_press_event',</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ad944232ec5f1734ca6081cebc99c2ef78c8df" translate="yes" xml:space="preserve">
          <source>A multi-page PDF file using the pgf backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03849a72691db8f27de509babe990a7a9658afc8" translate="yes" xml:space="preserve">
          <source>A multi-page PDF file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd2c8d2a006fa7f99b2ecead6212b83fdffa8ea" translate="yes" xml:space="preserve">
          <source>A mutable 2D affine transformation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c7df1d045683287ed32c9caf26aafb5a8f9cf2" translate="yes" xml:space="preserve">
          <source>A mutable bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5d161585133a8c48da5b48f8aa4bc1f136c449" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;https://matplotlib.org/cycler/generated/cycler.Cycler.html#cycler.Cycler&quot;&gt;&lt;code&gt;Cycler&lt;/code&gt;&lt;/a&gt; for the given properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189013c330a17ec1048a76d874f3247b82f582fa" translate="yes" xml:space="preserve">
          <source>A new frame is drawn every &lt;em&gt;interval&lt;/em&gt; milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95abee7c3da5511504c47c06d5391e60f6b74f5c" translate="yes" xml:space="preserve">
          <source>A node in the TeX box model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4d7a3852b4ad65ec1cdbba1370990ef447810f" translate="yes" xml:space="preserve">
          <source>A numpy array of 2D points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7ad6f6be2e8e05f946a830252e4e80dac6361a" translate="yes" xml:space="preserve">
          <source>A parameter for the antigrain image resize filter (see the antigrain documentation). If &lt;em&gt;filternorm&lt;/em&gt; is set, the filter normalizes integer values and corrects the rounding errors. It doesn't do anything with the source floating point values, it corrects only integers according to the rule of 1.0 which means that any sum of pixel weights must be equal to 1.0. So, the filter function must produce a graph of the proper shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7bc2059e22c0575e87fec1daff607c4b36cf4a" translate="yes" xml:space="preserve">
          <source>A patch is a 2D artist with a face color and an edge color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9176cf99a3c140210609b8d637463a629827f917" translate="yes" xml:space="preserve">
          <source>A path or a Python file-like object to store the image in. If &lt;em&gt;format&lt;/em&gt; is not set, then the output format is inferred from the extension of &lt;em&gt;fname&lt;/em&gt;, if any, and from &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;savefig.format&quot;]&lt;/a&gt;&lt;/code&gt; otherwise. If &lt;em&gt;format&lt;/em&gt; is set, it determines the output format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b50a1661c21c1c6515e00bd45ef70e88af1772" translate="yes" xml:space="preserve">
          <source>A path, or a Python file-like object, or possibly some backend-dependent object such as &lt;a href=&quot;../backend_pdf_api#matplotlib.backends.backend_pdf.PdfPages&quot;&gt;&lt;code&gt;matplotlib.backends.backend_pdf.PdfPages&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a528b656cfbd9299267197686a852bd0b33e20" translate="yes" xml:space="preserve">
          <source>A polar graph projection, where the input dimensions are &lt;em&gt;theta&lt;/em&gt;, &lt;em&gt;r&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d9577c8a634ba291560b12d3e0776af79660aa" translate="yes" xml:space="preserve">
          <source>A polygon-approximation of a circle patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c568c6398de90a648478d3e552765e6c0a25686b" translate="yes" xml:space="preserve">
          <source>A property batch setter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703bd75b28c5fbbe3fc47a819767f92604ad4081" translate="yes" xml:space="preserve">
          <source>A property batch setter. Pass &lt;em&gt;kwargs&lt;/em&gt; to set properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a88bf7a4fe1ab8fb36167bacd8d799956557e9" translate="yes" xml:space="preserve">
          <source>A psfonts.map formatted file, mapping TeX fonts to PS fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574fe984e8dc5cd1276c25788f86d7e28680b0a5" translate="yes" xml:space="preserve">
          <source>A quadrilateral mesh consists of a grid of vertices. The dimensions of this array are (&lt;em&gt;meshWidth&lt;/em&gt; + 1, &lt;em&gt;meshHeight&lt;/em&gt; + 1). Each vertex in the mesh has a different set of &quot;mesh coordinates&quot; representing its position in the topology of the mesh. For any values (&lt;em&gt;m&lt;/em&gt;, &lt;em&gt;n&lt;/em&gt;) such that 0 &amp;lt;= &lt;em&gt;m&lt;/em&gt; &amp;lt;= &lt;em&gt;meshWidth&lt;/em&gt; and 0 &amp;lt;= &lt;em&gt;n&lt;/em&gt; &amp;lt;= &lt;em&gt;meshHeight&lt;/em&gt;, the vertices at mesh coordinates (&lt;em&gt;m&lt;/em&gt;, &lt;em&gt;n&lt;/em&gt;), (&lt;em&gt;m&lt;/em&gt;, &lt;em&gt;n&lt;/em&gt; + 1), (&lt;em&gt;m&lt;/em&gt; + 1, &lt;em&gt;n&lt;/em&gt; + 1), and (&lt;em&gt;m&lt;/em&gt; + 1, &lt;em&gt;n&lt;/em&gt;) form one of the quadrilaterals in the mesh. There are thus (&lt;em&gt;meshWidth&lt;/em&gt; * &lt;em&gt;meshHeight&lt;/em&gt;) quadrilaterals in the mesh. The mesh need not be regular and the polygons need not be convex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba0c763560fe2c233f989945c9fbb6c721ba34d" translate="yes" xml:space="preserve">
          <source>A quadrilateral mesh is represented by a (2 x ((&lt;em&gt;meshWidth&lt;/em&gt; + 1) * (&lt;em&gt;meshHeight&lt;/em&gt; + 1))) numpy array &lt;em&gt;coordinates&lt;/em&gt;, where each row is the &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; coordinates of one of the vertices. To define the function that maps from a data point to its corresponding color, use the &lt;a href=&quot;#matplotlib.collections.QuadMesh.set_cmap&quot;&gt;&lt;code&gt;set_cmap()&lt;/code&gt;&lt;/a&gt; method. Each of these arrays is indexed in row-major order by the mesh coordinates of the vertex (or the mesh coordinates of the lower left vertex, in the case of the colors).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d2403f05f500139bed7758db24006ec290aae5" translate="yes" xml:space="preserve">
          <source>A radial Axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c3a15ca18303a19c288a675cba76f58b7d1479" translate="yes" xml:space="preserve">
          <source>A radial-axis tick.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fbeaf7bd04cab05fd503f03c0156b8eba40362" translate="yes" xml:space="preserve">
          <source>A reader for a dvi (&quot;device-independent&quot;) file, as produced by TeX. The current implementation can only iterate through pages in order, and does not even attempt to verify the postamble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408b9414a98dd255cc89e0692e22a33c4bee2c69" translate="yes" xml:space="preserve">
          <source>A rectangle (left, bottom, right, top) in the normalized figure coordinate that the whole subplots area (including labels) will fit into. Default is (0, 0, 1, 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509061442160cc97596332306153e3e5b405a620" translate="yes" xml:space="preserve">
          <source>A rectangle is drawn for each element of &lt;em&gt;xranges&lt;/em&gt;. All rectangles have the same vertical position and size defined by &lt;em&gt;yrange&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23bccc645b03eb47bb017508b91303f7c70898c" translate="yes" xml:space="preserve">
          <source>A rectangle with lower left at &lt;em&gt;xy&lt;/em&gt; = (&lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;) with specified &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt; and rotation &lt;em&gt;angle&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297944aeb6dac40d7357ad11ff3b7a3fb7818845" translate="yes" xml:space="preserve">
          <source>A regular polygon patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31f7a9804849c81f4b95c24e23b7ed5a90f67f0" translate="yes" xml:space="preserve">
          <source>A renderer is needed to compute the bounding box. If the artist has already been drawn, the renderer is cached; thus, it is only necessary to pass this argument when calling &lt;a href=&quot;#matplotlib.text.Annotation.get_window_extent&quot;&gt;&lt;code&gt;get_window_extent&lt;/code&gt;&lt;/a&gt; before the first &lt;a href=&quot;#matplotlib.text.Annotation.draw&quot;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;. In practice, it is usually easier to trigger a draw first (e.g. by saving the figure).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54106944384d5c895220c726e8bf7718e940d39c" translate="yes" xml:space="preserve">
          <source>A renderer is needed to compute the bounding box. If the artist has already been drawn, the renderer is cached; thus, it is only necessary to pass this argument when calling &lt;a href=&quot;#matplotlib.text.Text.get_window_extent&quot;&gt;&lt;code&gt;get_window_extent&lt;/code&gt;&lt;/a&gt; before the first &lt;a href=&quot;#matplotlib.text.Text.draw&quot;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;. In practice, it is usually easier to trigger a draw first (e.g. by saving the figure).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb36f9a71df4679db428a950e3a419d098a611c0" translate="yes" xml:space="preserve">
          <source>A renderer is needed to compute the bounding box. If the artist has already been drawn, the renderer is cached; thus, it is only necessary to pass this argument when calling &lt;a href=&quot;#mpl_toolkits.axisartist.axis_artist.AxisLabel.get_window_extent&quot;&gt;&lt;code&gt;get_window_extent&lt;/code&gt;&lt;/a&gt; before the first &lt;a href=&quot;#mpl_toolkits.axisartist.axis_artist.AxisLabel.draw&quot;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;. In practice, it is usually easier to trigger a draw first (e.g. by saving the figure).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac077e2afd2011f86a5d83f44797725dc662b8ce" translate="yes" xml:space="preserve">
          <source>A renderer is needed to compute the bounding box. If the artist has already been drawn, the renderer is cached; thus, it is only necessary to pass this argument when calling &lt;a href=&quot;#mpl_toolkits.axisartist.axis_artist.LabelBase.get_window_extent&quot;&gt;&lt;code&gt;get_window_extent&lt;/code&gt;&lt;/a&gt; before the first &lt;a href=&quot;#mpl_toolkits.axisartist.axis_artist.LabelBase.draw&quot;&gt;&lt;code&gt;draw&lt;/code&gt;&lt;/a&gt;. In practice, it is usually easier to trigger a draw first (e.g. by saving the figure).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0f55c771c2febfee515893e4e44e9d1410ee90" translate="yes" xml:space="preserve">
          <source>A reversed instance of the colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c97fbb8f1a7d86c84841dc3244308df4b7d80f8" translate="yes" xml:space="preserve">
          <source>A rounded tooth box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb53023301b2ee6adcd9441bc33cc4cdd4d2a46" translate="yes" xml:space="preserve">
          <source>A sawtooth box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e732396a78fc20bda763ec32ed873122cb5efbde" translate="yes" xml:space="preserve">
          <source>A scalar 2-D array. The values will be color-mapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd39cabe3915ad8bffd295cb9a788c6c7a154c6" translate="yes" xml:space="preserve">
          <source>A scale factor to apply to the rgbFace color if &lt;code&gt;shadow_rgbFace&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;. Default is 0.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938051adfeab40329ecaa5ee4e276f8deb3d4eb3" translate="yes" xml:space="preserve">
          <source>A scale factor to apply to the rgbFace color if &lt;code&gt;shadow_rgbFace&lt;/code&gt; is not specified. Default is 0.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7e3e15c9c032e56ecd8d4ccd6d30c82d76a938" translate="yes" xml:space="preserve">
          <source>A scale-free ellipse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f491f754df3c39530bb274fd0c32b4e12f0fb3ab" translate="yes" xml:space="preserve">
          <source>A scatter plot of &lt;em&gt;y&lt;/em&gt; vs &lt;em&gt;x&lt;/em&gt; with varying marker size and/or color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e440b21590815fb1ea6c6f8ea6c9d1315c6c2892" translate="yes" xml:space="preserve">
          <source>A sequence (&lt;em&gt;cx&lt;/em&gt;, &lt;em&gt;cy&lt;/em&gt;) where &lt;em&gt;cx&lt;/em&gt; and &lt;em&gt;cy&lt;/em&gt; range from 0 to 1, where 0 is left or bottom and 1 is right or top</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb9bbe83c980d39bda7cecb2b111789a79adc8a" translate="yes" xml:space="preserve">
          <source>A sequence of (&lt;em&gt;line0&lt;/em&gt;, &lt;em&gt;line1&lt;/em&gt;, &lt;em&gt;line2&lt;/em&gt;), where:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d12a665e8f597dcfbe0d11e6f41cd2032a70760" translate="yes" xml:space="preserve">
          <source>A sequence of &lt;a href=&quot;matplotlib.patches.wedge#matplotlib.patches.Wedge&quot;&gt;&lt;code&gt;matplotlib.patches.Wedge&lt;/code&gt;&lt;/a&gt; instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c28fa9ca37e35c56a5e7773889a1baa92267299" translate="yes" xml:space="preserve">
          <source>A sequence of RGBA tuples (e.g., arbitrary color strings, etc, not allowed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fee736f1ff9343fe2e4ad88f3bbf8458e7616d7" translate="yes" xml:space="preserve">
          <source>A sequence of color specifications of length n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9e157d072f3e3b4c8be210671e7423e6b9ebe3" translate="yes" xml:space="preserve">
          <source>A sequence of matplotlib color args through which the pie chart will cycle. If &lt;em&gt;None&lt;/em&gt;, will use the colors in the currently active cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be719ca3ae84a40767241841e27dbb3580578544" translate="yes" xml:space="preserve">
          <source>A sequence of n numbers to be mapped to colors using &lt;em&gt;cmap&lt;/em&gt; and &lt;em&gt;norm&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6850146f2e2d3060247d589101ea7b96e1bc8526" translate="yes" xml:space="preserve">
          <source>A sequence of ones or zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73a77312f54487eb01464bfa48925226d200fb6" translate="yes" xml:space="preserve">
          <source>A sequence of strings providing the labels for each wedge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18f379907b9153ec65a4739668b45d939d8a27f" translate="yes" xml:space="preserve">
          <source>A set of colormaps derived from those of the same name provided with Matlab are also included:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a2f21009846b5053e186737502c606167d9315" translate="yes" xml:space="preserve">
          <source>A set of constants that controls how certain things, such as sub- and superscripts are laid out. These are all metrics that can't be reliably retrieved from the font metrics in the font itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4d3bf94ee83f1ec0b0fc1302cc0c690d1170f6" translate="yes" xml:space="preserve">
          <source>A set of cyclic color maps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef679b73210aec0205c8762cdb9bc5c43fb88e6b" translate="yes" xml:space="preserve">
          <source>A set of palettes from the &lt;a href=&quot;https://dhmunro.github.io/yorick-doc/&quot;&gt;Yorick scientific visualisation package&lt;/a&gt;, an evolution of the GIST package, both by David H. Munro are included:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4da280f749416ff40d804c5f4abc5a20212947b" translate="yes" xml:space="preserve">
          <source>A silent_list of LineCollections or PolyCollections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8801c4687c94264bd15eb91700e5113bf7171efe" translate="yes" xml:space="preserve">
          <source>A simple arrow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac7cf49e7c83412a3212a9e641b03cea6adebc8" translate="yes" xml:space="preserve">
          <source>A simple arrow. Only works with a quadratic Bezier curve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b3b9cf07fc5ea4657558eb4e99046945da4b17" translate="yes" xml:space="preserve">
          <source>A simple callable object, initialized with AxesDivider class, returns the position and size of the given cell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6b6f747c5e43dc2af7d57b91e870876ccb7a70" translate="yes" xml:space="preserve">
          <source>A simple circle box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6e20b70a2bbfc1b6dfa3ad37f46093e31f2fec" translate="yes" xml:space="preserve">
          <source>A simple curve without any arrow head.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bc20c7acbd27d3712bbdcbd71440e5be6579f9" translate="yes" xml:space="preserve">
          <source>A simple pyparsing-based parser for &lt;a href=&quot;https://www.freedesktop.org/software/fontconfig/fontconfig-user.html&quot;&gt;fontconfig patterns&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ddbd52bc97d337f82bcf78b2fa0f1fe4e91b75" translate="yes" xml:space="preserve">
          <source>A simple shadow via a filled patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd966246283e2875253c803fcf3412b79816082" translate="yes" xml:space="preserve">
          <source>A simple shadow via a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfb8a51c8bdc6383bedfcb4a138bebdb2b8d599" translate="yes" xml:space="preserve">
          <source>A simple square box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d29d7cdcb4a37d4717d5aab342d4f6d5e360ffb" translate="yes" xml:space="preserve">
          <source>A simple transform that takes and arbitrary function for the forward and inverse transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49964ca199a28962182f77b41e998984608216b2" translate="yes" xml:space="preserve">
          <source>A single color format string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7aa71b07bbb20f780d870d219d5374c92913a6d" translate="yes" xml:space="preserve">
          <source>A single color value, to color all bars the same color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75caa427a0f0d3019ff5625fe37c61ef4b57551b" translate="yes" xml:space="preserve">
          <source>A single color value, to color all voxels the same color. This can be either a string, or a 1D rgb/rgba array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fef8bc27d52b8dd1362fce362658446ed6b81a7" translate="yes" xml:space="preserve">
          <source>A single experimental keyword argument, &lt;em&gt;block&lt;/em&gt;, may be set to True or False to override the blocking behavior described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fcb20dc2266df48c5474092a0c099bd638a859" translate="yes" xml:space="preserve">
          <source>A single spectrum, similar to having a single segment when &lt;em&gt;mode&lt;/em&gt; is 'angle'. Plots a line instead of a colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ed32c323398ff9c69abc9c417e8244ad5ddc9e" translate="yes" xml:space="preserve">
          <source>A single spectrum, similar to having a single segment when &lt;em&gt;mode&lt;/em&gt; is 'magnitude'. Plots a line instead of a colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c52ac5b8a9116195deff9257ee8ea419b1ce81" translate="yes" xml:space="preserve">
          <source>A single spectrum, similar to having a single segment when &lt;em&gt;mode&lt;/em&gt; is 'phase'. Plots a line instead of a colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269f2d7d65f4f7db4ac576be0cdc5575cc68fc3a" translate="yes" xml:space="preserve">
          <source>A single unicode character, a TeX command (e.g. r'pi') or a Type1 symbol name (e.g. 'phi').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babec4a44ecca176e24f968181cefce8f3164a4f" translate="yes" xml:space="preserve">
          <source>A single value is applied to all barbs. Individual barbs can be flipped by passing a bool array of the same size as &lt;em&gt;U&lt;/em&gt; and &lt;em&gt;V&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23c6ee824b958cff06874e369d364364527dc88" translate="yes" xml:space="preserve">
          <source>A slider representing a floating point range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0d31092610afb4483421a2a09877a9ac58643f" translate="yes" xml:space="preserve">
          <source>A special class that does one thing, the identity transform, in a fast way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874161d7f3c0c8b2d890172eab5822721f69ffd0" translate="yes" xml:space="preserve">
          <source>A special method to re-show the figure in the notebook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f8351f556d20f448dba188a21612ac337dc38b" translate="yes" xml:space="preserve">
          <source>A specialized path class that will cache the transformed result and automatically update when the transform changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1006ac521792639ebcaf9b9d02d2d37e3ee1eb" translate="yes" xml:space="preserve">
          <source>A standard logarithmic scale. Care is taken to only plot positive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdad90c48c8c36c554f978a503d21b9811824c8c" translate="yes" xml:space="preserve">
          <source>A stem plot plots vertical lines at each &lt;em&gt;x&lt;/em&gt; location from the baseline to &lt;em&gt;y&lt;/em&gt;, and places a marker there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc45970a7cecad07c77b0030007682fc9d2b334" translate="yes" xml:space="preserve">
          <source>A string defining the properties of the markers at the stem heads. Default: 'C0o', i.e. filled circles with the first color of the color cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec7415cad8c49f8d3119b7c82437f2834070d1f" translate="yes" xml:space="preserve">
          <source>A string defining the properties of the vertical lines. Usually, this will be a color or a color and a linestyle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598b097401def0cd482d3c2fe71d60ef3dba7da4" translate="yes" xml:space="preserve">
          <source>A string representing the &quot;name&quot; of the transform. The name carries no significance other than to improve the readability of &lt;code&gt;str(transform)&lt;/code&gt; when DEBUG=True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afabb006d384b584e60a3fa3bad1de247454444" translate="yes" xml:space="preserve">
          <source>A string that will be appended to the label. It may be &lt;em&gt;None&lt;/em&gt; or empty to indicate that no symbol should be used. LaTeX special characters are escaped in &lt;em&gt;symbol&lt;/em&gt; whenever latex mode is enabled, unless &lt;em&gt;is_latex&lt;/em&gt; is &lt;em&gt;True&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f06364f2b6291aeda0405a94f9999c3dcf9480b" translate="yes" xml:space="preserve">
          <source>A string with the length and units of the key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb383e065ee97019b7d4c8fc5e45cfad2f4e2ac2" translate="yes" xml:space="preserve">
          <source>A string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73edd31d62aae78d6d00de17de5fb7551696d11" translate="yes" xml:space="preserve">
          <source>A style object can be created as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187fdff69571bdd1f7b662ce7c1977ebd70eeafd" translate="yes" xml:space="preserve">
          <source>A style specification. Valid options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c6fa5f4b4d3d0fb2e401516d30d0457b39e5a2" translate="yes" xml:space="preserve">
          <source>A table of cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8565e812132035fbd5d04dee298cc1dfcc8fd98c" translate="yes" xml:space="preserve">
          <source>A texmf tree typically includes mapping files called e.g. &lt;code&gt;psfonts.map&lt;/code&gt;, &lt;code&gt;pdftex.map&lt;/code&gt;, or &lt;code&gt;dvipdfm.map&lt;/code&gt;. The file &lt;code&gt;psfonts.map&lt;/code&gt; is used by &lt;strong&gt;dvips&lt;/strong&gt;, &lt;code&gt;pdftex.map&lt;/code&gt; by &lt;strong&gt;pdfTeX&lt;/strong&gt;, and &lt;code&gt;dvipdfm.map&lt;/code&gt; by &lt;strong&gt;dvipdfm&lt;/strong&gt;. &lt;code&gt;psfonts.map&lt;/code&gt; might avoid embedding the 35 PostScript fonts (i.e., have no filename for them, as in the Times-Bold example above), while the pdf-related files perhaps only avoid the &quot;Base 14&quot; pdf fonts. But the user may have configured these files differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaed6b056299bf48d5831fbbc8a6a03a9f8c3af" translate="yes" xml:space="preserve">
          <source>A theta Axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf9893166098865ac3ec6777947df60ff629677" translate="yes" xml:space="preserve">
          <source>A theta-axis tick.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e55ea8de5a4d6e4ed7158682e69df06b07a1db" translate="yes" xml:space="preserve">
          <source>A tool to adjust the subplot params of a &lt;a href=&quot;_as_gen/matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;matplotlib.figure.Figure&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc63d531977492e49297a250cdaf4d099f5bfa03" translate="yes" xml:space="preserve">
          <source>A transformation that translates by &lt;em&gt;xt&lt;/em&gt; and &lt;em&gt;yt&lt;/em&gt;, after &lt;em&gt;xt&lt;/em&gt; and &lt;em&gt;yt&lt;/em&gt; have been transformed by &lt;em&gt;scale_trans&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b3dd554b103e3238dc28b149e4347995fc68f8" translate="yes" xml:space="preserve">
          <source>A triangular mesh is a &lt;a href=&quot;tri_api#matplotlib.tri.Triangulation&quot;&gt;&lt;code&gt;Triangulation&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b617c95badcd43c376f299398f2a79f5de1cbb6" translate="yes" xml:space="preserve">
          <source>A tuple &lt;code&gt;(width, height)&lt;/code&gt; in pixels of a movie frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764bc3273b4848837865ecc23cd8ad95581bb642" translate="yes" xml:space="preserve">
          <source>A tuple &lt;em&gt;(xcoords, ycoords)&lt;/em&gt; specifying separate coordinate systems for &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;. &lt;em&gt;xcoords&lt;/em&gt; and &lt;em&gt;ycoords&lt;/em&gt; must each be of one of the above described types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4dec1678563fd099f908447805e162bf811a8b" translate="yes" xml:space="preserve">
          <source>A tuple containing the powers of 10 that determine the switchover threshold. Numbers below &lt;code&gt;10**min_exp&lt;/code&gt; and above &lt;code&gt;10**max_exp&lt;/code&gt; will be displayed in scientific notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbf3abe397402866fef4f90a8926602a3fbc8d8" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;code&gt;(left, bottom)&lt;/code&gt; where the width and height will be assumed to be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a092b5cb00484e72d1b178d7de9c94adbc2cef29" translate="yes" xml:space="preserve">
          <source>A tuple of &lt;code&gt;(left, bottom, width, height)&lt;/code&gt; in the given transform (normalized axes coordinate if None)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece7a20034634b938633a7950ba5c355a69f499b" translate="yes" xml:space="preserve">
          <source>A tuple of allowed fields. If this not None, then raise if &lt;code&gt;kw&lt;/code&gt; contains any keys not in the union of &lt;code&gt;required&lt;/code&gt; and &lt;code&gt;allowed&lt;/code&gt;. To allow only the required fields pass in &lt;code&gt;()&lt;/code&gt; for &lt;code&gt;allowed&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48d3d33b585300fe338acd0056da99dec38a421" translate="yes" xml:space="preserve">
          <source>A tuple of fields that must be in kwargs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e762297f526a726140de00343aa2c99bba62ff8c" translate="yes" xml:space="preserve">
          <source>A tuple of the new x-axis limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3625f6c2973dffe256a71f4a9e1cd855a0941917" translate="yes" xml:space="preserve">
          <source>A tuple of the new y-axis limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09be168566446756aff486d2e6757f91e5409153" translate="yes" xml:space="preserve">
          <source>A valid mathtext string, e.g., r'IQ: $sigma_i=15$'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbb0238784b11b3938224a44cdb2dea0ddfe625" translate="yes" xml:space="preserve">
          <source>A value between \(x_i\) and \(x_{i+1}\) is mapped to the range \(y^1_{i-1} \ldots y^0_i\) by linear interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d550cfa955739185316ddf3b363ebc2a388135" translate="yes" xml:space="preserve">
          <source>A vastly simpler version of this function was originally written as a helper for Axes.scatter().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb51f2e8d57cd41f348b34805b298019ca4a78d" translate="yes" xml:space="preserve">
          <source>A vertex is selected (to complete the polygon or to move a vertex) if the mouse click is within &lt;code&gt;vertex_select_radius&lt;/code&gt; pixels of the vertex. The default radius is 15 pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d332349307453dedd917f4c94015f9f1084d8bf" translate="yes" xml:space="preserve">
          <source>A vertical list of boxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf04078378209671b38df5277dd50c4a45bc0fbb" translate="yes" xml:space="preserve">
          <source>A virtual font (*.vf file) containing subroutines for dvi files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648231b30fce4c031d7d08896c566babbc129fff" translate="yes" xml:space="preserve">
          <source>A wedge centered at &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt; center with radius &lt;em&gt;r&lt;/em&gt; that sweeps &lt;em&gt;theta1&lt;/em&gt; to &lt;em&gt;theta2&lt;/em&gt; (in degrees). If &lt;em&gt;width&lt;/em&gt; is given, then a partial wedge is drawn from inner radius &lt;em&gt;r&lt;/em&gt; - &lt;em&gt;width&lt;/em&gt; to outer radius &lt;em&gt;r&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cf24ec6bb9b1334c0bd23e5635ddc3e1a2ab12" translate="yes" xml:space="preserve">
          <source>A wide range of specific and general purpose date tick locators and formatters are provided in this module. See &lt;a href=&quot;ticker_api#module-matplotlib.ticker&quot;&gt;&lt;code&gt;matplotlib.ticker&lt;/code&gt;&lt;/a&gt; for general information on tick locators and formatters. These are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54d729443d2f0a08041ade77e24d412691c73ca" translate="yes" xml:space="preserve">
          <source>A width of the axes. If float or string is given, &lt;em&gt;from_any&lt;/em&gt; function is used to create the size, with &lt;em&gt;ref_size&lt;/em&gt; set to AxesX instance of the current axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7acddd6e4d404b167c50f54909c6de5dd4b157ee" translate="yes" xml:space="preserve">
          <source>A wrapper around all the detrend algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be462228e6b7c893853dc4f9a95b132abf77730c" translate="yes" xml:space="preserve">
          <source>A wrapper for unittest.TestCase that includes cleanup operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2591e4631ba840cd3e3dc76c002cef315e8d7bd5" translate="yes" xml:space="preserve">
          <source>A writable filename or fileobject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d875074556a8602de1d471f87a695aa87b5a96ae" translate="yes" xml:space="preserve">
          <source>ACCEPTS: (left, bottom, width, height)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbe70b352e5836bf0e5658d15b566401b0990d3" translate="yes" xml:space="preserve">
          <source>ACCEPTS: [ 'circle' | 'darrow' | 'larrow' | 'rarrow' | 'round' | 'round4' | 'roundtooth' | 'sawtooth' | 'square' ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2d2d9e2fac1aadc0f8582d4ef56396c956f037" translate="yes" xml:space="preserve">
          <source>ACCEPTS: [(&lt;a href=&quot;../path_api#matplotlib.path.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../transformations#matplotlib.transforms.Transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt;) | &lt;a href=&quot;matplotlib.patches.patch#matplotlib.patches.Patch&quot;&gt;&lt;code&gt;Patch&lt;/code&gt;&lt;/a&gt; | None]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1db6c3545f02b946271c0a665f93e8b801d45c" translate="yes" xml:space="preserve">
          <source>ACCEPTS: [(&lt;a href=&quot;path_api#matplotlib.path.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;transformations#matplotlib.transforms.Transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt;) | &lt;a href=&quot;_as_gen/matplotlib.patches.patch#matplotlib.patches.Patch&quot;&gt;&lt;code&gt;Patch&lt;/code&gt;&lt;/a&gt; | None]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e18676f4313dd6f4ac8a3749499837cb2eaa7a" translate="yes" xml:space="preserve">
          <source>ACCEPTS: a (w, h) tuple with w, h in inches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440ebc96a0884813b47b87bb003c36ea22ae6cb8" translate="yes" xml:space="preserve">
          <source>ACCEPTS: a length 2 sequence of floats; may be overridden in methods that have &lt;code&gt;vmin&lt;/code&gt; and &lt;code&gt;vmax&lt;/code&gt; kwargs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e38421a40e481837442f1e838c95ebda36e489" translate="yes" xml:space="preserve">
          <source>API Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8d20d234a8bb6a32abbed6cd3fa23ce9798991" translate="yes" xml:space="preserve">
          <source>Abstract base class for GUI neutral widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4eb6ded417de8829407a88476652dcbb0758f4f" translate="yes" xml:space="preserve">
          <source>Abstract base class for classes implementing mesh refinement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3c7a66ba0dc139844f021d26d6ff7ddba227ef" translate="yes" xml:space="preserve">
          <source>Abstract base class for classes used to find the triangles of a Triangulation in which (x,y) points lie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f951db71d811d5c6d6eeb26c2ea024146146473" translate="yes" xml:space="preserve">
          <source>Abstract base class for classes used to perform interpolation on triangular grids.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9b8f53fcbdf41170a65e3fe85e5f173d15f979" translate="yes" xml:space="preserve">
          <source>Abstract base class for objects that render into a FigureCanvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094944e47285deb8d2f8b427cf75235c7783ebe9" translate="yes" xml:space="preserve">
          <source>Abstract base class for the axis ticks, grid lines and labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bbdd3be341dee78d73dd62f4e80a27f9c13b37" translate="yes" xml:space="preserve">
          <source>Abstract base class for writing movies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097754e50f95499669236c366080e8dcd7488dd0" translate="yes" xml:space="preserve">
          <source>Abstract base class for writing movies. Fundamentally, what a MovieWriter does is provide is a way to grab frames by calling grab_frame().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a4f0dc1dc2b0c2618b68ab37a73da96819f918" translate="yes" xml:space="preserve">
          <source>Abstract base classes define the primitives for Tools. These tools are used by &lt;a href=&quot;backend_managers_api#matplotlib.backend_managers.ToolManager&quot;&gt;&lt;code&gt;matplotlib.backend_managers.ToolManager&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fe44b5b723eafb4c0208500b96dca7fd867fa4" translate="yes" xml:space="preserve">
          <source>Abstract base classes define the primitives that renderers and graphics contexts must implement to serve as a matplotlib backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233064dd90bda7ca4c1a71b0aa16595cce74a940" translate="yes" xml:space="preserve">
          <source>Accent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b94d45a25e607fee9e502708ab706f4a244b4e2" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.projections.polar.InvertedPolarTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.projections.polar.InvertedPolarTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3256552392fecaa12a9b6147b7e9350302bfc59a" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.projections.polar.PolarAxes.InvertedPolarTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.projections.polar.PolarAxes.InvertedPolarTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897487ed2234842c96f1b1b97f0a9258b70757b0" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.projections.polar.PolarAxes.PolarTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.projections.polar.PolarAxes.PolarTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2248dcaf74c639d5f0b03190559517e177390437" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.projections.polar.PolarTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.projections.polar.PolarTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd998cecb672ea60ce484296abce0ffc7798315" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.FuncTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.FuncTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd000a88ed26d0f429cefd4c2226929bdcafd68" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.InvertedLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.InvertedLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4e789530719914eb73044bb9d9d86e7ee339fb" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.InvertedLogTransformBase.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.InvertedLogTransformBase.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f75533319f3e5a194d026034760c59a3ead2827" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.InvertedSymmetricalLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.InvertedSymmetricalLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bd6a3c08d5999fa7226c455170c6937c989c25" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.LogScale.InvertedLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.LogScale.InvertedLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8dab904f7bb0add57f07e56100d80da3b05a41" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.LogScale.LogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.LogScale.LogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac15a6809647924c8ff1760a4b59f09653cf5ec4" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.LogScale.LogTransformBase.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.LogScale.LogTransformBase.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d2beb495044ab5ffc2548508580d1fb05a3756" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.LogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.LogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccfc580b42f307d6ccf9502da1f9b97f93773f7" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.LogTransformBase.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.LogTransformBase.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b039f2668db9ec55e939f85bc7cf23b2f5d2dcd" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.SymmetricalLogScale.InvertedSymmetricalLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.SymmetricalLogScale.InvertedSymmetricalLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b28b9a032ae92c718c6339ee830134df370730a" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.SymmetricalLogScale.SymmetricalLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.SymmetricalLogScale.SymmetricalLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaa0749a22bebb3b4e739c8711c4a136d2e0db5" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.SymmetricalLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.scale.SymmetricalLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46e5f258bdd9a6bb68a6f417fe9739ea0a09dbe" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.transforms.Affine2DBase.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.transforms.Affine2DBase.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ef9bd89cf1e739c497959b71d4ff3d97d9e49e" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.transforms.BlendedGenericTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.transforms.BlendedGenericTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05e5d0b6ac03c0c8c04a02b9821c89c94c928c8" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;a href=&quot;#matplotlib.transforms.Transform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt;) and returns a numpy array of shape (N x &lt;a href=&quot;#matplotlib.transforms.Transform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30de9c0591b4b8998801cf6487398ef205448aa4" translate="yes" xml:space="preserve">
          <source>Accepts a numpy array of shape (N x &lt;code&gt;input_dims&lt;/code&gt;) and returns a numpy array of shape (N x &lt;code&gt;output_dims&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0854799ce5240dde623975ed3a57091f1134ecaa" translate="yes" xml:space="preserve">
          <source>Accepts x, y, z arguments or a single array_like (x, y, z)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed852254f54d16786eb5f2efc2b32a56e9047a97" translate="yes" xml:space="preserve">
          <source>Activate the pan/zoom tool. pan with left button, zoom with right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689e3d2b21d9fd9c43eeb2167d30fa52556a1a0f" translate="yes" xml:space="preserve">
          <source>Activate zoom to rect mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65b6aa63aeedccf15a0e5c863880cdbc635cc7e" translate="yes" xml:space="preserve">
          <source>Add 2D bar(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9eb114ea8587412022aa4c1d047a655164f63c" translate="yes" xml:space="preserve">
          <source>Add &lt;em&gt;tool&lt;/em&gt; to &lt;a href=&quot;#matplotlib.backend_managers.ToolManager&quot;&gt;&lt;code&gt;ToolManager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94751bae3d8455fee1fc301b8dab9973d7776673" translate="yes" xml:space="preserve">
          <source>Add Axes &lt;em&gt;a&lt;/em&gt;, with key &lt;em&gt;key&lt;/em&gt;, to the stack, and return the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78ce8dc35854315a935704a36e8d2670050ac28" translate="yes" xml:space="preserve">
          <source>Add a 3D collection object to the plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5640996800d19e4fe3d15ae6d0d49ce26f5e0f" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;../collections_api#matplotlib.collections.Collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; to the axes' collections; return the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0d67daf9a5eabe8e9c74545f03f60301ce10ad" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;../container_api#matplotlib.container.Container&quot;&gt;&lt;code&gt;Container&lt;/code&gt;&lt;/a&gt; to the axes' containers; return the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71af82c092b1ebcaf62494b63a18ea0fc0223adf" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;../table_api#matplotlib.table.Table&quot;&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/a&gt; to the axes' tables; return the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504d9c2e83be5b8eda0ea84e878e0d1b36df4557" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;_as_gen/matplotlib.lines.line2d#matplotlib.lines.Line2D&quot;&gt;&lt;code&gt;Line2D&lt;/code&gt;&lt;/a&gt; to the axes' lines; return the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ed8b30584d443d83db5851d166ce45ed5ca880" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;_as_gen/matplotlib.patches.patch#matplotlib.patches.Patch&quot;&gt;&lt;code&gt;Patch&lt;/code&gt;&lt;/a&gt; to the axes' patches; return the patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257190c151e2d51cf1225958102249a894cd5a04" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;collections_api#matplotlib.collections.Collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; to the axes' collections; return the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47ea1fd6ca1227f4bf69eaac4f14d702fb9048d" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;container_api#matplotlib.container.Container&quot;&gt;&lt;code&gt;Container&lt;/code&gt;&lt;/a&gt; to the axes' containers; return the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf218a07581518fcfd0f6957f35069a1fe5e35e" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;matplotlib.lines.line2d#matplotlib.lines.Line2D&quot;&gt;&lt;code&gt;Line2D&lt;/code&gt;&lt;/a&gt; to the axes' lines; return the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73e2bac5d635b2a01acf6e88d9f382377c420e6" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;matplotlib.patches.patch#matplotlib.patches.Patch&quot;&gt;&lt;code&gt;Patch&lt;/code&gt;&lt;/a&gt; to the axes' patches; return the patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf937cfc5a7b5bce175e759636f94d4819556527" translate="yes" xml:space="preserve">
          <source>Add a &lt;a href=&quot;table_api#matplotlib.table.Table&quot;&gt;&lt;code&gt;Table&lt;/code&gt;&lt;/a&gt; to the axes' tables; return the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6f71f4fe089edeb9eb6a6168402e527c67159d" translate="yes" xml:space="preserve">
          <source>Add a callback function that will be called whenever one of the &lt;a href=&quot;#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt;'s properties changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78acfdfbdfd372d37eb6b73d58b18815caf69808" translate="yes" xml:space="preserve">
          <source>Add a callback function that will be called whenever one of the &lt;a href=&quot;../artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt;'s properties changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95314325ab375fe28b224e3483ab4d7d09820f36" translate="yes" xml:space="preserve">
          <source>Add a callback function that will be called whenever one of the &lt;a href=&quot;artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt;'s properties changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1158fc6641b8edba04b064e585fc0d44b5421d" translate="yes" xml:space="preserve">
          <source>Add a centered title to the figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0291b023016f60270af8f17268a1b8bcbb025a" translate="yes" xml:space="preserve">
          <source>Add a child inset axes to this existing axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777ffba79c11da622c6058d85507ee790fa4cef7" translate="yes" xml:space="preserve">
          <source>Add a colorbar to a plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb75f8c93731cc3d1b925901fc2fd692ded74cb2" translate="yes" xml:space="preserve">
          <source>Add a colormap to the set recognized by &lt;a href=&quot;#matplotlib.cm.get_cmap&quot;&gt;&lt;code&gt;get_cmap()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4a11e69625eea0813d02d1d66a8e0003685d53" translate="yes" xml:space="preserve">
          <source>Add a horizontal line across the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a327b8bac93bab6679f77d978f49c74e8270723" translate="yes" xml:space="preserve">
          <source>Add a horizontal span (rectangle) across the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a76a151ed491611bb04b0f81cbe88a2d653432" translate="yes" xml:space="preserve">
          <source>Add a horizontal span across the axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d0e8a9f8cf1e619def3f4498cdaf2efa289eb7" translate="yes" xml:space="preserve">
          <source>Add a key to a quiver plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051ac4829503162a7a4887e6433ee70c9acfb69f" translate="yes" xml:space="preserve">
          <source>Add a label near the point (x, y). If transform is None (default), (x, y) is in data coordinates; if transform is False, (x, y) is in display coordinates; otherwise, the specified transform will be used to translate (x, y) into display coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971c14c0a6e492c5ea178198c3aef389f2a0eb73" translate="yes" xml:space="preserve">
          <source>Add a new axes on the right (or left) side of the main axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19f293523c8174770f89ea7733f3f139cb85d9a" translate="yes" xml:space="preserve">
          <source>Add a new axes on the top (or bottom) side of the main axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda0c3a40517c4f9cb78256500a1820263500ce9" translate="yes" xml:space="preserve">
          <source>Add a new text note to the page to be saved next. The optional positionRect specifies the position of the new note on the page. It is outside the page per default to make sure it is invisible on printouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb793835096e03bfcec3be1186836bc795ed8368" translate="yes" xml:space="preserve">
          <source>Add a non-resampled image to the figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f3956391533f21f653dca9ac7c094b15540208" translate="yes" xml:space="preserve">
          <source>Add a point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f58bcb96a2526e49ea94b5779690f4ea2ebb5e" translate="yes" xml:space="preserve">
          <source>Add a rotation (in degrees) around the point (x, y) in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cefc85d12528c547a361cd8b09dafae32cd04b" translate="yes" xml:space="preserve">
          <source>Add a rotation (in degrees) to this transform in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ebf4476ea9eadb926f396225dbd88597a2a129" translate="yes" xml:space="preserve">
          <source>Add a rotation (in radians) around the point (x, y) in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4374f210f8c9fc52260571c0ca83de9b8442a462" translate="yes" xml:space="preserve">
          <source>Add a rotation (in radians) to this transform in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84a7826ad99023144ead1f7b508d6c990c8b81b" translate="yes" xml:space="preserve">
          <source>Add a second x-axis to this axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3adb7911c9162e145337bba64d4b391fa2ad656" translate="yes" xml:space="preserve">
          <source>Add a second y-axis to this axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32ca375cc0a560ffbabca308f03a240047bb4fe" translate="yes" xml:space="preserve">
          <source>Add a secondary axes that converts from radians to degrees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c3dadda3b82d9b74bb6961715153d3138d5818" translate="yes" xml:space="preserve">
          <source>Add a set of subplots to this figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef02e9c02c273954a33a30721a4cb751a84c3f63" translate="yes" xml:space="preserve">
          <source>Add a simple Sankey diagram with flows at the same hierarchical level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596f4fcdcc26da95bf01e43bdcf786587476ddcf" translate="yes" xml:space="preserve">
          <source>Add a subplot to the current figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2caf9bf1d603f9bca8823168ae9762276d44a6c9" translate="yes" xml:space="preserve">
          <source>Add a table to an &lt;a href=&quot;#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f259bf2942eae20669f07f92779508b3f128833" translate="yes" xml:space="preserve">
          <source>Add a table to an &lt;a href=&quot;../axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8aee08573eaf2b5796fbd102f21cc3fe277160d" translate="yes" xml:space="preserve">
          <source>Add a table to an &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a47bd8e7205c13be1baae8cb8227c04a30b1b2d" translate="yes" xml:space="preserve">
          <source>Add a toolitem to the container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc9003bf3f54977eba50a62ea4bce8bf952a619" translate="yes" xml:space="preserve">
          <source>Add a vertical line across the axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e5ae10b81d748fa7a2393975b155743bc1954c" translate="yes" xml:space="preserve">
          <source>Add a vertical span (rectangle) across the axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecddb59517dce94d649751ce9c6e6b04f1768ec" translate="yes" xml:space="preserve">
          <source>Add a vertical span (rectangle) across the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad9c6120e433fe0f4729924099d8dc79064c6ee" translate="yes" xml:space="preserve">
          <source>Add a vertical span across the axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d9cdf523a4a2e4b545dac6c12b39ab82f834e2" translate="yes" xml:space="preserve">
          <source>Add an &lt;a href=&quot;../artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt; to the axes, and return the artist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780b1da64f4bec35373fd8730ff47e7ee580ca01" translate="yes" xml:space="preserve">
          <source>Add an &lt;a href=&quot;../axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; to the figure as part of a subplot arrangement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6286d45eee09cca27710c4a20d4058d7cf2bf4a" translate="yes" xml:space="preserve">
          <source>Add an &lt;a href=&quot;../image_api#matplotlib.image.AxesImage&quot;&gt;&lt;code&gt;AxesImage&lt;/code&gt;&lt;/a&gt; to the axes' images; return the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae6fdbff335e1654d5d25d735b58d5f4458b4d9" translate="yes" xml:space="preserve">
          <source>Add an &lt;a href=&quot;artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt; to the axes, and return the artist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dcabf2ba4ebf56ff7a2749345a1771939de9d3" translate="yes" xml:space="preserve">
          <source>Add an &lt;a href=&quot;image_api#matplotlib.image.AxesImage&quot;&gt;&lt;code&gt;AxesImage&lt;/code&gt;&lt;/a&gt; to the axes' images; return the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c64275c67c0d77f80aab18a45b0253dc28ea79" translate="yes" xml:space="preserve">
          <source>Add an &lt;code&gt;AxesBase&lt;/code&gt; to the axes' children; return the child axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752df9623d3016ad9627026388845b137f354745" translate="yes" xml:space="preserve">
          <source>Add an arrow to the axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035ed5f2cd390930a4006f43e649c1a1c7ce96f3" translate="yes" xml:space="preserve">
          <source>Add an axes to the current figure and make it the current axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0383ce2d616c01ab91cc8848c6ae1e78a0692a3" translate="yes" xml:space="preserve">
          <source>Add an axes to the figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd1ead8ed556208a1f261ed0e2d7478fad23195" translate="yes" xml:space="preserve">
          <source>Add an entry to a dictionary of boolean flags that are set to True when the mappable is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec449880bde37ef71546598c2bc61de0a4fb224" translate="yes" xml:space="preserve">
          <source>Add an inset indicator rectangle to the axes based on the axis limits for an &lt;em&gt;inset_ax&lt;/em&gt; and draw connectors between &lt;em&gt;inset_ax&lt;/em&gt; and the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f6f7588384c2a276f0aca7552acd8e6e01df42" translate="yes" xml:space="preserve">
          <source>Add an inset indicator to the axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72364a53c015cf970c8e11f85b39f5f439d203fc" translate="yes" xml:space="preserve">
          <source>Add an inset indicator to the axes. This is a rectangle on the plot at the position indicated by &lt;em&gt;bounds&lt;/em&gt; that optionally has lines that connect the rectangle to an inset axes (&lt;a href=&quot;matplotlib.axes.axes.inset_axes#matplotlib.axes.Axes.inset_axes&quot;&gt;&lt;code&gt;Axes.inset_axes&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b04e56edb5bbd606868792ab6929dfc38e26d2" translate="yes" xml:space="preserve">
          <source>Add any &lt;a href=&quot;../artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt; to the figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d66f411447bf22f3852550a4c86561e09c6f172" translate="yes" xml:space="preserve">
          <source>Add any &lt;a href=&quot;artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt; to the container box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9f8c96c40b8553f18109b252bf4394dbb021f3" translate="yes" xml:space="preserve">
          <source>Add check buttons to &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;matplotlib.axes.Axes&lt;/code&gt;&lt;/a&gt; instance &lt;em&gt;ax&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14655a9076d66f46b66634b2b218c4f1e190fc4d" translate="yes" xml:space="preserve">
          <source>Add contour label using &lt;a href=&quot;#matplotlib.contour.ClabelText&quot;&gt;&lt;code&gt;ClabelText&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc98ecff71a09833f4177235bf461f7deff4f2d" translate="yes" xml:space="preserve">
          <source>Add contour label using &lt;a href=&quot;text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367e5359b70a8fd0e73f29dd953f3d479758d700" translate="yes" xml:space="preserve">
          <source>Add horizontal lines in data coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd845df77b87ba7929782407e7f8ddd12021f6c1" translate="yes" xml:space="preserve">
          <source>Add multiple tools to &lt;code&gt;ToolManager&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b95b29f369fe8a8c5b5d059b513baab0bbb518d" translate="yes" xml:space="preserve">
          <source>Add multiple tools to the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f418b3323503e08e6620deeaee84594cb643d5" translate="yes" xml:space="preserve">
          <source>Add radio buttons to an &lt;a href=&quot;axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fcb6d137613e10df557792a846c17e9b5d426a2" translate="yes" xml:space="preserve">
          <source>Add text to figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa686aaad0175f2d04d16c84a2a1bb17184b6b3" translate="yes" xml:space="preserve">
          <source>Add text to the axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1002bdf11a4cfb9f1c4dc283e24e9c36b2695f61" translate="yes" xml:space="preserve">
          <source>Add text to the plot. kwargs will be passed on to Axes.text, except for the &lt;code&gt;zdir&lt;/code&gt; keyword, which sets the direction to be used as the z direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3109798e512e410e199ba52aad58d90f1e6240" translate="yes" xml:space="preserve">
          <source>Add the coordinates of an event to the list of clicks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4497074b42ddc3e60212c574d7f3b0ea9d51d27" translate="yes" xml:space="preserve">
          <source>Add the current figure to the stack of views and positions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527f1bf7407753ea30a76525132e851483dd33b0" translate="yes" xml:space="preserve">
          <source>Add the lines from a non-filled &lt;a href=&quot;../contour_api#matplotlib.contour.ContourSet&quot;&gt;&lt;code&gt;ContourSet&lt;/code&gt;&lt;/a&gt; to the colorbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c771a2c5c94151f0f47b8d052d3a01051826a0df" translate="yes" xml:space="preserve">
          <source>Add the lines from a non-filled &lt;a href=&quot;contour_api#matplotlib.contour.ContourSet&quot;&gt;&lt;code&gt;ContourSet&lt;/code&gt;&lt;/a&gt; to the colorbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d0e3c2ca04741e9f16267ead4dab8d76610355" translate="yes" xml:space="preserve">
          <source>Add the red, green and blue axes to the RGB composite's axes figure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eccfe2028cd859ab75440a98711fd9bc5b588c8" translate="yes" xml:space="preserve">
          <source>Add the text &lt;em&gt;s&lt;/em&gt; to the axes at location &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt; in data coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79831679a8fbc1328c71cdc2762eb5febbc8ae76" translate="yes" xml:space="preserve">
          <source>Add vertical lines in data coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4910213d7ba2227215b547b6c2074e75dc32b55" translate="yes" xml:space="preserve">
          <source>Adding Artists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a154ebd006f9e24f984ad9b58c7a26c44ddf8a5c" translate="yes" xml:space="preserve">
          <source>Adding a subplot that spans two rows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a17ad372cc728453957418740df2d44f106b2e6" translate="yes" xml:space="preserve">
          <source>Adding lines to figures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b072391adba06275fb543a8f6ce2e9489ffc9718" translate="yes" xml:space="preserve">
          <source>Adding three subplots in the space occupied by a single subplot:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b7fa9777a48a6c27a5e183a5aeb7ed57e012ab" translate="yes" xml:space="preserve">
          <source>Additional &lt;a href=&quot;#matplotlib.animation.Animation&quot;&gt;&lt;code&gt;Animation&lt;/code&gt;&lt;/a&gt; objects that should be included in the saved movie file. These need to be from the same &lt;a href=&quot;matplotlib.figure.figure#matplotlib.figure.Figure&quot;&gt;&lt;code&gt;matplotlib.figure.Figure&lt;/code&gt;&lt;/a&gt; instance. Also, animation frames will just be simply combined, so there should be a 1:1 correspondence between the frames from the different animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e210975737c761d515019653d6a9a3bf05d318" translate="yes" xml:space="preserve">
          <source>Additional arguments to pass to each call to &lt;em&gt;func&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5361bbc0b5b2b630acb710b1c55c3adbe7e4f0f9" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments are handed to &lt;code&gt;add_subplot&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71b235a348bcbe1efb920f26672ced7943263c5" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments are of two kinds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7becdb023b6f420dace8c6138dedb657060880b" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments set &lt;a href=&quot;_as_gen/matplotlib.patches.pathpatch#matplotlib.patches.PathPatch&quot;&gt;&lt;code&gt;matplotlib.patches.PathPatch&lt;/code&gt;&lt;/a&gt; properties, listed below. For example, one may want to use &lt;code&gt;fill=False&lt;/code&gt; or &lt;code&gt;label=&quot;A legend entry&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fce2960d7e1412efb45ee3fdbf1a20bdb06ac78" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments that are passed to &lt;code&gt;PIL.Image.save&lt;/code&gt; when saving the figure. Only applicable for formats that are saved using Pillow, i.e. JPEG, TIFF, and (if the keyword is set to a non-None value) PNG.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8095ce795c76f9591295f6744838ecafdafc0eac" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments that are passed to &lt;code&gt;PIL.Image.save&lt;/code&gt; when saving the figure. These take precedence over &lt;em&gt;quality&lt;/em&gt;, &lt;em&gt;optimize&lt;/em&gt; and &lt;em&gt;progressive&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b1a65313f1db49e6bd60b19626dce3cb806783" translate="yes" xml:space="preserve">
          <source>Additional keyword arguments to pass onto &lt;a href=&quot;mpl_toolkits.mplot3d.art3d.poly3dcollection#mpl_toolkits.mplot3d.art3d.Poly3DCollection&quot;&gt;&lt;code&gt;Poly3DCollection()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2dbc30425e288b0a63302f6763a1def7ca9273" translate="yes" xml:space="preserve">
          <source>Additional kwargs are &lt;a href=&quot;../artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt; kwargs passed on to &lt;a href=&quot;../image_api#matplotlib.image.FigureImage&quot;&gt;&lt;code&gt;FigureImage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f8ac4986ea850047dae73e456649a1a3909be8" translate="yes" xml:space="preserve">
          <source>Additional kwargs are &lt;a href=&quot;../text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;matplotlib.text.Text&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb56ba7006154bdadf3188fc5931accb2189b48" translate="yes" xml:space="preserve">
          <source>Additional kwargs are matplotlib.artist properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054dc850281720cd0b00047a4f2b3879fab9a084" translate="yes" xml:space="preserve">
          <source>Additional kwargs are passed on to &lt;code&gt;self.poly&lt;/code&gt; which is the &lt;a href=&quot;_as_gen/matplotlib.patches.rectangle#matplotlib.patches.Rectangle&quot;&gt;&lt;code&gt;Rectangle&lt;/code&gt;&lt;/a&gt; that draws the slider knob. See the &lt;a href=&quot;_as_gen/matplotlib.patches.rectangle#matplotlib.patches.Rectangle&quot;&gt;&lt;code&gt;Rectangle&lt;/code&gt;&lt;/a&gt; documentation for valid property names (e.g., &lt;code&gt;facecolor&lt;/code&gt;, &lt;code&gt;edgecolor&lt;/code&gt;, &lt;code&gt;alpha&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588dfe29eb461e72a753be3ea8a7f96e5d63e77a" translate="yes" xml:space="preserve">
          <source>Additional kwargs are passed on to imshow which makes the specgram image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f5e8b058cc4f777eee13280e212a01e3565f45" translate="yes" xml:space="preserve">
          <source>Additional kwargs are passed through to &lt;a href=&quot;#matplotlib.legend_handler.HandlerBase&quot;&gt;&lt;code&gt;HandlerBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b900d6cf56a25a75cbbf994b7c734e20b6a923e5" translate="yes" xml:space="preserve">
          <source>Additional kwargs are passed to &lt;a href=&quot;#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3146bb7ad195fdfd497a8565d3f1d6272ca93b6" translate="yes" xml:space="preserve">
          <source>Additional kwargs are passed to &lt;a href=&quot;../text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f618cd8245c8236a7f3f67a6cdf843e3c780728" translate="yes" xml:space="preserve">
          <source>Additional kwargs inherited from the base &lt;a href=&quot;#matplotlib.collections.Collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b9144d6a5bc5a34bc4d64d359ed06a794bdd3f" translate="yes" xml:space="preserve">
          <source>Additional marker properties. See &lt;a href=&quot;_as_gen/matplotlib.lines.line2d#matplotlib.lines.Line2D&quot;&gt;&lt;code&gt;matplotlib.lines.Line2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a2af28204254f99a3fc5cdfa424fedb753b871" translate="yes" xml:space="preserve">
          <source>Additional parameters are the same as those for &lt;a href=&quot;matplotlib.axes.axes.plot#matplotlib.axes.Axes.plot&quot;&gt;&lt;code&gt;plot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280e4177678f41b414d9a0dfef836f678b756e9d" translate="yes" xml:space="preserve">
          <source>Additional parameters are the same as those for &lt;a href=&quot;matplotlib.pyplot.plot#matplotlib.pyplot.plot&quot;&gt;&lt;code&gt;plot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9493609aef773b3f2c80ae57d092934e9a6bf7" translate="yes" xml:space="preserve">
          <source>Additionally, it supports the following keyword arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d34380adec150a4767219e06db94088d98e185" translate="yes" xml:space="preserve">
          <source>Additionally, shorthand notations define a special positions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed8c7aefc58a84fd5c32a53b2f32e05ad79501a" translate="yes" xml:space="preserve">
          <source>Additionally, the following arguments are allowed. They are passed along to the &lt;a href=&quot;../collections_api#matplotlib.collections.PolyCollection&quot;&gt;&lt;code&gt;PolyCollection&lt;/code&gt;&lt;/a&gt; constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4dbf056ad1b539752f73f4c51bbe4e42ebe8883" translate="yes" xml:space="preserve">
          <source>Additionally, the following arguments are allowed. They are passed along to the &lt;a href=&quot;../collections_api#matplotlib.collections.QuadMesh&quot;&gt;&lt;code&gt;QuadMesh&lt;/code&gt;&lt;/a&gt; constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53192024f3cff836d17b0926c4606494b8d3b4f7" translate="yes" xml:space="preserve">
          <source>Additionally, this method can provide a number of standard cleanups and conversions to the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfc0053b35ad42fc29bfb1665911be051bce2b9" translate="yes" xml:space="preserve">
          <source>Adds a callback function that will be called whenever one of the &lt;code&gt;Artist&lt;/code&gt;'s properties changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a45cc526fa8cfcb4042edc444b0bf1b322ff425" translate="yes" xml:space="preserve">
          <source>Adds a comment to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae2821600787e2c3f6d0c9a92fe0b12f10ea0a2" translate="yes" xml:space="preserve">
          <source>Adds a scale in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a03f84705ee772da9b7009fac4cc82f8aec6d55" translate="yes" xml:space="preserve">
          <source>Adds a simple &lt;a href=&quot;#matplotlib.patheffects.SimplePatchShadow&quot;&gt;&lt;code&gt;SimplePatchShadow&lt;/code&gt;&lt;/a&gt; and then draws the original Artist to avoid needing to call &lt;a href=&quot;#matplotlib.patheffects.Normal&quot;&gt;&lt;code&gt;Normal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47afe3d45c890015876b93526e958b0d49651cfd" translate="yes" xml:space="preserve">
          <source>Adds a simple &lt;a href=&quot;#matplotlib.patheffects.Stroke&quot;&gt;&lt;code&gt;Stroke&lt;/code&gt;&lt;/a&gt; and then draws the original Artist to avoid needing to call &lt;a href=&quot;#matplotlib.patheffects.Normal&quot;&gt;&lt;code&gt;Normal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94fda03dcaa5755b92e3910497e1d901feca73c" translate="yes" xml:space="preserve">
          <source>Adds a skew in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6164b30ff27c450c10d2bb9b72b3b8ab89f8d3b1" translate="yes" xml:space="preserve">
          <source>Adds a tool to this container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb0975e147ed69cbc0ed7c9d87a63d39c84f911" translate="yes" xml:space="preserve">
          <source>Adds a translation in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6716262d328fa52f7401683f4c5604c98015060" translate="yes" xml:space="preserve">
          <source>Adds an entire element. This is the same as calling &lt;a href=&quot;#matplotlib.backends.backend_svg.XMLWriter.start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#matplotlib.backends.backend_svg.XMLWriter.data&quot;&gt;&lt;code&gt;data()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#matplotlib.backends.backend_svg.XMLWriter.end&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; in sequence. The &lt;em&gt;text&lt;/em&gt; argument can be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8383728f15fa0f769da93b9ecdd987e93eb04df" translate="yes" xml:space="preserve">
          <source>Adds character data to the output stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942ee9f48937df513fb17d0da25282c5df35eae1" translate="yes" xml:space="preserve">
          <source>Adds labels to line contours in &lt;em&gt;cs&lt;/em&gt;, where &lt;em&gt;cs&lt;/em&gt; is a &lt;a href=&quot;#matplotlib.contour.ContourSet&quot;&gt;&lt;code&gt;ContourSet&lt;/code&gt;&lt;/a&gt; object returned by &lt;code&gt;contour()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb21b70ebc3f9a1b91aa83f8b6b6b66d3e3d91f" translate="yes" xml:space="preserve">
          <source>Adds labels to line contours in &lt;em&gt;cs&lt;/em&gt;, where &lt;em&gt;cs&lt;/em&gt; is a &lt;a href=&quot;../contour_api#matplotlib.contour.ContourSet&quot;&gt;&lt;code&gt;ContourSet&lt;/code&gt;&lt;/a&gt; object returned by &lt;code&gt;contour()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1f9b8b5d1d0ab3d49ec8737de0997f726d23cb" translate="yes" xml:space="preserve">
          <source>Adjust subplot parameters to give specified padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c27f1a5ed1584170a3c800fb30526a69a9cf7c0" translate="yes" xml:space="preserve">
          <source>Adjust the Axes for a specified data aspect ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600a190f1b10912fef3caa0329efab903f889f22" translate="yes" xml:space="preserve">
          <source>Adjust the axes and return a list of information about the Sankey subdiagram(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e88b911c32f1d1e199a6e6e76896a2ea9042175" translate="yes" xml:space="preserve">
          <source>Adjust the direction of the axislabel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec91416826dbcf40692a189c586208452219599" translate="yes" xml:space="preserve">
          <source>Adjust the direction of the ticklabel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613fcaa8f61be0aaf7da80ad7875308dd97cf2a4" translate="yes" xml:space="preserve">
          <source>Adjust the direction, text angle, text alignment of ticklabels, labels following the matplotlib convention for the rectangle axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16347b7a873c2bdfba6b38459fe5eca108b800b" translate="yes" xml:space="preserve">
          <source>Adjust the text angle and text alignment of axis label according to the matplotlib convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0df09e6f5ca756dc4a862e399a0f6d3c670a59" translate="yes" xml:space="preserve">
          <source>Adjust the text angle and text alignment of ticklabels according to the matplotlib convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59206e4fd9d2c00763e0df28bc695eacd8c6ab6b" translate="yes" xml:space="preserve">
          <source>Adobe Technical Note #5040, Supporting Downloadable PostScript Language Fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae104dcb7e4cdd763fd9ff7c67fd491ce194aef7" translate="yes" xml:space="preserve">
          <source>Adobe Type 1 Font Format, Adobe Systems Incorporated, third printing, v1.1, 1993. ISBN 0-201-57044-0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6227e3b52b3464a2e4d3a6c6b8da8dae2f85a163" translate="yes" xml:space="preserve">
          <source>Advanced Annotation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ab63add0e18ca44297d40f9182b29f415aac80" translate="yes" xml:space="preserve">
          <source>Advanced quiver and quiverkey functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d23411f8ad42e35c7ba8f5311c73c6527b08562" translate="yes" xml:space="preserve">
          <source>Affine transform of an image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be763555b71ddeac0a1ca8df965bfb40b23325f6" translate="yes" xml:space="preserve">
          <source>Agg Buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1fcfe9fb4619960514a830c1539e476c633973" translate="yes" xml:space="preserve">
          <source>Agg Buffer To Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04259816ace1ebe56c853a8763558570c008514a" translate="yes" xml:space="preserve">
          <source>Alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c4d1e3efca742f10604a6d53719c63a72d62e3" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.AsteriskPolygonCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412ad417c7960552137324a72ff598b782769980" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.AsteriskPolygonCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7576e2669a5a7a03b0391e18663f14152e3f9651" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.AsteriskPolygonCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35688669de77dec592e7490a56d2c8c091c68b71" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.AsteriskPolygonCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809f7eb20db28b3f939259d34e79bd0192656b9c" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.AsteriskPolygonCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd02d328e36edd3b0debdaba39f811e40603a77" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.AsteriskPolygonCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bec0c5240a388a7aaeb5a26be8581cbdc5b3109" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.AsteriskPolygonCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5f087bfe615a62c6486aba69e9d7748350dbcf" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.AsteriskPolygonCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b07de069737d6afb46a362ae0f233b6c4c21ce" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.AsteriskPolygonCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9e1c06eed57f365b366cbb01856552e8d83506" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.BrokenBarHCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe403fea683a662ce20dd169b23d020a391d83d" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.BrokenBarHCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e32a398706998d368d7c1353b52676cfc84d3e1" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.BrokenBarHCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f972d9b7c95277ca2008a4233e96dd93fdac3e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.BrokenBarHCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3763ca1b926812550208081a5091fade76a1f628" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.BrokenBarHCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e4c313a97a974fbda21a47e80cfd2c04e7ff0f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.BrokenBarHCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d70025106edd1b85488100a666ef563763264f0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.BrokenBarHCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccf0e62f65ebb0dfb60e69f2bdc6b958d6b42bb" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.BrokenBarHCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3fa6ae5a1cf9eb6762f32ee927272aa6114f9f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.BrokenBarHCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd480f9233dceea69ca6288294588c7ec0e98c2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.CircleCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a432d4748a794a243352609ac81cdebd75e938d" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.CircleCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9306fe36816a02ff3d7918a8c7de7a3e907f509" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.CircleCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cec52077b86259dbbcb2f23321916923a1132a" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.CircleCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbe3cf3f8da86d778a1985c75f81fce29dc2b25" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.CircleCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa3fd7669582f986f31b820e154af5bee3ea097" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.CircleCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08bc3bbf9d1b7e78227a4a8cdc546b9531cbe29" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.CircleCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0572746f0cd924bf683cdd2173e74267a0b297f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.CircleCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6865ff16671495175e37dc1021c7d4c7f8d325a" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.CircleCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07b2419d5239214c8e96e2ff50418adce7fe440" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.Collection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a298f1d0004841b8ba34f040fa80c3b40b1717b" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.Collection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01eacda2cbaf82801cd0c56ee705e53db3784f1" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.Collection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d25da49d3c1b3e912f2c3c2a3e00595cf303d3" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.Collection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca21aa54c4b356fd78f4b8e22cb47685114929f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.Collection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3db3cd4552529fbdeb4235341073dc2e933545" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.Collection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b2b4c3b930370aa934c4f59e2f8ff837c1b9f3" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.Collection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f908c0c945dffd1b289f61ad0fbae7fd07e386" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.Collection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86585cdf00ff18650919f2596fffd3298211b012" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.Collection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8db6f940dcec936836d7c0071367b68a006ff29" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EllipseCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704838f1cc46f03d6e3ccd6e2af0103ce4bd82c0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EllipseCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6960d792dcaeb13c0e35e73001aee80973c3db2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EllipseCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24a7c1ef3fc1fb2389b599df7b59892f6019019" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EllipseCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30d456cf9df65e51081ac316a30017fba04ce00" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EllipseCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368eb5a36a3514f9e7f2937d2f0e328c1233b982" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EllipseCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f8e6c232dc6ad5860e807e85856d3abe17fd0e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EllipseCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce358587bedd9b5995d069677d14c8e234e0b0e7" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EllipseCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a714ecd25c081e118bc5a10b28a66436cac1ac5" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EllipseCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73f65104a123bdc080f2c5b7bff718cc01bebd8" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EventCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5e39ecd4480c2f7f5aadd339efc9c98f1a4718" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EventCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503dfa48a77a22ba47b0a8f8719b38fbaf869414" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EventCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebc04c27a88252179feec8e54278c42fe650521" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EventCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b8791efa39adf8786090ab282f982e037a0857" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EventCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7ee548d1d7992cbc2a88a989558f0507f9e1ce" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EventCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf3cac5a5f1580b89845167195f72570523f767" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EventCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884b7a62d9c59e5141013546520115cacaf83556" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EventCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc8c65a1c4c86b9e492091b1859ecd60c492fdc" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.EventCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb4dab5edb55de3236f22412f130d9760b5f6a4" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.LineCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f91107e830101a54edce786066aa391b54232fa2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.LineCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534a24f368f3c728f0a5143ba5095ccf54693da0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.LineCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb31d74c7b963c8333cc348d67c9573d5cb64f81" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.LineCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066f4ec22508f93aa489bc56f6b4392f4a48710e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.LineCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7dce172e9267b2b2056de66445d4897c44ba9e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.LineCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f6f4e2c14271a3289eabd093addfe4bdf301c6" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.LineCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da1374fa40dd5d495d122b2e594e9e31818ec62" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.LineCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7eb54723a88fbafe011a70a86cabc4dfcd8683" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.LineCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9c9ffbab44fced5d4a9dcc75ccfb8588ffc33e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PatchCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47551748bf7955ba910520e4303321066b825802" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PatchCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475411af20a876c4f72349cc641706c412e3d437" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PatchCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9e64537f53102121541a277ba2b8bf81e49876" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PatchCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f74ab678792fee62b3a0a3b9f34bd70e70cbb19" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PatchCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cf4473510bd8a9af2b2c272f27e8060d623482" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PatchCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd01adbc4ee4dd850045c0d493911c07dd444b4b" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PatchCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6278445bba0bf0bee9ed4767ab573b1f5cfef3a2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PatchCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8327bde407deb8d051255261eab96c8b06c26ea0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PatchCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f976083e7e1ce42ec62d62cde032fe6ce3d3775b" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PathCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65ecd7e37e761f964b8d7f1979bd66ddf66eae2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PathCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb0d626a95f878733341be1f9cea8cb06f76ca2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PathCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fffae8ec3ec769e7acca3220ecf18b946a8b49" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PathCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2883e822e6b1d45c8c653cc805b6c345719650" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PathCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706023b797cb05a63411fcd10c64d59d82028323" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PathCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a0de1eba459a6148155a054c561030bca567a3" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PathCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0e3d9d48d604d64df03d907deece815df133fa" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PathCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a59456c6ad7e3977239c26317df5cab8a3971c" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PathCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0287d010bd80d318bc2fe9e7a6abde403a69662c" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PolyCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1396b162ab95cdf17e0be48f8f6479fad36acd" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PolyCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b579e20232b143c4cee088996d46813e5886af7d" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PolyCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae31411b3779dc957f9ce90472e86ac02dff023" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PolyCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a46b33d77b415350efe8c4ef2eaaf864bb07965" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PolyCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aea34448a946711d06722775664821b2b7cca8f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PolyCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4967c43c16aa5da23ddfe54827c492fbcd31a295" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PolyCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e94c7396219f4f28226b10d1b32786926014ea" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PolyCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0996cade6be8e42a4d11f70abfa2e5d133a46e8c" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.PolyCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d3cd5732a4f56a03ee6544678192fc5ac77eaa" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.QuadMesh.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6850604ba13c7797caab9b0c93b763d85a5f930" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.QuadMesh.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfcfada563e2ae96418f0e8e02d1df9ddead5d5" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.QuadMesh.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8702698ab7ebfb1b844a0199e1548a9694bfc7f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.QuadMesh.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e26e8b4d2dc22d4ec6f6184a7b524e9d3f53bca" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.QuadMesh.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22bbc47130440f5211bf9328821425623ecfbef" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.QuadMesh.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ad712e1e874cb4dd18ed6019571ed1d2ec2132" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.QuadMesh.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca4e3c2547258497f4dc9699d8d2a6b438a5a28" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.QuadMesh.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6785047db9b0f4d618443ad936ec13168171fee0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.QuadMesh.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ceb0e488bc8b28409e6aa597c87ef84f3fff0ef" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fa68b81cdae39c735cd2df0ee74105413aac4a" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79593948e1d3252a2359a65b547ea31663de46f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbcf1cabc9312f25000b5ca440ea1f380ed37314" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5134da07e9b7a48953dfd80609645d748b366bcd" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6e55cd5106cd65f536def6595a33c199b9b233" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d3be6c2ada222185ef4dcf8df2486524319859" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfae8c4d1682d2df3cbc21a9927568588cdc1ad" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67ee0d7138a2884821d67dcac6e165b32771046" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1013aa8c23db97323fed246e592540c7367a8b" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.StarPolygonCollection.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f0537120c06490c9a6506cce37c17c9d4b2abe" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.StarPolygonCollection.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74788aad3d902f729e47dbf8a2871577d8fca6c7" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.StarPolygonCollection.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3732d314dbaf5ad62aa78d21c7ea6e84ff3238d2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.StarPolygonCollection.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9882680bb1331b36b56e3fd062be7e2260a840f0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.StarPolygonCollection.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25972ec309b9ade34c5edc74c84e510dd10f6f24" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.StarPolygonCollection.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809910bcc916ba257718d532682da7091f066d05" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.StarPolygonCollection.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034c52c2f8e13d5b4d94f491e8079d4980607217" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.StarPolygonCollection.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733b17aefbbf10a1fb517cb10c41ba012987ceda" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.StarPolygonCollection.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94857961f2728b273fc1f28c7f7828b601fa02f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.TriMesh.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9daab3c19338cd5b78656d1b788f074e457e5e6f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.TriMesh.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10f66f35e63edc08f2f40ae2974c31f8bd01df9" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.TriMesh.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15ab05b4c4b33dde9747fd75c70cd1fa6ec3fbf" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.TriMesh.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ab7dad9ceb2ee10a09a0cd6465a5540131306c" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.TriMesh.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d439ca3e5136d81a1cbfe275ab0b131228aa15e6" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.TriMesh.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3414b6cd812f703c87b34291a21e346507b24658" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.TriMesh.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858b39a8e47063c0e36ec19648463a3cb91b9d18" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.TriMesh.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4b4ca36b7da8291edf973d222a8f5e33d6ee7b" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.collections.TriMesh.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882abeb01bec163c3879daf658662fdae5eaf245" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.get_antialiased&quot;&gt;&lt;code&gt;get_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c18fb31764a1af8671bc81cb2a7726d8131aafe" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.get_color&quot;&gt;&lt;code&gt;get_color&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6509a3b03f7cc31cbe08411bd6f7ba2373e40c35" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.get_drawstyle&quot;&gt;&lt;code&gt;get_drawstyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25786a606a135c013c29910f3b41f3eb906e366" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee104dacfbbae8302a686bf9e740b8c2edd9cbf" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e800061beec281d229c6fd2cd88d0cbd4d0bb0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.get_markeredgecolor&quot;&gt;&lt;code&gt;get_markeredgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948478729b582115db25542e99d1c57d6a99804f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.get_markeredgewidth&quot;&gt;&lt;code&gt;get_markeredgewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e5e3b5ea0e2488216661603aab462bc942f496" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.get_markerfacecolor&quot;&gt;&lt;code&gt;get_markerfacecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8c733149ec40c920337102affa1b8fb00b5b9f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.get_markerfacecoloralt&quot;&gt;&lt;code&gt;get_markerfacecoloralt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629bf840eadab4608ecb2da7e80016629f7701fe" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.get_markersize&quot;&gt;&lt;code&gt;get_markersize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f811f7a81a89af8ab53332e127e28acb2feab60" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caaee090f6942568e79d99acbac4b3a50767075c" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.set_color&quot;&gt;&lt;code&gt;set_color&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d272bc1fc8c67801bb9281c8ca1cdcee9c24c2c" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.set_drawstyle&quot;&gt;&lt;code&gt;set_drawstyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cff93a7c25a08a832a6542e586e5bfcd9c982fa" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32005efe65e2011e55360d236d9b12f2e6352165" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee036a716e879b68ebb6cc7c556fb2d3cd160bc" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.set_markeredgecolor&quot;&gt;&lt;code&gt;set_markeredgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea266ad6d8b4db1ea8649dacd7764117c7024f9" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.set_markeredgewidth&quot;&gt;&lt;code&gt;set_markeredgewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3dda89bc4b9ee6a5c7870b2d981a09e3552b1a0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.set_markerfacecolor&quot;&gt;&lt;code&gt;set_markerfacecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff5013728a2daee62e886a44c3a9b84abd5a2b8" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.set_markerfacecoloralt&quot;&gt;&lt;code&gt;set_markerfacecoloralt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32289bec747207a7ce4389ac703cecab10d312f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.lines.Line2D.set_markersize&quot;&gt;&lt;code&gt;set_markersize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f3cfe69e5a7191377c81856aebec711b0d65f3" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.patches.Patch.get_antialiased&quot;&gt;&lt;code&gt;get_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beca35276ddcfafea1b5a270895e688181276ae3" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.patches.Patch.get_edgecolor&quot;&gt;&lt;code&gt;get_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a67c39a5e628bcd9d526fb8d5251f911ff5e177" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.patches.Patch.get_facecolor&quot;&gt;&lt;code&gt;get_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086a20afa244eec330bb1ee09ccccbfd9e2dee44" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.patches.Patch.get_linestyle&quot;&gt;&lt;code&gt;get_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad8a609196dd5a9783bb09e4a2dc19f62db9872" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.patches.Patch.get_linewidth&quot;&gt;&lt;code&gt;get_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9474a8178285809987626fdebfb08e9c3c708d2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.patches.Patch.set_antialiased&quot;&gt;&lt;code&gt;set_antialiased&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692a9361d5edc2856a4938a8a8cf4d6790e85780" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.patches.Patch.set_edgecolor&quot;&gt;&lt;code&gt;set_edgecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f20cbe9c3e4f9ce3e4cd8c0c74830a93def4616" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.patches.Patch.set_facecolor&quot;&gt;&lt;code&gt;set_facecolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8b428fc00e59edfa39f903600e09264bedd18c" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.patches.Patch.set_linestyle&quot;&gt;&lt;code&gt;set_linestyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447a2294db70e6f74c2ef30bb8da5a8959d22aff" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.patches.Patch.set_linewidth&quot;&gt;&lt;code&gt;set_linewidth&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc1060b49a1c12dd58d28119710ef57c49021f3" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.get_color&quot;&gt;&lt;code&gt;get_color&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c44ba73cfbd981b40b83cdb603dcc410858f5a" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.get_fontfamily&quot;&gt;&lt;code&gt;get_fontfamily&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bec460dfc587260e138baccd349d0574049636d" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.get_fontname&quot;&gt;&lt;code&gt;get_fontname&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a29a5201fedf0d0095a77db2d0d6825118ed3f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.get_fontproperties&quot;&gt;&lt;code&gt;get_fontproperties&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f050114b200747396ba0240d446ea9e7a008e90" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.get_fontsize&quot;&gt;&lt;code&gt;get_fontsize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1edacbf88d636d0ace2647da4361d731905f257e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.get_fontstyle&quot;&gt;&lt;code&gt;get_fontstyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6402f0361b651e4221f93bebd74eb67e796bfb1e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.get_fontvariant&quot;&gt;&lt;code&gt;get_fontvariant&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f624084c69975afb87f4a725059ba4a848dcfa7" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.get_fontweight&quot;&gt;&lt;code&gt;get_fontweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479cb1d9171a1c788630364c765f76315fc81978" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.get_horizontalalignment&quot;&gt;&lt;code&gt;get_horizontalalignment&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0eeccc76ff0014efd7069507d7a9402ed00ba7" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.get_verticalalignment&quot;&gt;&lt;code&gt;get_verticalalignment&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97f2c4ff4ff3b610b941b7afc1e8caed6ab94b7" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_color&quot;&gt;&lt;code&gt;set_color&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb49ff00a33e1c2635f409f1a0159f64b7a5084b" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_family&quot;&gt;&lt;code&gt;set_family&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a685ba18b7b466e5cd4c0efa5aad5ddf7081dd6e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_fontfamily&quot;&gt;&lt;code&gt;set_fontfamily&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f96a46215d086fabfabb257a7cca504ee59eee" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_fontname&quot;&gt;&lt;code&gt;set_fontname&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaf10b216c6664999e5b9f3e7445cf398c951f7" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_fontproperties&quot;&gt;&lt;code&gt;set_fontproperties&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfadb6d3de9659f48a5c7b44de259b5a4e611996" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_fontsize&quot;&gt;&lt;code&gt;set_fontsize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96ce7d5eed1ab10d10bd7508f120a907350a986" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_fontstretch&quot;&gt;&lt;code&gt;set_fontstretch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b12ec03894fd1399484de69d12b1c450e22f9f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_fontstyle&quot;&gt;&lt;code&gt;set_fontstyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ec792ef1df6c7f68a4334ae0831ddf19c6fb87" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_fontvariant&quot;&gt;&lt;code&gt;set_fontvariant&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a695fd70f922abc9e8675bf37af718b15c76bc" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_fontweight&quot;&gt;&lt;code&gt;set_fontweight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d46b6e6851839789fe15b799127c29409ebd85" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_horizontalalignment&quot;&gt;&lt;code&gt;set_horizontalalignment&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0da589031446434ce5c9c8fd224ee4fbbdf967" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_multialignment&quot;&gt;&lt;code&gt;set_multialignment&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67444655104151d2d2bf9cb1df62b864a1556f1b" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#matplotlib.text.Text.set_verticalalignment&quot;&gt;&lt;code&gt;set_verticalalignment&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bfe7a3a072e6d723f82627c2e016bb9e6d8365" translate="yes" xml:space="preserve">
          <source>Align the xlabels and ylabels of subplots with the same subplots row or column (respectively) if label alignment is being done automatically (i.e. the label position is not manually set).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0a10cd4b4d5ae1376715da26b6d86df3b4685f" translate="yes" xml:space="preserve">
          <source>Align the ylabels of subplots in the same subplot column if label alignment is being done automatically (i.e. the label position is not manually set).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dfc30cfc64f9f585cbd57b11e991dbfae44a9d" translate="yes" xml:space="preserve">
          <source>Align y-labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181576b2569c973ef54769f3d599df7c20eb6aad" translate="yes" xml:space="preserve">
          <source>Aligning Labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2aa943dd47472ba9153f3d80ffa79d6d8c8329e" translate="yes" xml:space="preserve">
          <source>Alignment of boxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4095fb0afc05039a2a25ad62de18bba21e77c960" translate="yes" xml:space="preserve">
          <source>Alignment of boxes. Can be one of &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;bottom&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;center&lt;/code&gt; and &lt;code&gt;baseline&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547420b7ad53d55fbe6e5771456de77a31705bcd" translate="yes" xml:space="preserve">
          <source>Alignment of the bars to the &lt;em&gt;x&lt;/em&gt; coordinates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4848071f79f4625fe33b0bc6f8d9bf181655d626" translate="yes" xml:space="preserve">
          <source>Alignment of the base to the &lt;em&gt;y&lt;/em&gt; coordinates*:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9becb2dd7fd27b41b85d5923742cec0893f7c5fe" translate="yes" xml:space="preserve">
          <source>Alignment persists for draw events after this is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a1219d3cda9dc72cdcd3611f82d95d314fab7d" translate="yes" xml:space="preserve">
          <source>All &lt;em&gt;xycoords&lt;/em&gt; values are valid as well as the following strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadec6bb128c68784233878027843f884ea1973d" translate="yes" xml:space="preserve">
          <source>All additional keyword arguments are passed to the &lt;a href=&quot;matplotlib.pyplot.figure#matplotlib.pyplot.figure&quot;&gt;&lt;code&gt;pyplot.figure&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8105b9a1f585032f1d688eb9dc5db5f3b70b7c9" translate="yes" xml:space="preserve">
          <source>All arguments may be 1D or 2D. &lt;em&gt;U&lt;/em&gt;, &lt;em&gt;V&lt;/em&gt;, &lt;em&gt;C&lt;/em&gt; may be masked arrays, but masked &lt;em&gt;X&lt;/em&gt;, &lt;em&gt;Y&lt;/em&gt; are not supported at present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccde997b2c562f8d3b2156175b609fc9e3af99e" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'c', 'color', 'edgecolors', 'facecolor', 'facecolors', 'linewidths', 's', 'x', 'y'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946779e0deea2542e35375cc33ca53573b2bcbec" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'colors', 'explode', 'labels', 'x'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70563ccde8d0bd1ae6568dfe67da14088a46c8e7" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'colors', 'linelengths', 'lineoffsets', 'linestyles', 'linewidths', 'positions'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd94c392fa4b770863d9a1a5abdbc05e06a5cee" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'colors', 'x', 'ymax', 'ymin'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24404fa2253756e4b0e3cf9d4d12e56233d18e5b" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'colors', 'xmax', 'xmin', 'y'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352465cae6ad84fe09e3f9c1abd28dc368e6f887" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'dataset'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babe7e15707b14b96940fec707454df352d66e4f" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'start_points', 'u', 'v', 'x', 'y'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2546ce9db604740fb34906633da03009de3cfa9f" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'weights', 'x', 'y'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0300dcf3d9bf1023184ca5f87f3dac1d9eab49" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'weights', 'x'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c993c22f121950bcb98dc3b0870bc09a56df006d" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'where', 'x', 'y1', 'y2'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2cd7c9c145a2e7c2c504a3f3f87010284d69e5" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'where', 'x1', 'x2', 'y'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096828e44374dca0342dae4561d36969690aa13a" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'x', 'xerr', 'y', 'yerr'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d485c418757878303925841133c0fafad28ee934" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'x', 'y'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be04a5fdb60662533148f9d6db3067d6e640c2ee" translate="yes" xml:space="preserve">
          <source>All arguments with the following names: 'x'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd1e9c43e2fdd32cdaa07915b07d559d6670a6d" translate="yes" xml:space="preserve">
          <source>All bins that has count less than cmin will not be displayed and these count values in the return value count histogram will also be set to nan upon return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0838fa527d02c9c01d06565dfe0d2c5d5291ea" translate="yes" xml:space="preserve">
          <source>All bins that has count more than cmax will not be displayed (set to none before passing to imshow) and these count values in the return value count histogram will also be set to nan upon return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b80c735c3f0e13b7269bd87150956075d00b596" translate="yes" xml:space="preserve">
          <source>All built-in colormaps can be reversed by appending &lt;code&gt;_r&lt;/code&gt;: For instance, &lt;code&gt;gray_r&lt;/code&gt; is the reverse of &lt;code&gt;gray&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38c944257b6aa55d6ace08b5084d57646225079" translate="yes" xml:space="preserve">
          <source>All but the first of these are stripped from the input kw set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7a0f2018eee680f412af1df03ac77a63a47767" translate="yes" xml:space="preserve">
          <source>All but the last (righthand-most) bin is half-open. In other words, if &lt;code&gt;bins&lt;/code&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b3cc21328472dc4407bc9e53c68634a03bcacd" translate="yes" xml:space="preserve">
          <source>All dimensions are fractions of the figure width or height. Defaults are given by &lt;code&gt;&lt;a href=&quot;https://matplotlib.org/3.1.1/tutorials/introductory/customizing.html#matplotlib-rcparams&quot;&gt;rcParams[&quot;figure.subplot.[name]&quot;]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6723b0331aa2214bf57625da1c003bf228ed2113" translate="yes" xml:space="preserve">
          <source>All extra keywords arguments are passed to the created axes. If &lt;em&gt;axes_class&lt;/em&gt; is given, the new axes will be created as an instance of the given class. Otherwise, the same class of the main axes will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f396aaa2f66f22bed2aef065671d9f0e2a8690" translate="yes" xml:space="preserve">
          <source>All forms above set the xmargin, ymargin and zmargin parameters. All keyword parameters are optional. A single positional argument specifies xmargin, ymargin and zmargin. Passing both positional and keyword arguments for xmargin, ymargin, and/or zmargin is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb68f5ea248836059c30042a7b8afa0c3c129bc2" translate="yes" xml:space="preserve">
          <source>All indexable objects are supported. This could e.g. be a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;pandas.DataFame&lt;/code&gt; or a structured numpy array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1dd082a81f19ae5ada79a7886b39fc18e18a8b9" translate="yes" xml:space="preserve">
          <source>All input arguments that are not passed unchanged are returned as ndarrays after removing the points or rows corresponding to masks in any of the arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830a1f4d18df565d80f2b4ab6295423be5c85bcc" translate="yes" xml:space="preserve">
          <source>All keyword arguments are passed through to the &lt;a href=&quot;_as_gen/matplotlib.patches.pathpatch#matplotlib.patches.PathPatch&quot;&gt;&lt;code&gt;PathPatch&lt;/code&gt;&lt;/a&gt; constructor. The properties which cannot be overridden are &quot;path&quot;, &quot;clip_box&quot; &quot;transform&quot; and &quot;clip_path&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c462a500587592ac098ed0123618debcf744954" translate="yes" xml:space="preserve">
          <source>All keyword arguments in savefig_kwargs are passed on to the &lt;code&gt;savefig&lt;/code&gt; command that saves the figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a56c481c29f037b60c845d4dd90a7351b1c92d6" translate="yes" xml:space="preserve">
          <source>All non-affine transformations should be subclasses of this class. New affine transformations should be subclasses of &lt;a href=&quot;#matplotlib.transforms.Affine2D&quot;&gt;&lt;code&gt;Affine2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10e07c3f52e69d8a4382d1fdc764a2ca9896f0a" translate="yes" xml:space="preserve">
          <source>All of the functions registered to receive callbacks on &lt;em&gt;s&lt;/em&gt; will be called with &lt;code&gt;*args&lt;/code&gt; and &lt;code&gt;**kwargs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186fb58a1c88784180778d523f8e81deb86162e2" translate="yes" xml:space="preserve">
          <source>All other arguments are passed on to &lt;a href=&quot;matplotlib.axes.axes.scatter#matplotlib.axes.Axes.scatter&quot;&gt;&lt;code&gt;scatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebae7a859be161375cb26ac20416f3a739d3c26" translate="yes" xml:space="preserve">
          <source>All other arguments are passed on to &lt;a href=&quot;mpl_toolkits.mplot3d.art3d.poly3dcollection#mpl_toolkits.mplot3d.art3d.Poly3DCollection&quot;&gt;&lt;code&gt;Poly3DCollection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38628579cb69dc37dc3df348731851f67f9cf8af" translate="yes" xml:space="preserve">
          <source>All other keyword arguments are passed on to &lt;a href=&quot;../collections_api#matplotlib.collections.PolyCollection&quot;&gt;&lt;code&gt;PolyCollection&lt;/code&gt;&lt;/a&gt;. They control the &lt;a href=&quot;matplotlib.patches.polygon#matplotlib.patches.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a12a47210328b66d3e3423e22dc1b00f525536" translate="yes" xml:space="preserve">
          <source>All other keyword arguments are passed on to &lt;a href=&quot;../collections_api#matplotlib.collections.PolyCollection&quot;&gt;&lt;code&gt;PolyCollection&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f786069f298e0827f8f6d138c8e70f748c8817cc" translate="yes" xml:space="preserve">
          <source>All other keyword arguments are passed on to the plot command for the markers. For example, this code makes big red squares with thick green edges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c1697e66d99d07880b37212408df65b72767c1" translate="yes" xml:space="preserve">
          <source>All other keyword arguments are passed to &lt;a href=&quot;matplotlib.axes.axes.fill_between#matplotlib.axes.Axes.fill_between&quot;&gt;&lt;code&gt;Axes.fill_between()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bad16b388f84dfa533bc99f2ca4fc5372003e9" translate="yes" xml:space="preserve">
          <source>All other keyword arguments are passed to &lt;code&gt;Axes.fill_between()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf9ee6a47d5472a750114e67e27646da23ba37c" translate="yes" xml:space="preserve">
          <source>All other parameters are passed on to &lt;a href=&quot;#matplotlib.table.Cell&quot;&gt;&lt;code&gt;Cell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8869340131ac2e017c1fdf39424b55cb01ee9fa3" translate="yes" xml:space="preserve">
          <source>All other parameters are passed on to &lt;a href=&quot;../text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df69ba2e914998381cce9a478b19481c418b5a23" translate="yes" xml:space="preserve">
          <source>All other parameters are passed to &lt;a href=&quot;matplotlib.gridspec.gridspecfromsubplotspec#matplotlib.gridspec.GridSpecFromSubplotSpec&quot;&gt;&lt;code&gt;GridSpecFromSubplotSpec&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01dfa93d6e22299531e996a3d497c0ec51683b77" translate="yes" xml:space="preserve">
          <source>All parameters must be sequences or scalars; if scalars, they will be converted to sequences. The property of the ith line segment is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b98e72030fa4eba7252ceabdc429bcec662719" translate="yes" xml:space="preserve">
          <source>All parameters supported by &lt;a href=&quot;matplotlib.axes.axes.plot#matplotlib.axes.Axes.plot&quot;&gt;&lt;code&gt;plot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a814c6101aca5ca59eb3d79f9af3064d906166fe" translate="yes" xml:space="preserve">
          <source>All parameters supported by &lt;a href=&quot;matplotlib.pyplot.plot#matplotlib.pyplot.plot&quot;&gt;&lt;code&gt;plot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6765065aa7a27d64d7523d3c7b1361cd1066242b" translate="yes" xml:space="preserve">
          <source>All positional and all keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8cfe9eadea1c0282791af602b774788b7f383f" translate="yes" xml:space="preserve">
          <source>All possible markers are defined here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf5da8d61ef7fecac0be0e08c98c68befd14ead" translate="yes" xml:space="preserve">
          <source>All properties in a collection must be sequences or scalars; if scalars, they will be converted to sequences. The property of the ith element of the collection is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972dd7d3b4a5aca7b445fe8ea0adcf3d70a3ddb0" translate="yes" xml:space="preserve">
          <source>All the Matplotlib date converters, tickers and formatters are timezone aware. If no explicit timezone is provided, the rcParam &lt;code&gt;timezone&lt;/code&gt; is assumed. If you want to use a custom time zone, pass a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;datetime.tzinfo&lt;/code&gt;&lt;/a&gt; instance with the tz keyword argument to &lt;a href=&quot;#matplotlib.dates.num2date&quot;&gt;&lt;code&gt;num2date()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;_as_gen/matplotlib.pyplot.plot_date#matplotlib.pyplot.plot_date&quot;&gt;&lt;code&gt;plot_date()&lt;/code&gt;&lt;/a&gt;, and any custom date tickers or locators you create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8b9e61eb3648d7280d4f02fe4b3ea9c468ec7c" translate="yes" xml:space="preserve">
          <source>All values assumed to be in range [0, 1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84eeaa6b2afd8ac7d94aea9a6989dff2c42b3432" translate="yes" xml:space="preserve">
          <source>All values must be in the range [0, 1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792b9dd5c8af35c88c586e556c7cacaf3cd2b6cf" translate="yes" xml:space="preserve">
          <source>All voxels are plotted as 1x1x1 cubes on the axis, with filled[0,0,0] placed with its lower corner at the origin. Occluded faces are not plotted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52679cf0ca7b430bfd36ce9e3767cbc46db3f7c9" translate="yes" xml:space="preserve">
          <source>Allowed kwargs are &lt;em&gt;color&lt;/em&gt; and &lt;em&gt;size&lt;/em&gt;. E.g. it may be useful to set the color of the markers if &lt;em&gt;prop=&quot;sizes&quot;&lt;/em&gt; is used; similarly to set the size of the markers if &lt;em&gt;prop=&quot;colors&quot;&lt;/em&gt; is used. Any further parameters are passed onto the &lt;a href=&quot;_as_gen/matplotlib.lines.line2d#matplotlib.lines.Line2D&quot;&gt;&lt;code&gt;Line2D&lt;/code&gt;&lt;/a&gt; instance. This may be useful to e.g. specify a different &lt;em&gt;markeredgecolor&lt;/em&gt; or &lt;em&gt;alpha&lt;/em&gt; for the legend handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c339d5e24342a50e45a23669e229e5834eac4c5b" translate="yes" xml:space="preserve">
          <source>Alpha values of the arrows and labels Defaults to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b865e0b782b7a8ad1c074cbb9fc24d6c9a6ba480" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;#matplotlib.textpath.TextPath&quot;&gt;&lt;code&gt;TextPath&lt;/code&gt;&lt;/a&gt; for a more direct way to create a path from a text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f213c5d8ba2aeea0c279eec57e34dd123db6dcd" translate="yes" xml:space="preserve">
          <source>Also see &lt;a href=&quot;https://matplotlib.org/3.1.1/gallery/text_labels_and_annotations/demo_text_path.html&quot;&gt;Demo Text Path&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b68254a28a884350037e507c2425a3ffc81ff30" translate="yes" xml:space="preserve">
          <source>Also see the &lt;a href=&quot;https://matplotlib.org/3.1.1/gallery/lines_bars_and_markers/scatter_with_legend.html#automatedlegendcreation&quot;&gt;Automated legend creation&lt;/a&gt; example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2363f7a5886076f79c463e08333dc7c4684e5e99" translate="yes" xml:space="preserve">
          <source>Also, because of how Axes3D objects are drawn very differently from regular 2D axes, some of these settings may have ambiguous meaning. For simplicity, the 'z' axis will accept settings as if it was like the 'y' axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20016d2e439386a1b4ea75edbbb81e8395d4967c" translate="yes" xml:space="preserve">
          <source>Also, the keyword argument &quot;depthshade&quot; is available to indicate whether or not to shade the patches in order to give the appearance of depth (default is &lt;em&gt;True&lt;/em&gt;). This is typically desired in scatter plots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772789e0980a0b38982e568b87af90df784d3e14" translate="yes" xml:space="preserve">
          <source>Alternatively a dash tuple of the following form can be provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f0e413f8edd559354119368e9e9b8947646ca3" translate="yes" xml:space="preserve">
          <source>Alternatively attributes can be provided as keywords, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6717bd981e093b01d5c081efb7c3381b0b1f199" translate="yes" xml:space="preserve">
          <source>Alternatively if &lt;em&gt;path&lt;/em&gt; is provided, an arrow is drawn along this path and &lt;em&gt;patchA&lt;/em&gt;, &lt;em&gt;patchB&lt;/em&gt;, &lt;em&gt;shrinkA&lt;/em&gt;, and &lt;em&gt;shrinkB&lt;/em&gt; are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc5f47b01594a399e8774d1ca6afcf5ec86164e" translate="yes" xml:space="preserve">
          <source>Alternatively they can be set to any valid &lt;a href=&quot;../transformations#matplotlib.transforms.Transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9aef134acb718899a7cd6e8ec12b665a17c0e9" translate="yes" xml:space="preserve">
          <source>Alternatively, a (# of dimensions,) vector can be passed in and treated as a single point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abb1e91c7f9661cd6f709bc03b9382c85fbb037" translate="yes" xml:space="preserve">
          <source>Alternatively, a font may be specified using an absolute path to a .ttf file, by using the &lt;em&gt;fname&lt;/em&gt; kwarg.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec86c3dccb597358007fd0fea8d04ec5131039f" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.projections.polar.InvertedPolarTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.projections.polar.InvertedPolarTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516ad50a0acd06ad055ebf74f24ffef1b3c91d78" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.projections.polar.PolarAxes.InvertedPolarTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.projections.polar.PolarAxes.InvertedPolarTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02245034bbefa0643e0f934d1a1570a47fa3d464" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.projections.polar.PolarAxes.PolarTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.projections.polar.PolarAxes.PolarTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9bc4d9bc1aeab5b2e48663b97799237fb6e361" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.projections.polar.PolarTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.projections.polar.PolarTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a737c4557e636c6ffe57103c92c5da0410b9710" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.FuncTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.FuncTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7567615d3b31a19e4df676916d01f9d194bc32b1" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.InvertedLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.InvertedLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a28d982f2ec6c936f1dd4b16e53c90e4b78e0b" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.InvertedLogTransformBase.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.InvertedLogTransformBase.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af1b972fcbbbaf972b04392c132d5d8d9730886" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.InvertedSymmetricalLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.InvertedSymmetricalLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff52bfcab692b300f8c01605e79e9cbfadc38197" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.LogScale.InvertedLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.LogScale.InvertedLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfed84a5eba38388e2444b1d1dc9f3de67bb59bf" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.LogScale.LogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.LogScale.LogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03fc2519343e6a8e127ca417dc691d92bf6585b" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.LogScale.LogTransformBase.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.LogScale.LogTransformBase.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015c6aee5506b762306dfe251508b74560f6ce95" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.LogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.LogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73429d7e25e82a2ecf75fc22be599404c4be7272" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.LogTransformBase.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.LogTransformBase.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bbd8813039a923c4332d2d2b1cbf3a77be1fb6" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.SymmetricalLogScale.InvertedSymmetricalLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.SymmetricalLogScale.InvertedSymmetricalLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7bd4ff683759b04169540ed40f2f1f8dcea21f" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.SymmetricalLogScale.SymmetricalLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.SymmetricalLogScale.SymmetricalLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b758d4531b46ef263e61cf549dee0c3c41ec0cb" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.scale.SymmetricalLogTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.scale.SymmetricalLogTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebf08684ecee1ca2e9578824c298e458a353c1b" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.transforms.Affine2DBase.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.transforms.Affine2DBase.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51db9852d4cc5d6210b7facac44b63f5e1e6a33f" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.transforms.BlendedGenericTransform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.transforms.BlendedGenericTransform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0054169fabddbfaa344a7ad3e7b60bd3cb7e8989" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;a href=&quot;#matplotlib.transforms.Transform.input_dims&quot;&gt;&lt;code&gt;input_dims&lt;/code&gt;&lt;/a&gt; and returns a numpy array of length &lt;a href=&quot;#matplotlib.transforms.Transform.output_dims&quot;&gt;&lt;code&gt;output_dims&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e3d2ca1c2739355f898be747d6ac699bc0bacf" translate="yes" xml:space="preserve">
          <source>Alternatively, accepts a numpy array of length &lt;code&gt;input_dims&lt;/code&gt; and returns a numpy array of length &lt;code&gt;output_dims&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d49c052103d9b6f24a25c85d311d3c097cb3f4" translate="yes" xml:space="preserve">
          <source>Alternatively, arbitrary angles may be specified explicitly as an array of values in degrees, counter-clockwise from the horizontal axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7333d6df826a640d4bbf00b1d9c1e5ecc204036" translate="yes" xml:space="preserve">
          <source>Alternatively, if your data is already a 2d array, you can pass it directly to &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;. A separate data set will be drawn for every column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6bd3bcc3a0cfbdfbcede6508eb9e751b224234" translate="yes" xml:space="preserve">
          <source>Alternatively, the attributes can be provided as keywords, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf5ae09b3138b7364ff58ddf199422a76f75e31" translate="yes" xml:space="preserve">
          <source>Alternatively, this can be a dictionary matching contour levels with arbitrary strings to use for each contour level (i.e., fmt[level]=string), or it can be any callable, such as a &lt;a href=&quot;../ticker_api#matplotlib.ticker.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; instance, that returns a string when called with a numeric contour level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a580b1613f20dff37f93a4c6270bc71747d6c12" translate="yes" xml:space="preserve">
          <source>Alternatively, this can be a dictionary matching contour levels with arbitrary strings to use for each contour level (i.e., fmt[level]=string), or it can be any callable, such as a &lt;a href=&quot;ticker_api#matplotlib.ticker.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; instance, that returns a string when called with a numeric contour level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8a1a4707842d36cd21de366240d7ce39029a1e" translate="yes" xml:space="preserve">
          <source>Always return the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38b10008f7da2058772593f26ea0af398c2bbc7" translate="yes" xml:space="preserve">
          <source>Always returns 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ede9b3b88c4a26511a5f06ba6d13189fe13157" translate="yes" xml:space="preserve">
          <source>Amount of padding around the figure when bbox_inches is 'tight'. If None, use savefig.pad_inches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d903c702ce899acdbbe921b5abde3d43e10287" translate="yes" xml:space="preserve">
          <source>An (M, N) array of the height values used to generate a shaded map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a883298d086a2873078802327917bbd75ba3f282" translate="yes" xml:space="preserve">
          <source>An (M, N, 3) RGB array, assumed to be in the range of 0 to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c69e8cbcdf2ef42a4076d628a8e7dc6ba13d53" translate="yes" xml:space="preserve">
          <source>An (m, n, 3) array of floats ranging between 0-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d902342bf93b018e89c76c6f5c220060c4c0a70e" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#matplotlib.text.Annotation&quot;&gt;&lt;code&gt;Annotation&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;#matplotlib.text.Text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; that can refer to a specific position &lt;em&gt;xy&lt;/em&gt;. Optionally an arrow pointing from the text to &lt;em&gt;xy&lt;/em&gt; can be drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a5b0da07f5e4a007e7d65b4d4574e63b301497" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt;: &lt;em&gt;xy&lt;/em&gt; is interpreted as a fraction of the artists &lt;a href=&quot;../transformations#matplotlib.transforms.Bbox&quot;&gt;&lt;code&gt;Bbox&lt;/code&gt;&lt;/a&gt;. E.g. &lt;em&gt;(0, 0)&lt;/em&gt; would be the lower left corner of the bounding box and &lt;em&gt;(0.5, 1)&lt;/em&gt; would be the center top of the bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd6e58d1dffdd26a95c649502bb87ff4d423e46" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;Artist&lt;/code&gt;&lt;/a&gt;: &lt;em&gt;xy&lt;/em&gt; is interpreted as a fraction of the artists &lt;a href=&quot;transformations#matplotlib.transforms.Bbox&quot;&gt;&lt;code&gt;Bbox&lt;/code&gt;&lt;/a&gt;. E.g. &lt;em&gt;(0, 0)&lt;/em&gt; would be the lower left corner of the bounding box and &lt;em&gt;(0.5, 1)&lt;/em&gt; would be the center top of the bounding box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437e89e1c28855b67d85af85e8cfaa5d73cea08a" translate="yes" xml:space="preserve">
          <source>An Axis class for the 3D plots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f76e5ac6d31bc516f682be7f05616b2f3f7087" translate="yes" xml:space="preserve">
          <source>An HTML5 video tag with the animation embedded as base64 encoded h264 video. If the &lt;em&gt;embed_limit&lt;/em&gt; is exceeded, this returns the string &quot;Video too large to embed.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f181f4952d3558fb76e23bee4559369de3e90d" translate="yes" xml:space="preserve">
          <source>An MxNx1 array of floats ranging from 0 to 1 (grayscale image).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78acb7d91e9b2b8e5728ba02635acb37df825c27" translate="yes" xml:space="preserve">
          <source>An MxNx3 RGB array of floats ranging from 0 to 1 (color image).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b288e6ba752d14920e4e0aa6435c1ccfbe9921" translate="yes" xml:space="preserve">
          <source>An MxNx3 RGB array representing the combined images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57502ad54aa308e8e9c44689d0abdb93890c6705" translate="yes" xml:space="preserve">
          <source>An MxNx4 array of floats ranging between 0-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232fa64da6c060accb78c9605e09d4021f76ce7c" translate="yes" xml:space="preserve">
          <source>An abstract base class for a system of fonts to use for mathtext.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab022953240b1d4110967fdf16411fb7cbf1bcc" translate="yes" xml:space="preserve">
          <source>An abstract base class for handling Unicode fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b42bc5ebb33d50ab7fa8ad373f7f924f7cadbd" translate="yes" xml:space="preserve">
          <source>An abstract base class that provides color, line styles, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e611a918738c3f093a39c46e51feaf7f752a943" translate="yes" xml:space="preserve">
          <source>An abstract base class that provides color, line styles, etc...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0c7bd5f11e9b2b91773e63a4d1c075009c123a" translate="yes" xml:space="preserve">
          <source>An abstract base class to handle drawing/rendering operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d071da5941cd5111542edab161d8efa3199669" translate="yes" xml:space="preserve">
          <source>An affine transform applied to the marker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43ac5c3767bb12d1f355972fd5d2b674dad5b46" translate="yes" xml:space="preserve">
          <source>An affine transform applied to the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d60b0bd63ae424f8ec39956c8cd06693735c70" translate="yes" xml:space="preserve">
          <source>An affine transform to apply to the points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3fe801c5335713bd9306d19245de2eb80a29ac" translate="yes" xml:space="preserve">
          <source>An agg &lt;a href=&quot;http://antigrain.com/&quot;&gt;http://antigrain.com/&lt;/a&gt; backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bbf2f4b4175e46e2c97f99f1ce04d9a0d3f5a03" translate="yes" xml:space="preserve">
          <source>An alias to the keyword argument &lt;em&gt;markeredgewidth&lt;/em&gt; (a.k.a. &lt;em&gt;mew&lt;/em&gt;). This setting is a more sensible name for the property that controls the thickness of the error bar cap in points. For backwards compatibility, if &lt;em&gt;mew&lt;/em&gt; or &lt;em&gt;markeredgewidth&lt;/em&gt; are given, then they will over-ride &lt;em&gt;capthick&lt;/em&gt;. This may change in future releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10212367642e47f4a8c7e11d42ca325c4b4d862" translate="yes" xml:space="preserve">
          <source>An alternative implementation with slightly different features. For a detailed discussion on the differences see &lt;a href=&quot;#differences-pcolor-pcolormesh&quot;&gt;Differences between pcolor() and pcolormesh()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73f745d573ae6cfac5e8293db9debd1f7181dda" translate="yes" xml:space="preserve">
          <source>An alternative implementation with slightly different features. For a detailed discussion on the differences see &lt;a href=&quot;matplotlib.pyplot.pcolormesh#differences-pcolor-pcolormesh&quot;&gt;Differences between pcolor() and pcolormesh()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118bc953f36b037d178b5f02139395cb85a46562" translate="yes" xml:space="preserve">
          <source>An anchored container with a fixed size and fillable DrawingArea.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5e5d04372837a544e05d03a0fee1618b81a0f0" translate="yes" xml:space="preserve">
          <source>An anchored container with transformed coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7768a787c9cb32b311c84562382d71a13aad3c0" translate="yes" xml:space="preserve">
          <source>An array of RGBA pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfa431573f6bde114676bc07dfa230d0e4d5d4e" translate="yes" xml:space="preserve">
          <source>An array of colors of length 6 * N bars, to color each face independently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0948b955594fdc9de8bde1aa8b5dd4e47896da1f" translate="yes" xml:space="preserve">
          <source>An array of colors of length 6, to color the faces of the bars similarly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05616bdf9ed848ce4794b6d73a465c0c0a027dd" translate="yes" xml:space="preserve">
          <source>An array of colors of length N bars, to color each bar independently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3239a2a36bf3ef5eeb0f58f6d7dae87db6f6990" translate="yes" xml:space="preserve">
          <source>An array of label locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc2a121b8f7455f3f18e608931cd7f7f7159fc2" translate="yes" xml:space="preserve">
          <source>An array of values w_i weighing each sample (x_i, y_i).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9241c10648d58e76ef3fa19e5d21ab9554599ccf" translate="yes" xml:space="preserve">
          <source>An array of weights, of the same shape as &lt;em&gt;x&lt;/em&gt;. Each value in &lt;em&gt;x&lt;/em&gt; only contributes its associated weight towards the bin count (instead of 1). If &lt;em&gt;normed&lt;/em&gt; or &lt;em&gt;density&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;, the weights are normalized, so that the integral of the density over the range remains 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a4809aa427d8ecb6df43a5859f1d49911c23d9" translate="yes" xml:space="preserve">
          <source>An array or sequence whose first dimension (or length) is compatible with &lt;code&gt;x&lt;/code&gt;. This overrides the medians computed by matplotlib for each element of &lt;code&gt;usermedians&lt;/code&gt; that is not &lt;a href=&quot;https://docs.python.org/3/library/constants.html#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;. When an element of &lt;code&gt;usermedians&lt;/code&gt; is None, the median will be computed by matplotlib as normal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54304a8c96c585c9102b033c29793c5d4e2289e3" translate="yes" xml:space="preserve">
          <source>An arrow patch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76544cf7e3b22fc8fe3dd364d3088b78d9e20f24" translate="yes" xml:space="preserve">
          <source>An arrow with a bar(|) at both ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8ed610e720d6bd62024150b7c108c6be36e561" translate="yes" xml:space="preserve">
          <source>An arrow with a bracket([) at its end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6577f3d049cf0dd7ab82ee2d53a9ba9f6ddadf8" translate="yes" xml:space="preserve">
          <source>An arrow with a bracket(]) at both ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc3042f7b6001946d783d8db65d18a873504d87" translate="yes" xml:space="preserve">
          <source>An arrow with a bracket(]) at its end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5660a41a150edd3c74bdc8d67c6b8faaef3ae1fe" translate="yes" xml:space="preserve">
          <source>An arrow with a head at its begin point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29c2fc22118773dd9171d276ae0cc7de66cf3e2" translate="yes" xml:space="preserve">
          <source>An arrow with a head at its end point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d8cb1693e7d9f3b6f017f7825a9c35ce92b5af" translate="yes" xml:space="preserve">
          <source>An arrow with filled triangle head at the begin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9857ed0421cdcd56378c88e1fb42a3d61a729e" translate="yes" xml:space="preserve">
          <source>An arrow with filled triangle head at the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c98c0f08e50e4f82ad457809e428b3b3850302" translate="yes" xml:space="preserve">
          <source>An arrow with filled triangle heads at both ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1199a371118c939202e37643a5515f8cba59458" translate="yes" xml:space="preserve">
          <source>An arrow with heads both at the begin and the end point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c95e401079e2314033ea3d2aeae63f11318b6cd" translate="yes" xml:space="preserve">
          <source>An artist which draws axis (a line along which the n-th axes coord is constant) line, ticks, ticklabels, and axis label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e6ed9f4f2fe536100726312a0adcc3f89179a5" translate="yes" xml:space="preserve">
          <source>An artist-specific dictionary of details of the event context, such as which points are contained in the pick radius. See the individual Artist subclasses for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e63869c2985cf4de78fdae29b737c3c43cab0da" translate="yes" xml:space="preserve">
          <source>An axis should be registered with its corresponding spine from the Axes instance. This allows the spine to clear any axis properties when needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbcae8b6b03a2253be687702a2f6772a0c866713" translate="yes" xml:space="preserve">
          <source>An element identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788cf6acaeb2ee6f31a360efd40c566454e75e8c" translate="yes" xml:space="preserve">
          <source>An elliptical arc, i.e.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e7e0bfa954cd3b111579a79f37f3ae12a04a7a" translate="yes" xml:space="preserve">
          <source>An elliptical arc, i.e. a segment of an ellipse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3283747e3dee20c118a7f174b90251ccd6fa8aa7" translate="yes" xml:space="preserve">
          <source>An enumeration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a812cf19d913d2a4f6814f419651e735bb0c0643" translate="yes" xml:space="preserve">
          <source>An evenly spaced grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcc68f3bb5e388edd9958db98b877c7deb0853f" translate="yes" xml:space="preserve">
          <source>An event that has a screen location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa256abd95d3e300371d532bdb8aad3b93312f72" translate="yes" xml:space="preserve">
          <source>An event triggered by a canvas resize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb75b84438c9d079ce60aad9193fe90c6d31949" translate="yes" xml:space="preserve">
          <source>An event triggered by a draw operation on the canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af744a34941ceb1866974057f7433a7442e0b32" translate="yes" xml:space="preserve">
          <source>An event triggered by a figure being closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9528bd31f699216fdefa5059238537792baeb42e" translate="yes" xml:space="preserve">
          <source>An exact match at the head of the list returns 0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6485a5b85b12c5c7fe6739c4d493be1007a810" translate="yes" xml:space="preserve">
          <source>An exact match returns 0.0, otherwise 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92de52513362c5089ff0c2e1a7eddfaf9fd4f435" translate="yes" xml:space="preserve">
          <source>An exact match returns 0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cd2dc57842557931fd3fa600105fc1e040a026" translate="yes" xml:space="preserve">
          <source>An exising &lt;a href=&quot;../contour_api#matplotlib.contour.QuadContourSet&quot;&gt;&lt;code&gt;QuadContourSet&lt;/code&gt;&lt;/a&gt; does not get notified if properties of its colormap are changed. Therefore, an explicit call &lt;code&gt;QuadContourSet.changed()&lt;/code&gt; is needed after modifying the colormap. The explicit call can be left out, if a colorbar is assigned to the &lt;a href=&quot;../contour_api#matplotlib.contour.QuadContourSet&quot;&gt;&lt;code&gt;QuadContourSet&lt;/code&gt;&lt;/a&gt; because it internally calls &lt;code&gt;QuadContourSet.changed()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8d1a5226ddb8b2ded508c8b4899ffb6abf9c68" translate="yes" xml:space="preserve">
          <source>An experimental support for curvilinear grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40db52a0bf29cfe5cc5992fae69cc348c961397f" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;#matplotlib.RcParams&quot;&gt;&lt;code&gt;RcParams&lt;/code&gt;&lt;/a&gt; for handling default matplotlib values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c40fcf8175df79123f92664d7fc432a6e129dc" translate="yes" xml:space="preserve">
          <source>An instance of Normalize to map values to colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ea12a3ee33530c93f41b4ae955c45b3196a31c" translate="yes" xml:space="preserve">
          <source>An instance of a concrete subclass of this class can be given as the &lt;code&gt;writer&lt;/code&gt; argument of &lt;a href=&quot;matplotlib.animation.animation#matplotlib.animation.Animation.save&quot;&gt;&lt;code&gt;Animation.save()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10140a3f7e9ef8044005da4be6c235eadd8b1b32" translate="yes" xml:space="preserve">
          <source>An instance of a subclass of &lt;a href=&quot;backend_bases_api#matplotlib.backend_bases.RendererBase&quot;&gt;&lt;code&gt;RendererBase&lt;/code&gt;&lt;/a&gt; that will be used for the vector drawing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3502f6b80f3b5fb3c42f0b67f26e1147419586" translate="yes" xml:space="preserve">
          <source>An instance of any arrow style class is a callable object, whose call signature is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a14311adf0a09ba4f25aaf2825d0cd2a22975d7" translate="yes" xml:space="preserve">
          <source>An instance of any axisline style class is an callable object, whose call signature is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdf943d8ec631dd00d7e662421ce7dbaea963b0" translate="yes" xml:space="preserve">
          <source>An instance of any boxstyle class is an callable object, whose call signature is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab68e9cd5e9dbdb4999cd3795c0486118216519" translate="yes" xml:space="preserve">
          <source>An instance of any connection style class is an callable object, whose call signature is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caf9c41c03370b1df2a0a21d6570e2af4e9fbb2" translate="yes" xml:space="preserve">
          <source>An instance of this class must be returned by &lt;a href=&quot;#matplotlib.units.ConversionInterface.axisinfo&quot;&gt;&lt;code&gt;ConversionInterface.axisinfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c7ff0081c40dbcb287c9fbd210419c0a58a470" translate="yes" xml:space="preserve">
          <source>An instance whose size is a &lt;em&gt;fraction&lt;/em&gt; of the &lt;em&gt;ref_size&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a6dd37f5dee1234d917a4cbfcc6926c10cd9e2" translate="yes" xml:space="preserve">
          <source>An mpl color or sequence of colors will set the edge color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d506a7cf20f32f8bc96ae2af8c861873324c5b6" translate="yes" xml:space="preserve">
          <source>An object containing the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2da6e2197d76bcb5be285fc3f75ee87161f26af" translate="yes" xml:space="preserve">
          <source>An object for positioning an inset axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e748406dc2dce0873ace3ff358acbfd2fb048b2e" translate="yes" xml:space="preserve">
          <source>An object mapping strings to integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0494feb1a742d1f8fbc495871449f951c0cf2968" translate="yes" xml:space="preserve">
          <source>An object with labelled data. If given, provide the label names to plot in &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;, e.g.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ba0b5f24c49b33a482500644bf3409384357c8" translate="yes" xml:space="preserve">
          <source>An object with labelled data. If given, provide the label names to plot in &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ebeea0103c384c2ae3c9532eaccd83b4a9bf26" translate="yes" xml:space="preserve">
          <source>An offset box placed according to the legend location loc. AnchoredOffsetbox has a single child. When multiple children is needed, use other OffsetBox class to enclose them. By default, the offset box is anchored against its parent axes. You may explicitly specify the bbox_to_anchor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e56797e052736463370b2cb8b9e68707200f72" translate="yes" xml:space="preserve">
          <source>An offset in degrees to apply from the specified &lt;code&gt;loc&lt;/code&gt;. &lt;strong&gt;Note:&lt;/strong&gt; this offset is &lt;em&gt;always&lt;/em&gt; applied counter-clockwise regardless of the direction setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd57597300057567b851a62cbff16a42b4ab74a6" translate="yes" xml:space="preserve">
          <source>An optional argument can be used to specify an alternative _fillcolor, as needed by RendererPdf.draw_markers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f34b4cc92911e2e6c89a885cec4aa021068a17" translate="yes" xml:space="preserve">
          <source>An optional inset axes to draw connecting lines to. Two lines are drawn connecting the indicator box to the inset axes on corners chosen so as to not overlap with the indicator box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d013cf934e8f12dcc9eb7ce3b4f36a8f12e3ba" translate="yes" xml:space="preserve">
          <source>An optional parameter &lt;code&gt;clip&lt;/code&gt; determines whether the added artist should be clipped by the figure patch. Default is &lt;em&gt;False&lt;/em&gt;, i.e. no clipping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc42f3f6ec75391fe551771d021b2c899e19cf1b" translate="yes" xml:space="preserve">
          <source>An unstructured triangular grid consisting of npoints points and ntri triangles. The triangles can either be specified by the user or automatically generated using a Delaunay triangulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04f9541cbe9b79bb7ef07cb31750f2f4d47891a" translate="yes" xml:space="preserve">
          <source>Anatomy of a figure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c779f3cfd618124f4eede01fe61b3c11ef4789" translate="yes" xml:space="preserve">
          <source>Anchored Artists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc9b2e661987bae34210eb026d36ad55dad6f9e" translate="yes" xml:space="preserve">
          <source>Anchored Box01</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8f59af2566517d75ce729f0a9d4aaaaaef4a67" translate="yes" xml:space="preserve">
          <source>Anchored Box02</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931578d4d99042e01f77c319ed8111df93fc867b" translate="yes" xml:space="preserve">
          <source>Anchored Box03</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ba8f169eea5f7680c77dd6051116e23e805505" translate="yes" xml:space="preserve">
          <source>Anchored Box04</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382c4e3e831e0a6b308dcf8dcab5ab9c00deeab2" translate="yes" xml:space="preserve">
          <source>AnchoredOffsetbox with Text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6285acbdcdfb0e7e714763555b074311d6a35eb9" translate="yes" xml:space="preserve">
          <source>And optionally, if you need to use a FreeType hinting style:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3ac3c097a469a8df029466bc00d3211ea926be" translate="yes" xml:space="preserve">
          <source>And optionally:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd70473fb3de634b409d4acaf49ffc1f90aae1f" translate="yes" xml:space="preserve">
          <source>Angle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9620aea26a48850ad9a2267d7dd255fd3ebe01b" translate="yes" xml:space="preserve">
          <source>Angle between the bracket and the line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce7e586c555120b8d755aeef3627ad721e30022" translate="yes" xml:space="preserve">
          <source>Angle of rotation of the diagram in degrees. The interpretation of the &lt;em&gt;orientations&lt;/em&gt; argument will be rotated accordingly (e.g., if &lt;em&gt;rotation&lt;/em&gt; == 90, an &lt;em&gt;orientations&lt;/em&gt; entry of 1 means to/from the left). &lt;em&gt;rotation&lt;/em&gt; is ignored if this diagram is connected to an existing one (using &lt;em&gt;prior&lt;/em&gt; and &lt;em&gt;connect&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62590eade7de862fb7e454743fb40fcebdffc5e2" translate="yes" xml:space="preserve">
          <source>Angle3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba91f008509de7e2e534372817d649fbbb55698" translate="yes" xml:space="preserve">
          <source>Animated 3D random walk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63e734ea58c3c001bb1ac24e780cb1f06dd2a73" translate="yes" xml:space="preserve">
          <source>Animated histogram</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690c7d8d7fdd41267f7a560fb9767770565606cf" translate="yes" xml:space="preserve">
          <source>Animated image using a precomputed list of images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f948c2aba83ac3d676832d7f075212bee38da82" translate="yes" xml:space="preserve">
          <source>Animated line plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62afd21e88769f01ba1c9330803baad57564d6e9" translate="yes" xml:space="preserve">
          <source>Animation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29b5aed3368bebd5acb97eabe49db8946ba7a0b" translate="yes" xml:space="preserve">
          <source>Animation Base Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26885a08568a006af5006ea6a99d0d12b2ad9d7d" translate="yes" xml:space="preserve">
          <source>Animation using a fixed set of &lt;code&gt;Artist&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f66b604514f55aa448e2d6e2493954bf43ca97" translate="yes" xml:space="preserve">
          <source>Annotate Explain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f3ef6b28de20a8be13bee634dada7121dfbfc0" translate="yes" xml:space="preserve">
          <source>Annotate Simple Coord01</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b45c919c4d835ec77ce3a6ea4786424176ee7d0" translate="yes" xml:space="preserve">
          <source>Annotate Simple Coord02</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46753aa9596b0c6e48d8fcc68284d6205eda17b" translate="yes" xml:space="preserve">
          <source>Annotate Simple Coord03</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc82b31ff1efa47b6277861b2060028d8b5913e" translate="yes" xml:space="preserve">
          <source>Annotate Simple01</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a16be880329cb1b4a867e0984e054f334de1ebe7" translate="yes" xml:space="preserve">
          <source>Annotate Simple02</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692288ddef2ffec553680ab7583f926678f0841a" translate="yes" xml:space="preserve">
          <source>Annotate Simple03</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e61cdf9b8da0504b502eecacca8d83081c841df" translate="yes" xml:space="preserve">
          <source>Annotate Simple04</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afea579ff906af060844b71685c4175edab76e8" translate="yes" xml:space="preserve">
          <source>Annotate Text Arrow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3907054b50973679263ceb7d7ff90018fddd91" translate="yes" xml:space="preserve">
          <source>Annotate Transform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e00a6fd97e0b338bd0a9b62c9a6efd4d6b7e9b" translate="yes" xml:space="preserve">
          <source>Annotate the point &lt;em&gt;xy&lt;/em&gt; with text &lt;em&gt;text&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3601349e8605f2713fa47483748c1bfafa44ddaf" translate="yes" xml:space="preserve">
          <source>Annotating Plots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d2463871e2c6e897a794b957d7f70013ccdcf5" translate="yes" xml:space="preserve">
          <source>Annotating a plot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0f85a96a51893491dab319b646e35a9822d914" translate="yes" xml:space="preserve">
          <source>Annotation Polar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d387d804b91897480ff9282f49c264b4608cb9" translate="yes" xml:space="preserve">
          <source>Annotation with units</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65702d92634df87e552cdd4c84c7a400b513048" translate="yes" xml:space="preserve">
          <source>Annotation-like class, but with offsetbox instead of Text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dc68d72e7c6f05cb32f3c5f38a50a1624e1e2a" translate="yes" xml:space="preserve">
          <source>Annotations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b332760b111c610a27d3c9258e5b63be125c9b24" translate="yes" xml:space="preserve">
          <source>Another &lt;a href=&quot;#matplotlib.backend_tools.ToolToggleBase&quot;&gt;&lt;code&gt;ToolToggleBase&lt;/code&gt;&lt;/a&gt; derived tool is triggered (from the same &lt;code&gt;ToolManager&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc54b6b2ed4d972042ad0f6cccd001cd87e04a90" translate="yes" xml:space="preserve">
          <source>Another box with round edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a39028fc74b98baa38e214238c2319c4bea28a" translate="yes" xml:space="preserve">
          <source>Another detrend algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4467046b44e8e0b11c46527037236ed9f7710025" translate="yes" xml:space="preserve">
          <source>Another difference is the support of Gouraud shading in &lt;a href=&quot;#matplotlib.axes.Axes.pcolormesh&quot;&gt;&lt;code&gt;pcolormesh&lt;/code&gt;&lt;/a&gt;, which is not available with &lt;a href=&quot;matplotlib.axes.axes.pcolor#matplotlib.axes.Axes.pcolor&quot;&gt;&lt;code&gt;pcolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ecf5a70bafb88d65cc0afc6165e0dd10887d05" translate="yes" xml:space="preserve">
          <source>Another difference is the support of Gouraud shading in &lt;a href=&quot;matplotlib.axes.axes.pcolormesh#matplotlib.axes.Axes.pcolormesh&quot;&gt;&lt;code&gt;pcolormesh&lt;/code&gt;&lt;/a&gt;, which is not available with &lt;a href=&quot;matplotlib.axes.axes.pcolor#matplotlib.axes.Axes.pcolor&quot;&gt;&lt;code&gt;pcolor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eba874df425d9e5830fdfacee4bff5e0e38424c" translate="yes" xml:space="preserve">
          <source>Another window algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420fe2668a0179f4af4f0464451d4f4c3c4d7243" translate="yes" xml:space="preserve">
          <source>Anscombe's Quartet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef7197f876ac2ef1e81bef6e912aa36b4395bd9" translate="yes" xml:space="preserve">
          <source>Any additional keyword arguments are delegated to &lt;a href=&quot;../collections_api#matplotlib.collections.LineCollection&quot;&gt;&lt;code&gt;LineCollection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f6371d3db0aefd207493b804b5805dc654c4b5" translate="yes" xml:space="preserve">
          <source>Any additional keyword arguments are passed onto &lt;a href=&quot;mpl_toolkits.mplot3d.art3d.poly3dcollection#mpl_toolkits.mplot3d.art3d.Poly3DCollection&quot;&gt;&lt;code&gt;Poly3DCollection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd34df22c3355b9d17dc0eb38dbf2800a11d39f" translate="yes" xml:space="preserve">
          <source>Any additional keyword arguments are used to override vector properties taken from &lt;em&gt;Q&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3132bcba97cda6f5b667acc7025d37168a44cfd" translate="yes" xml:space="preserve">
          <source>Any key to &lt;a href=&quot;_as_gen/matplotlib.patches.fancyarrowpatch#matplotlib.patches.FancyArrowPatch&quot;&gt;&lt;code&gt;matplotlib.patches.FancyArrowPatch&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd56c83648aedb8830913f9dde7004e18684e470" translate="yes" xml:space="preserve">
          <source>Any key to &lt;a href=&quot;matplotlib.patches.fancyarrowpatch#matplotlib.patches.FancyArrowPatch&quot;&gt;&lt;code&gt;matplotlib.patches.FancyArrowPatch&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61950950f0964203926ad4c1c7446f218bc8247c" translate="yes" xml:space="preserve">
          <source>Any object gets converted to its &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, except &lt;code&gt;None&lt;/code&gt; which becomes &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90af3d3d0d15bc28b8bedfdc7d5a1bbc5cc1626" translate="yes" xml:space="preserve">
          <source>Any object other than None gets converted to its &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6cfcd67e47b508399b8d66117369321fe8349a" translate="yes" xml:space="preserve">
          <source>Any or all of &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;y&lt;/em&gt;, &lt;em&gt;s&lt;/em&gt;, and &lt;em&gt;c&lt;/em&gt; may be masked arrays, in which case all masks will be combined and only unmasked points will be plotted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b817537889c2c7207927c65b6d60f5332c3ca3" translate="yes" xml:space="preserve">
          <source>Any other keyword arguments are given to &lt;a href=&quot;#matplotlib.legend_handler.HandlerBase&quot;&gt;&lt;code&gt;HandlerBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcded21b064b4644626eec6510d5aade757c2b8f" translate="yes" xml:space="preserve">
          <source>Any other keyword arguments are given to &lt;a href=&quot;#matplotlib.legend_handler.HandlerNpoints&quot;&gt;&lt;code&gt;HandlerNpoints&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71a3d4b0690024dd79c58fea6a5a5a1d5e5eb28" translate="yes" xml:space="preserve">
          <source>Any other keyword arguments are given to &lt;a href=&quot;#matplotlib.legend_handler.HandlerNpointsYoffsets&quot;&gt;&lt;code&gt;HandlerNpointsYoffsets&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d65effa840995ee009ba7352d44b82aaf623b9" translate="yes" xml:space="preserve">
          <source>Any other keyword arguments are passed to &lt;a href=&quot;_as_gen/matplotlib.figure.figure#matplotlib.figure.Figure.savefig&quot;&gt;&lt;code&gt;savefig()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6591890a72ffb5b3d18f3eafb563580b7516ed4b" translate="yes" xml:space="preserve">
          <source>Any subclasses will want to override:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9842a9e96c823a953fe761ede7a1f17eb7f8a2" translate="yes" xml:space="preserve">
          <source>Any transform, to which offset will be applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0610df16a53544daa589a8b98c6729dfb22d0c4" translate="yes" xml:space="preserve">
          <source>Any valid &lt;a href=&quot;matplotlib.lines.line2d#matplotlib.lines.Line2D&quot;&gt;&lt;code&gt;Line2D&lt;/code&gt;&lt;/a&gt; line style spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41def7a0febe741da87c5b79ce78ce27b83f3ae7" translate="yes" xml:space="preserve">
          <source>Appearance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72445b8516a75b4359ff8093088f07d2eb9a5b00" translate="yes" xml:space="preserve">
          <source>Apply a window along a given axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefdc48c63cfcff401ee5dfc579acf7bc6ebb264" translate="yes" xml:space="preserve">
          <source>Apply the given window to the given 1D or 2D array along the given axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853a983f6b8abdb9ecba43da2ceda1641c9d519f" translate="yes" xml:space="preserve">
          <source>Arc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7b3e8cae2d0f3541c9906317ea60e9b0f8a302" translate="yes" xml:space="preserve">
          <source>Arc3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb59d8d4ddf768cc677d5634463e48ff8cee354" translate="yes" xml:space="preserve">
          <source>Arguments can be in any of 5 categories:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4219709df09419bab4eb75579c212272933726c" translate="yes" xml:space="preserve">
          <source>Arguments passed to the &lt;a href=&quot;matplotlib.colors.normalize#matplotlib.colors.Normalize&quot;&gt;&lt;code&gt;Normalize&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0478ca5f4c068ca3ac12f9474f6a15865ce9053" translate="yes" xml:space="preserve">
          <source>Arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70877801eed07043ca2f682555e560c5ec3b973" translate="yes" xml:space="preserve">
          <source>Array of (x, y) points for the triangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264ccbd0020364889af75c6f8a88348e3b43cb49" translate="yes" xml:space="preserve">
          <source>Array of &lt;em&gt;N&lt;/em&gt; (x, y) points for the triangles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1d778af59cde27b90a8df32fa9b8f1f757dc99" translate="yes" xml:space="preserve">
          <source>Array of &lt;em&gt;N&lt;/em&gt; RGBA colors for each point of the triangles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f855c7d5ef9e7541a9955114607007158ae564" translate="yes" xml:space="preserve">
          <source>Array of flow values. By convention, inputs are positive and outputs are negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbf56b13e2a58075cedbdad3cf0111c91f420fc" translate="yes" xml:space="preserve">
          <source>Array of values, defined at grid points, to interpolate between.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d2b6cdb7823661d9053ed8ef7d38ebbfd47f5c" translate="yes" xml:space="preserve">
          <source>Array or sequence containing the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903abe81055b2957e33f1181249502b36db84ed9" translate="yes" xml:space="preserve">
          <source>Array or sequence containing the data Can have any dimensionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27352a61572e7d7ad8fbc271e3098802c3c2886" translate="yes" xml:space="preserve">
          <source>Array or sequence containing the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd22cb334abc9b86d5b8088bcb4a09c35223daf" translate="yes" xml:space="preserve">
          <source>Array or sequence whose first dimension (or length) is compatible with &lt;code&gt;x&lt;/code&gt; and whose second dimension is 2. When the an element of &lt;code&gt;conf_intervals&lt;/code&gt; is not None, the notch locations computed by matplotlib are overridden (provided &lt;code&gt;notch&lt;/code&gt; is &lt;a href=&quot;https://docs.python.org/3/library/constants.html#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;). When an element of &lt;code&gt;conf_intervals&lt;/code&gt; is &lt;a href=&quot;https://docs.python.org/3/library/constants.html#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, the notches are computed by the method specified by the other kwargs (e.g., &lt;code&gt;bootstrap&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216ce02fc166943d468435006b2571e7345444fa" translate="yes" xml:space="preserve">
          <source>Arrays or sequences containing the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="798ef9eaeb2c7ff35ed760ddacbdfd0decea1bf5" translate="yes" xml:space="preserve">
          <source>Arrays or sequences containing the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fa50fdcedc135af9dd2a3d45c96a3c32843295" translate="yes" xml:space="preserve">
          <source>Arrow Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b450a842a8947fe04b7033170209a27de9d936d8" translate="yes" xml:space="preserve">
          <source>Arrow Simple Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ffc43bad653e2c95aac71de7e83752188b3389b" translate="yes" xml:space="preserve">
          <source>Arrow guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac913b1eedd2c78466c3ed1069a33d3e6e15ae5d" translate="yes" xml:space="preserve">
          <source>Arrow length in the x direction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6d2466db9aed8ca992488081b35d26675c6dd4" translate="yes" xml:space="preserve">
          <source>Arrow length in the y direction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7738989411ece73688f47a7feebd3f884c5056" translate="yes" xml:space="preserve">
          <source>Arrow style specification. See &lt;a href=&quot;matplotlib.patches.fancyarrowpatch#matplotlib.patches.FancyArrowPatch&quot;&gt;&lt;code&gt;FancyArrowPatch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3e1a81df87a293437337924c261f3e1ff9e10a" translate="yes" xml:space="preserve">
          <source>Arrow x and y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e6d9eba24e515499b9a463dd3ba4bcf7a27a0e" translate="yes" xml:space="preserve">
          <source>Art3D Utility Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0febe70da6037dfd8254eac26e34ae12b463d4" translate="yes" xml:space="preserve">
          <source>Artist Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191095be079c0ecd96ab7fb3fcdaf1baee0ae5b8" translate="yes" xml:space="preserve">
          <source>Artist customization in box plots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166a6211866717d1d7ab8176fa585bfe039f85af" translate="yes" xml:space="preserve">
          <source>Artist tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3ae38a137c703cff64e8009d3a4159288f7995" translate="yes" xml:space="preserve">
          <source>Artist tutorial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002df96d112b4c6bf9f53b1d6e131bbdd51ff0e4" translate="yes" xml:space="preserve">
          <source>Artist within an artist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89a7d0324958114a6322cff7566a43553e06de9" translate="yes" xml:space="preserve">
          <source>Artists added to the &lt;em&gt;drawing_area&lt;/em&gt; are scaled according to the coordinates of the transformation used. The dimensions of this artist will scale to contain the artists added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f93aee9e82b87bd12ea4e20bb25af9d2e3cf3e" translate="yes" xml:space="preserve">
          <source>Artists added to the &lt;em&gt;drawing_area&lt;/em&gt; will have their coordinates interpreted as pixels. Any transformations set on the artists will be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f677af2146024b688cbb62817f22160247b6d997" translate="yes" xml:space="preserve">
          <source>Artists are excluded either by not being visible or &lt;code&gt;artist.set_in_layout(False)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec7dec6fec07b2b4e90405f9cff23ab2c6ed557" translate="yes" xml:space="preserve">
          <source>Artists that have &lt;code&gt;artist.set_in_layout(False)&lt;/code&gt; are not included in the bbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ae238d5d5644f4497ee86ac4e8014056d4dd27" translate="yes" xml:space="preserve">
          <source>As a float, determines the reach of the whiskers beyond the first and third quartiles. In other words, where IQR is the interquartile range (&lt;code&gt;Q3-Q1&lt;/code&gt;), the upper whisker will extend to last datum less than &lt;code&gt;Q3 + whis*IQR&lt;/code&gt;. Similarly, the lower whisker will extend to the first datum greater than &lt;code&gt;Q1 - whis*IQR&lt;/code&gt;. Beyond the whiskers, data are considered outliers and are plotted as individual points. This can be set to an ascending sequence of percentiles (e.g., [5, 95]) to set the whiskers at specific percentiles of the data. Finally, &lt;code&gt;whis&lt;/code&gt; can be the string &lt;code&gt;'range'&lt;/code&gt; to force the whiskers to the minimum and maximum of the data. In the edge case that the 25th and 75th percentiles are equivalent, &lt;code&gt;whis&lt;/code&gt; can be automatically set to &lt;code&gt;'range'&lt;/code&gt; via the &lt;code&gt;autorange&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c9eb3e58249bd3236d0df11fc4908171ae926a" translate="yes" xml:space="preserve">
          <source>As a float, determines the reach of the whiskers to the beyond the first and third quartiles. In other words, where IQR is the interquartile range (&lt;code&gt;Q3-Q1&lt;/code&gt;), the upper whisker will extend to last datum less than &lt;code&gt;Q3 + whis*IQR&lt;/code&gt;). Similarly, the lower whisker will extend to the first datum greater than &lt;code&gt;Q1 - whis*IQR&lt;/code&gt;. Beyond the whiskers, data are considered outliers and are plotted as individual points. Set this to an unreasonably high value to force the whiskers to show the min and max values. Alternatively, set this to an ascending sequence of percentile (e.g., [5, 95]) to set the whiskers at specific percentiles of the data. Finally, &lt;code&gt;whis&lt;/code&gt; can be the string &lt;code&gt;'range'&lt;/code&gt; to force the whiskers to the min and max of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ea58b29f3af53bc9e3c84aae09b0e4d8f2df5a" translate="yes" xml:space="preserve">
          <source>As a shortcut, single color strings may be used in place of one-element lists, i.e. &lt;code&gt;'red'&lt;/code&gt; instead of &lt;code&gt;['red']&lt;/code&gt; to color all levels with the same color. This shortcut does only work for color strings, not for other ways of specifying colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab1cee6a19e9a6ad848e82c7ccc8c50c4dc11c8" translate="yes" xml:space="preserve">
          <source>As in the Adobe Font Metrics File Format Specification, all dimensions are given in units of 1/1000 of the scale factor (point size) of the font being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec16d142372e9584a0e034cf35a386a46bf28675" translate="yes" xml:space="preserve">
          <source>As long as auto font size has not been disabled, the value will be clipped such that the text fits horizontally into the cell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8c2760b46fd4910146575e39ba522db9a3ddca" translate="yes" xml:space="preserve">
          <source>As of version 2.5.0, the use of the keyword &lt;code&gt;until&lt;/code&gt; in conjunction with &lt;code&gt;count&lt;/code&gt; is deprecated, to make sure &lt;code&gt;dateutil&lt;/code&gt; is fully compliant with &lt;a href=&quot;https://tools.ietf.org/html/rfc5545#section-3.3.10&quot;&gt;RFC-5545 Sec. 3.3.10&lt;/a&gt;. Therefore, &lt;code&gt;until&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt;&lt;strong&gt;must not&lt;/strong&gt; occur in the same call to &lt;code&gt;rrule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e077cf8bf9299cf5891799d2ef064dab349da24" translate="yes" xml:space="preserve">
          <source>Aspect ratio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebd2fbe45eda05abcc1454287430edc283a5c2e" translate="yes" xml:space="preserve">
          <source>Assign a figure to the tool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20a5269fdbe0bbf1706ec8b258dd192ec7936c7" translate="yes" xml:space="preserve">
          <source>Async/Event based</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0918b88cd4f2d872bec38c35b5dba67aac37dc6d" translate="yes" xml:space="preserve">
          <source>At its core, Matplotlib is object-oriented. We recommend directly working with the objects, if you need more control and customization of your plots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b054be382ad60925f552c16c76a9eeb6794610e5" translate="yes" xml:space="preserve">
          <source>At least one of &lt;em&gt;cellText&lt;/em&gt; or &lt;em&gt;cellColours&lt;/em&gt; must be specified. These parameters must be 2D lists, in which the outer lists define the rows and the inner list define the column values per row. Each row must have the same number of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b946d58045ae15c40d59eda9500d03aa6d33569c" translate="yes" xml:space="preserve">
          <source>At present, &lt;a href=&quot;../collections_api#matplotlib.collections.Collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; instances are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b91828a37e338698c58c5f52916e0891b7e3c8" translate="yes" xml:space="preserve">
          <source>Attach additional attributes as defined in &lt;a href=&quot;#matplotlib.backend_bases.FigureCanvasBase.mpl_connect&quot;&gt;&lt;code&gt;FigureCanvasBase.mpl_connect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31280f170a3301e186c9ef053721ddfd14eafee9" translate="yes" xml:space="preserve">
          <source>Attribute dictionary. Alternatively, attributes can be given as keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a9d24608177508603618c97946fefd0e7afe02" translate="yes" xml:space="preserve">
          <source>Attribute to group 'radio' like tools (mutually exclusive)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8087185e5ee37cef4c337de5697d35d75d909fd" translate="yes" xml:space="preserve">
          <source>Attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd43c44debf381335a0cd7a0d7349a6625629d1c" translate="yes" xml:space="preserve">
          <source>Attrs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2dc922792dfeb6ce6e892582d2c644c9a4b69d" translate="yes" xml:space="preserve">
          <source>Attrs: all the &lt;a href=&quot;#matplotlib.backend_bases.Event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; attributes plus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844550ab738ea00a30b8da99f16182fb8c79d223" translate="yes" xml:space="preserve">
          <source>Author:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692e2fa03c5b2df576985520719cd2c859e6eb46" translate="yes" xml:space="preserve">
          <source>Author: Name of image's creator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f13048aa457fc6445ab5084b29ce6b120c1f944" translate="yes" xml:space="preserve">
          <source>Auto Subplots Adjust</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17692df8a0504b8bed5ccab7666155e37379aa89" translate="yes" xml:space="preserve">
          <source>Auto-wrapping text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220523d0f046e2cf77daa59077b3ff9f443f79f4" translate="yes" xml:space="preserve">
          <source>Autoformat the date labels. The default format is the one to use if none of the values in &lt;code&gt;self.scaled&lt;/code&gt; are greater than the unit returned by &lt;code&gt;locator._get_unit()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f00bc48067c2c8f27abd762900edb9e9b6ea39" translate="yes" xml:space="preserve">
          <source>Autoformat the date labels. The default format is used to form an initial string, and then redundant elements are removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73277175464f68ef182d2a4fb1a2f0cf0c01e416" translate="yes" xml:space="preserve">
          <source>Automatic Text Offsetting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319d83d9fe066958be72b029174df0d28611143c" translate="yes" xml:space="preserve">
          <source>Automatic scaling (fill plot box with data).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149f93eb15ffd7f0ed4fae6ee8e1b71146f6a99c" translate="yes" xml:space="preserve">
          <source>Automatically adjust subplot parameters to give specified padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020f703026093a7eb1051dde27307dc0b0c1afdd" translate="yes" xml:space="preserve">
          <source>Automatically set font size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500b216fd0e4785d8646c53e17d173a8ba4ad8c2" translate="yes" xml:space="preserve">
          <source>Automatically set the widths of given columns to optimal sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ae1abe16628d147172dcdfc33fd6e8e59d8155" translate="yes" xml:space="preserve">
          <source>Automatically setting tick labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c6e1506b15762237008db2802826566bf3c1c5" translate="yes" xml:space="preserve">
          <source>Autoscale only None-valued vmin or vmax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36aa15300b79d71174dde640a758ba51cb9a71f8" translate="yes" xml:space="preserve">
          <source>Autoscale the axis view to the data (toggle).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97663d696dd3419c2884cd1ccefefe917ebbd29c" translate="yes" xml:space="preserve">
          <source>Autoscale the scalar limits on the norm instance using the current array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f3c1bc08d3a598847700a295a2ca1ad384c07a" translate="yes" xml:space="preserve">
          <source>Autoscale the scalar limits on the norm instance using the current array, changing only limits that are None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23864c12174583c5925853f3d0fc872d0dfcbab" translate="yes" xml:space="preserve">
          <source>Autoscale the view limits using the data limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3663efadd9bd94197c184f0b4ae9d3ca34ed39c" translate="yes" xml:space="preserve">
          <source>Autoscale the view limits using the data limits. See &lt;a href=&quot;matplotlib.axes.axes.autoscale_view#matplotlib.axes.Axes.autoscale_view&quot;&gt;&lt;code&gt;matplotlib.axes.Axes.autoscale_view()&lt;/code&gt;&lt;/a&gt; for documentation. Note that this function applies to the 3D axes, and as such adds the &lt;em&gt;scalez&lt;/em&gt; to the function arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183dfe2749686ead497a2640d25f68e2588f98f3" translate="yes" xml:space="preserve">
          <source>Autoscaling and margins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbbc1a465a61c33a6e3993c2007dac2e3d11058" translate="yes" xml:space="preserve">
          <source>Auxiliary Tool to handle changes in views and positions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75f36f88797a19683a1b68037a0b63ba522f4c3" translate="yes" xml:space="preserve">
          <source>Axes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acaf8081eee89a152eb63e7bab4b405e8679a2d" translate="yes" xml:space="preserve">
          <source>Axes Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1c8a1c713eca3478f9fe848c08f11c88fd85dd" translate="yes" xml:space="preserve">
          <source>Axes Position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251faf33d18a86153ccb6711c78bc840e06c93ad" translate="yes" xml:space="preserve">
          <source>Axes Props</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a2bc53d38f34de9d79ffe42c73ea6bf4e3b952" translate="yes" xml:space="preserve">
          <source>Axes Zoom Effect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb82556467fbae8a6c2a2db1a0519c3a46219c85" translate="yes" xml:space="preserve">
          <source>Axes have two position attributes. The 'original' position is the position allocated for the Axes. The 'active' position is the position the Axes is actually drawn at. These positions are usually the same unless a fixed aspect is set to the Axes. See &lt;a href=&quot;matplotlib.axes.axes.set_aspect#matplotlib.axes.Axes.set_aspect&quot;&gt;&lt;code&gt;set_aspect&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3bc780cf356ee63f1208ac7acd28d4e4289c98" translate="yes" xml:space="preserve">
          <source>Axes into which the colorbar will be drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec66c687093be5f0a361e952c83ccc24d1c9b7c0" translate="yes" xml:space="preserve">
          <source>Axes to place the inset axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1e441ab86766739508b34275fb605c0e80628f" translate="yes" xml:space="preserve">
          <source>Axes to use for normalizing coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e903be52c7fe9c427e23b5fec23573d2795eed" translate="yes" xml:space="preserve">
          <source>Axes which contains the area of the inset axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217d62ca4c1375881023db474b519af79f1b95a3" translate="yes" xml:space="preserve">
          <source>AxesGrid toolkit has been a part of matplotlib since v 0.99. Originally, the toolkit had a single namespace of &lt;em&gt;axes_grid&lt;/em&gt;. In more recent version, the toolkit has divided into two separate namespace (&lt;em&gt;axes_grid1&lt;/em&gt; and &lt;em&gt;axisartist&lt;/em&gt;). While &lt;em&gt;axes_grid&lt;/em&gt; namespace is maintained for the backward compatibility, use of &lt;em&gt;axes_grid1&lt;/em&gt; and &lt;em&gt;axisartist&lt;/em&gt; is recommended. For the documentation on &lt;code&gt;axes_grid&lt;/code&gt;, see the &lt;a href=&quot;https://matplotlib.org/2.0.1/mpl_toolkits/axes_grid/index.html#toolkit-axesgrid-index&quot;&gt;previous version of the docs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160bbfbc4dd8c077926d6ec6a7184e57212d85a3" translate="yes" xml:space="preserve">
          <source>Axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9df54d62de02b5a17677c6c80cf1b2fe9e1122a" translate="yes" xml:space="preserve">
          <source>Axis / limits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48415fdda9226de1ef92e510a234134fdb664db2" translate="yes" xml:space="preserve">
          <source>Axis Direction Demo Step01</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1bc11f8a60c0c4a844eb875c8d85a72fb73ed7" translate="yes" xml:space="preserve">
          <source>Axis Direction Demo Step02</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2c9715f2fb2a669385abed04abe1f5d3392141" translate="yes" xml:space="preserve">
          <source>Axis Direction Demo Step03</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb5d1d21ab3f69744611fe3ea086be6adfdf5b7" translate="yes" xml:space="preserve">
          <source>Axis Direction Demo Step04</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cdfa898a854fe036c8e93a56bcd55974d6257a5" translate="yes" xml:space="preserve">
          <source>Axis Equal Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1016b420bdfe97e367c5c4cf98676fe3a61f726" translate="yes" xml:space="preserve">
          <source>Axis Label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b0c2e0c43f66a1994d75a534d68be94cba1d51" translate="yes" xml:space="preserve">
          <source>Axis Label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13f1f08e019e471bede72cb2772bb4ef9da175b" translate="yes" xml:space="preserve">
          <source>Axis Label. Derived from Text. The position of the text is updated in the fly, so changing text position has no effect. Otherwise, the properties can be changed as a normal Text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec8205d7e14ede9049ba5a9664e33edac306eaf8" translate="yes" xml:space="preserve">
          <source>Axis Labels, title, and legend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca704a952a34f9cb3e1607c0479bf5405c13267" translate="yes" xml:space="preserve">
          <source>Axis Limits and direction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d03e02348176c2a592a312a0df952e23bb62c5d" translate="yes" xml:space="preserve">
          <source>Axis line styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c32b4a82ac8010625b4d34f56e921cf1d5a6f7" translate="yes" xml:space="preserve">
          <source>Axis on which to operate; default is 'both'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cc75137498ef142413cc8973cd709ce1b56ff3" translate="yes" xml:space="preserve">
          <source>Axis scales</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89382735dc38eb91302fc57a6d39bc995085364" translate="yes" xml:space="preserve">
          <source>AxisArtist can be considered as a container artist and has following children artists which will draw ticks, labels, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcf8aeca6e83a90c4bd968b305b587872968278" translate="yes" xml:space="preserve">
          <source>AxisArtistHelper should define following method with given APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0764fdf26b4dd59642da5c00c935df8490d2d8" translate="yes" xml:space="preserve">
          <source>AxisArtistHelper should define following method with given APIs. Note that the first axes argument will be axes attribute of the caller artist.:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a74fed671f7fca2f6015bed8bc24a187e46bdf0" translate="yes" xml:space="preserve">
          <source>Axislines includes modified implementation of the Axes class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6376d6c43a05fc2770008c568244ffefb14e9d" translate="yes" xml:space="preserve">
          <source>Axislines includes modified implementation of the Axes class. The biggest difference is that the artists responsible for drawing the axis spine, ticks, ticklabels and axis labels are separated out from mpl's Axis class. Originally, this change was motivated to support curvilinear grid. Here are a few reasons that I came up with a new axes class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5bc2bd7460f15715dbf9bbb29d79bca65b1694" translate="yes" xml:space="preserve">
          <source>Azimuthal viewing angle, defaults to -60.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd38009cbdde1bf333c5b9ffd6d6b35e556eb7a" translate="yes" xml:space="preserve">
          <source>Bachelor's degrees by gender</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a1880e0f7fe6b6fbd8ebe1e433cc92c2c23ad15" translate="yes" xml:space="preserve">
          <source>Back one step in the stack of views and positions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e073b5b009bad03228262bf128fda61a2dd13d20" translate="yes" xml:space="preserve">
          <source>Backend derived classes should call this function on any motion-notify-event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfc4bfb833e934c6696503c9cd886639c0dcaf3" translate="yes" xml:space="preserve">
          <source>Backend derived classes should call this function on any mouse button press. x,y are the canvas coords: 0,0 is lower, left. button and key are as defined in &lt;a href=&quot;#matplotlib.backend_bases.MouseEvent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0081ee4d4ccde98c12731a8184c754ba25239b74" translate="yes" xml:space="preserve">
          <source>Backend derived classes should call this function on any mouse button release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2e52320817a367d5ac47b8ecc86f30f1f6e4e3" translate="yes" xml:space="preserve">
          <source>Backend derived classes should call this function on any scroll wheel event. x,y are the canvas coords: 0,0 is lower, left. button and key are as defined in MouseEvent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994a8d90cf1368d7d750e0140080dd32bf175f05" translate="yes" xml:space="preserve">
          <source>Backend derived classes should call this function when entering canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc896c8413264df2733a764a43442358582df7a0" translate="yes" xml:space="preserve">
          <source>Backend derived classes should call this function when leaving canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795cdb0d244191a48ce49f8d47a27f4ae333d68c" translate="yes" xml:space="preserve">
          <source>Backend for handling file output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3776d63ad7b7a84bfe20d9c6d4a53a2b25d0e43" translate="yes" xml:space="preserve">
          <source>Backends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9838b91867811384a76c7ee031c8b731c4ef0c" translate="yes" xml:space="preserve">
          <source>Backends may choose to override the method and implement their own strategy to prevent multiple renderings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e496fd20136d4bb7828ebb0ab925b1bd977208e4" translate="yes" xml:space="preserve">
          <source>Bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a481530bcaecd351355104fee9f6642ac8791ad" translate="yes" xml:space="preserve">
          <source>Bar chart on polar axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de5cd609985b8f8d3f3fed2fb631a32ff5adaf3" translate="yes" xml:space="preserve">
          <source>Bar chart with gradients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6c61a3d8b2b056bc4606ee53b7658cfc7fbad5" translate="yes" xml:space="preserve">
          <source>Bar demo with units</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f779f0519b9262856b65c6d602eedb3ab11db1e" translate="yes" xml:space="preserve">
          <source>Bar of pie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57b72f1b924728dc42543bd07d0c6eb6f09268a" translate="yes" xml:space="preserve">
          <source>BarAB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab433d7540cd9dc11181e7e001c4cb2c8e68db6" translate="yes" xml:space="preserve">
          <source>Barb Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a556db3090733d9f4894eb16a57ee858f51d70d" translate="yes" xml:space="preserve">
          <source>Barbs are traditionally used in meteorology as a way to plot the speed and direction of wind observations, but can technically be used to plot any two dimensional vector quantity. As opposed to arrows, which give vector magnitude by the length of the arrow, the barbs give more quantitative information about the vector magnitude by putting slanted lines or a triangle for various increments in magnitude, as show schematically below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b4277abf950bb3573b1c4f09cb166eae300d17" translate="yes" xml:space="preserve">
          <source>Barcode Demo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b4a3f0ba782a3720e0014379ebdb3ecf47ffb9" translate="yes" xml:space="preserve">
          <source>Base Tool to toggle between linear and logarithmic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178dd1fc30a39b6f6fc51fedad684f4e9f075782" translate="yes" xml:space="preserve">
          <source>Base class for &lt;a href=&quot;#matplotlib.axis.XAxis&quot;&gt;&lt;code&gt;XAxis&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#matplotlib.axis.YAxis&quot;&gt;&lt;code&gt;YAxis&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65b134bc5c37cf993e52f43ebb7fac22466e0a3" translate="yes" xml:space="preserve">
          <source>Base class for &lt;a href=&quot;#matplotlib.backend_tools.ToolHome&quot;&gt;&lt;code&gt;ToolHome&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#matplotlib.backend_tools.ToolBack&quot;&gt;&lt;code&gt;ToolBack&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#matplotlib.backend_tools.ToolForward&quot;&gt;&lt;code&gt;ToolForward&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff86b9fe740df57651d729a50d00849a559447a" translate="yes" xml:space="preserve">
          <source>Base class for &lt;a href=&quot;#matplotlib.backend_tools.ToolZoom&quot;&gt;&lt;code&gt;ToolZoom&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#matplotlib.backend_tools.ToolPan&quot;&gt;&lt;code&gt;ToolPan&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a0bddb8dc3daf81dbee5773b5cd8a2f2667832" translate="yes" xml:space="preserve">
          <source>Base class for Collections. Must be subclassed to be usable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd4ebfb963109e9f5b2922dd8fc4462fac719de" translate="yes" xml:space="preserve">
          <source>Base class for all tool containers, e.g. toolbars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc4d6149708efc09e20c56ff985c4be8b16c3fc" translate="yes" xml:space="preserve">
          <source>Base class for containers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0b88bc357edb0093524c24db4580d30d26a534" translate="yes" xml:space="preserve">
          <source>Base class for formatting ticks on a log or symlog scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f2e243170d7a495d27a5356fdee209a595372a" translate="yes" xml:space="preserve">
          <source>Base class for subplots, which are &lt;a href=&quot;#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; instances with additional methods to facilitate generating and manipulating a set of &lt;a href=&quot;#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; within a figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2712085cb52d80240b0eb1f54c24dd79441158dc" translate="yes" xml:space="preserve">
          <source>Base class for subplots, which are &lt;a href=&quot;../axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; instances with additional methods to facilitate generating and manipulating a set of &lt;a href=&quot;../axes_api#matplotlib.axes.Axes&quot;&gt;&lt;code&gt;Axes&lt;/code&gt;&lt;/a&gt; within a figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165199cb9bb1b332887563814a1fa64ab67b99a2" translate="yes" xml:space="preserve">
          <source>Base class for the navigation cursor, version 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905c68aaef1eb9780f5c2d830796b6f143d2e2a2" translate="yes" xml:space="preserve">
          <source>Base class for the statusbar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97711495937ecbf9b4afad7dc0d4e75734f1e8e4" translate="yes" xml:space="preserve">
          <source>Base class for writing movies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b888f3c006d928a28e49fd5371feb10473c80639" translate="yes" xml:space="preserve">
          <source>Base of the logarithm used in all calculations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34784826f2fa8c366f1aa546cb92affa02eb82d4" translate="yes" xml:space="preserve">
          <source>Base of the x logarithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce368ad03bc6ef93934dcbc0c6f570cecdf04ac" translate="yes" xml:space="preserve">
          <source>Base of the x/y logarithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d7f6d669ba667e6ee16f771d408f060dcf5d43" translate="yes" xml:space="preserve">
          <source>Base of the y logarithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f265ed646ad7e113b9a7ea70cd3d78d4d54cd1" translate="yes" xml:space="preserve">
          <source>Base tool class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b5a2e55f89017f8fd35989f68e2720b678ff0b" translate="yes" xml:space="preserve">
          <source>Base tool for figure saving</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa22fd23911e21acf0215ee766a83fe609dbe943" translate="yes" xml:space="preserve">
          <source>Base tool for the configuration of subplots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f59f290a04514b1606bfc8d1794212012636f01" translate="yes" xml:space="preserve">
          <source>Baseclass for all scalar to RGBA mappings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53658b55a4257561cefa3a2fd713061930847bc4" translate="yes" xml:space="preserve">
          <source>Based on code from conda.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a8e39d6e8ca92e9ffa25fd7498cf1da6dc87ca" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.backend_bases.Event&quot;&gt;&lt;code&gt;matplotlib.backend_bases.Event&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50d39684ebd79da57ea2a2c9167f0d46e300d9b" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.backend_bases.LocationEvent&quot;&gt;&lt;code&gt;matplotlib.backend_bases.LocationEvent&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007ace789d6db2e30db3bc82aa0710850080159e" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.backend_managers.ToolEvent&quot;&gt;&lt;code&gt;matplotlib.backend_managers.ToolEvent&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0decb223077e28a3207e242e81ce50d2540b2c7b" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.backend_tools.AxisScaleBase&quot;&gt;&lt;code&gt;matplotlib.backend_tools.AxisScaleBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c0ffb0a0544ab04f3f6b9888512c117766eab0" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.backend_tools.ToolBase&quot;&gt;&lt;code&gt;matplotlib.backend_tools.ToolBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e103d5257806b2c756e31e4e856cf6bb10ebd059" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.backend_tools.ToolToggleBase&quot;&gt;&lt;code&gt;matplotlib.backend_tools.ToolToggleBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017adbb818d2b874165068261a4e54fff89dbe61" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.backend_tools.ViewsPositionsBase&quot;&gt;&lt;code&gt;matplotlib.backend_tools.ViewsPositionsBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf4a3467090a045e12ce7d0aec14a982dedae63" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.backend_tools.ZoomPanBase&quot;&gt;&lt;code&gt;matplotlib.backend_tools.ZoomPanBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f056ff94eab263ed0d1016b1460cb937bd02a3fe" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.blocking_input.BlockingInput&quot;&gt;&lt;code&gt;matplotlib.blocking_input.BlockingInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8588abd63c8b3f95a668150e29df85a714f404f5" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.blocking_input.BlockingMouseInput&quot;&gt;&lt;code&gt;matplotlib.blocking_input.BlockingMouseInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442f93947871a2f8778bd983a1bed76391761a2c" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.collections.Collection&quot;&gt;&lt;code&gt;matplotlib.collections.Collection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ced1fab16f01b21e5032858e4f0b1ccebb569b" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.collections.LineCollection&quot;&gt;&lt;code&gt;matplotlib.collections.LineCollection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28af86c1e08f489f35a7b6aa765d611976c7f2e0" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.collections.PolyCollection&quot;&gt;&lt;code&gt;matplotlib.collections.PolyCollection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d2187541d294583a56b00d108b39f01132bddb" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.collections.RegularPolyCollection&quot;&gt;&lt;code&gt;matplotlib.collections.RegularPolyCollection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a993004dcc626ff4fe50f057d1f49878e53b5e2d" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.colorbar.Colorbar&quot;&gt;&lt;code&gt;matplotlib.colorbar.Colorbar&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02906eef8bb5b4403ab9cbb0d0182eb8fe385537" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.colorbar.ColorbarBase&quot;&gt;&lt;code&gt;matplotlib.colorbar.ColorbarBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ac9db6179449524e99a3cbcbbf8fc0603cb813" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.container.Container&quot;&gt;&lt;code&gt;matplotlib.container.Container&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c2bbc87b6d8b21441d536539ebc596e4828d94" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.contour.ContourSet&quot;&gt;&lt;code&gt;matplotlib.contour.ContourSet&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93214f3cd2b52b10ec6e51c8688c32b172d48c86" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.dates.DateLocator&quot;&gt;&lt;code&gt;matplotlib.dates.DateLocator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51003104709471b703074b967643b861dea71760" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.dates.RRuleLocator&quot;&gt;&lt;code&gt;matplotlib.dates.RRuleLocator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae1593ffaa5c670cb21200e95ed8ba51104add9" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.dviread.Dvi&quot;&gt;&lt;code&gt;matplotlib.dviread.Dvi&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32196f40b500f0f64abcea822bcfbc07802a0689" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.image.AxesImage&quot;&gt;&lt;code&gt;matplotlib.image.AxesImage&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced566935fd9ff483d4b0907bb8719899eb85b90" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.Box&quot;&gt;&lt;code&gt;matplotlib.mathtext.Box&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad4331e98ed59d93f2c2631e93dccfa03c53330" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.Char&quot;&gt;&lt;code&gt;matplotlib.mathtext.Char&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb06de9a03a951ba38e56b15be3a6268d398434" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.DejaVuFonts&quot;&gt;&lt;code&gt;matplotlib.mathtext.DejaVuFonts&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b0bdf189621346668baa235bb282c7babd98e7" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.FontConstantsBase&quot;&gt;&lt;code&gt;matplotlib.mathtext.FontConstantsBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19aedefd99c41283ccac3dbbcbb31f74138e8726" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.Fonts&quot;&gt;&lt;code&gt;matplotlib.mathtext.Fonts&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fd6cf114f078accd2f6c8267a1e5f973f57b5e" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.Glue&quot;&gt;&lt;code&gt;matplotlib.mathtext.Glue&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a38cbfefbd3e988acdbeec128e632139dc1eb5" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.Hlist&quot;&gt;&lt;code&gt;matplotlib.mathtext.Hlist&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2401d33e0b2f523c65debd77b239f926481c41" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.List&quot;&gt;&lt;code&gt;matplotlib.mathtext.List&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee75d89df2bf3c4099225bc95d2fd0b458475db" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.MathtextBackend&quot;&gt;&lt;code&gt;matplotlib.mathtext.MathtextBackend&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64052891b6d95d78768ebfb452b6bdc63492a4f6" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.MathtextBackendAgg&quot;&gt;&lt;code&gt;matplotlib.mathtext.MathtextBackendAgg&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9f8fce7b98c9c53e57865d32f65d72e0031ed3" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.Node&quot;&gt;&lt;code&gt;matplotlib.mathtext.Node&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4973eaf4df3035a0e8d576e0c7dca2c6869d92" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.Rule&quot;&gt;&lt;code&gt;matplotlib.mathtext.Rule&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddda244cfa34b872cbe3bee604f3cef95006371" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.StixFonts&quot;&gt;&lt;code&gt;matplotlib.mathtext.StixFonts&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cae672ea1202e0c12d482943511d9ea0a38b49c" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.TruetypeFonts&quot;&gt;&lt;code&gt;matplotlib.mathtext.TruetypeFonts&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9716cc5896d83b189e357da9cb8214b64579f9fb" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.mathtext.UnicodeFonts&quot;&gt;&lt;code&gt;matplotlib.mathtext.UnicodeFonts&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76d0c70a4c06fa09ccf208d49e0df2f9e397ed8" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.offsetbox.AnchoredOffsetbox&quot;&gt;&lt;code&gt;matplotlib.offsetbox.AnchoredOffsetbox&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ee44a63228cd086f702507904944409d38d70e" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.offsetbox.DraggableBase&quot;&gt;&lt;code&gt;matplotlib.offsetbox.DraggableBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b522eda30a8710386785ef5e86e69226af3e48c4" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.offsetbox.OffsetBox&quot;&gt;&lt;code&gt;matplotlib.offsetbox.OffsetBox&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3562be98aadac157507ef5efebc5401e9c22bdd4" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.offsetbox.PackerBase&quot;&gt;&lt;code&gt;matplotlib.offsetbox.PackerBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8d0154d21866395e983be10885cb70ba12fe6d" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.patheffects.AbstractPathEffect&quot;&gt;&lt;code&gt;matplotlib.patheffects.AbstractPathEffect&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbef393a9040793223cff265906e80398846747" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.patheffects.SimplePatchShadow&quot;&gt;&lt;code&gt;matplotlib.patheffects.SimplePatchShadow&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ec92231f7823837cbedc5e98a325784b3b40c0" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.patheffects.Stroke&quot;&gt;&lt;code&gt;matplotlib.patheffects.Stroke&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8dcc9f50f71924e7727ce6f7fcb66a4bb3fae9b" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.scale.InvertedLogTransformBase&quot;&gt;&lt;code&gt;matplotlib.scale.InvertedLogTransformBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6c27efba9905ce9b653f3e3e8553ca0934cb62" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.scale.LogScale&quot;&gt;&lt;code&gt;matplotlib.scale.LogScale&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a94e76fb18beacb8147be0a493aa53f73c2847" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.scale.LogTransformBase&quot;&gt;&lt;code&gt;matplotlib.scale.LogTransformBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be36b040ece7c63dd06822514ecc74957fb0edd3" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.scale.ScaleBase&quot;&gt;&lt;code&gt;matplotlib.scale.ScaleBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3844499f8cf48ac5a3581968a5eb928317d7051" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.table.Cell&quot;&gt;&lt;code&gt;matplotlib.table.Cell&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264f84d2321af90cee4c1f889ce70e1ae9c2003e" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.testing.decorators.CleanupTest&quot;&gt;&lt;code&gt;matplotlib.testing.decorators.CleanupTest&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;matplotlib.testing.decorators._ImageComparisonBase&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5acb53f5a6162d02c4358d780aee2bf7797896" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.text.Text&quot;&gt;&lt;code&gt;matplotlib.text.Text&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97044d180852b38076fac114234692fd504a27a9" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.text.Text&quot;&gt;&lt;code&gt;matplotlib.text.Text&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;matplotlib.text._AnnotationBase&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31f3baea028a4e0b9ff9ac6cf4f156e6d74d5e8" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.ticker.Formatter&quot;&gt;&lt;code&gt;matplotlib.ticker.Formatter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e2f29e39df4e62868bde0a6f08c60edee080b1" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.ticker.Locator&quot;&gt;&lt;code&gt;matplotlib.ticker.Locator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951d237554988c163f25782608892a1979924ec7" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.ticker.LogFormatter&quot;&gt;&lt;code&gt;matplotlib.ticker.LogFormatter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32708eebd318760c7464527f6fa0011ca391eef4" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.ticker.LogFormatterMathtext&quot;&gt;&lt;code&gt;matplotlib.ticker.LogFormatterMathtext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb0085631739199d58f3b3aeccf845864d54f53" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.ticker.MaxNLocator&quot;&gt;&lt;code&gt;matplotlib.ticker.MaxNLocator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87174947310bb6e4584af16249e8c8367e7c092d" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.ticker.TickHelper&quot;&gt;&lt;code&gt;matplotlib.ticker.TickHelper&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe13809037ef4bad7c2d1225f44c0ff88529b51" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.transforms.Affine2DBase&quot;&gt;&lt;code&gt;matplotlib.transforms.Affine2DBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f46a5f45dde405035466e112bf9fceece82de2" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.transforms.AffineBase&quot;&gt;&lt;code&gt;matplotlib.transforms.AffineBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e62863eff763747727aa64286ccefa9a7ea3f27" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.transforms.BboxBase&quot;&gt;&lt;code&gt;matplotlib.transforms.BboxBase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcea82b30bf25c682d1c04cd661be49fc6466442" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.transforms.BboxTransformTo&quot;&gt;&lt;code&gt;matplotlib.transforms.BboxTransformTo&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a950639050b4cfa1934386a4f428fe3e9e562a" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.transforms.Transform&quot;&gt;&lt;code&gt;matplotlib.transforms.Transform&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7736fb8e068888e99b269f53fbebe0993e576058" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.transforms.TransformNode&quot;&gt;&lt;code&gt;matplotlib.transforms.TransformNode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4839091ae58320cbfb4342e6aa8a319f5690b9f6" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.transforms.TransformedPath&quot;&gt;&lt;code&gt;matplotlib.transforms.TransformedPath&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d74aec5f14289380130a1766ca5ddaeb3be7ceb" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.widgets.AxesWidget&quot;&gt;&lt;code&gt;matplotlib.widgets.AxesWidget&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e35a04c1f69458f4ce7225ed406d3bca458c55" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.widgets.RectangleSelector&quot;&gt;&lt;code&gt;matplotlib.widgets.RectangleSelector&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483c85b86b5e66b1c8663f35143ed71721e319b6" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;#matplotlib.widgets.Widget&quot;&gt;&lt;code&gt;matplotlib.widgets.Widget&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cb7e9c2e1ddc4da8ad87dce8909474fc3d051d" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;../artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;matplotlib.artist.Artist&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8623e05272ee7789a57525f0a90dcc9738732b6d" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;../axis_api#matplotlib.axis.XAxis&quot;&gt;&lt;code&gt;matplotlib.axis.XAxis&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7fa8d93c2fb4608a4c4c04c93296814bd5958a" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;../cbook_api#matplotlib.cbook.Stack&quot;&gt;&lt;code&gt;matplotlib.cbook.Stack&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f103547074fa5c2eba9517b935807366b7792f1b" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;../collections_api#matplotlib.collections.LineCollection&quot;&gt;&lt;code&gt;matplotlib.collections.LineCollection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c7f233f95ae37e0179e5559bb92e8d92a2f58d" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;../collections_api#matplotlib.collections.PatchCollection&quot;&gt;&lt;code&gt;matplotlib.collections.PatchCollection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776edf6b9e7fca467075cb07fca02e0428ca5b84" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;../collections_api#matplotlib.collections.PathCollection&quot;&gt;&lt;code&gt;matplotlib.collections.PathCollection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5b1aca59e92a1858e7db332012fcb8371073a3" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;../collections_api#matplotlib.collections.PolyCollection&quot;&gt;&lt;code&gt;matplotlib.collections.PolyCollection&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e21d27f786dca1c0da8e1a0dce26f569f07883" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;../offsetbox_api#matplotlib.offsetbox.AnchoredOffsetbox&quot;&gt;&lt;code&gt;matplotlib.offsetbox.AnchoredOffsetbox&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7498f188c50d1326cb29718962c140c704f8692" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;../text_api#matplotlib.text.Text&quot;&gt;&lt;code&gt;matplotlib.text.Text&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212e063e0271acc77038ed44490a4f25d4f99a85" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;../ticker_api#matplotlib.ticker.MaxNLocator&quot;&gt;&lt;code&gt;matplotlib.ticker.MaxNLocator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c381747ffd5846887b850a63177a872d4a035a90" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;_as_gen/matplotlib.patches.patch#matplotlib.patches.Patch&quot;&gt;&lt;code&gt;matplotlib.patches.Patch&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef69b6e1d49339f11a554e003203a34ab5cbf29" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;_as_gen/matplotlib.patches.rectangle#matplotlib.patches.Rectangle&quot;&gt;&lt;code&gt;matplotlib.patches.Rectangle&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473b9e1e6ff8dc123ec9d6e818f86d00fe1f388" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;matplotlib.artist.Artist&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54077107a3da2067611146f7c0f932b58bbb1be8" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;matplotlib.artist.Artist&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cm_api#matplotlib.cm.ScalarMappable&quot;&gt;&lt;code&gt;matplotlib.cm.ScalarMappable&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b2889416c4214ee0cbb14003166ba0f0fb518d" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;artist_api#matplotlib.artist.Artist&quot;&gt;&lt;code&gt;matplotlib.artist.Artist&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;matplotlib.text._AnnotationBase&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a6ca67df650edb1a4166b1ad4889a0df5109dc" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;axis_api#matplotlib.axis.XAxis&quot;&gt;&lt;code&gt;matplotlib.axis.XAxis&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbba70ba4de7da3c65c8daa14324889ea9a3ee55" translate="yes" xml:space="preserve">
          <source>Bases: &lt;a href=&quot;axis_api#matplotlib.axis.XTick&quot;&gt;&lt;code&gt;matplotlib.axis.XTick&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
