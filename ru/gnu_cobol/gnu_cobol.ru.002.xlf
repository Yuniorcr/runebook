<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="gnu_cobol">
    <body>
      <group id="gnu_cobol">
        <trans-unit id="0415a7de202a19342528f4a2eb9fcc4bc715fe37" translate="yes" xml:space="preserve">
          <source>6.17.20. GO TO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7062867749ff5d792021c6c7baef3abed577bc51" translate="yes" xml:space="preserve">
          <source>6.17.20.1. Simple GO TO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d553543de6c95ca6c34b05f673ca59a452417681" translate="yes" xml:space="preserve">
          <source>6.17.20.2. GO TO DEPENDING ON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba7a14bc4c8b1b427264f8b6d180c9dd33af38c" translate="yes" xml:space="preserve">
          <source>6.17.21. IF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f7d42c33fd13505f139ccf1906b59f77a62c12" translate="yes" xml:space="preserve">
          <source>6.17.22. INITIALIZE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da53e84f43cd1b4a1669b74bf0136c1d3d55dbf8" translate="yes" xml:space="preserve">
          <source>6.17.23. INITIATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabbb28ac5fbf738956d9ab592b29eb8a11ca229" translate="yes" xml:space="preserve">
          <source>6.17.24. INSPECT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103389f1cbb33b2b52c0900c4db716a5fc8a5eed" translate="yes" xml:space="preserve">
          <source>6.17.25. MERGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7401c3fdb7d50bcce78369c1fa47ea01cf69d7b" translate="yes" xml:space="preserve">
          <source>6.17.26. MOVE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834f533fec8a1b5b8dc25e103f9f9c7f3ba121fa" translate="yes" xml:space="preserve">
          <source>6.17.26.1. Simple MOVE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4510adc21edae9e480af1c201387fcd613d78a22" translate="yes" xml:space="preserve">
          <source>6.17.26.2. MOVE CORRESPONDING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1635aab0ec03bf03175e6e78c5ab3a7e019a5325" translate="yes" xml:space="preserve">
          <source>6.17.27. MULTIPLY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41d00fc5b7a3435f2de849c8b390952c34a011d" translate="yes" xml:space="preserve">
          <source>6.17.27.1. MULTIPLY BY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ddb20b7c297c2a710d7841c7429c8c90906cbd" translate="yes" xml:space="preserve">
          <source>6.17.27.2. MULTIPLY GIVING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6890615a1bf430a5ebfa1c050c5312861a9c862c" translate="yes" xml:space="preserve">
          <source>6.17.28. OPEN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c71373f12e3569199400b90985d95e57ed4ca8" translate="yes" xml:space="preserve">
          <source>6.17.29. PERFORM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91005cb47c6e2ecf9f4ba432a43d998f28ee796b" translate="yes" xml:space="preserve">
          <source>6.17.29.1. Procedural PERFORM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e47cfb36c8db91507282066d5fb3c8a0d367dc5" translate="yes" xml:space="preserve">
          <source>6.17.29.2. Inline PERFORM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d748a59cc1412a1079ecf657f13511dbd4f3f9" translate="yes" xml:space="preserve">
          <source>6.17.29.3. VARYING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a4556d715bce0daea83a69cdf6e9234b1fa89f" translate="yes" xml:space="preserve">
          <source>6.17.3. ALLOCATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024b223f59c163c734bd350a51baa49e1a9443a8" translate="yes" xml:space="preserve">
          <source>6.17.30. READ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c15336e1ba26a4b228a0c0ac6c04bc0fe222fcf" translate="yes" xml:space="preserve">
          <source>6.17.30.1. Sequential READ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9127d1a29a6245a42d38ffb012aa91189b1a1387" translate="yes" xml:space="preserve">
          <source>6.17.30.2. Random READ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d49af509bd94a099526f200d32e7a70040cd9ed" translate="yes" xml:space="preserve">
          <source>6.17.31. READY TRACE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061aa2ad233f8ebe25b738707c53bf80aefcfd94" translate="yes" xml:space="preserve">
          <source>6.17.32. RELEASE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d2245b55b580081b37c4ea40d9c206ef5b76a5" translate="yes" xml:space="preserve">
          <source>6.17.33. RESET TRACE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ae05544793c15887c9c33aa06b891fa34cea32" translate="yes" xml:space="preserve">
          <source>6.17.34. RETURN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76fa23adee63b18573836043696e7c09b669198" translate="yes" xml:space="preserve">
          <source>6.17.35. REWRITE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b51b1c685278430cd2d1f2dd9ccaf46364f28b" translate="yes" xml:space="preserve">
          <source>6.17.36. ROLLBACK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c24f3dd29b892f1301682cf1d9be03aee854643" translate="yes" xml:space="preserve">
          <source>6.17.37. SEARCH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302f3cb05bb957cf5d483e3346bea56047878309" translate="yes" xml:space="preserve">
          <source>6.17.38. SEARCH ALL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234f5dcc81b231df896291b4d495636bdf69dd7f" translate="yes" xml:space="preserve">
          <source>6.17.39. SET</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8def2c42dd4e0dd895fe5f0af9f8d2460061ac" translate="yes" xml:space="preserve">
          <source>6.17.39.1. SET ENVIRONMENT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ecd95c43ad937239e5ad48c9e1a19b6e403b92" translate="yes" xml:space="preserve">
          <source>6.17.39.2. SET Program-Pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a561604529093dd269447c25106b956568148fb3" translate="yes" xml:space="preserve">
          <source>6.17.39.3. SET ADDRESS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925a1fa0033f806c1e7c782d62c604852d7204d3" translate="yes" xml:space="preserve">
          <source>6.17.39.4. SET Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edc55acc66a3bf1ae2b665271b21ea13a42c6da" translate="yes" xml:space="preserve">
          <source>6.17.39.5. SET UP/DOWN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d881225d72475b9edba4cc541eea27aff885c4a" translate="yes" xml:space="preserve">
          <source>6.17.39.6. SET Condition Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3507ae3573a1a0a6508a3710187b7b6b6758e070" translate="yes" xml:space="preserve">
          <source>6.17.39.7. SET Switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4567a63c938bc1cae2044c664aef723e0cfed21f" translate="yes" xml:space="preserve">
          <source>6.17.39.8. SET ATTRIBUTE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19aedaff2f0c18c6c18865872732d494995f45e" translate="yes" xml:space="preserve">
          <source>6.17.4. ALTER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48eabafcd2a03d46d50174a655c8411a519fe1c" translate="yes" xml:space="preserve">
          <source>6.17.40. SORT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3656dbad78936d3859e0525bb20873714860e6" translate="yes" xml:space="preserve">
          <source>6.17.40.1. File-Based SORT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="415d35574b375ae0d077537cf1d1d9ee537d4451" translate="yes" xml:space="preserve">
          <source>6.17.40.2. Table SORT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23963cbbd1bac4cd6e56e721e6cfd7cc08ea2d37" translate="yes" xml:space="preserve">
          <source>6.17.41. START</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a371d3af2bea1de3e8a7ecf34b869112cb33724" translate="yes" xml:space="preserve">
          <source>6.17.42. STOP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3052d6167782f857dfb27e0af040e3abee1bddb" translate="yes" xml:space="preserve">
          <source>6.17.43. STRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598f54b0b2c0c16f9f3f07d0f021659cfb8ad4f3" translate="yes" xml:space="preserve">
          <source>6.17.44. SUBTRACT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4eba5022404ca8d22a72400453219808e3386a2" translate="yes" xml:space="preserve">
          <source>6.17.44.1. SUBTRACT FROM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31742092e0c54ec89c781277a0c282557ab702af" translate="yes" xml:space="preserve">
          <source>6.17.44.2. SUBTRACT GIVING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589819399839da548b0d3855a38d31ce5507b4bf" translate="yes" xml:space="preserve">
          <source>6.17.44.3. SUBTRACT CORRESPONDING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311992d67bb4ad0086d5ab81dba671ef0698eddb" translate="yes" xml:space="preserve">
          <source>6.17.45. SUPPRESS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bdb91fb3847c7c99c20520fb1585a6e89dfd1b" translate="yes" xml:space="preserve">
          <source>6.17.46. TERMINATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886db97df73ade95d6217635cae163077d2cec97" translate="yes" xml:space="preserve">
          <source>6.17.47. TRANSFORM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ba5dc1289556ee7b173a08f6617c2c9b510a9a" translate="yes" xml:space="preserve">
          <source>6.17.48. UNLOCK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae07fe763dd528a9144a87e802cfade6b030cd65" translate="yes" xml:space="preserve">
          <source>6.17.49. UNSTRING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462902c39659a64a87ec5db7eab5d885c1019632" translate="yes" xml:space="preserve">
          <source>6.17.5. CALL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f302f24fe53beb60e4ef7470843c3eac5c1bf10" translate="yes" xml:space="preserve">
          <source>6.17.50. WRITE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975bbe05f83f8c3f10900de2da6b3d8ccba4fca9" translate="yes" xml:space="preserve">
          <source>6.17.6. CANCEL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beef2cc6a7fcb030f4834d3c8cfa4ff98514a45c" translate="yes" xml:space="preserve">
          <source>6.17.7. CLOSE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b6a3f20fef6342314518b9ba4ee2665f79c8e3" translate="yes" xml:space="preserve">
          <source>6.17.8. COMMIT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccad20ccda54321587f67be8e6def296109cd825" translate="yes" xml:space="preserve">
          <source>6.17.9. COMPUTE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7c3aae5f91b5640b81d45ad30d688283abc509" translate="yes" xml:space="preserve">
          <source>6.2. PROCEDURE DIVISION CHAINING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28180a9a472775ba83256e714650bc3544ac5b7" translate="yes" xml:space="preserve">
          <source>6.3. PROCEDURE DIVISION RETURNING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12e364f57775c0be12457ec4b9fb354be42de2f" translate="yes" xml:space="preserve">
          <source>6.4. PROCEDURE DIVISION Sections and Paragraphs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c25081114fd9d5153eec97619bcce78e532c6d8" translate="yes" xml:space="preserve">
          <source>6.5. DECLARATIVES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d9a8ddaf1bee98098c9ab0d556183e26b871b6" translate="yes" xml:space="preserve">
          <source>6.6. Table References</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193d1f1f5b9107a433c0ff0bb7acf82c4dd9e49f" translate="yes" xml:space="preserve">
          <source>6.7. Qualification of Data Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f474dd3e1bc38c4f7912ee54fca14552fc25579" translate="yes" xml:space="preserve">
          <source>6.8. Reference Modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af62606a9f57944ea2b92245c137ec270d53b16" translate="yes" xml:space="preserve">
          <source>6.9. Arithmetic Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57832bc5f86cc91e8706a0ab1dc8f2cd82f1349d" translate="yes" xml:space="preserve">
          <source>66-Level-Data-Item Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926745149d22c9692fbb16e393a9c063881613e9" translate="yes" xml:space="preserve">
          <source>7. Report Writer Usage Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eae7498d548392956e8824d693dd1e3a32a0988" translate="yes" xml:space="preserve">
          <source>7.1. RWCS Lexicon</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f484d0a96e6e1c12280dcd07ee32a77c3e6023" translate="yes" xml:space="preserve">
          <source>7.2. The Anatomy of a Report</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2e1167cc87b00b8f8c027db4355d70bb1329d6" translate="yes" xml:space="preserve">
          <source>7.3. The Anatomy of a Report Page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7757977bd2bfa28396637303119cd34c3de2d664" translate="yes" xml:space="preserve">
          <source>7.4. How RWCS Builds Report Pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee1bc56a4936992c5f11b981d3eb466329842ff" translate="yes" xml:space="preserve">
          <source>7.5. Control Hierarchy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3149ceede5b6295221aa75fdfd64cffdd10ae72" translate="yes" xml:space="preserve">
          <source>7.6. An Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d25912ca9c5877e2616311658889c4685709223" translate="yes" xml:space="preserve">
          <source>7.6.1. Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e883a5d64ba059f410697925726116123d027d81" translate="yes" xml:space="preserve">
          <source>7.6.2. Program</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852ca49cdb19e57b75790f985737b0d16822ee4d" translate="yes" xml:space="preserve">
          <source>7.6.3. Generated Report Pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661d823cfec065ce815f9e0ea79a31c3ffb9ee92" translate="yes" xml:space="preserve">
          <source>7.7. Control Hierarchy (Revisited)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d3a4033a23db70929989b052b58857f5fb8703" translate="yes" xml:space="preserve">
          <source>7.8. Turning PHYSICAL Page Formatting Into LOGICAL Formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be12303788580b1cd0ed27844b02822a73494a2" translate="yes" xml:space="preserve">
          <source>77-Level-Data-Item Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0370b1a0dcdd402ecd323c265062fd3556cf27" translate="yes" xml:space="preserve">
          <source>78-Level-Constant Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4cb650a0baca4597dd90028a8ee8918c6d344d" translate="yes" xml:space="preserve">
          <source>8. Interfacing With The OS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4792a512ae8afd44fd9b828735c740c8d1bd2c0" translate="yes" xml:space="preserve">
          <source>8.1. Compiling Programs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d722217a89d382d046545aa9aab051b9290501" translate="yes" xml:space="preserve">
          <source>8.1.1. cobc - The GnuCOBOL Compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37c4643d8dca0d95d012b8f146d5b4e889469ab" translate="yes" xml:space="preserve">
          <source>8.1.2. Compilation Time Environment Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2e9b36180af3d7d3d018fdfec488b2f04cb111" translate="yes" xml:space="preserve">
          <source>8.1.3. Predefined Compilation Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e094e51d71340b65bb2212fba9eaeddfdc5178" translate="yes" xml:space="preserve">
          <source>8.1.4. Locating Copybooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b31ca5e93338574f8834fdb470e8549a01eb84" translate="yes" xml:space="preserve">
          <source>8.1.5. Compiler Configuration Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63945a97771bd98490214775c0cb046a5f259db" translate="yes" xml:space="preserve">
          <source>8.2. Running Programs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fa9a11d71f86316facc00f24e6e87f9302d425" translate="yes" xml:space="preserve">
          <source>8.2.1. Direct Execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bb082384b348ff6beb93f60ec42778060d5dfb" translate="yes" xml:space="preserve">
          <source>8.2.2. Executing Dynamically-Loadable Libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60139a2ce28c45bb13c59cd24cb8f9f7b657a84" translate="yes" xml:space="preserve">
          <source>8.2.2.1. cobcrun - Command-line Execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba37125b15058dbf50033b2cdc427dcf374ede75" translate="yes" xml:space="preserve">
          <source>8.2.2.2. Dynamically Loaded Subprograms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6808e03d10a63f267acb9e4e2668bd50fbe5d826" translate="yes" xml:space="preserve">
          <source>8.2.3. Run Time Environment Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5da28cdd3d3bd2d725086343e270c4e1ba252e4" translate="yes" xml:space="preserve">
          <source>8.2.4. Program Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89067acc052caa33fec07b16758d4fdc675f30a8" translate="yes" xml:space="preserve">
          <source>8.3. Built-In System Subroutines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79eda0bf75753e1f10d45c879406567314916d4f" translate="yes" xml:space="preserve">
          <source>8.3.1. C$CALLEDBY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a115327d2a7060623c9b2c0a04e94713a3bffed" translate="yes" xml:space="preserve">
          <source>8.3.10. C$PARAMSIZE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf7aac631e8c58105a2adbfd0873db319e6638f" translate="yes" xml:space="preserve">
          <source>8.3.11. C$PRINTABLE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c505f4e5eafc16b09549c15aa85b2233e6216ff" translate="yes" xml:space="preserve">
          <source>8.3.12. C$SLEEP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7daa360f6efa6435b1da5f447e9df2230c252c" translate="yes" xml:space="preserve">
          <source>8.3.13. C$TOLOWER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838677db3206a420b91403ba8a929a00a8e52328" translate="yes" xml:space="preserve">
          <source>8.3.14. C$TOUPPER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af9ab48d5cb8f1d69ccfe53ae6d0238d55b31e6" translate="yes" xml:space="preserve">
          <source>8.3.15. CBL_AND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2705ddc2326251a5fb09228409bb6ec70f1a6062" translate="yes" xml:space="preserve">
          <source>8.3.16. CBL_CHANGE_DIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7812e60e340345e3840d9583fe2b590197f78546" translate="yes" xml:space="preserve">
          <source>8.3.17. CBL_CHECK_FILE_EXIST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa8327552ba58efa20b7e18cc3d2b0bce3da7a5" translate="yes" xml:space="preserve">
          <source>8.3.18. CBL_CLOSE_FILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a44b857f130cf8a5b521bb8c6b6e349f85ee750" translate="yes" xml:space="preserve">
          <source>8.3.19. CBL_COPY_FILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8320610a1213573a436cf9f72f895192ae5eae" translate="yes" xml:space="preserve">
          <source>8.3.2. C$CHDIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7956b54255de4f180d0de12550d68e123d3fab1" translate="yes" xml:space="preserve">
          <source>8.3.20. CBL_CREATE_DIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbf53eed80c5ae9fa975969cbbbe9667c862547" translate="yes" xml:space="preserve">
          <source>8.3.21. CBL_CREATE_FILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5d95ce8220c6ba3db591600c01b2894f3c0508" translate="yes" xml:space="preserve">
          <source>8.3.22. CBL_DELETE_DIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21fbb0621e7c8b52f43dc596d3febe313f1acfa" translate="yes" xml:space="preserve">
          <source>8.3.23. CBL_DELETE_FILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0725c3a931d82c0ac1f636a7b09cc3b76c84140" translate="yes" xml:space="preserve">
          <source>8.3.24. CBL_EQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76d3bf3c0a9cabdaf3eda1012138b99ab1e4072" translate="yes" xml:space="preserve">
          <source>8.3.25. CBL_ERROR_PROC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8326ade78e303c5b7bf1cf7b671223a45c4ff70d" translate="yes" xml:space="preserve">
          <source>8.3.26. CBL_EXIT_PROC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553a612b5aa5b8f7fdc3983c0687309ba868e4f5" translate="yes" xml:space="preserve">
          <source>8.3.27. CBL_FLUSH_FILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190b92c4ba0292099c83ba33519509a3598c3bfb" translate="yes" xml:space="preserve">
          <source>8.3.28. CBL_GC_FORK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b794cbc9e6297d68099aeaa48f34f76f78b59497" translate="yes" xml:space="preserve">
          <source>8.3.29. CBL_GC_GETOPT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ce9a10606af91aed1d764ff5b4fea33bd535a2" translate="yes" xml:space="preserve">
          <source>8.3.3. C$COPY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58882bd64da9201d957cc85ff2b12a0bf2ba1ff" translate="yes" xml:space="preserve">
          <source>8.3.30. CBL_GC_HOSTED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2ba7299bbc81abfb8eefc6d256a51e9a3561d5" translate="yes" xml:space="preserve">
          <source>8.3.31. CBL_GC_NANOSLEEP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c31f519814e9bf9dad463eb2fea79680eb91da" translate="yes" xml:space="preserve">
          <source>8.3.32. CBL_GC_PRINTABLE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d922af4f3a614a0033f3182e40a0eccf0d249a7" translate="yes" xml:space="preserve">
          <source>8.3.33. CBL_GC_WAITPID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891f3f00ef6137fff0c5e06133bb652690a21d01" translate="yes" xml:space="preserve">
          <source>8.3.34. CBL_GET_CSR_POS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcd07cb7fb58370a4c4d05adb78929674519ab7" translate="yes" xml:space="preserve">
          <source>8.3.35. CBL_GET_CURRENT_DIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e16a36494f46aab9819554fb2790d634036996" translate="yes" xml:space="preserve">
          <source>8.3.36. CBL_GET_SCR_SIZE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97179b70a5e0c38e73745ebecaca7aebca5977d" translate="yes" xml:space="preserve">
          <source>8.3.37. CBL_IMP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669fe6feb7ca5c619ca6748c7db95cb1d3bdfbcf" translate="yes" xml:space="preserve">
          <source>8.3.38. CBL_NIMP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971a0175a8b1320c6ff01d4f472ef56c0e89c5e9" translate="yes" xml:space="preserve">
          <source>8.3.39. CBL_NOR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f907bd4bbfb0aada60dd3700229010eca38ac2" translate="yes" xml:space="preserve">
          <source>8.3.4. C$DELETE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4045bf173bed499b686701a9dd28739744888eac" translate="yes" xml:space="preserve">
          <source>8.3.40. CBL_NOT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db432283c30bd616b4d7c8a8ccf429448a985d20" translate="yes" xml:space="preserve">
          <source>8.3.42. CBL_OPEN_FILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a881e318f38045eb975b4dd568b687d207346e5" translate="yes" xml:space="preserve">
          <source>8.3.43. CBL_OR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4077355364a50e1d8b2e992e07611b04dd1c9987" translate="yes" xml:space="preserve">
          <source>8.3.44. CBL_READ_FILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055f6e2de27e94343eb587fcb587f82c441801dc" translate="yes" xml:space="preserve">
          <source>8.3.45. CBL_RENAME_FILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9880fb7fc6c9fd6b8843018579f4d99fd123bc" translate="yes" xml:space="preserve">
          <source>8.3.46. CBL_TOLOWER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af239b24a77ac429500b39b109dc9d960780f9c" translate="yes" xml:space="preserve">
          <source>8.3.47. CBL_TOUPPER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b74fa789d31ba0c1a04a7f350e543bfff5d0ec" translate="yes" xml:space="preserve">
          <source>8.3.48. CBL_WRITE_FILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c090c8103fdc6158bbeed6089636388e1e4059fc" translate="yes" xml:space="preserve">
          <source>8.3.49. CBL_XOR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fa41df5da8d863ffadf4bd072fd15e0a03d3f9" translate="yes" xml:space="preserve">
          <source>8.3.5. C$FILEINFO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b9c1b06fd40e864f7ce856922c13da9e87f9f7" translate="yes" xml:space="preserve">
          <source>8.3.50. SYSTEM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d876a7c734038d02830c525c38c4ee0a2025e43" translate="yes" xml:space="preserve">
          <source>8.3.51. X&quot;91&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8af7ff9a7ffc1be1d3eaf02074087dc96300e2" translate="yes" xml:space="preserve">
          <source>8.3.51. X&amp;quot;91&amp;quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175ef6ff9138c778cd7b2ee05503e98ce3b5aa4a" translate="yes" xml:space="preserve">
          <source>8.3.52. X&quot;E4&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafd8c35fe11fa05df5c4c1adab47c8eeba25ff2" translate="yes" xml:space="preserve">
          <source>8.3.52. X&amp;quot;E4&amp;quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65faccc0a1875e64998bd30082068ab8419bf176" translate="yes" xml:space="preserve">
          <source>8.3.53. X&quot;E5&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d293692fb5fe0005e07c523dafca976dd055f2b4" translate="yes" xml:space="preserve">
          <source>8.3.53. X&amp;quot;E5&amp;quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b7d0802ea967bedf85035592c8d2e404bb2115" translate="yes" xml:space="preserve">
          <source>8.3.54. X&quot;F4&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe66f05174616f5ec164caeac3337952a2e2eb06" translate="yes" xml:space="preserve">
          <source>8.3.54. X&amp;quot;F4&amp;quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633cef5b5de34259d94c6a4b2294df4ed23de6e8" translate="yes" xml:space="preserve">
          <source>8.3.55. X&quot;F5&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc7561c9ada4bc757647dd1609f6584e99e9ffe" translate="yes" xml:space="preserve">
          <source>8.3.55. X&amp;quot;F5&amp;quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a68861b10fb73915965cc5d4ed8a6efdc04127" translate="yes" xml:space="preserve">
          <source>8.3.6. C$GETPID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195f53c747d66c288ded0761a88bd654c71a0464" translate="yes" xml:space="preserve">
          <source>8.3.7. C$JUSTIFY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78297c7c7d226c07bc80024d3b65f58328931916" translate="yes" xml:space="preserve">
          <source>8.3.8. C$MAKEDIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb6c67c6f01e8dafa1a4ad78c831c9cdd491978" translate="yes" xml:space="preserve">
          <source>8.3.9. C$NARG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fcf92feedc26b3be65eb9cf583eedb6e58e120e" translate="yes" xml:space="preserve">
          <source>8.4. Binary Truncation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6866e518f6fa5fb4ec02ba2f4bf9ffbbdd4a960e" translate="yes" xml:space="preserve">
          <source>88-Level-Data-Item Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507b32ccf1c452c33cf03e5cdd8b3ef3c75a85ce" translate="yes" xml:space="preserve">
          <source>9. Sub-Programming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57f5911d55a3f2a529bf3bc260354dd00c563ca" translate="yes" xml:space="preserve">
          <source>9.1. Subprogram Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2494a52f02c988179d89fc1f788a8dc2aab8782a" translate="yes" xml:space="preserve">
          <source>9.2. Independent vs Contained vs Nested Subprograms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394122cd93e45680852bf86d5efd6985ad9f5554" translate="yes" xml:space="preserve">
          <source>9.3. Alternate Entry Points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b3ff25ed844a8ba5c1fd5b4d8019feb1735986" translate="yes" xml:space="preserve">
          <source>9.4. Dynamic vs Static Subprograms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fa75951a1e546efc0f3f91cc42fe1c0731657b" translate="yes" xml:space="preserve">
          <source>9.5. Subprogram Execution Flow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9059fd683430b92a4d38a7191e3f02656952224e" translate="yes" xml:space="preserve">
          <source>9.5.1. Subprogram Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e953b298318c60f849e9fc988876150c2b37df" translate="yes" xml:space="preserve">
          <source>9.5.1. Subroutine Execution Flow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d88ce61d960e0ee3643b98165cd39965c08709" translate="yes" xml:space="preserve">
          <source>9.5.2. User-Defined Function Execution Flow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47c6f10cfc607afd8b6bc547ccdc695eb2677fc" translate="yes" xml:space="preserve">
          <source>9.6. Sharing Data Between Calling and Called Programs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da07ccaa3ab6d3d46f11edb8c27f339cda66773a" translate="yes" xml:space="preserve">
          <source>9.6.1.1. Calling Program Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4868bde277685d9e9d1dc519f906bb0bddd41e" translate="yes" xml:space="preserve">
          <source>9.6.1.2. Called Program Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e98c0c898aeb601166952331e3c7250718ebb7" translate="yes" xml:space="preserve">
          <source>9.6.2. GLOBAL Data Items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef053aec8b9b7f7b3445f3dff559c3bf1bf95a9d" translate="yes" xml:space="preserve">
          <source>9.6.3. EXTERNAL Data Items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f42368f78e81b8b0fa8db0ea99ff2590474b66" translate="yes" xml:space="preserve">
          <source>9.7. Recursive Subprograms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6335f9cea91a29e365378986b8048226776b192" translate="yes" xml:space="preserve">
          <source>9.8. Combining GnuCOBOL and C Programs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1740ebee4d76b768329309683eb236ef485de4" translate="yes" xml:space="preserve">
          <source>9.8.1. GnuCOBOL Run-Time Library Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c813d4f13a5e2960fc6403b25c225a9ec585a81e" translate="yes" xml:space="preserve">
          <source>9.8.2. String Allocation Differences Between GnuCOBOL and C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42b348e358e4f9d13f2e83301feb5f3a0f022dc" translate="yes" xml:space="preserve">
          <source>9.8.3. Matching C Data Types with GnuCOBOL USAGE&amp;rsquo;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbc95b8fe0efc38694b670a6cc9d4503f87be13" translate="yes" xml:space="preserve">
          <source>9.8.3. Matching C Data Types with GnuCOBOL USAGE’s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3a01c7639fcad9f2f08782f45e3899dbd7f65e" translate="yes" xml:space="preserve">
          <source>9.8.4. GnuCOBOL Main Programs CALLing C Subprograms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec915472f1d5bee406c3d188f451fd434910771e" translate="yes" xml:space="preserve">
          <source>9.8.5. C Main Programs Calling GnuCOBOL Subprograms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e4be67f18406c83ae2a8a538e343249dfc98df" translate="yes" xml:space="preserve">
          <source>9.999999999999999&amp;times;10^384 to 9.999999999999999&amp;times;10^384</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea0cda34756ceab8676f8ff1226de5282961ed5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-ADDR&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-ADDR&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="95659af1cf4c8006d068e68ca221fe90a8b6efa2" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-BOOL&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-BOOL&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bfa1e9327061db43e9b4508e7f072e1d8997819b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-CD&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-CD&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="87822d92d96d3e59558f2c729aa492f3df0e2d32" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-CHR&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-CHR&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="02c084313718558c313d083c9a528837c506cb84" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-CONST&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-CONST&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ffc53f1d23caf13a145e7fe5060f02c633272da7" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-DT&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-DT&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1402bac8d1d5d9a04aa9a9ecca8f87bc49dd407a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-DTTM&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-DTTM&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="cb441acdbd8f152cdb7930e883521d4131a02569" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-FILE&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-FILE&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="be8460e10de603aded4d372d2d1eedde3ff283aa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-IDX&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-IDX&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a9fc4ad681c7811f4b0edbb7527ea5f052f40ad9" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-NM&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-NM&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e0b6c4e59ec423e1b3b525191d5df9cda4580563" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-NUM&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-NUM&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="12ff3a778a22fa3ee751dfc6321f7786e8d612ec" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-PTR&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-PTR&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0dded5363e016a12faf775b71a8b79a47b00f056" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-QTY&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-QTY&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="17a648bee6c4c40fa2cc3094e9741178c997b038" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-REC&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-REC&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1326c600b572e2b1538f8aec92528b5132276393" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-SCR&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-SCR&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4a3460d359a65456ed4a85aef63178685600ae6c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-SUB&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-SUB&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="63bb4a2ff3d7de10d6ba0880595f62c6f73c3314" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-TEL&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-TEL&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="2d28d08567f0db35a8f7b42b325428e4ae40696d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-TM&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-TM&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="391de9150efca89a6143411cca11716d26bdcfb5" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;-TXT&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;-TXT&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="30de2c72ad42f7b926718d3f4843734efcb231a8" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;1-6 &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;1-6 &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="a2df97c2b24c478910caae84c0ab0b361901b61f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;12-72 &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;12-72 &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="7b35a1476228d8d2217a70c4a708b9e8b257300e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;7 &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;7 &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="de1c40b1b11dd5c4afbb6468ea3baa5c24123f18" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;73-80 &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;73-80 &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8c7af1bb9eeaa71507793a64c10d8de7c17c5e28" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;8-11 &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;8-11 &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="18dc1cf7d5ad405552caeac55fe31dab6789e077" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;CONSOLE&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;CONSOLE&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="4f250ef6a682db7f9fa432bb522acc483f626753" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;PRINTER&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;PRINTER&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bd959345ab580937be10af95d5da10ead6ed8cdb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;STDERR&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;STDERR&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="7e0c3c9cbc61b174e951a6563b82dab20f6770fa" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;STDIN&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;STDIN&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="145d6cb68cf40a4bba7e29129eca34c39bd9bf8d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;STDOUT&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;STDOUT&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="869f0edd6ef594730de384f6e12bee46ec648d10" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;SYSERR&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;SYSERR&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="63c3c772696cd4267993cd82fcd1e0d199182ab0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;SYSIN&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;SYSIN&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="f9e6e06d7326c5afdbcae2939302eb641083f176" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;SYSIPT&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;SYSIPT&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="1c3959a798b217aaf49d53e39499a73237d37c3f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;SYSLIST&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;SYSLIST&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="0496d1939eb4e65a9d6574319fdca452b43e5242" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;SYSLST&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;SYSLST&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="8d358723b2e92762da949c77e516661d4e770ffb" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;&lt;code&gt;SYSOUT&lt;/code&gt; &lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;&lt;code&gt;SYSOUT&lt;/code&gt; &lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bc58dfbe93a0f80a5ef3ba3936cfe97dd980e5e0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Benchmark Score&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7658415c0c7d02040f68aa27e9e4665ccf025df" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Concatenate two or more strings:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f4d624076bc15b5fdd34dbc6cc44a0b5ec3572" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Conversion of a numeric time or date to a formatted character string:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc118e89038c7277cd18c6c0222a948c5e493cd" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Convert a binary value to its corresponding character in the program&amp;rsquo;s character set:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94158bf7a618df377b7ef1d4dc2bf409553be2a6" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Convert a character string to lower-case:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c48f8f0890c62d236e18c75b2fdd411ffc3773" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Convert a character string to only printable characters:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0de41c425612a87573a5ea0e7519abe419c3b36" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Convert a character string to upper-case:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83d7baef00b2607704552ac0122b2011fb1de8e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Convert a character to its numeric value in the program&amp;rsquo;s character set:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966e568781301d093869ff40fb258b05c52c2f7a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Count occurrences of sub strings in a larger string:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6fa3aebb17080fb5ed87bab7dc6b917975601b" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Decode a formatted numeric string back to a numeric value:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48533d8d67f9bd9067cb89acf52cd18994438f69" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Determine the length of a string or data-item capable of storing strings:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04723b3562f7fcc755601e2a9636c71678c193d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Extract a sub string from a string based on its starting character position and length:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b8abd980093288378905798b6973327a73ee0f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;FIXED&lt;/b&gt; &amp;mdash; An entire source line will be treated as a comment (and will be ignored by the compiler) by coding an asterisk (&quot;*&quot;) in column seven (7). &lt;b&gt;FREE&lt;/b&gt; &amp;mdash; An entire source line will be treated as a comment (and will be ignored by the compiler) by coding the sequence &quot;*&amp;gt;&quot;, starting in any column, as the first non-blank characters on the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246308d2cede81104e25b56f5066def87d1484f1" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;FIXED&lt;/b&gt; &amp;mdash; An entire source line will be treated as a comment by coding a slash (&quot;/&quot;) in column seven (7). Many COBOL compilers will also issue a form-feed in the program listing so that the &quot;/&quot; line is at the top of a new page. The GnuCOBOL compiler does not support this form-feed behaviour. The GnuCOBOL Interactive Compiler, or GCic,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51425a093e279208b7842a1b40d211ae6c134036" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;FIXED&lt;/b&gt; &amp;mdash; Any text following the character sequence &quot;*&amp;gt;&quot; on a source line will be treated as a comment. The &quot;*&quot; must appear in column seven (7) or beyond. &lt;b&gt;FREE&lt;/b&gt; &amp;mdash; Any text following the character sequence &quot;*&amp;gt;&quot; on a source line will be treated as a comment. The &quot;*&quot; may appear in any column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1d727ad841d3d987b2300a109aafff6341a1c3" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;FIXED&lt;/b&gt; &amp;mdash; Blank lines may be inserted as desired. &lt;b&gt;FREE&lt;/b&gt; &amp;mdash; Blank lines may be inserted as desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a08d61b675672b65fcd95c5224453555c95b56" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;FIXED&lt;/b&gt; &amp;mdash; By coding a &quot;D&quot; in column 7 &lt;b&gt;FREE&lt;/b&gt; &amp;mdash; By specifying the character sequence &quot;&amp;gt;&amp;gt;D&quot; Debugging statements may be compiled either by specifying the&lt;code&gt;-fdebugging-line&lt;/code&gt;switch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d05fbbfcbb41bf2a493e3073b514aac37a45828" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Family&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Family&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="c5efd85cd77dc6b588b6c11642bb7d08301de7c4" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Format a numeric item for output, including thousands-separators (&quot;,&quot; in the USA), currency symbols (&quot;$&quot; in the USA), decimal points, credit/Debit Symbols, Leading Or Trailing Sign Characters:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678975685c2193ad716d1fb9e945a42127c972d0" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Justification (left, right or centred) of a string field:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03388cfc5d73528703a0bd0dff691d54c2040f2c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Model&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Model&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="750612cf38d22abe384ffb134218ca06e872aa44" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Monoalphabetic substitution of one or more characters in a string with different characters:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d31dccf50538462597840d0646c1fba1614f211" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Parse a string, breaking it up into sub strings based upon one or more delimiting character sequences&lt;a href=&quot;#FOOT1&quot; name=&quot;DOCF1&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt;:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ce10c2f1ac996b47dd968e2764e75a0e7de98d" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Removal of leading or trailing spaces from a string:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174d9c6bc4518764b348266979f3875ce881dd33" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Substitution of a single sub string with another of the same length, based upon the sub strings starting character position and length:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d382d6bc3631e36e85b02ca0d98cff9e39050c" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Substitution of one or more sub strings in a string with replacement sub strings of a potentially different length, regardless of where they occur:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47fbc9fd56193fd137029bf867ec1ab9ca45922" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Substitution of one or more sub strings in a string with replacement sub strings of the same length, regardless of where they occur:&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb90baf2765afea2cc836799037ebe8813b0e74e" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;Vendor&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;Vendor&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="2095576d47685f726f0ce5386c72e82502fbad7a" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;When the value is longer than the field size...&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719405fc7aa280801462f83ce9b6358803beb94f" translate="yes" xml:space="preserve">
          <source>&lt;b&gt;When the value is shorter than the field size...&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8de48c72af5dd16280404d27d3dc03f82d75c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt; Old Old New&lt;/code&gt;&lt;code&gt;Arg 1 Arg 2 Arg 2&lt;/code&gt;&lt;code&gt; Bit Bit Bit&lt;/code&gt;&lt;code&gt;===== ===== =====&lt;/code&gt;&lt;code&gt; 0 0 0&lt;/code&gt;&lt;code&gt; 0 1 0&lt;/code&gt;&lt;code&gt; 1 0 0&lt;/code&gt;&lt;code&gt; 1 1 1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e0aa534b8ffffdc844ce8cda878d9f4c1a7295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt; Old Old New&lt;/code&gt;&lt;code&gt;Arg 1 Arg 2 Arg 2&lt;/code&gt;&lt;code&gt; Bit Bit Bit&lt;/code&gt;&lt;code&gt;===== ===== =====&lt;/code&gt;&lt;code&gt; 0 0 0&lt;/code&gt;&lt;code&gt; 0 1 0&lt;/code&gt;&lt;code&gt; 1 0 1&lt;/code&gt;&lt;code&gt; 1 1 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbacbe6b5e6e1530fdc46b086a0a8196480cb12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt; Old Old New&lt;/code&gt;&lt;code&gt;Arg 1 Arg 2 Arg 2&lt;/code&gt;&lt;code&gt; Bit Bit Bit&lt;/code&gt;&lt;code&gt;===== ===== =====&lt;/code&gt;&lt;code&gt; 0 0 0&lt;/code&gt;&lt;code&gt; 0 1 1&lt;/code&gt;&lt;code&gt; 1 0 1&lt;/code&gt;&lt;code&gt; 1 1 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e57785c8e57765afcfa618cfd5694f705cd145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt; Old Old New&lt;/code&gt;&lt;code&gt;Arg 1 Arg 2 Arg 2&lt;/code&gt;&lt;code&gt; Bit Bit Bit&lt;/code&gt;&lt;code&gt;===== ===== =====&lt;/code&gt;&lt;code&gt; 0 0 0&lt;/code&gt;&lt;code&gt; 0 1 1&lt;/code&gt;&lt;code&gt; 1 0 1&lt;/code&gt;&lt;code&gt; 1 1 1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330173835355735752dfe872275b341120e03327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt; Old Old New&lt;/code&gt;&lt;code&gt;Arg 1 Arg 2 Arg 2&lt;/code&gt;&lt;code&gt; Bit Bit Bit&lt;/code&gt;&lt;code&gt;===== ===== =====&lt;/code&gt;&lt;code&gt; 0 0 1&lt;/code&gt;&lt;code&gt; 0 1 0&lt;/code&gt;&lt;code&gt; 1 0 0&lt;/code&gt;&lt;code&gt; 1 1 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7d8795f92f1d4b8da51bb2c350f3a60efa52e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt; Old Old New&lt;/code&gt;&lt;code&gt;Arg 1 Arg 2 Arg 2&lt;/code&gt;&lt;code&gt; Bit Bit Bit&lt;/code&gt;&lt;code&gt;===== ===== =====&lt;/code&gt;&lt;code&gt; 0 0 1&lt;/code&gt;&lt;code&gt; 0 1 0&lt;/code&gt;&lt;code&gt; 1 0 0&lt;/code&gt;&lt;code&gt; 1 1 1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72df296ee51b26ea4085a2953a93aa800f435eaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt; Old Old New&lt;/code&gt;&lt;code&gt;Arg 1 Arg 2 Arg 2&lt;/code&gt;&lt;code&gt; Bit Bit Bit&lt;/code&gt;&lt;code&gt;===== ===== =====&lt;/code&gt;&lt;code&gt; 0 0 1&lt;/code&gt;&lt;code&gt; 0 1 1&lt;/code&gt;&lt;code&gt; 1 0 0&lt;/code&gt;&lt;code&gt; 1 1 1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947fe353f7197a69e5222147040caa10358be1da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;SET &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt; AS &amp;lt;&lt;i&gt;literal-1&lt;/i&gt;&amp;gt;&lt;/code&gt;&amp;equiv;&lt;code&gt;&amp;gt;&amp;gt;DEFINE &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt; AS &amp;lt;&lt;i&gt;literal-1&lt;/i&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;SET &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt; AS &amp;lt;&lt;i&gt;literal-1&lt;/i&gt;&amp;gt;&lt;/code&gt;&amp;equiv;&lt;code&gt;&amp;gt;&amp;gt;DEFINE &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt; AS &amp;lt;&lt;i&gt;literal-1&lt;/i&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3df10ff961d2555219059ff9c712fdca7acd8db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;SET &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt;&lt;/code&gt;&amp;equiv;&lt;code&gt;&amp;gt;&amp;gt;DEFINE &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt; AS OFF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;SET &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt;&lt;/code&gt;&amp;equiv;&lt;code&gt;&amp;gt;&amp;gt;DEFINE &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt; AS OFF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8a0efa1c0bb9edda5d60697765caa8f22eec800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;SET CONSTANT &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt; AS &amp;lt;&lt;i&gt;literal-1&lt;/i&gt;&amp;gt;&lt;/code&gt;&amp;equiv;&lt;code&gt;&amp;gt;&amp;gt;DEFINE CONSTANT &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt; AS &amp;lt;&lt;i&gt;literal-1&lt;/i&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;SET CONSTANT &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt; AS &amp;lt;&lt;i&gt;literal-1&lt;/i&gt;&amp;gt;&lt;/code&gt;&amp;equiv;&lt;code&gt;&amp;gt;&amp;gt;DEFINE CONSTANT &amp;lt;&lt;i&gt;cdf-variable-1&lt;/i&gt;&amp;gt; AS &amp;lt;&lt;i&gt;literal-1&lt;/i&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a2265e57ab55ed6d36ffa7bde36cf29ba0d9c1ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;SET SOURCEFORMAT AS FIXED&lt;/code&gt;&amp;equiv;&lt;code&gt;&amp;gt;&amp;gt;SOURCE FORMAT IS FIXED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;SET SOURCEFORMAT AS FIXED&lt;/code&gt;&amp;equiv;&lt;code&gt;&amp;gt;&amp;gt;SOURCE FORMAT IS FIXED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c9c6785c8947c75d363a7eff506507c21605eb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&amp;gt;SET SOURCEFORMAT AS FREE&lt;/code&gt;&amp;equiv;&lt;code&gt;&amp;gt;&amp;gt;SOURCE FORMAT IS FREE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;gt;&amp;gt;SET SOURCEFORMAT AS FREE&lt;/code&gt;&amp;equiv;&lt;code&gt;&amp;gt;&amp;gt;SOURCE FORMAT IS FREE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c190e2275dd632260f4289b5b8f19fdd9107d954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;and&lt;code&gt;-&lt;/code&gt;should not be coded in the same &amp;lt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt;and&lt;code&gt;-&lt;/code&gt;should not be coded in the same &amp;lt;</target>
        </trans-unit>
        <trans-unit id="39c6f58e552bd2dbf58d249069d6d90391e6a93c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ACCEPT FROM COMMAND-LINE&lt;/code&gt;(see &lt;a href=&quot;#ACCEPT-FROM-COMMAND_002dLINE&quot;&gt;ACCEPT FROM COMMAND-LINE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d29d16289149d766c251db50589861cf0cfadd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ACCESS MODE SEQUENTIAL&lt;/code&gt; the default&lt;code&gt;ACCESS MODE&lt;/code&gt;if none is specified, indicates that the records of the file will be processed in a sequential manner, according to their physical sequence in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958ad1140127e8ed2623ddf2d209fc82b3f68158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALL&lt;/code&gt;&amp;mdash; identifies every possible target sub string that occurs within the target range. There are three occurrences of&lt;code&gt;ALL 'XX'&lt;/code&gt;found in&lt;code&gt;aXXabbXXccXXdd&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b264df78c930985c607d3d7d393ffc87249754f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ASSIGN TO DISC '&amp;lt;&lt;i&gt;file-name-1&lt;/i&gt;&amp;gt;'&lt;/code&gt;will be assumed if there is no&lt;code&gt;ASSIGN&lt;/code&gt;clause on a&lt;code&gt;SELECT&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daef2abb09779675662710774bddfe1e809d7cce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTO&lt;/code&gt;(see &lt;a href=&quot;#AUTO&quot;&gt;AUTO&lt;/a&gt;),&lt;code&gt;AUTO-SKIP&lt;/code&gt;(see &lt;a href=&quot;#AUTO_002dSKIP&quot;&gt;AUTO-SKIP&lt;/a&gt;),&lt;code&gt;AUTOTERMINATE&lt;/code&gt;(see &lt;a href=&quot;#AUTOTERMINATE&quot;&gt;AUTOTERMINATE&lt;/a&gt;),&lt;code&gt;TAB&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817636e05b1a11bf7be7935c4ea5e4f27e34cc46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AUTO&lt;/code&gt;&lt;code&gt;AUTO-SKIP&lt;/code&gt;and&lt;code&gt;AUTOTERMINATE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AUTO&lt;/code&gt;&lt;code&gt;AUTO-SKIP&lt;/code&gt;and&lt;code&gt;AUTOTERMINATE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2932160b26707dc45144b276b9325d9bc251275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BACKGROUND-COLOR&lt;/code&gt;(see &lt;a href=&quot;#BACKGROUND_002dCOLOR&quot;&gt;BACKGROUND-COLOR&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d5306041d6381d44c6dc1404e109b0f5bbb7b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BACKGROUND-COLOR&lt;/code&gt;and&lt;code&gt;BACKGROUND-COLOUR&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BACKGROUND-COLOR&lt;/code&gt;and&lt;code&gt;BACKGROUND-COLOUR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81ec1967dcaad2f814d5f38237bf32c4f6422580" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BEEP&lt;/code&gt;(see &lt;a href=&quot;#BEEP&quot;&gt;BEEP&lt;/a&gt;),&lt;code&gt;BELL&lt;/code&gt;(see &lt;a href=&quot;#BELL&quot;&gt;BELL&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e157335726013f38484e51b857cb5ebf09c493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BELL&lt;/code&gt;and&lt;code&gt;BEEP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BELL&lt;/code&gt;and&lt;code&gt;BEEP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5c163f35f02a1722e0ba3b5e69e1cc5a3790eb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-C-LONG UNSIGNED&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~ ~~~~~~~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7da8ef3b55b37c1bb2ce27d886a8829b5df4f7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-C-LONG [ SIGNED ]&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ba6511d1d6a7990750f4f449c1cfdfa68d5204" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-CHAR UNSIGNED&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~ ~~~~~~~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5c671c65a59494f25723a40d6b4e6fb5a4a036" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-CHAR [ SIGNED ]&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44baba28c7e9a1097e11e6ef3336f031c2bd5bca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-DOUBLE UNSIGNED&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~ ~~~~~~~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b2b05c502d4421a184eeb71976cd7db7934403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-DOUBLE [ SIGNED ]&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530fbdae8ce7276d96508e14a7c78338f3cc88d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-INT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY-INT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff28fda287f3f3f037f5baf059139fe20d629337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-LONG UNSIGNED&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~ ~~~~~~~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8c595140fdc9841bb70f037b2fa5dc1edeaf6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-LONG [ SIGNED ]&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4f92ca225aeefeb42f4a47b998ef8210da3265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-LONG-LONG&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY-LONG-LONG&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b6385087d802acdb3be7c15d9c280da3eab0595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-SHORT UNSIGNED&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~ ~~~~~~~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b25fda6452ce456e31a06a3c1658128f34a8b3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY-SHORT [ SIGNED ]&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3687bea1909b8ab1cdb27c0541706d18ad1fe83d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BINARY&lt;/code&gt;&lt;code&gt;~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BINARY&lt;/code&gt;&lt;code&gt;~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f476b6fb417f6a293cc45c03551afb8ced395db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BLANK&lt;/code&gt;(see &lt;a href=&quot;#BLANK&quot;&gt;BLANK&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda6b7ab21f670a56d6b1c665923af84006b60c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BLINK&lt;/code&gt;(see &lt;a href=&quot;#BLINK&quot;&gt;BLINK&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e246157845430dac6dc162bb0f6e2a92b00511b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BY REFERENCE&lt;/code&gt;is the assumed default for the first&lt;code&gt;USING&lt;/code&gt;argument should no&lt;code&gt;BY&lt;/code&gt;clause be specified for it. Subsequent arguments will assume the&lt;code&gt;BY&lt;/code&gt;specification of the argument prior to them should they lack a&lt;code&gt;BY&lt;/code&gt;clause of their own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8b61dc1fcf03f04ac09ed834c551fe6a814537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BYTE-LENGTH&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#BYTE_002dLENGTH&quot;&gt;BYTE-LENGTH&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df65cf9a0c190d0da51f0ef2568f492c1b71ea83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C$JUSTIFY&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#C_0024JUSTIFY&quot;&gt;C$JUSTIFY&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52329f196fe46179f64b73852ef5a53091f1839b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C$PRINTABLE&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#C_0024PRINTABLE&quot;&gt;C$PRINTABLE&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7335b2972494de1180b4f54b98fe33e9bec8cf00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C$TOLOWER&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#C_0024TOLOWER&quot;&gt;C$TOLOWER&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ca3e3e1b645307bdba82198e97dcac0d4998ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C$TOUPPER&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#C_0024TOUPPER&quot;&gt;C$TOUPPER&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a55d071be68f42597bd9452cae32bf90cb4cec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CBL_TOLOWER&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fTOLOWER&quot;&gt;CBL_TOLOWER&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681ab2dffef6c9662a26b5e7811eae59ff173bc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CBL_TOUPPER&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fTOUPPER&quot;&gt;CBL_TOUPPER&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064068fffee9f8cbb41e40da5e35304a86bf6f6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHAR&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#CHAR&quot;&gt;CHAR&lt;/a&gt;). Add 1 to argument before invoking the function; the description of the&lt;code&gt;CHAR&lt;/code&gt;intrinsic function presents a technique utilizing the&lt;code&gt;MOVE&lt;/code&gt;statement that will accomplish the same thing without the need of adding 1 to the numeric argument value first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794ddc387f6f9a80c6bd1bc4f67073bda2028b55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLOSE&lt;/code&gt;(see &lt;a href=&quot;#CLOSE&quot;&gt;CLOSE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5465bb47af198b0c8a2330367b9091d3797bb21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMMIT&lt;/code&gt;(see &lt;a href=&quot;#COMMIT&quot;&gt;COMMIT&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064007a664e04fdeb1623e9da63c9ea1fba3f5ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMPUTATIONAL&lt;/code&gt;&lt;code&gt;~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;COMPUTATIONAL&lt;/code&gt;&lt;code&gt;~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83d8bcc92641586d1aa03e2ba26b1599e71c6b99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMP[UTATIONAL]-1&lt;/code&gt;&lt;code&gt;~~~~ ~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0d1ec809bad33a7c22a99cea6bf82961e05f9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMP[UTATIONAL]-2&lt;/code&gt;&lt;code&gt;~~~~ ~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cd02c1a9d9469cc5dfb631455cde756b6992bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMP[UTATIONAL]-3&lt;/code&gt;&lt;code&gt;~~~~ ~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163bb94bdec44936b97de9dee9580029455a031b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMP[UTATIONAL]-4&lt;/code&gt;&lt;code&gt;~~~~ ~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921eecc21d627d73754c208254e766c5c2196236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMP[UTATIONAL]-5&lt;/code&gt;&lt;code&gt;~~~~ ~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5d36310f963d7b2894dea425254596e314881a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMP[UTATIONAL]-6&lt;/code&gt;&lt;code&gt;~~~~ ~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10339d1bcd12ee939faabdded722d6b8aaadb699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMP[UTATIONAL]-X&lt;/code&gt;&lt;code&gt;~~~~ ~~&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d84a949e00a1a51937f4fbe1b79e94b237425a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONCATENATE&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#CONCATENATE&quot;&gt;CONCATENATE&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67ad1e377c0d21fe772de97eebab15b34f0c96e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COPY&lt;/code&gt;statements are used to import copybooks (see &lt;a href=&quot;#Copybooks&quot;&gt;Copybooks&lt;/a&gt;) into a program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897a255fac614e64ec80955f9645de1878d46a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COPY&lt;/code&gt;statements may be used anywhere within a COBOL program where the code contained within the copybook would be syntactically valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc6e5c531c3f151a9836ee5b23d0410f3e14912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DELETE&lt;/code&gt;(see &lt;a href=&quot;#DELETE&quot;&gt;DELETE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c9d3cbec5de82ba1ebcd90b3aa872b6b4a7d60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DISC&lt;/code&gt;or&lt;code&gt;DISK&lt;/code&gt;will assume an attachment to a file named &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f551885ced35247c59a1461d19280b48cf2dffb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DISPLAY&lt;/code&gt;&lt;code&gt;~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DISPLAY&lt;/code&gt;&lt;code&gt;~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0843af24f4238978f20cff01c56df9841a4b0163" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DISPLAY&lt;/code&gt;will assume an attachment to the&lt;code&gt;STDOUT&lt;/code&gt;logical device; these files should only be used for output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fafa69d2b5ca11e288fa238aa73e52ad0cdad3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EC&lt;/code&gt;and&lt;code&gt;EXCEPTION CONDITION&lt;/code&gt;are interchangeable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed2145ad50752ab44e3e957febd2dafa9a11a10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERASE&lt;/code&gt;(see &lt;a href=&quot;#ERASE&quot;&gt;ERASE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a633620fc076d428715d30ef5eaca66464aab58e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERASE&lt;/code&gt;will blank-out screen contents from the location where the screen data item whose description contains this clause will be displayed, forward until the end of the screen &lt;code&gt;ERASE EOS&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ff863c2504571661d1366fba4f2dda4df4d616" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXTERNAL&lt;/code&gt;cannot be combined with&lt;code&gt;BASED&lt;/code&gt;(see &lt;a href=&quot;#BASED&quot;&gt;BASED&lt;/a&gt;),&lt;code&gt;GLOBAL&lt;/code&gt;(see &lt;a href=&quot;#GLOBAL&quot;&gt;GLOBAL&lt;/a&gt;) or&lt;code&gt;REDEFINES&lt;/code&gt;(see &lt;a href=&quot;#REDEFINES&quot;&gt;REDEFINES&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306cdea655c94bcea71564b5fb7bfdc3b8e492c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXTERNAL&lt;/code&gt;cannot be combined with&lt;code&gt;GLOBAL&lt;/code&gt;or&lt;code&gt;REDEFINES&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3641d435e9691968431947d51b5b18d91ea984c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FINAL&lt;/code&gt;CONTROL FOOTING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5171fa7525a7b67462ded3fcb4ccc1fdb5e54cc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FIRST DETAIL&lt;/code&gt;&amp;mdash; the HEADING value is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdf816000e8f93cd9172d2904c2d2e99efe201e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FIRST DETAIL&lt;/code&gt;not &amp;gt;&lt;code&gt;LAST CONTROL HEADING&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6880bdfba270a17546e149cd5f888775ea07c677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FIRST&lt;/code&gt;&amp;mdash; the first occurrence of the target sub string found within the target range. The&lt;code&gt;FIRST 'XX'&lt;/code&gt;found in&lt;code&gt;aXXabbXXccXXdd&lt;/code&gt;would be the one found between the &quot;a&quot; and &quot;b&quot; characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbb9c69c84367cb464ff48b8ffc6a2a9af85241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FLOAT-DECIMAL-16&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FLOAT-DECIMAL-16&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0b9f48bd3fc25fd9e0017fb5a0c74b7d707e615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FLOAT-DECIMAL-34&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FLOAT-DECIMAL-34&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0dcdeaae09fc4e80ce30519d7e013fcb064c754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FLOAT-LONG&lt;/code&gt;&lt;code&gt;~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FLOAT-LONG&lt;/code&gt;&lt;code&gt;~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b130ec1b5b3b85263b7273dd8e6138483e1fb0d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FLOAT-SHORT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FLOAT-SHORT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74573cb5c3d3f94101b57fb14e74e9f506c6a879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOOTING&lt;/code&gt;&amp;mdash; the value from&lt;code&gt;LAST DETAIL&lt;/code&gt;or, if that is absent, the value from&lt;code&gt;PAGE LIMIT&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0a64e1a11e6c4187086e2f5d0ec6894f0865d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOREGROUND-COLOR&lt;/code&gt;(see &lt;a href=&quot;#FOREGROUND_002dCOLOR&quot;&gt;FOREGROUND-COLOR&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5493bd409f52169c38eb32af4063b8293439f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOREGROUND-COLOR&lt;/code&gt;and&lt;code&gt;FOREGROUND-COLOUR&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FOREGROUND-COLOR&lt;/code&gt;and&lt;code&gt;FOREGROUND-COLOUR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49275cf7076caeba03cb282d2d3508584847dd79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FULL&lt;/code&gt;(see &lt;a href=&quot;#FULL&quot;&gt;FULL&lt;/a&gt;),&lt;code&gt;LENGTH-CHECK&lt;/code&gt;(see &lt;a href=&quot;#LENGTH_002dCHECK&quot;&gt;LENGTH-CHECK&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167a06574a23b3e570ddf2f2a350f764ce166deb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FULL&lt;/code&gt;and&lt;code&gt;LENGTH-CHECK&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FULL&lt;/code&gt;and&lt;code&gt;LENGTH-CHECK&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="305ae84bdbfb79b961982c4a4c25c053d7a256ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GLOBAL&lt;/code&gt;cannot be combined with&lt;code&gt;EXTERNAL&lt;/code&gt;(see &lt;a href=&quot;#EXTERNAL&quot;&gt;EXTERNAL&lt;/a&gt;),&lt;code&gt;REDEFINES&lt;/code&gt;(see &lt;a href=&quot;#REDEFINES&quot;&gt;REDEFINES&lt;/a&gt;) or&lt;code&gt;BASED&lt;/code&gt;(see &lt;a href=&quot;#BASED&quot;&gt;BASED&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e398aa2263ff6ed6366b663df4dce47d2252c04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEADING&lt;/code&gt;&amp;mdash; the default is one (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02ea4889b3dcea5add3d292f7c2e49e742bba1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEADING&lt;/code&gt;not &amp;gt;&lt;code&gt;FIRST DETAIL&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0713b80cba11ab95555936e3b52fd105cfcb9f1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HIGHLIGHT&lt;/code&gt;(see &lt;a href=&quot;#HIGHLIGHT&quot;&gt;HIGHLIGHT&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d0974f13078b22bd8750841c348afe03d1effc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INDEX&lt;/code&gt;&lt;code&gt;~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INDEX&lt;/code&gt;&lt;code&gt;~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd19b7f15bae0986827fec8b13d99a7c5519e1a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSPECT&lt;/code&gt;statement (see &lt;a href=&quot;#INSPECT&quot;&gt;INSPECT&lt;/a&gt;) with a&lt;code&gt;REPLACING&lt;/code&gt;clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a421abd5e0fbc694379b03aa63488e5ca8c0906" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSPECT&lt;/code&gt;statement (see &lt;a href=&quot;#INSPECT&quot;&gt;INSPECT&lt;/a&gt;) with the&lt;code&gt;CONVERTING&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2ecd960a516b291156b9b027a7b17176403dcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSPECT&lt;/code&gt;statement (see &lt;a href=&quot;#INSPECT&quot;&gt;INSPECT&lt;/a&gt;) with the&lt;code&gt;TALLYING&lt;/code&gt;clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a80179bad389a1f1cdd6023f32cfaea14a9d559" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEYBOARD&lt;/code&gt;will assume an attachment to the&lt;code&gt;STDIN&lt;/code&gt;logical device; these files should only be used for input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75adb5d60bc635a26bf56760a14dc1c6faaf5753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LAST CONTROL HEADING&lt;/code&gt;&amp;mdash; the value from&lt;code&gt;LAST DETAIL&lt;/code&gt;or, if that is absent, the value from&lt;code&gt;FOOTING&lt;/code&gt;or, if that too is absent, the value from&lt;code&gt;PAGE LIMIT&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19b210cf5e87015a24388b9860f4146de88dbbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LAST CONTROL HEADING&lt;/code&gt;not &amp;gt;&lt;code&gt;LAST DETAIL&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60017656ee2c320aab764023e0657e937b62388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LAST DETAIL&lt;/code&gt;&amp;mdash; the value from&lt;code&gt;FOOTING&lt;/code&gt;or, if that is absent, the value from&lt;code&gt;PAGE LIMIT&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08716d6123ef6be822f1ac9d62f32d569abed400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LAST DETAIL&lt;/code&gt;not &amp;gt;&lt;code&gt;FOOTING&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bddd9fe7f092a20ff309c27586fb5df726671b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LEADING&lt;/code&gt;&amp;mdash; an occurrence of the target sub string found either at the first character position of the target range or immediately following a previously-found occurrence. There are no occurrences of&lt;code&gt;LEADING 'XX'&lt;/code&gt;found in&lt;code&gt;aXXabbXXccXXdd&lt;/code&gt; but there is one occurrence of&lt;code&gt;LEADING 'a'&lt;/code&gt;(the first character).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d745f0808cd096a7f86836b00c58573f5bba9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LEADING&lt;/code&gt;&amp;mdash; identifies only an occurrence of the target sub string found either at the first character position of the target range or immediately following a previously-found occurrence. There are no occurrences of&lt;code&gt;LEADING 'XX'&lt;/code&gt;found in&lt;code&gt;aXXabbXXccXXdd&lt;/code&gt; but there is one occurrence of&lt;code&gt;LEADING 'a'&lt;/code&gt;(the first character).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f63d0431eca61c136571c1a1d4039fd81480277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LEFTLINE&lt;/code&gt;(see &lt;a href=&quot;#LEFTLINE&quot;&gt;LEFTLINE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd1ea45e35aee15054e89c8399157952f38db6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LENGTH&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#LENGTH&quot;&gt;LENGTH&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007966e84d5e80130d1622f58af6a3816a77706d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LINAGE&lt;/code&gt;specifications invalid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f51fc133da8a86214f724915825ef3cd45d3a7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCALE-DATE&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#LOCALE_002dDATE&quot;&gt;LOCALE-DATE&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92c4edc5a022137fdb7bb0b29ecf37d3178c4a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOCALE-TIME&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#LOCALE_002dTIME&quot;&gt;LOCALE-TIME&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c9f1b5966525d404cad9ab53f45aefe27b3c17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOWER-CASE&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#LOWER_002dCASE&quot;&gt;LOWER-CASE&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da277ed25e71362d1b2f6513ff3312f7b96083d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LOWLIGHT&lt;/code&gt;(see &lt;a href=&quot;#LOWLIGHT&quot;&gt;LOWLIGHT&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e0ac1b872363abcce7c272073d3b8f3313eeb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MERGE&lt;/code&gt;(see &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af64ef45ff2067dbf15ca9a082c1e04351052d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MERGE&lt;/code&gt;(see &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt;),&lt;code&gt;ACCESS MODE RANDOM&lt;/code&gt;not allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4b6a3227dabac08c8ee9abd05234a3ec4912a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOVE 17 TO WSS-OI-SUB&lt;/code&gt;&lt;code&gt;MOVE 'A' TO WSS-Output-Image-TXT (WSS-OI-SUB)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f154db063f264899d1ed4fa622224a1560cb83a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOVE&lt;/code&gt;statement (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) with a reference modifier on the &quot;receiving&quot; field (see &lt;a href=&quot;#Reference-Modifiers&quot;&gt;Reference Modifiers&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6e91c7c12c6a79f67538334dca9643b9da20f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOVE&lt;/code&gt;statement (see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) with picture-symbol editing applied to the receiving field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65085acd9462048d0a3199a2cb941fc773d39a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NATIONAL&lt;/code&gt;&lt;code&gt;~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NATIONAL&lt;/code&gt;&lt;code&gt;~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="42da3ed56aca764a23cdf1f38e04a15a962359e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEXT SENTENCE&lt;/code&gt;was needed for COBOL programs that were coded according to pre-1985 standards that wish to nest one&lt;code&gt;IF&lt;/code&gt;statement inside another. See &lt;a href=&quot;#Use-of-VERB_002fEND_002dVERB-Constructs&quot;&gt;Use of VERB/END-VERB Constructs&lt;/a&gt;, for an explanation of why&lt;code&gt;NEXT SENTENCE&lt;/code&gt;was necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3463bddd20f2e3f7ac0c5ddba2d6580817d9550e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUMVAL-C&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#NUMVAL_002dC&quot;&gt;NUMVAL-C&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8dad68872568151f48eb459495ea37157f3061" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NUMVAL&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#NUMVAL&quot;&gt;NUMVAL&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b312c688788d4cb9190346b0876925fe1ab9b67d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Numeric-Value&lt;/code&gt;now has the numeric value of&lt;code&gt;character&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0acc34fea0cd9b837e2e2d59940e88e37966c792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPEN I-O&lt;/code&gt;denied (insufficient permissions to read and/or write file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b56e1121c5a375093ce110b49bd3131dba52de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPEN INPUT&lt;/code&gt;denied (insufficient permissions to read file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30124474b09a6f683b78a764638ef91b3ab664f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPEN OUTPUT&lt;/code&gt;denied (insufficient permissions to write to file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81eb00580e5b415244e9e3685fc981956607b9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPEN&lt;/code&gt;(see &lt;a href=&quot;#OPEN&quot;&gt;OPEN&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477d72e850b32a7cf505fb0f11de509bf14e789b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ORD&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#ORD&quot;&gt;ORD&lt;/a&gt;). Subtract 1 from the result; the description of the&lt;code&gt;ORD&lt;/code&gt;intrinsic function presents a technique utilizing the&lt;code&gt;MOVE&lt;/code&gt;statement that will accomplish the same thing without the need of adding 1 to the numeric argument value first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8deb69a63de640e42f4eea37cf3373d3edb3be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ORGANIZATION INDEXED&lt;/code&gt;files cannot be assigned to&lt;code&gt;CONSOLE&lt;/code&gt;&lt;code&gt;DISPLAY&lt;/code&gt;&lt;code&gt;KEYBOARD&lt;/code&gt;&lt;code&gt;LINE ADVANCING&lt;/code&gt;or&lt;code&gt;PRINTER&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6590054dc3174ab22e49b2a3bc3f72b29bd228a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ORGANIZATION RELATIVE&lt;/code&gt;files cannot be assigned to the&lt;code&gt;CONSOLE&lt;/code&gt;&lt;code&gt;DISPLAY&lt;/code&gt;&lt;code&gt;LINE ADVANCING&lt;/code&gt;or&lt;code&gt;PRINTER&lt;/code&gt;devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcd7c522580831d10c6b09667fbc2fb1fd50ea4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OVERLINE&lt;/code&gt;(see &lt;a href=&quot;#OVERLINE&quot;&gt;OVERLINE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee2bd68fd7f1d2e704b4e10d19c9a4e2eb49b74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt;is a repeatable symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18b18bacf003f35b14061d93bc4bdf184384edf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PACKED-DECIMAL&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PACKED-DECIMAL&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="280296fb8115814140cea7b9eb138f81278c9c08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PICTURE&lt;/code&gt;(see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) (including both type and length)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bf6299d8231248c29b2d541eea2996c88e728b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PICTURE&lt;/code&gt;Used?:</source>
          <target state="translated">&lt;code&gt;PICTURE&lt;/code&gt;Used?:</target>
        </trans-unit>
        <trans-unit id="ba8609b7cd5a586c4a3fc38ab5543a4db6476aeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POINTER&lt;/code&gt;&lt;code&gt;~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;POINTER&lt;/code&gt;&lt;code&gt;~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b486ef8a2eaf90157ab87300cce01af5882509a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PRINTER&lt;/code&gt;will assume an attachment to the&lt;code&gt;LPT1&lt;/code&gt;logical device/port; these files should only be used for output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411323af359614674b97851cf54811242a7d431f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCEDURE DIVISION CHAINING&lt;/code&gt;(see &lt;a href=&quot;#PROCEDURE-DIVISION-CHAINING&quot;&gt;PROCEDURE DIVISION CHAINING&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4c2155a1a4c8e1e88f64e17809a3fc2b95b4a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCEDURE DIVISION CHAINING&lt;/code&gt;may only be coded in a main program (that is, the first program executed when a compiled GnuCOBOL compilation unit is executed). It cannot be used in any form of subprogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96178303ac2c703bf40dc3645ba91ebff6d6446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCEDURE-POINTER&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PROCEDURE-POINTER&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c132062263dbd9d7eaa4ef72e38f82bacb5c48b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROCEED&lt;/code&gt; are optional and may be included, or not, at the discretion of the programmer. The presence or absence of these words has no effect upon the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e8647eb6a2c729b8b4866b15df7d8b19ae4ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROGRAM-POINTER&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PROGRAM-POINTER&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50b3a4b641da596a7376dc8b887c992f99950164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROMPT&lt;/code&gt;(see &lt;a href=&quot;#PROMPT&quot;&gt;PROMPT&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bc4cee161fa540acc35dd076dabf0da2159537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROTECTED&lt;/code&gt;(see &lt;a href=&quot;#PROTECTED&quot;&gt;PROTECTED&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347aeeecf708dbfffb1d57157f874ec3873184b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RANDOM&lt;/code&gt;or&lt;code&gt;TAPE&lt;/code&gt;will behave exactly as&lt;code&gt;DISC&lt;/code&gt;does. These two additional &amp;lt;&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391aa254af4e4048e98dba8214dddb0a3f73ea5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;READ&lt;/code&gt; you must add either&lt;code&gt;NEXT&lt;/code&gt;or&lt;code&gt;PREVIOUS&lt;/code&gt;to the statement (otherwise it will be treated as a random&lt;code&gt;READ&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d850b80539e84ea208bbc0dae15835e55ff65272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;READ&lt;/code&gt; you must omit the&lt;code&gt;NEXT&lt;/code&gt;or&lt;code&gt;PREVIOUS&lt;/code&gt;available to the sequential format of the&lt;code&gt;READ&lt;/code&gt;statement to ensure the statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2a0b8926f0e3de6da1fd7294243b8065cc7c6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;READ&lt;/code&gt;(see &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1510158ad4ee9f849a73e4bd66489fdedc0dcac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REQUIRED&lt;/code&gt;(see &lt;a href=&quot;#REQUIRED&quot;&gt;REQUIRED&lt;/a&gt;),&lt;code&gt;EMPTY-CHECK&lt;/code&gt;(see &lt;a href=&quot;#EMPTY_002dCHECK&quot;&gt;EMPTY-CHECK&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76de5f8a334cf999d0fe095c41b14ee83c7d8446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REQUIRED&lt;/code&gt;and&lt;code&gt;EMPTY-CHECK&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;REQUIRED&lt;/code&gt;and&lt;code&gt;EMPTY-CHECK&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a90a17ee8d44d1bcb09012945b6a0a3d09e02b19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REVERSE-VIDEO&lt;/code&gt;(see &lt;a href=&quot;#REVERSE_002dVIDEO&quot;&gt;REVERSE-VIDEO&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafc6365023306389e33f73bf7fc120e2e9b4073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REWRITE&lt;/code&gt;(see &lt;a href=&quot;#REWRITE&quot;&gt;REWRITE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcc7c3a493ba0a48620f4b4b3e14bb717c50126" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ROUNDED&lt;/code&gt; excess digits in the source value will simply be truncated to fit the target field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8445c202b5943221c34d39cd85c9cda28174a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ROUNDED&lt;/code&gt; the source value will be arithmetically rounded to fit the target field. See &lt;a href=&quot;#ROUNDED&quot;&gt;ROUNDED&lt;/a&gt;, for information on the&lt;code&gt;NEAREST-AWAY-FROM-ZERO&lt;/code&gt;rounding rule, which is the one that will apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3734f3aca9268c19229c61e7674be118903830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECURE&lt;/code&gt;(see &lt;a href=&quot;#SECURE&quot;&gt;SECURE&lt;/a&gt;),&lt;code&gt;NO-ECHO&lt;/code&gt;(see &lt;a href=&quot;#NO_002dECHO&quot;&gt;NO-ECHO&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fcf7d1168e1561fe6bb654e801f2e7cb08cec1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECURE&lt;/code&gt;and&lt;code&gt;NO-ECHO&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SECURE&lt;/code&gt;and&lt;code&gt;NO-ECHO&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5ea6db8c1599b76c4a4dcbfd17322ba1640b2ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SET WSS-OI-IDX TO 17&lt;/code&gt;&lt;code&gt;MOVE 'A' TO WSS-Output-Image-TXT (WSS-OI-IDX)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de8f4c0d2165bccc237cb3bfa5dfdb7dea3e748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIGN&lt;/code&gt;(see &lt;a href=&quot;#SIGN&quot;&gt;SIGN&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4b2eba2689210d89ad4d944b0f3b53117c54e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIGNED-INT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SIGNED-INT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d56174c3bcecf880699acdfde71815ff9151b5a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIGNED-LONG&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SIGNED-LONG&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffd272e2870682c28bde5a70f907e9e07d2d663c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SIGNED-SHORT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SIGNED-SHORT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="291393133032d43933812d0d3621e0fc1a5fde8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SORT &amp;hellip; INPUT PROCEDURE &amp;lt;&lt;i&gt;procedure-name&lt;/i&gt;&amp;gt;&lt;/code&gt;and/or&lt;code&gt;SORT &amp;hellip; INPUT PROCEDURE &amp;lt;&lt;i&gt;procedure-name&lt;/i&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73b7971b14feff2978373855bed1cd197ca543a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SORT&lt;/code&gt;(see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8d7202db2d69de284a54fc7b5c3feb1ce003fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SORT&lt;/code&gt;(see &lt;a href=&quot;#SORT&quot;&gt;SORT&lt;/a&gt;),&lt;code&gt;ACCESS MODE RANDOM&lt;/code&gt;not allowed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36a01ce46aa8f7049fab46203dca8a9de24eb94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;START&lt;/code&gt;(see &lt;a href=&quot;#START&quot;&gt;START&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f60631a45a22f74952a848a8e7cf23e3cd1c988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRING&lt;/code&gt;processing will cease when one of the following occurs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871a817ad8e88f55990c548acfb0fe0043978fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STRING&lt;/code&gt;statement (see &lt;a href=&quot;#STRING&quot;&gt;STRING&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02328f9db38ba0e1347d8d1987b22d6f7fa0854d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUBSTITUTE-CASE&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#SUBSTITUTE_002dCASE&quot;&gt;SUBSTITUTE-CASE&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d128887df6f22eb695178b49b169f455544adb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUBSTITUTE&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#SUBSTITUTE&quot;&gt;SUBSTITUTE&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bca509be06dfabd2fbca004517530d897655e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUPPRESS&lt;/code&gt;only prevents the presentation of the report group within whose&lt;code&gt;USE BEFORE REPORTING&lt;/code&gt;procedure the statement occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4009c07469aa52972f5c1bbbb8a00778f97796d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SYNCRONIZED&lt;/code&gt;(see &lt;a href=&quot;#SYNCRONIZED&quot;&gt;SYNCRONIZED&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ed79e99aecde76b5a2e62d3d868773bee70761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRAILING&lt;/code&gt;&amp;mdash; an occurrence of the target sub string found either at the very end of the target range or toward the end, followed by nothing but other occurrences. There are no occurrences of&lt;code&gt;LEADING 'XX'&lt;/code&gt;found in&lt;code&gt;aXXabbXXccXXdd&lt;/code&gt; but there are two occurrences of&lt;code&gt;TRAILING 'd'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19d6ec7092cf2ae7196ea07780925723c063867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRAILING&lt;/code&gt;&amp;mdash; identifies only an occurrence of the target sub string found either at the very end of the target range or toward the end, followed by nothing but other occurrences. There are no occurrences of&lt;code&gt;LEADING 'XX'&lt;/code&gt;found in&lt;code&gt;aXXabbXXccXXdd&lt;/code&gt; but there are two occurrences of&lt;code&gt;TRAILING 'd'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bda106098e1b3850b73c29418939854f8e394ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRANSFORM&lt;/code&gt;statement (see &lt;a href=&quot;#TRANSFORM&quot;&gt;TRANSFORM&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf1512d3049705da9a5f04dd1e8ece1e4a78090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRIM&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#TRIM&quot;&gt;TRIM&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16a01248fb71a010360d90cd67056986907cce4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNDERLINE&lt;/code&gt;(see &lt;a href=&quot;#UNDERLINE&quot;&gt;UNDERLINE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a9ceaf71de4c1a5244e89ce05e6e081058b9ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNLOCK&lt;/code&gt;(see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebac23541a4b1dfd6bc8ec52df6f1f05a31b84a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNSIGNED-INT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UNSIGNED-INT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7ce88dba72fca6770899fcd66b79cb94358f51d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNSIGNED-LONG&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UNSIGNED-LONG&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60044c2a968aefc450f2798af7b7e766964a405a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNSIGNED-SHORT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UNSIGNED-SHORT&lt;/code&gt;&lt;code&gt;~~~~~~~~~~~~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ef09b480580d039aeb856879fc4a231c8adefcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNSTRING&lt;/code&gt;processing will cease when one of the following occurs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b122bfa4bb7a663ba15f9c3100d9a5cf485f1519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UNSTRING&lt;/code&gt;statement (see &lt;a href=&quot;#UNSTRING&quot;&gt;UNSTRING&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c542542ef85e7131efc780a7a34141ae4d73ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UPPER-CASE&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#UPPER_002dCASE&quot;&gt;UPPER-CASE&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60338d5203ba3b1a06e0edeb1e890d762ef9b183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;USAGE COMP-6&lt;/code&gt;does not allow for negative values, therefore no sign nibble will be allocated. A&lt;code&gt;USAGE COMP-6&lt;/code&gt;data item containing an odd number of&lt;code&gt;9&lt;/code&gt;symbols in its&lt;code&gt;PICTURE&lt;/code&gt;will leave its leftmost nibble unused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d796222311e943664ebdf048508b9767ff98a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;USAGE NATIONAL&lt;/code&gt; while syntactically recognized, is not supported by GnuCOBOL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11296b15b7c9332c656ef4c5d52a7b513a3b749" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;USAGE&lt;/code&gt;(see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8be9fbd99896a22601e74562b8f0fea8120fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WITH&lt;/code&gt;options (including the various individual &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddc860e6ea5d3b402cfcca7e491ae56059e86f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WRITE&lt;/code&gt;(see &lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8cb2e8d9c225d389af4f7122db67330e8dced5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Z&lt;/code&gt;and&lt;code&gt;*&lt;/code&gt;should not be coded in the same &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2660147a5b695351e618aedfabc9b52e4e67002f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cobc&lt;/code&gt;execution constitute a &amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5371b46ac70574372671a5beeddef56ee51e8e87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A special note about user-defined functions&lt;/strong&gt; &amp;mdash; because you must name a user-defined function that your program will be using in the&lt;code&gt;REPOSITORY&lt;/code&gt;paragraph, you may always reference that function from your program&amp;rsquo;s procedure division without needing to use the&lt;code&gt;FUNCTION&lt;/code&gt;keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a149ad9b07dc69d673ff607ff556e574a59412" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;A&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;A&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="78deb8833dbfc7ba470b52f6e2a03e65331f017b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;B&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;B&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f3b96c0bba2f9b668db09546ae0aff007f7c1ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;C&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;C&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1167fe3908449fec1cbfe98a258af20d39861097" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;D&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;D&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9029f3debaff6d223ae73e6e0b946dfe6306504" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;E&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;E&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e4153ee2ea61e1a2f8d37760a9d576b9101c2652" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;F&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;F&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="78b67cc5e8a2f6415e3f01c7f727e5d5de5372f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FILE&lt;/strong&gt;, &lt;strong&gt;WORKING-STORAGE&lt;/strong&gt;, &lt;strong&gt;LOCAL-STORAGE&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07ffd461afc7f63e6b9b307670992d2d0b8d75f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FILE&lt;/strong&gt;, &lt;strong&gt;WORKING-STORAGE&lt;/strong&gt;, &lt;strong&gt;LOCAL-STORAGE&lt;/strong&gt;, &lt;strong&gt;LINKAGE&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5895d50d9893d7a434685a86e4d281f3852fb87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FILE&lt;/strong&gt;, &lt;strong&gt;WORKING-STORAGE&lt;/strong&gt;, &lt;strong&gt;LOCAL-STORAGE&lt;/strong&gt;, &lt;strong&gt;LINKAGE&lt;/strong&gt;, &lt;strong&gt;REPORT&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb370a244e95be7da6e2cde7432d274f92d53d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FILE&lt;/strong&gt;, &lt;strong&gt;WORKING-STORAGE&lt;/strong&gt;, &lt;strong&gt;LOCAL-STORAGE&lt;/strong&gt;, &lt;strong&gt;LINKAGE&lt;/strong&gt;, &lt;strong&gt;REPORT&lt;/strong&gt;, &lt;strong&gt;SCREEN&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b61ef90704a690207069c9b689d32bcd29f01a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FILE&lt;/strong&gt;, &lt;strong&gt;WORKING-STORAGE&lt;/strong&gt;, &lt;strong&gt;LOCAL-STORAGE&lt;/strong&gt;, &lt;strong&gt;LINKAGE&lt;/strong&gt;, &lt;strong&gt;SCREEN&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f3d978e372ca488e9ba0d7708485081a62e672" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;FILE&lt;/strong&gt;, &lt;strong&gt;WORKING-STORAGE&lt;/strong&gt;, &lt;strong&gt;LOCAL-STORAGE&lt;/strong&gt;, &lt;strong&gt;REPORT&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4839b35ca2497165c167eaea0f7e4a1283033514" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;G&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;G&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="812d9a85054ae2866558ef9bbfef2f001aed7a79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;H&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;H&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="92c9e0941817ca6ec95568a27df379f1086b0b28" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;I&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;I&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12b2ee88bf4409a8fb09fe5727a05fa8881880cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;J&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;J&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3005143376dde3d9da01686fc40b88eafb15d9b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;K&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;K&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb82c9ee4b0f83495912088261dcad900f83237a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;L&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;L&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab5f237b71f528d9fbf2d5402361dd5bf0b35245" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LINKAGE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;LINKAGE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25b3f568a32669b3e1e7456c5d60d918969dec2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;M&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;M&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="34f06859aa19c9d008d08c0cf462c4603e8b1bbe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;N&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;N&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="058e456223baee7766175ba580201fb249f8122b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;O&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;O&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d5fa5c66c46fbdd5090dae4ad61f60d419400d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;P&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;P&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bca4871a4ad12870e49c2784db42bf7438e4a0bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Q&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Q&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3fdffbf49bcaee03b9a70b03918937001daa84c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;R&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;R&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3655bd2f53da526981c4db9392bf74d3dacfcbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;REPORT&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;REPORT&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f2a223ceb2050025495ceb94a483c20e83d043d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;REPORT&lt;/strong&gt;, &lt;strong&gt;SCREEN&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83a7364b58186bdb86942d906b5f261bb5ea986" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;S&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;S&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63f87edfaeb39f41b4a091383a11752886656e33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SCREEN&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SCREEN&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0c3e000bd551e68617a44b810b980ba322650e3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;T&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;T&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17b36f91308c2e3fe1cd5d15eff5f10a41d52970" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;U&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;U&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="640c84cc37db8375a95602fbbf8f82397c2fdd32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;V&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;V&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ef3256abbf01df40dbfc8b5ee601e843ec94466" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;W&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;W&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1d2807a2a5612f6acfda447c4eaa33b52dd1b43b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WORKING-STORAGE&lt;/strong&gt;, &lt;strong&gt;LOCAL-STORAGE&lt;/strong&gt;, &lt;strong&gt;LINKAGE&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c8ab0b752274979fb5e5da3cd6ff4270630b46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;X&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b80355c9f86da444865ea00eacfc59f3b79cff08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Y&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Y&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07f32756242b82f958a367cbf2846897d616a4c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Z&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Z&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="557de5756f97cd941aa37bbe610180e834106bc8" translate="yes" xml:space="preserve">
          <source>A &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac668f5d5b70d3e6c24c1e54a76693dea88488c" translate="yes" xml:space="preserve">
          <source>A &amp;lt;&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e5efc03e60b5905f94c387def7e44a594b1f1d" translate="yes" xml:space="preserve">
          <source>A &amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9458a9d8d62c831fabf895570b756d2edc87c5b0" translate="yes" xml:space="preserve">
          <source>A 1- or 2-digit number that indicates the hierarchical position of a data item in a group item or the special properties of a data description entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2b5bcffb62e8da21a44ee3070f570011981a91" translate="yes" xml:space="preserve">
          <source>A 66-level data item regroups previously defined items by specifying alternative, possibly overlapping, groupings of elementary data items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98eac2267e5b2c2b97634fc23c131312cce8fdd5" translate="yes" xml:space="preserve">
          <source>A 77-level item is found &amp;mdash; this signifies the end of the definition of the record and begins the definition of a special data item; See &lt;a href=&quot;#g_t77_002dLevel-Data-Items&quot;&gt;77-Level Data Items&lt;/a&gt;, for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503a5325003a33bed615747054cbf10e6a8003d3" translate="yes" xml:space="preserve">
          <source>A &lt;b&gt;Type Clause&lt;/b&gt; may be coded only when&lt;code&gt;PROGRAM-ID&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560bac137d157fa66cb12855bc6262b75a1de9ca" translate="yes" xml:space="preserve">
          <source>A COBOL &amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d8d759e71d917e1d279d379424f07eb43bc2c5" translate="yes" xml:space="preserve">
          <source>A CODE whose value denotes information content above and beyond that of the mere value itself. Some examples could be &quot;Error-CD&quot;, &quot;Status-CD&quot;, &quot;Billing-CD&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4091acb229e73ee8563ab91ee37f4cebde40420a" translate="yes" xml:space="preserve">
          <source>A Class Condition without a leading &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f6833f9a0767b0ce7eec60d6625ee1d31629a3" translate="yes" xml:space="preserve">
          <source>A FINAL control break only occurs once, at the very end of the report. The&lt;code&gt;CONTROL FOOTING&lt;/code&gt;for this break will be the one that produces the grand total of sales for all stores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498cc90d0dd369420ca431184959e7886032826b" translate="yes" xml:space="preserve">
          <source>A GnuCOBOL main program or subprogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b672951006b44169cbcc496691f027e398d68714" translate="yes" xml:space="preserve">
          <source>A GnuCOBOL subprogram expects that all arguments to it will be one of two things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7885a90d74572cb403f9acc91e0f8fb43977721" translate="yes" xml:space="preserve">
          <source>A Relation Condition with nothing to the left of the relational operator (see &lt;a href=&quot;#Relation-Conditions&quot;&gt;Relation Conditions&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782f7c450dbb5b922aacae8d15af0b3b485eabf6" translate="yes" xml:space="preserve">
          <source>A Replacement Sub string &amp;mdash; this is the sequence of characters that should replace the target sub string. Replacement sub strings are specified after the&lt;code&gt;BY&lt;/code&gt;keyword. They too may be specified as a literal, either with or without an&lt;code&gt;ALL&lt;/code&gt;prefix (again, figurative constants are allowed) or the value of an identifier. If a figurative constant is coded, the&lt;code&gt;ALL&lt;/code&gt;keyword will be assumed, even if it wasn&amp;rsquo;t specified. Literals without&lt;code&gt;ALL&lt;/code&gt;will either be truncated or padded with spaces on the right to match the length of the target sub string. Literals with&lt;code&gt;ALL&lt;/code&gt;or figurative constants will be repeated as necessary to match the length of the target sub string. Identifiers specified as replacement sub strings must be defined with a length equal to that of the target sub string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e304685c7d7b9264ab74d89e58276643004017" translate="yes" xml:space="preserve">
          <source>A Sample Screen Produced by a GnuCOBOL Program:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae77bb5e1d3a0ad82662d0f447e90df3f5835dd" translate="yes" xml:space="preserve">
          <source>A Sign Condition without a leading &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd431ee4a3505348231759009af04abdf1f75212" translate="yes" xml:space="preserve">
          <source>A Target Sub string &amp;mdash; this is a sequence of characters to be located somewhere in the inspect subject and counted. Target sub strings may be defined as a literal value (figurative constants are allowed) or by the contents of an identifier. If the target sub string is specified as a figurative constant, it will be assumed to have a length of one (1) character. The keywords before the literal or identifier control how many target sub strings could be identified from that replacement instruction, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b8fff5b08ad22dc55bab75e1dbdc3c41d0e6cd" translate="yes" xml:space="preserve">
          <source>A Target Sub string &amp;mdash; this is a sequence of characters to be located somewhere in the inspect subject and subsequently replaced with a new value. Target sub strings, which are specified before the&lt;code&gt;BY&lt;/code&gt;keyword, may be defined as a literal value (figurative constants are allowed) or by the contents of an identifier. If the target sub string is specified as a figurative constant, it will be assumed to have a length of one (1) character. The keywords before the literal or identifier control how many target sub strings could be identified from that replacement instruction, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca894ce05f8268d48e5042c28a306218fa6b031" translate="yes" xml:space="preserve">
          <source>A built-in routine that accepts arguments and returns a value; syntactically, these may be used most places where GnuCOBOL identifiers are valid. See &lt;a href=&quot;#Intrinsic-Functions&quot;&gt;Intrinsic Functions&lt;/a&gt;, for documentation on all the GnuCOBOL intrinsic functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadac0e8229de419215f3711a607276d8a3f7057" translate="yes" xml:space="preserve">
          <source>A character comprised entirely of zero-bits (regardless of the programs collating sequence).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82912763a93b6d0a7abac84462598f12c306d715" translate="yes" xml:space="preserve">
          <source>A character set that supports symbols using other than the traditional Roman alphabet symbols used by the ASCII character set. Typically, such a character set uses a UTF-16 (i.e. 16 bits-per-character) encoding of the Unicode character set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ade46cad2ad2f832f6f99d7e71edd389c5cc5d5" translate="yes" xml:space="preserve">
          <source>A collection of zero, one, or more sections of paragraphs, called the division body, that are formed and combined in accordance with a specific set of rules. Each division consists of the division header and the related division body. There are four divisions in a GnuCOBOL program: Identification, Environment, Data, and Procedure (coded in that sequence). See &lt;a href=&quot;#Program-Structure&quot;&gt;Program Structure&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea4363f7ca400d5ae0575763e74021bcfe88820" translate="yes" xml:space="preserve">
          <source>A common programming technique when using the&lt;code&gt;MERGE&lt;/code&gt;statement is to define the records of all files involved as simple elementary items of the form&lt;code&gt;01 record-name PIC X(n).&lt;/code&gt;where n is the record size. The only file where records are actually described in detail would then be &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a983aed237c3594a5a39f36ecacddd1e35c685d8" translate="yes" xml:space="preserve">
          <source>A companion statement &amp;mdash;&lt;code&gt;MERGE&lt;/code&gt;(see &lt;a href=&quot;#MERGE&quot;&gt;MERGE&lt;/a&gt;) &amp;mdash; can combine the contents of multiple files together, provided those files are all pre-sorted in a similar manner according to the same key structure. The resulting output will consist of the contents of all of the input files, merged together and sequenced according to the common key structure(s). The output generated by a&lt;code&gt;MERGE&lt;/code&gt;statement may be written automatically to one or more output files or may be processed internally by the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615f50ecdf6df733bdd21a46011252f8083a1562" translate="yes" xml:space="preserve">
          <source>A compilation unit may</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5872be43f7f6d9b11f710e76f14e9b0444e46228" translate="yes" xml:space="preserve">
          <source>A compilation unit may also be a C-language source program, recognized as such by having a file extension of&lt;code&gt;.c&lt;/code&gt;or an assembly-language program, recognized by its file extension of &quot;.s&quot;. In such a case,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b7864bd1e28b7d458e558576c147baf90adece" translate="yes" xml:space="preserve">
          <source>A constant, specified as a level-78 data item, a level-01 item with the CONST attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9350164bc0b7f2e5f59d9c811ff66a9d5e049a" translate="yes" xml:space="preserve">
          <source>A contiguous area of storage within the memory space of a program that may be referenced, by name, in a COBOL program. Other programming languages use the term variable, property or attribute to describe the same concept. See &lt;a href=&quot;#Structured-Data&quot;&gt;Structured Data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469b0698d4e0733da312dfd3230a72ce49dfc8d1" translate="yes" xml:space="preserve">
          <source>A convention such as this makes it simple, when you&amp;rsquo;re reviewing code in the procedure division, to know in which section of the data division you should look in when locating the detailed description of a data item. Once you&amp;rsquo;re in the right division, coding convention #2 will assist in locating the data item definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a142d4ec05e820d3473e6f3371d38c556e585891" translate="yes" xml:space="preserve">
          <source>A count of something</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0bb35e1736796b66b4b6ca738748d955db513d" translate="yes" xml:space="preserve">
          <source>A custom error procedure will trigger when a runtime error condition is encountered. An error procedure may be registered by a main program or a subprogram, but regardless of from where it was registered, it applies to the overall program compilation group and will trigger when a runtime error occurs anywhere in the executable program. If the error procedure was defined by a subprogram, that program must be loaded at the time the error procedure is executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a957f734b6933e7929d3334146e2809cb18f90" translate="yes" xml:space="preserve">
          <source>A data item containing a single character of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7765227cff3b986862ac647cb141f518aa570278" translate="yes" xml:space="preserve">
          <source>A data item containing both a date and a time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ea735ad9f950738eedc1d1e5d04a7f4fcf70c6" translate="yes" xml:space="preserve">
          <source>A data item defined with the&lt;code&gt;EXTERNAL&lt;/code&gt;(see &lt;a href=&quot;#EXTERNAL&quot;&gt;EXTERNAL&lt;/a&gt;) attribute in a subprogram and the calling program (same name in both programs) is automatically visible to and updatable by both programs, even if those programs are compiled separately from one another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2449d4497042915451885177fabd36ad487f2e21" translate="yes" xml:space="preserve">
          <source>A data item that isn&amp;rsquo;t itself comprised of other data items. See &lt;a href=&quot;#Structured-Data&quot;&gt;Structured Data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46708c77ac3a5a4dbdd13186f8c7283271c02ad2" translate="yes" xml:space="preserve">
          <source>A data item that isn&amp;rsquo;t itself formed from other data items is referred to in COBOL as an &amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528fb69ef0af1fb0d65fcc7b84364b054fb58a1b" translate="yes" xml:space="preserve">
          <source>A data item used as a table index (see section 10.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf39a92905b4a7cf4cf4158dae547073782083db" translate="yes" xml:space="preserve">
          <source>A data item whose USAGE is POINTER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab924d5fc6a27974cf3916cd9a8fe8dd4790841b" translate="yes" xml:space="preserve">
          <source>A data item whose&lt;code&gt;PICTURE&lt;/code&gt;clause allows it to contain absolutely any character whatsoever. See &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;. Group items (see &lt;a href=&quot;#Structured-Data&quot;&gt;Structured Data&lt;/a&gt;) are also implicitly considered to be alphanumeric data items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb1948b3c7ae83c5ca2b64d691760f018c6c475" translate="yes" xml:space="preserve">
          <source>A data item whose&lt;code&gt;PICTURE&lt;/code&gt;clause allows it to contain only the numeric digit characters&lt;code&gt;0&lt;/code&gt;&lt;code&gt;9&lt;/code&gt;(signed or unsigned), or a data item whose&lt;code&gt;PICTURE&lt;/code&gt;&lt;code&gt;USAGE&lt;/code&gt;combination allow it to contain actual binary numbers in integer, fixed-point, floating-point or packed-decimal format. Numeric data items are the only ones that may be used as table subscripts or as source arguments on arithmetic statements.&lt;code&gt;PICTURE&lt;/code&gt;(see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;), or&lt;code&gt;USAGE&lt;/code&gt;(see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b08616a02bdd1c51111d1dface932f21943ff7f" translate="yes" xml:space="preserve">
          <source>A data item whose&lt;code&gt;PICTURE&lt;/code&gt;clause allows it to contain only upper- and/or lower-case letters. See &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da253388db0727fd39e755285bc295bbb19a76c" translate="yes" xml:space="preserve">
          <source>A data item with the&lt;code&gt;GLOBAL&lt;/code&gt;(see &lt;a href=&quot;#GLOBAL&quot;&gt;GLOBAL&lt;/a&gt;) attribute specified in it&amp;rsquo;s description in the calling program is automatically visible to and updatable by a subprogram nested with the calling program. See &lt;a href=&quot;#Independent-vs-Contained-vs-Nested-Subprograms&quot;&gt;Independent vs Contained vs Nested Subprograms&lt;/a&gt;, for more information on subprogram nesting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71acdd62093a38da2ea175ba6fc34180fde110b" translate="yes" xml:space="preserve">
          <source>A division operation will be performed for each &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408da3248403f8fbeb0eaf36045c03cf0818a406" translate="yes" xml:space="preserve">
          <source>A division or section header is found &amp;mdash; this also marks the completion of a record and signifies the end of the linkage section as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4ae615e6240e46d6f52d33716e5cb0560bf07e" translate="yes" xml:space="preserve">
          <source>A division or section header is found &amp;mdash; this also marks the completion of a record and signifies the end of the local-storage section as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5848da8dff2aa75a2be0062421373e8f5e5487a8" translate="yes" xml:space="preserve">
          <source>A division or section header is found &amp;mdash; this also marks the completion of a record and signifies the end of the working-storage section as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d8adf1f06928c7616bc541e39415e8d9d28f51" translate="yes" xml:space="preserve">
          <source>A division or section header is found &amp;mdash; this also marks the completion of the detailed description of the file and signifies the end of the file section as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f643ac13496b5c30e8c10b296e5e1efd9741723" translate="yes" xml:space="preserve">
          <source>A field of data being presented within a detail group; as the various detail groups that comprise the report are presented, they are presumed to appear in sorted sequence of the control fields contained within them. As an example, a department-by-department sales report for a chain of stores would probably be sorted by store number and &amp;ndash; within like store numbers &amp;ndash; be further sorted by department number. The store number will undoubtedly serve as a control field for the report, allowing control heading groups to be presented before each sequence of detail groups for the same store and control footing groups to be presented after each such sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8ff90c105f99dcd5b1cf46ec773bad2a044e7a" translate="yes" xml:space="preserve">
          <source>A field whose description includes this attribute will cause the cursor to automatically advance to the next input-enabled field of a screen if the field is completely filled with input data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1b14cf44487b192594be7aa5115241198c7c39" translate="yes" xml:space="preserve">
          <source>A figurative constant may not be supplied as &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970cdc9a9b0c52dfb1da97e76f1b04003a6c9f40" translate="yes" xml:space="preserve">
          <source>A file description in the&lt;code&gt;FILE SECTION&lt;/code&gt;(see &lt;a href=&quot;#FILE-SECTION&quot;&gt;FILE SECTION&lt;/a&gt;) will define the structure of records within the file, including whether or not variable-length records are possible and &amp;mdash; if so &amp;mdash; what the minimum and maximum length might be. In addition, the file description entry can specify file I/O block sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd1ad8e003607e203e11a99b34c1eb37d8cc2c1" translate="yes" xml:space="preserve">
          <source>A file name. Note that these items would probably also have a &quot;F-&quot; prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c15fdd9be45dd3b1896020d6900d234f723b35" translate="yes" xml:space="preserve">
          <source>A five-digit number showing the aggregated benchmark scores for the CPU; the higher this number, the better the CPU performed in benchmark testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c9c64a646765c4bce8bd2af50cf6d03263a6c4" translate="yes" xml:space="preserve">
          <source>A generic numeric data item that doesn&amp;rsquo;t fit into any of the other categories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fb0daf90da773f2c6dceecf49b6bd6decdcd50" translate="yes" xml:space="preserve">
          <source>A generic term used for a constant value coded in a program that may be either a numeric literal or an alphanumeric literal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf723f13cd5f23a4962b0cd125c717146177948f" translate="yes" xml:space="preserve">
          <source>A group item that is not part of a higher-level group item. See &lt;a href=&quot;#Data-Definition-Principles&quot;&gt;Data Definition Principles&lt;/a&gt;. An elementary item with a level number of 01 can also be referred to as a record if it&amp;rsquo;s definition occurs in the file section, provided that it&amp;rsquo;s definition does not include the&lt;code&gt;CONSTANT&lt;/code&gt;attribute. See &lt;a href=&quot;#FILE_002dSECTION_002dData_002dItem&quot;&gt;FILE-SECTION-Data-Item&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a138a5a426dc37baa21ff0a6cd812147f6f824f7" translate="yes" xml:space="preserve">
          <source>A hierarchical data structure where the group item &amp;mdash; itself a data item &amp;mdash; actually consists of two or more other contiguously allocated data items. For example, &amp;rsquo;Employee-Name&amp;rsquo; could be a 35-character data item consisting of a 20-character &amp;rsquo;Last-Name&amp;rsquo; data item followed by a 14-character &amp;rsquo;First-Name&amp;rsquo; and a 1-character &amp;rsquo;Middle-Initial&amp;rsquo;. See &lt;a href=&quot;#Structured-Data&quot;&gt;Structured Data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6800f23f13890398632c193412b08b0f3591b40c" translate="yes" xml:space="preserve">
          <source>A level-66 data item cannot rename a level-66, level-01, level-77, or level-88 data item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e916c05f9273d4c4902a107049849d2e5e4a64" translate="yes" xml:space="preserve">
          <source>A level-88 data item (which only has the value TRUE or FALSE)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460b7526c15be10112fea1102d494c640f94b244" translate="yes" xml:space="preserve">
          <source>A line-terminator sequence consisting of an ASCII carriage-return/line-feed character sequence (X&amp;rsquo;0D0A&amp;rsquo;) if you are running a MinGW or native Windows build of GnuCOBOL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c21b368f93b2fafdb362b0e17ff5dfdf5f4cdab" translate="yes" xml:space="preserve">
          <source>A line-terminator sequence consisting of an ASCII line-feed character (X&amp;rsquo;0A&amp;rsquo;) if you are running a Cygwin, Linux, Unix or OSX build of GnuCOBOL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c76fa6245cf7dc6e849e18b137d0f56e9d97a2" translate="yes" xml:space="preserve">
          <source>A linkage section should occur only within a subprogram. The compiler will not prevent its use in a main program, however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b07284619f73f72b36bd4d7e5723eebc918649" translate="yes" xml:space="preserve">
          <source>A literal formed according to the same rules as for a string literal (above), but prefixed with the letter &quot;Z&quot; (upper- or lower-case) constitutes a zero-delimited string literal. These literals differ from ordinary string literals in that they will be explicitly terminated with a byte of hexadecimal value 00. These &amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb0a0739e04f6c90efad0445ed59056a56f0426" translate="yes" xml:space="preserve">
          <source>A mode of the GnuCOBOL compiler&amp;rsquo;s operation where source statements are allowed to be as long as 255 characters, with no restrictions or requirements as to in which columns various syntax elements must appear. See &lt;a href=&quot;#Format-of-Program-Source-Lines&quot;&gt;Format of Program Source Lines&lt;/a&gt;, for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef803f054f581e2527d8b716bc0551fce57ca50" translate="yes" xml:space="preserve">
          <source>A mode of the GnuCOBOL compiler&amp;rsquo;s operation where source statements are constrained to meeting the pre-2002 standard of limiting COBOL statements to 80 columns, with various columns having limitations as to what sort of COBOL syntax could be specified in them. See &lt;a href=&quot;#Format-of-Program-Source-Lines&quot;&gt;Format of Program Source Lines&lt;/a&gt;, for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103dc8c37e24da8de743e2c5ad3ba18364b4e4a2" translate="yes" xml:space="preserve">
          <source>A note for the financially challenged: an annuity is basically a reverse loan; an accountant would take the result of this function multiplied by -1 times the principal amount to compute a loan payment you are making.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7606ce4ccbf4668e20126c51918a676a3d7d197a" translate="yes" xml:space="preserve">
          <source>A null &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b982d833b7293293bf3cc9ba4dd0b62f8f3097f" translate="yes" xml:space="preserve">
          <source>A numeric constant. See &lt;a href=&quot;#Numeric-Literals&quot;&gt;Numeric Literals&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5f2227c1faf15b6acc8baef96c691b4ce7d791" translate="yes" xml:space="preserve">
          <source>A numeric item used as a table subscript (see section 10.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda584bc3569f0e2bec9d70c40dc761bfd846e8a" translate="yes" xml:space="preserve">
          <source>A numeric literal whose value is specified by hexadecimal value. These literals are formed by a quote- or apostrophe-delimited sequence of from 1 to 16 hexadecimal digits (upper- or lower-case), prefixed with the letter &quot;H&quot; (also upper- or lower-case). For example, the number 123456 could be specified as the hexadecimal numeric literal&lt;code&gt;H'01E240'&lt;/code&gt; See &lt;a href=&quot;#Numeric-Literals&quot;&gt;Numeric Literals&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839a3cacd54e68896d539adb02e9b5d57d24eee5" translate="yes" xml:space="preserve">
          <source>A numeric, full-word, binary value (i.e.&lt;code&gt;USAGE BINARY-LONG&lt;/code&gt;(see &lt;a href=&quot;#USAGE&quot;&gt;USAGE&lt;/a&gt;)) which is the actual argument being passed to the subprogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2836dca9784aa04d3d8cf10d85e8023515642fc3" translate="yes" xml:space="preserve">
          <source>A period is absolutely mandatory at the end of every&lt;code&gt;COPY&lt;/code&gt;statement, even if the statement occurs within the scope of another one where a period might appear disruptive, such as within the scope of an&lt;code&gt;IF&lt;/code&gt;(see &lt;a href=&quot;#IF&quot;&gt;IF&lt;/a&gt;) statement. This mandatory period at the end of the statement will not, however, affect the statement scope in which the&lt;code&gt;COPY&lt;/code&gt;occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9abd54a59ef38419e097e35896db717136b2c4" translate="yes" xml:space="preserve">
          <source>A period is absolutely mandatory at the end of every&lt;code&gt;REPLACE&lt;/code&gt;statement (either format), even if the statement occurs within the scope of another one where a period might appear disruptive (such as within the scope of an&lt;code&gt;IF&lt;/code&gt;(see &lt;a href=&quot;#IF&quot;&gt;IF&lt;/a&gt;) statement; the period will not, however, affect the statement scope in which the&lt;code&gt;REPLACE&lt;/code&gt;occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8adf2adde9f304e5c649a7f0cb7d52cb077bbf" translate="yes" xml:space="preserve">
          <source>A period must follow the last coded clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfab475458579f17fef578f35e99c823953d388" translate="yes" xml:space="preserve">
          <source>A picture clause may only be specified on an elementary item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b52c91096b4207e442665db8261dee52deb87f" translate="yes" xml:space="preserve">
          <source>A portion of a program; these files are known as copybooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dac6a08aa9bf620b88ce15d9ccbf07ff64a725a" translate="yes" xml:space="preserve">
          <source>A program invoked directly by another program in such a manner that it may return control back to the other program, directly back to the point where the subprogram was invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3d8fa4e5dd5015b1e7b5451e0a5ea53b1c43bc" translate="yes" xml:space="preserve">
          <source>A program that executes a subprogram. Note that a calling program may also be a called program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73019119d39e8d342090236ca0805a4a8ef0d745" translate="yes" xml:space="preserve">
          <source>A program that is executed directly from an operating system or shell event. Main programs are not executed from other programs (i.e. they are not called programs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7750668dd02697b28ddd3826e92d33651f211c" translate="yes" xml:space="preserve">
          <source>A program wanting to test whether or not the current&lt;code&gt;SHIRT-SIZE&lt;/code&gt;value can be classified as&lt;code&gt;XL&lt;/code&gt;could have that decision coded as a combined condition (the most complex type of conditional expression), as either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74840f80c14999b3bf2d4ce43c0a5266f84051b3" translate="yes" xml:space="preserve">
          <source>A program written in the C programming language may serve as either the calling or called program too. A called program may act as a calling program to another called program. When a calling program does not serve as a called program to any program, that calling program is known as a &amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bd4a30de3610f867681fd310411f8960188ef6" translate="yes" xml:space="preserve">
          <source>A programmer may use the&lt;code&gt;INITIALIZE&lt;/code&gt;statement (see &lt;a href=&quot;#INITIALIZE&quot;&gt;INITIALIZE&lt;/a&gt;) to initialise any group or elementary data item at any time. This statement provides far more initialization options than just the simple rules stated above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc089161a976e29e5c103f3df1a458088e5ef923" translate="yes" xml:space="preserve">
          <source>A programmer-defined section or paragraph name in the procedure division assigned to a procedure. Procedure names serve as a means by which a statement may refer to the statements that follow the procedure name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca300fc17262c0e35be3dc303ad800744338a6a6" translate="yes" xml:space="preserve">
          <source>A report created via a&lt;code&gt;WRITE&lt;/code&gt;statement (see &lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt;) will contain carriage-control information. Most notably, ASCII form-feed characters (X&amp;rsquo;0C&amp;rsquo;) will be written to the report file to support the statement&amp;rsquo;s&lt;code&gt;ADVANCING PAGE&lt;/code&gt;option. Whether the data for a report line created via&lt;code&gt;ADVANCING PAGE&lt;/code&gt;occurs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0171c1a516f15bff1aea6d8bc8b184bf119102" translate="yes" xml:space="preserve">
          <source>A report group must contain at least one&lt;code&gt;LINE NUMBER&lt;/code&gt;clause in order to also contain a&lt;code&gt;NEXT GROUP&lt;/code&gt;clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f32d980483b55298a252a7c59e6f75c37fe9be" translate="yes" xml:space="preserve">
          <source>A report group that appears at the bottom of every page of an RWCS-generated report. Information typically found within such a report group might be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93cdfffaafb20bdb60cfbe7e6863b8db10f31f71" translate="yes" xml:space="preserve">
          <source>A report group that appears at the top of every page of an RWCS-generated report. Information typically found within such a report group might be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3653d1f33b82e62dcdd073e4dc1978516b7037b8" translate="yes" xml:space="preserve">
          <source>A report group that appears immediately after one or more detail groups of an RWCS-generated report. Such are produced automatically as a result of a control break. This type of group typically serves as a summary of the detail group(s) that precede it, as might be the case on a sales report for a chain of stores, where the detail groups documenting sales for each department (one department per detail group) from the same store might be followed by a control footing that provides a summation of the department-by-department sales for that store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6bb85f4be6a80b84558bc5de813be1723da70f" translate="yes" xml:space="preserve">
          <source>A report group that appears immediately before one or more detail groups of an RWCS-generated report. Such are produced automatically as a result of a control break. This type of group typically serves as an introduction to the detail group(s) that follow, as might be the case on a sales report for a chain of stores, where the detail groups documenting sales for each department (one department per detail group) from the same store might be preceded by a control heading that states the full name and location of the store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4498c11207f28941d4520f39293f9219298cf055" translate="yes" xml:space="preserve">
          <source>A report group that contains the detailed data being presented for the report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037c0541b31fa78862db0fda20101243fe4778fe" translate="yes" xml:space="preserve">
          <source>A report group that occurs only once in an RWCS-generated report &amp;mdash; as the very first presented report group of the report. These typically serve as an introduction to the report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fa809bc6d2c692cb027fe66f63fe17190a8852" translate="yes" xml:space="preserve">
          <source>A report group that occurs only once in an RWCS-generated report &amp;mdash; as the very last presented report group of the report. These typically serve as a visual indication that the report is finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990a7238833a361aa2470876eedb33ea7c464061" translate="yes" xml:space="preserve">
          <source>A result of zero will be passed back in the&lt;code&gt;RETURN-CODE&lt;/code&gt;special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d880e5e641debcac5d5a5c4f73358f1d752ba4d" translate="yes" xml:space="preserve">
          <source>A second (and equivalent) approach is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f564e7b37d4f94d62e8b5c00056fb3c8ed56c671" translate="yes" xml:space="preserve">
          <source>A segment of program code that may be utilized by multiple programs simply by having that program use the COPY statement to import that code into the program. Although similar to the &quot;include&quot; facility present in many other programming languages, the COBOL copybook mechanism is actually considerably more powerful. See &lt;a href=&quot;#Copybooks&quot;&gt;Copybooks&lt;/a&gt;, for a general discussion. See &lt;a href=&quot;#COPY&quot;&gt;COPY&lt;/a&gt;, for the specifics of the COPY statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178b6afb2c94b65ee0afec7da7e589933549c630" translate="yes" xml:space="preserve">
          <source>A separate manual exists that just contains the details of the GNUCobol implementation which is designed strictly for experienced Cobol programmers taken from this guide. This document (GnuCobol Quick Reference) does NOT contain any training subject matter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957ffa9346820b8c02cc467d476ea9f495b4d90d" translate="yes" xml:space="preserve">
          <source>A sequence of characters enclosed by a pair of single-quote (&amp;rsquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4658f9f67698ac6c9077696a68ac1d899c65965" translate="yes" xml:space="preserve">
          <source>A sequence of multiple 3rd-level operations &lt;code&gt;A * B / C&lt;/code&gt; for example) will evaluate in strict left-to-right sequence if no parenthesis are used to control the order of evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003df5eee7cadf752a01776cb686a7e97688589c" translate="yes" xml:space="preserve">
          <source>A sequence of multiple 4th-level operations &lt;code&gt;A - B + C&lt;/code&gt; for example) will evaluate in strict left-to-right sequence if no parenthesis are used to control the order of evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb19727d9bfcd2d064b345efe9119f4ca335ed5c" translate="yes" xml:space="preserve">
          <source>A shell will be opened subordinate to the GnuCOBOL program issuing the call to&lt;code&gt;SYSTEM&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bc5ab343aed5b2a7a14fb295706ce8dd1ba81d" translate="yes" xml:space="preserve">
          <source>A simpler approach to retrieving an environment variables value is to use the&lt;code&gt;ENVIRONMENT&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07138efebf1cac70d0007731fcbff9305061553d" translate="yes" xml:space="preserve">
          <source>A single executable COBOL instruction. All statements start with a verb &lt;code&gt;DISPLAY&lt;/code&gt;&lt;code&gt;IF&lt;/code&gt;&lt;code&gt;MOVE&lt;/code&gt; ...) which is followed by the operands and additional syntax elements that describe the actions to be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260a2506b88d97bba51b298e71663fcff1ebd55d" translate="yes" xml:space="preserve">
          <source>A single file of COBOL source code may contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e5c8bc610d225ac78975069d14da7a5fb8b0ad" translate="yes" xml:space="preserve">
          <source>A single folder may be named or multiple folders may be specified, separated by a system-appropriate delimiter character. When multiple folders are specified, they will be searched in the order they are named on the environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7f105c47c49009a19242a2cefd9b70f10224dd" translate="yes" xml:space="preserve">
          <source>A single program. In this case, the&lt;code&gt;END PROGRAM&lt;/code&gt;or&lt;code&gt;END FUNCTION&lt;/code&gt;statement is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38dca46e796eb9323d0e75268f5914ec0dacedc" translate="yes" xml:space="preserve">
          <source>A single source file being compiled by the GnuCOBOL compiler. A compilation unit may contain one or more programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="820b5858de0e5c4fa1d8f4f6bb649d9249f58100" translate="yes" xml:space="preserve">
          <source>A sort work file is never opened or closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5014ce3c0ab7191d300c4ebd4228019610349979" translate="yes" xml:space="preserve">
          <source>A special form of the&lt;code&gt;SORT&lt;/code&gt;statement also exists just to sort the data that resides in a table. This is particularly useful if you wish to use&lt;code&gt;SEARCH ALL&lt;/code&gt;against the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af2dd03f96f06f8b9aa87603ff6529dcfeb49f8" translate="yes" xml:space="preserve">
          <source>A spot in the procedure division where a program may begin execution when it is executed from the operating system, invoked as a user-defined function or called by another program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28023ed24010e21a15f1c8369afef8d0b4741cfd" translate="yes" xml:space="preserve">
          <source>A string of characters enclosed within a pair of quotation marks (&quot;) or apostrophes (&amp;rsquo;). See &lt;a href=&quot;#Alphanumeric-Literals&quot;&gt;Alphanumeric Literals&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efea6d96e3a501ab81d073968654760c83a9000" translate="yes" xml:space="preserve">
          <source>A subprogram executed from another via a GnuCOBOL&lt;code&gt;CALL&lt;/code&gt;(see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;) statement (or the equivalent in whatever programming language that other program was written in).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb36ad047f5286167d947811b9b23edb4061236" translate="yes" xml:space="preserve">
          <source>A subprogram whose executable object code is contained in a different executable file as its calling program. Dynamic subprograms are therefore loaded into memory as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad1f299fc93b31ff54c29ea9450fe29ac4777f4" translate="yes" xml:space="preserve">
          <source>A subprogram whose executable object code is part of the same executable file as its calling program. Static subprograms are therefore loaded into memory at the same time as their caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a8344ff3dd4636bf6c36a36b04ec162dc9cc7a" translate="yes" xml:space="preserve">
          <source>A subprogram written in GnuCOBOL that is executed in a syntactically-similar manner to that by which the various built-in intrinsic functions are executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c756add4f170d0e7b001a6765446098d7d190b" translate="yes" xml:space="preserve">
          <source>A subroutine may be passed a maximum of 36 arguments; if you build the GnuCOBOL software yourself from the distributed source, you CAN change this value by altering the defined value of&lt;code&gt;COB_MAX_FIELD_PARAMS&lt;/code&gt;in the &quot;common.h&quot; header file. There is no built-in GnuCOBOL limit to how many arguments a user-defined function may be passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0398ae76ce9cec7032a6d907628f5a1ffb6c78" translate="yes" xml:space="preserve">
          <source>A subroutine may&lt;code&gt;CALL&lt;/code&gt;itself, either directly or indirectly from another subroutine or user-defined function that it&lt;code&gt;CALL&lt;/code&gt;. Any subroutine that indulges in this sort of behaviour (called recursion) is called a &amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136b88624ac57f8c3000325b2a5a186efcc092d1" translate="yes" xml:space="preserve">
          <source>A success (0) or failure (non-0) result will be passed back in the&lt;code&gt;RETURN-CODE&lt;/code&gt;special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70afb208b159d631465b54519334f05064d3b1b" translate="yes" xml:space="preserve">
          <source>A successful sequential READ will retrieve the next available record from &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27463bfc6f3ca5f5421d61eb9738d0cae65da440" translate="yes" xml:space="preserve">
          <source>A successful&lt;code&gt;CLOSE&lt;/code&gt;will write any remaining unwritten record buffers to the file (similar to an&lt;code&gt;UNLOCK&lt;/code&gt;statement (see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;)) and release any file locks for the file, regardless of open mode. A closed file will then be no longer available for subsequent I/O statements until it is once again OPENED.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd4a8ac4a4df371a1397bb7da367c2ec9cd07f6" translate="yes" xml:space="preserve">
          <source>A successful&lt;code&gt;RETURN&lt;/code&gt;will retrieve the next available record from &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d67e57763ac2a88aff3345c7d9aa42b64a07ae" translate="yes" xml:space="preserve">
          <source>A target range, specified by the presence of an&lt;code&gt;AFTER INITIAL&lt;/code&gt;and/or&lt;code&gt;BEFORE INITIAL&lt;/code&gt;clause; the rules for specifying target ranges were covered previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee0fcc79be460b8e2a1e7762461047ed6fb1e9c" translate="yes" xml:space="preserve">
          <source>A title for the report</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1030f3cb01ff34fa0b8248317574686aeed5847" translate="yes" xml:space="preserve">
          <source>A valid date is one of the form yyyyddd in the range 1601001 to 9999365. Leap year is accounted for in determining the maximum number of days in a year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3a75334be977c93a40083421baaa926f1dd2d8" translate="yes" xml:space="preserve">
          <source>A valid date is one of the form yyyymmdd in the range 1601/01/01 to 9999/12/31, with no more than the expected maximum number of days in the month, accounting for leap year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc90003a1988e8e41271674d3a95d97788584716" translate="yes" xml:space="preserve">
          <source>A value less than 1 or greater than 3067671 (9999/12/31) will return a result of 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d854735e96a3b6d14ab179a4ba30fcb5e9c59f" translate="yes" xml:space="preserve">
          <source>A vertical list of items, bounded by multiple brace characters, is another way of signifying a choice between a series of items where exactly one item must be selected. This form is used to show choices when one or more of the selections is more complex than just a single word, or when there are too many choices to present horizontally with &quot;|&quot; meta characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a20635b47b6a24f0f55ce8870ec69bb5512edf8" translate="yes" xml:space="preserve">
          <source>A vertical list of items, bounded by multiple vertical bar characters, signifies a choice between a series of items where one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9ca54e7443c13ae64df83bcf12862c031c72a5" translate="yes" xml:space="preserve">
          <source>A word coded in a GnuCOBOL program without any quote or apostrophe characters around it (which would have transformed that sequence of characters into a literal string) which has a very specific meaning to the compiler. See &lt;a href=&quot;#Language-Reserved-Words&quot;&gt;Language Reserved Words&lt;/a&gt;, for a general discussion of the concept. See &lt;a href=&quot;#Appendix-B-_002d-Reserved-Word-List&quot;&gt;Appendix B - Reserved Word List&lt;/a&gt;, for a complete list of GnuCOBOL reserved words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd7223f9cc5256d01bf82611df56f0d6bbceb28" translate="yes" xml:space="preserve">
          <source>A, B, C, G</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e02831480d3d967226d70d6b71ca76828c43c0" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;CLOSE&lt;/code&gt;statement (see &lt;a href=&quot;#CLOSE&quot;&gt;CLOSE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33df03dba2b8b07f73e07914c9a224cd064bf5ed" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;CONVERTING&lt;/code&gt;clause performs a series of single-character substitutions against a data item in much the same manner as is possible with the&lt;code&gt;TRANSFORM&lt;/code&gt;statement (see &lt;a href=&quot;#TRANSFORM&quot;&gt;TRANSFORM&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bc87d5a3f3ac10fdff976629e5d43703ef6b37" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;DELETE&lt;/code&gt;statement (see &lt;a href=&quot;#DELETE&quot;&gt;DELETE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca600a46ca81125322557be63b6de99d1fdc58c" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;DISPLAY&lt;/code&gt;(see &lt;a href=&quot;#DISPLAY&quot;&gt;DISPLAY&lt;/a&gt;) of a data item containing&lt;code&gt;P&lt;/code&gt;symbols is a little strange. The value displayed will be what is actually in storage, but the total size of the displayed value will be as if the&lt;code&gt;P&lt;/code&gt;symbols had been&lt;code&gt;9&lt;/code&gt;. Thus, after the above statement established a value for Gross-Revenue, a&lt;code&gt;DISPLAY Gross-Revenue&lt;/code&gt;would produce output of &amp;rsquo;&lt;code&gt;000000128&lt;/code&gt;&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe422e523b7aad34646aafee677859e2fd5a1cf5" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;GLOBAL&lt;/code&gt;item must have a data name and that name cannot be&lt;code&gt;FILLER&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505d6049ee9248810a670f63a4c22967100121e9" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;GO TO&lt;/code&gt;statement (see &lt;a href=&quot;#GO-TO&quot;&gt;GO TO&lt;/a&gt;) that transfers control out of the input procedure will terminate the&lt;code&gt;SORT&lt;/code&gt;statement but allows the program to continue executing from the point where the&lt;code&gt;GO TO&lt;/code&gt;statement transferred control to. Once an input procedure has been &quot;aborted&quot; using a&lt;code&gt;GO TO&lt;/code&gt;it cannot be resumed, and the contents of the sort work file are lost. You may, however, re-execute the&lt;code&gt;SORT&lt;/code&gt;statement itself. USING A&lt;code&gt;GO TO&lt;/code&gt;statement TO PREMATURELY TERMINATE A SORT, OR RE-STARTING A PREVIOUSLY-CANCELLED SORT IS NOT CONSIDERED GOOD PROGRAMMING STYLE AND SHOULD BE AVOIDED.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc9e7dde1a8be18cdc699fd6b5d32575abd061a" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;GO TO&lt;/code&gt;statement (see &lt;a href=&quot;#GO-TO&quot;&gt;GO TO&lt;/a&gt;) that transfers control out of the output procedure will terminate the&lt;code&gt;MERGE&lt;/code&gt;statement but allows the program to continue executing from the point where the&lt;code&gt;GO TO&lt;/code&gt;statement transferred control to. Once an output procedure has been &quot;aborted&quot; using a&lt;code&gt;GO TO&lt;/code&gt;it cannot be resumed, and the contents of the merge work file are lost. You may, however, re-execute the&lt;code&gt;MERGE&lt;/code&gt;statement itself. USING A&lt;code&gt;GO TO&lt;/code&gt;statement TO PREMATURELY TERMINATE A MERGE, OR RE-STARTING A PREVIOUSLY-CANCELLED MERGE IS NOT CONSIDERED GOOD PROGRAMMING STYLE AND SHOULD BE AVOIDED.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0eb10f6b62848d7cf7d686da95a27d8d4bc3db" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;GO TO&lt;/code&gt;statement (see &lt;a href=&quot;#GO-TO&quot;&gt;GO TO&lt;/a&gt;) that transfers control out of the output procedure will terminate the&lt;code&gt;SORT&lt;/code&gt;statement but allows the program to continue executing from the point where the&lt;code&gt;GO TO&lt;/code&gt;statement transferred control to. Once an output procedure has been &quot;aborted&quot; using a&lt;code&gt;GO TO&lt;/code&gt;it cannot be resumed, and the contents of the sort work file are lost. You may, however, re-execute the&lt;code&gt;SORT&lt;/code&gt;statement itself. USING A&lt;code&gt;GO TO&lt;/code&gt;statement TO PREMATURELY TERMINATE A SORT, OR RE-STARTING A PREVIOUSLY-CANCELLED SORT IS NOT CONSIDERED GOOD PROGRAMMING STYLE AND SHOULD BE AVOIDED.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223ed32521579aaaa52ccb01d30eff0bb6b1744f" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;LINE&lt;/code&gt;clause explicitly stated in the definition of a screen section data item will override any&lt;code&gt;LINE&lt;/code&gt;clause included on the&lt;code&gt;ACCEPT screen-data-item&lt;/code&gt;or&lt;code&gt;DISPLAY screen-data-item&lt;/code&gt;statement that presents that data item to the screen. The same is true of&lt;code&gt;COLUMN&lt;/code&gt;clauses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232872d808c71908f81da80585266f56c026df4a" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;LOCK&lt;/code&gt;clause, which may be coded on a&lt;code&gt;READ&lt;/code&gt;(see &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt;),&lt;code&gt;REWRITE&lt;/code&gt;(see &lt;a href=&quot;#REWRITE&quot;&gt;REWRITE&lt;/a&gt;) or&lt;code&gt;WRITE&lt;/code&gt;statement (see &lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt;) looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae948169fe86dffed02564f672595c7823b4929" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;NOT AT END&lt;/code&gt;clause will cause &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bead7e9a5b8f10111f621a61590f7b6edb0d4bcf" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;POSITIVE&lt;/code&gt;</source>
          <target state="translated">A&lt;code&gt;POSITIVE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a02638d11becccc613652579caa166d90bc83553" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;READ&lt;/code&gt;statement (see &lt;a href=&quot;#READ&quot;&gt;READ&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7453f1102079c4d5203efc7e3aa6c87c56359a4" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;RETURN-CODE&lt;/code&gt;special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) value of -1 indicates an invalid argument, while a value of 0 indicates success. A value of 35 means the file does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c41410f51a3910f1fd4d4643a4b01cae2001566" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;REWRITE&lt;/code&gt;statement (see &lt;a href=&quot;#REWRITE&quot;&gt;REWRITE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ced80ef0db64a827afcfb13ff08d2dc7783808" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;SELECT&lt;/code&gt;statement without an&lt;code&gt;ORGANIZATION&lt;/code&gt;explicitly coded will be handled as if the following ORGANIZATION clause had been specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdf29a6b08dcc7fc96a18f1fb51c1b17c499498" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;START&lt;/code&gt;statement (see &lt;a href=&quot;#START&quot;&gt;START&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c01d31705209bc1bb6d7f0ac48b96971c07db7" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;USAGE&lt;/code&gt;clause specified at the group item level will apply that&lt;code&gt;USAGE&lt;/code&gt;to all subordinate data items, except those that themselves have a&lt;code&gt;USAGE&lt;/code&gt;clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c05c8b9c5a8cf2c9bf53b4f0f14a91e82e885af" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;USE FOR DEBUGGING&lt;/code&gt;declarative procedure will be ignored at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f377c5b04a0a99071e78c0f5081123114595ae7" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;WHEN&lt;/code&gt;clause has</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a3d4cc43a69ba7d68475d7b5579a400c442e75" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;WRITE&lt;/code&gt;statement (see &lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ff4a71a62e1260d783e9b6256c3516ce70bcc7" translate="yes" xml:space="preserve">
          <source>A&lt;code&gt;ZERO&lt;/code&gt;</source>
          <target state="translated">A&lt;code&gt;ZERO&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e35c34fd37f04493178cf2baeb97ebd75a09f338" translate="yes" xml:space="preserve">
          <source>AAAAAABBBB</source>
          <target state="translated">AAAAAABBBB</target>
        </trans-unit>
        <trans-unit id="ff278c1c964e3163f32ece5aac0419c795e6746f" translate="yes" xml:space="preserve">
          <source>AAAAAABBBBBBCCCCCCDDDDDDEEEEEE</source>
          <target state="translated">AAAAAABBBBBBCCCCCCDDDDDDEEEEEE</target>
        </trans-unit>
        <trans-unit id="687dc829754389c8f4cd2c14b7cbac33cc1592d0" translate="yes" xml:space="preserve">
          <source>ABC&amp;rsquo;</source>
          <target state="translated">ABC&amp;rsquo;</target>
        </trans-unit>
        <trans-unit id="5a2473c86510d35c91dfab31d746d75e8689fe16" translate="yes" xml:space="preserve">
          <source>ABS Function Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c6cfd7829f0b1835d6358925e60b5eb3aad446" translate="yes" xml:space="preserve">
          <source>ABS, ACCEPT, ACCESS, ACOS, ACTIVE-CLASS, ADD, ADDRESS, ADVANCING, AFTER, ALIGNED, ALL, ALLOCATE, ALPHABET, ALPHABETIC, ALPHABETIC-LOWER, ALPHABETIC-UPPER, ALPHANUMERIC, ALPHANUMERIC-EDITED, ALSO, ALTER, ALTERNATE, AND, ANNUITY, ANY, ANYCASE, ARE, AREA, AREAS, ARGUMENT-NUMBER, ARGUMENT-VALUE, ARITHMETIC, AS, ASCENDING, ASCII, ASIN, ASSIGN, AT, ATAN, ATTRIBUTE, AUTHOR, AUTO, AUTOMATIC, AUTO-SKIP, AUTOTERMINATE, AWAY-FROM-ZERO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6969b70c23d624175e9c5d9fd7f1da18abb82e9d" translate="yes" xml:space="preserve">
          <source>ACCEPT FROM COMMAND-LINE Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d045b93c73628d391ae6d4373f2e7cac96465a" translate="yes" xml:space="preserve">
          <source>ACCEPT FROM CONSOLE Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941a0cc73fcd9b01c2980c33cdc2de4c8abbf51e" translate="yes" xml:space="preserve">
          <source>ACCEPT FROM DATE/TIME Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdea3c3f6978ea0353843f20dc2d3a28e5cdf32" translate="yes" xml:space="preserve">
          <source>ACCEPT FROM ENVIRONMENT Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7349af50f2171a9ffb7c4e77d57b82d2b2f60af0" translate="yes" xml:space="preserve">
          <source>ACCEPT FROM EXCEPTION-STATUS Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13df1a7f344e0acfdb4833afe44600b1d4348e81" translate="yes" xml:space="preserve">
          <source>ACCEPT FROM Runtime-Info Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc3e59c608407bff870ec6383386aa04edeab55" translate="yes" xml:space="preserve">
          <source>ACCEPT FROM Screen-Info Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585d9db23e65ef6c5c4f34754b87b73cd13e9f3b" translate="yes" xml:space="preserve">
          <source>ACCEPT OMITTED Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b931cb9aac32392e09878b251af183f7bb4a039" translate="yes" xml:space="preserve">
          <source>ACCEPT screen-data-item Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467e5af048ea33175a21c4768833529ef7582c86" translate="yes" xml:space="preserve">
          <source>ACOS Function Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca918b563c528d4d33239ca664c7ef9ee6f7311" translate="yes" xml:space="preserve">
          <source>ADD CORRESPONDING Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52712d46edfa973660e2926f190bb18359f347b5" translate="yes" xml:space="preserve">
          <source>ADD GIVING Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f4a23d820e1f8f8b7a0141299676fb42f0df9c" translate="yes" xml:space="preserve">
          <source>ADD TO Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497d5aeb3b868303f8ec335c52e300862b9e1ef4" translate="yes" xml:space="preserve">
          <source>ALLOCATE Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbbccb1c0831d639157fea227dbfabc6cdb02af" translate="yes" xml:space="preserve">
          <source>ALTER Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b1d891a5cb1e347f14e7f2a14d241bef6b335a" translate="yes" xml:space="preserve">
          <source>ANNUITY Function Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a360346989ccbf5b0c5b30768a97af22c3e30500" translate="yes" xml:space="preserve">
          <source>ANY LENGTH Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4bafce66c8d4ac6113cdfec356e7f4ec409524" translate="yes" xml:space="preserve">
          <source>ASIN Function Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed9139c7fbb38ab5418b87afe86097d1bf50d30" translate="yes" xml:space="preserve">
          <source>AT END Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc18a3537070f66f2e14699a6e3e78930aec524" translate="yes" xml:space="preserve">
          <source>ATAN Function Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10050fdb82d860af9fa68fa051e044cf8981f016" translate="yes" xml:space="preserve">
          <source>AUTO Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7ba359e15e9bdb656bafc3aaf5aad3f92cfde6" translate="yes" xml:space="preserve">
          <source>AUTO-SKIP Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89cad62ef6e4f734665ac69ff0420b79c0fd42a" translate="yes" xml:space="preserve">
          <source>AUTOTERMINATE Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b557090a9fe558bd322356dd04a4388f1784ec" translate="yes" xml:space="preserve">
          <source>Absence of a&lt;code&gt;CLASSIFICATION&lt;/code&gt;clause will cause character classification to occur according to the rules for the computer&amp;rsquo;s native character set (ASCII, EBCDIC, &amp;hellip;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26f10fa50723c40326ed839a5c1b9a723c6ba0d" translate="yes" xml:space="preserve">
          <source>Absence of a&lt;code&gt;ROUNDED&lt;/code&gt;clause is the same as specifying&lt;code&gt;ROUNDED MODE IS TRUNCATION&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680acb53ceb0a01592ffaf39bec7163237591073" translate="yes" xml:space="preserve">
          <source>Access to the record by other programs will be denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115bdb323116fd750f58dd8ffcf6926f4672eb5f" translate="yes" xml:space="preserve">
          <source>Actual presentation of the report group in question.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8dec0022141a1908d48dfa35ee678bf2d43e15" translate="yes" xml:space="preserve">
          <source>Add any necessary additional digits to each record in your test file (if lines weren&amp;rsquo;t full) or remove characters from the end of each record if lines wrapped. If you made changes, reprint the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511a75d2d2bee805bc8e768f1a7b181dce711f17" translate="yes" xml:space="preserve">
          <source>Additional entry-points may be defined via the&lt;code&gt;ENTRY&lt;/code&gt;statement (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde23f898725b5d60dc82c5bfa3151d09953a9ea" translate="yes" xml:space="preserve">
          <source>Admittedly, this table is much more verbose than the one shown with a group&lt;code&gt;VALUE&lt;/code&gt; What is good about this initialization technique, however, is that you can have as many&lt;code&gt;FILLER&lt;/code&gt;and&lt;code&gt;VALUE&lt;/code&gt;items as you need for a larger table, and those values can be as long as necessary!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d0a262b902e0e5712e116a07998e2726ed79ec" translate="yes" xml:space="preserve">
          <source>After &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a479ff3d25c74b88854a758efa2751a0b9205b" translate="yes" xml:space="preserve">
          <source>After successful execution of a&lt;code&gt;START&lt;/code&gt;statement, the internal logical record pointer into the &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0d1c8b67ea8b212a9bb0827fa271cec97e2b47" translate="yes" xml:space="preserve">
          <source>After the merge work file has been populated, the merged data will be written to each &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa3bfd62577349b5f83c182a6caaac163186a60" translate="yes" xml:space="preserve">
          <source>After this command is executed, the file &quot;subvsindex.c&quot; will contain the procedure division C code and &quot;subvsindex.c.1.h&quot; will contain the working-storage C code. Compare the generated C code for each of the three&lt;code&gt;MOVE&lt;/code&gt;statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89412e7652a69f895c2635f954a6ecae0fad5ad" translate="yes" xml:space="preserve">
          <source>After this format of the&lt;code&gt;ACCEPT&lt;/code&gt;statement is executed, the program&amp;rsquo;s&lt;code&gt;CRT STATUS&lt;/code&gt;(see &lt;a href=&quot;#SPECIAL_002dNAMES&quot;&gt;SPECIAL-NAMES&lt;/a&gt;) identifier will be populated with one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87b3df66039bb59011675b309b6f9c9d6dd2b84" translate="yes" xml:space="preserve">
          <source>All &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ac9f6f2d1adab2972fca96d74085b5cf7ad53e" translate="yes" xml:space="preserve">
          <source>All 01-level data items described within a subprogram&amp;rsquo;s linkage section should appear in a&lt;code&gt;PROCEDURE DIVISION USING&lt;/code&gt;(see &lt;a href=&quot;#PROCEDURE-DIVISION-USING&quot;&gt;PROCEDURE DIVISION USING&lt;/a&gt;) or as arguments on an&lt;code&gt;ENTRY&lt;/code&gt;statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66b622dfc5b9526d858e9a4e5e949d51c6cd1a2" translate="yes" xml:space="preserve">
          <source>All CPUs are capable of&lt;code&gt;understanding&lt;/code&gt;big-endian format, which makes it the&lt;code&gt;most-compatible&lt;/code&gt;form of binary storage across computer systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b00b257095010cc006c9ce9622e5cd96f66c99" translate="yes" xml:space="preserve">
          <source>All User-defined functions are automatically capable of being executed recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4cff0bee43e5569996a003a49c8330cdc929ef" translate="yes" xml:space="preserve">
          <source>All arguments are group items, &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd8e9adefe9bb4103044eac0fc13628c8ad5a15" translate="yes" xml:space="preserve">
          <source>All arguments are group items,&lt;code&gt;USAGE DISPLAY&lt;/code&gt;elementary items or alphanumeric literals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669b4aa6e0ecc0dfc98e9d9c5ac0be2ac0017721" translate="yes" xml:space="preserve">
          <source>All arguments are numeric data items and/or numeric literals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375fa671de31ea2f79098c7b7f34026b4b0c01fc" translate="yes" xml:space="preserve">
          <source>All computations and&lt;code&gt;MOVE&lt;/code&gt;(see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) operations involving such a data item will behave as if the zeros were actually there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bced720d4dd924cd3c9818ae2d0dff46ad4205ec" translate="yes" xml:space="preserve">
          <source>All destination fields have been fully processed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ffb55c8790be0003f9850d39658d38ffc06f1a" translate="yes" xml:space="preserve">
          <source>All executable code statements within a single procedure division paragraph or section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a828d776f56b3fa47fbbd3025d63ab153cd3d17" translate="yes" xml:space="preserve">
          <source>All files are initially described to a GnuCOBOL program using a&lt;code&gt;SELECT&lt;/code&gt;statement (see &lt;a href=&quot;#SELECT&quot;&gt;SELECT&lt;/a&gt;). In addition to defining a name by which the file will be referenced within the program, the&lt;code&gt;SELECT&lt;/code&gt;statement will specify the name and path by which the file will be known to the operating system along with its organization, locking and sharing attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e328143b72f71fac6248afd324e96319510a5d4" translate="yes" xml:space="preserve">
          <source>All identifiers (&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4100a417e93168d069e03cbc8382833c07eca3" translate="yes" xml:space="preserve">
          <source>All identifiers specified on the CHAINING clause should be defined as PIC X, PIC A, group items (which are treated implicitly as PIC X) or as PIC 9 USAGE DISPLAY. The use of USAGE BINARY (or the like) data items as CHAINING arguments is not recommended as all command-line tokens will be retained in their original character form as they are moved into the argument data items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbafbdaeebb2cfe3180fbaae9955985546e7b97" translate="yes" xml:space="preserve">
          <source>All identifiers used in a &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d59b3a685a1300faafde8cf819bd33531c1c427" translate="yes" xml:space="preserve">
          <source>All literals (&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba7f01f5e187ec9ff4d29b64023e35a6dc2346a" translate="yes" xml:space="preserve">
          <source>All literals and identifiers (except for &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905d5a04e7360c55ec09cb9c601163d00091808f" translate="yes" xml:space="preserve">
          <source>All literals and identifiers must be explicitly or implicitly defined as alphanumeric or alphabetic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae39d2fdf62dacec472bde2da872c41a110af7cf" translate="yes" xml:space="preserve">
          <source>All locks currently being held for all open files will be released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adaa3e2a38e11cde9aefb1762bf988d9293f6d7" translate="yes" xml:space="preserve">
          <source>All of &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff299c8c3c7d7154628eb1636c0c2f8a75cf5266" translate="yes" xml:space="preserve">
          <source>All or a portion of a person&amp;rsquo;s name. These could be extended to include business names, product names, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cf0d2d610bbb95f243ddbb03987c0d1c0e4052" translate="yes" xml:space="preserve">
          <source>All or part of a telephone number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a601bb2f1d0dfe5966165aa4b93c596039eaaa" translate="yes" xml:space="preserve">
          <source>All other COBOL programming language components are coded in these columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f15414d483c68f5de0651e9729c6b20245d32ca" translate="yes" xml:space="preserve">
          <source>All sending items have been fully processed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f330e70f20a7bf09b5555bc91b884dfc772bd9ac" translate="yes" xml:space="preserve">
          <source>All sum counters, if any, will be set to 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef64daeb21d9797a9d72059f47e97e21999e7009" translate="yes" xml:space="preserve">
          <source>All tests above carried out under Linux with a AMD FX8350 under very low loading prior to the test. I would have also tried on a i7-7700 but that is under Windows 10 and I do not have a GC version on it - Vince.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff18c97d087b17a90257f4e255ffcacf0dd0ebc" translate="yes" xml:space="preserve">
          <source>All&lt;code&gt;COPY&lt;/code&gt;statements are located and the contents of the corresponding copybooks inserted into the program source code before the actual compilation process begins. If a copybook contains a&lt;code&gt;COPY&lt;/code&gt;statement, the copybook insertion process will be repeated to resolve the embedded&lt;code&gt;COPY&lt;/code&gt; This will continue until no unresolved&lt;code&gt;COPY&lt;/code&gt;statements remain. At that point, actual program compilation will begin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a101efb30081b9a7d745fc8788273f95f6c81dae" translate="yes" xml:space="preserve">
          <source>All&lt;code&gt;RENAMES&lt;/code&gt;entries associated with one logical record must immediately follow that record&amp;rsquo;s last data description entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b3fcb864d14fdf63072b5e953169893a577e01" translate="yes" xml:space="preserve">
          <source>All&lt;code&gt;Z&lt;/code&gt;symbols that correspond to character positions in which leading zeros reside will have their &quot;0&quot; values replaced by spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fe4917dbe0460e482c064e582fd68e6b45be7d" translate="yes" xml:space="preserve">
          <source>Allocate level-01 data items in alphabetical sequence in the program source wherever practical. This will make it vastly easier to locate the definitions of 01-level items in the program source without having to resort to a compilation cross-reference listing and/or text editor &quot;find&quot; command to locate them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb73fa20d3b5514b729e8ce7057d939085a58147" translate="yes" xml:space="preserve">
          <source>Alphabet-Name-Clause</source>
          <target state="translated">Alphabet-Name-Clause</target>
        </trans-unit>
        <trans-unit id="e0a4e02665e66436669ab6e50f0a87c76707ccf2" translate="yes" xml:space="preserve">
          <source>Alphabetic Data Item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716942537b1060189a24d41ebb942ff8aff4ce29" translate="yes" xml:space="preserve">
          <source>Alphabetic Data Items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b153bb4fc31ab35c94e5870d9113346b96bcd9" translate="yes" xml:space="preserve">
          <source>Alphanumeric Data Item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649c5b48ff612f6a435f23f0c0255844f9731001" translate="yes" xml:space="preserve">
          <source>Alphanumeric Literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2656ba75be192380d08900217cad46480544bd9b" translate="yes" xml:space="preserve">
          <source>Alphanumeric and alphabetic (i.e. text) data items will be initialized to&lt;code&gt;SPACES&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f920b7d21b8ecbd8b4695faddc87f556ea58d423" translate="yes" xml:space="preserve">
          <source>Alphanumeric data entered into &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb511e236aa6e2cfaebe56e01a86eadcd6899ea5" translate="yes" xml:space="preserve">
          <source>Alphanumeric literals and identifiers may optionally be prefixed with the&lt;code&gt;LENGTH OF&lt;/code&gt;clause. The compile-time value generated by this clause will be the number of bytes in the alphanumeric literal or the defined size (in bytes) of the identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f735a4ce4da16e0e774362931934a03e2abe2c0" translate="yes" xml:space="preserve">
          <source>Alphanumeric literals may take any of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ccdee962dd6744e2e7fb3550a928e20903bb57" translate="yes" xml:space="preserve">
          <source>Alphanumeric literals too long to fit on a single line may be continued to the next line in one of two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89101858aabaab9443207e67caf73e13007c5dc" translate="yes" xml:space="preserve">
          <source>Also used during execution of programs is runtime.cfg also found in /usr/local/share/gnucobol/config for *nix and this file can also be changed to match your environment if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1d2c575fbd8e943786dc808790ede9a6872afe" translate="yes" xml:space="preserve">
          <source>Alternate entry-points provide multiple ways in which the same subroutine may be called; presumably, each entry-point will provide some different functionality to the calling program. For example, if you wished to write a subroutine that manipulates &quot;student&quot; records in a database, you might have the primary entry-point name retrieve a student record from the database, while the alternate entry points&lt;code&gt;Add-Student&lt;/code&gt;&lt;code&gt;Update-Student&lt;/code&gt;and&lt;code&gt;Delete-Student&lt;/code&gt;could provide the alternate functions implied by their entry-point names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a86b49c25dd29cdaf3912801cf640a6f60db10" translate="yes" xml:space="preserve">
          <source>Although the specification of one or more KEY clauses is optional, currently, a table sort with no&lt;code&gt;KEY&lt;/code&gt;specification(s) made on the&lt;code&gt;SORT&lt;/code&gt;statement is unsupported by GnuCOBOL and will be rejected by the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54adf1624256b2e5fe75c56f0f3d55b3b88fa10" translate="yes" xml:space="preserve">
          <source>An &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ade6575e1d358c15c8e894aa3e622aaf4f135b4" translate="yes" xml:space="preserve">
          <source>An &amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4d3e8918ff2a9cc69187b0c51202b0db70a3b9" translate="yes" xml:space="preserve">
          <source>An 01-level item defined in the FILE SECTION (constituting the layout of a record within a file). Note that these items would probably also have a &quot;F-&quot; prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4725accf032580bb79aab44f026bcbafad236be5" translate="yes" xml:space="preserve">
          <source>An RWCS-generated report to which at least one type of detail group is presented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52bba8c30c7337908a19fe6d2ad7e2626759f68b" translate="yes" xml:space="preserve">
          <source>An RWCS-generated report to which no detail groups are presented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f94cf8b1227e7450d59a3736c6204064a6a6b2" translate="yes" xml:space="preserve">
          <source>An alphanumeric literal is not valid for use in arithmetic expressions unless it is first converted to it&amp;rsquo;s numeric computational equivalent; there are three numeric conversion intrinsic functions built into GnuCOBOL that can perform this conversion &amp;mdash;&lt;code&gt;NUMVAL&lt;/code&gt;(see &lt;a href=&quot;#NUMVAL&quot;&gt;NUMVAL&lt;/a&gt;),&lt;code&gt;NUMVAL-C&lt;/code&gt;(see &lt;a href=&quot;#NUMVAL_002dC&quot;&gt;NUMVAL-C&lt;/a&gt;) and&lt;code&gt;NUMVAL-F&lt;/code&gt;(see &lt;a href=&quot;#NUMVAL_002dF&quot;&gt;NUMVAL-F&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58be08d7e828764fa15bd43c0a6d1d0a57c144cb" translate="yes" xml:space="preserve">
          <source>An alphanumeric literal prefixed with an upper- or lower-case &quot;Z&quot; character &amp;mdash; for example,&lt;code&gt;Z'ABC'&lt;/code&gt; These literals are one character longer than the value within apostrophes or quotes would make them appear. The extra character (the last character) will be a null character (comprised entirely of zero bits). These literals are ideal when defining or assigning values to alphanumeric data items that will be passed as arguments to a C subroutine. See &lt;a href=&quot;#Alphanumeric-Literals&quot;&gt;Alphanumeric Literals&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c1f98c112351956e6e6801dc71b9249112dee1" translate="yes" xml:space="preserve">
          <source>An alternate entry point is added to a subroutine using the&lt;code&gt;ENTRY&lt;/code&gt;statement (see &lt;a href=&quot;#ENTRY&quot;&gt;ENTRY&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9cd9613bc2af541405ec4b5b278597d8b559dc" translate="yes" xml:space="preserve">
          <source>An alternative to the use of&lt;code&gt;ACCEPT FROM Runtime-Info&lt;/code&gt;is to use the&lt;code&gt;EXCEPTION-STATUS&lt;/code&gt;intrinsic function (see &lt;a href=&quot;#EXCEPTION_002dSTATUS&quot;&gt;EXCEPTION-STATUS&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd7e177c7f3d9154d5422184b9ed91071f9ad9c" translate="yes" xml:space="preserve">
          <source>An arbitrarily long sequence of statements terminated by a period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8796c35255f963f524410b42571f347eb41e04" translate="yes" xml:space="preserve">
          <source>An end of page condition occurred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1e30b56ad12127305ae43936a433a928875a61" translate="yes" xml:space="preserve">
          <source>An error occurred. The &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7112bc0e61d39be7c53ae09aa4ddfb197467ba5d" translate="yes" xml:space="preserve">
          <source>An error procedure may be used to take whatever actions might be warranted to display additional information or to gracefully close down work in progress, but it cannot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a91ab87db3695a69babb64f71c3724f9bf5b86" translate="yes" xml:space="preserve">
          <source>An event that is triggered when a control field on an RWCS-generated report changes value. It is these events that trigger the generation of control heading and control footing groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c560e4e3334f91095f8e4965e6db0a28094e61df" translate="yes" xml:space="preserve">
          <source>An example will probably help:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9a16fb6f75fe3deeba61d6a7faad0124812994" translate="yes" xml:space="preserve">
          <source>An exit procedure, once registered, will trigger whenever a&lt;code&gt;STOP RUN&lt;/code&gt;statement (see &lt;a href=&quot;#STOP&quot;&gt;STOP&lt;/a&gt;) or a&lt;code&gt;GOBACK&lt;/code&gt;statement (see &lt;a href=&quot;#GOBACK&quot;&gt;GOBACK&lt;/a&gt;) is executed anywhere in the program. The exit procedure may execute whatever code is desired to undertake an orderly shut down of the program. Once the exit procedure terminates by executing an&lt;code&gt;EXIT PROGRAM&lt;/code&gt;statement (see &lt;a href=&quot;#EXIT&quot;&gt;EXIT&lt;/a&gt;) or a&lt;code&gt;GOBACK&lt;/code&gt;statement, the system-standard program termination routine will be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae7294fe3bc4c3ec605f5a18822cf8153c72352" translate="yes" xml:space="preserve">
          <source>An input procedure should be terminated in the same way a procedural&lt;code&gt;PERFORM&lt;/code&gt;statement would be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5229c512e61b0d727d9911bde06163ee5ecfc0e1" translate="yes" xml:space="preserve">
          <source>An optional&lt;code&gt;NOT INVALID KEY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5cb62f1f63fe844a97bd26c7f5233c9b0ae60a" translate="yes" xml:space="preserve">
          <source>An optional&lt;code&gt;NOT ON EXCEPTION&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa73b992453b6eae92e838025cd2f18049b366a" translate="yes" xml:space="preserve">
          <source>An optional&lt;code&gt;NOT ON OVERFLOW&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b717f180698740ad6d13f32e0cf960140d50af" translate="yes" xml:space="preserve">
          <source>An optional&lt;code&gt;NOT ON SIZE ERROR&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad9ca471559f5b0c3dd250bee53f0867b2ea95c" translate="yes" xml:space="preserve">
          <source>An otherwise numeric data item whose&lt;code&gt;PICTURE&lt;/code&gt;(see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause also contains any of the editing symbols&lt;code&gt;$&lt;/code&gt;&lt;code&gt;*&lt;/code&gt;&lt;code&gt;+&lt;/code&gt;&lt;code&gt;,&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;.&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;&lt;code&gt;0&lt;/code&gt;(zero),&lt;code&gt;B&lt;/code&gt;&lt;code&gt;CR&lt;/code&gt;&lt;code&gt;DB&lt;/code&gt;or&lt;code&gt;Z&lt;/code&gt; Numeric edited data items are not eligible to serve as table subscripts or source arguments on arithmetic statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d90822998a8c58f9ffe74634b5f07c27637510" translate="yes" xml:space="preserve">
          <source>An output procedure should be terminated in the same way a procedural&lt;code&gt;PERFORM&lt;/code&gt;statement would be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9710b378e25551b79a38b49fb569b6027836cb" translate="yes" xml:space="preserve">
          <source>An output procedure should be terminated in the same way a procedural&lt;code&gt;PERFORM&lt;/code&gt;statement would be. Usually, this action will be taken once the&lt;code&gt;RETURN&lt;/code&gt;statement indicates that all records in the merge work file have been processed, but termination could occur at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840d1885430c345e3368202fe5d10d0ccd03e6b4" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;ASCENDING KEY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7385a0eb8f460df8fd378a7433597df0140d47" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;AT END&lt;/code&gt;clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18c1c4bc70b6f7e71f3b7dedee4cf0a608296f2" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;AT END&lt;/code&gt;clause detects and handles the case where either form of table search has failed to locate an entry that satisfies the search conditions being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedc455b517c6a18d97fd38d04af7e70791575e7" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;EXIT PERFORM CYCLE&lt;/code&gt;statement will terminate the current iteration of the in-line&lt;code&gt;PERFORM&lt;/code&gt; giving control to any&lt;code&gt;TIMES&lt;/code&gt;&lt;code&gt;VARYING&lt;/code&gt;and/or&lt;code&gt;UNTIL&lt;/code&gt;clauses for them to determine if another cycle needs to be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107d6552838783c1a6f10f091c9371724d474b64" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;EXIT PERFORM&lt;/code&gt;statement will terminate the in-line PERFORM outright, transferring control to the first statement following the&lt;code&gt;END-PERFORM&lt;/code&gt;(if there is one) or to the next sentence following the&lt;code&gt;PERFORM&lt;/code&gt;if there is no&lt;code&gt;END-PERFORM&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0558b101714720a3ff3ca9607a6354d79525306b" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;EXIT PROGRAM&lt;/code&gt;statement returns control back to the statement following the&lt;code&gt;CALL&lt;/code&gt;(see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;) of the subprogram. An&lt;code&gt;EXIT FUNCTION&lt;/code&gt;statement returns control back to the processing of the statement in the calling program that invoked the user-defined function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6b6ab4109d112285f069fb07818114e4bebc69" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;EXTERNAL&lt;/code&gt;item must have a data name and that name cannot be&lt;code&gt;FILLER&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2fd6712885b1b3703e12505f7749bdef1bfdf0" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;INDEXED BY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac745675a8a2742bc9ba41f7b7314ee4e3881723" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;ON OVERFLOW&lt;/code&gt;clause will allow your program to trap a failure condition that has occurred and handle it gracefully by executing &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b474394379bfff80d947b78c9f32acbcbf70832a" translate="yes" xml:space="preserve">
          <source>An&lt;code&gt;UNLOCK&lt;/code&gt;statement (see &lt;a href=&quot;#UNLOCK&quot;&gt;UNLOCK&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d303d2014295d3c641cff39f40b3ea41a785dd" translate="yes" xml:space="preserve">
          <source>And here is the same program, written in GnuCOBOL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908c7702d4b49075c887e8c2a07a4d2cb8791611" translate="yes" xml:space="preserve">
          <source>And now for the COBOL version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb9c91cbf19f123ad108025f0e19d0e384ea8f6" translate="yes" xml:space="preserve">
          <source>And then pass LastName-Arg-to-C to the C subprogram!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bf44abda227aefc2699ef6191b50430d22275e" translate="yes" xml:space="preserve">
          <source>And then ran the report again. Here are the first two pages of that new report. See what happened to the control breaks?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1ef9c30f1fe7eb72699782dca2ee2c8d7a9635" translate="yes" xml:space="preserve">
          <source>And then using&lt;code&gt;STEP&lt;/code&gt;and&lt;code&gt;VARYING&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0505ee5f4fbcd8cfad246d5a081bebd17da40318" translate="yes" xml:space="preserve">
          <source>Another 01-level item is found &amp;mdash; this signifies the end of the definition of one record and the start of a another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382abb431c292b8295311889484d3fd9c8bddf7d" translate="yes" xml:space="preserve">
          <source>Another 01-level item is found &amp;mdash; this signifies the start of another record layout for the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b85ec2ac9e747684a4b8344cf7bb3a37649976" translate="yes" xml:space="preserve">
          <source>Another way in which a data item may be shared between a calling program (&quot;A&quot;) and a called program (&quot;B&quot;) is by defining the data item in the calling program and attaching the&lt;code&gt;GLOBAL&lt;/code&gt;(see &lt;a href=&quot;#GLOBAL&quot;&gt;GLOBAL&lt;/a&gt;) clause to it so that it may be used within the called program. In order for this to work, program &quot;B&quot; (the one called by program &quot;A&quot;) must be a nested subprogram within program &quot;A&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d7b76f82a19dd4ed02f3d565d4b238371f7e19" translate="yes" xml:space="preserve">
          <source>Another way to refer to a subprogram. Note that a called program may also be a calling program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd77fff888553d016fc399fbb94325e518c5453" translate="yes" xml:space="preserve">
          <source>Another&lt;code&gt;FD&lt;/code&gt;or&lt;code&gt;SD&lt;/code&gt;is found &amp;mdash; this marks the completion of the detailed description of the file and begins another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece376507b4b04f63bc6355db795ce553f81c7c9" translate="yes" xml:space="preserve">
          <source>Any &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f898c0f518503bf1220b9309e8ef39f93e3196" translate="yes" xml:space="preserve">
          <source>Any GnuCOBOL subroutine can be recursively invoked only if it is defined to the GnuCOBOL compiler as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100ab34d30a1d379ee442e2d204a31b6b3ed3860" translate="yes" xml:space="preserve">
          <source>Any attempt to open a file that is already open will fail with a file status of 41 (see &lt;a href=&quot;#File-Status-Codes&quot;&gt;File Status Codes&lt;/a&gt;). This is a fatal error that will terminate the program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8fd1559498131c77671bcd2a7a57fb07ffbbb9" translate="yes" xml:space="preserve">
          <source>Any bits in &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bef0fbd343651d26482d90e9696df8dad5bf7e0" translate="yes" xml:space="preserve">
          <source>Any check-suppression symbol coded to the right of a&lt;code&gt;.&lt;/code&gt;will be treated exactly like a&lt;code&gt;9&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bcf58cd2fc67e0354e8ffc50841f9ea3131ccf" translate="yes" xml:space="preserve">
          <source>Any currency symbol coded to the right of a&lt;code&gt;.&lt;/code&gt;will be treated exactly like a&lt;code&gt;9&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77cfa80a154156b5bd42b458486005f66fbb774" translate="yes" xml:space="preserve">
          <source>Any editing symbols introduced past this point will, if coded in the picture clause of an otherwise numeric data item, transform that data item from a numeric to a &amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b9ccb1ecab8f99534dc262df737d5f05bd8262" translate="yes" xml:space="preserve">
          <source>Any file defined in a GnuCOBOL program must be successfully opened before it or any of it&amp;rsquo;s record descriptions may be referenced on:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf723a992e40cd4aba4d8614163d705ffa6fcf27" translate="yes" xml:space="preserve">
          <source>Any limitations imposed on a successful&lt;code&gt;OPEN&lt;/code&gt;(see &lt;a href=&quot;#OPEN&quot;&gt;OPEN&lt;/a&gt;) will remain in place until your program either issues a&lt;code&gt;CLOSE&lt;/code&gt;(see &lt;a href=&quot;#CLOSE&quot;&gt;CLOSE&lt;/a&gt;) against the file or the program terminates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07309495035024e00199d745b0565e378e8a4c37" translate="yes" xml:space="preserve">
          <source>Any modification to the&lt;code&gt;LINE-COUNTER&lt;/code&gt;special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9510ca3b2e3093c2eaea38b5cb662ac9023afa" translate="yes" xml:space="preserve">
          <source>Any modification to the&lt;code&gt;PAGE-COUNTER&lt;/code&gt;special register .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5596e2fb14f2973ae87df25ad559a88f3670b77e" translate="yes" xml:space="preserve">
          <source>Any of these characters appearing within a syntax diagram are to be interpreted literally, and are characters that must be coded &amp;mdash; where allowed &amp;mdash; in the statement whose format is being described. Note that a &quot;.&quot; character is a literal character that must be coded on a statement whereas a &quot;...&quot; symbol is the meta character sequence described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c8005e639ef075bb5c029fa3f90090c950c54b" translate="yes" xml:space="preserve">
          <source>Any open failure (including status 41) may be trapped using&lt;code&gt;DECLARATIVES&lt;/code&gt;(see &lt;a href=&quot;#DECLARATIVES&quot;&gt;DECLARATIVES&lt;/a&gt;) or an error procedure established using the&lt;code&gt;CBL_ERROR_PROC&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fERROR_005fPROC&quot;&gt;CBL_ERROR_PROC&lt;/a&gt;) built-in subroutine. When either of these trap routines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5781772e084e444be68b9e695c83552d1ee473fb" translate="yes" xml:space="preserve">
          <source>Any procedures referenced by&lt;code&gt;GO TO&lt;/code&gt;statements will be defined as paragraphs, and those paragraphs will be defined in the same section as the&lt;code&gt;GO TO&lt;/code&gt;statements that reference them. In other words,&lt;code&gt;GO TO&lt;/code&gt;statements may not be used to transfer control to a point in a different section. This is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecd6d60d2d9d5868c3f314cdb3b483e10e23de4" translate="yes" xml:space="preserve">
          <source>Any procedures referenced by&lt;code&gt;MERGE&lt;/code&gt;&lt;code&gt;PERFORM&lt;/code&gt; or&lt;code&gt;SORT&lt;/code&gt;statements will be defined as sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184906523a150d69bc1a9c1f23192c4de8a46740" translate="yes" xml:space="preserve">
          <source>Any programmer-defined exit procedure (established via the&lt;code&gt;CBL_EXIT_PROC&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fEXIT_005fPROC&quot;&gt;CBL_EXIT_PROC&lt;/a&gt;)) will be executed by&lt;code&gt;STOP RUN&lt;/code&gt; but not by&lt;code&gt;STOP &amp;lt;&lt;i&gt;literal-3&lt;/i&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b666e80a44d1fa49194ffd3d323d6df8a7fee4" translate="yes" xml:space="preserve">
          <source>Any subprogram may be either statically or dynamically loaded into memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504d18753df605f9f9ca9cb22a61c5d08a964b9a" translate="yes" xml:space="preserve">
          <source>Any subroutine may have multiple entry-points defined within it. This means the subroutine could be called either via a&lt;code&gt;CALL '&amp;lt;&lt;i&gt;program-id&lt;/i&gt;&amp;gt;'&lt;/code&gt;or a&lt;code&gt;CALL '&amp;lt;&lt;i&gt;entry-point&lt;/i&gt;&amp;gt;'&lt;/code&gt;statement. There may be any number of alternate entry-points defined within a subroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1fc58b4f56f6457f4484e3ee645ab7d9e6dec47" translate="yes" xml:space="preserve">
          <source>Any subroutines or user-defined functions that weren&amp;rsquo;t included in any of the source files comprising the compilation group will be treated as dynamically loadable subprograms (see &lt;a href=&quot;#Dynamic-vs-Static-Subprograms&quot;&gt;Dynamic vs Static Subprograms&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1d8bfb396f82cd0be3e1b2f29c9dd40ad412c9" translate="yes" xml:space="preserve">
          <source>Any value specified for &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae8b2f4162d32085d93a05bffe959d3dc6c2c99" translate="yes" xml:space="preserve">
          <source>Any zero-suppression symbol coded to the right of a&lt;code&gt;.&lt;/code&gt;will be treated exactly like a&lt;code&gt;9&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609550b887a3665c33285cf377eeab02fdad2f81" translate="yes" xml:space="preserve">
          <source>Any&lt;code&gt;+&lt;/code&gt;symbol coded to the right of a&lt;code&gt;.&lt;/code&gt;will be treated exactly like a&lt;code&gt;9&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d69db88d33f5d818bfe45bab965b5cb19e7247" translate="yes" xml:space="preserve">
          <source>Any&lt;code&gt;-&lt;/code&gt;symbol coded to the right of a&lt;code&gt;.&lt;/code&gt;will be treated exactly like a&lt;code&gt;9&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3317b9bd439ca7b44560972fca6ecc8f24de4ec7" translate="yes" xml:space="preserve">
          <source>Any&lt;code&gt;FROM&lt;/code&gt;(see &lt;a href=&quot;#FROM&quot;&gt;FROM&lt;/a&gt;),&lt;code&gt;TO&lt;/code&gt;(see &lt;a href=&quot;#TO&quot;&gt;TO&lt;/a&gt;) or&lt;code&gt;USING&lt;/code&gt;(see &lt;a href=&quot;#USING&quot;&gt;USING&lt;/a&gt;) clause in the same data item&amp;rsquo;s definition will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d67012185f3b5a9a5acefa8efe44be45ccd9181" translate="yes" xml:space="preserve">
          <source>Any&lt;code&gt;USE FOR DEBUGGING&lt;/code&gt;declarative procedures will be ignored at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73973cfd168d40bb8277e2f6044ecdb605409c4e" translate="yes" xml:space="preserve">
          <source>Appendices</source>
          <target state="translated">Appendices</target>
        </trans-unit>
        <trans-unit id="48bf7afa8d3cf106e9d055154eefcbf6a6d17e88" translate="yes" xml:space="preserve">
          <source>Appendix A - Glossary of Terms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3caa5ecaad1a99ce9408f043c78a5025c7f21c7" translate="yes" xml:space="preserve">
          <source>Appendix B - Reserved Word List</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8efb9dd8dc8979930f5cce4db0b4ac9f57e430" translate="yes" xml:space="preserve">
          <source>Approximately -1.797693134862316&amp;times;10^308 to 1.797693134862316&amp;times;10^308</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0a8efc23f1cd8a47ecd61a1a44af541b83ab89" translate="yes" xml:space="preserve">
          <source>Approximately -3.4028235&amp;times;10^38 to 3.4028235&amp;times;10^38</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacce68e3bbdcbcc2b9399d8af85171c0f0c35c0" translate="yes" xml:space="preserve">
          <source>Arguments 2, 3 and 4 should be coded as the constant values shown.&lt;code&gt;CBL_CREATE_FILE&lt;/code&gt;is actually a special-case of the&lt;code&gt;CBL_OPEN_FILE&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#CBL_005fOPEN_005fFILE&quot;&gt;CBL_OPEN_FILE&lt;/a&gt;) routine &amp;mdash; see that routine for a description of the meanings of arguments 2, 3 and 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3b277fc84585ddc67f049324e34e0258469da4" translate="yes" xml:space="preserve">
          <source>Arguments must be described in both the calling and called programs, and while they don&amp;rsquo;t need to have the same names in both programs, they should be described in an identical manner with regard to the following characteristics:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c268e7dc75ae19cfce107f9220c59392c5162c" translate="yes" xml:space="preserve">
          <source>Arguments to a user-defined function are always to be specified as&lt;code&gt;BY REFERENCE&lt;/code&gt;(either explicitly or by not using any&lt;code&gt;BY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a520bd4d4137463c9fa4f4db1926ad17ae4aeec" translate="yes" xml:space="preserve">
          <source>Arguments to user-defined functions are always passed&lt;code&gt;BY REFERENCE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d03321e72215121bde5deab4f021ad90feeeaf" translate="yes" xml:space="preserve">
          <source>Arguments will be passed in left-to-right sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6553652d52b882b2fa85e1ddeed243f74a2a8cfe" translate="yes" xml:space="preserve">
          <source>Arguments will be passed in right-to-left sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f8cae111c9429795ca36d0d8ea0de0ed73fa2e" translate="yes" xml:space="preserve">
          <source>Arguments will be separated by treating spaces and/or tab characters as the delimiters between arguments. The number of such delimiters separating two non-blank argument values is irrelevant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b8b7be3d74c23d3dcc83074799de5e5c536973" translate="yes" xml:space="preserve">
          <source>Arithmetic overflow in calculation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80db2ce40cc9814703d58bd80f29165f71702f70" translate="yes" xml:space="preserve">
          <source>Arithmetic-Expression Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca11394a0b053ab0f486150df6563b365bcc4080" translate="yes" xml:space="preserve">
          <source>As a general rule of thumb, Windows implementations support two levels while Unix ones support all three.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e3795d0ffdc85df6595641a282fec4cee1b019" translate="yes" xml:space="preserve">
          <source>As a result of the sort, our program might expect to see data somewhat like this (date, time and sales totals are shown as &quot;&amp;hellip;&quot;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4940f97a91d71dcdb635d4a2e00daa08b2606846" translate="yes" xml:space="preserve">
          <source>As an alternative to using the&lt;code&gt;ALL INTRINSIC&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3cb936dd4f7b90bf8660668779f10b38d855da" translate="yes" xml:space="preserve">
          <source>As an example, the following statement passes three arguments to a subroutine &amp;mdash; each argument is passed differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08c9e1d43bf3266b629d31500d42492d8c881ed" translate="yes" xml:space="preserve">
          <source>As compared to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6506b02535815ce8b9ce2ba0ca60872f2c269c" translate="yes" xml:space="preserve">
          <source>As data is loaded into the sort work file, it is actually being buffered in dynamically-allocated memory. Only if the amount of data to be sorted exceeds the amount of available sort memory (128 MB) will actual disk files be allocated and utilized. There is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130f906685b8ffff68b8730ad2a15f8e8f5583c4" translate="yes" xml:space="preserve">
          <source>As discussed previously, dynamically-loadable libraries are created via the compiler&amp;rsquo;s&lt;code&gt;-m&lt;/code&gt;switch. Once so created, the program(s) in these libraries are executed from the command line (via the GnuCOBOL&lt;code&gt;cobcrun&lt;/code&gt;utility), or as dynamically-loadable subprograms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e399bfe42d083f8487e6c9d998df2c372852b952" translate="yes" xml:space="preserve">
          <source>As each of the above folders is searched for a copybook &amp;mdash;&lt;code&gt;COPY XXXXXXXX.&lt;/code&gt; for example &amp;mdash; the GnuCOBOL compiler will attempt to locate the copybook file by any of the following names, in the sequence shown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9ef072c68e60e92d584a7454cb8966303b7996" translate="yes" xml:space="preserve">
          <source>As far as enforcement goes, however, both alphabetic and numeric picture strings do provide for both compile-time and run-time enforcement capabilities. In the case of compilation enforcement, the compiler can issue warning messages if you attempt to specify a non-numeric value for a numeric data item or if you attempt to&lt;code&gt;MOVE&lt;/code&gt;(see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) a non-numeric data item to one that is numeric. Similar capabilities exist for alphabetic data items. At run-time, you may use a special class test (see &lt;a href=&quot;#Class-Conditions&quot;&gt;Class Conditions&lt;/a&gt;) to determine if the contents of a data item are entirely numeric or entirely alphabetic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad40a909df10f422708e91b6cbf3a539c3e0185" translate="yes" xml:space="preserve">
          <source>As is the case in almost any other programming language, the programmer is always free to use pairs of parenthesis to enclose sub-expressions of complex expressions that are to be evaluated before other sub-expressions rather than let operator precedence dictate the sequence of evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4554dd5b047e612be263380b9463354fcc00ea7b" translate="yes" xml:space="preserve">
          <source>As of the COBOL2002 standard, a second mode now exists for COBOL source code statements &amp;mdash; in this mode of operation, COBOL statements may each be up to 255 characters long, with no specific requirements as to what should appear in which columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8a528c8a5db43a4c93339f852a40ec0f50d952" translate="yes" xml:space="preserve">
          <source>As part of the&lt;code&gt;FROM&lt;/code&gt;clause of a&lt;code&gt;WRITE&lt;/code&gt;(see &lt;a href=&quot;#WRITE&quot;&gt;WRITE&lt;/a&gt;) or&lt;code&gt;RELEASE&lt;/code&gt;statement (see &lt;a href=&quot;#RELEASE&quot;&gt;RELEASE&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73a4ca502e493378755eafa2beace7b47077369" translate="yes" xml:space="preserve">
          <source>As part of the&lt;code&gt;TIMES&lt;/code&gt;clause of a&lt;code&gt;PERFORM&lt;/code&gt;statement (see &lt;a href=&quot;#PERFORM&quot;&gt;PERFORM&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bc43269493911cc16b9d89987b310d7a490a16" translate="yes" xml:space="preserve">
          <source>As the diagram shows, there are three types of statements that may occur in the two paragraphs of this section. If none of the statements are coded in a particular paragraph, the paragraph itself may be omitted, otherwise it is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffa23f73df55fe9017e41640911e5d5e7d20faf" translate="yes" xml:space="preserve">
          <source>As the syntax diagram shows, the definition of a &amp;lt;&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296b852b8448d93942a077ab3a1b94c0c3fed6cf" translate="yes" xml:space="preserve">
          <source>As the&lt;code&gt;MERGE&lt;/code&gt;statement begins execution, the first record in each of the&lt;code&gt;USING&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e9f2414adf575e04776803bd34d80ab6b46c0b" translate="yes" xml:space="preserve">
          <source>As the&lt;code&gt;MERGE&lt;/code&gt;statement executes, the current record from each of the&lt;code&gt;USING&lt;/code&gt;files is examined and compared to each other according to the rules set forth by the&lt;code&gt;KEY&lt;/code&gt;clause and the alphabet (see &lt;a href=&quot;#Alphabet_002dName_002dClause&quot;&gt;Alphabet-Name-Clause&lt;/a&gt;) specified on the&lt;code&gt;COLLATING SEQUENCE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3223505cf0f385fb48234e866679fed3fe9b7f4e" translate="yes" xml:space="preserve">
          <source>As was presented earlier (see &lt;a href=&quot;#Structured-Data&quot;&gt;Structured Data&lt;/a&gt;), a data item that is broken down into other data items is referred to as a group item, while one that isn&amp;rsquo;t broken down is called an elementary item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981d288884a6c738196484a0a06ae81b95b8662d" translate="yes" xml:space="preserve">
          <source>As with the other divisions, the procedure division may consist of sections and those sections may &amp;mdash; in turn &amp;mdash; consist of paragraphs. Unlike the other divisions, however, section and paragraph names are defined by the programmer, and there may not be any defined at all if the programmer so wishes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae745acf0a462b1dd7c6cde5493e5c68ae7843d" translate="yes" xml:space="preserve">
          <source>As you can see, there was a huge drop in&lt;code&gt;USAGE COMP&lt;/code&gt;timings by turning off truncation. As a result, I see absolutely no reason whatsoever why the&lt;code&gt;-fnotrunc&lt;/code&gt;switch option shouldn&amp;rsquo;t be used on all GnuCOBOL compilations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45127190d833b850823da0c28cb0b1bc991d2347" translate="yes" xml:space="preserve">
          <source>Ascending sequence of store number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b58cd30268fe2ebaba2141e1041c33967620f38" translate="yes" xml:space="preserve">
          <source>Assuming that &quot;Nibble&quot; is a numeric data item with a value in the range 0-15, and Hex-Digits is a&lt;code&gt;PIC X(16)&lt;/code&gt;item with a value of &quot;0123456789ABCDEF&quot;, this converts that numeric value to a hexadecimal digit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f2c23c8e677b039e091ee427f68717b15f7c3d" translate="yes" xml:space="preserve">
          <source>At any point in time, there may well be multipl&lt;code&gt;REPLACING&lt;/code&gt;and/or&lt;code&gt;TALLYING&lt;/code&gt;operational instructions active. Only one of the&lt;code&gt;TALLYING&lt;/code&gt;and one of the&lt;code&gt;REPLACING&lt;/code&gt;instructions (if any) can be executed for any one character pointer position. In each case, it will be the first of the instructions in each category that produces a match with it&amp;rsquo;s target string specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58024c82e77f41a36e760c889c0d9e393020d8c4" translate="yes" xml:space="preserve">
          <source>At execution time, each &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a6ce82acdc6bc612fd3d2cffdae1b97075c917" translate="yes" xml:space="preserve">
          <source>At execution time, each switch will be associated with a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11e7555a3db0fbb052544056af2d1e237d33472" translate="yes" xml:space="preserve">
          <source>At execution time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647179385f65989bb1991c21428c0fb0057583a7" translate="yes" xml:space="preserve">
          <source>At run-time, the declaratives procedure will be executed prior to the processing of the specified report group&amp;rsquo;s presentation; within the procedure you may take either of the following actions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8a283974d95356738167d0faee952966ac8cf5" translate="yes" xml:space="preserve">
          <source>At runtime, GnuCOBOL will attempt to locate and load any application dynamically-loadable libraries using from the directory in which the program executable was found or, if it wasn&amp;rsquo;t found there, using the&lt;code&gt;PATH&lt;/code&gt;environment variable. If these library files could be somewhere else, specify the directory path using this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d00c7319a69497c5e9e19b0ab3f8ae51f105d6" translate="yes" xml:space="preserve">
          <source>At the time the&lt;code&gt;SEARCH&lt;/code&gt;statement is executed, the current value of the search index data item will define the starting position in the table where the searching process will begin. Typically, one initializes that index to a value of 1 before starting the&lt;code&gt;SEARCH&lt;/code&gt;via&lt;code&gt;SET &amp;lt;&lt;i&gt;search-index&lt;/i&gt;&amp;gt; TO 1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed45c44186dd9ae465a476d4332ba30e71a68719" translate="yes" xml:space="preserve">
          <source>At the time the&lt;code&gt;UNSTRING&lt;/code&gt;statement begins execution, &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1f58c02dd35fe4d5f7ac2161db8990ad89caff" translate="yes" xml:space="preserve">
          <source>At the time this statement is executed, &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606af63484a4ca0821092a5d382caa79df9a9798" translate="yes" xml:space="preserve">
          <source>Attempt to duplicate key value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2be3e5f21db8b67415235941f1f245af15e343" translate="yes" xml:space="preserve">
          <source>Attribute-Specification</source>
          <target state="translated">Attribute-Specification</target>
        </trans-unit>
        <trans-unit id="ea2809bc9bb1b5b06bf996a1198fef6b345d333c" translate="yes" xml:space="preserve">
          <source>Attribute-Specifications</source>
          <target state="translated">Attribute-Specifications</target>
        </trans-unit>
        <trans-unit id="678a0be9e390f7d62bca8435a3ee764c8865eaed" translate="yes" xml:space="preserve">
          <source>Automatically causing suppressed detail group-indicate fields to re-appear should a detail group be printed on a new page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a17b9929690e89a26864251426fe169ae08b7e" translate="yes" xml:space="preserve">
          <source>Automatically generating crossfoot totals in detail groups. These would be sums of two or more values presented in the detail group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8ed6d8eda696a34ea023ee1af0984ead161cd5" translate="yes" xml:space="preserve">
          <source>Automatically generating subtotals in control and/or report footings, summarizing values of any fields in the detail group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60128589a15735e233953a12911eaaf135fa1bba" translate="yes" xml:space="preserve">
          <source>Automatically suppressing the presentation of one or more fields of data from the detail group when the value(s) of the field(s) duplicate those of the previously generated detail group. Fields such as these are referred to as group-indicate fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e6d5aff64c44c6c09e58d6ca500c39b31497c6" translate="yes" xml:space="preserve">
          <source>Avoid the use of level 77 data items in new programs. Once (1968 and before) there were valid reasons for creating level-77 data items, but since the 1974 ANSI standard of COBOL there really hasn&amp;rsquo;t been any reason why an elementary level-01 data item couldn&amp;rsquo;t have been used instead of a level-77 item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da6b74c184d77268e852ed014f324e193e614bb" translate="yes" xml:space="preserve">
          <source>BACKGROUND-COLOR Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f411ede3baea24605588cbb252fe62af571daa22" translate="yes" xml:space="preserve">
          <source>BACKGROUND-COLOR, BACKGROUND-COLOUR, B-AND, BASED, BEEP, BEFORE, BELL, BINARY, BINARY-CHAR, BINARY-C-LONG, BINARY-DOUBLE, BINARY-INT, BINARY-LONG, BINARY-LONG-LONG, BINARY-SHORT, BIT, BLANK, BLINK, BLOCK, B-NOT, BOOLEAN, BOOLEAN-OF-INTEGER, B-OR, BOTTOM, B-XOR, BY, BYTE-LENGTH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246940a5ee7e2cc2179d2d28728ee99881870940" translate="yes" xml:space="preserve">
          <source>BASED Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea177ae44348802ce4e93e2c7d006f279b4d490" translate="yes" xml:space="preserve">
          <source>BBCCCCCCDD</source>
          <target state="translated">BBCCCCCCDD</target>
        </trans-unit>
        <trans-unit id="70ba3961bcb1e582a85eb1b34470c7230cbc539c" translate="yes" xml:space="preserve">
          <source>BEEP Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d558960d76fe706c5df114072aeb815b11efb49a" translate="yes" xml:space="preserve">
          <source>BELL Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c09c231f43d038a40874ee57c32eb4b4d4358e" translate="yes" xml:space="preserve">
          <source>BINARY-C-LONG SIGNED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c532cb84fc65eabdea9215c7926d16c9453a0660" translate="yes" xml:space="preserve">
          <source>BINARY-CHAR SIGNED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934c091fd7ba5885d6ae1783ee5da221368bbd09" translate="yes" xml:space="preserve">
          <source>BINARY-CHAR [ UNSIGNED ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafe074f1cc1d847beb11978954e0ba87923a323" translate="yes" xml:space="preserve">
          <source>BINARY-DOUBLE SIGNED  BINARY-LONG-LONG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075818c3573fccee0500d38f830276c42183e050" translate="yes" xml:space="preserve">
          <source>BINARY-DOUBLE [ UNSIGNED ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ca5c23f684a3e2bf961756a5622b8f8b0fd166" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED  BINARY-INT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d5664e7380adc57231aa0207eda3f7890cf78b" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; An occurrence of this register exists for each report defined in the program (via an&lt;code&gt;RD&lt;/code&gt;(see &lt;a href=&quot;#REPORT-SECTION&quot;&gt;REPORT SECTION&lt;/a&gt;)). If there are multiple reports, any explicit references to this register not made in the report section will require qualification &lt;code&gt;OF report-name&lt;/code&gt;. The value of this register will be the current logical line number on the current page. The value of this register cannot be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d54aa9c6bdc14a259e2115e9bbbc98d0ec7b76" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; An occurrence of this register exists for each report having an&lt;code&gt;RD&lt;/code&gt;(see &lt;a href=&quot;#REPORT-SECTION&quot;&gt;REPORT SECTION&lt;/a&gt;). If there are multiple such reports, any explicit references to this register not made in the report section will require qualification (&lt;code&gt;OF report-name&lt;/code&gt;. The value of this register will be the current report page number. The value of this register cannot be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301ddb41243ae8a1bb0469ad0facce57428c71d1" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; An occurrence of this register exists for each selected file having a&lt;code&gt;LINAGE&lt;/code&gt;(see &lt;a href=&quot;#File_002fSort_002dDescription&quot;&gt;File/Sort-Description&lt;/a&gt;) clause. If there are multiple files whose file descriptions have&lt;code&gt;LINAGE&lt;/code&gt;clauses, any explicit references to this register will require qualification (using&lt;code&gt;OF file-name&lt;/code&gt;. The value of this register will be the current logical line number within the page body. The value of this register cannot be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4246a0836a99373296efaa9aeb30a14c387022" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; This register contains the number of arguments passed to a subroutine &amp;mdash; the same value that would be returned by the&lt;code&gt;C$NARG&lt;/code&gt;built-in system subroutine (see &lt;a href=&quot;#C_0024NARG&quot;&gt;C$NARG&lt;/a&gt;). Its value will be zero when referenced in a main program. This register, when referenced from within a user-defined function, returns a value of one (1) if the function has any number of arguments and a zero if it has no arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b365a3917f2c77fadaebe0e884f83432c6fa091" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; This register is used to report the success/fail status of a&lt;code&gt;RELEASE&lt;/code&gt;(see &lt;a href=&quot;#RELEASE&quot;&gt;RELEASE&lt;/a&gt;) or&lt;code&gt;RETURN&lt;/code&gt;(see &lt;a href=&quot;#RETURN&quot;&gt;RETURN&lt;/a&gt;) statement. A value of 0 is reported on success. A value of 16 denotes failure. An&lt;code&gt;AT END&lt;/code&gt;(see &lt;a href=&quot;#AT-END-_002b-NOT-AT-END&quot;&gt;AT END + NOT AT END&lt;/a&gt;) condition on a&lt;code&gt;RETURN&lt;/code&gt;is not considered a failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281502201847865cdea73cf4e5a9e802f6a160de" translate="yes" xml:space="preserve">
          <source>BINARY-LONG SIGNED &amp;mdash; This register provides a numeric data item into which a subroutine may&lt;code&gt;MOVE&lt;/code&gt;(see &lt;a href=&quot;#MOVE&quot;&gt;MOVE&lt;/a&gt;) a value (which will then be available to the calling program) prior to transferring control back to the program that called it, or into which a main program may&lt;code&gt;MOVE&lt;/code&gt;a value before returning control to the operating system. Many built-in subroutines will return a value using this register. These values are &amp;mdash; by convention &amp;mdash; used to signify success (usually with a value of 0) or failure (usually with a non-zero value) of the process the program was attempting to perform. This register may also be modified by a subprogram as a result of that subprogram&amp;rsquo;s use of the&lt;code&gt;RETURNING&lt;/code&gt;(see &lt;a href=&quot;#PROCEDURE-DIVISION-RETURNING&quot;&gt;PROCEDURE DIVISION RETURNING&lt;/a&gt;) clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d6edbc89733d33e22775d6d14c2d8e488258bc" translate="yes" xml:space="preserve">
          <source>BINARY-LONG [ UNSIGNED ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec492d0da770779cdab338b865b0f56c65f643c6" translate="yes" xml:space="preserve">
          <source>BINARY-SHORT SIGNED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cac1a19a032ecff3d83d34ca1abdccac4a7484b" translate="yes" xml:space="preserve">
          <source>BINARY-SHORT [ UNSIGNED ]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7c905147ff436c20b8a277191d3099e9cef7d7" translate="yes" xml:space="preserve">
          <source>BLANK Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c83616118343aeebed8244f237c3eef48c560f0" translate="yes" xml:space="preserve">
          <source>BLANK-WHEN-ZERO Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a676bbdca1e916c6978cc077c4ce3b75f26a38" translate="yes" xml:space="preserve">
          <source>BLINK Attribute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98551917c7b41c079bdb715caa142efe39bc871" translate="yes" xml:space="preserve">
          <source>BYTE-LENGTH Function Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732d1a64c87c763a8928b8d0c8ae7ef0e320e26f" translate="yes" xml:space="preserve">
          <source>Be defined in the procedure division in non-decreasing sequence of that numeric component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7140cf29652f35a7197985b5d583b99204a8072c" translate="yes" xml:space="preserve">
          <source>Because of its inherent readability, I would MUCH rather be handed an assignment to make significant changes to a COBOL program about which I know nothing than to be asked to do the same with a C, C++, C# or Java program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13e0ce15866e81127740db57e67454e615e094a" translate="yes" xml:space="preserve">
          <source>Because of the catastrophic effect this statement has on program readability and therefore the programmer&amp;rsquo;s ability to debug problems with program logic, the use of&lt;code&gt;ALTER&lt;/code&gt;in new programs is &lt;strong&gt;STRONGLY&lt;/strong&gt; discouraged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3897568192e57c70d682a4284b7e70387e8fd192" translate="yes" xml:space="preserve">
          <source>Because of the sort, the most-frequently changing value of the three sort keys will be that of Sorted-Register-Number. This essentially defines the &quot;detail&quot; level of the report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eae3d3b27b7db953038339724b71016c328c79e" translate="yes" xml:space="preserve">
          <source>Because this is the way the GnuCOBOL RWCS works, in order to design an RWCS-generated report you&amp;rsquo;ll need to know answers to the following questions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f29deec2a6a03120562a08602ed9bb23f78df63" translate="yes" xml:space="preserve">
          <source>Before continuing, it&amp;rsquo;s worth making the point that we&amp;rsquo;re NOT talking about astronomical performance degradations here. Today&amp;rsquo;s computers are FAST, and a user sitting at the keyboard, running a GnuCOBOL program is unlikely to notice. BUT &amp;hellip; if you have a GnuCOBOL program that has to process large amounts of data, performing some significant &quot;number crunching&quot; against that data as it goes, the impact of truncation could become noticeable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd82bd1afe40ba0df821eea5f523d006f0a112ee" translate="yes" xml:space="preserve">
          <source>Big-Endian</source>
          <target state="translated">Big-Endian</target>
        </trans-unit>
        <trans-unit id="df920c2aca56c9814330d567bccea8b54d2026db" translate="yes" xml:space="preserve">
          <source>Big-endian data allocation calls for the bytes that comprise a binary item to be allocated such that the least-significant byte is the right-most byte. For example, a four-byte binary item having a value of decimal 20 would be big-endian allocated as 00000014 (shown in hexadecimal notation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0811bb71c6ad0b2245ae48055cbd19d7fb2a0a" translate="yes" xml:space="preserve">
          <source>Binary data (integer or floating-point) can be stored in either a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8835c712451999e0a892ac12f5715c4350423b1" translate="yes" xml:space="preserve">
          <source>Bit</source>
          <target state="translated">Bit</target>
        </trans-unit>
        <trans-unit id="dc1854a1d1a2eca13a52186e1806592639416b71" translate="yes" xml:space="preserve">
          <source>Black: COB-COLOR-BLACK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a404b912bfc8636e47c79e8ce78b322899dc9c" translate="yes" xml:space="preserve">
          <source>Blank Lines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3247dd5ed6f1b06af04402591e168b57875808" translate="yes" xml:space="preserve">
          <source>Blanked-out areas will have their foreground and background colors set to the attributes of the field containing the&lt;code&gt;BLANK&lt;/code&gt;clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db50375354d4d4be17c08fff5dc056bcdd3e73ba" translate="yes" xml:space="preserve">
          <source>Blinking</source>
          <target state="translated">Blinking</target>
        </trans-unit>
        <trans-unit id="d3c04e9819f277a93d8553958c2e891397695a43" translate="yes" xml:space="preserve">
          <source>Blue: COB-COLOR-BLUE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94345820b53050a7872628cb3026d65358a65609" translate="yes" xml:space="preserve">
          <source>Body Area, but no line of a control footing report group is allowed past the line number specified by&lt;code&gt;FOOTING&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23009096f02f5db9c5d67dfbf5d7e0d034a25a39" translate="yes" xml:space="preserve">
          <source>Body Area, but no line of a control heading is allowed past the line number specified by&lt;code&gt;LAST CONTROL HEADING&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6710b289a308e35e20a48dde80be658f2115922" translate="yes" xml:space="preserve">
          <source>Body Area, but no line of a detail report group is allowed past the line number specified by&lt;code&gt;LAST DETAIL&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc1dc3e246465501e090e39547e5b3b3bf59d05" translate="yes" xml:space="preserve">
          <source>Both &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f5b6e735a653497e081fcece40998738d3757f" translate="yes" xml:space="preserve">
          <source>Both arguments may be alphanumeric literals or identifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd361aa66175415490584d2dbc5c638993ce9fe" translate="yes" xml:space="preserve">
          <source>Both arguments must be numeric data items or numeric literals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbec7c2bbe5a9b7ed97689a43559007445ebd07" translate="yes" xml:space="preserve">
          <source>Both data item definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ffee561a0c87ad6ed5de89dbabcd25997adf00" translate="yes" xml:space="preserve">
          <source>Both file path arguments may be alphanumeric literals or identifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bdf7d72ba8a02ed06721e3541f52baf0f1b609" translate="yes" xml:space="preserve">
          <source>Both fixed- and variable-length record formats are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d753f35c20a41f09891e686786ce1dede9c1f4b" translate="yes" xml:space="preserve">
          <source>Both languages store strings as a fixed-length continuous sequence of characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9212305982a9b34c5e63c55b74cd4446fc9bda7" translate="yes" xml:space="preserve">
          <source>Both of the above programs could have been written on a single line, if desired, and both languages allow a programmer to use (or not use) indentation as they see fit to improve program readability. Sounds like a tie so far.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7033bf1a9de7c2244f45f9f7594167e640b181" translate="yes" xml:space="preserve">
          <source>Both subroutines and user-defined functions may return a value. The value they return must be an integer in the range -2147483648 to +2147483647. This value will be available in the&lt;code&gt;RETURN-CODE&lt;/code&gt;special register (see &lt;a href=&quot;#Special-Registers&quot;&gt;Special Registers&lt;/a&gt;) and also as the value of the data item specified on the&lt;code&gt;RETURNING&lt;/code&gt;(see &lt;a href=&quot;#CALL&quot;&gt;CALL&lt;/a&gt;) clause of a subroutine&amp;rsquo;s CALL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2e02c4f2f64e08494079e611275f7b1133ff07" translate="yes" xml:space="preserve">
          <source>Boundary violation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d9d5d62f61d46204402182103e9fb5796ca9ab" translate="yes" xml:space="preserve">
          <source>Businesses are addressing the COBOL challenge in different ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d71f7e1b353d405d0ac11988a391e51c106c8d8" translate="yes" xml:space="preserve">
          <source>But this is not:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6034baf101109a548d80a79196fa3960e95d84d" translate="yes" xml:space="preserve">
          <source>But, if the&lt;code&gt;KEY&lt;/code&gt;clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd77697a4182cd3b13a40705bd5e627399d95bd3" translate="yes" xml:space="preserve">
          <source>By accepting from&lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32783d23a2b57069dfd27bf6ebf2f729ab1d9e9d" translate="yes" xml:space="preserve">
          <source>By accepting from&lt;code&gt;ARGUMENT-VALUE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0823bd188f4cd132b1f5cf0d0527264a44cb4dc1" translate="yes" xml:space="preserve">
          <source>By accepting from&lt;code&gt;ENVIRONMENT-VALUE&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850d2ea9cacd64b27c9ce36e8d2804cf274ec6a0" translate="yes" xml:space="preserve">
          <source>By convention throughout this document, COBOL reserved words will be shown entirely in UPPER-CASE while those words that were created by a programmer will be represented by tokens in mixed or lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc942875d4f00039bda2626332f5ea98c184c4d" translate="yes" xml:space="preserve">
          <source>By default, all arguments are assumed to be&lt;code&gt;BY REFERENCE&lt;/code&gt;unless explicitly stated otherwise on the procedure division header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce3af4b0bcbc6101e3c26191d093e765d0d0837" translate="yes" xml:space="preserve">
          <source>By default, procedure and procedure-and-statement tracing is off as programs begin execution. The&lt;code&gt;READY TRACE&lt;/code&gt;statement (see &lt;a href=&quot;#READY-TRACE&quot;&gt;READY TRACE&lt;/a&gt;) can be used to turn tracing on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2f48f030c1739505d2c566e27aeb7e52d9aed1" translate="yes" xml:space="preserve">
          <source>By default, the GnuCOBOL compiler will truncate binary data items to the precision indicated by their&lt;code&gt;PICTURE&lt;/code&gt;(see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause, if they have one. This applies to COMP, BINARY and COMP-4 items Only.  The fact is, however, that binary truncation has a significant effect on the performance of GnuCOBOL programs. When binary truncation is in effect, arithmetic operations performed against all types of numeric data items (even&lt;code&gt;USAGE DISPLAY&lt;/code&gt; are slowed down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf1723b13aa92389c3cfc21f4d3b09a741ea127" translate="yes" xml:space="preserve">
          <source>By default, the program&amp;rsquo;s&lt;code&gt;COLLATING SEQUENCE&lt;/code&gt;will, however, be based entirely on the bit-pattern values of the various characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f9a6197452d933f11649c97e71150a45c0731f" translate="yes" xml:space="preserve">
          <source>By displaying a numeric integer value UPON&lt;code&gt;ARGUMENT-NUMBER&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9a7a0b8d662fbdea6b17bbd14fcf8889798841" translate="yes" xml:space="preserve">
          <source>By moving the user-interface onto the desktop; such efforts involve running modern-language front-end clients on user desktops (or laptops or smart phones, etc.) with COBOL programs providing server functionality on mainframe or midframe platforms, providing all the database and file &quot;heavy lifting&quot; on the back-end. Solutions like this provide users with the user-interfaces they want/need while still leveraging Cobol&amp;rsquo;s strengths on (possibly) downsized legacy mainframe or midframe systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4ec6e85cf4b3b0c4d0278afe7e57d35f30ed23" translate="yes" xml:space="preserve">
          <source>By removing the&lt;code&gt;WITH TEST&lt;/code&gt;clause, the statement is now assuming&lt;code&gt;WITH TEST BEFORE&lt;/code&gt; Since testing now happens</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b42a07bf6c6911ca5675f23376cbefcd1c2058" translate="yes" xml:space="preserve">
          <source>By running on almost as many different computing platforms as Java can. You can&amp;rsquo;t run COBOL programs in your smart phone, but desktops, workstations, midframes/servers, mainframes and supercomputers are all fair game.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99b3ecfc2c73284a8dbbf42ccb65c863f33ef43" translate="yes" xml:space="preserve">
          <source>By setting the specified &amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9265844e717179a7b2a438d467adc0a85b8d0a1" translate="yes" xml:space="preserve">
          <source>By specifying the&lt;code&gt;EXTERNAL&lt;/code&gt;clause on either an FD or an SD, the file description is capable of being shared between all programs executed from the same execution thread, provided an&lt;code&gt;EXTERNAL&lt;/code&gt;clause is coded with the file&amp;rsquo;s description in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb5f1e57497d646258a731c81a2122674f9f57e" translate="yes" xml:space="preserve">
          <source>By specifying the&lt;code&gt;EXTERNAL&lt;/code&gt;clause on the description of a data item, the data item is capable of being shared between all programs executed from the same execution thread, provided the data item is coded (with an&lt;code&gt;EXTERNAL&lt;/code&gt;clause) in each program requiring it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a771ee6fb1e15eb97cd1a3294a78c644eba223" translate="yes" xml:space="preserve">
          <source>By specifying the&lt;code&gt;GLOBAL&lt;/code&gt;clause on the description of a data item, the data item is capable of being shared between a program and any nested subprograms within it, provided the data item is coded (with a&lt;code&gt;GLOBAL&lt;/code&gt;clause) in each program requiring it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2416e940bd79bf4912ad6547f50c2bfe220b82" translate="yes" xml:space="preserve">
          <source>By specifying the&lt;code&gt;GLOBAL&lt;/code&gt;clause on the description of a file or a report, that description is capable of being shared between a program and any nested subprograms within it, provided the&lt;code&gt;FD&lt;/code&gt;&lt;code&gt;SD&lt;/code&gt;or&lt;code&gt;RD&lt;/code&gt;is coded (with a&lt;code&gt;GLOBAL&lt;/code&gt;clause) in each nested subprogram requiring it. This sharing allows the file to be opened, read and/or written and closed or the report to be initiated or terminated in those programs. Separately compiled programs may not share a&lt;code&gt;GLOBAL&lt;/code&gt;file description, but they may share an&lt;code&gt;EXTERNAL&lt;/code&gt;(see &lt;a href=&quot;#EXTERNAL&quot;&gt;EXTERNAL&lt;/a&gt;) file description. This sharing applies to the record descriptions subordinate to the file description and the report groups subordinate to the&lt;code&gt;RD&lt;/code&gt;also.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efcc05f648154d08ba04ed3ff4bfc640d7cca8bc" translate="yes" xml:space="preserve">
          <source>By undertaking so-called &quot;modernization projects&quot;, where existing applications are either rewritten in &quot;modern&quot; languages or replaced outright with purchased packages. Most of these businesses are using such activities as an excuse to abandon &quot;expensive&quot; mainframes in favour of (presumably) less-expensive &quot;open systems&quot; (mid frame/server) solutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="b2d330f2fca96f1b05b308c57b06bfbb0866d3dd" translate="yes" xml:space="preserve">
          <source>C actually has no &quot;string&quot; data type; it stores strings as an array of&lt;code&gt;char&lt;/code&gt;data type items where each element of the array is a single character. Being an array, there is an upper limit to how many characters may be stored in a given &quot;string&quot;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e27a8aa29a84e7706c6e8607e195451cdbd1f4" translate="yes" xml:space="preserve">
          <source>C provides a robust set of string-manipulation functions to copy strings from one char array to another, search strings for certain characters, compare one char array to another, concatenate char arrays and so forth. To make these functions possible, it was necessary to be able to define the logical end of a string. C accomplishes this via the expectation that all strings (char arrays) will be terminated by a NULL character (x&amp;rsquo;00&amp;rsquo;). Of course, no one forces a programmer to do this, but if [s]he ever expects to use any of the C standard functions to manipulate that string they had</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcda46f8c65a9976fb21d248ed465647b6bde4c" translate="yes" xml:space="preserve">
          <source>C$CALLEDBY Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25aa760761479301e30e8a8c445c9432dd492410" translate="yes" xml:space="preserve">
          <source>C$CHDIR Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c60be72b5b88f58236cf8fb94ebaf0eefca5d7" translate="yes" xml:space="preserve">
          <source>C$COPY Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63fb329eb6628c3bd515a3892d5ea9aacf0522a8" translate="yes" xml:space="preserve">
          <source>C$DELETE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275df22fd79b6fa47dd5b523f6ebac52e1fdb8f6" translate="yes" xml:space="preserve">
          <source>C$FILEINFO Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af04ab8b5e8f7046d43c002178e5c722059d13c1" translate="yes" xml:space="preserve">
          <source>C$GETPID Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7ded84339e057daf0184a49ef164c65bc6b32a" translate="yes" xml:space="preserve">
          <source>C$JUSTIFY Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b15c319201eb0d4f86b0cc53c98fc7d9d42c234" translate="yes" xml:space="preserve">
          <source>C$MAKEDIR Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a0d45d44d016ceeda857f92ebe2f939551c1f9" translate="yes" xml:space="preserve">
          <source>C$NARG Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4301ab99f38a6a937974d4fe3bd89d3d6e681f4" translate="yes" xml:space="preserve">
          <source>C$PARAMSIZE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba12494eafa0188cb40b98d9c876a7425631a690" translate="yes" xml:space="preserve">
          <source>C$PRINTABLE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c2b1326b1c714146c0ce2aba499e0b8e206680" translate="yes" xml:space="preserve">
          <source>C$SLEEP Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbf00546e6a8778875a41b5b9d93ca091c5f5d9" translate="yes" xml:space="preserve">
          <source>C$TOLOWER Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235bb9fb32c0abea6f7b04592732444d58218db6" translate="yes" xml:space="preserve">
          <source>C$TOUPPER Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b586454872ec65496b80499102380369642ddd7c" translate="yes" xml:space="preserve">
          <source>C01, C02, C03, C04, C05, C06, C07, C08, C09, C10, C11, C12, CALL, CALL-CONVENTION, CANCEL, CAPACITY, CD, CENTER, CF, CH, CHAIN, CHAINING, CHAR, CHAR-NATIONAL, CHARACTER, CHARACTERS, CLASS, CLASS-ID, CLASSIFICATION, CLOSE, COB-CRT-STATUS, CODE, CODE-SET, COL, COLLATING, COLS, COLUMN, COLUMNS, COMBINED-DATETIME, COMMA, COMMAND-LINE, COMMIT, COMMON, COMMUNICATION, COMP, COMP-1, COMP-2, COMP-3, COMP-4, COMP-5, COMP-6, COMP-X, COMPUTATIONAL, COMPUTATIONAL-1, COMPUTATIONAL-2, COMPUTATIONAL-3, COMPUTATIONAL-4, COMPUTATIONAL-5, COMPUTATIONAL-X, COMPUTE, CONCATENATE, CONDITION, CONFIGURATION, CONSOLE, CONSTANT, CONTAINS, CONTENT, CONTINUE, CONTROL, CONTROLS, CONVERSION, CONVERTING, COPY, CORR, CORRESPONDING, COS, COUNT, CRT, CRT-UNDER, CSP, CURRENCY, CURRENCY-SYMBOL, CURRENT-DATE, CURSOR, CYCLE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6043bc6c403ff9d2b6046c2362a636bfea53d8" translate="yes" xml:space="preserve">
          <source>CALL Argument Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2671d70df7d4a08926d8332357381e9f61c8e58b" translate="yes" xml:space="preserve">
          <source>CALL Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526726fc890dc36e6dd8ae3a02580ed875790716" translate="yes" xml:space="preserve">
          <source>CANCEL Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010c33a3c5669abc0d4c3e13b16ca99cd56d0d3d" translate="yes" xml:space="preserve">
          <source>CBL_AND Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b7fee42c3a84585978282604e00a5fb93a05ec" translate="yes" xml:space="preserve">
          <source>CBL_CHANGE_DIR Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbc78325958ee05b70bb94019a16479e308ea2a" translate="yes" xml:space="preserve">
          <source>CBL_CHECK_FILE_EXIST Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d018ed830260089d76bfd38d1e7919cdcbdc024" translate="yes" xml:space="preserve">
          <source>CBL_CLOSE_FILE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b855b91a0b8fa8059790047a5423baec5643c25e" translate="yes" xml:space="preserve">
          <source>CBL_COPY_FILE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32251cdaf8beff67a4b3e7d1d106d86e40a1b100" translate="yes" xml:space="preserve">
          <source>CBL_CREATE_DIR Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67e278d9381e059f5d21ba70a0ed735d91d5ee2" translate="yes" xml:space="preserve">
          <source>CBL_CREATE_FILE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aac303e78bc6ea49b38f3aaffb8696802f08b21" translate="yes" xml:space="preserve">
          <source>CBL_DELETE_DIR Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a2b66b1511e8c70416c9fb446dfa9d760f4409" translate="yes" xml:space="preserve">
          <source>CBL_DELETE_FILE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae015083f02e9d041e26ed70b9a6fffc894949a" translate="yes" xml:space="preserve">
          <source>CBL_EQ Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f5e8eac7a336edda31e136c3f10dcb76eae126" translate="yes" xml:space="preserve">
          <source>CBL_ERROR_PROC Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae4f40d8c9a5da6bc0002c9319000e30916e9a3" translate="yes" xml:space="preserve">
          <source>CBL_EXIT_PROC Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8fd1e852b667bcff38aa9a4b3dace1a9c43521" translate="yes" xml:space="preserve">
          <source>CBL_FLUSH_FILE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bc84b9285576d6734e6beec514af63569e077c" translate="yes" xml:space="preserve">
          <source>CBL_GC_FORK Built-In Subroute Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444a554fdd59dc086037d0b015b21d8b23a1d476" translate="yes" xml:space="preserve">
          <source>CBL_GC_FORK allows you to fork the current COBOL process to a new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d3c0a940a8711fd973e8fc803b857b7de36bd4" translate="yes" xml:space="preserve">
          <source>CBL_GC_GETOPT Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474dd94a99e0f4504a3911e4ce0454b97922c3c1" translate="yes" xml:space="preserve">
          <source>CBL_GC_GETOPT realises the quite well-known option parser, getopt, for GnuCOBOL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a7fc3ba8bdc0eb16662e3346c6fffcf9382b20" translate="yes" xml:space="preserve">
          <source>CBL_GC_HOSTED Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfeab54a31d8553275c0736120372f4fd5e50c9" translate="yes" xml:space="preserve">
          <source>CBL_GC_NANOSLEEP Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c7acc9905049c52db82c8c37dcdfbb6f5c396a" translate="yes" xml:space="preserve">
          <source>CBL_GC_PRINTABLE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002a375b4e5e465227461332d42e7dfc4592f8d3" translate="yes" xml:space="preserve">
          <source>CBL_GC_WAITPID Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac766867276b2aabf42d5cdfd47fb121f6240105" translate="yes" xml:space="preserve">
          <source>CBL_GET_CSR_POS Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e5239f190652a889d9f29f10075e094c5d1f81" translate="yes" xml:space="preserve">
          <source>CBL_GET_CURRENT_DIR Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdeda2be1413a3e0154004ce2a6b0f698702b2c" translate="yes" xml:space="preserve">
          <source>CBL_GET_SCR_SIZE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea53b33fa0fb048875430a66dede00fd79b11ae1" translate="yes" xml:space="preserve">
          <source>CBL_IMP Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304410d70b67551eb4b5124bf58781cbe676608e" translate="yes" xml:space="preserve">
          <source>CBL_NIMP Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01330765ee05a71a49eb8a8266774fd9df168a0e" translate="yes" xml:space="preserve">
          <source>CBL_NOR Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae325b0b46a6629e90042a3330b4d6576832abee" translate="yes" xml:space="preserve">
          <source>CBL_NOT Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f3a1214c7ce4e4db541490264fce718bdb0b99" translate="yes" xml:space="preserve">
          <source>CBL_OPEN_FILE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0d4c798253d7a104de0e6e336cb822d128317a" translate="yes" xml:space="preserve">
          <source>CBL_OR Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaded8b3b2cce2d257ac7d4c3e1db62dd816b37d" translate="yes" xml:space="preserve">
          <source>CBL_READ_FILE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc6a542ee9584d1722e8a0254c05146e7a4bb23" translate="yes" xml:space="preserve">
          <source>CBL_RENAME_FILE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f083aaeb9579fac0486dd9732f32e424a58b291b" translate="yes" xml:space="preserve">
          <source>CBL_TOLOWER Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1313f5ae06b6506dffc0469a5b748ccadecaca" translate="yes" xml:space="preserve">
          <source>CBL_TOUPPER Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b336aa7e9d6788405e2364f4cafc6c27b8fbf20" translate="yes" xml:space="preserve">
          <source>CBL_WRITE_FILE Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4838a4b796a648ad42c85059b4eb0c62946608f2" translate="yes" xml:space="preserve">
          <source>CBL_XOR Built-In Subroutine Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591b8a7ec66f16bf4faa0ec3a4deb122c5ea5b1d" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;CALL-CONVENTION Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869c317303145158af9e6e90164e7cd2f813dbb8" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;D Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f050ae59c3cda50e2ce97a4e292c4f6b54cbd82f" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;DEFINE Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4dcdac96ffe39d449482c58407ae247c86d80c7" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;DISPLAY Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4fd934a8558901c019c5c42be0fc334c6c6eb7" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;IF Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824fbca66d4ddb25c3dea88c697a1b3036fdd461" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;LEAP-SECONDS Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ccb1c1d9bf1268318c29a01115271ec9043888" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;LISTING Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609992c93b4c3ac2672f59a190856a6003ae6098" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;PAGE Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2873759e8f982b49f15e9310726ffc1e448d2044" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;SET Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ae47c2f2858a6c8094141c6269f6f02a37d0bb" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;SOURCE Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caac43c2a77c2d325c3effddadbdcdbb3a10132" translate="yes" xml:space="preserve">
          <source>CDF &amp;gt;&amp;gt;TURN Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea76d0141389cb93e5bd48077697b5d0cc98c38" translate="yes" xml:space="preserve">
          <source>CDF * Directive Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79f56e26f38fafdd62c99b49082274f30e09bbc" translate="yes" xml:space="preserve">
          <source>CDF COPY Phrase-Clause Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd0c28c6783f66ff7fe78daee799faae6ea01dd" translate="yes" xml:space="preserve">
          <source>CDF COPY Statement Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf0d1248eeeb581bbdb0cc930febc01a8f681aa" translate="yes" xml:space="preserve">
          <source>CDF COPY String-Clause Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045ab09524dc5447cd0cf03aa5eb3501bdffb25b" translate="yes" xml:space="preserve">
          <source>CDF REPLACE Phrase-Clause Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375676f99be00b04e212eb20bff17e5558f0a46d" translate="yes" xml:space="preserve">
          <source>CDF REPLACE Statement (Format 1) Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2383d7055a0b1410fa38fa42aa494bc482941c7d" translate="yes" xml:space="preserve">
          <source>CDF REPLACE Statement (Format 2) Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3735b9293b76c2de3ece344ec6d5b55d226a7092" translate="yes" xml:space="preserve">
          <source>CDF REPLACE String-Clause Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f780a869f81377accdf06e9dfedadc683bf0692e" translate="yes" xml:space="preserve">
          <source>CDF directives, denoted by the presence of a &quot;&amp;gt;&amp;gt;&quot; character sequence as part of the statement name itself, are used to influence the process of program compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9770a9ad7daa753f5b06243cae55af53abb717" translate="yes" xml:space="preserve">
          <source>CDF variable names follow the rules for standard GnuCOBOL user-defined names, and may not duplicate any CDF reserved word. CDF variable names may duplicate COBOL reserved words, provided the&lt;code&gt;CONSTANT&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3087363482395db318308c5f193a16c28c675dc0" translate="yes" xml:space="preserve">
          <source>CDF variables defined in this way become undefined once an&lt;code&gt;END PROGRAM&lt;/code&gt;or&lt;code&gt;END FUNCTION&lt;/code&gt;directive is encountered in the input source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c106188bad3afd1ea3ef1e235247ac585ffea3" translate="yes" xml:space="preserve">
          <source>CDF-Conditional-Expression</source>
          <target state="translated">CDF-Conditional-Expression</target>
        </trans-unit>
        <trans-unit id="860fddb177df40e4e9448d281b9d62e5d7dbf445" translate="yes" xml:space="preserve">
          <source>CDF-Conditional-Expression Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f787b98efc8a28519cd79611110f3f03f0701e" translate="yes" xml:space="preserve">
          <source>CDF-Conditional-Expression-n</source>
          <target state="translated">CDF-Conditional-Expression-n</target>
        </trans-unit>
        <trans-unit id="486a9febb65e04c40f48a599b8b975e230efd5dd" translate="yes" xml:space="preserve">
          <source>CDF-RelOp Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e70fa0781b6f4e906d33d795a5ed0279c57c5f9" translate="yes" xml:space="preserve">
          <source>CHAR Function Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2b785d4279a4a46339f75de21da44960c6322a" translate="yes" xml:space="preserve">
          <source>CLOSE Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a2fc9d8928d812fbfa67cc8815fa975746d710" translate="yes" xml:space="preserve">
          <source>COBOL</source>
          <target state="translated">COBOL</target>
        </trans-unit>
        <trans-unit id="eadfe5afbc4bdc9323ff76aabd892e614a42f98a" translate="yes" xml:space="preserve">
          <source>COBOL (GnuCOBOL included) still requires that each procedure division paragraph contain at least one sentence if there is any executable code in that paragraph, but a popular coding style is now to simply code a single period right before the end of each paragraph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f259b701df0ffea124e9e9d93fa38f5515d1dc6" translate="yes" xml:space="preserve">
          <source>COBOL (the default) the program name is treated as a COBOL word that maps to the externalised name program to be called, cancelled or referenced in the program-address-identifier, applying the same mapping rules as for a program name for which no AS phrase is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad4eaa4bb2e0dd2937ccfeadd29c67245044240" translate="yes" xml:space="preserve">
          <source>COBOL introduced the concept of structured data. The principle of structured data in COBOL is based on the idea of being able to group related and contiguously-allocated data items together into a single aggregate data item, called a &amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f7e793363c359f805338e8ab3bfc1ba1b12ce9" translate="yes" xml:space="preserve">
          <source>COBOL is no exception, although it does include some very powerful string manipulation capabilities; GnuCOBOL actually has even more string-manipulation capabilities than many other COBOL implementations. The following summarizes GnuCOBOL&amp;rsquo;s string-processing capabilities:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde8c6334c994b5347cfada0a05a26b03a15ab9b" translate="yes" xml:space="preserve">
          <source>COBOL programming standards used by many organizations that use the language generally call for procedure names to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac3fc3307f5261c119816a3d0eb8a309a74395c" translate="yes" xml:space="preserve">
          <source>COBOL stores these character sequences up to a specific quantity limit imposed by the&lt;code&gt;PICTURE&lt;/code&gt;(see &lt;a href=&quot;#PICTURE&quot;&gt;PICTURE&lt;/a&gt;) clause of the data item. For example:&lt;code&gt;01 LastName PIC X(15).&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9ef7dc01343b612f6c4d064720d1b0787f7476" translate="yes" xml:space="preserve">
          <source>COBOL uses the concept of a &quot;level number&quot; to indicate the level at which a data item occurs in a data structure such as the example shown above. When these data items are defined, they are all defined together with a number in the range 1-49 specified in front of their names. Over the years, a convention has come to exist among COBOL programmers that level numbers are always coded as two-digit numbers &amp;mdash; they don&amp;rsquo;t</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ef4657869782222ae93ff64fc2b30b55f64086" translate="yes" xml:space="preserve">
          <source>COBOL, first introduced to the programming public in 1959, was the very first programming language to become standardized (in 1960). This meant that a standard-compliant COBOL program written on computer &quot;A&quot; made by company &quot;B&quot; would be able to be compiled and executed on computer &quot;X&quot; made by company &quot;Y&quot; with very few, if any, changes. This may not seem like such a big deal today, but it was a radical departure from all programming languages that came before it and even many that came after it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7feed455a4b79b075fdccc23d9b50c81b9be30b" translate="yes" xml:space="preserve">
          <source>COLUMN (REPORT SECTION) Clause Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67926b14557077295e873f6eb0943e04447ace62" translate="yes" xml:space="preserve">
          <source>COLUMN (SCREEN SECTION) Clause Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e947ac3b421a25bfd653c90f78152c95ca1753e4" translate="yes" xml:space="preserve">
          <source>COMBINED-DATETIME Function Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10223130153973998a9c9edb1ab0e28808779d2b" translate="yes" xml:space="preserve">
          <source>COMMIT Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9023f069fa53953217be7784a46e321ea47b5e6c" translate="yes" xml:space="preserve">
          <source>COMPUTATIONAL-1</source>
          <target state="translated">COMPUTATIONAL-1</target>
        </trans-unit>
        <trans-unit id="77d504bbedfdd326fb91883e0396fb0c0711c5e2" translate="yes" xml:space="preserve">
          <source>COMPUTATIONAL-2</source>
          <target state="translated">COMPUTATIONAL-2</target>
        </trans-unit>
        <trans-unit id="42f2cf4efe24a37906cd89833c42647573a1a66e" translate="yes" xml:space="preserve">
          <source>COMPUTE Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9a1104da0ef136acfdecfada86cc49b918885e" translate="yes" xml:space="preserve">
          <source>CONCATENATE Function Syntax</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
