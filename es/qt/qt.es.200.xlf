<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="313fe97ec615f69ba5b840723cd9cd9fa77947fb" translate="yes" xml:space="preserve">
          <source>The translation system consolidates the user interface text strings into unique items. This consolidation saves the person doing the translation work having to translate the same text multiple times. However, in some cases, the text is identical but has a different meaning. For example, in English, &quot;back&quot; means take a step backward and also means the part of an object opposite to the front. You need to tell the translation system about these two separate meanings so the translator can create two separate translations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3b75552fe87f0f3cf6f9a1ef390df7941ff0c0" translate="yes" xml:space="preserve">
          <source>The transmission has timed out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d58f9ef3c89e5c0df74be431243bcb6fab6559" translate="yes" xml:space="preserve">
          <source>The transmission received no acknowledgment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72baaff94b51c3cbc0588e59c966fdcf64cb469" translate="yes" xml:space="preserve">
          <source>The transport object implements a minimal message passing interface. It should be an object with a &lt;code&gt;send()&lt;/code&gt; function, which takes a stringified JSON message and transmits it to the server-side &lt;a href=&quot;qwebchannelabstracttransport&quot;&gt;QWebChannelAbstractTransport&lt;/a&gt; object. Furthermore, its &lt;code&gt;onmessage&lt;/code&gt; property should be called when a message from the server was received. Alternatively, you can use a &lt;a href=&quot;qtwebsockets-index&quot;&gt;WebSocket&lt;/a&gt; to implement the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101cc6a3774b925e9f010eb98b70e35f1e853f1d" translate="yes" xml:space="preserve">
          <source>The transport object must be an implementation of &lt;a href=&quot;qwebchannelabstracttransport&quot;&gt;QWebChannelAbstractTransport&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eacc99e30658faa4aa691f27c904232799315073" translate="yes" xml:space="preserve">
          <source>The transport object then handles the communication between the C++ application and a remote HTML client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fae3ef43836c4c6e9e21ae0f2375521bc63f058" translate="yes" xml:space="preserve">
          <source>The travel modes which should be considered during the planning of the route. Values can be combined with OR ('|') -operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7107e2f3a4c76d9555e902985f98c06eadc2df1e" translate="yes" xml:space="preserve">
          <source>The traversal functions are &lt;a href=&quot;qmutablehashiterator#next&quot;&gt;next&lt;/a&gt;(), &lt;a href=&quot;qmutablehashiterator#previous&quot;&gt;previous&lt;/a&gt;(), &lt;a href=&quot;qmutablehashiterator#findNext&quot;&gt;findNext&lt;/a&gt;(), and &lt;a href=&quot;qmutablehashiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62180b84c221e7393d5db657239fe1e117ac77b9" translate="yes" xml:space="preserve">
          <source>The traversal functions are &lt;a href=&quot;qmutablelinkedlistiterator#next&quot;&gt;next&lt;/a&gt;(), &lt;a href=&quot;qmutablelinkedlistiterator#previous&quot;&gt;previous&lt;/a&gt;(), &lt;a href=&quot;qmutablelinkedlistiterator#findNext&quot;&gt;findNext&lt;/a&gt;(), and &lt;a href=&quot;qmutablelinkedlistiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04aac8b3f84c603d0e8aeaae41aa74e88a0a4ef" translate="yes" xml:space="preserve">
          <source>The traversal functions are &lt;a href=&quot;qmutablelistiterator#next&quot;&gt;next&lt;/a&gt;(), &lt;a href=&quot;qmutablelistiterator#previous&quot;&gt;previous&lt;/a&gt;(), &lt;a href=&quot;qmutablelistiterator#findNext&quot;&gt;findNext&lt;/a&gt;(), and &lt;a href=&quot;qmutablelistiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a67e466d79e475aa896f05a354890840c240cf0" translate="yes" xml:space="preserve">
          <source>The traversal functions are &lt;a href=&quot;qmutablemapiterator#next&quot;&gt;next&lt;/a&gt;(), &lt;a href=&quot;qmutablemapiterator#previous&quot;&gt;previous&lt;/a&gt;(), &lt;a href=&quot;qmutablemapiterator#findNext&quot;&gt;findNext&lt;/a&gt;(), and &lt;a href=&quot;qmutablemapiterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc8c78067d5a254f20d4805fe7a4cd451f4413c" translate="yes" xml:space="preserve">
          <source>The traversal functions are &lt;a href=&quot;qmutablevectoriterator#next&quot;&gt;next&lt;/a&gt;(), &lt;a href=&quot;qmutablevectoriterator#previous&quot;&gt;previous&lt;/a&gt;(), &lt;a href=&quot;qmutablevectoriterator#findNext&quot;&gt;findNext&lt;/a&gt;(), and &lt;a href=&quot;qmutablevectoriterator#findPrevious&quot;&gt;findPrevious&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91515799ccb1f43da185f287e89185409f9a8e9" translate="yes" xml:space="preserve">
          <source>The tree can have a header that contains a section for each column in the widget. It is easiest to set up the labels for each section by supplying a list of strings with &lt;a href=&quot;qtreewidget#setHeaderLabels&quot;&gt;setHeaderLabels&lt;/a&gt;(), but a custom header can be constructed with a &lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; and inserted into the tree with the &lt;a href=&quot;qtreewidget#setHeaderItem&quot;&gt;setHeaderItem&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404b8601174e29d28d699d9add8555fc0bba1109" translate="yes" xml:space="preserve">
          <source>The tree view (and tree widget) use the style to draw the branches (nodes) of the tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ab0e6a149d77489301dbb0d326e1967573cbba" translate="yes" xml:space="preserve">
          <source>The tree widget takes ownership of the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a19669c45ffdb94e933bb1918c51f76aad9b7cd" translate="yes" xml:space="preserve">
          <source>The triangular notch between the two lines is filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1156a5a0ce080b120abeef4949ae2cb9f7de4d95" translate="yes" xml:space="preserve">
          <source>The true UERE value is calculated from multiple error sources including errors introduced by the satellites and signal propogation delays through the atmosphere as well as errors introduced by the receiving GPS equipment. For details on GPS accuracy see &lt;a href=&quot;http://edu-observatory.org/gps/gps_accuracy.html&quot;&gt;http://edu-observatory.org/gps/gps_accuracy.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db091b58ec0dcf1203290cb51ffc249243effa84" translate="yes" xml:space="preserve">
          <source>The true case occurs if neither the widget itself nor any parent up to but excluding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c489fad28c3dfba4af4c6a46332f5ddb02823a" translate="yes" xml:space="preserve">
          <source>The tuner device is stopped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c31cf509754faec6bb69ddc9caab345838e020" translate="yes" xml:space="preserve">
          <source>The tuner is started and active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4bdfa52a764869c34b1f6d83b3d0556ca3eed2" translate="yes" xml:space="preserve">
          <source>The two</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddf8014a442f330748245d3589f9c047483b967" translate="yes" xml:space="preserve">
          <source>The two axis steps have been expanded. The first step (&lt;code&gt;//recipe&lt;/code&gt;) has been rewritten as &lt;code&gt;/descendant-or-self::element(recipe)&lt;/code&gt;, where &lt;code&gt;descendant-or-self::&lt;/code&gt; is the axis specifier and &lt;code&gt;element(recipe)&lt;/code&gt; is the node test. The second step (&lt;code&gt;title&lt;/code&gt;) has been rewritten as &lt;code&gt;/child::element(title)&lt;/code&gt;, where &lt;code&gt;child::&lt;/code&gt; is the axis specifier and &lt;code&gt;element(title)&lt;/code&gt; is the node test. The output of the expanded &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; will be exactly the same as the output of the shorthand form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99153f3a8bae95c185db1783c6b29f2f4c635d3" translate="yes" xml:space="preserve">
          <source>The two common windowing system specific operations are getting a surface (a &lt;code&gt;VkSurfaceKHR&lt;/code&gt; handle) for a window, and querying if a given queue family supports presenting to a given surface. To avoid WSI-specific bits in the applications, these are abstracted by &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; and the underlying QPA layers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d0c0cb30bf992ff8b87641bd8b3cf20a8698a7" translate="yes" xml:space="preserve">
          <source>The two copies continue to share the same underlying data which does not detach upon write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0c3693a960865e4685240462a71b496288e08e" translate="yes" xml:space="preserve">
          <source>The two frame ids are matching if the following evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a046cda4b2858b52b6b2a992f7902d2be6d73a2" translate="yes" xml:space="preserve">
          <source>The two functions use different hashing algorithms; due to binary compatibility constraints, we cannot change the &lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; algorithm to match the std::pair one before Qt 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a20fd816fc312190d5c47c25446cfeda1f751f6" translate="yes" xml:space="preserve">
          <source>The two lines intersect with each other within the start and end points of each line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce3d72d7b7c3c949a40864e271569b9b0740316" translate="yes" xml:space="preserve">
          <source>The two lines intersect, but not within the range defined by their lengths. This will be the case if the lines are not parallel. &lt;a href=&quot;qlinef#intersect&quot;&gt;intersect&lt;/a&gt;() will also return this value if the intersect point is within the start and end point of only one of the lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e78051e6ed000ddd3ccf8da806936f781a1948" translate="yes" xml:space="preserve">
          <source>The two most common forms of composition are &lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;Source&lt;/a&gt; and &lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;SourceOver&lt;/a&gt;. &lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;Source&lt;/a&gt; is used to draw opaque objects onto a paint device. In this mode, each pixel in the source replaces the corresponding pixel in the destination. In &lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;SourceOver&lt;/a&gt; composition mode, the source object is transparent and is drawn on top of the destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa507689cd885bb73057e7eca544685e9fa1dde" translate="yes" xml:space="preserve">
          <source>The two most commonly used properties of the &lt;a href=&quot;qml-qtlocation-mapgesturearea&quot;&gt;MapGestureArea&lt;/a&gt; are the &lt;a href=&quot;qml-qtlocation-mapgesturearea#enabled-prop&quot;&gt;enabled&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-mapgesturearea#acceptedGestures-prop&quot;&gt;acceptedGestures&lt;/a&gt; properties. Both of these must be set before a &lt;a href=&quot;qml-qtlocation-mapgesturearea&quot;&gt;MapGestureArea&lt;/a&gt; will have any effect upon interaction with the Map. The &lt;a href=&quot;qml-qtlocation-mapgesturearea#flickDeceleration-prop&quot;&gt;flickDeceleration&lt;/a&gt; property controls how quickly the map pan slows after contact is released while panning the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e99c672ba5c0db3b68dd93be815b7ee2b6e0531" translate="yes" xml:space="preserve">
          <source>The two nodes (&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; is a &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt; subclass) both refer to the document's root element, and &lt;code&gt;element1 == element2&lt;/code&gt; will return true. On the other hand:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89a671e503935379d616b87d68f8076c359c7e7" translate="yes" xml:space="preserve">
          <source>The two numbers are compared in a relative way, where the exactness is stronger the smaller the numbers are.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4970ef5818bbae1da86065bd8a65a014493ae20" translate="yes" xml:space="preserve">
          <source>The two phases are useful for applications such as the X11 window manager that need to store information about another application's windows and therefore have to wait until these applications have completed their respective session management tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d115432501342b481894570335c33ea07b090cd6" translate="yes" xml:space="preserve">
          <source>The two vectors that define the plane are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2717f9ed40b5677c750ce0c4e00068578db2d6" translate="yes" xml:space="preserve">
          <source>The two vertical dock areas on the sides of the main window show their tabs vertically. If this option is not set, all dock areas show their tabs at the bottom. Implies AllowTabbedDocks. See also &lt;a href=&quot;qmainwindow#setTabPosition&quot;&gt;setTabPosition&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060faec5e806fb05528be0418f567cc4bc3eda03" translate="yes" xml:space="preserve">
          <source>The two-arguments overloads take an unsigned integer that should be used to seed the calculation of the hash function. This seed is provided by &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; in order to prevent a family of &lt;a href=&quot;qhash#algorithmic-complexity-attacks&quot;&gt;algorithmic complexity attacks&lt;/a&gt;. If both a one-argument and a two-arguments overload are defined for a key type, the latter is used by &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; (note that you can simply define a two-arguments version, and use a default value for the seed parameter).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b4fc1d948e7ef931f1acc878e63f456b4233ec" translate="yes" xml:space="preserve">
          <source>The type also holds a value for the alpha-channel. The default alpha channel is &lt;code&gt;ff&lt;/code&gt;, i.e opaque. For more information, see the &lt;a href=&quot;qcolor#alpha-blended-drawing&quot;&gt;Alpha-Blended Drawing&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218212b561b5f81be30577c9403a88e590c8d066" translate="yes" xml:space="preserve">
          <source>The type can be used in an &lt;a href=&quot;qtqml-syntax-basics#object-declarations&quot;&gt;object declaration&lt;/a&gt; from QML, and its properties can be read and written to, as per the example below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85d4e5f7700fe24ac61d37ac7d8f594c3761a10" translate="yes" xml:space="preserve">
          <source>The type corresponds to the &lt;code&gt;wl_output&lt;/code&gt; interface in the Wayland protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbf2495cf56413806aadcf70b784f05b6e7c353" translate="yes" xml:space="preserve">
          <source>The type definitions are partly convenience definitions for basic types (some of which guarantee certain bit-sizes on all platforms supported by Qt), partly types related to Qt message handling. The functions are related to generating messages, Qt version handling and comparing and adjusting object values. And finally, some of the declared macros enable programmers to add compiler or platform specific code to their applications, while others are convenience macros for larger operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cbdfd5fd879a5fe1672efe741f8133093cf343" translate="yes" xml:space="preserve">
          <source>The type has to be registered with &lt;a href=&quot;qdbusargument#qDBusRegisterMetaType&quot;&gt;qDBusRegisterMetaType&lt;/a&gt;() before it can be used with &lt;a href=&quot;qdbusargument&quot;&gt;QDBusArgument&lt;/a&gt;. Therefore, somewhere in your program, you should add the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9422f4fbb48b75a57d0cc020c6e6b359d16da64" translate="yes" xml:space="preserve">
          <source>The type is automatically set when constructing a theme, but can also be changed later. Changing the theme type will change all other properties of the theme to what the predefined theme specifies. Changing the theme type of the active theme of the graph will also reset all attached series to use the new theme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c560165bacbcb54c291c5663508d18f8a2834ba7" translate="yes" xml:space="preserve">
          <source>The type is not known.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2211db7a4ed9da411437b7787084d047c9ddd1c" translate="yes" xml:space="preserve">
          <source>The type is unknown or we have reached the end of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4e7e67647aacd2e92144f52894a65c621d0b3b" translate="yes" xml:space="preserve">
          <source>The type is used internally by &lt;a href=&quot;qstylehintreturn&quot;&gt;QStyleHintReturn&lt;/a&gt;, its subclasses, and &lt;a href=&quot;qstylehintreturn#qstyleoption_cast&quot;&gt;qstyleoption_cast&lt;/a&gt;() to determine the type of style option. In general you do not need to worry about this unless you want to create your own &lt;a href=&quot;qstylehintreturn&quot;&gt;QStyleHintReturn&lt;/a&gt; subclass and your own styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab81deaa9be33aa8348101260512d99760554e0" translate="yes" xml:space="preserve">
          <source>The type is used internally by &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;, its subclasses, and &lt;a href=&quot;qstyleoption#qstyleoption_cast&quot;&gt;qstyleoption_cast&lt;/a&gt;() to determine the type of style option. In general you do not need to worry about this unless you want to create your own &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; subclass and your own styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf104f5301c90b691fb285032b41ce7a0121dbd0" translate="yes" xml:space="preserve">
          <source>The type is used internally by &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;, its subclasses, and &lt;a href=&quot;qstyleoption#qstyleoption_cast&quot;&gt;qstyleoption_cast&lt;/a&gt;() to determine the type of style option. In general you do not need to worry about this unless you want to create your own &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; subclass and your own styles. The version is used by &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; subclasses to implement extensions without breaking compatibility. If you use &lt;a href=&quot;qstyleoption#qstyleoption_cast&quot;&gt;qstyleoption_cast&lt;/a&gt;(), you normally do not need to check it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8284e5e6290c06f3a7cf973bdd70b5a2678c093" translate="yes" xml:space="preserve">
          <source>The type must be set before calling this method if you are using &lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdf0d8977e4ff12dca0bb2c9e7bf3fb558b0332" translate="yes" xml:space="preserve">
          <source>The type must have been registered with &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;() and &lt;a href=&quot;qmetatype#qRegisterMetaTypeStreamOperators&quot;&gt;qRegisterMetaTypeStreamOperators&lt;/a&gt;() beforehand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e3d23ff1b21761e9959385f7c3b561ad07e99a" translate="yes" xml:space="preserve">
          <source>The type name is the same as used in the &lt;a href=&quot;qml-qtquick-canvas#getContext-method&quot;&gt;getContext()&lt;/a&gt; call, for the 2d canvas the value will be &quot;2d&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01aaaeb412e80a3e3714e9e37083bc8f5bb649a0" translate="yes" xml:space="preserve">
          <source>The type of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8918c1f84b237903c5facf4591133b65a81098dc" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;qsgclipnode&quot;&gt;QSGClipNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92edf915892581c0145ba2471f74530881f11c7e" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890397db3bd9f0044acdb2c2434e09187c1a8fbf" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;qsgnode&quot;&gt;QSGNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa50cda46dd92fd2d709973178375f7603aeca4" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;qsgopacitynode&quot;&gt;QSGOpacityNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48745b965d7c47d8b08931b31d839fab4c804c21" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89319357d976d762ef312a37edab99cf20ca067a" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;qsgtransformnode&quot;&gt;QSGTransformNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf1777fe8deb9055bcf651e21f6250a8ad24076" translate="yes" xml:space="preserve">
          <source>The type of GATT service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbd9356706e89164a4cbad87df2de65143812ea" translate="yes" xml:space="preserve">
          <source>The type of bearer is unknown or unspecified. The &lt;a href=&quot;qnetworkconfiguration#bearerTypeName&quot;&gt;bearerTypeName&lt;/a&gt;() function may return additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199ef1ec64f4ea2a35ec93aae3d8e7e53b093e10" translate="yes" xml:space="preserve">
          <source>The type of color specified, either RGB, HSV, CMYK or HSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a98c90557e3d825527b2432d5e466c596a3a96" translate="yes" xml:space="preserve">
          <source>The type of drawing context to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710c88886c0c33dca029d4395c791432245a3985" translate="yes" xml:space="preserve">
          <source>The type of easing curve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecf6262d0b14b79aab36656d644183e043f5713" translate="yes" xml:space="preserve">
          <source>The type of encoding method to use when recording audio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdfa6dfc8b25463dd8a0b098953ce67190419264" translate="yes" xml:space="preserve">
          <source>The type of event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac38c2a95524f5e2b72d1e00e278666e72ce2a68" translate="yes" xml:space="preserve">
          <source>The type of history that this history state records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e56b1b48c079e60c5d548ec7abf797f95fd714" translate="yes" xml:space="preserve">
          <source>The type of information that needs to be provided in the json file is plugin dependent, please see the class documentation for details on the information that needs to be contained in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db11e6c4f8fa2d09d39e5d4d017c3e03c74e4e9" translate="yes" xml:space="preserve">
          <source>The type of light.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a71861be517e62280e83b658000888e922c225" translate="yes" xml:space="preserve">
          <source>The type of logical particle which this is emitting from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009d6ba0fa9d84ee8acf4df48223a79a1585e010" translate="yes" xml:space="preserve">
          <source>The type of media (video or still images), the camera is configured to capture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a4a602167700bc0ed3ffe1e9c06047628bcb71" translate="yes" xml:space="preserve">
          <source>The type of menu item. See below for possible values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1404fe7c0e4745a7ca86ec93afed37071f59802" translate="yes" xml:space="preserve">
          <source>The type of model affects the properties that are exposed to the &lt;a href=&quot;qml-qt3d-core-nodeinstantiator#delegate-prop&quot;&gt;delegate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acd8df65b2a6b9514cc946f348b407f46d24d50" translate="yes" xml:space="preserve">
          <source>The type of model affects the properties that are exposed to the &lt;a href=&quot;qml-qtqml-instantiator#delegate-prop&quot;&gt;delegate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7132d4c1dedb5ae2422154310ea7d2076cfd569" translate="yes" xml:space="preserve">
          <source>The type of model affects the properties that are exposed to the &lt;a href=&quot;qml-qtquick-repeater#delegate-prop&quot;&gt;delegate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16686f0705bd471044b57683627764e47f9b5820" translate="yes" xml:space="preserve">
          <source>The type of search result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc1d84643219bbca1729d51f5661b5063549b29" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstylehintreturn#HintReturnType-enum&quot;&gt;SH_Default&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc529a17d916f8e92c1eece27e8c2e7340f3320" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstylehintreturn#HintReturnType-enum&quot;&gt;SH_Mask&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f91723bb662c8591a21222a86248f85f6a763f" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstylehintreturn#HintReturnType-enum&quot;&gt;SH_Variant&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1f9d48f4fb7d0667dd189ebf8d36aa981ea568" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_Button&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b485ab7c23d3f5999e4ff92a24eb161264e53ca" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_ComboBox&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6beb17f9fda5531f0291ba4be52589e6724449dd" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_Complex&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44dce19f4b14d04eb66bbbcc5edd4442388839f" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_Default&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e148899022aeca64a772b6ed1420e48839642db" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_DockWidget&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc17eb5968888798e2d17540c813e9ae546f7978" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_FocusRect&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2216024b85396303a049be63555b7cddc523084" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_Frame&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479fac4e1ef023de8d89483a53afda40bb7c3b44" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_GraphicsItem&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3642795b03b7dfb1340ab1ba9ec36fab38bc67" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_GroupBox&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aaa5fe7325e422a154bff495225c7f65757fa73" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_Header&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020d47a89a1097f075564d7796ddf5339b0fbd18" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_MenuItem&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ff3d4a900f76716b2cd3b677dcc6e8aa00c385" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_ProgressBar&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5df6e8939500392ac489bf4b6daa3349039339d" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_RubberBand&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b957acef8a6d0fa2b5f002c31757b43e5f2f2a0b" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_Slider&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694b89bd81e1b42851e706eeceaba25b07c04375" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_SpinBox&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53613b4ba4f05893f21966327f3e9edc832f073b" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_Tab&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b7fd2619d78ae3b8252f6db510e7fb7b1aeb78" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_TabBarBase&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee503b63dca371d5c9b2c1349a2db42d12d9415" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_TabWidgetFrame&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="547411f64c6bfcd9da859f8d6d6e9860748b169e" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_TitleBar&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aed27f5d8814f2ffc93264624415aac0b800c1e" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_ToolBar&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58242dbbe7959f5a1d24396c495be944010f8b04" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_ToolBox&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25bda42588a7be952681a5971ee4fd8a45dc6534" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_ToolButton&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b781da29fb659153df9cef8626d51a3a7965fac6" translate="yes" xml:space="preserve">
          <source>The type of style option provided (&lt;a href=&quot;qstyleoption#OptionType-enum&quot;&gt;SO_ViewItem&lt;/a&gt; for this class).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44df40e1d08010048a17122e40c5fbe789088e2" translate="yes" xml:space="preserve">
          <source>The type of such native handles is highly platform specific and in some cases the platform plugin will need more information to adopt a handle, just the handle in itself will not be sufficient. Therefore the public API consists of functions taking or returning a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; that contains a platform-specific value type. See for example &lt;a href=&quot;qopenglcontext#setNativeHandle&quot;&gt;QOpenGLContext::setNativeHandle&lt;/a&gt;() and &lt;a href=&quot;qopenglcontext#nativeHandle&quot;&gt;QOpenGLContext::nativeHandle&lt;/a&gt;(). When running on Linux/X11, using the xcb platform plugin and the GLX windowing system interface, the variant contains a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qglxnativecontext.html&quot;&gt;QGLXNativeContext&lt;/a&gt;. On other platforms a different class will be used. These classes are all placed in the Qt Platform Headers module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3385534d86d015db685d8f04a7496cf854e5114d" translate="yes" xml:space="preserve">
          <source>The type of the Bluetooth device cannot be determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f8ac258f4943a2615503fd6f816902465fb135" translate="yes" xml:space="preserve">
          <source>The type of the address (public or private). The &lt;a href=&quot;qlowenergyadvertisingparameters-addressinfo&quot;&gt;AddressInfo&lt;/a&gt; default constructor initialises this value to &lt;a href=&quot;qlowenergycontroller#RemoteAddressType-enum&quot;&gt;QLowEnergyController::PublicAddress&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bf9457b5f6fe68f3b67d8546e5bbc66297ed93" translate="yes" xml:space="preserve">
          <source>The type of the attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dadd5770e07dd2115245f008e6328d11d680663" translate="yes" xml:space="preserve">
          <source>The type of the authentication request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fdd3ab1e16eaaf487e0e68ba613705b0e04f9a" translate="yes" xml:space="preserve">
          <source>The type of the axis object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2862b21d4824d87d052a8ee8a1546ab16b5ea473" translate="yes" xml:space="preserve">
          <source>The type of the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9879b3f62e04f5cdaea3bf2d686ba649c4473878" translate="yes" xml:space="preserve">
          <source>The type of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbbfc56bae65f36923b9825ef5c5abed17a8aed" translate="yes" xml:space="preserve">
          <source>The type of the descriptor depends on the platform:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c593c4f1223ec1923aec9de26eff79f8b545855" translate="yes" xml:space="preserve">
          <source>The type of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e0099c46e994fc06f7a93f5320263e4298eded" translate="yes" xml:space="preserve">
          <source>The type of the first element in the pair (T1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456ce88cd6116a7a6c6d41fa6b757929eb230c39" translate="yes" xml:space="preserve">
          <source>The type of the form validation message request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97dbc28224fec81c4f2be947ac31565714faa814" translate="yes" xml:space="preserve">
          <source>The type of the handle is given by &lt;a href=&quot;qabstractvideobuffer#handleType&quot;&gt;handleType&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f57daf8f6d26bbe0f9d8773b8392c882366bba" translate="yes" xml:space="preserve">
          <source>The type of the legend marker object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58652e6fa2f1065ceede784535f68330a82ab53c" translate="yes" xml:space="preserve">
          <source>The type of the media (audio, video, etc).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd69119d6ba6917acbcf99c9b08305f9eff3a6b" translate="yes" xml:space="preserve">
          <source>The type of the media element or &lt;code&gt;MediaTypeNone&lt;/code&gt; if the selected web page content is not a media element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3472c92618c8986f0238a475be47665c06168769" translate="yes" xml:space="preserve">
          <source>The type of the menu item. This a value of the &lt;a href=&quot;qstyleoptionmenuitem#MenuItemType-enum&quot;&gt;MenuItemType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92377d6176f496d753b6c7dfaf56a2de6b87b850" translate="yes" xml:space="preserve">
          <source>The type of the message is invalid; this is the type of a default-constructed &lt;a href=&quot;qopengldebugmessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a9b4f9eb01448549718febec74c71a8e50087b" translate="yes" xml:space="preserve">
          <source>The type of the primitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dce90518b83fae624359139846e3045850d52d9" translate="yes" xml:space="preserve">
          <source>The type of the proxy. One of the &lt;a href=&quot;qabstractdataproxy#DataType-enum&quot;&gt;QAbstractDataProxy::DataType&lt;/a&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b10a236739eae17ac64873831ecff485acd5d5e" translate="yes" xml:space="preserve">
          <source>The type of the record is unknown and should be treated similar to content with MIME type 'application/octet-stream' without further context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02462e7aa8690e423e44705490def650654f770" translate="yes" xml:space="preserve">
          <source>The type of the second element in the pair (T2).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca812803b77411a8aab7f244b45312cdbac02d0" translate="yes" xml:space="preserve">
          <source>The type of the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e8683196bfacb54312fa01a36662c54cd29114" translate="yes" xml:space="preserve">
          <source>The type of the series. One of the &lt;a href=&quot;qabstract3dseries#SeriesType-enum&quot;&gt;QAbstract3DSeries::SeriesType&lt;/a&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67eb8f81e404d47193038980bd364a3c5ea7376b" translate="yes" xml:space="preserve">
          <source>The type of the theme. If no type is set, the type is &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Theme3D.ThemeUserDefined&lt;/a&gt;. Changing the theme type after the item has been constructed will change all other properties of the theme to what the predefined theme specifies. Changing the theme type of the active theme of the graph will also reset all attached series to use the new theme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01cf71c2522bb0071f8aab1c076f799c01baf8f4" translate="yes" xml:space="preserve">
          <source>The type of the usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d24c0aabf299eb2f7c9ca8fe824ebf8bbadf2e" translate="yes" xml:space="preserve">
          <source>The type of the value can be queried with &lt;a href=&quot;qjsonvalue#type&quot;&gt;type&lt;/a&gt;() or accessors like &lt;a href=&quot;qjsonvalue#isBool&quot;&gt;isBool&lt;/a&gt;(), &lt;a href=&quot;qjsonvalue#isString&quot;&gt;isString&lt;/a&gt;(), and so on. Likewise, the value can be converted to the type stored in it using the &lt;a href=&quot;qjsonvalue#toBool&quot;&gt;toBool&lt;/a&gt;(), &lt;a href=&quot;qjsonvalue#toString&quot;&gt;toString&lt;/a&gt;() and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d467c546e7c547a7f31675f9a1aa03778491cf" translate="yes" xml:space="preserve">
          <source>The type of the view that is requested by the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea486ac2ed419c06f8c6ee0e7413f66405fa1ade" translate="yes" xml:space="preserve">
          <source>The type of time zone name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e98e43a5c90ea9e116f311752f68beba496a56" translate="yes" xml:space="preserve">
          <source>The type of time zone time, for example when requesting the name. In time zones that do not apply DST, all three values may return the same result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489bf0ef46f348dbfb69fd2cdd48438831a210cf" translate="yes" xml:space="preserve">
          <source>The type of values that can be held in a &lt;a href=&quot;qcborarray&quot;&gt;QCborArray&lt;/a&gt;: that is, &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0976ea5b70376c7d94c926530f805b700b1a4d" translate="yes" xml:space="preserve">
          <source>The type offers built-in options for Trace rendering. Currently the following rendering options are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2ef620f928ee95bcf4666f4fdaf91fbe6598ef" translate="yes" xml:space="preserve">
          <source>The type signature is not valid or compatible (&lt;code&gt;org.freedesktop.DBus.Error.InvalidSignature&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0560cbf4844cf7ddb205ad8fc6d7d9d929aff6e8" translate="yes" xml:space="preserve">
          <source>The type that &lt;a href=&quot;qcbormap&quot;&gt;QCborMap&lt;/a&gt; uses for sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86c392f20f04b80ffb0e2a85832ce5b7fb66f64" translate="yes" xml:space="preserve">
          <source>The type that is mapped to (the value), that is, a &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29de818c78fe3063f9c082f524b8c945c748c263" translate="yes" xml:space="preserve">
          <source>The typed value is an atomic value, which an element or attribute contains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4eefeccbba4aaefc4bc869f10fccd80bb268a7" translate="yes" xml:space="preserve">
          <source>The types and functionality that &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; provides can now be used in the QML document!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a0dce14468205976e3fb26eb50f31834acf352" translate="yes" xml:space="preserve">
          <source>The types for specifying path elements are shared between &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; and Shape. However, not all Shape implementations support all path element types, while some may not make sense for &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;. Shape's currently supported subset is: &lt;a href=&quot;qml-qtquick-pathmove&quot;&gt;PathMove&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pathline&quot;&gt;PathLine&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pathquad&quot;&gt;PathQuad&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-pathcubic&quot;&gt;PathCubic&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-patharc&quot;&gt;PathArc&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-pathsvg&quot;&gt;PathSvg&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed864d4a5c2e9b7f0886ad9f467c8adb707bb6e" translate="yes" xml:space="preserve">
          <source>The types of change that can be sent and received by Qt3D's change notification system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb1139f029f9dc38824109f2c4ec2460e64bc13" translate="yes" xml:space="preserve">
          <source>The types of payment the place accepts, for example visa, mastercard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d946868dc9a4a54664f2ee10a61a02fbd4ca2352" translate="yes" xml:space="preserve">
          <source>The types of pointing devices that can activate this Pointer Handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6306ed63456044166bfb666f7a1caeac4293a096" translate="yes" xml:space="preserve">
          <source>The types of pointing instruments (finger, stylus, eraser, etc.) that can activate this Pointer Handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca032ca44d4225d08d0f29e3b1f431f4293994ef" translate="yes" xml:space="preserve">
          <source>The typical approach is to use the &lt;a href=&quot;qplacemanager#compatiblePlace&quot;&gt;QPlaceManager::compatiblePlace&lt;/a&gt;() function, it creates a copy of a place, but only copies data that the manager supports. Manager specific data such as the place identifier is not copied over. The new copy is now suitable for saving into the manager. If the manager supports matching by alternative identifiers, an alternative identifier attribute is assigned to the copy (see &lt;a href=&quot;#matching-places-between-managers&quot;&gt;Matching places between managers&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d89e38697df62493de02e1a068bea8e2860c42" translate="yes" xml:space="preserve">
          <source>The typical key for matching is the &lt;a href=&quot;qplacematchrequest#AlternativeId-var&quot;&gt;QPlaceMatchRequest::AlternativeId&lt;/a&gt;, the value is an alternative identifier attribute type of the format x_id_&amp;lt;provider name&amp;gt; for example x_id_here. The provider name is name supplied to the &lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73853ddc040de70b9e480f5bda6d0f0ca3c81b0e" translate="yes" xml:space="preserve">
          <source>The typical usage is the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b6e683b8ed16e2d7a3c871cf4131fb70392000" translate="yes" xml:space="preserve">
          <source>The typical usage is to subclass &lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt; and &lt;a href=&quot;qvideofilterrunnable&quot;&gt;QVideoFilterRunnable&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20054659283555bd2a79295f7e16b305fd451d6" translate="yes" xml:space="preserve">
          <source>The typical usage of an icon is to use the &lt;a href=&quot;qplaceicon#url&quot;&gt;url&lt;/a&gt;() function to specify a preferred icon size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063efee529ad7d9b9a0f9bde517091bcdf84661a" translate="yes" xml:space="preserve">
          <source>The typical usage of animation clips is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5312948cc58b9a62ca6d8ca480f8d4cd4907f0f" translate="yes" xml:space="preserve">
          <source>The typical usage pattern for &lt;a href=&quot;qopengltexture&quot;&gt;QOpenGLTexture&lt;/a&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cb9608d337388dfd1e7c4c89cec23df34ca182" translate="yes" xml:space="preserve">
          <source>The typical use case for a menu is to open at the point of the mouse cursor after a right click occurs. To do that, define a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; that covers the region upon which clicks should open the menu. When the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; is right-clicked, call the &lt;a href=&quot;qml-qtquick-extras-piemenu#popup-method&quot;&gt;popup()&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703d8065ba30732fa01602f4565fda2eb2d070b5" translate="yes" xml:space="preserve">
          <source>The typical use case of this class is to either profile your application's rendering algorithms or to adjust those algorithms in real-time for dynamic performance/quality balancing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2d2c5ee46f820209081b0edcf1196b3ed05f65" translate="yes" xml:space="preserve">
          <source>The typical use of &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; is to create the object on the target &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; or &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, then call one of the &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt;() overloads with the desired type to be encoded. To create arrays and maps, &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; provides &lt;a href=&quot;qcborstreamwriter#startArray&quot;&gt;startArray&lt;/a&gt;() and &lt;a href=&quot;qcborstreamwriter#startMap&quot;&gt;startMap&lt;/a&gt;() overloads, which must be terminated by the corresponding &lt;a href=&quot;qcborstreamwriter#endArray&quot;&gt;endArray&lt;/a&gt;() and &lt;a href=&quot;qcborstreamwriter#endMap&quot;&gt;endMap&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f8085838f3447f4c470316ac2d6809d698c6af" translate="yes" xml:space="preserve">
          <source>The typical use-case for the class is to create a &lt;a href=&quot;qdeadlinetimer&quot;&gt;QDeadlineTimer&lt;/a&gt; before the operation in question is started, and then use &lt;a href=&quot;qdeadlinetimer#remainingTime&quot;&gt;remainingTime&lt;/a&gt;() or &lt;a href=&quot;qdeadlinetimer#hasExpired&quot;&gt;hasExpired&lt;/a&gt;() to determine whether to continue trying the operation. &lt;a href=&quot;qdeadlinetimer&quot;&gt;QDeadlineTimer&lt;/a&gt; objects can be passed to functions being called to execute this operation so they know how long to still operate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf50e55bff018f42b7f99d7359fe9dd6957bb01" translate="yes" xml:space="preserve">
          <source>The typical use-case for the class is to determine how much time was spent in a slow operation. The simplest example of such a case is for debugging purposes, as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724773f0bbd258d695238b6c09d8ced4c76396bf" translate="yes" xml:space="preserve">
          <source>The typical way one would create splitter handles is to subclass &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; and then reimplement &lt;a href=&quot;qsplitter#createHandle&quot;&gt;QSplitter::createHandle&lt;/a&gt;() to instantiate the custom splitter handle. For example, a minimum &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; subclass might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eeb098b02bb8db37fc0345a5d6e3ca42cce0bfa" translate="yes" xml:space="preserve">
          <source>The typical way to handle context loss scenarios in applications is to check via this function whenever &lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() fails and returns &lt;code&gt;false&lt;/code&gt;. If this function then returns &lt;code&gt;false&lt;/code&gt;, recreate the underlying native OpenGL context by calling &lt;a href=&quot;qopenglcontext#create&quot;&gt;create&lt;/a&gt;(), call &lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() again and then reinitialize all OpenGL resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78896346d2eeb8d9cbc88acbbd64b2b74041a000" translate="yes" xml:space="preserve">
          <source>The underline is drawn depending on the SpellCheckUnderlineStyle theme hint of QPlatformTheme. By default this is mapped to WaveUnderline, on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; it is mapped to DotLine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b59ed5f92cc6e3ddb0746aa2bc5760b3bd235c5" translate="yes" xml:space="preserve">
          <source>The underlying data model is exposed to views and delegates as a hierarchy of tables. If you do not make use of the hierarchy, then the model is a simple table of rows and columns. Each item has a unique index specified by a &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782570e168a0df44d7cbc8785d4ff72b628961ab" translate="yes" xml:space="preserve">
          <source>The underlying native surface has been created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0bed1851e872a48bfc301168bfd0eb3701cc63" translate="yes" xml:space="preserve">
          <source>The underlying native surface will be destroyed immediately after this event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6db793a656398f6b3b94f0f055e2d8525d9416" translate="yes" xml:space="preserve">
          <source>The underlying network interface will not be shut down as long as the session remains open. Note that this feature is dependent on &lt;a href=&quot;qnetworkconfigurationmanager#Capability-enum&quot;&gt;system wide session support&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5877558018d08553d940708fc12f16cc9dc615" translate="yes" xml:space="preserve">
          <source>The underlying platform surface is not created until &lt;a href=&quot;qoffscreensurface#create&quot;&gt;create&lt;/a&gt;() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc49e6669d6e2c726cce5c61b1b3717369f043e" translate="yes" xml:space="preserve">
          <source>The underlying texture will have a size defined by &lt;a href=&quot;qquickpainteditem#textureSize-prop&quot;&gt;textureSize&lt;/a&gt; when set, or the item's size, multiplied by the window's device pixel ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a29bae7cfed024342b5643133327d1d4659bdd" translate="yes" xml:space="preserve">
          <source>The undo stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a57117c3bb1d81a9dbace85190e0fbb6cf6958" translate="yes" xml:space="preserve">
          <source>The undo/redo history is also cleared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5d401e1846b619763c376eb65764d9b035936f" translate="yes" xml:space="preserve">
          <source>The union of all the rectangles is equal to the original region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9010b89dfd6f9dcefa9dd95e430152c9f6e349" translate="yes" xml:space="preserve">
          <source>The unique ID of the app. Defaults to reusing the existing generated manifest's UUID, or generates a new UUID if none is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630deabdc4c24b1b014f6587b61bd0d233e8ca9d" translate="yes" xml:space="preserve">
          <source>The unique ID of the point, if any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f4c3972a71e903103d78f90ea33834a4d4ea33" translate="yes" xml:space="preserve">
          <source>The unique identifiers have not been passed as strings into the &lt;a href=&quot;qaxfactory#QAXFACTORY_EXPORT&quot;&gt;QAXFACTORY_EXPORT&lt;/a&gt;() or &lt;a href=&quot;qaxfactory#QAXFACTORY_DEFAULT&quot;&gt;QAXFACTORY_DEFAULT&lt;/a&gt;() macro.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2388ff0830fb7c7b3fc7890c84071d4f6bc194" translate="yes" xml:space="preserve">
          <source>The unique name/key of the plugin. Each GeoService plugin must have a unique name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433dfa252f67c1b9f3275e14bf39fbcf2e2b484e" translate="yes" xml:space="preserve">
          <source>The unique name/key of the plugin. Each position plugin must have a unique name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a68bc82ab566f5588da91c71918af763eb7d1c7" translate="yes" xml:space="preserve">
          <source>The unit is an enumeration describing the orientation of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858881420b2fb8ea2c2389ff74340142d6e51d27" translate="yes" xml:space="preserve">
          <source>The unit of width is the unit of the x-axis. The minimum width for bars is zero, and negative values are treated as zero. Setting the width to zero means that the width of the bar on the screen is one pixel regardless of the scale of the x-axis. Bars wider than zero are scaled using the x-axis scale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9293e5cff0dfa6d9c31869859f7da69af1b431f" translate="yes" xml:space="preserve">
          <source>The units are determined by the underlying paint device. The size is measured in logical pixels when painting to the screen, and in points (1/72 inch) when painting to a printer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9964c91d051e07eb17d126a4c23345aed9e488e" translate="yes" xml:space="preserve">
          <source>The units used are those currently defined for the layout. To use different units call &lt;a href=&quot;qpagelayout#setUnits&quot;&gt;setUnits&lt;/a&gt;() first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6891a824d451ab9083596d4994fd245aefdb29c9" translate="yes" xml:space="preserve">
          <source>The units used are those currently defined for the layout. To use different units then call &lt;a href=&quot;qpagelayout#setUnits&quot;&gt;setUnits&lt;/a&gt;() first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f3a07dc58bce85dcb034ba19de718fb9020946" translate="yes" xml:space="preserve">
          <source>The up arrow of a &lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; (sort indicator), &lt;a href=&quot;qscrollbar&quot;&gt;QScrollBar&lt;/a&gt; or a &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686220ec04cb395f77d7e9bc1f8ce4fa5eba8580" translate="yes" xml:space="preserve">
          <source>The up arrow will be painted as disabled unless (stepEnabled() &amp;amp; &lt;a href=&quot;qabstractspinbox#StepEnabledFlag-enum&quot;&gt;StepUpEnabled&lt;/a&gt;) != 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b8714f634a3ea4c98818ac8d2f354fc03ee12e" translate="yes" xml:space="preserve">
          <source>The up button and arrow can be styled using the &lt;a href=&quot;#up-button-sub&quot;&gt;::up-button&lt;/a&gt; and &lt;a href=&quot;#up-arrow-sub&quot;&gt;::up-arrow&lt;/a&gt; subcontrols. By default, the up-button is placed in the top right corner in the Padding rectangle of the widget. Without an explicit size, it occupies half the height of its reference rectangle. The up-arrow is placed in the center of the Contents rectangle of the up-button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc78f3f7223cf0782801f741e94b9691f63d93cb" translate="yes" xml:space="preserve">
          <source>The up button of a &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e3f6f97dc5c5804696df7a09597189be9c52eb" translate="yes" xml:space="preserve">
          <source>The updates can be triggered with the &lt;a href=&quot;qgeoroutingmanager#updateRoute&quot;&gt;updateRoute&lt;/a&gt;() function, which makes use of the &lt;a href=&quot;qgeopositioninfo&quot;&gt;QGeoPositionInfo&lt;/a&gt; instances emitted as position updates by &lt;a href=&quot;qgeopositioninfosource&quot;&gt;QGeoPositionInfoSource&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18873c36d2b54aeb50e8c7cc3d0cb651ac9877f0" translate="yes" xml:space="preserve">
          <source>The upload is finished when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed576ccc07366cfb60c17084d864326862b370ba" translate="yes" xml:space="preserve">
          <source>The upper limit for the interval value is determined by the number of milliseconds that can be specified in a signed integer (in practice, this is a period of just over 24 days). The accuracy depends on the underlying operating system. Windows 2000 has 15 millisecond accuracy; other systems that we have tested can handle 1 millisecond intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd2c977a1e9cf3b48b3313f67d1aeb9ac000202" translate="yes" xml:space="preserve">
          <source>The upper limit of the heart rate where the user enhances his anaerobic tolerance while exercising.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65c07f076c4920501d528b9e1f1fd29a9eddf6d" translate="yes" xml:space="preserve">
          <source>The upper limit of the heart rate where the user improves his endurance while exercising.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2caec77584c3812014c4878a8b77f71efc26f93" translate="yes" xml:space="preserve">
          <source>The upper limit of the heart rate where the user maximizes the fat burn while exercising.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc99b3b3076b4b6612c5e124ed7f23c8573d9bc1" translate="yes" xml:space="preserve">
          <source>The upper one of the two line series used to define area series boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a52f65746255387669bae584cf62199456d2b2" translate="yes" xml:space="preserve">
          <source>The url of the document. The &lt;a href=&quot;qtextdocument#loadResource&quot;&gt;loadResource&lt;/a&gt;() function uses this url as the base when loading relative resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c85663df8d12cbf0febb790def2963e4474648e" translate="yes" xml:space="preserve">
          <source>The usage of &lt;a href=&quot;qdirmodel&quot;&gt;QDirModel&lt;/a&gt; is not recommended anymore. The &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; class is a more performant alternative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c6a887af6c2226b56ab587f51e2478f599d09a" translate="yes" xml:space="preserve">
          <source>The usage of the &lt;a href=&quot;qplacecontent#Collection-typedef&quot;&gt;QPlaceContent::Collection&lt;/a&gt; and the conversion between content and its subtypes means that code for handling the mechanics of paging reviews, images and editorials can be easily shared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0285cbd95fd8a185bfad3430a981071fa3ebd9ec" translate="yes" xml:space="preserve">
          <source>The usage of the dummy backend is highlighted via an appropriate warning while building and running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a484d5e5d3ba34764c7af3534bafdc7d37d1dd" translate="yes" xml:space="preserve">
          <source>The use of &lt;a href=&quot;qdbusconnection#send&quot;&gt;QDBusConnection::sessionBus().send&lt;/a&gt;(data-&amp;gt;reply) is needed to explicitly inform the caller that the response will be delayed. In this case, the return value is unimportant; we return an arbitrary value to satisfy the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ae8252dd5a20bfc9b3c8d8490e6f426e9e152d" translate="yes" xml:space="preserve">
          <source>The use of &lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator&lt;/a&gt; gives more control over the creation of a QML object, including allowing it to be created asynchronously using application idle time. The following example shows a simple use of &lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454d67d0ad26e194e11a68cee1c1293817256ce5" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;UseFloat16&lt;/code&gt; is required to encode the stream in Canonical Format, but is not otherwise necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478c7aada0f350ed262acf018c08c08088aad03f" translate="yes" xml:space="preserve">
          <source>The use of animations involving gradient stops may not give the desired result. An alternative way to animate gradients is to use pre-generated images or SVG drawings containing gradients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5f584442deba08794ec8073592d14068921ac8" translate="yes" xml:space="preserve">
          <source>The use of multi-process has the following benefits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c2dc3c6a0ee067cd963ec58b697c297860eacc" translate="yes" xml:space="preserve">
          <source>The use of rich text in a label widget can introduce some problems to the layout of its parent widget. Problems occur due to the way rich text is handled by Qt's layout managers when the label is word wrapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80fd25f9384652cbda6333ae2cd7e768db0cad4" translate="yes" xml:space="preserve">
          <source>The use of signals and slots in the model/view architecture means that changes to the model can be propagated to all the attached views, ensuring that we can always access the same data regardless of the view being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c4a6e3481804607650b0c51545a7b28e7f2eed" translate="yes" xml:space="preserve">
          <source>The use of widget style sheets is described in more detail in the &lt;a href=&quot;stylesheet#&quot;&gt;Qt Style Sheets&lt;/a&gt; document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0690117aba74be9556de9c5783d80de4033008ea" translate="yes" xml:space="preserve">
          <source>The useful value range is 0 - 1.0. The lower the value, the faster it comes to rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3211c50cb4e8f5acacc6a56dc03f464945a71489" translate="yes" xml:space="preserve">
          <source>The useful value range is 0 - 5.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0107ad9e42237ba6b9d0765d584cbf8475c0346c" translate="yes" xml:space="preserve">
          <source>The user application name of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b330a5e294f32adcae8d1ca5146a028cc610f8e" translate="yes" xml:space="preserve">
          <source>The user can choose a scaling factor from the control panel or via context menu. This works by making the functions for querying the system metrics return different values for standard font sizes, sizes of window borders, and so on. It does not perform any actual scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19b3b17550239c6367555067927c1fae5b1627a" translate="yes" xml:space="preserve">
          <source>The user can cycle through three separate states. This value was added in Qt 5.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9292e7c0057e31be44f4cfae6b2cb180e66f9225" translate="yes" xml:space="preserve">
          <source>The user can drop one dock widget &quot;on top&quot; of another. The two widgets are stacked and a tab bar appears for selecting which one is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0586d02780971d5c8d52ee13173772e2bc03046d" translate="yes" xml:space="preserve">
          <source>The user can hide the splash screen by clicking on it with the mouse. Since the splash screen is typically displayed before the event loop has started running, it is necessary to periodically call &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QApplication::processEvents&lt;/a&gt;() to receive the mouse clicks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b830b58043f860909ad6f9f5c3b67a8654fc1e3" translate="yes" xml:space="preserve">
          <source>The user can interact with the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4aba2068e5f632d0e73b8fbf2f71d2af9cd1cc3" translate="yes" xml:space="preserve">
          <source>The user can only open the menu within the inner rectangle. In this case, they've opened the menu on the edge of the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;, but there would not be enough room to display the entire menu centered at the cursor position, so it was moved to the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c80b8f79f9d5b9097669d43f71efec965e16392" translate="yes" xml:space="preserve">
          <source>The user can resize the section. The section can also be resized programmatically using &lt;a href=&quot;qheaderview#resizeSection&quot;&gt;resizeSection&lt;/a&gt;(). The section size defaults to &lt;a href=&quot;qheaderview#defaultSectionSize-prop&quot;&gt;defaultSectionSize&lt;/a&gt;. (See also &lt;a href=&quot;qheaderview#cascadingSectionResizes-prop&quot;&gt;cascadingSectionResizes&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c77087f90958145bb2e584a6f23bc679531868a" translate="yes" xml:space="preserve">
          <source>The user can store &lt;a href=&quot;qcolordialog#customCount&quot;&gt;customCount&lt;/a&gt;() different custom colors. The custom colors are shared by all color dialogs, and remembered during the execution of the program. Use &lt;a href=&quot;qcolordialog#setCustomColor&quot;&gt;setCustomColor&lt;/a&gt;() to set the custom colors, and use &lt;a href=&quot;qcolordialog#customColor&quot;&gt;customColor&lt;/a&gt;() to get them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd61fee026eaf9477c14bc5c4c326e47a0a3b906" translate="yes" xml:space="preserve">
          <source>The user canceled the download.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d860ce57b36d0f2d585c49a0e8b5ec028405ea7" translate="yes" xml:space="preserve">
          <source>The user cannot resize the section. The section can only be resized programmatically using &lt;a href=&quot;qheaderview#resizeSection&quot;&gt;resizeSection&lt;/a&gt;(). The section size defaults to &lt;a href=&quot;qheaderview#defaultSectionSize-prop&quot;&gt;defaultSectionSize&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2c6d04c2845d04a5e1d8c8be5faf7c2551b687" translate="yes" xml:space="preserve">
          <source>The user changed his widget sizes (&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3b413f2d80a123fd2df944563251091aa97654" translate="yes" xml:space="preserve">
          <source>The user clicks a widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591ecb58bb276f717c591b6a7379301f0d444be0" translate="yes" xml:space="preserve">
          <source>The user enters some information such as the starting point of the route, some waypoints and the destination. All of these locations are waypoints so the locations from start to finish will be entered as a sequence of waypoints. Then other query properties can be set that may be specific to this trip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02c304133bc2883a383b476cd43d740d8d09835" translate="yes" xml:space="preserve">
          <source>The user guarantees that the string components are valid for a QName. In particular, the local name, and the prefix (if present), must be valid &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCNames&lt;/a&gt;. The function &lt;a href=&quot;qxmlname#isNCName&quot;&gt;isNCName&lt;/a&gt;() can be used to test validity of these names. The namespace URI should be an absolute URI. &lt;a href=&quot;qurl#isRelative&quot;&gt;QUrl::isRelative&lt;/a&gt;() can be used to test whether the namespace URI is relative or absolute. Finally, providing a prefix is not valid when no namespace URI is provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b31fa28fdf0b1625820440677c51ca90437fee2" translate="yes" xml:space="preserve">
          <source>The user has denied permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f45bb64aaea83efa514267633c262c921cc629" translate="yes" xml:space="preserve">
          <source>The user has granted permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bcf00f1791ade5e7176730c75834d4163465bc" translate="yes" xml:space="preserve">
          <source>The user has to be aware that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2210b1d4b007d50843026489de09d08eb37fc9f5" translate="yes" xml:space="preserve">
          <source>The user info and host are separated by a '@', and the host and port are separated by a ':'. If the user info is empty, the '@' must be omitted; although a stray ':' is permitted if the port is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720dfbf6d7039e617573d6324979ac1773483710" translate="yes" xml:space="preserve">
          <source>The user info consists of a user name and optionally a password, separated by a ':'. If the password is empty, the colon must be omitted. The following example shows a valid user info string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb013cd556eb960d44a1de6d646f295c888c88bc" translate="yes" xml:space="preserve">
          <source>The user info, path and fragment are all converted to UTF-8, and all non-ASCII characters are then percent encoded. The host name is encoded using Punycode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813c29b4e815943cd4a4d85c5c6c53ba3574725c" translate="yes" xml:space="preserve">
          <source>The user input resolution options define how &lt;a href=&quot;qurl#fromUserInput&quot;&gt;fromUserInput&lt;/a&gt;() should interpret strings that could either be a relative path or the short form of a HTTP URL. For instance &lt;code&gt;file.pl&lt;/code&gt; can be either a local file or the URL &lt;code&gt;http://file.pl&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93f2619dac560b2556310a670522ef18f15a27f" translate="yes" xml:space="preserve">
          <source>The user interface, which provides controls for handwriting mode and the visibility of the keyboard, is application-specific. One suggested implementation is to use a floating button on the handwriting panel, where single click toggles the handwriting mode (changes the &lt;a href=&quot;qml-qtquick-virtualkeyboard-handwritinginputpanel#active-prop&quot;&gt;active&lt;/a&gt; property), and double-click toggles the visibility of the keyboard (changes the &lt;a href=&quot;qml-qtquick-virtualkeyboard-handwritinginputpanel#available-prop&quot;&gt;available&lt;/a&gt; property).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec38d07c5408940b41f0315a1fde4f2508f485ea" translate="yes" xml:space="preserve">
          <source>The user is closing a branch of items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308f60afee714a5c96fc3fca230ee03ec10a49fa" translate="yes" xml:space="preserve">
          <source>The user is dragging items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fe2bc776471f829c3b060083c909f763656725" translate="yes" xml:space="preserve">
          <source>The user is editing an item in a widget editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfdb0164f9b8b6a5dd71be471186f224318842b" translate="yes" xml:space="preserve">
          <source>The user is opening a branch of items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea82366c4c1130d4f52b50beba53f28c4cf4a4f" translate="yes" xml:space="preserve">
          <source>The user is responsible for deleting the returned reply object, although this can be done in the slot connected to &lt;a href=&quot;qgeocodingmanager#finished&quot;&gt;QGeoCodingManager::finished&lt;/a&gt;(), &lt;a href=&quot;qgeocodingmanager#error&quot;&gt;QGeoCodingManager::error&lt;/a&gt;(), &lt;a href=&quot;qgeocodereply#finished&quot;&gt;QGeoCodeReply::finished&lt;/a&gt;() or &lt;a href=&quot;qgeocodereply#error&quot;&gt;QGeoCodeReply::error&lt;/a&gt;() with &lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495519c9ba683aaa7e28bf0ad627832a09c9ef09" translate="yes" xml:space="preserve">
          <source>The user is responsible for deleting the returned reply object, although this can be done in the slot connected to &lt;a href=&quot;qgeocodingmanagerengine#finished&quot;&gt;QGeoCodingManagerEngine::finished&lt;/a&gt;(), &lt;a href=&quot;qgeocodingmanagerengine#error&quot;&gt;QGeoCodingManagerEngine::error&lt;/a&gt;(), &lt;a href=&quot;qgeocodereply#finished&quot;&gt;QGeoCodeReply::finished&lt;/a&gt;() or &lt;a href=&quot;qgeocodereply#error&quot;&gt;QGeoCodeReply::error&lt;/a&gt;() with &lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8712e431e79e2adfb9c7d5c5c1aef1c76bc053" translate="yes" xml:space="preserve">
          <source>The user is responsible for deleting the returned reply object, although this can be done in the slot connected to &lt;a href=&quot;qgeoroutingmanager#finished&quot;&gt;QGeoRoutingManager::finished&lt;/a&gt;(), &lt;a href=&quot;qgeoroutingmanager#error&quot;&gt;QGeoRoutingManager::error&lt;/a&gt;(), &lt;a href=&quot;qgeoroutereply#finished&quot;&gt;QGeoRouteReply::finished&lt;/a&gt;() or &lt;a href=&quot;qgeoroutereply#error&quot;&gt;QGeoRouteReply::error&lt;/a&gt;() with &lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57782eafcd63320fe46b007087d95ef7d1a9ff49" translate="yes" xml:space="preserve">
          <source>The user is responsible for deleting the returned reply object, although this can be done in the slot connected to &lt;a href=&quot;qgeoroutingmanagerengine#finished&quot;&gt;QGeoRoutingManagerEngine::finished&lt;/a&gt;(), &lt;a href=&quot;qgeoroutingmanagerengine#error&quot;&gt;QGeoRoutingManagerEngine::error&lt;/a&gt;(), &lt;a href=&quot;qgeoroutereply#finished&quot;&gt;QGeoRouteReply::finished&lt;/a&gt;() or &lt;a href=&quot;qgeoroutereply#error&quot;&gt;QGeoRouteReply::error&lt;/a&gt;() with &lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b1955ed5f9555c393bfff7749b352c98e491c2" translate="yes" xml:space="preserve">
          <source>The user is selecting items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6354783dafead8c6bc8513ee771d79abb6b7ac7d" translate="yes" xml:space="preserve">
          <source>The user moved the input device (e.g. &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::MouseMove&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::GraphicsSceneMouseMove&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchUpdate&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2118fc1e15bc7c56ba32cdc9d978b38db79cba8e" translate="yes" xml:space="preserve">
          <source>The user moves the focus to a window, and the application must determine which widget within the window should get the focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896f883b2c405837913b0016ec114fff5a5098f4" translate="yes" xml:space="preserve">
          <source>The user must click the &lt;b&gt;OK&lt;/b&gt; button to dismiss the message box. The rest of the GUI is blocked until the message box is dismissed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f989f5d1cb91b04fce0c86038ee49d79fe7430" translate="yes" xml:space="preserve">
          <source>The user must click the &lt;b&gt;OK&lt;/b&gt; button to dismiss the message dialog. A modal message dialog blocks the rest of the GUI until the message is dismissed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6fcd7d052b65479c776ed1f75bca87b313abff" translate="yes" xml:space="preserve">
          <source>The user must override this method and to return a binder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574df9610c17e3a6f07f14d56967a018765efc5c" translate="yes" xml:space="preserve">
          <source>The user no longer touches the input device, but scrolling continues due to scroll momentum. This value was introduced in Qt 5.12.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf17f57196678ec9621a306911eea2f0ce51eb4" translate="yes" xml:space="preserve">
          <source>The user pressed the input device (e.g. &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::MouseButtonPress&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::GraphicsSceneMousePress&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchBegin&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9bfaa7e1673a0b4bad82d4c8acaaa005933b959" translate="yes" xml:space="preserve">
          <source>The user presses &lt;b&gt;Tab&lt;/b&gt; (or &lt;b&gt;Shift+Tab&lt;/b&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e61b2eaccaceb3c8bae9fc6137957c722ec84ea" translate="yes" xml:space="preserve">
          <source>The user presses a keyboard shortcut.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6a79a397b862a4c2e93e60e9711ddd7c25ec4f" translate="yes" xml:space="preserve">
          <source>The user released the input device (e.g. &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::MouseButtonRelease&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::GraphicsSceneMouseRelease&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchEnd&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cec0a15e34ae14707b0a61c8ebdf12129307357" translate="yes" xml:space="preserve">
          <source>The user requests help for a graphics scene (&lt;a href=&quot;qhelpevent&quot;&gt;QHelpEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac4032b28c769d91100e175476256b3ef6e44aa" translate="yes" xml:space="preserve">
          <source>The user selection is handled by the &lt;a href=&quot;qml-qtquick-virtualkeyboard-selectionlistmodel#selectItem-method&quot;&gt;selectItem()&lt;/a&gt; method. The view should be invoke this method when the user selects an item from the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66eaa3dd6c838110c54b9bf55024272c68319cbf" translate="yes" xml:space="preserve">
          <source>The user typed a label's buddy shortcut</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cc949cafcc0dc9b6ef66b8b51ac9a29e0e4894" translate="yes" xml:space="preserve">
          <source>The user uses the mouse wheel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34611c16109d870d992b6c5be43a917830d01b79" translate="yes" xml:space="preserve">
          <source>The user who contributed the editorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e22d110c4a87d1c706f5b09094a07254091826c" translate="yes" xml:space="preserve">
          <source>The user who contributed the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43dcb4998110edd128fa15c6e294474a1e9259fb" translate="yes" xml:space="preserve">
          <source>The user who contributed the review.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a3cbcf48983d811a6ad0808121787d862c7a06" translate="yes" xml:space="preserve">
          <source>The user will not be able to select a date that is before the currently set minimum date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f567a63c17d3897673cb14eff2e177dec7b0f02" translate="yes" xml:space="preserve">
          <source>The user will not be able to select a date which is after the currently set maximum date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2d4da6b8f9c112c18f4ab7d3f198df7dd7fe5f" translate="yes" xml:space="preserve">
          <source>The user will then be able to choose a scale from 1% to 1000% or select &quot;Auto&quot; to leave it up to the application to choose. Your code must then interpret the spin box value of 0 as a request from the user to scale the image to fit inside the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31358188775da8c679b80f120738bb563dccb3c3" translate="yes" xml:space="preserve">
          <source>The user's desktop directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69483acb9b837b1ee6a04b0c06dcdde79b8796b5" translate="yes" xml:space="preserve">
          <source>The user's desktop settings control whether certain executable file types are opened for browsing, or if they are executed instead. Some desktop environments are configured to prevent users from executing files obtained from non-local URLs, or to ask the user's permission before doing so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c286cbc4fe30e9e4733192e079307d2943d0920b" translate="yes" xml:space="preserve">
          <source>The user's finger has now released a touch point, button or stylus which was pressed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350ca5d9aeef16e7c17b9cd7602565c2c47babb9" translate="yes" xml:space="preserve">
          <source>The user's finger is now pressing a touchscreen, button or stylus which was not pressed already</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157dc4350dc3e34746630d122d73cc061664152f" translate="yes" xml:space="preserve">
          <source>The user's home directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0c36a0d949f9008775425905192f1ed66ad726" translate="yes" xml:space="preserve">
          <source>The user's home directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a938b7b6ded01d172af589af750c62e599855871" translate="yes" xml:space="preserve">
          <source>The user-agent string sent with HTTP to identify the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c98d3a13cc34ab38e7c0b7e5d64eac78682bc1" translate="yes" xml:space="preserve">
          <source>The users should be asked if they want to leave the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f27820434f731125e1931f269963c9229d686fe" translate="yes" xml:space="preserve">
          <source>The usual approach when one reimplements &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; virtual functions is to do work on elements that are different from the super class; for all other elements, you can simply use the super class implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e60c4906ce0de5ea8e525752ca08c56cf7f9fe3" translate="yes" xml:space="preserve">
          <source>The usual behavior is to transfer focus only when an item is clicked. Often a tap on a touchpad is interpreted as equivalent to a mouse click by the operating system, generating a synthesized click event in response. However, at least on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; you can configure this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd7adae985237d337c880980282874014d5b7c4" translate="yes" xml:space="preserve">
          <source>The utilities need to be in a standard location, such as &lt;code&gt;/bin&lt;/code&gt; or &lt;code&gt;/usr/bin&lt;/code&gt;. Alternatively, you can use the &lt;code&gt;~/.ssh/environment&lt;/code&gt; file to set variables for remote commands, such as &lt;code&gt;PATH&lt;/code&gt;. In addition, you must set &lt;code&gt;enable PermitUserEnvironment&lt;/code&gt; in the SSH Daemon configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac88a2b6736e4b1d3d756a699d08b3f2502fd85" translate="yes" xml:space="preserve">
          <source>The valid &lt;code&gt;progress&lt;/code&gt; value is 0.0 to 1.0, setting values less than 0 will be converted to 0, setting values great than 1 will be converted to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38e54c4197d8485a55dd2f535e6ce975e1f8d37" translate="yes" xml:space="preserve">
          <source>The valid keys can be retrieved using the &lt;a href=&quot;qstylefactory#keys&quot;&gt;keys&lt;/a&gt;() function. Typically they include &quot;windows&quot; and &quot;fusion&quot;. Depending on the platform, &quot;windowsvista&quot; and &quot;macintosh&quot; may be available. Note that keys are case insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36306c025446b0de07f4c7723ea1e39b17ff1ff" translate="yes" xml:space="preserve">
          <source>The valid range of opacity is from 1.0 (completely opaque) to 0.0 (completely transparent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d214dd1ce24877fea597ae45e3fa84eda89d2184" translate="yes" xml:space="preserve">
          <source>The valid values are described by the &lt;a href=&quot;qslider#TickPosition-enum&quot;&gt;QSlider::TickPosition&lt;/a&gt; enum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dccb26544ae6d6c5c81745de5cbab9d0193e081" translate="yes" xml:space="preserve">
          <source>The valid values for &lt;b&gt;styleData.type&lt;/b&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca998fe7d3bc535b01fca2426928a1486b9d4848" translate="yes" xml:space="preserve">
          <source>The valid values for &lt;code&gt;horizontalAlignment&lt;/code&gt; are &lt;code&gt;Image.AlignLeft&lt;/code&gt;, &lt;code&gt;Image.AlignRight&lt;/code&gt; and &lt;code&gt;Image.AlignHCenter&lt;/code&gt;. The valid values for &lt;code&gt;verticalAlignment&lt;/code&gt; are &lt;code&gt;Image.AlignTop&lt;/code&gt;, &lt;code&gt;Image.AlignBottom&lt;/code&gt; and &lt;code&gt;Image.AlignVCenter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c6f6d519e177b937c6da5349214fd849338441" translate="yes" xml:space="preserve">
          <source>The valid values for &lt;code&gt;horizontalAlignment&lt;/code&gt; are &lt;code&gt;Text.AlignLeft&lt;/code&gt;, &lt;code&gt;Text.AlignRight&lt;/code&gt;, &lt;code&gt;Text.AlignHCenter&lt;/code&gt; and &lt;code&gt;Text.AlignJustify&lt;/code&gt;. The valid values for &lt;code&gt;verticalAlignment&lt;/code&gt; are &lt;code&gt;Text.AlignTop&lt;/code&gt;, &lt;code&gt;Text.AlignBottom&lt;/code&gt; and &lt;code&gt;Text.AlignVCenter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678ec85221a60af49c8c21b9ec80dfed6af452f9" translate="yes" xml:space="preserve">
          <source>The valid values for &lt;code&gt;horizontalAlignment&lt;/code&gt; are &lt;code&gt;TextInput.AlignLeft&lt;/code&gt;, &lt;code&gt;TextInput.AlignRight&lt;/code&gt; and &lt;code&gt;TextInput.AlignHCenter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe2fb06e03b1a0cc4506fbe69b8f44d02fbd22a" translate="yes" xml:space="preserve">
          <source>The valid values for &lt;code&gt;horizontalAlignment&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498f0ba9e1f116a75b6940ac25824f49d8e0ed0c" translate="yes" xml:space="preserve">
          <source>The valid values for &lt;code&gt;horizontalItemAlignment&lt;/code&gt; are, &lt;code&gt;Grid.AlignLeft&lt;/code&gt;, &lt;code&gt;Grid.AlignRight&lt;/code&gt; and &lt;code&gt;Grid.AlignHCenter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5c86660f4acf1b2d21b156e04c70ae4be9d06e" translate="yes" xml:space="preserve">
          <source>The valid values for &lt;code&gt;verticalAlignment&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209bf7c32d71728a2f96ed4f459a21b2d9659e60" translate="yes" xml:space="preserve">
          <source>The valid values for &lt;code&gt;verticalItemAlignment&lt;/code&gt; are &lt;code&gt;Grid.AlignTop&lt;/code&gt;, &lt;code&gt;Grid.AlignBottom&lt;/code&gt; and &lt;code&gt;Grid.AlignVCenter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483bea1d47b47aaa5ca649aa0ea947f141b3f57b" translate="yes" xml:space="preserve">
          <source>The valid values range depends on the parameter type. For &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;WhiteBalancePreset&lt;/a&gt; the value should be one of &lt;a href=&quot;qcameraimageprocessing#WhiteBalanceMode-enum&quot;&gt;QCameraImageProcessing::WhiteBalanceMode&lt;/a&gt; values; for Contrast, Saturation, Brightness, Sharpening and Denoising the value should be in [0..1.0] range with invalid &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; value indicating the default parameter value; for &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;ContrastAdjustment&lt;/a&gt;, &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;SaturationAdjustment&lt;/a&gt;, &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;BrightnessAdjustment&lt;/a&gt;, &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;SharpeningAdjustment&lt;/a&gt; and &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;DenoisingAdjustment&lt;/a&gt; the value should be in [-1.0..1.0] range with default 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb87bb6b75d7039894a091fd5692fe1f38d1a1e7" translate="yes" xml:space="preserve">
          <source>The validity of a &lt;a href=&quot;qtextframeformat&quot;&gt;QTextFrameFormat&lt;/a&gt; object can be determined with the &lt;a href=&quot;qtextframeformat#isValid&quot;&gt;isValid&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9bc2cc7a5a2371d477f94ec1a3a54cc461c501" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;0.0&lt;/code&gt; indicates that the labels should be drawn next to the 0-angle angular axis grid line. The value &lt;code&gt;1.0&lt;/code&gt; indicates that the labels are drawn in their usual place at the edge of the graph background. Defaults to &lt;code&gt;1.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703565388f0ad7aa30cccba73ac5d450a1cfcd47" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;1.0&lt;/code&gt; means that the bars are as wide as they are deep, whereas &lt;code&gt;0.5&lt;/code&gt; makes them twice as deep as they are wide. Preset to &lt;code&gt;1.0&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030cfe8c5b8e9ca39446efb46f6a9c33baa7499e" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;true&lt;/code&gt; indicates that it's now possible for clients to start using the seat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aacc486db5e9684c310a75654438c3c4b31ea62" translate="yes" xml:space="preserve">
          <source>The value bar is &lt;code&gt;28&lt;/code&gt; pixels wide, so we give the same width to our tickmarks so that they cover the width of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bdd0aef4fa5c1314a61ef947c7f67936f10e13" translate="yes" xml:space="preserve">
          <source>The value being displayed will vary from 0 to 150 periodically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1af0bb5617b2adcbf3a97b57e31ffadf4dbb0e8" translate="yes" xml:space="preserve">
          <source>The value can be &lt;code&gt;&quot;Normal&quot;&lt;/code&gt; or &lt;code&gt;&quot;Dense&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7017f2d0f45481e0469535d4aef047f81ca120e" translate="yes" xml:space="preserve">
          <source>The value can be any combination of the values in the &lt;a href=&quot;qtextedit#AutoFormattingFlag-enum&quot;&gt;AutoFormattingFlag&lt;/a&gt; enum. The default is &lt;a href=&quot;qtextedit#AutoFormattingFlag-enum&quot;&gt;AutoNone&lt;/a&gt;. Choose &lt;a href=&quot;qtextedit#AutoFormattingFlag-enum&quot;&gt;AutoAll&lt;/a&gt; to enable all automatic formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304a370452fbac8ec01ee8fa2b78ce9a7ed5af9a" translate="yes" xml:space="preserve">
          <source>The value can be changed while the media is playing, in which case it will update the remaining loops to the new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e52625b9fd2f87187820cce3b87fa6cf068bdc" translate="yes" xml:space="preserve">
          <source>The value can be changed while the sound effect is playing, in which case it will update the remaining loops to the new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d147cd86d4c1bce63d3510444b2bd68c5851d9db" translate="yes" xml:space="preserve">
          <source>The value can be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be5400518a36e72cba12838faa581656a831e7d" translate="yes" xml:space="preserve">
          <source>The value for this delegate from the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd535192617ddbfd6d01c0e9a721ad96683a4e99" translate="yes" xml:space="preserve">
          <source>The value grows cosinusoidally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67794accd6cbc1c9db3e357b8a481bedbfb7dc43" translate="yes" xml:space="preserve">
          <source>The value grows linearly (e.g., if the duration is 1000 ms, the value at time 500 ms is 0.5).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f548b0447d1b21da56e0551f1776d808ada07463" translate="yes" xml:space="preserve">
          <source>The value grows sinusoidally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d87da09814a26636bc0e0287ff1f8519467477" translate="yes" xml:space="preserve">
          <source>The value has to be greater than 0 and cannot equal 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203ed8e26bc9a50a298722f7cea3a47e0e67d93a" translate="yes" xml:space="preserve">
          <source>The value is 1 by default: the animation will be played once and then stop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0945e90675ccf521893833500884d737c5e42cf5" translate="yes" xml:space="preserve">
          <source>The value is 1 by default: the animation will play through once and then stop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c173a33c117117439456325d20bfbf060548cb03" translate="yes" xml:space="preserve">
          <source>The value is 1.0 by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04aaa535fbcc5859a1a2704f03fa3c141dc70bf" translate="yes" xml:space="preserve">
          <source>The value is a BLOB of data, stored exactly as it was input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04817117eea731b9994e55a6f58cdf44a14aa28" translate="yes" xml:space="preserve">
          <source>The value is a bit-wise combination of flags or &lt;code&gt;Qt.ImhNone&lt;/code&gt; if no hints are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2040fb4df3c00d04a701b754a88beb6792bdeaf3" translate="yes" xml:space="preserve">
          <source>The value is a bit-wise combination of flags or Qt.ImhNone if no hints are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc75c7268b579a7dad7c1a161d878c22d978594" translate="yes" xml:space="preserve">
          <source>The value is a bit-wise combination of flags, or &lt;code&gt;Qt.ImhNone&lt;/code&gt; if no hints are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7d4049a87966a3b33cffb8d2413f86552c06e3" translate="yes" xml:space="preserve">
          <source>The value is a bit-wise combination of flags, or Qt.ImhNone if no hints are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6d5aa5dcc737ac32519e270246126ca9d9cb8f" translate="yes" xml:space="preserve">
          <source>The value is calculated based on the content children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53ba72119a36cb85aa502304909a266d0a623c7" translate="yes" xml:space="preserve">
          <source>The value is controlled by the platform plugin in use and may also depend on the graphics drivers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb981c90bbfe665d74b8a9b8931dd061ad1b3925" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;background ? background.implicitHeight : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ed15640c9fe75f0a3bfb164e653403fbd6dc70" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;background ? background.implicitWidth : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28154888250e42947872ff83065175e685520db4" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;footer &amp;amp;&amp;amp; footer.visible ? footer.implicitHeight : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed11ed8f3287b46496b482d057eb9b29446f14a" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;footer &amp;amp;&amp;amp; footer.visible ? footer.implicitWidth : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d9602206c7146819d7414f7e0df0d26515c546" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;handle ? handle.implicitHeight : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d05d6a57d4d154124896bf41d75ce105fbe8566" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;handle ? handle.implicitWidth : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26041d5991ebc6312fb5ad205958479481547fe9" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;header &amp;amp;&amp;amp; header.visible ? header.implicitHeight : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5a90a5d34bdf947bf3f0488e5b001c75c10c0e" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;header &amp;amp;&amp;amp; header.visible ? header.implicitWidth : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abc831fbcf77f5fa481ede5513638487295ed44" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;indicator ? indicator.implicitHeight : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e763670c37ea50b123d12793e8b9bdd8e479ba80" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;indicator ? indicator.implicitWidth : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299acc1445bb35ee7767e2dd716c40495363fd3f" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;label ? label.implicitHeight : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09f0a6837430a792a6bd46eefd40bed671fe260" translate="yes" xml:space="preserve">
          <source>The value is equal to &lt;code&gt;label ? label.implicitWidth : 0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c938ccacd2c65526260993fe43f0b87b89495f2" translate="yes" xml:space="preserve">
          <source>The value is illegal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79b327d4e1001d6b24c94e063c97117cbdfe8d0" translate="yes" xml:space="preserve">
          <source>The value is not assigned to any character in version 8.0 of Unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411720087ef746e288e2f05414ea066eb17de5da" translate="yes" xml:space="preserve">
          <source>The value is one of &lt;a href=&quot;qabstract3daxis#AxisOrientation-enum&quot;&gt;AxisOrientation&lt;/a&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2090875c573bfadfb0dae43b71ee3d1ed7675e5" translate="yes" xml:space="preserve">
          <source>The value is one of &lt;a href=&quot;qabstract3daxis#AxisType-enum&quot;&gt;AxisType&lt;/a&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da1c1605e2ffefbe783b7426381ed59073f0eb2" translate="yes" xml:space="preserve">
          <source>The value is optional and contains the size in bytes of the object that the URI refers to. It may be used by the device to determine whether it can accommodate the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d618d99e9c5ef83db12df1392f7e7cf6504de542" translate="yes" xml:space="preserve">
          <source>The value is relative to the chart rectangle, so that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c033927067315e95ea5e7ec465d6addbf38d491" translate="yes" xml:space="preserve">
          <source>The value is relative to the contents rect in the &lt;a href=&quot;stylesheet-customizing#the-box-model&quot;&gt;box model&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb1649faa4d6c0e5fd2ab71a48ab46c6821fde3" translate="yes" xml:space="preserve">
          <source>The value is reported for both the x and y axis separately by using a &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d898b9490ba0dcf5a3b449afb94ecd5c8919b8" translate="yes" xml:space="preserve">
          <source>The value is taken from the first item in the item model that matches each row/column combination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20da44291f992870702c815c90c513e3f36d00a" translate="yes" xml:space="preserve">
          <source>The value is taken from the last item in the item model that matches each row/column combination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d333a67df3a7b143f6e78a0a7adc00e490c818e6" translate="yes" xml:space="preserve">
          <source>The value is the current playback position, expressed in milliseconds since the beginning of the media. Periodically changes in the position will be indicated with the signal &lt;a href=&quot;qmediaplayer#positionChanged&quot;&gt;positionChanged&lt;/a&gt;(), the interval between updates can be set with &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;'s method &lt;a href=&quot;qmediaobject#notifyInterval-prop&quot;&gt;setNotifyInterval&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6961d1fcae57c36c6ef17949fb292aff3ba769" translate="yes" xml:space="preserve">
          <source>The value is the orientation angle (clockwise, in steps of 90 degrees) of the camera sensor in relation to the display in its natural orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e384814c6864d6e190314c89c4d40b16e42924e3" translate="yes" xml:space="preserve">
          <source>The value is the total playback time in milliseconds of the current media. The value may change across the life time of the &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; object and may not be available when initial playback begins, connect to the &lt;a href=&quot;qmediaplayer#durationChanged&quot;&gt;durationChanged&lt;/a&gt;() signal to receive status notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a70aeb3b835ede81221182e92a5e7984bbd24d" translate="yes" xml:space="preserve">
          <source>The value is typically the return value from vkCreateInstance() (when creating a new Vulkan instance instead of adopting an existing one), but may also be &lt;code&gt;VK_NOT_READY&lt;/code&gt; if the platform plugin does not support Vulkan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f257a5935d070efe00e68257ebf34582ae3c347" translate="yes" xml:space="preserve">
          <source>The value is undefined. This is usually returned as an error condition, when trying to read an out of bounds value in an array or a non existent key in an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e113c4a8c1f9a88762018d9a8346111e7135c16c" translate="yes" xml:space="preserve">
          <source>The value is used by the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; class when it is constructed using the empty constructor. This saves having to repeat this information each time a &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c4aaf3b9415c854bccf32e2e15324cd32ffead" translate="yes" xml:space="preserve">
          <source>The value is written to the local service database. If the contents of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3537cfc23241999d34572b8c5ef038a57c2bbb" translate="yes" xml:space="preserve">
          <source>The value must be a &lt;code&gt;file&lt;/code&gt;: or &lt;code&gt;qrc&lt;/code&gt;: URL, or a relative URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d2e674e79ae76bcabd00fb743e0910cdb31b58" translate="yes" xml:space="preserve">
          <source>The value must be between &lt;code&gt;0.0f&lt;/code&gt; and &lt;code&gt;1.0f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03e3fe1eb2ef4c116ef9f86a142ea6a4e25a2f9" translate="yes" xml:space="preserve">
          <source>The value must be between &lt;code&gt;0.0f&lt;/code&gt; and &lt;code&gt;10.0f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419ba3429f66d50788a136e1ccd84f3cff288834" translate="yes" xml:space="preserve">
          <source>The value must be in the range from &lt;code&gt;-271820&lt;/code&gt; to &lt;code&gt;275759&lt;/code&gt;. The default value is the current year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42d44271b5375ab6e5232f35c866687d8c2495b" translate="yes" xml:space="preserve">
          <source>The value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adab2408bf95239fee57ebdd6d86f2f36e800af1" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;qgeoroutesegment#nextRouteSegment&quot;&gt;nextRouteSegment&lt;/a&gt;() is not considered in the comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4f2f10ceed2c7ae94232d73cca2dd319d37e31" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;qml-qtquick-item#opacity-prop&quot;&gt;Item::opacity&lt;/a&gt; is updated after the animation has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c06b7b5c473cc8493581eeb8469495abbdbb64" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;qml-qtquick-item#rotation-prop&quot;&gt;Item::rotation&lt;/a&gt; is updated after the animation has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4df7f768ba17c2205fa1703e4da68627adc82b" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;qml-qtquick-item#scale-prop&quot;&gt;Item::scale&lt;/a&gt; is updated after the animation has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59737ef03b98159f03d55a1842176bd8c0c1ebe6" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;Item::x&lt;/a&gt; is updated after the animation has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0945a12a52366b50d2376c04a5d754e03be0c984" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;Item::y&lt;/a&gt; is updated after the animation has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdf070785b998f10473367a81c496c85f131954" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;0.0&lt;/code&gt; indicates automatic scaling according to axis ranges. Defaults to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac46cbbc4d538eaace4779fba11e6e6daec4afbe" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; is undefined in QML in the majority of contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee920f8790ba2ca4d6a7b520376465780072876" translate="yes" xml:space="preserve">
          <source>The value of a configuration variable can be set using either '=' or '+='. The difference is that '=' overrides the previous value, while '+=' adds a new value to the current one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1d265a31241e847ba40d9c71bfb10c28b19929" translate="yes" xml:space="preserve">
          <source>The value of a property of an object instance may be specified in two separate ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0395280a6b166e665ff87963df6a40b3d8df84d9" translate="yes" xml:space="preserve">
          <source>The value of altitude in meters above sea level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02e5c25f77fc9ea4f913ba3f67b1f1f74c4f837" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;someNumber&lt;/code&gt; property can be set and read using &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt;, or &lt;a href=&quot;qobject#setProperty&quot;&gt;QObject::setProperty&lt;/a&gt;() and &lt;a href=&quot;qobject#property&quot;&gt;QObject::property&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa94417609fbd732285cf20a879d11f2da9c17f3" translate="yes" xml:space="preserve">
          <source>The value of the Accept-Language HTTP request-header field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff73bac773d3672871f33d540bd5d36e47319c08" translate="yes" xml:space="preserve">
          <source>The value of the QML property defining the uniform is updated after the animation has finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ed8c6af4614a4a8d99a27d46932d661c32dc49" translate="yes" xml:space="preserve">
          <source>The value of the QML property will be updated after the animation has finished. The property is not updated while the animation is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8788afd492d024581b801a2f40050b925c8975a" translate="yes" xml:space="preserve">
          <source>The value of the attribute appears in the Widget box and can be used to strip away namespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a942e228510a5c4c40d88b8bc460515de22abb8" translate="yes" xml:space="preserve">
          <source>The value of the attribute determines how the property editor will handle them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d551f98406523b68e8c3f777f0836e01e9403c4" translate="yes" xml:space="preserve">
          <source>The value of the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ade584d854b8ef5940629dbf3fadaeeb01a45e1" translate="yes" xml:space="preserve">
          <source>The value of the bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2133bbc002461f65bb05252466f9050ca3e326fc" translate="yes" xml:space="preserve">
          <source>The value of the characteristic is a signed 8 bit integer that has a fixed point exponent of 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbad530fcc443aea55a8fa82ee9c78d4943652e4" translate="yes" xml:space="preserve">
          <source>The value of the characteristic is an opaque structure listing various regulatory and/or certification compliance items to which the device claims adherence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6750e60c2f694d8172ed4dfa0d4c606aa7d5acb" translate="yes" xml:space="preserve">
          <source>The value of the dial is set with the &lt;a href=&quot;qml-qtquick-controls2-dial#value-prop&quot;&gt;value&lt;/a&gt; property. The range is set with the &lt;a href=&quot;qml-qtquick-controls2-dial#from-prop&quot;&gt;from&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-dial#to-prop&quot;&gt;to&lt;/a&gt; properties. To enable or disable wrapping, use the &lt;a href=&quot;qml-qtquick-controls2-dial#wrap-prop&quot;&gt;wrap&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfc05a9e4dfa72686167da637e451e2105592ee" translate="yes" xml:space="preserve">
          <source>The value of the left thumbstick's X axis. The axis values range from -1.0 to 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6683a9a5a24d8cd9816f5d59b9b671facc95a29" translate="yes" xml:space="preserve">
          <source>The value of the left thumbstick's Y axis. The axis values range from -1.0 to 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47994566e851c9c6e2962e8828b93b4bc65ecea5" translate="yes" xml:space="preserve">
          <source>The value of the left trigger button. This trigger value ranges from 0.0 when not pressed to 1.0 when pressed completely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697d36ff19fb663f54fcc5d61b7fe5a55c384a66" translate="yes" xml:space="preserve">
          <source>The value of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca24fe544ffb6a9546873c2ccf49d264aa2ed1c9" translate="yes" xml:space="preserve">
          <source>The value of the property is based on &lt;a href=&quot;qml-qtquick-controls2-spinbox#textFromValue-prop&quot;&gt;textFromValue&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-control#locale-prop&quot;&gt;locale&lt;/a&gt;, and equal to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e6eb39f4fa39f868624ec69bcac7c4d23baff5" translate="yes" xml:space="preserve">
          <source>The value of the property is only used when the thread pool creates new threads. Changing it has no effect for already created or running threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8b070bc0970bcbfc1b9ec6ba3da78311268bc9" translate="yes" xml:space="preserve">
          <source>The value of the right trigger button. This trigger value ranges from 0.0 when not pressed to 1.0 when pressed completely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddfadbc983b6c1b4b84c28ac935d4b954da89ba" translate="yes" xml:space="preserve">
          <source>The value of the slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ccab7ee9b6b4297d66918289041772bddd8880" translate="yes" xml:space="preserve">
          <source>The value of the slider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8257982b8863f18b15e4930a54da8700ef45058a" translate="yes" xml:space="preserve">
          <source>The value of the uniform must correspond to both a property on the target &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; and must be a uniform of type &lt;code&gt;float&lt;/code&gt; in the fragment or vertex shader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a586a9f96ae34f7d00fd5dbdb62c61d2599516" translate="yes" xml:space="preserve">
          <source>The value of the white list is ignored, that is, no filtering takes place for either scan or connection requests when using undirected advertising.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2ef766aed42056a2e0d687248098addc2e498a" translate="yes" xml:space="preserve">
          <source>The value of these variables is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f68c7552ef38c578633946edbe57878d653b1e" translate="yes" xml:space="preserve">
          <source>The value of this &lt;a href=&quot;qml-qtquick-controls-spinbox&quot;&gt;SpinBox&lt;/a&gt;, clamped to &lt;a href=&quot;qml-qtquick-controls-spinbox#minimumValue-prop&quot;&gt;minimumValue&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-spinbox#maximumValue-prop&quot;&gt;maximumValue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f038562177df93aaf2965427d73d663bf948a5" translate="yes" xml:space="preserve">
          <source>The value of this characteristic is a UTF-8 string representing the firmware revision for the firmware within the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc64d2ef3fab75898558684e672e12834a43232" translate="yes" xml:space="preserve">
          <source>The value of this characteristic is a UTF-8 string representing the hardware revision for the hardware within the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39447c70eb883277882a18f0a37e96398edbd21" translate="yes" xml:space="preserve">
          <source>The value of this characteristic is a UTF-8 string representing the model number assigned by the device vendor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d014b11681fe2c460f8b8a2a06c6dbcbc660ee9" translate="yes" xml:space="preserve">
          <source>The value of this characteristic is a UTF-8 string representing the name of the manufacturer of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d9e5d91c9442b3fefc9388de077207c5423a5e" translate="yes" xml:space="preserve">
          <source>The value of this characteristic is a UTF-8 string representing the software revision for the software within the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946961ef680813028c1ae6ca42bd3976befcc13d" translate="yes" xml:space="preserve">
          <source>The value of this characteristic is a variable-length UTF-8 string representing the serial number for a particular instance of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b8fdbb197e5845d5ba87e3b2d6b040b1accfc8" translate="yes" xml:space="preserve">
          <source>The value of this characteristic states the temperature in degree Celsius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc94cf24346ac9c14eab18ed645b00bb46ab5df" translate="yes" xml:space="preserve">
          <source>The value of this property is &lt;code&gt;-1&lt;/code&gt; when &lt;a href=&quot;qml-qtquick-controls2-tumbler#count-prop&quot;&gt;count&lt;/a&gt; is equal to &lt;code&gt;0&lt;/code&gt;. In all other cases, it will be greater than or equal to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87c37195519bfed82faac61a500f4e7add6a64f" translate="yes" xml:space="preserve">
          <source>The value of this property is also updated after the dialog is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9d073619bad7365dc10940bb5374ec111317e9" translate="yes" xml:space="preserve">
          <source>The value of this property is undefined in documents with tables or frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0046ae7c1e4cdfb968ac0f20c79b82d797c594" translate="yes" xml:space="preserve">
          <source>The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e306d4e8e9bf8f4156e13d25d03e2e13cb807b" translate="yes" xml:space="preserve">
          <source>The value of this variable is, currently, always 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0852be9c9a665f74ebb47fc25de59cf83c16f7" translate="yes" xml:space="preserve">
          <source>The value property is useful for drawing lower and upper limits around the gauge to indicate the recommended value ranges. For example, speeds above 200 kilometers an hour in a car's speedometer could be indicated as dangerous using this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c4eedb6e2b498b2889af4bfaa630f285b8f33b" translate="yes" xml:space="preserve">
          <source>The value range and the label format shown on the axis can be controlled through &lt;a href=&quot;qvalue3daxis&quot;&gt;QValue3DAxis&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1c8714bf8ef1d813f0f8caab5b334680cdda64" translate="yes" xml:space="preserve">
          <source>The value range of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a771acd22e70f3ce7a6cbe3eac2fa524a167c02" translate="yes" xml:space="preserve">
          <source>The value ranges from &quot;#00000000&quot; to &quot;#ffffffff&quot;. By default, the property is set to &lt;code&gt;&quot;#00000000&quot;&lt;/code&gt; (no change).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7406aad557fd777d0504cbbf8505b4085cdec214" translate="yes" xml:space="preserve">
          <source>The value ranges from &quot;#ffffffff&quot; to &quot;#00000000&quot;. By default, the property is set to &lt;code&gt;&quot;#ffffffff&quot;&lt;/code&gt; (no change).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c500e01ddcbed38ff56158ae561d56c0277d35" translate="yes" xml:space="preserve">
          <source>The value ranges from (no blur) to 16.0 (maximum blur step). By default, the property is set to &lt;code&gt;0.0&lt;/code&gt; (no blur).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055eb2f7c8408c6feacf4178a79fcea0b1c3e419" translate="yes" xml:space="preserve">
          <source>The value ranges from -1.0 (decrease) to 1.0 (increase). By default, the property is set to &lt;code&gt;0.0&lt;/code&gt; (no change).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8429732e452eeb54acde180fbc57d3361551d7f" translate="yes" xml:space="preserve">
          <source>The value ranges from -1.0 (decreased) to 1.0 (increased). By default, the property is set to &lt;code&gt;0.0&lt;/code&gt; (no change).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037aa9a845bd7a977d01cef6efbbf5e31d33c1e0" translate="yes" xml:space="preserve">
          <source>The value ranges from -1.0 (inverted maximum shift, according to &lt;a href=&quot;qml-qtgraphicaleffects-displace#displacementSource-prop&quot;&gt;displacementSource&lt;/a&gt;) to 1.0 (maximum shift, according to &lt;a href=&quot;qml-qtgraphicaleffects-displace#displacementSource-prop&quot;&gt;displacementSource&lt;/a&gt;). By default, the property is set to &lt;code&gt;0.0&lt;/code&gt; (no displacement).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de95fb2090cef441d3d1780aac0d901cf420ccd4" translate="yes" xml:space="preserve">
          <source>The value ranges from -1.0 to 1.0. By default, the property is set to &lt;code&gt;0.0&lt;/code&gt; (no change).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7824d5c4455216fae613a70ea9330118e686401" translate="yes" xml:space="preserve">
          <source>The value ranges from -180.0 to 180.0. By default the property is set to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e74025d7bcbeee974942350e067daeeec86a16" translate="yes" xml:space="preserve">
          <source>The value ranges from -inf to inf. By default, &lt;a href=&quot;qml-qtgraphicaleffects-radialgradient#horizontalRadius-prop&quot;&gt;horizontalRadius&lt;/a&gt; is bound to width and verticalRadius is bound to height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1486834c84272e6844275d2e8354f6654da06eb2" translate="yes" xml:space="preserve">
          <source>The value ranges from -inf to inf. By default, horizontalRadius is bound to width and &lt;a href=&quot;qml-qtgraphicaleffects-radialgradient#verticalRadius-prop&quot;&gt;verticalRadius&lt;/a&gt; is bound to height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92b4708b83a4f2dc967466e0ac899f07ceb64d1" translate="yes" xml:space="preserve">
          <source>The value ranges from -inf to inf. By default, the properties are set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7bb3be492f12617b011c3d83f3b064d3fa03a7" translate="yes" xml:space="preserve">
          <source>The value ranges from 0 to 32. By default, the property is set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77ba52394e3bf6278cef1b81f19a7874b91f937" translate="yes" xml:space="preserve">
          <source>The value ranges from 0 to inf. By default, the property is set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb85f137f561f9aaf4577a28b16c8ae2d89c8d1" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (alpha value 0) to 1.0 (alpha value 255). By default, the property is set to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dfa64e1ab551d7058e447821069c59ec1aa776" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (darkest) to inf (lightest). By default, the property is set to &lt;code&gt;1.0&lt;/code&gt; (no change).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57833c0a81385fb02f11c265b6be290f1a4d0012" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (desaturated) to 1.0 (saturated). By default, the property is set to &lt;code&gt;1.0&lt;/code&gt; (saturated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f5b273fdca7b81a5bbfe56e7fcd2121849247f" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (no blur) to inf. By default, the property is set to &lt;code&gt;0.0&lt;/code&gt; (no blur).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af13615f2fa7dedc8564ff609bdcaacb58d7dcc" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (no blur) to inf. By default, the property is set to &lt;code&gt;floor(samples / 2.0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a1201608d7664cfc17cc384698306028831459" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (no blur) to inf. Visual quality of the blur is reduced when radius exceeds value 64. By default, the property is set to &lt;code&gt;0.0&lt;/code&gt; (no blur).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17e72ea3984a730a869fe3e351e6532fda8f46b" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (no change) to 1.0 (desaturated). By default, the property is set to &lt;code&gt;0.0&lt;/code&gt; (no change).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7c55e78a3862d6ac865dd4b4fd666a4c8ceb63" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (no deviation) to inf (maximum deviation). By default, devaition is binded to radius. When radius increases, deviation is automatically increased linearly. With the radius value of 8, the deviation default value becomes approximately 2.7034. This value produces a compromise between the blur quality and overall blurriness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa82d101aa739338cb3da8a97f6dd07c392ebf0" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (no glow) to inf (infinite glow). By default, the property is set to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33777850e5fd37225735614a026f022e6d53c88" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (no strength increase) to 1.0 (maximum strength increase). By default, the property is set to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2a0ffe94c87dd1dcba30f7aaabb1f750d0e92a" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 (sharp mask edge) to 1.0 (smooth mask edge). By default, the property is set to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c456a950d6ebfc7c57b51585e20f4aab7f8d4cd9" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 to 1.0. By default, the property is set to &lt;code&gt;0.0&lt;/code&gt;, which produces a slightly red color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af129c39c5b49d71edfb0c46c3e1f62296c24c55" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 to 1.0. By default, the property is set to &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0de6c3918a0162c03354be445fb79b2dac201b" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 to 1.0. By default, the property is set to &lt;code&gt;0.5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4aa8168d6598b31fa8596adaa0766d64a12aa32" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 to half of the effective width or height of the glow, whichever is smaller. This can be calculated with: &lt;code&gt;min(width, height) / 2.0 + glowRadius&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59823d800f97f95c0db721a02168be3abc611f25" translate="yes" xml:space="preserve">
          <source>The value ranges from 0.0 to inf. By default the property is set to &lt;code&gt;0.0&lt;/code&gt; (no blur).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e180c85e91e982a3e15dc5f6b2352ed976154a" translate="yes" xml:space="preserve">
          <source>The value ranges from QtVector3d(0.0, 0.0, 0.0) (darkest) to inf (lightest). By default, the property is set to &lt;code&gt;QtVector3d(1.0, 1.0, 1.0)&lt;/code&gt; (no change).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d6b36970edf6fdc251a606901f9779fe03b07a" translate="yes" xml:space="preserve">
          <source>The value represents the ambient light and comes from &lt;a href=&quot;qambientlightreading#LightLevel-enum&quot;&gt;QAmbientLightReading::LightLevel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4381bd0a83ab9b1835fa1a5310011d1458426c4" translate="yes" xml:space="preserve">
          <source>The value returned by a modal dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545cf2c92ed95c8b4bc16c9531e2dd4f154898fa" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicsellipseitem#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8a6f71e012703b10315e5479df250220bce4f5" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicsitem#type&quot;&gt;type&lt;/a&gt;() function in standard graphics item classes in Qt. All such standard graphics item classes in Qt are associated with a unique value for Type, e.g. the value returned by &lt;a href=&quot;qgraphicspathitem#type&quot;&gt;QGraphicsPathItem::type&lt;/a&gt;() is 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b3cdaea65814277564d6207a589791a6e1dffa" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicsitemgroup#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af0610c5238a39a8ddab651d963339bf97e3011" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicslineitem#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59a21f25a4b47758e429dbe13c1ffce7ca8a418" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicspathitem#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77414a29bcde85e75ce52ed570b43a8aafb9b9a9" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicspixmapitem#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9fe89c878c4b50eeddfce0d162e160c3e57155" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicspolygonitem#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9babd7ec78e3684f906dc72a5769bd8dcc33a9" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicsproxywidget#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe558564420d9368698e94cd112ddb4310dec78" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicsrectitem#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fac44df8b0194992eaeca1dd84eaa5e465add2" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicssimpletextitem#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802a2d59429dc76c5099df014fb18f48dfbe79fc" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicstextitem#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86de4057c0ec4fb1bd24a6b6312bfb5ed18e441f" translate="yes" xml:space="preserve">
          <source>The value returned by the virtual &lt;a href=&quot;qgraphicswidget#type&quot;&gt;type&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5e38c1432249fc8f4f5d57e3e10c5ab0aae877" translate="yes" xml:space="preserve">
          <source>The value should be in the range of 0.0 to 1.0, where 0.0 is fully transparent and 1.0 is fully opaque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331168ca62cb250f6a8c6d1fb9d8435b8b9aeb5f" translate="yes" xml:space="preserve">
          <source>The value specified can be used to influence the visual appearance of an item along the path. For example, the following Path specifies an attribute named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4a71d5303a8d31e41a06727c735c5e8662250e" translate="yes" xml:space="preserve">
          <source>The value specified using the &lt;code&gt;title&lt;/code&gt; tag is available through &lt;a href=&quot;qtextdocument#metaInformation&quot;&gt;QTextDocument::metaInformation&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a38679189b43a707f7bf8a603ea537cd85f223" translate="yes" xml:space="preserve">
          <source>The value starts growing slowly, then increases in speed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e02838e4c440b7281cbc2d027d2e069a93330f" translate="yes" xml:space="preserve">
          <source>The value starts growing slowly, then runs steadily, then grows slowly again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a00897cd6ee59b8c876f884392928e814abd6c" translate="yes" xml:space="preserve">
          <source>The value starts growing steadily, then ends slowly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb4bf1d106d4a8613767e4bde217383f1c8f3e5" translate="yes" xml:space="preserve">
          <source>The value that is returned is also dependent on the given &lt;a href=&quot;qtextformat#Property-enum&quot;&gt;LineHeightType&lt;/a&gt; of the paragraph as well as the &lt;a href=&quot;qtextformat#Property-enum&quot;&gt;LineHeight&lt;/a&gt; setting that has been set for the paragraph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d386e8ee8f4ea760d6b62cc37e2ee0ebcffde16b" translate="yes" xml:space="preserve">
          <source>The value that is stored in this container: a pair of QCborValues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e36bc01e295977a59f4be50c4cf3de039e43d2" translate="yes" xml:space="preserve">
          <source>The value that this label represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fdde888febb73aa8c312c6db40af7bf2aa34df" translate="yes" xml:space="preserve">
          <source>The value that this minor tickmark represents as a position in pixels, with 0 being at the bottom of the gauge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a865c14a29a41fadf943c1f47cbcd0999b14dc" translate="yes" xml:space="preserve">
          <source>The value that this minor tickmark represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836e646a2e67c2c72bec57f72817e6843b7b3705" translate="yes" xml:space="preserve">
          <source>The value that this tickmark represents as a position in pixels, with 0 being at the bottom of the gauge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d6d3173e0c08dcd354dad2f1ae793965575df1" translate="yes" xml:space="preserve">
          <source>The value that this tickmark represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa568bd2b9d23b18077c203674a22a995ee2d977" translate="yes" xml:space="preserve">
          <source>The value to be set on the target object and property. This can be a constant (which isn't very useful), or a bound expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2211cd39f924e6bb3728042b13e9ba80798ff4" translate="yes" xml:space="preserve">
          <source>The value will be bounded to the range 0 to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a75732ed5fe704380a93f729c61140a54afaff1" translate="yes" xml:space="preserve">
          <source>The value will be true if the playback volume is muted; otherwise false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8907280e70178ed40fd7f687648e1ed75119bf06" translate="yes" xml:space="preserve">
          <source>The values above may seem a bit strange, but here are the guiding principles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478c2a8a6ebb2e90d04c46fec272a309cc3c3fda" translate="yes" xml:space="preserve">
          <source>The values are fractions of the volume thickness in the same dimension. The values cannot be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5154c9626640fadf72f74a82b038294f0f6e807" translate="yes" xml:space="preserve">
          <source>The values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0570d7379bdf3219932f1c281111e3a3bf8aab" translate="yes" xml:space="preserve">
          <source>The values correspond to OpenGL enum values like &lt;code&gt;GL_POINTS&lt;/code&gt;, &lt;code&gt;GL_LINES&lt;/code&gt;, etc. &lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt; provies its own type in order to be able to provide the same API with non-OpenGL backends as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f46ada401d6ff80b44dd18818bfcc47221a99418" translate="yes" xml:space="preserve">
          <source>The values correspond to OpenGL type constants like &lt;code&gt;GL_BYTE&lt;/code&gt;, &lt;code&gt;GL_UNSIGNED_BYTE&lt;/code&gt;, etc. &lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt; provies its own type in order to be able to provide the same API with non-OpenGL backends as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a4cb6eb64c27064f7dd46793515b1113681a24" translate="yes" xml:space="preserve">
          <source>The values for this enum are defined to be the same as those defined in the &lt;a href=&quot;http://accessibility.linuxfoundation.org/a11yspecs/ia2/docs/html/_accessible_event_i_d_8idl.html&quot;&gt;IAccessible2&lt;/a&gt; and &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dd318066.aspx&quot;&gt;MSAA&lt;/a&gt; specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ab02e543838ef004c5c531bec3a9b7ec7db7f7" translate="yes" xml:space="preserve">
          <source>The values from all items matching each row/column combination are added together and the total is used as the bar value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fde2bfc48d8d94219d8eda4419467ffb7fade45" translate="yes" xml:space="preserve">
          <source>The values from all items matching each row/column combination are averaged together and the average is used as the bar value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd2090f673cc98252e002b45b255524467d1cc8" translate="yes" xml:space="preserve">
          <source>The values in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87156724368a0fa0ca24de7190319e6ec2d85e29" translate="yes" xml:space="preserve">
          <source>The values of EncodeReserved and DecodeReserved should not be used together in one call. The behavior is undefined if that happens. They are provided as separate values because the behavior of the &quot;pretty mode&quot; with regards to reserved characters is different on certain components and specially on the full URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18129c38895faf2b4913029560eaefb3bbfc7e26" translate="yes" xml:space="preserve">
          <source>The values of a record's fields can be set by name or position with &lt;a href=&quot;qsqlrecord#setValue&quot;&gt;setValue&lt;/a&gt;(); if you want to set a field to null use &lt;a href=&quot;qsqlrecord#setNull&quot;&gt;setNull&lt;/a&gt;(). To find the position of a field by name use &lt;a href=&quot;qsqlrecord#indexOf&quot;&gt;indexOf&lt;/a&gt;(), and to find the name of a field at a particular position use &lt;a href=&quot;qsqlrecord#fieldName&quot;&gt;fieldName&lt;/a&gt;(). Use &lt;a href=&quot;qsqlrecord#field&quot;&gt;field&lt;/a&gt;() to retrieve a &lt;a href=&quot;qsqlfield&quot;&gt;QSqlField&lt;/a&gt; object for a given field. Use &lt;a href=&quot;qsqlrecord#contains&quot;&gt;contains&lt;/a&gt;() to see if the record contains a particular field name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835e243af793fbb5fe085c908921035b79cf5f22" translate="yes" xml:space="preserve">
          <source>The values of characteristics and descriptors can be retrieved via &lt;a href=&quot;qlowenergycharacteristic&quot;&gt;QLowEnergyCharacteristic&lt;/a&gt; and &lt;a href=&quot;qlowenergydescriptor&quot;&gt;QLowEnergyDescriptor&lt;/a&gt;, respectively. However, direct reading or writing of these attributes requires the service object. The &lt;a href=&quot;qlowenergyservice#readCharacteristic&quot;&gt;readCharacteristic&lt;/a&gt;() function attempts to re-read the value of a characteristic. Although the initial service discovery may have obtained a value already this call may be required in cases where the characteristic value constantly changes without any notifications being provided. An example might be a time characteristic that provides a continuous value. If the read attempt is successful, the &lt;a href=&quot;qlowenergyservice#characteristicRead&quot;&gt;characteristicRead&lt;/a&gt;() signal is emitted. A failure to read the value triggers the &lt;a href=&quot;qlowenergyservice#ServiceError-enum&quot;&gt;CharacteristicReadError&lt;/a&gt;. The &lt;a href=&quot;qlowenergyservice#writeCharacteristic&quot;&gt;writeCharacteristic&lt;/a&gt;() function attempts to write a new value to the given characteristic. If the write attempt is successful, the &lt;a href=&quot;qlowenergyservice#characteristicWritten&quot;&gt;characteristicWritten&lt;/a&gt;() signal is emitted. A failure to write triggers the &lt;a href=&quot;qlowenergyservice#ServiceError-enum&quot;&gt;CharacteristicWriteError&lt;/a&gt;. Reading and writing of descriptors follows the same pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfed8ef9500ec211a07e8bc485a2c0879f1141b" translate="yes" xml:space="preserve">
          <source>The values of the bar set. You can set a list of either &lt;a href=&quot;qml-real&quot;&gt;real&lt;/a&gt; or &lt;a href=&quot;qml-point&quot;&gt;point&lt;/a&gt; types as values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bd08b1e2993260bea03445218bbe1174b78590" translate="yes" xml:space="preserve">
          <source>The values of the box-and-whiskers item. The following enumerations can be used as indexes when accessing the list of values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdaac784c13ff926b13a09ded2298f026c631428" translate="yes" xml:space="preserve">
          <source>The values of the variable are regular expressions (see &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; for details). By default, no symbol is defined, meaning that code protected with #ifdef...#endif will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d4a759de9b354cac9e73ea09853dd287f95c98" translate="yes" xml:space="preserve">
          <source>The values of the variable are regular expressions (see &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; for details). If this variable is not set for a preprocessor symbol, QDoc assumes its truth value is true. The exception is '0', which is always false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1782dc4bc9b392be6063ffd2efca596f195cbead" translate="yes" xml:space="preserve">
          <source>The values of this enum describe additional information about a touch point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e97a5f96b972ec405787688721a306528f635b" translate="yes" xml:space="preserve">
          <source>The values of this enum type match the SSL errors Chromium provides. &lt;a href=&quot;qsslerror#SslError-enum&quot;&gt;QSslError::SslError&lt;/a&gt; values are not used directly, because the Qt error categories cannot be mapped to the Chromium error categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b311cbd04e92b63fefbf8f719ee1b0a868ed30" translate="yes" xml:space="preserve">
          <source>The values range from -inf to inf. By default these properties are set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6322a5851cae3812bd0bffc03f3d66f7caa1b671" translate="yes" xml:space="preserve">
          <source>The values range from -inf to inf. By default, the properties are set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99b1ddbc687816c1211da8d5a0bfdc651d63d14" translate="yes" xml:space="preserve">
          <source>The values range from -inf to inf. By default, these properties are set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76128397604be8627e30fa711e8a343b6fce3dbd" translate="yes" xml:space="preserve">
          <source>The values range from 0.0 (no blur) to maximumRadius (maximum blur). By default, the property is set to 0.0 (no blur).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1fc708f38f12ac3f8f7de14983dfab4e9cd9ae" translate="yes" xml:space="preserve">
          <source>The values range from 0.0 to 1.0. By default, the property is set to &lt;code&gt;0.5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c083f75fddfd3596a7fe0a697baa2b6df0090a5" translate="yes" xml:space="preserve">
          <source>The values returned from this function are kept stable as follows: the mandatory components of the result will not change in future versions of Qt, but optional suffixes may be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce52868ea805f05ceb886efcc410a6f17af758ed" translate="yes" xml:space="preserve">
          <source>The values stored in the &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; variable are treated specially by qmake. Each of the possible values can be used as the condition for a scope. For example, the list of values held by &lt;code&gt;CONFIG&lt;/code&gt; can be extended with the &lt;code&gt;opengl&lt;/code&gt; value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7d9efa8b1978081469e2170b4eff0be77d37ab" translate="yes" xml:space="preserve">
          <source>The values stored in the various containers can be of any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f18f8aa7390a1cbd1bc79841a3490a3678780ae" translate="yes" xml:space="preserve">
          <source>The values supported by the device for each of these parameters can be fetched with &lt;a href=&quot;qaudiodeviceinfo#supportedByteOrders&quot;&gt;supportedByteOrders&lt;/a&gt;(), &lt;a href=&quot;qaudiodeviceinfo#supportedChannelCounts&quot;&gt;supportedChannelCounts&lt;/a&gt;(), &lt;a href=&quot;qaudiodeviceinfo#supportedCodecs&quot;&gt;supportedCodecs&lt;/a&gt;(), &lt;a href=&quot;qaudiodeviceinfo#supportedSampleRates&quot;&gt;supportedSampleRates&lt;/a&gt;(), &lt;a href=&quot;qaudiodeviceinfo#supportedSampleSizes&quot;&gt;supportedSampleSizes&lt;/a&gt;(), and &lt;a href=&quot;qaudiodeviceinfo#supportedSampleTypes&quot;&gt;supportedSampleTypes&lt;/a&gt;(). The combinations supported are dependent on the platform, audio plugins installed and the audio device capabilities. If you need a specific format, you can check if the device supports it with &lt;a href=&quot;qaudiodeviceinfo#isFormatSupported&quot;&gt;isFormatSupported&lt;/a&gt;(), or fetch a supported format that is as close as possible to the format with &lt;a href=&quot;qaudiodeviceinfo#nearestFormat&quot;&gt;nearestFormat&lt;/a&gt;(). For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0bd6ed5106653e91358606e35c94f0655f20bc" translate="yes" xml:space="preserve">
          <source>The values will be either a value that matches an entry in the &lt;a href=&quot;qprinter#PaperSource-enum&quot;&gt;QPrinter::PaperSource&lt;/a&gt; enum or a driver spesific value. The driver spesific values are greater than the constant DMBIN_USER declared in wingdi.h.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478003345dc7862f2215cc623144886ca0a6f91e" translate="yes" xml:space="preserve">
          <source>The variable is initialized to 0x80.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd95b67542b68c0aa4ab770ddc4aad556da4e70" translate="yes" xml:space="preserve">
          <source>The variable that specifies the files that should be processed with the custom compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a8da7c6172a69a8c2a79dadccb44cbbd1971af" translate="yes" xml:space="preserve">
          <source>The variable that the files created from the output should be added to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254dc2d8840db491323d0a7f51cbc5ac85ebd0b4" translate="yes" xml:space="preserve">
          <source>The variable's value is given as raw HTML code enclosed by quotation marks. Note that if the value spans several lines, each line needs to be enclosed by quotation marks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a840ce751b025c33bdcb9787a1baba4b7b05cb5" translate="yes" xml:space="preserve">
          <source>The variable's value is given as raw HTML enclosed by quotation marks. Note that if the value spans several lines, each line needs to be enclosed by quotation marks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3acb47c06af0fe184ff04296b35ec2ecf819654" translate="yes" xml:space="preserve">
          <source>The variable's values (the extensions) are given as standard wildcard expressions. The general syntax is: &lt;code&gt;images.fileextensions.&lt;i&gt;format&lt;/i&gt; = *.&lt;i&gt;extension&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b65afe1523e5ebc65d82221c7c841ea6532383a" translate="yes" xml:space="preserve">
          <source>The variables passed as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b21d524db3100478572b85fc04d090f55378b57" translate="yes" xml:space="preserve">
          <source>The variant contains a &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; object specifying the language of a certain part of the preedit string. There should be at most one language set for every part of the preedit string. If several are specified for any character in the string the behavior is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9a12c1b97a2b95e2e112e8c30263ae47e8f138" translate="yes" xml:space="preserve">
          <source>The variant element (&lt;a href=&quot;qdbusvariant&quot;&gt;QDBusVariant&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d742181b0275cb3b41c7cbb4039db5713e76aa" translate="yes" xml:space="preserve">
          <source>The variant which operates on &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; makes it possible to finish asynchronously running jobs after the last gui window has been closed. This can be useful for example for running a job which uploads data to a network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3c2da68246013c7036e5884eb6706f700f8762" translate="yes" xml:space="preserve">
          <source>The variation in the alpha channel between particles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b041fbde93c2bb5a89933894c65d2660de7c5962" translate="yes" xml:space="preserve">
          <source>The variation in the blue color channel between particles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56aa52ec742b178a38c876a28c520b7553b50af3" translate="yes" xml:space="preserve">
          <source>The variation in the green color channel between particles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a489e02173fe741833eb6b173034662a7a8f68e9" translate="yes" xml:space="preserve">
          <source>The variation in the red color channel between particles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31423edb0ac1a1769af3f0962555582de6f367b4" translate="yes" xml:space="preserve">
          <source>The various design aspects of the outline are based on the stroker's properties: &lt;a href=&quot;qpainterpathstroker#width&quot;&gt;width&lt;/a&gt;(), &lt;a href=&quot;qpainterpathstroker#capStyle&quot;&gt;capStyle&lt;/a&gt;(), &lt;a href=&quot;qpainterpathstroker#joinStyle&quot;&gt;joinStyle&lt;/a&gt;(), &lt;a href=&quot;qpainterpathstroker#dashPattern&quot;&gt;dashPattern&lt;/a&gt;(), &lt;a href=&quot;qpainterpathstroker#curveThreshold&quot;&gt;curveThreshold&lt;/a&gt;() and &lt;a href=&quot;qpainterpathstroker#miterLimit&quot;&gt;miterLimit&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942eb560f30965424a06f07713abdca46bccf273" translate="yes" xml:space="preserve">
          <source>The various matrix elements can be set when constructing the matrix, or by using the &lt;a href=&quot;qmatrix#setMatrix&quot;&gt;setMatrix&lt;/a&gt;() function later on. They can also be manipulated using the &lt;a href=&quot;qmatrix#translate&quot;&gt;translate&lt;/a&gt;(), &lt;a href=&quot;qmatrix#rotate&quot;&gt;rotate&lt;/a&gt;(), &lt;a href=&quot;qmatrix#scale&quot;&gt;scale&lt;/a&gt;() and &lt;a href=&quot;qmatrix#shear&quot;&gt;shear&lt;/a&gt;() convenience functions, The currently set values can be retrieved using the &lt;a href=&quot;qmatrix#m11&quot;&gt;m11&lt;/a&gt;(), &lt;a href=&quot;qmatrix#m12&quot;&gt;m12&lt;/a&gt;(), &lt;a href=&quot;qmatrix#m21&quot;&gt;m21&lt;/a&gt;(), &lt;a href=&quot;qmatrix#m22&quot;&gt;m22&lt;/a&gt;(), &lt;a href=&quot;qmatrix#dx&quot;&gt;dx&lt;/a&gt;() and &lt;a href=&quot;qmatrix#dy&quot;&gt;dy&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776427fc023f0c1fb9cc7206d727fe7dd7fd221d" translate="yes" xml:space="preserve">
          <source>The various matrix elements can be set when constructing the matrix, or by using the &lt;a href=&quot;qtransform#setMatrix&quot;&gt;setMatrix&lt;/a&gt;() function later on. They can also be manipulated using the &lt;a href=&quot;qtransform#translate&quot;&gt;translate&lt;/a&gt;(), &lt;a href=&quot;qtransform#rotate&quot;&gt;rotate&lt;/a&gt;(), &lt;a href=&quot;qtransform#scale&quot;&gt;scale&lt;/a&gt;() and &lt;a href=&quot;qtransform#shear&quot;&gt;shear&lt;/a&gt;() convenience functions. The currently set values can be retrieved using the &lt;a href=&quot;qtransform#m11&quot;&gt;m11&lt;/a&gt;(), &lt;a href=&quot;qtransform#m12&quot;&gt;m12&lt;/a&gt;(), &lt;a href=&quot;qtransform#m13&quot;&gt;m13&lt;/a&gt;(), &lt;a href=&quot;qtransform#m21&quot;&gt;m21&lt;/a&gt;(), &lt;a href=&quot;qtransform#m22&quot;&gt;m22&lt;/a&gt;(), &lt;a href=&quot;qtransform#m23&quot;&gt;m23&lt;/a&gt;(), &lt;a href=&quot;qtransform#m31&quot;&gt;m31&lt;/a&gt;(), &lt;a href=&quot;qtransform#m32&quot;&gt;m32&lt;/a&gt;(), &lt;a href=&quot;qtransform#m33&quot;&gt;m33&lt;/a&gt;(), &lt;a href=&quot;qtransform#dx&quot;&gt;dx&lt;/a&gt;() and &lt;a href=&quot;qtransform#dy&quot;&gt;dy&lt;/a&gt;() functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49de2e3398ed19c87c945dd351608853ba915318" translate="yes" xml:space="preserve">
          <source>The various settings and functionality of the Camera stack is spread across a few different child properties of Camera.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082589886f3ad162bcd3f6949e3ebad1a07153ec" translate="yes" xml:space="preserve">
          <source>The various settings can easily be modified using the corresponding &lt;a href=&quot;qpen#setStyle&quot;&gt;setStyle&lt;/a&gt;(), &lt;a href=&quot;qpen#setWidth&quot;&gt;setWidth&lt;/a&gt;(), &lt;a href=&quot;qpen#setBrush&quot;&gt;setBrush&lt;/a&gt;(), &lt;a href=&quot;qpen#setCapStyle&quot;&gt;setCapStyle&lt;/a&gt;() and &lt;a href=&quot;qpen#setJoinStyle&quot;&gt;setJoinStyle&lt;/a&gt;() functions (note that the painter's pen must be reset when altering the pen's properties).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10755b3853528d73f41f165169a8fbd3d1a7d940" translate="yes" xml:space="preserve">
          <source>The vector can contain an odd number of elements, in which case the last element will be extended by the length of the first element when the pattern repeats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90fbec930b8da01522acfbefd4434fb0642df62" translate="yes" xml:space="preserve">
          <source>The vector of joints this joint has as children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2870f12265e880dda458c27da646ad853170f2f" translate="yes" xml:space="preserve">
          <source>The vector2d type has the following idempotent functions which can be invoked in QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3e0f79e28e79f9feddf74784c92c681f9d0ea1" translate="yes" xml:space="preserve">
          <source>The vector3d type has the following idempotent functions which can be invoked in QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec81c3f4fd3e47fec8964c5a90b62760ddfc3bf3" translate="yes" xml:space="preserve">
          <source>The vector4d type has the following idempotent functions which can be invoked in QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13b49792ef79eaed81e6acd849989ba67fdb787" translate="yes" xml:space="preserve">
          <source>The velocity is reported for both the x and y axis separately by using a &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd22b6aff50d785fb2248cdd81a80828588dd4e1" translate="yes" xml:space="preserve">
          <source>The velocity of the device that reported the position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce9ae3ac3fd1731f7c1e995bdbe490eb7ff6cfc" translate="yes" xml:space="preserve">
          <source>The vendor URL of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792cd46c34e4d40b32829a1f1ef3a5fb8e5ae13f" translate="yes" xml:space="preserve">
          <source>The vendor name of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c32d21a08a803062fbb4b9f4270594ad047e65" translate="yes" xml:space="preserve">
          <source>The version has no special meaning for &lt;a href=&quot;qstylehintreturn&quot;&gt;QStyleHintReturn&lt;/a&gt;; it can be used by subclasses to distinguish between different version of the same hint type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4202481d2bc641515954365c190f1d92a7f731c" translate="yes" xml:space="preserve">
          <source>The version has no special meaning for &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;; it can be used by subclasses to distinguish between different version of the same option type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f11064d7814cb7571d8d0197564320a3b94a48" translate="yes" xml:space="preserve">
          <source>The version is used by &lt;a href=&quot;qstylehintreturn&quot;&gt;QStyleHintReturn&lt;/a&gt; subclasses to implement extensions without breaking compatibility. If you use &lt;a href=&quot;qstylehintreturn#qstyleoption_cast&quot;&gt;qstyleoption_cast&lt;/a&gt;(), you normally do not need to check it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5040d0c18c3b3be3fe108a90775ca439754a1981" translate="yes" xml:space="preserve">
          <source>The version is used by &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; subclasses to implement extensions without breaking compatibility. If you use &lt;a href=&quot;qstyleoption#qstyleoption_cast&quot;&gt;qstyleoption_cast&lt;/a&gt;(), you normally do not need to check it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6851da8982ae5d9f0aeaba1c696b9c8029f5d11" translate="yes" xml:space="preserve">
          <source>The version number of the package. Defaults to &lt;code&gt;1.0.0.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd4753f16ed25b93c5456caeb4b3361a4f5d389" translate="yes" xml:space="preserve">
          <source>The version number specified will be used as the version of the type library and of the server when registering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc748465d26c71647754a4a0c51c2337df5e2e0" translate="yes" xml:space="preserve">
          <source>The version of qmake supplied in source packages is configured slightly differently to that supplied in binary packages in that it uses a different feature specification. Where the source package typically uses the &lt;code&gt;macx-g++&lt;/code&gt; specification, the binary package is typically configured to use the &lt;code&gt;macx-xcode&lt;/code&gt; specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f40135f4012ad93691631ed4cae223724ae748" translate="yes" xml:space="preserve">
          <source>The version of the class (1.0 is default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e41d070e3e92cc2f4d4a4ce23c803e9d706df28" translate="yes" xml:space="preserve">
          <source>The vertex color material respects both current opacity and current matrix when updating it's rendering state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eec2ac878a77b5440e5a5d9554d5794d4fbf64b" translate="yes" xml:space="preserve">
          <source>The vertex color material will give each vertex in a geometry a color. Pixels between vertices will be linearly interpolated. The colors can contain transparency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4898102c5a84f5e4a3d166de4824966d9ef716" translate="yes" xml:space="preserve">
          <source>The vertical direction. Equivalent to GL_TEXTURE_WRAP_T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b552887fbfc1ecb68f54d456a74a2cc2534237" translate="yes" xml:space="preserve">
          <source>The vertical extra space on the top/bottom of a menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f5b6703f1b706b13831e53d194254761afcdaa" translate="yes" xml:space="preserve">
          <source>The vertical flags are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e50773ee969d0ccfb81323990bb29073c84a37" translate="yes" xml:space="preserve">
          <source>The vertical movement x position is cleared automatically when the cursor moves horizontally, and kept unchanged when the cursor moves vertically. The mechanism allows the cursor to move up and down on a visually straight line with proportional fonts, and to gently &quot;jump&quot; over short lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdc5f9e0c8457ba5eb42f8a408dce0676e18c50" translate="yes" xml:space="preserve">
          <source>The vertical position of the pie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d241a2c5fee977d22d6e3e35ce51289b0c8d7277" translate="yes" xml:space="preserve">
          <source>The vertical resolution of the device in dots per inch. See also &lt;a href=&quot;qpaintdevice#logicalDpiY&quot;&gt;logicalDpiY&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f718a36e46273727198996b41a03686ef937c3" translate="yes" xml:space="preserve">
          <source>The vertical resolution of the device in dots per inch. See also &lt;a href=&quot;qpaintdevice#physicalDpiY&quot;&gt;physicalDpiY&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79f2c1142c446d1954371149c2b20fb5f0ac12c" translate="yes" xml:space="preserve">
          <source>The vertical speed, in meters/sec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2842df2f4ea0b8b98062a4c188487424e9a3ae" translate="yes" xml:space="preserve">
          <source>The vertical wrap mode is set on the texture instance just before the texture is bound for rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3621fb655616bc1f6a43d7d3c0c60a490ca036f3" translate="yes" xml:space="preserve">
          <source>The video buffer is not mapped to memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b51a9903b3210e4610473c5f7c24b9ca64ff7eb" translate="yes" xml:space="preserve">
          <source>The video format most commonly used by DRM services, H.264, requires proprietary audio and video codecs. For more information about enabling the codecs, see &lt;a href=&quot;#audio-and-video-codecs&quot;&gt;Audio and Video Codecs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a94c30c401261c1a72494cb28e8ced184e18df" translate="yes" xml:space="preserve">
          <source>The video pixel data in a &lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; is encapsulated in a &lt;a href=&quot;qabstractvideobuffer&quot;&gt;QAbstractVideoBuffer&lt;/a&gt;. A &lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; may be constructed from any buffer type by subclassing the &lt;a href=&quot;qabstractvideobuffer&quot;&gt;QAbstractVideoBuffer&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539854333db0054b3bdbb9b4225706f2a1389b60" translate="yes" xml:space="preserve">
          <source>The video player is available to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa8f9e1deaf1da6f1e45d952671abf334a62ea6" translate="yes" xml:space="preserve">
          <source>The video player is usually available, but some other process is utilizing the hardware necessary to play media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a808e51693db0366361c7aad4e5f6449d32f9f" translate="yes" xml:space="preserve">
          <source>The view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4652b50eb959fc4f679f02ec5f754ea49b6f4c" translate="yes" xml:space="preserve">
          <source>The view accepts drops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6ca86eec00ab61e8e9d9eedd8075bfbb3656f8" translate="yes" xml:space="preserve">
          <source>The view accepts move (&lt;b&gt;not copy&lt;/b&gt;) operations only from itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e9c0b73e8dfdce47a51380fd2b2fb6571fb1be" translate="yes" xml:space="preserve">
          <source>The view classes that inherit &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; only need to implement their own view-specific functionality, such as drawing items, returning the geometry of items, finding items, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c563fe21bce57adc54191b3c774f68881a39335" translate="yes" xml:space="preserve">
          <source>The view currently hosting the developer tools for this view. Setting it to a new view will navigate that view to an internal URL with the developer tools, and bind it to this view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e99e3c611135650ed00fdb62a83bbb10f5d3197" translate="yes" xml:space="preserve">
          <source>The view does not take ownership of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab381bdd8185779c54c2b75d0074123c8fb5ca9" translate="yes" xml:space="preserve">
          <source>The view ensures that the editor's data and geometry are set correctly by calling functions that we define later for these purposes. We can create different editors depending on the model index supplied by the view. For example, if we have a column of integers and a column of strings we could return either a &lt;code&gt;QSpinBox&lt;/code&gt; or a &lt;code&gt;QLineEdit&lt;/code&gt;, depending on which column is being edited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa46529d403687269762843efcd50bde2cab24c5" translate="yes" xml:space="preserve">
          <source>The view has a &lt;a href=&quot;qml-qtquick-pathview#model-prop&quot;&gt;model&lt;/a&gt;, which defines the data to be displayed, and a &lt;a href=&quot;qml-qtquick-pathview#delegate-prop&quot;&gt;delegate&lt;/a&gt;, which defines how the data should be displayed. The &lt;a href=&quot;qml-qtquick-pathview#delegate-prop&quot;&gt;delegate&lt;/a&gt; is instantiated for each item on the &lt;a href=&quot;qml-qtquick-pathview#path-prop&quot;&gt;path&lt;/a&gt;. The items may be flicked to move them along the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b807f5f0bcb4d0a6af9ecff7d8ac22887dc22c" translate="yes" xml:space="preserve">
          <source>The view is first created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a788d622689e00cabf54bf636fdc3f1c656a9a62" translate="yes" xml:space="preserve">
          <source>The view is shown in the normal way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4771791feb189995c785125a9b4d059a6b7f5261" translate="yes" xml:space="preserve">
          <source>The view itself does not provide sorting. This has to be done on the model itself. However you can provide sorting on the model, and enable sort indicators on headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebc21772931a3103ee4215e2ccae46f96241a65" translate="yes" xml:space="preserve">
          <source>The view obtains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c550133a46676767237d149d50c16381ae8500a" translate="yes" xml:space="preserve">
          <source>The view receives input events from the keyboard and mouse, and translates these to scene events (converting the coordinates used to scene coordinates where appropriate), before sending the events to the visualized scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc896763fcb258005703aa85b1daf792e83a0c3" translate="yes" xml:space="preserve">
          <source>The view renders the contents of a model, accessing data via the model's interface. When the user tries to edit an item, the view uses a default delegate to provide an editor widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784fca917a858eae34ddd3f658c679b8ac42a202" translate="yes" xml:space="preserve">
          <source>The view resizes with the root item in the QML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c26fcc67585f8defa024bd3830b8da434950f6" translate="yes" xml:space="preserve">
          <source>The view should use the delegate to open an editor on the next item in the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb0a4fdd1d04869345416b5bfba2dd19b8a1be9" translate="yes" xml:space="preserve">
          <source>The view should use the delegate to open an editor on the previous item in the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac159f51acaa3ac70171a432ec46a905be4258fd" translate="yes" xml:space="preserve">
          <source>The view supports both dragging and dropping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ed4e96cb372b7ae83c63b550b854bc3b55dd0d" translate="yes" xml:space="preserve">
          <source>The view supports dragging of its own items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04328e0c4633e98f265a0d41883d13c50fffe64" translate="yes" xml:space="preserve">
          <source>The view takes ownership over the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2094c2fd33a80acfd006c6548a588e4c26e27258" translate="yes" xml:space="preserve">
          <source>The view this view is currently inspecting, if any. Setting it will navigate to an internal URL with the developer tools of the view set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbcc6fc42ab715ef0a69bcca020162eec381406" translate="yes" xml:space="preserve">
          <source>The view will automatically resize the root item to the size of the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac9318b036cab792126c27e23ad2a4255f6d217" translate="yes" xml:space="preserve">
          <source>The view will create a new delegate for each item in the model. Note that the delegate is able to access the model's &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;portrait&lt;/code&gt; data directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46e02f2188efdccade00d08b77492e2a749dc89" translate="yes" xml:space="preserve">
          <source>The view will scroll the contents one item at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59139a4c2b442b6dac0b55d18952e556b2836680" translate="yes" xml:space="preserve">
          <source>The view will scroll the contents one pixel at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596dffef8fb1ec4d84c3139c8371656d1e5237db" translate="yes" xml:space="preserve">
          <source>The view will update itself autmiatically whenever the active stack of the group changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137bee31f681a0a6f49ec6b761b4bee1eb797981" translate="yes" xml:space="preserve">
          <source>The view's &lt;a href=&quot;qml-qtquick-gridview#model-prop&quot;&gt;model&lt;/a&gt; changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd2ce53c92c801a667f237240eca2683d76a7c2" translate="yes" xml:space="preserve">
          <source>The view's &lt;a href=&quot;qml-qtquick-gridview#model-prop&quot;&gt;model&lt;/a&gt; is &lt;a href=&quot;https://doc.qt.io/qt-5.13/qabstractitemmodel-obsolete.html#reset&quot;&gt;reset&lt;/a&gt;, if the model is a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; subclass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837c1da3fc3457452f98f9cfc6e0da2b8e3f0aee" translate="yes" xml:space="preserve">
          <source>The view's &lt;a href=&quot;qml-qtquick-listview#model-prop&quot;&gt;model&lt;/a&gt; changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce7d7539cf59ea28781f52a22bff9ad35259d39" translate="yes" xml:space="preserve">
          <source>The view's &lt;a href=&quot;qml-qtquick-listview#model-prop&quot;&gt;model&lt;/a&gt; is &lt;a href=&quot;https://doc.qt.io/qt-5.13/qabstractitemmodel-obsolete.html#reset&quot;&gt;reset&lt;/a&gt;, if the model is a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; subclass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b466ee941ed0dcee0f47bd37b2541a24f9fb48" translate="yes" xml:space="preserve">
          <source>The view's root index can be used to control how much of a hierarchical model is displayed. &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; provides a convenience function that returns a suitable model index for a path to a directory within the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceb3d5ebf7b008eb2587eb008056f238f9912ff" translate="yes" xml:space="preserve">
          <source>The viewfinder is not active in the loaded state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f8276f7ec827d668f89f4604c017783370d991" translate="yes" xml:space="preserve">
          <source>The viewfinder stream was started (even if not visible)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f22145210ca375319f5007f6b7dd6a7312c3ec" translate="yes" xml:space="preserve">
          <source>The viewfinder stream was stopped</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3307fbe1ed5e97409157e65ddff4805fb8c1a9a" translate="yes" xml:space="preserve">
          <source>The viewport determines the current &quot;window&quot; on the &lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;. In other words, it clips it and the size of the viewport tells you how much of the content area is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d635bc137021deefd31fef4895f9252e0821fd8" translate="yes" xml:space="preserve">
          <source>The viewport is the region of a video frame that is actually displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13f59a65f222e8b6f065f7598955c17519b5eb9" translate="yes" xml:space="preserve">
          <source>The viewport rectangle is part of the view transformation. The viewport specifies the device coordinate system. Its sister, the &lt;a href=&quot;qpainter#window&quot;&gt;window&lt;/a&gt;(), specifies the logical coordinate system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fada9cfa9d80019b62d09a83976ab06d4c7cc11a" translate="yes" xml:space="preserve">
          <source>The viewport, &quot;window&quot; and transformation matrix determine how logical &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; coordinates map to the paint device's physical coordinates. By default the world transformation matrix is the identity matrix, and the &quot;window&quot; and viewport settings are equivalent to the paint device's settings, i.e. the world, &quot;window&quot; and device coordinate systems are equivalent, but as we have seen, the systems can be manipulated using transformation operations and window-viewport conversion. The illustration above describes the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281c7c2fbe729e937caa911f675f49d82132f573" translate="yes" xml:space="preserve">
          <source>The views are constructed in the same way as other widgets. Setting up a view to display the items in the model is simply a matter of calling its &lt;a href=&quot;qabstractitemview#setModel&quot;&gt;setModel()&lt;/a&gt; function with the directory model as the argument. We filter the data supplied by the model by calling the &lt;a href=&quot;qabstractitemview#setRootIndex&quot;&gt;setRootIndex()&lt;/a&gt; function on each view, passing a suitable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaa84dac0321441f77f5999a5a2284a0febefa4" translate="yes" xml:space="preserve">
          <source>The views handle dragging and flicking of their content, however they do not handle touch interaction with the individual delegates. In order for the delegates to react to touch input, e.g. to set the &lt;code&gt;currentIndex&lt;/code&gt;, a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; with the appropriate touch handling logic must be provided by the delegate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81587526da9f79bad0c9a66a553b186bd541f48d" translate="yes" xml:space="preserve">
          <source>The virtual &lt;a href=&quot;qobject#timerEvent&quot;&gt;timerEvent&lt;/a&gt;() function is called with the &lt;a href=&quot;qtimerevent&quot;&gt;QTimerEvent&lt;/a&gt; event parameter class when a timer event occurs. Reimplement this function to get timer events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829980dc63cb2776b2bfb230d649c0d2935f7803" translate="yes" xml:space="preserve">
          <source>The virtual &lt;a href=&quot;qsgnode#isSubtreeBlocked&quot;&gt;isSubtreeBlocked&lt;/a&gt;() function can be used to disable a subtree all together. Nodes in a blocked subtree will not be preprocessed() and not rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab4bc4111e61a1964e9f43364210a7941443b29" translate="yes" xml:space="preserve">
          <source>The virtual folder tag is mandatory and the folder name must not contain any slashes (/).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105806b0bf4c1e0260eab5284cfa40fd739e9c87" translate="yes" xml:space="preserve">
          <source>The virtual function is called before each invocation of &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401e92102e332132e118b85cc2295f0b3e2ba059" translate="yes" xml:space="preserve">
          <source>The virtual keyboard layouts system supports built-in layouts as well as custom layouts. The built-in layouts are embedded as &lt;a href=&quot;resources&quot;&gt;Qt Resources&lt;/a&gt; into the plugin binary. Custom layouts are located in the file system, so that they can be installed without recompiling the virtual keyboard itself, or they can be located in a resource file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e57a21832d3c167db63ec877f7e57f3e8a8d8d" translate="yes" xml:space="preserve">
          <source>The virtual keyboard searches for the keyboard layouts (per language) from a specific path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c61b208f9bf5fba9e10cb926970edccf65f481" translate="yes" xml:space="preserve">
          <source>The virtual keyboard styling system supports built-in styles as well as custom styles. The built-in styles are embedded as Qt Resources into the plugin binary and the custom styles are located in the file system and can be installed without recompiling the virtual keyboard itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c849e83a44314453508d43d4234edb1e511a277" translate="yes" xml:space="preserve">
          <source>The virtual loopback interface, which is assigned the loopback IP addresses (127.0.0.1, ::1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c669da3a8d884ffbf84d43149b3aec64a71a16" translate="yes" xml:space="preserve">
          <source>The virtual siblings are the screen instances sharing the same virtual desktop. They share a common coordinate system, and windows can freely be moved or positioned across them without having to be re-created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eee69b4eca2dc43cbe489f23c23a97cc25446b8" translate="yes" xml:space="preserve">
          <source>The virtualkeyboard module must be linked against the plugin:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa04d17edce3190f692947deb9f97b631824535" translate="yes" xml:space="preserve">
          <source>The visibility affects both the legend marker label and the icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d05de1a3cc34c2b339f4f60921f328bfd1ca107" translate="yes" xml:space="preserve">
          <source>The visibility of axis labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78310c1f66243a275382e073b2d558d76bc4438f" translate="yes" xml:space="preserve">
          <source>The visibility of data point labels. This property is &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b331b08cf39fdace3031cd6fcf4d2e829c4a03e8" translate="yes" xml:space="preserve">
          <source>The visibility of the axis line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1216608df441f8d77a828c7f29862fba470ad699" translate="yes" xml:space="preserve">
          <source>The visibility of the axis shades.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2c2ac849ea1d6d30d5dc0d69deff9688d9d493" translate="yes" xml:space="preserve">
          <source>The visibility of the axis title. By default, the value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818c0f60e8c2bbbd83fc4f42c8d7313272d6f537" translate="yes" xml:space="preserve">
          <source>The visibility of the axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb90ef7bbdd8c8a27a450d161929656d9c306e8" translate="yes" xml:space="preserve">
          <source>The visibility of the box outline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147f229fba54c0e9e5613a5e8d31da991c7714b6" translate="yes" xml:space="preserve">
          <source>The visibility of the candlestick body outlines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2987ca345d83a02d33e9082f9b5cdda7291b58" translate="yes" xml:space="preserve">
          <source>The visibility of the caps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d616af8cec67648d22f0a9b54a3a705be16726a" translate="yes" xml:space="preserve">
          <source>The visibility of the category is unspecified. If saving a category, the plugin will automatically set a default visibility to the category saved in the backend. This default is dependent on the plugin implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e7c03bf8e3eb8272ea7d730e6485dd6ce41279" translate="yes" xml:space="preserve">
          <source>The visibility of the category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39979083a6af4a6749c1c49453841da88f840a0b" translate="yes" xml:space="preserve">
          <source>The visibility of the grid lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae9bf9ee5de683c4a229df12eb0922777de5e39" translate="yes" xml:space="preserve">
          <source>The visibility of the group affects the visibility of each item in the group, except that explicitly hidden items are not visible even if the group is visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15257f89d29c575c71b794c7eb0bb2bb931d5988" translate="yes" xml:space="preserve">
          <source>The visibility of the item. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11b415f818e0cecda0b2ec02bb0f179f336fec6" translate="yes" xml:space="preserve">
          <source>The visibility of the labels in a bar series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b621f1ba91aed8320535efac19441033751f86f" translate="yes" xml:space="preserve">
          <source>The visibility of the minor grid lines. Applies only to axes that support minor grid lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa15b4f6a1792d77df895436db49ad08bc9c5179" translate="yes" xml:space="preserve">
          <source>The visibility of the place is unspecified, the default visibility of the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb066ca39a51e7be118883421092d2f4e7daf2e1" translate="yes" xml:space="preserve">
          <source>The visibility of the slice label. By default, the label is not visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a7780c77d645751f08683e279835abefb275d2" translate="yes" xml:space="preserve">
          <source>The visibility of the tab bar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671bc42b0e7cd4bd0ac07503ebaef5c92a15a5be" translate="yes" xml:space="preserve">
          <source>The visibility of the tab frame around contents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e04417239f15ce1b0e0670e1dcb9025768fa83" translate="yes" xml:space="preserve">
          <source>The visibility scope can be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5079b8570a30823c81b082d86d98e2033dcdebb6" translate="yes" xml:space="preserve">
          <source>The visible status of the column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0f0138b1de1eb96fd51c9b540dc8a18cf1dd97" translate="yes" xml:space="preserve">
          <source>The visual appearance of &lt;a href=&quot;qml-qt-labs-calendar-dayofweekrow&quot;&gt;DayOfWeekRow&lt;/a&gt; can be changed by implementing a &lt;a href=&quot;qml-qt-labs-calendar-dayofweekrow#delegate-prop&quot;&gt;custom delegate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aeeb4284eb60ff29ca68d54056e7adc453ed826" translate="yes" xml:space="preserve">
          <source>The visual appearance of &lt;a href=&quot;qml-qt-labs-calendar-monthgrid&quot;&gt;MonthGrid&lt;/a&gt; can be changed by implementing a &lt;a href=&quot;qml-qt-labs-calendar-monthgrid#delegate-prop&quot;&gt;custom delegate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882c40e4c85fb21b339cc5a84ccf860c2b5fc991" translate="yes" xml:space="preserve">
          <source>The visual appearance of &lt;a href=&quot;qml-qt-labs-calendar-weeknumbercolumn&quot;&gt;WeekNumberColumn&lt;/a&gt; can be changed by implementing a &lt;a href=&quot;qml-qt-labs-calendar-weeknumbercolumn#delegate-prop&quot;&gt;custom delegate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e88e8c3e3b677ae3474f175e3d156fc6ba4676" translate="yes" xml:space="preserve">
          <source>The visual appearance of the source has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d2bc8f0c4377083f96335fbd03f0d80b639b18" translate="yes" xml:space="preserve">
          <source>The visual appearance of the title bar and buttons is dependent on the &lt;a href=&quot;qstyle&quot;&gt;style&lt;/a&gt; in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67db3dc4e7f9b7d4736a9d25c9688170a6cc693d" translate="yes" xml:space="preserve">
          <source>The visual parent of an item may come under consideration in particular circumstances, as described in the sections below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc7ef3b1a04a7bea7c19017ab5da2f08869e662" translate="yes" xml:space="preserve">
          <source>The volume is scaled linearly from &lt;code&gt;0.0&lt;/code&gt; (silence) to &lt;code&gt;1.0&lt;/code&gt; (full volume). Values outside this range will be clamped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c0885779c0d83f0d9b7a280d0bfcce8c6be77f" translate="yes" xml:space="preserve">
          <source>The volume is scaled linearly, ranging from &lt;code&gt;0&lt;/code&gt; (silence) to &lt;code&gt;100&lt;/code&gt; (full volume).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94081a0348c3406e9e99ee3b6038579e56500806" translate="yes" xml:space="preserve">
          <source>The watermark, banner, and logo pixmaps are ignored by the &lt;a href=&quot;qwizard#WizardStyle-enum&quot;&gt;MacStyle&lt;/a&gt;. If the &lt;a href=&quot;qwizard#WizardPixmap-enum&quot;&gt;BackgroundPixmap&lt;/a&gt; is set, it is used as the background for the wizard; otherwise, a default &quot;assistant&quot; image is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8267f5741ae4214246ca756d17f08c894a67ab3f" translate="yes" xml:space="preserve">
          <source>The way Qt handles this platform difference is by letting widgets move the keyboard focus when the wheel is used. With the right focus policy on each widget, applications can work idiomatically correctly on Windows, &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, and X11.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dcad7b7677f6b4e9883a751bd1cda7572a59f86" translate="yes" xml:space="preserve">
          <source>The way collisions are detected is determined by applying</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51f41359450b0be51a0ed73198b1e99a2749dd0" translate="yes" xml:space="preserve">
          <source>The way items are selected is controlled by the widget's selection mode (&lt;a href=&quot;qabstractitemview#SelectionMode-enum&quot;&gt;QAbstractItemView::SelectionMode&lt;/a&gt;). This property controls whether the user can select one or many items and, in many-item selections, whether the selection must be a continuous range of items. The selection mode works in the same way for all of the above widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e34b7b5491ed4e7a69a9439c01a533dc1ebf3aa" translate="yes" xml:space="preserve">
          <source>The way that any given model handles dropped data depends on both its type (list, table, or tree) and the way its contents is likely to be presented to the user. Generally, the approach taken to accommodate dropped data should be the one that most suits the model's underlying data store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dc2b4d1218c972145bc381ad5cf4b720071af3" translate="yes" xml:space="preserve">
          <source>The way the search is performed is defined by the specified match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508c878269853c4074dd681f7b63f7ba95ec90af" translate="yes" xml:space="preserve">
          <source>The way the text is rendered is independent of whether or not the format has a valid anchor defined. Use &lt;a href=&quot;qtextcharformat#setAnchorHref&quot;&gt;setAnchorHref&lt;/a&gt;(), and optionally &lt;a href=&quot;qtextcharformat#setAnchorNames&quot;&gt;setAnchorNames&lt;/a&gt;() to create a hypertext link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0232d198f38acc9630464d9b7127366a8b4e0615" translate="yes" xml:space="preserve">
          <source>The way the text property should be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98c13f135b86d2bff14a8689692bb20a17835a4" translate="yes" xml:space="preserve">
          <source>The waypoint metadata. This property is read only. If the waypoint is defined by the user, these can be set by using MapParameters. If the waypoint comes from the engine via signals, or as part of a read-only route query, the waypoint is intended to be read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4938736a05ed9ef39eb848c78246b73851d16619" translate="yes" xml:space="preserve">
          <source>The waypoint's coordinate. The default value is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c6a89089128a34785a87705d037a6ca65787b3" translate="yes" xml:space="preserve">
          <source>The waypoints should be given in order from origin to destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed85cda57fd674a6cafc9d9811187df05dbdf8e" translate="yes" xml:space="preserve">
          <source>The web channel instance used by this view. This channel is automatically using the internal &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt; transport mechanism over Chromium IPC, and exposed in the javascript context of the page it is rendering as &lt;code&gt;qt.webChannelTransport&lt;/code&gt;. This transport object is used when instantiating the JavaScript counterpart of &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; using the &lt;a href=&quot;qtwebchannel-javascript&quot;&gt;Qt WebChannel JavaScript API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bbf724625f530fc2e9ccfd0ed781a470f84d17" translate="yes" xml:space="preserve">
          <source>The web page is saved to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e653bdf8b776cbb56112618b7f392ac51c35a0c" translate="yes" xml:space="preserve">
          <source>The week number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb168913d21d540cf2e15ed5dd513e7c8a30e68" translate="yes" xml:space="preserve">
          <source>The weight can be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c726b329388d02ed216d441eefebf002b439caf0" translate="yes" xml:space="preserve">
          <source>The weight field specifies a relative weight for entries with the same priority. Entries with higher weights should be selected with a higher probability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aedd825e6bdb5e520a07a09766ffdcdc455e966b" translate="yes" xml:space="preserve">
          <source>The weight of a font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5db6e7e6872da2c397674e28d7aefddd648bdd" translate="yes" xml:space="preserve">
          <source>The weight of the font info that has been resolved for the current font and &lt;a href=&quot;qml-qtquick-text#fontSizeMode-prop&quot;&gt;fontSizeMode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9c4188af18bd0a188676b3a1d03dc14dbb82e5" translate="yes" xml:space="preserve">
          <source>The weight of the font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5708817eee2db1bc829b5ed92a25123861836694" translate="yes" xml:space="preserve">
          <source>The weighted list of transitions valid for this group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a1240f062b4ac91a4c5dbadb3a984ef22f58ee" translate="yes" xml:space="preserve">
          <source>The white balance preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71aedf1237fd44bf7b62b8e233e7ebaafea0e679" translate="yes" xml:space="preserve">
          <source>The white list is used for both connection and scan requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c436af4bd3b8fa326a0c2c00fa865620e0fd7879" translate="yes" xml:space="preserve">
          <source>The white list is used when handling connection requests, but is ignored for scan requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee8ccce0addf97745b12758368ebfa2460099c0" translate="yes" xml:space="preserve">
          <source>The white list is used when handling scan requests, but is ignored for connection requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d4a7e1718f52c2f84df6b461169c4f1c0697a7" translate="yes" xml:space="preserve">
          <source>The whitespace mode used to display normal word wrapped text in paragraphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa5b7ad19f18dd076d4b15b35feacba0c4eba5d" translate="yes" xml:space="preserve">
          <source>The whole application is contained within the &lt;code&gt;main()&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3ece82f2f99e7e36eb1f5ec2f084909d846186" translate="yes" xml:space="preserve">
          <source>The whole connection can be selected by clicking on any of its path segments. Once selected, a connection can be deleted with the &lt;b&gt;Delete&lt;/b&gt; key, ensuring that it will not be set up in the UI file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d17555fe66c3c921dfa6670421b0fec63d36d29" translate="yes" xml:space="preserve">
          <source>The widest tickmark will determine the space set aside for all tickmarks. For this reason, the &lt;code&gt;implicitWidth&lt;/code&gt; of each tickmark should be greater than or equal to that of each minor tickmark. If you need minor tickmarks to have greater widths than the major tickmarks, set the larger width in a child item of the &lt;a href=&quot;qml-qtquick-controls-styles-gaugestyle#minorTickmark-prop&quot;&gt;minorTickmark&lt;/a&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fb28787cc8a72bfc359faf8c4850482eb73d5e" translate="yes" xml:space="preserve">
          <source>The widget accepts input method input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e12d9bb0bbbe994dfd9649e13297675422a410" translate="yes" xml:space="preserve">
          <source>The widget box contains objects in a number of different categories, all of which can be placed on the form as required. The only objects that require a little more preparation are the &lt;b&gt;Container&lt;/b&gt; widgets. These are described in further detail in the &lt;a href=&quot;designer-using-containers#&quot;&gt;Using Containers in Qt Designer&lt;/a&gt; chapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0940bbe6c53f6a61b0e5af23136f56ee92b5b517" translate="yes" xml:space="preserve">
          <source>The widget box provides a selection of standard Qt widgets, layouts, and other objects that can be used to create user interfaces on forms. Each of the categories in the widget box contain widgets with similar uses or related features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71570c8471027c306bb3d2948a7ec7dde3879b8" translate="yes" xml:space="preserve">
          <source>The widget box provides common widgets and layouts that are used to design components. These are grouped into categories that reflect their uses or features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7c5b8956ec545814dc3f2dfdc7d4b36265846f" translate="yes" xml:space="preserve">
          <source>The widget can grow beyond its size hint if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdaec705bf8e0eb55d7996b601e0aad9b00c5fd" translate="yes" xml:space="preserve">
          <source>The widget can shrink below its size hint if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067cb44bcdb09ad1d86334b8df852100d5741099" translate="yes" xml:space="preserve">
          <source>The widget cannot be resized to a larger size than the maximum widget size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0539e826227f1e6ed6bdc6adb48bece1e2a49ac" translate="yes" xml:space="preserve">
          <source>The widget cannot be resized to a smaller size than the minimum widget size. The widget's size is forced to the minimum size if the current size is smaller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60a9caf4004d7f2a59a548a72b576ccda8b3235" translate="yes" xml:space="preserve">
          <source>The widget features a context menu that is tailored to the element at hand, and includes actions useful in a browser. For a custom context menu, or for embedding actions in a menu or toolbar, the individual actions are available via &lt;a href=&quot;qwebengineview#pageAction&quot;&gt;pageAction&lt;/a&gt;(). The web view maintains the state of the returned actions, but allows modification of action properties such as &lt;a href=&quot;qaction#text-prop&quot;&gt;text&lt;/a&gt; or &lt;a href=&quot;qaction#icon-prop&quot;&gt;icon&lt;/a&gt;. The action semantics can also be triggered directly through &lt;a href=&quot;qwebengineview#triggerPageAction&quot;&gt;triggerPageAction&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de495f13f94ef4c7738714147a2b3553951f7b70" translate="yes" xml:space="preserve">
          <source>The widget flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6bccafbbd7f3fca25990750acf269795b2cbf4" translate="yes" xml:space="preserve">
          <source>The widget flags argument,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362754f93811977c5fffa702873e66736d7ef2b9" translate="yes" xml:space="preserve">
          <source>The widget is a window (i.e top level widget)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d1c0a85d9ecfe225a1d79d1c32703f865a0a57" translate="yes" xml:space="preserve">
          <source>The widget is already visible by default; you do not have to call &lt;a href=&quot;qgraphicsitem#show&quot;&gt;show&lt;/a&gt;() to display the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7fccbf0d966fb17b5067d1fe41c76ae11f01f0" translate="yes" xml:space="preserve">
          <source>The widget is displayed to the left of the text when using layout direction &lt;code&gt;Qt::LeftToRight&lt;/code&gt; or to the right when using &lt;code&gt;Qt::RightToLeft&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f658c870f657a01f4d7897ce3c34c9f90cb28e0" translate="yes" xml:space="preserve">
          <source>The widget is displayed to the right of the text when using layout direction &lt;code&gt;Qt::LeftToRight&lt;/code&gt; or to the left when using &lt;code&gt;Qt::RightToLeft&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43612e99c94a7f719e608ac89cc611e5f9c4b6c6" translate="yes" xml:space="preserve">
          <source>The widget is initialized with the current month and year, and the currently selected date is today.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d5cf54f55fcc4a32dba40eed97ab733afe744f" translate="yes" xml:space="preserve">
          <source>The widget is initialized with the current month and year, but &lt;a href=&quot;qcalendarwidget&quot;&gt;QCalendarWidget&lt;/a&gt; provides several public slots to change the year and month that is shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0692d4ee5436d924129fa28b270430efa324904f" translate="yes" xml:space="preserve">
          <source>The widget is located to the far left of the first permanent widget (see &lt;a href=&quot;qstatusbar#addPermanentWidget&quot;&gt;addPermanentWidget&lt;/a&gt;()) and may be obscured by temporary messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbbc99fc96fc0244233939e6204b6ea4fad9920" translate="yes" xml:space="preserve">
          <source>The widget is not constrained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633057c52f31cc135357d659f3f91ed5af3acd13" translate="yes" xml:space="preserve">
          <source>The widget is passed as the last argument in case the style needs it to perform special effects (such as animated default buttons on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;), but it isn't mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e284b91e1dfc1359694b97db9a9a363677395a1" translate="yes" xml:space="preserve">
          <source>The widget is polished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d414a0a0707b078dc19ea8f51b25bd2fd49605b9" translate="yes" xml:space="preserve">
          <source>The widget is reparented away from the &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; to the native menu view. If you show the menu in some other place (e.g. as a popup menu), the widget will not be there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616b477205f938dcd023166b3e2caf0e493874b7" translate="yes" xml:space="preserve">
          <source>The widget is the atom of the user interface: it receives mouse, keyboard and other events from the window system, and paints a representation of itself on the screen. Every widget is rectangular, and they are sorted in a Z-order. A widget is clipped by its parent and by the widgets in front of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f136acbdffe42fcff52dcbed7c9c54a9a088a2a6" translate="yes" xml:space="preserve">
          <source>The widget parent has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0459d8cedf1953035596404ecbaf9ef3322e9c1e" translate="yes" xml:space="preserve">
          <source>The widget parent is about to change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f82a10e060318dccf2c19f58b283418db2f8dfc" translate="yes" xml:space="preserve">
          <source>The widget should accept the event if it has &quot;What's This?&quot; help (&lt;a href=&quot;qhelpevent&quot;&gt;QHelpEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7e17c7c643051996c1245215f826fbd28d0f40" translate="yes" xml:space="preserve">
          <source>The widget should be polished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00ec8f192c57457097e4b31f32750a7fa06bbff" translate="yes" xml:space="preserve">
          <source>The widget should be queued to be repainted at a later time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f9b8beac5e272fb81cc2fd2ac6a292fcf8559c" translate="yes" xml:space="preserve">
          <source>The widget should be repainted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f44faeb7c5ea449cd050484b3e2282e6a140e5" translate="yes" xml:space="preserve">
          <source>The widget should examine the list of attributes to apply to the preedit string. It has to understand at least the &lt;a href=&quot;qinputmethodevent#AttributeType-enum&quot;&gt;TextFormat&lt;/a&gt; and Cursor attributes and render them as specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74f043b17bfff08a5a39e6a0c9353399deae057" translate="yes" xml:space="preserve">
          <source>The widget should get as much space as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab975624c83dae5562cda7f222146f453856c39" translate="yes" xml:space="preserve">
          <source>The widget should reveal &quot;What's This?&quot; help (&lt;a href=&quot;qhelpevent&quot;&gt;QHelpEvent&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04420fa91fa9cf9ae1b4c07b68f8fa73588ad5e4" translate="yes" xml:space="preserve">
          <source>The widget will be erased and receive a paint event immediately after processing the resize event. No drawing need be (or should be) done inside this handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53281f931b4676ce18b89be4d719984f1808080" translate="yes" xml:space="preserve">
          <source>The widget will get an event of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::LayoutRequest&lt;/a&gt; when the layout needs to be recalculated. Reimplement &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;() to handle &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::LayoutRequest&lt;/a&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a540829c8bc0980902882b8194f2fbb8ea67f6" translate="yes" xml:space="preserve">
          <source>The widget's &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#screenGeometry&quot;&gt;screenGeometry&lt;/a&gt;() function provides information about the geometry of the available screens with. The number of screens available is returned by &lt;a href=&quot;qdesktopwidget#screenCount-prop&quot;&gt;screenCount&lt;/a&gt;, and the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#screenCountChanged&quot;&gt;screenCountChanged&lt;/a&gt;() signal is emitted when screens are added or removed. The screen number that a particular point or widget is located in is returned by &lt;a href=&quot;qdesktopwidget#screenNumber&quot;&gt;screenNumber&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a96d84ebe76f431044c41541a1bd2892fb6ed0" translate="yes" xml:space="preserve">
          <source>The widget's &lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt; property will be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95481710623296ca5ba0987e7d3918d9651d3a2e" translate="yes" xml:space="preserve">
          <source>The widget's background rectangle, to use in conjunction with &lt;code&gt;background-position&lt;/code&gt; and &lt;code&gt;background-image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0c3fd04d0f041fcca9cfe43a21354366d56348" translate="yes" xml:space="preserve">
          <source>The widget's bottom margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab857af5807c0ee6c9200d7d84448cfc5facaf7" translate="yes" xml:space="preserve">
          <source>The widget's bottom padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2302b801537244df13efb1ec183ef60a49e7dc6" translate="yes" xml:space="preserve">
          <source>The widget's cursor has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19f7fa9909a37bdfcc948888c7a213eab5bb220" translate="yes" xml:space="preserve">
          <source>The widget's display and the ability to copy or drag the text is affected by this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60aa2872fd84ab8f13ecc62fb2b6f2b2f6f65f2" translate="yes" xml:space="preserve">
          <source>The widget's dragMoveEvent() can be used to restrict drops to certain parts of the widget by only accepting the proposed drop actions when the cursor is within those areas. For example, the following code accepts any proposed drop actions when the cursor is over a child widget (&lt;code&gt;dropFrame&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5b5b0fa3cd2923e59720e180643dcce5d8def2" translate="yes" xml:space="preserve">
          <source>The widget's layout direction determines the order in which the layout manager horizontally arranges subwidgets of this widget. The default value depends on the language and locale of the application, and is typically in the same direction as words are read and written. With &lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt::LeftToRight&lt;/a&gt;, the layout starts placing subwidgets from the left side of this widget towards the right. &lt;a href=&quot;qt#LayoutDirection-enum&quot;&gt;Qt::RightToLeft&lt;/a&gt; does the opposite - the layout will place widgets starting from the right edge moving towards the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692f3ca542c9a8e86cd1e1c4c89d8efe684d82b7" translate="yes" xml:space="preserve">
          <source>The widget's left margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c3d477621096d1ed5c3975e09df872b3b79287" translate="yes" xml:space="preserve">
          <source>The widget's left padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5f07764745071e91b2937fcb445c2dd80028b8" translate="yes" xml:space="preserve">
          <source>The widget's margins. Equivalent to specifying &lt;code&gt;margin-top&lt;/code&gt;, &lt;code&gt;margin-right&lt;/code&gt;, &lt;code&gt;margin-bottom&lt;/code&gt;, and &lt;code&gt;margin-left&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39f266fc3e81df6cbdcd134c7245b2176eace78" translate="yes" xml:space="preserve">
          <source>The widget's or a subcontrol's maximum height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde2154aa25eb8445d2cef07270537ef8d520651" translate="yes" xml:space="preserve">
          <source>The widget's or a subcontrol's maximum width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3bd7f72f99922bf972665417c48f24859c2131" translate="yes" xml:space="preserve">
          <source>The widget's or a subcontrol's minimum height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906a9921b3f89fa2430650beda1b6608468ded5a" translate="yes" xml:space="preserve">
          <source>The widget's or a subcontrol's minimum width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d9b08d790a2020189878640c05dfa866926d94" translate="yes" xml:space="preserve">
          <source>The widget's padding. Equivalent to specifying &lt;code&gt;padding-top&lt;/code&gt;, &lt;code&gt;padding-right&lt;/code&gt;, &lt;code&gt;padding-bottom&lt;/code&gt;, and &lt;code&gt;padding-left&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae528a8cce0b8776aca6f455819ebe0ec7f82811" translate="yes" xml:space="preserve">
          <source>The widget's rectangle, in which the &lt;code&gt;background&lt;/code&gt; is drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546445914ba088d2a76221d9cc0e1909b4417092" translate="yes" xml:space="preserve">
          <source>The widget's right margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8c85978a5960dd254dbcb2b616d94cf2fbdfd0" translate="yes" xml:space="preserve">
          <source>The widget's right padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94bca806248cd81b1088fa603be95f9155a283d" translate="yes" xml:space="preserve">
          <source>The widget's size hint is ignored. The widget will get as much space as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9786cd667ce0263c8609a9bc830fb4e00432568" translate="yes" xml:space="preserve">
          <source>The widget's tooltip has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17fbebea636acd724d72d399ea31656f050e2c4" translate="yes" xml:space="preserve">
          <source>The widget's top margin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca36cacbceeae82d2491b4053c92c1a9b6d859bb" translate="yes" xml:space="preserve">
          <source>The widget's top padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f55e88a04c39379ab7ac1ea1ec24b3a9663f881" translate="yes" xml:space="preserve">
          <source>The widget's z-order has changed. This event is never sent to top level windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8394f7611dcc4a92b3aebf072a045b1267000a" translate="yes" xml:space="preserve">
          <source>The widgets are populated with with data from the row at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fea46cf945d4a8270acd85bc9d5912287bf827a" translate="yes" xml:space="preserve">
          <source>The widgets can be in a number of different states, which are defined by the &lt;a href=&quot;qstyle#StateFlag-enum&quot;&gt;State&lt;/a&gt; enum. Some of the state flags have different meanings depending on the widget, but others are common for all widgets like &lt;code&gt;State_Disabled&lt;/code&gt;. It is &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; that sets the common states with &lt;a href=&quot;qstyleoption#initFrom&quot;&gt;QStyleOption::initFrom&lt;/a&gt;(); the rest of the states are set by the individual widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3dd0f173d3aa208af6135c924dd87c3034656e" translate="yes" xml:space="preserve">
          <source>The widgets examples show how some of the widgets available in Qt might appear when configured to use the a particular style. Each style is only available on the respective platfom, and provides native look and feel by integrating to the platform theme. Thus, the final appearance varies depending on the active theme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bb5d3470575eefc030c948c9af11834cd89e9d" translate="yes" xml:space="preserve">
          <source>The width and color used to draw the border of the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02296365f029e66cdd37eedd7387d5deed695df2" translate="yes" xml:space="preserve">
          <source>The width and height of the icon in a widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfb90ccdefa661669552a01cda0619ae8814867" translate="yes" xml:space="preserve">
          <source>The width can be different on different dimensions, so you can for example omit drawing the frames on certain sides of the volume by setting the value for that dimension to zero. The values are fractions of the volume thickness in the same dimension. The values cannot be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bca9aab4fc3b59ee4977a0903ce64c568875bfa" translate="yes" xml:space="preserve">
          <source>The width in pixels the &lt;a href=&quot;qml-qtquick-particles-trailemitter#emitShape-prop&quot;&gt;emitShape&lt;/a&gt; is scaled to. If set to &lt;a href=&quot;qml-qtquick-particles-trailemitter&quot;&gt;TrailEmitter&lt;/a&gt;.ParticleSize, the width will be the current size of the particle being followed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6959597d0c1a705bc0f4d85133f9e7b3124bc1b" translate="yes" xml:space="preserve">
          <source>The width is calculated with the &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; that &lt;a href=&quot;qgraphicstextitem&quot;&gt;QGraphicsTextItem&lt;/a&gt; keeps internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75faf3ee3e27926acacaf090f8737244f1e1ce0" translate="yes" xml:space="preserve">
          <source>The width is in pixels and is independent of the zoom level of the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf08d4d51c03c2d84d78a9a7fc7079a254796811" translate="yes" xml:space="preserve">
          <source>The width is in pixels and is independent of the zoom level of the map. The default values correspond to a black border with a width of 1 pixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88479f02bbcd3b233e1e5ebc0282c6a1a7516986" translate="yes" xml:space="preserve">
          <source>The width of a horizontal ruler element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73814b2851f1bee334482033e41d423c24be41d5" translate="yes" xml:space="preserve">
          <source>The width of a split item with &lt;code&gt;fillWidth&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; is still restricted within its &lt;a href=&quot;qml-qtquick-controls2-splitview#minimumWidth-attached-prop&quot;&gt;minimumWidth&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-splitview#maximumWidth-attached-prop&quot;&gt;maximumWidth&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9565cd1a822f78b68fa2626f1ed589902dfe36" translate="yes" xml:space="preserve">
          <source>The width of a subcontrol (or a widget in some cases).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2cc121030d39b824e2a5dd6b1f1f60ff039bea" translate="yes" xml:space="preserve">
          <source>The width of the 3D texture defining the volume content in pixels. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec3a815b8155b3505edd2f16d9c1913b2a1de5d" translate="yes" xml:space="preserve">
          <source>The width of the &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cacc32ad4c6623d0f48fe3f3db3fcaf0540675" translate="yes" xml:space="preserve">
          <source>The width of the border line. By default, the width is 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01b9a55ea11b6189c66c4ac05d97b6b17b70598" translate="yes" xml:space="preserve">
          <source>The width of the border's bottom edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f129cbd3110086d8de69ade478bdc4d11030ad7" translate="yes" xml:space="preserve">
          <source>The width of the border's left edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddc60d0dce571fa7c2e98bdb67987c4fd1f79e2" translate="yes" xml:space="preserve">
          <source>The width of the border's right edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5769eb51156fd88d7d573aaa411d3239cf9f6b08" translate="yes" xml:space="preserve">
          <source>The width of the border's top edge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74ead5d24e9a874f0b6654adf07ef2f8aca8808" translate="yes" xml:space="preserve">
          <source>The width of the border. Equivalent to setting &lt;code&gt;border-top-width&lt;/code&gt;, &lt;code&gt;border-right-width&lt;/code&gt;, &lt;code&gt;border-bottom-width&lt;/code&gt;, and &lt;code&gt;border-left-width&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb913b6bc4fae077395d77cd6f194c703c3743f" translate="yes" xml:space="preserve">
          <source>The width of the box-and-whiskers item. The value indicates the relative width of the item within its category. The value can be between 0.0 and 1.0. Negative values are replaced with 0.0 and values greater than 1.0 are replaced with 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bfb09d5c6c8b8c251a24d984e4da797488c08b" translate="yes" xml:space="preserve">
          <source>The width of the cursor in a line edit or text edit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04482867921ab367eaaf726b1a846e5f24c75649" translate="yes" xml:space="preserve">
          <source>The width of the line. By default, the width is 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5239c3160adee2ffaa8ed061bd3aae3a91fe677e" translate="yes" xml:space="preserve">
          <source>The width of the object is fixed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df05c24ec8e81db8b676e0dcaa72da4614369c1e" translate="yes" xml:space="preserve">
          <source>The width of the object is in percentage of the maximum width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d701c4b071e1ba3750496cccab4372c28ebffa" translate="yes" xml:space="preserve">
          <source>The width of the object is variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4338b00a0a8fc6cb64745a4341e01e895b93983" translate="yes" xml:space="preserve">
          <source>The width of the paint device in default coordinate system units (e.g. pixels for &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; and &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;). See also &lt;a href=&quot;qpaintdevice#width&quot;&gt;width&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bf8d4b9bdba5f9291effa68537d47a0672b639" translate="yes" xml:space="preserve">
          <source>The width of the paint device in millimeters. See also &lt;a href=&quot;qpaintdevice#widthMM&quot;&gt;widthMM&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a069596ae138ed6a4d04d13685dd04543849f3b6" translate="yes" xml:space="preserve">
          <source>The width of the slice border. This is a convenience property for modifying the slice pen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad58778d23bdcc81f43bd4bd66364b885bcf9ab" translate="yes" xml:space="preserve">
          <source>The width of the text content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b60b015b797ec217aca6693f69a147e9179c037" translate="yes" xml:space="preserve">
          <source>The width of the tool bar frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e110b460c8f6525e778e70f4605246dad672739" translate="yes" xml:space="preserve">
          <source>The width of the week number column is calculated based on the maximum implicit width of the delegates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fe7aa5e5a8a80e7634a7ca34b7141126bf8604" translate="yes" xml:space="preserve">
          <source>The width returned is enough for at least one character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5d9cc19d1a01baeb629a2f8e8e7ba9a8f4af65" translate="yes" xml:space="preserve">
          <source>The width returned, in pixels, is usually enough for about 15 to 20 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b69320b48e15a588b109a34b51e2616281eb1c" translate="yes" xml:space="preserve">
          <source>The widths of the slice frame. The width can be different on different dimensions, so you can for example omit drawing the frames on certain sides of the volume by setting the value for that dimension to zero. The values are fractions of the volume thickness in the same dimension. The values cannot be negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632738fb3b7ff7eb54232cef66a2d04befce91ac" translate="yes" xml:space="preserve">
          <source>The wildcard &lt;code&gt;'*'&lt;/code&gt; can be used in a name test. To find all the attributes in the cookbook but select only the ones in the &lt;code&gt;xml&lt;/code&gt; namespace, use the &lt;code&gt;xml:&lt;/code&gt; namespace prefix but replace the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2263a59774e593d61834b2abed33687ed1a62bb" translate="yes" xml:space="preserve">
          <source>The window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29af3375ff5f55c5aa3ea10b80ed57793992d2f6" translate="yes" xml:space="preserve">
          <source>The window (general background) color of the current color group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05a03167fda8cf9b02d3befa3d22ddcf5d6fab2" translate="yes" xml:space="preserve">
          <source>The window attached to this style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bf15dc87c96bbabadf001cfe67248269a4adab" translate="yes" xml:space="preserve">
          <source>The window can be in a combination of several states. For example, if the window is both minimized and maximized, the window will appear minimized, but clicking on the task bar entry will restore it to the maximized state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b42e89f5d1bc207fceb8556596c37daf0e0d7b" translate="yes" xml:space="preserve">
          <source>The window container has a number of known limitations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5f278195546a5151706dd27a9eb525d7ef49aa" translate="yes" xml:space="preserve">
          <source>The window container is attached as a native child window to the toplevel window it is a child of. When a window container is used as a child of a &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; or &lt;a href=&quot;qmdiarea&quot;&gt;QMdiArea&lt;/a&gt;, it will create a &lt;a href=&quot;qwidget#native-widgets-vs-alien-widgets&quot;&gt;native window&lt;/a&gt; for every widget in its parent chain to allow for proper stacking and clipping in this use case. Creating a native window for the window container also allows for proper stacking and clipping. This must be done before showing the window container. Applications with many native child windows may suffer from performance issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d52b7d8243c616aac1ee2373d370755b1bb2666" translate="yes" xml:space="preserve">
          <source>The window container is created as a child of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0c46d5c32a774f6b0c5868240e527603c53460" translate="yes" xml:space="preserve">
          <source>The window fills the entire screen without any frame around it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e0f4b967290e374a6b5f2ec2edf035b384cd00" translate="yes" xml:space="preserve">
          <source>The window flags control the window's appearance in the windowing system, whether it's a dialog, popup, or a regular window, and whether it should have a title bar, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0c287d8b187373b708221933b7700b76485ed7" translate="yes" xml:space="preserve">
          <source>The window flags of the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7035f43cf705fbccdf8f3cc90c2bac32cdee37a4" translate="yes" xml:space="preserve">
          <source>The window for which this window is a transient pop-up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb5b86cc7efbeea0e6d6d10d9aae258d5853891" translate="yes" xml:space="preserve">
          <source>The window geometry the popup received in the configure event. Relative to the upper left corner of the parent surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5641256b1160d26b5f9d85a6d18caa3af7f6ca0a" translate="yes" xml:space="preserve">
          <source>The window has no state set (in normal state).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de25f0be83b568dbb8f926206e526cf93088bc3" translate="yes" xml:space="preserve">
          <source>The window icon might be used by the windowing system for example to decorate the window, and/or in the task switcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc14eb6fd5b1a0c612b3cf2b9b7eb86bb5447f5" translate="yes" xml:space="preserve">
          <source>The window identifier type depends on the underlying window system, see &lt;code&gt;qwindowdefs.h&lt;/code&gt; for the actual definition. If there is no widget with this identifier, &lt;code&gt;nullptr&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6886aa540eaf663cb9e6618f850c2ce44f0af2df" translate="yes" xml:space="preserve">
          <source>The window is activated according to the default behavior of the Windows operating system. This means the window will not be activated in some circumstances (most notably when the calling process is not the active process); only the taskbar entry will be flashed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309beb0bb77ddd491dc0b81f5aa1fe1761409d10" translate="yes" xml:space="preserve">
          <source>The window is always activated, even when the calling process is not the active process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94b3f1e13781c6a995d261733c967d43ede03c7" translate="yes" xml:space="preserve">
          <source>The window is blocked by a modal dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4973bc715b9665c3da3647454621da74cecd419e" translate="yes" xml:space="preserve">
          <source>The window is maximized with a frame around it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b88fdc665c2d36dcf32599ef1b7f82e86776ca" translate="yes" xml:space="preserve">
          <source>The window is minimized (i.e. iconified).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535b0d678e931601c13f6ef350e5042a184e6a90" translate="yes" xml:space="preserve">
          <source>The window is modal to a single window hierarchy and blocks input to its parent window, all grandparent windows, and all siblings of its parent and grandparent windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151048344c9697b128ef2927fa25b01d7ad6e6a8" translate="yes" xml:space="preserve">
          <source>The window is modal to the application and blocks input to all windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e29594c83596bea1b0b1e255f1197a9bc02d39" translate="yes" xml:space="preserve">
          <source>The window is modal to the entire scene and blocks input to all panels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d0b17747985c37300f30c656d5ed29f31cfe4c" translate="yes" xml:space="preserve">
          <source>The window is needed because the its pixel format will be queried. When the adoption is successful, &lt;a href=&quot;qopenglcontext#format&quot;&gt;QOpenGLContext::format&lt;/a&gt;() will return a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; describing this pixel format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1f2c59be16b5b21e5bcffb9d3e473ad71459dd" translate="yes" xml:space="preserve">
          <source>The window is not modal and does not block input to other windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa642ab6bffef2e9f54fd5e7d9a8cb81a51903bf" translate="yes" xml:space="preserve">
          <source>The window is not shown until &lt;a href=&quot;qwindow#visible-prop&quot;&gt;setVisible&lt;/a&gt;(true), &lt;a href=&quot;qwindow#show&quot;&gt;show&lt;/a&gt;(), or similar is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59f4ec9b4ee73aa19076f4f6744be469d745543" translate="yes" xml:space="preserve">
          <source>The window is not visible in any way, however it may remember a latent visibility which can be restored by setting AutomaticVisibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83151412d6df4c87e32ac9ccb6cf04adbc950043" translate="yes" xml:space="preserve">
          <source>The window is reduced to an entry or icon on the task bar, dock, task list or desktop, depending on how the windowing system handles minimized windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d97650c74bbf95325c05e55e9523a234df1b638" translate="yes" xml:space="preserve">
          <source>The window is the active window, i.e. it has keyboard focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6b80bf89c55848145c0a42cc73c92a0be97939" translate="yes" xml:space="preserve">
          <source>The window is unblocked after a modal dialog exited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec244ea0ae04750e681a0c1d4b872987f672766" translate="yes" xml:space="preserve">
          <source>The window manager may or may not choose to display any areas of the window not included in the mask, thus it is the application's responsibility to clear to transparent the areas that are not part of the mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453cdf9a827512644bc040f506df051457be1eb3" translate="yes" xml:space="preserve">
          <source>The window occupies one entire screen, and the titlebar is still visible. On most windowing systems this is the state achieved by clicking the maximize button on the toolbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88afed69eadd6f92e8d154515f8766e534193c90" translate="yes" xml:space="preserve">
          <source>The window occupies one entire screen, is not resizable, and there is no titlebar. On some platforms which do not support showing multiple simultaneous windows, this can be the usual visibility when the window is not hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c7580107a0f310e31e1dcb646728a60ca2aaf8" translate="yes" xml:space="preserve">
          <source>The window occupies part of the screen, but not necessarily the entire screen. This state will occur only on windowing systems which support showing multiple windows simultaneously. In this state it is possible for the user to move and resize the window manually, if WindowFlags permit it and if it is supported by the windowing system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ae1205db14896507605cc4041a0a600db10455" translate="yes" xml:space="preserve">
          <source>The window rectangle is part of the view transformation. The window specifies the logical coordinate system. Its sister, the &lt;a href=&quot;qpainter#viewport&quot;&gt;viewport&lt;/a&gt;(), specifies the device coordinate system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e397c2b05438bde4b4552f139e686d2884765be1" translate="yes" xml:space="preserve">
          <source>The window state before a window state change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caed26711e4a8794fabcd882fed1a240f27536c" translate="yes" xml:space="preserve">
          <source>The window system identifer for this native widget has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142ebd2523449805af1dae9822ccb153c3e8cc8d" translate="yes" xml:space="preserve">
          <source>The window system identifier (&lt;code&gt;WId&lt;/code&gt;) can be retrieved using the &lt;a href=&quot;qwidget#winId&quot;&gt;QWidget::winId&lt;/a&gt;() function. The rationale for using a window identifier and not a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, is to enable grabbing of windows that are not part of the application, window system frames, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b903a81d90f389708be63fea204e5723355810f" translate="yes" xml:space="preserve">
          <source>The window system made this window either active or inactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60376b734ce553c02941376725d9436f73f26517" translate="yes" xml:space="preserve">
          <source>The window takes ownership of the returned renderer object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9ba572b0cd0cb34cce0b1bf4ed44f53a801e6f" translate="yes" xml:space="preserve">
          <source>The window takes ownership over</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761bd74a908387aa3e3b6c668b7c96b261690405" translate="yes" xml:space="preserve">
          <source>The window text (general foreground) color of the current color group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd7acfc2f14985fa19f9d0526b0cbeb6a311fd8" translate="yes" xml:space="preserve">
          <source>The window title has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf746819828a64dad2b705693ccb24607401e9dd" translate="yes" xml:space="preserve">
          <source>The window title is set to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f43be696d7bf436d50c46183f3d6581f869aca" translate="yes" xml:space="preserve">
          <source>The window title might appear in the title area of the window decorations, depending on the windowing system and the window flags. It might also be used by the windowing system to identify the window in other contexts, such as in the task switcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb3b71f1164dd20d7eeb55b400b4f9df8b05157" translate="yes" xml:space="preserve">
          <source>The window title must contain a &quot;[*]&quot; placeholder, which indicates where the '*' should appear. Normally, it should appear right after the file name (e.g., &quot;document1.txt[*] - Text Editor&quot;). If the window isn't modified, the placeholder is simply removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f07717672b8dbee97edb27ec86b6271d76dcfa" translate="yes" xml:space="preserve">
          <source>The window will be embedded inside the parent window, its coordinates relative to the parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5067f7fe1967a2ddaa4ac061cb9b8565765098ef" translate="yes" xml:space="preserve">
          <source>The window's icon has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ed2969f359104115c0b03a805517ce32a4cc31" translate="yes" xml:space="preserve">
          <source>The window's title in the windowing system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8272dd405a5dc138ce31b30f17361e376115177e" translate="yes" xml:space="preserve">
          <source>The windowing system might not support size increments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e3102173104b89fb935304b0c261070fe36734" translate="yes" xml:space="preserve">
          <source>The windowing system might use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6865f0b406c8baf9dab7d37bd95617d4abac65a0" translate="yes" xml:space="preserve">
          <source>The windows are closed in random order, until one window does not accept the close event. The application quits when the last window was successfully closed; this can be turned off by setting &lt;a href=&quot;qguiapplication#quitOnLastWindowClosed-prop&quot;&gt;quitOnLastWindowClosed&lt;/a&gt; to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1eefe52f90e8c05772cb0e87c98af5c7679769" translate="yes" xml:space="preserve">
          <source>The windows are returned in the order in which they are stacked, with the top-most window being last in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2140c3a129706fad2b79ce83a127fe29bba29b04" translate="yes" xml:space="preserve">
          <source>The windows are returned in the order in which they were activated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608761829b2a5baa82ea8446182b0e16d0b93836" translate="yes" xml:space="preserve">
          <source>The windows are returned in the order of their creation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ab01dcc301a382807d7e0072a77abad854108d" translate="yes" xml:space="preserve">
          <source>The word ancestor here means a parent widget within the same window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b17caf876e6f096d0b12c1773382653161fa08a" translate="yes" xml:space="preserve">
          <source>The word candidate is from the default dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c341552830b899b32149339d587f39502a64e63a" translate="yes" xml:space="preserve">
          <source>The word candidate is from the user dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14c8373fa120e227e15adea77a3ee8928de7a41" translate="yes" xml:space="preserve">
          <source>The workspace should maximize the client area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c1aaceb205dd4ce3972c599c6e0fd264218a2f" translate="yes" xml:space="preserve">
          <source>The world ID defining which isolated world the script is executed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabb41add091cf15de901447942400c30b1d77e5" translate="yes" xml:space="preserve">
          <source>The world ID defining which isolated world the script is executed in. Besides these predefined IDs custom IDs can be used, but must be integers between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;256&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf52dc6728156d39ad119372194a952dc1459bdb" translate="yes" xml:space="preserve">
          <source>The world used by the page's web contents. It can be useful in order to expose custom functionality to web contents in certain scenarios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8681153b4e9e0921f12ec297b99957f0d56c0078" translate="yes" xml:space="preserve">
          <source>The write channel is implicitly opened when &lt;a href=&quot;qprocess#start&quot;&gt;start&lt;/a&gt;() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630d7a942a22f4255786aa136bbc6ba34a6120df" translate="yes" xml:space="preserve">
          <source>The writer of the media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c84310d8400224102adb32253c11b5eaa84fc68" translate="yes" xml:space="preserve">
          <source>The wrong way is to use the base class constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf592be58c6cc81c57435f1ef902a522f6fd43f" translate="yes" xml:space="preserve">
          <source>The x acceleration of the particle at the beginning of its lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa4c5a381da7d9977c3f8c6561dbfed85896dc8" translate="yes" xml:space="preserve">
          <source>The x component of the deformation vector along the X axis. &lt;a href=&quot;qml-qtquick-particles-imageparticle&quot;&gt;ImageParticle&lt;/a&gt; can draw particles across non-square shapes. It will draw the texture rectangle across the parallelogram drawn with the x and y deformation vectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae252aa78640b498daa2f6ed0a9e4a9be5367ece" translate="yes" xml:space="preserve">
          <source>The x coordinate of the particle at the beginning of its lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3223b0e58068c9edde115a7bf95df71f7bd05be6" translate="yes" xml:space="preserve">
          <source>The x coordinate of the screen within the virtual desktop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdd1eec5d5ce96fba817ee7c527c43dab0990e5" translate="yes" xml:space="preserve">
          <source>The x coordinate of the user action from where the context menu request originates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680a34912ef7770c3874ce1d36a8d9f672714afd" translate="yes" xml:space="preserve">
          <source>The x value of the data point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04162c3ab5affbcc3c3affbe775f09a8342b316" translate="yes" xml:space="preserve">
          <source>The x velocity of the particle at the beginning of its lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95947ac4eb61dcd38836549b6ba51dc5c12c16c8" translate="yes" xml:space="preserve">
          <source>The x-axis label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8a2d11184ecb705fbadef9722b59868aa8c071" translate="yes" xml:space="preserve">
          <source>The x-axis of the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8becab673d4a32da3d2c05122908151a880017d2" translate="yes" xml:space="preserve">
          <source>The x-axis used for the series, drawn on top of the chart view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e247f08727f9e5ed4269a238d2cc19bea431c8" translate="yes" xml:space="preserve">
          <source>The x-axis used for the series. If you leave both axisX and &lt;a href=&quot;qml-qtcharts-abstractbarseries#axisXTop-prop&quot;&gt;axisXTop&lt;/a&gt; undefined, a &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt; is created for the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff153a07b26fef6597c6f3656d3e612584ed1cee" translate="yes" xml:space="preserve">
          <source>The x-axis used for the series. If you leave both axisX and &lt;a href=&quot;qml-qtcharts-areaseries#axisXTop-prop&quot;&gt;axisXTop&lt;/a&gt; undefined, a value axis is created for the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41b218710b0d85525bd5d6535c71193444d686a" translate="yes" xml:space="preserve">
          <source>The x-axis used for the series. If you leave both axisX and &lt;a href=&quot;qml-qtcharts-boxplotseries#axisXTop-prop&quot;&gt;axisXTop&lt;/a&gt; undefined, a &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt; is created for the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014f40fb64be14850619c9d8e188684958c07543" translate="yes" xml:space="preserve">
          <source>The x-axis used for the series. If you leave both axisX and &lt;a href=&quot;qml-qtcharts-candlestickseries#axisXTop-prop&quot;&gt;axisXTop&lt;/a&gt; undefined, a value axis is created for the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3e1e031b0a76c96bad660b4617c47b94c73d9a" translate="yes" xml:space="preserve">
          <source>The x-axis used for the series. If you leave both axisX and &lt;a href=&quot;qml-qtcharts-xyseries#axisXTop-prop&quot;&gt;axisXTop&lt;/a&gt; undefined, a value axis is created for the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb16d0673f98426a6d373df1113cb002cf6106b0" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the data point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daddc355c1d85d4e4a96edd9b711f6a22da8e6c3" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b8e02ad8f593c9ee3c342edcfa3dbcec447089" translate="yes" xml:space="preserve">
          <source>The x-dimension index into the texture data indicating which vertical slice to show. Setting any dimension to negative indicates no slice or slice frame for that dimension is drawn. If all dimensions are negative, no slices or slice frames are drawn and the volume is drawn normally. Defaults to &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a2708dbe7ab866092bf701cbb4a984c3935ab3c" translate="yes" xml:space="preserve">
          <source>The y acceleration of the particle at the beginning of its lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5e2c3d1444f9b1c9190d0306402f5388bdbbb7" translate="yes" xml:space="preserve">
          <source>The y component of the deformation vector along the X axis. &lt;a href=&quot;qml-qtquick-particles-imageparticle&quot;&gt;ImageParticle&lt;/a&gt; can draw particles across non-square shapes. It will draw the texture rectangle across the parallelogram drawn with the x and y deformation vectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba26afc2ba46da1fce6ed04bc060570682a1342" translate="yes" xml:space="preserve">
          <source>The y component of the deformation vector along the Y axis. &lt;a href=&quot;qml-qtquick-particles-imageparticle&quot;&gt;ImageParticle&lt;/a&gt; can draw particles across non-square shapes. It will draw the texture rectangle across the parallelogram drawn with the x and y deformation vectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ce58e6dd3ade666bc97f0800bb36184c0d7a71" translate="yes" xml:space="preserve">
          <source>The y coordinate of the particle at the beginning of its lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63c8b2d8419fd618c5c3b4138e652b4c9546818" translate="yes" xml:space="preserve">
          <source>The y coordinate of the screen within the virtual desktop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ebc8ea7ce2b727a4b590f540baaddbef30447a" translate="yes" xml:space="preserve">
          <source>The y coordinate of the user action from where the context menu request originates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39f47a9ffce5974e4c4cbad68bd867121542f42" translate="yes" xml:space="preserve">
          <source>The y value of the data point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6588a9942497fbceab622360db01584fafcf4889" translate="yes" xml:space="preserve">
          <source>The y velocity of the particle at the beginning of its lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b47b676c9aa9633cbc86bdd5a22265ccbbabca1" translate="yes" xml:space="preserve">
          <source>The y-axis label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da2e9745f86c5ff176beb5de4a86b79d7346d70" translate="yes" xml:space="preserve">
          <source>The y-axis of the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab817e58f1961df021a6b45f5f97ebb8e998cffa" translate="yes" xml:space="preserve">
          <source>The y-axis used for the series, drawn to the right of the chart view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5accb8750727eb5f5434bab2c53ae555afaac210" translate="yes" xml:space="preserve">
          <source>The y-axis used for the series, drawn to the right on the chart view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d68b81f36218871943da44e2dd4bb85d9c984b9" translate="yes" xml:space="preserve">
          <source>The y-axis used for the series. If you leave both axisY and &lt;a href=&quot;qml-qtcharts-abstractbarseries#axisYRight-prop&quot;&gt;axisYRight&lt;/a&gt; undefined, a &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; is created for the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c1aaebe50c07328983ca429a8489c0658adefd" translate="yes" xml:space="preserve">
          <source>The y-axis used for the series. If you leave both axisY and &lt;a href=&quot;qml-qtcharts-areaseries#axisYRight-prop&quot;&gt;axisYRight&lt;/a&gt; undefined, a value axis is created for the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b2f4d3c3d18b01a4894411492a14640b189043" translate="yes" xml:space="preserve">
          <source>The y-axis used for the series. If you leave both axisY and &lt;a href=&quot;qml-qtcharts-boxplotseries#axisYRight-prop&quot;&gt;axisYRight&lt;/a&gt; undefined, a &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; is created for the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992d3d742f67732ed0ff9cfce4aa707f8f7610e9" translate="yes" xml:space="preserve">
          <source>The y-axis used for the series. If you leave both axisY and &lt;a href=&quot;qml-qtcharts-candlestickseries#axisYRight-prop&quot;&gt;axisYRight&lt;/a&gt; undefined, a value axis is created for the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1fa1b80b90bb82939ee0ca5b8a24710a43ef2a" translate="yes" xml:space="preserve">
          <source>The y-axis used for the series. If you leave both axisY and &lt;a href=&quot;qml-qtcharts-xyseries#axisYRight-prop&quot;&gt;axisYRight&lt;/a&gt; undefined, a value axis is created for the series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76772e6571c316658e5b1290d816652ca8f1802b" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the data point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d125d2a49e448a2ffa0cc4467c600f308dfb4e90" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00b09349b74b24e1105bd69d7ee803892aa0ca2" translate="yes" xml:space="preserve">
          <source>The y-dimension index into the texture data indicating which horizontal slice to show. Setting any dimension to negative indicates no slice or slice frame for that dimension is drawn. If all dimensions are negative, no slices or slice frames are drawn and the volume is drawn normally. Defaults to &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1def7ba56751c831db57ca991967221dea4b984d" translate="yes" xml:space="preserve">
          <source>The year as four digit number. If the year is negative, a minus sign is prepended in addition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc9a4d03a398c6f316b09690a5461b52b16b66c" translate="yes" xml:space="preserve">
          <source>The year as two digit number (00 to 99)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45376824575c40c58ea76daa229c945c38532f6b" translate="yes" xml:space="preserve">
          <source>The year of release of the media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833d8387061d50439942a8596c12cf6a4ccb9cdb" translate="yes" xml:space="preserve">
          <source>The z-axis label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86373e2f4596359fcbbd9e8f6b9c7f41d2db9b6" translate="yes" xml:space="preserve">
          <source>The z-dimension index into the texture data indicating which vertical slice to show. Setting any dimension to negative indicates no slice or slice frame for that dimension is drawn. If all dimensions are negative, no slices or slice frames are drawn and the volume is drawn normally. Defaults to &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896fd7a2d0900bab566d199cb6734daa1e1bc493" translate="yes" xml:space="preserve">
          <source>The zoom is set to a custom zoom value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45990648da0df9b9c787156094be6131ca9384fb" translate="yes" xml:space="preserve">
          <source>Theatre exposure mode. Since 5.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696bf6d96b03365591a843762a690a97d18982ac" translate="yes" xml:space="preserve">
          <source>Theatre mode. Since 5.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7edbb3e53267676265d7e1f4f6d7e6a333bb2a" translate="yes" xml:space="preserve">
          <source>Theme icons are referenced by a name, and regular icons by a source URL. Both &lt;code&gt;icon.name&lt;/code&gt; and &lt;code&gt;icon.source&lt;/code&gt; can be set to ensure that an icon will always be found. If the icon is found in the theme, it will always be used; even if &lt;code&gt;icon.source&lt;/code&gt; is also set. If the icon is not found in the theme, &lt;code&gt;icon.source&lt;/code&gt; will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae735fbe3bf25c43e09323d9f5d284b6ff864ab" translate="yes" xml:space="preserve">
          <source>Theme3D</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4231c0e53251101272331821ce9fd6bd90b107cc" translate="yes" xml:space="preserve">
          <source>Theme3D (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aef57aed64f69ba61021e46e8f0dc24d42e77d6" translate="yes" xml:space="preserve">
          <source>Theme3D QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71a9a7cce34799f923d5003a0f929fa1cce3b93" translate="yes" xml:space="preserve">
          <source>Theme3D.ambientLightStrength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee72b0a750cf2f2ee5470dc4eda5306e313e30c" translate="yes" xml:space="preserve">
          <source>Theme3D.backgroundColor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e38dfb21557c5999944e49b3e27723d7fa7bd2" translate="yes" xml:space="preserve">
          <source>Theme3D.backgroundEnabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189d4c2e3592b9620a9875b6c3d3efabdbaceacc" translate="yes" xml:space="preserve">
          <source>Theme3D.baseColors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3176e1bc86133515e41a64c976080c604c2adb" translate="yes" xml:space="preserve">
          <source>Theme3D.baseGradients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6cc0d0991b43ced2ece172ebef7da80a015145" translate="yes" xml:space="preserve">
          <source>Theme3D.colorStyle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d421b7c88cdc2a0f386735e6c9ae6ae5ef861e06" translate="yes" xml:space="preserve">
          <source>Theme3D.font</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500c5a91e6afaba14d350095693a703cdae0a84c" translate="yes" xml:space="preserve">
          <source>Theme3D.gridEnabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfe26e4664c1870d32745a271fcc7afe3d6779b" translate="yes" xml:space="preserve">
          <source>Theme3D.gridLineColor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c7f473484f4e5831b1072882ae8cc4d843ac6a" translate="yes" xml:space="preserve">
          <source>Theme3D.highlightLightStrength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29d51a72ecf86c3e7fe840f97049193b11190a4" translate="yes" xml:space="preserve">
          <source>Theme3D.labelBackgroundColor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209462dcbfdec696bd1567f71d8e6c689002f1c0" translate="yes" xml:space="preserve">
          <source>Theme3D.labelBackgroundEnabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8b45a06e881f111bdd23699601fb6e6980e135" translate="yes" xml:space="preserve">
          <source>Theme3D.labelBorderEnabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806782f3d78da5e1a4c4b110e92bc8312bf0cd66" translate="yes" xml:space="preserve">
          <source>Theme3D.labelTextColor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6126c7ccac1fb4f18043031f1e25a8ed93280bc" translate="yes" xml:space="preserve">
          <source>Theme3D.lightColor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa7c8b7162924183f3ff7dc9d8de5a06d073864" translate="yes" xml:space="preserve">
          <source>Theme3D.lightStrength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701a1c13b58876b605b6f1a140417db38abf60c8" translate="yes" xml:space="preserve">
          <source>Theme3D.multiHighlightColor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4aba52ee456878c02417511bc8765055faff3cf" translate="yes" xml:space="preserve">
          <source>Theme3D.multiHighlightGradient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc14fd31ee58317fdb697965ff2de5cbc01a5442" translate="yes" xml:space="preserve">
          <source>Theme3D.singleHighlightColor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b2d14cb4e3500503327b7313c93a0065a5c020" translate="yes" xml:space="preserve">
          <source>Theme3D.singleHighlightGradient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbff38389ce0139669970cb3104e6bf86edf9b1e" translate="yes" xml:space="preserve">
          <source>Theme3D.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada008d972257dbf666c86e350a106c4e1d297d2" translate="yes" xml:space="preserve">
          <source>Theme3D.windowColor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ecfa5b732efb8d2d194c734f325ec568ebc913" translate="yes" xml:space="preserve">
          <source>ThemeColor (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04451c71c3d36bc783d1fc2aad74fa775ec86a8f" translate="yes" xml:space="preserve">
          <source>ThemeColor QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6459aa98a24abf4a27b3018e1c2a889c09d817f" translate="yes" xml:space="preserve">
          <source>ThemeColor.color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6f826f75d0ed97cc0aa3b9ca84ea0b48f73994" translate="yes" xml:space="preserve">
          <source>Themes can be created from scratch by using the &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Theme3D.ThemeUserDefined&lt;/a&gt; enum value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc38f4b62e12e3d4211b2c94b17264f8e44a3af" translate="yes" xml:space="preserve">
          <source>Themes can be created from scratch using the &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;ThemeUserDefined&lt;/a&gt; enum value. Creating a theme using the default constructor produces a new user-defined theme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f5cf06248ce9809e34ceebb6a571da506b5f3d" translate="yes" xml:space="preserve">
          <source>Then call &lt;a href=&quot;qstaticbytearraymatcher#indexIn&quot;&gt;indexIn&lt;/a&gt;() on the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; in which you want to search, just like with &lt;a href=&quot;qbytearraymatcher&quot;&gt;QByteArrayMatcher&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383abdd20e36bb058d92131140767c8a1bef0f8d" translate="yes" xml:space="preserve">
          <source>Then cloning an identity is a more complex operation than copying or assigning a value. We can see what this means in the Qt Object Model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05611e9fd5943c1fc4a51cf5dc8b92cf236229dc" translate="yes" xml:space="preserve">
          <source>Then instance can be used to find the available instances of Shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f032c0d610f7cabda144a167a350d790ad5bc295" translate="yes" xml:space="preserve">
          <source>Then invoke the &lt;a href=&quot;qml-qtlocation-place#save-method&quot;&gt;save()&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5c3bd717d436fa4fff03217b4edd0e790da89c" translate="yes" xml:space="preserve">
          <source>Then it will read through the sources specified in the &lt;a href=&quot;#sources&quot;&gt;&lt;code&gt;sources&lt;/code&gt;&lt;/a&gt;, and the ones located in the directories specified in the &lt;a href=&quot;#sourcedirs&quot;&gt;&lt;code&gt;sourcedirs&lt;/code&gt;&lt;/a&gt; variable (including all subdirectories), merging the documentation with the structure it retrieved from the header files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102617e836232138c636f20672e81fc879d34071" translate="yes" xml:space="preserve">
          <source>Then it will read through the sources specified in the &lt;a href=&quot;#sources-variable&quot;&gt;&lt;code&gt;sources&lt;/code&gt;&lt;/a&gt;, and the ones located in the directories specified in the &lt;a href=&quot;#sourcedirs-variable&quot;&gt;&lt;code&gt;sourcedirs&lt;/code&gt;&lt;/a&gt; varible (including all subdirectories), merging the documentation with the structure it retrieved from the header files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a747f578c0a17b797289c1059f32462a2eccc7c4" translate="yes" xml:space="preserve">
          <source>Then only one thread can modify &lt;code&gt;number&lt;/code&gt; at any given time and the result is correct. This is a trivial example, of course, but applies to any other case where things need to happen in a particular sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb65858c408152200de789e1b368621b12ea133" translate="yes" xml:space="preserve">
          <source>Then read it in with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8000bad5674b0f15dbed149655667c236aa09b" translate="yes" xml:space="preserve">
          <source>Then runs through the available window flags, creating a text that contains the names of the flags that matches the flags parameter, displaying the text in the widgets text editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8905dc36c39be294f0118bbac7e531b3b52ebf1" translate="yes" xml:space="preserve">
          <source>Then the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bee226a193a27e5612e8ebf7cdaaefb76cb9d7" translate="yes" xml:space="preserve">
          <source>Then the custom slot can check if the new value is within the range we want when a specified property, belonging to a particular widget, changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96cb10b8ee59f279477c63ab37c2a709c550852" translate="yes" xml:space="preserve">
          <source>Then the list of child nodes for the &quot;body&quot;-element will contain the node created by the &amp;amp;lt;h1&amp;amp;gt; tag and the node created by the &amp;amp;lt;p&amp;amp;gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9307fc06f292ab35d143feaa41ea450f2536c5" translate="yes" xml:space="preserve">
          <source>Then this model would be automatically loaded into the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; in the previous document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381e7b58503289117d6f14dbd95b1a7f3dd87e78" translate="yes" xml:space="preserve">
          <source>Then we create a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;, and give it a reasonable size using the &lt;a href=&quot;qwidget#size-prop&quot;&gt;QWidget::resize&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e29ca133b9a055ef29f6568dea5dd583a8f3f0" translate="yes" xml:space="preserve">
          <source>Then we define two functions that iterate over the layout: &lt;code&gt;itemAt()&lt;/code&gt; and &lt;code&gt;takeAt()&lt;/code&gt;. These functions are used internally by the layout system to handle deletion of widgets. They are also available for application programmers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf72ba83bc44c344fde553f82c5448c47ad3915e" translate="yes" xml:space="preserve">
          <source>Then we set a style sheet on a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c64ba86aa40bc6dacb1404778b5a576b81e009" translate="yes" xml:space="preserve">
          <source>Then when &lt;a href=&quot;qml-qtquick-xmllistmodel-xmllistmodel#reload-method&quot;&gt;reload()&lt;/a&gt; is called, the model will only add and reload items with a &quot;pubDate&quot; value that is not already present in the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb29bfa03053b4b8a21d9696e859c24b9a2da52f" translate="yes" xml:space="preserve">
          <source>Then you can instantiate it in QML, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed94c33786154697dd76d7fb149a31570e074d1" translate="yes" xml:space="preserve">
          <source>Then you can restore the original contents of the widget box by resetting the file name to the original file and calling &lt;a href=&quot;qdesignerwidgetboxinterface#load&quot;&gt;load&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed95b407c6a4c87d5ce9415edc55b2edc6735ef2" translate="yes" xml:space="preserve">
          <source>Then you can swap out files like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac172ab7f42b021ab249feb2e7c3ee18b690c42" translate="yes" xml:space="preserve">
          <source>Then you can use the two-argument form of the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e8f855c4b95e73344b2a0aaea3331637441276" translate="yes" xml:space="preserve">
          <source>Then you must create a class derived from &lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandler&lt;/a&gt;, and reimplement the &lt;a href=&quot;qwebengineurlschemehandler#requestStarted&quot;&gt;requestStarted&lt;/a&gt;() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e64180e200a587359a1187547f4a1b71b2129ef" translate="yes" xml:space="preserve">
          <source>Then, &lt;code&gt;20&lt;/code&gt; replaces &lt;code&gt;%2&lt;/code&gt; so the string becomes &lt;code&gt;&quot;Hello%320&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb7e3e5304cb29bec7a34a72f7cf8bb9f8c070d" translate="yes" xml:space="preserve">
          <source>Then, for the following &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#example-command&quot;&gt;\example&lt;/a&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177f7bec6c5b0df69ef9be0f5e117cce7b95d172" translate="yes" xml:space="preserve">
          <source>Then, in &lt;code&gt;main.qml&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488f90927a03379a22d43374fcb3b71cc6c49963" translate="yes" xml:space="preserve">
          <source>Then, in C++, we find that object and connect to its change signal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058ff83bf433fdce34d17ad46cb30fd2b9c0f837" translate="yes" xml:space="preserve">
          <source>Then, in another terminal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c4f5c6d0a3f4e630d67acf5a9feedff23afa7f" translate="yes" xml:space="preserve">
          <source>Then, the &lt;code&gt;author&lt;/code&gt; property could be read from &lt;code&gt;MyItem.qml&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24c0e1107fb504eaceec9ebad7813672f28ed3d" translate="yes" xml:space="preserve">
          <source>Then, the directory could be imported using the URL to the remote &lt;code&gt;mycomponents&lt;/code&gt; directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17a30431b11b6dd4530e405cec17b098794e651" translate="yes" xml:space="preserve">
          <source>Then, we create the transitions by using the &lt;a href=&quot;qstate#addTransition&quot;&gt;QState::addTransition&lt;/a&gt;() function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e6d3b8dc328629b4a4db0a4bdd2e42396ddbc1" translate="yes" xml:space="preserve">
          <source>Then, when an extension is required,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780990f80e200d84317e0947fb598d2388ade5f6" translate="yes" xml:space="preserve">
          <source>Then, when processing the &lt;a href=&quot;09-qdoc-commands-includingimages#image-command&quot;&gt;\image&lt;/a&gt; and &lt;a href=&quot;09-qdoc-commands-includingimages#inlineimage-command&quot;&gt;\inlineimage&lt;/a&gt; commands, QDoc will only search for files with extensions specified in the variable containing the list of output formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e45a9cc473f427dd912ef3cb9a3d24ab61414b" translate="yes" xml:space="preserve">
          <source>Then, when rendering with a one pixel wide pen the &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;'s boundary line will be rendered to the right and below the mathematical rectangle's boundary line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a2f2c48622011bec7a6950f391a32e317d5e9c" translate="yes" xml:space="preserve">
          <source>Then, when rendering with a one pixel wide pen the &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;'s boundary line will be rendered to the right and below the mathematical rectangle's boundary line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5ea1fe7564d952271052a7e940759e028bff4a" translate="yes" xml:space="preserve">
          <source>Then, with the above code, if &lt;code&gt;total&lt;/code&gt; is the number &quot;4321.56&quot; (four thousand three hundred and twenty one point fifty six); with English regional settings, (locale) the output is &quot;4,321.56&quot;; with German regional settings, the output is &quot;4.321,56&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957dd9f0875b7f2c42cdbbce3cd75a0508280d4c" translate="yes" xml:space="preserve">
          <source>There also exists a declarative &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebchannel-qmlmodule.html&quot;&gt;WebChannel API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4bce4744a2e3881b5692a18fd6262948f20ebc1" translate="yes" xml:space="preserve">
          <source>There are 20 predefined QColors described by the &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::GlobalColor&lt;/a&gt; enum, including black, white, primary and secondary colors, darker versions of these colors and three shades of gray. &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; also recognizes a variety of color names; the static &lt;a href=&quot;qcolor#colorNames&quot;&gt;colorNames&lt;/a&gt;() function returns a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; color names that &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; knows about.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f31e1e48599c9ead66d61d926e00b52e0b62c2" translate="yes" xml:space="preserve">
          <source>There are 3 prerequisites for implementing cross-referencing by alternative identifier. The first is that the origin manager must provide the x_provider attribute with the value being the name of the manager's &lt;a href=&quot;qgeoserviceprovider&quot;&gt;QGeoServiceProvider&lt;/a&gt;. The attribute label should be kept empty, indicating the attribute should not be displayed to users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c235f81dc9bf6663dde8196904733d375d19c23b" translate="yes" xml:space="preserve">
          <source>There are 3 types of attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92f82ad0f3ffb5b094e5412f1434d9536e07abd" translate="yes" xml:space="preserve">
          <source>There are 4 fetch-and-add functions: &lt;a href=&quot;qatomicinteger#fetchAndAddRelaxed&quot;&gt;fetchAndAddRelaxed&lt;/a&gt;(), &lt;a href=&quot;qatomicinteger#fetchAndAddAcquire&quot;&gt;fetchAndAddAcquire&lt;/a&gt;(), &lt;a href=&quot;qatomicinteger#fetchAndAddRelease&quot;&gt;fetchAndAddRelease&lt;/a&gt;(), and &lt;a href=&quot;qatomicinteger#fetchAndAddOrdered&quot;&gt;fetchAndAddOrdered&lt;/a&gt;(). See above for an explanation of the different memory ordering semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2f80f09d0b09765258fade21b69c7ffed9b7a6" translate="yes" xml:space="preserve">
          <source>There are 4 fetch-and-add functions: &lt;a href=&quot;qatomicpointer#fetchAndAddRelaxed&quot;&gt;fetchAndAddRelaxed&lt;/a&gt;(), &lt;a href=&quot;qatomicpointer#fetchAndAddAcquire&quot;&gt;fetchAndAddAcquire&lt;/a&gt;(), &lt;a href=&quot;qatomicpointer#fetchAndAddRelease&quot;&gt;fetchAndAddRelease&lt;/a&gt;(), and &lt;a href=&quot;qatomicpointer#fetchAndAddOrdered&quot;&gt;fetchAndAddOrdered&lt;/a&gt;(). See above for an explanation of the different memory ordering semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074aed5de1afea0bf3961699aef087028a43c775" translate="yes" xml:space="preserve">
          <source>There are 4 fetch-and-store functions: &lt;a href=&quot;qatomicinteger#fetchAndStoreRelaxed&quot;&gt;fetchAndStoreRelaxed&lt;/a&gt;(), &lt;a href=&quot;qatomicinteger#fetchAndStoreAcquire&quot;&gt;fetchAndStoreAcquire&lt;/a&gt;(), &lt;a href=&quot;qatomicinteger#fetchAndStoreRelease&quot;&gt;fetchAndStoreRelease&lt;/a&gt;(), and &lt;a href=&quot;qatomicinteger#fetchAndStoreOrdered&quot;&gt;fetchAndStoreOrdered&lt;/a&gt;(). See above for an explanation of the different memory ordering semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ae555ec507c63fc35f0ecd022c0dda8b34ac05" translate="yes" xml:space="preserve">
          <source>There are 4 fetch-and-store functions: &lt;a href=&quot;qatomicpointer#fetchAndStoreRelaxed&quot;&gt;fetchAndStoreRelaxed&lt;/a&gt;(), &lt;a href=&quot;qatomicpointer#fetchAndStoreAcquire&quot;&gt;fetchAndStoreAcquire&lt;/a&gt;(), &lt;a href=&quot;qatomicpointer#fetchAndStoreRelease&quot;&gt;fetchAndStoreRelease&lt;/a&gt;(), and &lt;a href=&quot;qatomicpointer#fetchAndStoreOrdered&quot;&gt;fetchAndStoreOrdered&lt;/a&gt;(). See above for an explanation of the different memory ordering semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0cb34571a764b445cea85d06d7a2949204e06d" translate="yes" xml:space="preserve">
          <source>There are 4 test-and-set functions: &lt;a href=&quot;qatomicinteger#testAndSetRelaxed&quot;&gt;testAndSetRelaxed&lt;/a&gt;(), &lt;a href=&quot;qatomicinteger#testAndSetAcquire&quot;&gt;testAndSetAcquire&lt;/a&gt;(), &lt;a href=&quot;qatomicinteger#testAndSetRelease&quot;&gt;testAndSetRelease&lt;/a&gt;(), and &lt;a href=&quot;qatomicinteger#testAndSetOrdered&quot;&gt;testAndSetOrdered&lt;/a&gt;(). See above for an explanation of the different memory ordering semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f730fe3435c0b64678329c6fe957cb18912167" translate="yes" xml:space="preserve">
          <source>There are 4 test-and-set functions: &lt;a href=&quot;qatomicpointer#testAndSetRelaxed&quot;&gt;testAndSetRelaxed&lt;/a&gt;(), &lt;a href=&quot;qatomicpointer#testAndSetAcquire&quot;&gt;testAndSetAcquire&lt;/a&gt;(), &lt;a href=&quot;qatomicpointer#testAndSetRelease&quot;&gt;testAndSetRelease&lt;/a&gt;(), and &lt;a href=&quot;qatomicpointer#testAndSetOrdered&quot;&gt;testAndSetOrdered&lt;/a&gt;(). See above for an explanation of the different memory ordering semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfad1a4d55e155be8eae1bcc1383dd6546c652e5" translate="yes" xml:space="preserve">
          <source>There are a couple of properties to work with the pinout signals namely: &lt;a href=&quot;qserialport#dataTerminalReady-prop&quot;&gt;QSerialPort::dataTerminalReady&lt;/a&gt;, &lt;a href=&quot;qserialport#requestToSend-prop&quot;&gt;QSerialPort::requestToSend&lt;/a&gt;. It is also possible to use the &lt;a href=&quot;qserialport#pinoutSignals&quot;&gt;pinoutSignals&lt;/a&gt;() method to query the current pinout signals set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a188145444bfbe9faaf6e4c14f17e7b3c915587" translate="yes" xml:space="preserve">
          <source>There are a couple ways of using &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt;. One ways is to create the buttons (or button texts) yourself and add them to the button box, specifying their role.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e96320ecfa48881ec71482be8b00468f00269c7" translate="yes" xml:space="preserve">
          <source>There are a couple ways of using &lt;a href=&quot;qml-qtquick-controls2-dialogbuttonbox&quot;&gt;DialogButtonBox&lt;/a&gt;. One way is to specify the standard buttons (e.g. &lt;b&gt;OK&lt;/b&gt;, &lt;b&gt;Cancel&lt;/b&gt;, &lt;b&gt;Save&lt;/b&gt;) and let the button box setup the buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af168ead1356573b3fb1e54f8805a26ae8daaa1a" translate="yes" xml:space="preserve">
          <source>There are a few similarities between the events &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverEnter&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverLeave&lt;/a&gt;, and the events &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Enter&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Leave&lt;/a&gt;. However, they are slightly different because we do an update() in the event handler of &lt;a href=&quot;qevent#Type-enum&quot;&gt;HoverEnter&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;HoverLeave&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac569437d8df6566ece090b81693a2fbed81874" translate="yes" xml:space="preserve">
          <source>There are a number of item-based features common to each of the convenience classes that are available through the same interfaces in each class. We present these in the following sections with some examples for different widgets. Look at the list of &lt;a href=&quot;#model-view-classes&quot;&gt;Model/View Classes&lt;/a&gt; for each of the widgets for more details about the use of each function used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98ec98b458136534e9860aed732fbd303edaf88" translate="yes" xml:space="preserve">
          <source>There are a number of tasks that are often performed by developers when editing and processing text documents using Qt. These include the use of display widgets such as &lt;a href=&quot;qtextbrowser&quot;&gt;QTextBrowser&lt;/a&gt; and &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;, creation of documents with &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, editing using a &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt;, and exporting the document structure. This document outlines some of the more common ways of using the rich text classes to perform these tasks, showing convenient patterns that can be reused in your own applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6731d218eff9149a2a646b10d3911923ea1c4b" translate="yes" xml:space="preserve">
          <source>There are a variety of different ways to visualize the Earth's surface in a 2-dimensional manner, but all of them involve some kind of projection: a mathematical relationship between the 3D coordinates (latitude, longitude and altitude) and 2D coordinates (X and Y in pixels) on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32776f11b4a2d3ade5ed9a41e6ef1e26c1558184" translate="yes" xml:space="preserve">
          <source>There are also a number of flags which you can use to customize the appearance of top-level windows. These have no effect on other windows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66b2ca7ef4ed6362018eb015c2429afc1e2fd5d" translate="yes" xml:space="preserve">
          <source>There are also corresponding &lt;a href=&quot;qpalette#color&quot;&gt;color&lt;/a&gt;() and &lt;a href=&quot;qpalette#brush&quot;&gt;brush&lt;/a&gt;() getters, and a commonly used convenience function to get the &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;ColorRole&lt;/a&gt; for the current &lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;ColorGroup&lt;/a&gt;: &lt;a href=&quot;qpalette#window&quot;&gt;window&lt;/a&gt;(), &lt;a href=&quot;qpalette#windowText&quot;&gt;windowText&lt;/a&gt;(), &lt;a href=&quot;qpalette#base&quot;&gt;base&lt;/a&gt;(), etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72a66018e0df3c3601452607002d288822ff0f1" translate="yes" xml:space="preserve">
          <source>There are also different navigation methods and different controls such as buttons and sliders. The following examples are available from Qt Creator and demonstrate different controls and layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424a6add0f2c3574f720179ac28e257b1e81db5f" translate="yes" xml:space="preserve">
          <source>There are also functions for changing attributes of an image in-place:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11eb8a9651921e9d5c8ef4aff8e9ac6a9b14aacc" translate="yes" xml:space="preserve">
          <source>There are also many other information we are interested in (as application developers), for instance performance issues, or warnings about using deprecated APIs. Those kind of messages are not reported through the ordinary OpenGL error reporting mechanisms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae62211719f6b2f9890588601f52a98d9a37c2a0" translate="yes" xml:space="preserve">
          <source>There are also slots to change the base with &lt;a href=&quot;qlcdnumber#mode-prop&quot;&gt;setMode&lt;/a&gt;() and the decimal point with &lt;a href=&quot;qlcdnumber#smallDecimalPoint-prop&quot;&gt;setSmallDecimalPoint&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7648f89cecd8bf2a749b64e44c8b67abdcac286b" translate="yes" xml:space="preserve">
          <source>There are also some convenience anchors. anchors.fill is a convenience that is the same as setting the left,right,top and bottom anchors to the left,right,top and bottom of the target item. anchors.centerIn is another convenience anchor, and is the same as setting the verticalCenter and horizontalCenter anchors to the verticalCenter and horizontalCenter of the target item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e6130bd0d2e240ef94a55a5130823dd2c03a4c" translate="yes" xml:space="preserve">
          <source>There are also some functions that operate on the set of glyphs in the font: &lt;a href=&quot;qfontmetrics#minLeftBearing&quot;&gt;minLeftBearing&lt;/a&gt;(), &lt;a href=&quot;qfontmetrics#minRightBearing&quot;&gt;minRightBearing&lt;/a&gt;() and &lt;a href=&quot;qfontmetrics#maxWidth&quot;&gt;maxWidth&lt;/a&gt;(). These are by necessity slow, and we recommend avoiding them if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d59c632d57dcc31554634d43d61de72a1503dab" translate="yes" xml:space="preserve">
          <source>There are also some functions that operate on the set of glyphs in the font: &lt;a href=&quot;qfontmetricsf#minLeftBearing&quot;&gt;minLeftBearing&lt;/a&gt;(), &lt;a href=&quot;qfontmetricsf#minRightBearing&quot;&gt;minRightBearing&lt;/a&gt;() and &lt;a href=&quot;qfontmetricsf#maxWidth&quot;&gt;maxWidth&lt;/a&gt;(). These are by necessity slow, and we recommend avoiding them if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe578f4701a7b07fddb0d285b7b14f289360215" translate="yes" xml:space="preserve">
          <source>There are also some rather obscure events described in the documentation for &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Type&lt;/a&gt;. To handle these events, you need to reimplement &lt;a href=&quot;qwidget#event&quot;&gt;event&lt;/a&gt;() directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f4cc0f1af21d2762cd2b25b5e95e60fdbe8c6c" translate="yes" xml:space="preserve">
          <source>There are also string based constructors for these types. See &lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;QML Basic Types&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f4eca68e6fc27bc484aef9541681fd5c12e021" translate="yes" xml:space="preserve">
          <source>There are currently no other defined CBOR simple types. &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; supports them simply by their number with API like &lt;a href=&quot;qcborvalue#isSimpleType&quot;&gt;isSimpleType&lt;/a&gt;() and &lt;a href=&quot;qcborvalue#toSimpleType&quot;&gt;toSimpleType&lt;/a&gt;(), available for compatibility with future specifications before the Qt API can be updated. Their use before such a specification is discouraged, as other CBOR implementations may not support them fully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e9b4ffbb092da2e2a0f4e8b7a1465a6e23609c" translate="yes" xml:space="preserve">
          <source>There are different methods to control animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07eb82092c7477ebc1f66f368eae52f9b74da3e9" translate="yes" xml:space="preserve">
          <source>There are essentially two kinds of text objects: those that are used with blocks (block formats), and those that are used with characters (character formats). The first kind are derived from &lt;a href=&quot;qtextblockgroup&quot;&gt;QTextBlockGroup&lt;/a&gt;, and the second kind from &lt;a href=&quot;qtextframe&quot;&gt;QTextFrame&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae3cc4596672943f016ebee27ba5a4b61c90913" translate="yes" xml:space="preserve">
          <source>There are five different ways that events can be processed; reimplementing this virtual function is just one of them. All five approaches are listed below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9ef8958446abb4410bb9f34879d10095cce2c3" translate="yes" xml:space="preserve">
          <source>There are four available types of extensions in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58efed182a8757a6f8fb9dbc914a8d0e9f6151d2" translate="yes" xml:space="preserve">
          <source>There are four available types of extensions in Qt Designer: &lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt; , &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesignermembersheetextension.html&quot;&gt;QDesignerMemberSheetExtension&lt;/a&gt;, &lt;a href=&quot;qdesignerpropertysheetextension&quot;&gt;QDesignerPropertySheetExtension&lt;/a&gt; and &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt;. Qt Designer's behavior is the same whether the requested extension is associated with a multi page container, a member sheet, a property sheet or a task menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f55dc62df3c1e56f91728ca1c8ccaa75167f2e" translate="yes" xml:space="preserve">
          <source>There are four dock widget areas as given by the &lt;a href=&quot;qt#DockWidgetArea-enum&quot;&gt;Qt::DockWidgetArea&lt;/a&gt; enum: left, right, top, and bottom. You can specify which dock widget area that should occupy the corners where the areas overlap with &lt;code&gt;setCorner()&lt;/code&gt;. By default each area can only contain one row (vertical or horizontal) of dock widgets, but if you enable nesting with &lt;code&gt;setDockNestingEnabled()&lt;/code&gt;, dock widgets can be added in either direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a014320627a46dd71b1e5a58115760d7b1b7c3" translate="yes" xml:space="preserve">
          <source>There are four kinds of action items: separators, actions that show a submenu, widgets, and actions that perform an action. Separators are inserted with &lt;a href=&quot;qmenu#addSeparator&quot;&gt;addSeparator&lt;/a&gt;(), submenus with &lt;a href=&quot;qmenu#addMenu&quot;&gt;addMenu&lt;/a&gt;(), and all other items are considered action items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc183659caaf98151d1355e46affa28ab60a79ec" translate="yes" xml:space="preserve">
          <source>There are four ways to call APIs on the COM object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb43a1eeae7a259f2eab7490a3b86620bf2672ef" translate="yes" xml:space="preserve">
          <source>There are functions to convert between &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;. Typically, the &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; class is used to load an image file, optionally manipulating the image data, before the &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; object is converted into a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to be shown on screen. Alternatively, if no manipulation is desired, the image file can be loaded directly into a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185c709fdfdd2342cedd39fe7a41807a13acb3e9" translate="yes" xml:space="preserve">
          <source>There are functions to draw pixmaps/images, namely &lt;a href=&quot;qpainter#drawPixmap&quot;&gt;drawPixmap&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawImage&quot;&gt;drawImage&lt;/a&gt;() and &lt;a href=&quot;qpainter#drawTiledPixmap&quot;&gt;drawTiledPixmap&lt;/a&gt;(). Both &lt;a href=&quot;qpainter#drawPixmap&quot;&gt;drawPixmap&lt;/a&gt;() and &lt;a href=&quot;qpainter#drawImage&quot;&gt;drawImage&lt;/a&gt;() produce the same result, except that &lt;a href=&quot;qpainter#drawPixmap&quot;&gt;drawPixmap&lt;/a&gt;() is faster on-screen while &lt;a href=&quot;qpainter#drawImage&quot;&gt;drawImage&lt;/a&gt;() may be faster on a QPrinter or other devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521d8db0536fd765278ae6e2c04f3900d2895da3" translate="yes" xml:space="preserve">
          <source>There are further restrictions for OpenGL-based windows. As of Qt 5.3, eglfs supports a single, fullscreen GL window (for example, an OpenGL-based &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, a &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; or a QGLWidget). Opening additional OpenGL windows or mixing such windows with &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;-based content is not supported and will terminate the application with an error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b663be5c758ae53f84b6799c6b53c2a5d5faa41e" translate="yes" xml:space="preserve">
          <source>There are further restrictions for OpenGL-based windows. EGLFS supports a single single fullscreen GL window (as of Qt 5.3), like OpenGL-based &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, a &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, or a &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;. Opening additional OpenGL windows or mixing such windows with &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;-based content isn't supported; Qt terminates the application with an error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3890a66cd2a8305a6c2901485f051e704d25593f" translate="yes" xml:space="preserve">
          <source>There are generated replicas (replicas having the header files produced by the &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;Replica Compiler&lt;/a&gt;), and dynamic replicas, which are generated on-the-fly. This is the class for the dynamic type of replica.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa8f6502463bcbc5f15ce8f09377bc86f886316" translate="yes" xml:space="preserve">
          <source>There are inherited classes for each supported series type: &lt;a href=&quot;qbar3dseries&quot;&gt;QBar3DSeries&lt;/a&gt;, &lt;a href=&quot;qscatter3dseries&quot;&gt;QScatter3DSeries&lt;/a&gt;, and &lt;a href=&quot;qsurface3dseries&quot;&gt;QSurface3DSeries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7de94969c84be6b162608d604474db112526f2" translate="yes" xml:space="preserve">
          <source>There are many different settings for each part of the recording process (audio, video, and output formats), as well as control over muting and where to store the output file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b04540a66ad4fa84216e59f87e7bb9b1eaee48" translate="yes" xml:space="preserve">
          <source>There are many more functions and operators defined for &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; and XPath. They are all &lt;a href=&quot;http://www.w3.org/TR/xpath-functions&quot;&gt;documented in the specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e7ecc705f5981a61338b695254227515ae3255" translate="yes" xml:space="preserve">
          <source>There are many options that you can add to the query to narrow the criteria. The &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; properties can include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932ef5d83bbb6264fa878988be595bc7f801d0b0" translate="yes" xml:space="preserve">
          <source>There are many ways to construct a &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt;. The most common way is to call &lt;a href=&quot;qsslsocket#peerCertificate&quot;&gt;QSslSocket::peerCertificate&lt;/a&gt;(), which returns a &lt;a href=&quot;qsslcertificate&quot;&gt;QSslCertificate&lt;/a&gt; object, or &lt;a href=&quot;qsslsocket#peerCertificateChain&quot;&gt;QSslSocket::peerCertificateChain&lt;/a&gt;(), which returns a list of them. You can also load certificates from a DER (binary) or PEM (Base64) encoded bundle, typically stored as one or more local files, or in a Qt Resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796c84ae1ac166450fb706ad8e98fe858c1b55b8" translate="yes" xml:space="preserve">
          <source>There are no changes to the source side as a dynamic &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; only impacts how the requestor node acquires the replica. The source-side code shown in &lt;a href=&quot;#qtro-example1&quot;&gt;Example 1&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fbd6ff11e94b3343e1f862684027ca17e17412" translate="yes" xml:space="preserve">
          <source>There are no corner widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3417cb54c916104fc6041a7759695abf59d6831b" translate="yes" xml:space="preserve">
          <source>There are no environment variables. Qt emulates the functionality by maintaining the values locally, so that &lt;a href=&quot;#qputenv&quot;&gt;qputenv&lt;/a&gt;() and related functions continue to work. All known variables influencing Qt can be set in source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf56461d57638a833a7bfe6f1ef6411f4e3d9149" translate="yes" xml:space="preserve">
          <source>There are no known problems with using Qt on production versions of Linux/x86, Linux/ppc, Linux/amd64 and Linux/ia64 (including Altix(R)).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a8ac08596ce8f63b9121a5223339f7f158f188" translate="yes" xml:space="preserve">
          <source>There are no restricitions on what you do to your own variables, as qmake will ignore them unless it needs to evaluate them when processing a scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13de2fa0619b8ce7ac03eff32c5699ac7c52886" translate="yes" xml:space="preserve">
          <source>There are no source or binary compatibility guarantees for the QPA classes, meaning that a platform plugin is only guaranteed to work with the Qt version it was developed against. API changes will however only be made in minor releases. (5.1, 5.2, and so on.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48293c428a6e649eae68c408dfa8c993b017970" translate="yes" xml:space="preserve">
          <source>There are no special in-string modifiers for formatting dates and times. Instead, you need to query the current locale (geographical region) and use the methods of &lt;a href=&quot;qml-qtqml-date&quot;&gt;Date&lt;/a&gt; to format the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbed3e1b0f64090e26b0dfa4ca80fd256f7ece7f" translate="yes" xml:space="preserve">
          <source>There are no subpixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a1b6c49641099425c3e89248486e6ac6f810fb" translate="yes" xml:space="preserve">
          <source>There are no supported media playback facilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589e132b82fb048d165d6f9be51fd47cee1ca5cc" translate="yes" xml:space="preserve">
          <source>There are no supported video playback facilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4777517d32bf78809fbb7fc1cc330731b2df5487" translate="yes" xml:space="preserve">
          <source>There are not the appropriate permissions to play a media resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce6e34dbdc96b86444ab991d3f8d5158acf483b" translate="yes" xml:space="preserve">
          <source>There are several advantages to using &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;() with function pointers. First, it allows the compiler to check that the signal's arguments are compatible with the slot's arguments. Arguments can also be implicitly converted by the compiler, if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2720eb6491911c7c04ea56e3b4892594b19ba798" translate="yes" xml:space="preserve">
          <source>There are several authentication systems, including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5580356cd5d83329110b41486d5a1249a9ae1a57" translate="yes" xml:space="preserve">
          <source>There are several available types of extensions in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399367c35d08ea628b951780a061eefc80aae7c2" translate="yes" xml:space="preserve">
          <source>There are several different &lt;a href=&quot;https://material.google.com/style/color.html#color-color-palette&quot;&gt;shades&lt;/a&gt; of each &lt;a href=&quot;#pre-defined-material-colors&quot;&gt;pre-defined color&lt;/a&gt; that can be passed to the &lt;a href=&quot;#material-color-attached-method&quot;&gt;Material.color()&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e6d02c6e96a265e9e533e99202f12b4576ff88" translate="yes" xml:space="preserve">
          <source>There are several formats the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4a0442e2bc3610644a73a8924b8db324be1404" translate="yes" xml:space="preserve">
          <source>There are several formats the image file can be given in, but if it is not in a directly usable format, a conversion is made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91af185d5a779f526bbf8c8d0b21a6ab197126d" translate="yes" xml:space="preserve">
          <source>There are several functions in &lt;a href=&quot;qgeoroutingmanager&quot;&gt;QGeoRoutingManager&lt;/a&gt; which can be used to check which features are supported with the current provider and authorization level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29f709ac0b918676228d902c7b22d7a906068c9" translate="yes" xml:space="preserve">
          <source>There are several functions that operate on the font: &lt;a href=&quot;qfontmetrics#ascent&quot;&gt;ascent&lt;/a&gt;(), &lt;a href=&quot;qfontmetrics#descent&quot;&gt;descent&lt;/a&gt;(), &lt;a href=&quot;qfontmetrics#height&quot;&gt;height&lt;/a&gt;(), &lt;a href=&quot;qfontmetrics#leading&quot;&gt;leading&lt;/a&gt;() and &lt;a href=&quot;qfontmetrics#lineSpacing&quot;&gt;lineSpacing&lt;/a&gt;() return the basic size properties of the font. The &lt;a href=&quot;qfontmetrics#underlinePos&quot;&gt;underlinePos&lt;/a&gt;(), &lt;a href=&quot;qfontmetrics#overlinePos&quot;&gt;overlinePos&lt;/a&gt;(), &lt;a href=&quot;qfontmetrics#strikeOutPos&quot;&gt;strikeOutPos&lt;/a&gt;() and &lt;a href=&quot;qfontmetrics#lineWidth&quot;&gt;lineWidth&lt;/a&gt;() functions, return the properties of the line that underlines, overlines or strikes out the characters. These functions are all fast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7be9d6988c6e4c37d0420c5cca9ff2215a3a62" translate="yes" xml:space="preserve">
          <source>There are several functions that operate on the font: &lt;a href=&quot;qfontmetricsf#ascent&quot;&gt;ascent&lt;/a&gt;(), &lt;a href=&quot;qfontmetricsf#descent&quot;&gt;descent&lt;/a&gt;(), &lt;a href=&quot;qfontmetricsf#height&quot;&gt;height&lt;/a&gt;(), &lt;a href=&quot;qfontmetricsf#leading&quot;&gt;leading&lt;/a&gt;() and &lt;a href=&quot;qfontmetricsf#lineSpacing&quot;&gt;lineSpacing&lt;/a&gt;() return the basic size properties of the font. The &lt;a href=&quot;qfontmetricsf#underlinePos&quot;&gt;underlinePos&lt;/a&gt;(), &lt;a href=&quot;qfontmetricsf#overlinePos&quot;&gt;overlinePos&lt;/a&gt;(), &lt;a href=&quot;qfontmetricsf#strikeOutPos&quot;&gt;strikeOutPos&lt;/a&gt;() and &lt;a href=&quot;qfontmetricsf#lineWidth&quot;&gt;lineWidth&lt;/a&gt;() functions, return the properties of the line that underlines, overlines or strikes out the characters. These functions are all fast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e377382f27f2b337f4496c4e71ffbb66d15b2fc3" translate="yes" xml:space="preserve">
          <source>There are several methods of assigning behavior animations to properties. The &lt;code&gt;Behavior on &amp;lt;property&amp;gt;&lt;/code&gt; declaration is a convenient way of assigning a behavior animation onto a property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9183ff4c5a05ce0180b8c00da5234e1d7a5c1a22" translate="yes" xml:space="preserve">
          <source>There are several other interfaces that should be implemented as required. &lt;a href=&quot;qaccessibletextinterface&quot;&gt;QAccessibleTextInterface&lt;/a&gt; should be used for bigger texts edits such as document views. This interface should not be implemented for labels/single line edits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5106a704a965481123346759a42320a9b88519" translate="yes" xml:space="preserve">
          <source>There are several other ways to position items in a user interface. In addition to the basic technique of specifying their coordinates directly, they can be positioned relative to other items with &lt;a href=&quot;qtquick-positioning-anchors#&quot;&gt;anchors&lt;/a&gt;, or used with &lt;a href=&quot;qtquick-modelviewsdata-modelview#qml-data-models&quot;&gt;QML Data Models&lt;/a&gt; such as &lt;a href=&quot;qtquick-modelviewsdata-modelview#object-model&quot;&gt;Object Model&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4b3bbe212ac8668476b33ac7414748eaf7b02f" translate="yes" xml:space="preserve">
          <source>There are several plugin base classes. Derived plugins are stored by default in sub-directories of the standard plugin directory. Qt will not find plugins if they are not stored in the appropriate directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520518be7653b8b406e09e00bb0bf5955942601d" translate="yes" xml:space="preserve">
          <source>There are several possible handlers depending on which &lt;a href=&quot;qml-qtquick-dialogs-messagedialog#standardButtons-prop&quot;&gt;standardButtons&lt;/a&gt; the dialog has and the &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;ButtonRole&lt;/a&gt; of each. For example, the &lt;a href=&quot;qml-qtquick-dialogs-messagedialog#rejected-signal&quot;&gt;onRejected&lt;/a&gt; handler will be called if the user presses a &lt;b&gt;Cancel&lt;/b&gt;, &lt;b&gt;Close&lt;/b&gt; or &lt;b&gt;Abort&lt;/b&gt; button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e1de22b15d91af9843dd86aa2f679baee54b70" translate="yes" xml:space="preserve">
          <source>There are several related non-members: &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; is a typdef for an unsigned int representing the RGB value triplet (r, g, b). Note that it also can hold a value for the alpha-channel (for more information, see the &lt;a href=&quot;qcolor#alpha-blended-drawing&quot;&gt;Alpha-Blended Drawing&lt;/a&gt; section). The &lt;a href=&quot;qcolor#qRed&quot;&gt;qRed&lt;/a&gt;(), &lt;a href=&quot;qcolor#qBlue&quot;&gt;qBlue&lt;/a&gt;() and &lt;a href=&quot;qcolor#qGreen&quot;&gt;qGreen&lt;/a&gt;() functions return the respective component of the given &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; value, while the &lt;a href=&quot;qcolor#qRgb&quot;&gt;qRgb&lt;/a&gt;() and &lt;a href=&quot;qcolor#qRgba&quot;&gt;qRgba&lt;/a&gt;() functions create and return the &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; triplet based on the given component values. Finally, the &lt;a href=&quot;qcolor#qAlpha&quot;&gt;qAlpha&lt;/a&gt;() function returns the alpha component of the provided &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt;, and the &lt;a href=&quot;qcolor#qGray&quot;&gt;qGray&lt;/a&gt;() function calculates and return a gray value based on the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9a92266ce9ead23acd50c161dff2cc71eefc31" translate="yes" xml:space="preserve">
          <source>There are several settings that you can customize to make &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; draw according to your preferences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563349f6d4f843e2696cf1af7ab944d085a66966" translate="yes" xml:space="preserve">
          <source>There are several tools to help turn a set of images into sprite sheets. Here are some examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3959afb5dfa374781d4fbcccc15ee3908025dbac" translate="yes" xml:space="preserve">
          <source>There are several types of predefined documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e237d6f538d8ed00f9a5e4caa3e4cfbf2a047b" translate="yes" xml:space="preserve">
          <source>There are several ways of setting animation to an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50927ecdbcf92bd462e3957256ec455e017ee82f" translate="yes" xml:space="preserve">
          <source>There are several ways of using a custom style in a Qt application. The simplest way is to pass the custom style to the &lt;a href=&quot;qapplication#setStyle&quot;&gt;QApplication::setStyle&lt;/a&gt;() static function before creating the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9be36891dc850fd42825aac0007a3cf9020e70" translate="yes" xml:space="preserve">
          <source>There are several ways to ensure that &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#stackview&quot;&gt;StackView&lt;/a&gt; has a size in this situation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae549cab005e9e829a65ff2055263d2f3255c3c" translate="yes" xml:space="preserve">
          <source>There are several ways to go about creating your own styles. Below, we'll explain the various approaches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b882f4f7a60444f873c386246e21efc66d3dedbc" translate="yes" xml:space="preserve">
          <source>There are similar features like &lt;a href=&quot;qml-qtmultimedia-video#play-method&quot;&gt;play()&lt;/a&gt; with new features specific to video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b684a7ae2767f055469dd776da8b82024474fbd" translate="yes" xml:space="preserve">
          <source>There are six kinds of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511f2c0c9f8e02ae75ce60aeede14b4b911a7529" translate="yes" xml:space="preserve">
          <source>There are some cases where manually invoking the garbage collector is acceptable (and this is explained in greater detail in an upcoming section), but in most cases, invoking the garbage collector is unnecessary and counter-productive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7fd045768038a7f02f3106ba36087a4ce2988e" translate="yes" xml:space="preserve">
          <source>There are some color roles used mostly for 3D bevel and shadow effects. All of these are normally derived from &lt;code&gt;Window&lt;/code&gt;, and used in ways that depend on that relationship. For example, buttons depend on it to make the bevels look attractive, and Motif scroll bars depend on &lt;code&gt;Mid&lt;/code&gt; to be slightly different from &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8850648cacb0adf41fd116fbab811d43d49465a0" translate="yes" xml:space="preserve">
          <source>There are some features that &lt;a href=&quot;qgraphicsanchorlayout&quot;&gt;QGraphicsAnchorLayout&lt;/a&gt; currently does not support. This might change in the future, so avoid using these features if you want to avoid any future regressions in behaviour:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913c8c9383d86fb4b382b794ac3d277184ba1ac4" translate="yes" xml:space="preserve">
          <source>There are some predefined instantiations of this template for working with common stereo sample depths in a convenient way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f670a2e53b26c58d848546b3a83338387cb274" translate="yes" xml:space="preserve">
          <source>There are some special considerations to be made when OpenGL is used. The platform plugin only supports full screen top-level OpenGL windows. This means that even dialogs and popups will be shown as full screen. There may also be drawing errors if you try to stack windows that have animations or otherwise require updating their UI while they are obscured by another window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69d7a3df417d7f226f7295aef4570de6bc39956" translate="yes" xml:space="preserve">
          <source>There are three approaches for storing custom data in a &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56d3c59c71af0c92c5d6d602b207bcb06ed9b3e" translate="yes" xml:space="preserve">
          <source>There are three different types of imports. Each import type has a slightly different syntax, and different semantics apply to different import types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e821a7f395e59b9288e42ed564cfedfc307efdb" translate="yes" xml:space="preserve">
          <source>There are three effective coordinate systems in play in Graphics View: Item coordinates, scene coordinates, and view coordinates. To simplify your implementation, Graphics View provides convenience functions that allow you to map between the three coordinate systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2606087c48d57a57c3af015394f1aba943f065cf" translate="yes" xml:space="preserve">
          <source>There are three element types: primitive elements, control elements, and complex control elements. The elements are defined by the &lt;a href=&quot;qstyle#ComplexControl-enum&quot;&gt;ComplexControl&lt;/a&gt;, &lt;a href=&quot;qstyle#ControlElement-enum&quot;&gt;ControlElement&lt;/a&gt;, and &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PrimitiveElement&lt;/a&gt; enums. The values of each element enum has a prefix to identify their type: &lt;code&gt;CC_&lt;/code&gt; for complex elements, &lt;code&gt;CE_&lt;/code&gt; for control elements, and &lt;code&gt;PE_&lt;/code&gt; for primitive elements. We will in the following three sections see what defines the different elements and see examples of widgets that use them.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
