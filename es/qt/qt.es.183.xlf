<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="e5ca3ddbb163f17de5bfac5afc90aa2845fd5185" translate="yes" xml:space="preserve">
          <source>Show tooltip animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0623aa24a03d456525afac4a299a8096aa25a2" translate="yes" xml:space="preserve">
          <source>Show tooltip fading effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f76b77a73daa0de757d31e2477b46d19b0ee27" translate="yes" xml:space="preserve">
          <source>Shows</source>
          <target state="translated">Shows</target>
        </trans-unit>
        <trans-unit id="5776b58246b30b21fc1742aeff4653b9a7ea2296" translate="yes" xml:space="preserve">
          <source>Shows (pops up) the associated popup menu. If there is no such menu, this function does nothing. This function does not return until the popup menu has been closed by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947b0fa53983740c71b2a0ed2a28e434cbb63f95" translate="yes" xml:space="preserve">
          <source>Shows a balloon message for the entry with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f089aaea9ee7f183440d57700c730f9a0aecaf9e" translate="yes" xml:space="preserve">
          <source>Shows a preview of the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb14e4f99119c686b2428ff251c9acfc0c3fd57" translate="yes" xml:space="preserve">
          <source>Shows a system tray message with the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc136ffa38192e82bd025a812e969a19a9f3fe5" translate="yes" xml:space="preserve">
          <source>Shows how composition modes work in QPainter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36205709971788e5ad5a4fcba6524c9aa38f1fb1" translate="yes" xml:space="preserve">
          <source>Shows how to arrange child widgets along a border.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a21fb4290f5e28f12d9b675352b8a96dc6a1d02" translate="yes" xml:space="preserve">
          <source>Shows how to arrange widgets for different window sizes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6792dcad8ceda9b41633f3b8fa3ccc837dbd31c" translate="yes" xml:space="preserve">
          <source>Shows list of word candidates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f581f2d959d023fb6526c534ae8e67e69e9e043" translate="yes" xml:space="preserve">
          <source>Shows scroll bars. Enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f3355018411f46df9fee06c8f52a15d6610bd9" translate="yes" xml:space="preserve">
          <source>Shows scroll bars. Enabled by default. (Added in Qt 5.10)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0b7d867602aaf9112c3e1e055772a470f84248" translate="yes" xml:space="preserve">
          <source>Shows the currently displayed month in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a26e235f72dff91bb1504e4c5e2b62f588305f8" translate="yes" xml:space="preserve">
          <source>Shows the dialog as a &lt;a href=&quot;qdialog#modal-dialogs&quot;&gt;modal dialog&lt;/a&gt;, blocking until the user closes it. The function returns a &lt;a href=&quot;qdialog#DialogCode-enum&quot;&gt;DialogCode&lt;/a&gt; result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08d43896b8ba6326da5e0c11928e8cfdbdf6d09" translate="yes" xml:space="preserve">
          <source>Shows the dialog as a &lt;a href=&quot;qdialog#modal-dialogs&quot;&gt;window modal dialog&lt;/a&gt;, returning immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597fad6cdcef7bdfae775be3ea5aa8ca5a98fedf" translate="yes" xml:space="preserve">
          <source>Shows the dialog if it is still hidden after the algorithm has been started and &lt;a href=&quot;qprogressdialog#minimumDuration-prop&quot;&gt;minimumDuration&lt;/a&gt; milliseconds have passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a76148518b78e24bc11d517bb8b6f8dba37314" translate="yes" xml:space="preserve">
          <source>Shows the dialog to the user. It is equivalent to setting &lt;a href=&quot;qml-qtquick-dialogs-colordialog#visible-prop&quot;&gt;visible&lt;/a&gt; to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008606e5d9e801d5cd37420367d718d702bbd5be" translate="yes" xml:space="preserve">
          <source>Shows the dialog to the user. It is equivalent to setting &lt;a href=&quot;qml-qtquick-dialogs-dialog#visible-prop&quot;&gt;visible&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24a75a03e8ffeae214dccb54904076aa7febead" translate="yes" xml:space="preserve">
          <source>Shows the dialog to the user. It is equivalent to setting &lt;a href=&quot;qml-qtquick-dialogs-filedialog#visible-prop&quot;&gt;visible&lt;/a&gt; to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f16b781232d461f993ab25088e8bf12824ebd0" translate="yes" xml:space="preserve">
          <source>Shows the dialog to the user. It is equivalent to setting &lt;a href=&quot;qml-qtquick-dialogs-fontdialog#visible-prop&quot;&gt;visible&lt;/a&gt; to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8246355222f50ae2fc274f5ffbe08bc91c7b81" translate="yes" xml:space="preserve">
          <source>Shows the dialog to the user. It is equivalent to setting &lt;a href=&quot;qml-qtquick-dialogs-messagedialog#visible-prop&quot;&gt;visible&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a747734c92f0473da3504dbed11393685875b8c" translate="yes" xml:space="preserve">
          <source>Shows the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7876b62159b2d62ec20527a7c54e0fc8a83661e9" translate="yes" xml:space="preserve">
          <source>Shows the given message,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce5fd2f8f2dd77ace989a242a1b9d456427e48c" translate="yes" xml:space="preserve">
          <source>Shows the icon in the system tray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512dc2f30f3092f8ba1e8cf5c2f92b67983946ec" translate="yes" xml:space="preserve">
          <source>Shows the item (items are visible by default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b3391bc32921e06241b3a71d11e8b24586c3b7" translate="yes" xml:space="preserve">
          <source>Shows the message box as a &lt;a href=&quot;qdialog#modal-dialogs&quot;&gt;modal dialog&lt;/a&gt;, blocking until the user closes it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c70083c03cfe1e6ab168eae74e3e9b2526f920" translate="yes" xml:space="preserve">
          <source>Shows the month of the selected date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca6dc68303f22542ce0a80eb74f7bc8b979f38a" translate="yes" xml:space="preserve">
          <source>Shows the month of the today's date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d791f0d1f7dd247db673afe24b66e7397fd25b1" translate="yes" xml:space="preserve">
          <source>Shows the next month relative to the currently displayed month. Note that the selected date is not changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b537259fed291923f4bedc52c2afcadf3f5fb3c8" translate="yes" xml:space="preserve">
          <source>Shows the previous month relative to the currently displayed month. Note that the selected date is not changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4286653eca4d98d3d35ad973676b962262ba61c5" translate="yes" xml:space="preserve">
          <source>Shows the progress indicator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce9d899c5de3d679984796499a0fcec67b706f6" translate="yes" xml:space="preserve">
          <source>Shows the section specified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878048163d88708b505ac26b57da8795a8c95b05" translate="yes" xml:space="preserve">
          <source>Shows the standard context menu created with &lt;a href=&quot;qlineedit#createStandardContextMenu&quot;&gt;createStandardContextMenu&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6647b54b0774623c5422879001f72bb01cef18" translate="yes" xml:space="preserve">
          <source>Shows the standard context menu created with &lt;a href=&quot;qplaintextedit#createStandardContextMenu&quot;&gt;createStandardContextMenu&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622d97237c4d5231c16474e85bd736d8ab1b58b3" translate="yes" xml:space="preserve">
          <source>Shows the standard context menu created with &lt;a href=&quot;qtextedit#createStandardContextMenu&quot;&gt;createStandardContextMenu&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c5a9f72b18e9cf273f48c815fbd5bf20b13863" translate="yes" xml:space="preserve">
          <source>Shows the system menu below the system menu icon in the title bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0943bd20e49960dd2e3a927cc04e12bda0ba61" translate="yes" xml:space="preserve">
          <source>Shows the system tray icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e33e46641992874e18ecb095035643a9f7a2657" translate="yes" xml:space="preserve">
          <source>Shows the temporary message, if appropriate, in response to the paint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd164e758ace91beded94866b6e1e48546d0fc1" translate="yes" xml:space="preserve">
          <source>Shows the widget and its child widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b17e233206da8d2242cf60affdd1c378f958d9" translate="yes" xml:space="preserve">
          <source>Shows the widget in full-screen mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7091be725bdec61c0784334feb3932f7c38c5fdb" translate="yes" xml:space="preserve">
          <source>Shows the widget maximized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed0d5d276a066e9156184f20e97669b68b9a3b6" translate="yes" xml:space="preserve">
          <source>Shows the widget minimized, as an icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518e63003f39c44409ff6837f52e669d83096313" translate="yes" xml:space="preserve">
          <source>Shows the window as fullscreen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648df9480d2f62132a675e8399c141956bfb87bf" translate="yes" xml:space="preserve">
          <source>Shows the window as maximized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fb305439cba26d2f592204918f8f3b55b9fbc8" translate="yes" xml:space="preserve">
          <source>Shows the window as minimized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac4fc7fe7190dc81c827d3330e7ea7a7089dd1f" translate="yes" xml:space="preserve">
          <source>Shows the window as normal, i.e. neither maximized, minimized, nor fullscreen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5ae90820dbf9351aa030529bb5ff82fed041d3" translate="yes" xml:space="preserve">
          <source>Shows the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf36527f0186db593bceb9d83864dcca13cfe315" translate="yes" xml:space="preserve">
          <source>Shuffle items in the playlist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac7297d7f0505f6c3e3fa62936529433ca869bc" translate="yes" xml:space="preserve">
          <source>Shuffles items in the playlist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775334f1b48b16b931b1fff169843ebe4ebe5889" translate="yes" xml:space="preserve">
          <source>Shuts down the ActiveX control and destroys the &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; widget, cleaning up all allocated resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0d04fa1013cc4fa76c87c62f07e59b1b64f776" translate="yes" xml:space="preserve">
          <source>Shuts down the ActiveX control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13e2f621b32283a593bbcda2aafea6b567ecb8d" translate="yes" xml:space="preserve">
          <source>Shuts down the COM object and destroys the &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f9b3640fa47b60bc297f95a627c248d50aca11" translate="yes" xml:space="preserve">
          <source>Shutter speed in seconds, specified as qreal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55727ec5728d7c6eb8e5674a1b8324882ada93eb" translate="yes" xml:space="preserve">
          <source>Sibling</source>
          <target state="translated">Sibling</target>
        </trans-unit>
        <trans-unit id="419395df95cec91c2661559db0e022f64f7cf8eb" translate="yes" xml:space="preserve">
          <source>Siblings or parents for document nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be372316463762ae0cb90acdf20e550795b546a2" translate="yes" xml:space="preserve">
          <source>Side panel that can be opened and closed using a swipe gesture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f474ee4575eb061b5d9d9d80f1b2e8751e6c837" translate="yes" xml:space="preserve">
          <source>Side panel that can be opened and closed using a swipe gesture. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bed13a88c60350c3de92ec3820e1cc4f7d6ec3" translate="yes" xml:space="preserve">
          <source>Signal</source>
          <target state="translated">Signal</target>
        </trans-unit>
        <trans-unit id="9606f945ed08868a160e968f39f13ae0a8b305d2" translate="yes" xml:space="preserve">
          <source>Signal Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbeeaaf0df77c42d7b32c80e1902090425c19b5b" translate="yes" xml:space="preserve">
          <source>Signal Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f2e165008aa691f9980b87990e2e8dbcf00f67" translate="yes" xml:space="preserve">
          <source>Signal Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99eaa9a3302e984452e16a49ecb2eebc5d039bb" translate="yes" xml:space="preserve">
          <source>Signal Handler Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e36136abc08fe5a5badf32c765cfe5eead1689" translate="yes" xml:space="preserve">
          <source>Signal Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf65126b6332c3b318586aba34691632b7555634" translate="yes" xml:space="preserve">
          <source>Signal a change in the notify interval period to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2c37db6fa62fdb24006feb1b2d481483b3c3fe" translate="yes" xml:space="preserve">
          <source>Signal a change in the writable status of meta-data,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a7e225d11b482a4db979763ab5e446a5fb9a61" translate="yes" xml:space="preserve">
          <source>Signal and Handler Event System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9eb7aca9c67e295cb62168db4bd2d67a5deaab3" translate="yes" xml:space="preserve">
          <source>Signal and Slots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed0320cd72c48e4db4b2606e1a25db32245e55e" translate="yes" xml:space="preserve">
          <source>Signal by some platforms to display a pairing confirmation dialog for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ff2da5a3a6918b97231c7b8d7842cc68457f05" translate="yes" xml:space="preserve">
          <source>Signal by some platforms to display the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f56fc22c66b0dca94f23b40cdae6e8f5da1883a" translate="yes" xml:space="preserve">
          <source>Signal documentation typically begin with &quot;This signal is triggered when...&quot;. Here are alternate styles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3010e6213c9d3b44468b466db6c875138fa5949" translate="yes" xml:space="preserve">
          <source>Signal emissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687117e9f2e52d40cd2c3a78f29223391b1df43f" translate="yes" xml:space="preserve">
          <source>Signal emitted if failed to load playlist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa5896fcd5e5cf33ed59a9bda54ba8455f8508d" translate="yes" xml:space="preserve">
          <source>Signal emitted if there's an exceptional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ba7ea88cb5c7750c372f76ada6ea4c71d00b39" translate="yes" xml:space="preserve">
          <source>Signal emitted when active audio input changes to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15061748155af474a86f3c73ca4585749aad37aa" translate="yes" xml:space="preserve">
          <source>Signal emitted when an error occurs with error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46865b531ee05c1b3efa23d49e67a64b7096676f" translate="yes" xml:space="preserve">
          <source>Signal emitted when aperature changes to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc506c14213a696f9dca4f65953eb90eae2964cd" translate="yes" xml:space="preserve">
          <source>Signal emitted when aperature range has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fe50364d972e55e1aeaedaa9c709185b84306f" translate="yes" xml:space="preserve">
          <source>Signal emitted when current media changes to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00038e751fb6470161d98ef9be5729e05c364d0d" translate="yes" xml:space="preserve">
          <source>Signal emitted when digital zoom value changes to new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c030844f4b77d24c0d994075931b0f3b50c535" translate="yes" xml:space="preserve">
          <source>Signal emitted when error state changes to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda61f07960d2bbb8417fa29cc60d40f83327383" translate="yes" xml:space="preserve">
          <source>Signal emitted when flash state changes to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe3f5aaf31945a0006587255701ec192980abd4" translate="yes" xml:space="preserve">
          <source>Signal emitted when item are to be deleted at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4953a2fad320b98260a4ba65fb514a5fcc5df01f" translate="yes" xml:space="preserve">
          <source>Signal emitted when items are to be inserted at</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c3c3bc834d4b8243508ca00983aca95bb38b54" translate="yes" xml:space="preserve">
          <source>Signal emitted when optical zoom value changes to new</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcdf60999b6e0c0172ad2c48510ae0323c90230" translate="yes" xml:space="preserve">
          <source>Signal emitted when playback mode changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41c8b9b16c98f2bf231fb8600abb2810272aaf9" translate="yes" xml:space="preserve">
          <source>Signal emitted when playback rate changes to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae0d7f93f551c458a206075749fc53bb0442a44" translate="yes" xml:space="preserve">
          <source>Signal emitted when playlist finished loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba6a2f01f3d1510a8daf375798ec42a314fa976" translate="yes" xml:space="preserve">
          <source>Signal emitted when playlist position changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535ee76dccd1035fa5c16d4972e78b941c6fa879" translate="yes" xml:space="preserve">
          <source>Signal emitted when sensitivity changes to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6170d93df21fe490b66062e5d9fd57c585d79562" translate="yes" xml:space="preserve">
          <source>Signal emitted when the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a8b7db700bcf3288654bc5cc6b3edd99826968" translate="yes" xml:space="preserve">
          <source>Signal emitted when the actual exposure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c9af5f081b7a5ffd734c599a66bf9db985fba2" translate="yes" xml:space="preserve">
          <source>Signal emitted when the audio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e3181193b312c85a60aec4395969eab68ce275" translate="yes" xml:space="preserve">
          <source>Signal emitted when the availability of the service has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3962e2316e3f6b6b92737fd30174612eadba74" translate="yes" xml:space="preserve">
          <source>Signal emitted when the availability state has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c3c0d0a0b3a26b0ee04255ada8d858d6bd01a4" translate="yes" xml:space="preserve">
          <source>Signal emitted when the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d754ab63aa6be4892609ca93f8ef10cd07d6f73" translate="yes" xml:space="preserve">
          <source>Signal emitted when the camera</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf72768933d8fc5e7931b7e6a2058caea22924bf" translate="yes" xml:space="preserve">
          <source>Signal emitted when the camera capture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab848b6c5fe7e59892d16fb66a5cb3da86fe104" translate="yes" xml:space="preserve">
          <source>Signal emitted when the capture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6a5328774f2ddfcf55d781306f292a041a295b" translate="yes" xml:space="preserve">
          <source>Signal emitted when the current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15074588f925189a4e420f5eda06a5fd5b9790c6" translate="yes" xml:space="preserve">
          <source>Signal emitted when the current digital</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2879ad0b29fa61e409e05fa27872003e1fd67bc" translate="yes" xml:space="preserve">
          <source>Signal emitted when the current optical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d19d4000f19c5182eb42499dcb13d44ec5c7f4" translate="yes" xml:space="preserve">
          <source>Signal emitted when the exposure compensation changes to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d486c3b25c78bd74343c94880aa8a0426d1691f7" translate="yes" xml:space="preserve">
          <source>Signal emitted when the frame with request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a4b14dec30840090d841939117aa80168eebe3" translate="yes" xml:space="preserve">
          <source>Signal emitted when the maximum supported digital</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31a56abcde81f3a22a5f078bd5af422ae35823e" translate="yes" xml:space="preserve">
          <source>Signal emitted when the maximum supported optical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c57997a713ed6fef041f2828d9d932e9a9b92e" translate="yes" xml:space="preserve">
          <source>Signal emitted when the reply server receives the authorization callback from the server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b366ecb8f3bbfdd3aaccc419d4d2397ac77d4fa" translate="yes" xml:space="preserve">
          <source>Signal emitted when the requested digital</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2d9658c365dfdfd10f7dfb27e69e51c8696ca4" translate="yes" xml:space="preserve">
          <source>Signal emitted when the requested exposure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a11f9d3b694cce2e1dc2b209c9b2e611734285" translate="yes" xml:space="preserve">
          <source>Signal emitted when the requested optical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03346c1197f98a1cabd8de0061dc0b35dbf7a26" translate="yes" xml:space="preserve">
          <source>Signal emitted when the server responds to the request with an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bc97d817d236d805bdaa9f4063e8e63419d66a" translate="yes" xml:space="preserve">
          <source>Signal emitted when the shutter speed range has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1272eb6d55e72e328756dec8eaa457f39966a8" translate="yes" xml:space="preserve">
          <source>Signal emitted when the supported range of exposure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13732027b8e647a885f1fc6ccd28e5c083ded6de" translate="yes" xml:space="preserve">
          <source>Signal handlers are a special sort of &lt;a href=&quot;#method-attributes&quot;&gt;method attribute&lt;/a&gt;, where the method implementation is invoked by the QML engine whenever the associated signal is emitted. Adding a signal to an object definition in QML will automatically add an associated signal handler to the object definition, which has, by default, an empty implementation. Clients can provide an implementation, to implement program logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0036174ff73ff91f1d76ec0051265b359d2cb1fa" translate="yes" xml:space="preserve">
          <source>Signal handlers for property change signal take the syntax form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2cd5df165d4a4ed7ff75560d4d31122d564466" translate="yes" xml:space="preserve">
          <source>Signal is emitted when the available audio inputs change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057d0c7d41f8dd04a12d2e6334d7bc158347df5e" translate="yes" xml:space="preserve">
          <source>Signal is emitted when the custom focus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef73e75926584d7c0517bd48e4e26d0de5ef38d3" translate="yes" xml:space="preserve">
          <source>Signal is emitted when the focus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc777800b021710954e855670bd4c066b4b83f0e" translate="yes" xml:space="preserve">
          <source>Signal is emitted when the focus point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b0e7e2604aeb9c002491082b0a029947c66d1e" translate="yes" xml:space="preserve">
          <source>Signal is emitted when the set of zones, camera focused on is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f94dbe336d730f84dfa2c681266ae3cdca727f" translate="yes" xml:space="preserve">
          <source>Signal objects have a &lt;code&gt;connect()&lt;/code&gt; method to a connect a signal either to a method or another signal. When a signal is connected to a method, the method is automatically invoked whenever the signal is emitted. This mechanism enables a signal to be received by a method instead of a signal handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6ee2085cddb3309ac4bd5e6891ee643103b0d1" translate="yes" xml:space="preserve">
          <source>Signal that the active in use network access point has been changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb161641056a2961b42378645eb0706f6b8c5b7" translate="yes" xml:space="preserve">
          <source>Signal that the availability of visual content has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644c83d427b38b1d766153e751f5185012d5ea87" translate="yes" xml:space="preserve">
          <source>Signal the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ee222c068d53089d3a9a4f73375b2742667cc7" translate="yes" xml:space="preserve">
          <source>Signal the amount of the local buffer filled as a percentage by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a083ee2415c615ba47967174b624392221aecc5" translate="yes" xml:space="preserve">
          <source>Signal the availability of meta-data has changed,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca1fc606e2968057f73848ee6fde4d36c3c21cb" translate="yes" xml:space="preserve">
          <source>Signal the availability of visual content has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2837a0badedcd8ba9d2d65064fef9aa49be68419" translate="yes" xml:space="preserve">
          <source>Signal the changes of meta-data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c502d901b1376a0795b0714ec6954fffa26cc5" translate="yes" xml:space="preserve">
          <source>Signal the changes of one meta-data element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed26ebf9c5cafd536daabd1a911e4d1597cac55b" translate="yes" xml:space="preserve">
          <source>Signal the duration of the content has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06894115adfa0296978a3b0675399c07a7364ca" translate="yes" xml:space="preserve">
          <source>Signal the flash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82403c95b6eb242351e1450071c1ff5e6ad62ae5" translate="yes" xml:space="preserve">
          <source>Signal the mute state has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7d0991396d240301209b4e2aed2c906ffe943f" translate="yes" xml:space="preserve">
          <source>Signal the playback volume has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d310ca0a0de4cb6c35e5b312f5492fb7ff31970" translate="yes" xml:space="preserve">
          <source>Signal the position of the content has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82aee052d584a15a710bdf9396c3e345a11dbca4" translate="yes" xml:space="preserve">
          <source>Signal to signal connect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5606ef08f055d1eb5648f63c0425ca6e8b46a79f" translate="yes" xml:space="preserve">
          <source>Signal/Slot return types cannot be references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c3405c5c7680422b22415658f0a7382e769c4f" translate="yes" xml:space="preserve">
          <source>SignalEvent Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79af38a38edeb99c8aebe2c1314bd50eefa3b87d" translate="yes" xml:space="preserve">
          <source>SignalSpy (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d49b8c0fe4acaa206851999e914ce66b43b365" translate="yes" xml:space="preserve">
          <source>SignalSpy QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3a5b13bf5ec22a903cbb0822b6eb66812c3837" translate="yes" xml:space="preserve">
          <source>SignalSpy.clear()</source>
          <target state="translated">SignalSpy.clear()</target>
        </trans-unit>
        <trans-unit id="d6bc817324c2e6d723e9d3617866642c833a1170" translate="yes" xml:space="preserve">
          <source>SignalSpy.count</source>
          <target state="translated">SignalSpy.count</target>
        </trans-unit>
        <trans-unit id="15f24b36a16eeaefab93c168209d85ab1eed2f63" translate="yes" xml:space="preserve">
          <source>SignalSpy.signalArguments</source>
          <target state="translated">SignalSpy.signalArguments</target>
        </trans-unit>
        <trans-unit id="bc0eefa6ea5058fe861e248b52a8b4eee08288ed" translate="yes" xml:space="preserve">
          <source>SignalSpy.signalName</source>
          <target state="translated">SignalSpy.signalName</target>
        </trans-unit>
        <trans-unit id="f7ca22e97f377aa04dfd141087cb841c96915f91" translate="yes" xml:space="preserve">
          <source>SignalSpy.target</source>
          <target state="translated">SignalSpy.target</target>
        </trans-unit>
        <trans-unit id="40b52c6cff310e25984163944e6ae3e0534e443c" translate="yes" xml:space="preserve">
          <source>SignalSpy.valid</source>
          <target state="translated">SignalSpy.valid</target>
        </trans-unit>
        <trans-unit id="f3879ea3662acd059e469cf5f0f880efb62398cf" translate="yes" xml:space="preserve">
          <source>SignalSpy.wait()</source>
          <target state="translated">SignalSpy.wait()</target>
        </trans-unit>
        <trans-unit id="f7a9b98e35e644c6559460503dc11e1ab090554f" translate="yes" xml:space="preserve">
          <source>SignalTransition</source>
          <target state="translated">SignalTransition</target>
        </trans-unit>
        <trans-unit id="4b033e12c22455d72a078fea5ab90f49cecca728" translate="yes" xml:space="preserve">
          <source>SignalTransition (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ef3443f55e7551ee4aeb2a48ccaf6e6f8d6443" translate="yes" xml:space="preserve">
          <source>SignalTransition QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c89d481d3e7ab63c000192aff27569061e11078" translate="yes" xml:space="preserve">
          <source>SignalTransition.guard</source>
          <target state="translated">SignalTransition.guard</target>
        </trans-unit>
        <trans-unit id="3767ab2ab1f22aea23c1fadbb29bc021c5e990f9" translate="yes" xml:space="preserve">
          <source>SignalTransition.signal</source>
          <target state="translated">SignalTransition.signal</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="29099fea9bfc2b1e054453c71c6da9dbf07d216d" translate="yes" xml:space="preserve">
          <source>Signals &amp;amp; Slots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b214f841d4239adf6c14125adf5e56f8f5187c" translate="yes" xml:space="preserve">
          <source>Signals And Slots With Default Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449bde4656459a5a0ae56344d219405151b9e90c" translate="yes" xml:space="preserve">
          <source>Signals a change in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba232538b628773b73e365575469b20b0eced376" translate="yes" xml:space="preserve">
          <source>Signals a radio tuner's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fe9d2902d0456acc9b035369de91307fa9d1d4" translate="yes" xml:space="preserve">
          <source>Signals all the requested camera settings are locked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c21b43043d14baba2b1c65a926434cb7f31ff1" translate="yes" xml:space="preserve">
          <source>Signals and Handlers Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfe589cd79482eb0a1558cb9df149d383a6fecb" translate="yes" xml:space="preserve">
          <source>Signals and Slots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584f1650025ef87fc332586f2b7a5263e0eb11b8" translate="yes" xml:space="preserve">
          <source>Signals and Slots Across Threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dc5ce177ca6eb8428c8a7dacb3551ca31cddf5" translate="yes" xml:space="preserve">
          <source>Signals and Slots Editing Mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9eded6e9fcfb40daf7cc68d8d4e8c3b55dc0e85" translate="yes" xml:space="preserve">
          <source>Signals and slots are used for communication between objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a17b2c029e03e5b21f74c190c36879385fdf5f1" translate="yes" xml:space="preserve">
          <source>Signals and slots are used for communication between objects. The signals and slots mechanism is a central feature of Qt and probably the part that differs most from the features provided by other frameworks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ec94f21953453176df3fd2c6e562d46b96a4e5" translate="yes" xml:space="preserve">
          <source>Signals and slots are used for communication between objects. The signals and slots mechanism is a central feature of Qt and probably the part that differs most from the features provided by other frameworks. ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ee84ad9c9a7f96b379e08cc8e14b36440d8822" translate="yes" xml:space="preserve">
          <source>Signals and slots are used for communication between objects. The signals and slots mechanism is a central feature of Qt and probably the part that differs most from the features provided by other frameworks. Signals and slots are made possible by Qt's &lt;a href=&quot;metaobjects#&quot;&gt;meta-object system&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980b1649f1e100dd4cca1a1943bf8483655dba59" translate="yes" xml:space="preserve">
          <source>Signals and slots can have return types, but signals or slots returning references will be treated as returning void.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b8687de905ba18ff11c7a9fbdaabc5f93f821b" translate="yes" xml:space="preserve">
          <source>Signals and slots, properties and children of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c72e45973357935f10004c91c4a9fca01fecb3" translate="yes" xml:space="preserve">
          <source>Signals are automatically generated by the &lt;a href=&quot;moc&quot;&gt;moc&lt;/a&gt; and must not be implemented in the &lt;code&gt;.cpp&lt;/code&gt; file. They can never have return types (i.e. use &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bd1ce55eeba3b0112698c2ac5b7b9e4e331a72" translate="yes" xml:space="preserve">
          <source>Signals are emitted by an object when its internal state has changed in some way that might be interesting to the object's client or owner. Signals are public access functions and can be emitted from anywhere, but we recommend to only emit them from the class that defines the signal and its subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300c056b9e6bd63487a024f2f177ad05e635aa2e" translate="yes" xml:space="preserve">
          <source>Signals are not blocked by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356d20e0d201349baed33fa4738458e953ae8a4b" translate="yes" xml:space="preserve">
          <source>Signals can be added to custom QML types through the &lt;code&gt;signal&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6abbcfbe792cc7c100b5e7c839ae3ff9be5aa8" translate="yes" xml:space="preserve">
          <source>Signals emitted while being blocked are not buffered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c42b191e9e7ed37785498a69e64e6f3322b1ca6" translate="yes" xml:space="preserve">
          <source>Signals from the delegate are used during editing to tell the model and view about the state of the editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f6851aa32169c39251813705da6c7f22489f2a" translate="yes" xml:space="preserve">
          <source>Signals from the model inform the view about changes to the data held by the data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217aa4877ca4be0f3bafed07bbd39a1b706fbcc2" translate="yes" xml:space="preserve">
          <source>Signals from the view provide information about the user's interaction with the items being displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c3a425f11bd84613afccd835baea7035850997" translate="yes" xml:space="preserve">
          <source>Signals locking of at least one requested camera settings failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c32970342c5ee6d821cfe9a008db53ca0e581d" translate="yes" xml:space="preserve">
          <source>Signals that a camera's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07ce0a6956909ed9a9f3a9b27928fa635fa6aa1" translate="yes" xml:space="preserve">
          <source>Signals that a camera's shutter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8850791da6a0e13210f0faf40050b5b8653649bc" translate="yes" xml:space="preserve">
          <source>Signals that a capture control's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1b576e8be7ca99ef33ea8272077f8aba248347" translate="yes" xml:space="preserve">
          <source>Signals that a captured</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9815cf844765db536ffb0ac52395e70e027d7a83" translate="yes" xml:space="preserve">
          <source>Signals that a captured image with a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd6f4bbdf7ebb29e286dceb1880c39a1f872f1f" translate="yes" xml:space="preserve">
          <source>Signals that a media object's meta-data has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0e2c4798d445a7b19bc99ea76c83c8b564f976" translate="yes" xml:space="preserve">
          <source>Signals that a media recorder's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d6e7c4f040e48eb606afcc09a04df6ae1c0e61" translate="yes" xml:space="preserve">
          <source>Signals that a metadata for an image with request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f528fb8511eec4de5c5bb6c1c655266d1a2c77" translate="yes" xml:space="preserve">
          <source>Signals that a new buffer is ready for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e7763900df70205ea06e13a72ac5e77d6fead4" translate="yes" xml:space="preserve">
          <source>Signals that a new decoded audio buffer is available to be read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b40d96ef0f2c6a02d851bac6e22ee6605006566" translate="yes" xml:space="preserve">
          <source>Signals that a station was found in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf4ca0c35766ea9d383c229f31228e217456eb4" translate="yes" xml:space="preserve">
          <source>Signals that a video overlay's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73a68d81a57e5fbae220d261161091314dc9edd" translate="yes" xml:space="preserve">
          <source>Signals that a video widget's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90684cc21dc91f32b49fbfb12f7f25a73c92390f" translate="yes" xml:space="preserve">
          <source>Signals that a video widgets's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789261040149916bdbe6490c76ed7793771433a8" translate="yes" xml:space="preserve">
          <source>Signals that an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb2ec8e95add3af5176ae83c3e8eb9e7b8dddf3" translate="yes" xml:space="preserve">
          <source>Signals that an image with it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7835816e402ac98ec83ef797ec16f3e768dc80" translate="yes" xml:space="preserve">
          <source>Signals that automatically tuning to alternative frequencies has been enabled or disabled according to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2310d5f035d35db6d6c82e5d8577ca8fd5a3c0d2" translate="yes" xml:space="preserve">
          <source>Signals that list of available inputs has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9530e1f6432a71cc64bf181be513d99a1cb47209" translate="yes" xml:space="preserve">
          <source>Signals that list of available outputs has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6222568e9b6a03e7f6ffd52f1eebbeac5317a73" translate="yes" xml:space="preserve">
          <source>Signals that new station with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5885bf4cfe7265f51fad61de2f84b7a9133c4216" translate="yes" xml:space="preserve">
          <source>Signals that the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95b660e09694269714710a469eb507c9293ee81" translate="yes" xml:space="preserve">
          <source>Signals that the &lt;a href=&quot;qaudiodecodercontrol#bufferAvailable&quot;&gt;bufferAvailable&lt;/a&gt; property has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6ac4a7f1ade7b3150dcf28643c266faea9e609" translate="yes" xml:space="preserve">
          <source>Signals that the Program Identification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cfc6607feef1c61331bbf24d59057347fc89e2" translate="yes" xml:space="preserve">
          <source>Signals that the Program Identification code has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e79520104774d2143f938247dbbbabfcc92287" translate="yes" xml:space="preserve">
          <source>Signals that the Program Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3460195c1c3b07adc154d5cd7f38a3961fb5a128" translate="yes" xml:space="preserve">
          <source>Signals that the Program Service has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5904a53369d6b2a09d27f82b12dbc80a862109e6" translate="yes" xml:space="preserve">
          <source>Signals that the Program Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7deae78a9c0220d67d972b650c7b936f93eab84" translate="yes" xml:space="preserve">
          <source>Signals that the Program Type Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0e8319ca8e2ddbac4ea9d78b480184d5a8e08c" translate="yes" xml:space="preserve">
          <source>Signals that the Program Type Name has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbfd9d49161b636d45292c64bb99e675149289e" translate="yes" xml:space="preserve">
          <source>Signals that the Program Type code has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e1405b7e95ae605b94c5463cc293448af95fdd" translate="yes" xml:space="preserve">
          <source>Signals that the Radio Text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd2cd83cf9106619bc11db78702678617ad8c46" translate="yes" xml:space="preserve">
          <source>Signals that the Radio Text property has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb7e0a5a12b090ccb4cbc3bccbfa8d53c6e3dcf" translate="yes" xml:space="preserve">
          <source>Signals that the actual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b640910af85b405952f7f65a5fd0ac91fc5cbfa" translate="yes" xml:space="preserve">
          <source>Signals that the actual media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bd8228c63b4fa309edb2365988a347ed59c960" translate="yes" xml:space="preserve">
          <source>Signals that the alternative frequencies setting has changed to the value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab8d1c2fe60b63d0a732ec6eca99c5d7d668abf" translate="yes" xml:space="preserve">
          <source>Signals that the antenna has either been connected or disconnected as reflected with the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e963828e6983d64ee1ca503002382d0b2cb138b2" translate="yes" xml:space="preserve">
          <source>Signals that the audio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f81a861bb8e11a04cf5237b282a94e4ad5c1a6e" translate="yes" xml:space="preserve">
          <source>Signals that the audio input has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455149ffba4757f9afdc696a7639c25e801c14fe" translate="yes" xml:space="preserve">
          <source>Signals that the audio output has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db97243e1855b12fbec8c84bb671ee23169e00a5" translate="yes" xml:space="preserve">
          <source>Signals that the available media playback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943a8726db641c8fa08e4e305a8397af6cc2533b" translate="yes" xml:space="preserve">
          <source>Signals that the capture request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33aad887852a17e86e6271b5647c3d7e864fdf78" translate="yes" xml:space="preserve">
          <source>Signals that the configured</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff996e3ebb862cf8a951f7ab98cb6916ee07504" translate="yes" xml:space="preserve">
          <source>Signals that the current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e8555f857ed4c3fc1d3fa9fb46d3510f84db09" translate="yes" xml:space="preserve">
          <source>Signals that the current audio format of the decoder has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605b77b4a8890e428c79b103603cbc0d9a7b99d7" translate="yes" xml:space="preserve">
          <source>Signals that the current media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da89389f6691b25dc49a72769182e50509d75ee3" translate="yes" xml:space="preserve">
          <source>Signals that the current playing content has been changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="941c49e64fd8856a487df40adfdd40991846e602" translate="yes" xml:space="preserve">
          <source>Signals that the current source of the decoder has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e7fb7be2b96679848e7b330406915ab35ea689" translate="yes" xml:space="preserve">
          <source>Signals that the decoding has finished successfully. If decoding fails, error signal is emitted instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04646b6da0459a4cd3285d1f870d497649a70100" translate="yes" xml:space="preserve">
          <source>Signals that the estimated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c988dcd8148839b3b1b2dcc6ea915740b92c71" translate="yes" xml:space="preserve">
          <source>Signals that the frequency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ace6fd48cd946fe1e80d8a51df51b35f4c8f8b" translate="yes" xml:space="preserve">
          <source>Signals that the job execution has finished (be it successfully, because an error happened or because it was cancelled).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2924a88b63013a7ce000c48fb8a6fdc14af63156" translate="yes" xml:space="preserve">
          <source>Signals that the list of available video devices has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86f6dc2958d55953c68604d266c38896fe589f2" translate="yes" xml:space="preserve">
          <source>Signals that the media recorder is now available (if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c18f3154a32b30fb36f6106a7bc7382d5bba2ec" translate="yes" xml:space="preserve">
          <source>Signals that the media source has been changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9d7626715bcffad870626e8601dc1be86d21c0" translate="yes" xml:space="preserve">
          <source>Signals that the native</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf5e0c42e11e30f3cce5bdfd0aa09ae40480efd" translate="yes" xml:space="preserve">
          <source>Signals that the native dimensions of the video have changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986476f5745e5a074ecc265fda76e08ce43c2859" translate="yes" xml:space="preserve">
          <source>Signals that the next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940cfedcb2776cbf5d264b4cb25a53c16076d920" translate="yes" xml:space="preserve">
          <source>Signals that the percentage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97a38c9f62a7708f4e65fb198b9a86ac3573497" translate="yes" xml:space="preserve">
          <source>Signals that the selected video device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f83f1d5f8720f70449040ce8ecad237d994070" translate="yes" xml:space="preserve">
          <source>Signals that the service availability has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e54a6c5277b54622570362abbf8a2d96d84bee" translate="yes" xml:space="preserve">
          <source>Signals that the set of formats supported by a video surface has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce85e2b4f2eed4a1fe5e45567dd7a8b702f5663" translate="yes" xml:space="preserve">
          <source>Signals that the state of a player control has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e129d3bbe48c1c24df7437c02f12d8a4a0f4c3" translate="yes" xml:space="preserve">
          <source>Signals that there has been a change in the availability of audio output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa30a037e45aab9c6167e83c8e7143034e46f42" translate="yes" xml:space="preserve">
          <source>Signals that this media object's meta-data has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d77aa940a7489111001057f0ceecca094775707" translate="yes" xml:space="preserve">
          <source>Signals the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f099c4b5a2ba7713503e27d57a858355e126fc" translate="yes" xml:space="preserve">
          <source>Signals the &lt;a href=&quot;qmediaplayer#playbackRate-prop&quot;&gt;playbackRate&lt;/a&gt; has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd2b40f8e594260804cdff63ceb1dbc15d530a1" translate="yes" xml:space="preserve">
          <source>Signals the audio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec5e67295a5287b8aaf50bf33832bd08afb73f3" translate="yes" xml:space="preserve">
          <source>Signals the availability (if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295a0881f9f49906debb883e28fd9989c7cd8d65" translate="yes" xml:space="preserve">
          <source>Signals the availability of audio content has changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a780ec064e3e76645854d5d895d75aff9fe4952c" translate="yes" xml:space="preserve">
          <source>Signals the buffer image capture format changed to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2202134b937d7e31e284fe22a29ebbd911685eb8" translate="yes" xml:space="preserve">
          <source>Signals the camera</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573a13c87fd9b6c28e579a8ce047db40b603123b" translate="yes" xml:space="preserve">
          <source>Signals the capture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16434feef68d6c64cebf5d3c4a560255c89ed35" translate="yes" xml:space="preserve">
          <source>Signals the capture request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab88d4cdea5d385cfad03fb3c793cb9786f968b" translate="yes" xml:space="preserve">
          <source>Signals the image capture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833916af1e7b4e40928e2cbf5fd05ea1c3059be7" translate="yes" xml:space="preserve">
          <source>Signals the lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0af0e0834a1e989c2121d3e751d8640921b0e77" translate="yes" xml:space="preserve">
          <source>Signals the native</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cfbbd3997108e5069a287bd03b18b05a153b3d" translate="yes" xml:space="preserve">
          <source>Signals the overall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681c3a48328420b6ddfea2fc275f89c847f1f25d" translate="yes" xml:space="preserve">
          <source>Signals the playback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd42ec132f826d9303723dc1141a71fdd3366169" translate="yes" xml:space="preserve">
          <source>Signals when a new sensor gesture becomes available for use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351377d05222e1cea0ce7adbd4aa8f737c5e2c69" translate="yes" xml:space="preserve">
          <source>Signals when the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd20fc91dba9699b28f9ec45cbc48e0e5eefb99" translate="yes" xml:space="preserve">
          <source>Signals when the gesture with id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de67e36270268650464e3922fb5ed284dc715746" translate="yes" xml:space="preserve">
          <source>Signals when the player advances to the next media (the content of next media will be cleared).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bdf1c21cf844366388d6cb40a8194ee88f00fc" translate="yes" xml:space="preserve">
          <source>Signals, Notifiers, and Slots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f32be1dc74166373c988ec03b0bd86f0a576919" translate="yes" xml:space="preserve">
          <source>Signature</source>
          <target state="translated">Signature</target>
        </trans-unit>
        <trans-unit id="c84b7f8a95c9e5a785d8ae865780888571b0ed57" translate="yes" xml:space="preserve">
          <source>Signed integer, stored in 8, 16, 24, 32, 48, or 64-bits depending on the magnitude of the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e640bc6cc5785ca0b0113c57ef1e5c59d9063f4" translate="yes" xml:space="preserve">
          <source>Signifies the &lt;code&gt;\&amp;gt;\&amp;gt;&lt;/code&gt; operator. Test whether the first operand follows the second in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4230819457eff32a9baaf93dcd71a17046ad2b" translate="yes" xml:space="preserve">
          <source>Signifies the &lt;code&gt;\&amp;lt;\&amp;lt;&lt;/code&gt; operator. Test whether the first operand precedes the second in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3d2ec477bb19437cd59fcbd996fbe4bf10fbac" translate="yes" xml:space="preserve">
          <source>Signifies the &lt;code&gt;is&lt;/code&gt; operator. Test whether two nodes have the same node identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ecaa02105d340336f3001d1968ed82942b0e81" translate="yes" xml:space="preserve">
          <source>Signing the Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a68754dd0dd881bddc888c2ad5477fb5eb2213a" translate="yes" xml:space="preserve">
          <source>Signs the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2996b8fb2c90420a380cfd35d6f289626fca231" translate="yes" xml:space="preserve">
          <source>Silicon Valley</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788f22142886155ce5d4729bcb0c9b92b7d9337b" translate="yes" xml:space="preserve">
          <source>Similar differences are possible in the buffer sizes, for example, the resulting context may have a larger depth buffer than requested. This is perfectly normal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7be3cd89c9ee32035611e529d18fe299a808833" translate="yes" xml:space="preserve">
          <source>Similar semantics for the &lt;code&gt;&amp;lt;Qualifier&amp;gt;&lt;/code&gt; apply to directory imports as for module imports; for more information on the topic, please see the previous section about &lt;a href=&quot;#importing-into-a-qualified-local-namespace&quot;&gt;Importing into a Qualified Local Namespace&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b008ce816f37207706f5ae46ab90f5791ce0ed2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#code-command&quot;&gt;\code&lt;/a&gt;, \badcode and \endcode commands enclose content that is rendered verbatim in a separate paragraph, but no parsing or automatic link creation is performed. Instead, the content is treated as plain text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f067cff72be726ceab7ec7eb1a06c93ac9810f85" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#member-functions&quot;&gt;functions&lt;/a&gt;, the default type may be linked or marked with the &lt;code&gt;\c&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb758966cc28ff4e63b7b97b3d7ae3777fe1f6f0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;qobject#objectName-prop&quot;&gt;QObject::setObjectName&lt;/a&gt;() (which this method calls), but this version also applies the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b357a68feba8f930e61db494289882a14266db13" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Indexed&lt;/code&gt;, pixel values represent a vector of available gray tones. &lt;a href=&quot;qcolormap&quot;&gt;QColormap&lt;/a&gt; uses the index of the gray tone that most closely matches the computed gray tone of an RGB value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6c18de9ab3be939d7d0367d9d08477a8a2cab6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;RenderDirectToBackground&lt;/code&gt; mode, except that the graph will not clear the whole window before rendering the graph. This mode is better for windows where you have other custom items besides the graphs that also draw on the window background. In that case you need to either take care of the window clearing yourself or ensure that all areas of the window are fully covered with opaque items. If one graph in the window uses either of the direct rendering modes, then all other graphs in the same window also drawn in direct modes should use the exact same direct rendering mode. Otherwise some graphs may not show up, depending on the drawing order of the graphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147b99496e5f22e049c77e219c2ba8265eabac66" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;classesbymodule&lt;/code&gt; argument, but used for listing the JavaScript types from the module specified with the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7b15fdf36bd876d37df41ea84cad66fc0fa208" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;classesbymodule&lt;/code&gt; argument, but used for listing the QML types from the QML module specified with the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfc9f745138d565f2a8e9fbb14f6473de4cdc68" translate="yes" xml:space="preserve">
          <source>Similar to CompositionMode_Difference, but with a lower contrast. Painting with white inverts the destination color, whereas painting with black leaves the destination color unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7c93661c980958651388bff6d26a4753ebcdfb" translate="yes" xml:space="preserve">
          <source>Similar to Decimal, but the exponent is a power of 2 instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d688e2c4bd9437b6087722eeaa7baaafd824547a" translate="yes" xml:space="preserve">
          <source>Similar to PartialUpdateBlit, but instead of using framebuffer blits, the contents of the extra framebuffer is rendered by drawing a textured quad with blending enabled. This, unlike PartialUpdateBlit, allows alpha blended content and works even when the glBlitFramebuffer is not available. Performance-wise this setting is likely to be somewhat slower than PartialUpdateBlit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76f3d378c32b8ba67fa8d7bcafe76ab09dbe4e1" translate="yes" xml:space="preserve">
          <source>Similar to Repeat, but scales the image down to ensure that the last tile is not cropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2aee5d9d2ddeca003945e1dacbe6ddf830214b0" translate="yes" xml:space="preserve">
          <source>Similar to items in Qt Quick, Popup's &lt;a href=&quot;qml-qtquick-controls2-popup#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-popup#y-prop&quot;&gt;y&lt;/a&gt; coordinates are relative to its parent. This means that opening a popup that is a child of a &lt;a href=&quot;qml-qtquick-controls2-button&quot;&gt;Button&lt;/a&gt;, for example, will cause the popup to be positioned relative to the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a8116a5e8b4368f523c96b51089259b0b7442d" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;qwindows&lt;/code&gt; plugin, but replaces the raster paint engine with a Direct2D-based paint engine for &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; and &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e464010c227e63892706f92bb5502275f73e3b6" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qmouseevent&quot;&gt;QMouseEvent&lt;/a&gt;, Qt automatically grabs each touch point on the first press inside a widget, and the widget will receive all updates for the touch point until it is released. Note that it is possible for a widget to receive events for numerous touch points, and that multiple widgets may be receiving touch events at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54e97a14c84bc525fec6fd0fe36dff934ec8df4" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, any actual Vulkan instance creation happens only when calling &lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;(). This allows using &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; as a plain member variable while retaining control over when to perform initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a940ad1411bb603e45ff5c435008b1f75fc62d" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;, &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; supports the &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_ShareOpenGLContexts&lt;/a&gt; attribute. When enabled, the OpenGL contexts of all &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; instances will share with each other. This allows accessing each other's shareable OpenGL resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64027eb5a395729889261ca545938c1a1973257a" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;, device extensions can be queried via &lt;a href=&quot;qvulkanwindow#supportedDeviceExtensions&quot;&gt;supportedDeviceExtensions&lt;/a&gt;() before the actual initialization. Requesting an extension to be enabled is done via &lt;a href=&quot;qvulkanwindow#setDeviceExtensions&quot;&gt;setDeviceExtensions&lt;/a&gt;(). Such calls must be made before the window becomes visible, that is, before calling &lt;a href=&quot;qwindow#show&quot;&gt;show&lt;/a&gt;() or similar functions. Unsupported extension requests are gracefully ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023df70b0406ed89fb2bff7b0fca0b3b4ffd28ee" translate="yes" xml:space="preserve">
          <source>Similarly, a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing a sequential container will also return true for this function the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baab7f467b66a244a84d3886f380b95d38805422" translate="yes" xml:space="preserve">
          <source>Similarly, a colon in JavaScript can be either an object property value assignment, or a code label. Thus, initializing a var property with an object declaration can also require parentheses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec87c1bbc3d215db132063ec051d18d8dafa183" translate="yes" xml:space="preserve">
          <source>Similarly, an invisible item cannot have focus, so if the item has focus when it becomes invisible, it will lose focus, and the focus is not regained by simply making the item visible again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab0699284ef0f779720852beda2fd3933f755c8" translate="yes" xml:space="preserve">
          <source>Similarly, elements which are invisible (for example, the second tab in a tab widget, while the first tab is shown) but need to be initialized at startup time (for example, if the cost of instantiating the second tab takes too long to be able to do it only when the tab is activated), should have their &quot;visible&quot; property set to &lt;code&gt;false&lt;/code&gt;, in order to avoid the cost of drawing them (although as previously explained, they will still incur the cost of any animations or bindings evaluation since they are still active).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9707fcd78987c9f5bbd65379022999c405e2e83e" translate="yes" xml:space="preserve">
          <source>Similarly, if &lt;a href=&quot;qcborvalue#EncodingOption-enum&quot;&gt;UseFloat16&lt;/a&gt; is specified, this function will try to use half-precision (&lt;code&gt;qfloat16&lt;/code&gt;) floating point if the conversion to that results in no loss of precision. This is always true for infinities and NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925e2a92b6e27bd33fbd71efdcf4b3a3cee05e07" translate="yes" xml:space="preserve">
          <source>Similarly, if &lt;a href=&quot;qcborvalue#EncodingOption-enum&quot;&gt;UseFloat16&lt;/a&gt; is specified, this function will try to use half-precision (binary16) floating point if the conversion to that results in no loss of precision. This is always true for infinities and NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8036471f578274ed2be7f95ad96a9f887554f13" translate="yes" xml:space="preserve">
          <source>Similarly, if a C++ type uses a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; for a property type or method parameter, the value can be created as a JavaScript &lt;code&gt;Date&lt;/code&gt; object in QML, and is automatically converted to a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; value when it is passed to C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e715f657c0b8f777bff996f538cfef9b5b87a2cb" translate="yes" xml:space="preserve">
          <source>Similarly, if a C++ type uses a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; or &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; type for a property type or method parameter, the value can be created as a JavaScript array or object in QML, and is automatically converted to a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; or &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; when it is passed to C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789dc253d9cbf3f5d250a41311780d33b8c385a6" translate="yes" xml:space="preserve">
          <source>Similarly, if the service provider supports reverse geocoding the subclass should provide an implementation &lt;a href=&quot;qgeocodingmanagerengine#reverseGeocode&quot;&gt;reverseGeocode&lt;/a&gt;() and call setSupportsReverseGeocoding(true) at some point in time before &lt;a href=&quot;qgeocodingmanagerengine#reverseGeocode&quot;&gt;reverseGeocode&lt;/a&gt;() is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1deb2d9b3f59a2afcc8f76616ce863c908e86e" translate="yes" xml:space="preserve">
          <source>Similarly, if you must unload a set of resources explicitly (because a plugin is being unloaded or the resources are not valid any longer), you can force removal of your resources by calling &lt;a href=&quot;qdir#Q_CLEANUP_RESOURCE&quot;&gt;Q_CLEANUP_RESOURCE&lt;/a&gt;() with the same base name as above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020f131cef53e9ee20f2bfc6da2e8ac01c55c77b" translate="yes" xml:space="preserve">
          <source>Similarly, if you want to pick a different data file based on target platform, your code might look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43386487d2383c8807d0a2f7a9c221578fd62021" translate="yes" xml:space="preserve">
          <source>Similarly, logging can be disabled at any time by calling the &lt;a href=&quot;qopengldebuglogger#stopLogging&quot;&gt;stopLogging&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b19a346a05f651da06e16abd3ebcdddaf5d2f9" translate="yes" xml:space="preserve">
          <source>Similarly, selectors with pseudo-states are more specific than ones that do not specify pseudo-states. Thus, the following style sheet specifies that a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; should have white text when the mouse is hovering over it, otherwise red text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b14b05e400a26dec51fd388b83bef5e937a947" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtnetwork-blockingfortuneclient-example.html&quot;&gt;Blocking Fortune Client Example&lt;/a&gt; uses a separate thread for communicating with a TCP server asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e82666514b0028697ada3c767b4a187bfff3e56" translate="yes" xml:space="preserve">
          <source>Similarly, the HSL saturation value is not in general the same as the HSV saturation value for the same color. &lt;a href=&quot;qcolor#hslSaturation&quot;&gt;hslSaturation&lt;/a&gt;() provides the color's HSL saturation value, while &lt;a href=&quot;qcolor#saturation&quot;&gt;saturation&lt;/a&gt;() and &lt;a href=&quot;qcolor#hsvSaturation&quot;&gt;hsvSaturation&lt;/a&gt;() provides the HSV saturation value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ba5350e2a93177460c5db40d4515a674d49def" translate="yes" xml:space="preserve">
          <source>Similarly, you can use a factory to make queries directly to the system proxy by calling its &lt;a href=&quot;qnetworkproxyfactory#systemProxyForQuery&quot;&gt;systemProxyForQuery&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf39332f7f9ec55369ff0fa01d53a3046d79b14" translate="yes" xml:space="preserve">
          <source>Similarly, you must call &lt;a href=&quot;qstring#toLatin1&quot;&gt;toLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;(), or &lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt;() explicitly to convert the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to an 8-bit string. (Other encodings are supported through the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; class.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c92707df0d245741324672c52ba7a1e6d853475" translate="yes" xml:space="preserve">
          <source>Similary, top level layouts are set on container widgets (&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;) or on pages of page-based container widgets (&lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, &lt;a href=&quot;qtoolbox&quot;&gt;QToolBox&lt;/a&gt; and &lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt;), respectively. The container widget needs to be selected for this to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de72ea9e60d3b0389fb7873c1d21268b088fa6d4" translate="yes" xml:space="preserve">
          <source>Simple</source>
          <target state="translated">Simple</target>
        </trans-unit>
        <trans-unit id="ff1f9d9b561e51876dde5e8e975541fd3f86cf21" translate="yes" xml:space="preserve">
          <source>Simple Example (ActiveQt)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6e3b8d130816007102ec233dd6d5e5a5ec5fca" translate="yes" xml:space="preserve">
          <source>Simple Material</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebcaa801cfde00b6b29694471e849260082e83e6" translate="yes" xml:space="preserve">
          <source>Simple Shader Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d902d645f7d80407bcfe0e2431dba5c6c6e9c4ad" translate="yes" xml:space="preserve">
          <source>Simple Tree Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d80614fb02919df2130e0cf07973a7e14a3355" translate="yes" xml:space="preserve">
          <source>Simple Tree Model Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cebb81de516a78c5d266f49c1307f39371f3be" translate="yes" xml:space="preserve">
          <source>Simple control over torch functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da67646c41dc16cd97c4622a296ccec4f3576627" translate="yes" xml:space="preserve">
          <source>Simple control over torch functionality. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5899725c7ead91bff4611858c1643429a96098" translate="yes" xml:space="preserve">
          <source>Simple convenience dialog to get a single value from the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81c399bc9fdaf915aa912b0487576314ba62e34" translate="yes" xml:space="preserve">
          <source>Simple keyframe animation implementation for &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8cb2909a8eeb83c93ff6411e0090c09ef15676" translate="yes" xml:space="preserve">
          <source>Simple models can be created by subclassing this class and implementing the minimum number of required functions. For example, we could implement a simple read-only &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;-based model that provides a list of strings to a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; widget. In such a case, we only need to implement the &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() function to return the number of items in the list, and the &lt;a href=&quot;qabstractitemmodel#data&quot;&gt;data&lt;/a&gt;() function to retrieve items from the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404e9ce9fbd0b5c0821d22c489f49efaf5c87206" translate="yes" xml:space="preserve">
          <source>Simple radial gradients interpolate colors between a focal point and end points on a circle surrounding it. Extended radial gradients interpolate colors between a focal circle and a center circle. Points outside the cone defined by the two circles will be transparent. For simple radial gradients the focal point is adjusted to lie inside the center circle, whereas the focal point can have any position in an extended radial gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c871d43a1d01c8971057d32f5dbb5b09400e4e3" translate="yes" xml:space="preserve">
          <source>Simple spherical volume, defined by its center and radius</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17cb7aa48d55c0b31cefaff2b16dff39a86fd52" translate="yes" xml:space="preserve">
          <source>Simple text path item that you can add to a QGraphicsScene</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6b81d17074fc5cace73afa03f1e272396a9a85" translate="yes" xml:space="preserve">
          <source>Simple transformations, meaning translation and scaling, pluss 0, 90, 180, 270 degree rotations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460e0cbdf7f85b57fb0b9092f75f48e34791ec3e" translate="yes" xml:space="preserve">
          <source>Simple type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4397912d7de4830d83680a01007966be7718efd9" translate="yes" xml:space="preserve">
          <source>Simple types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1417fe6b2b04c3a98c0ae11656c4337900339371" translate="yes" xml:space="preserve">
          <source>Simple types should not be used until a specification for them has been published, since other implementations may not support them properly. Simple type values 24 to 31 are reserved and must not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9d81375b3e00ac7181da48db393f596f8b7216" translate="yes" xml:space="preserve">
          <source>Simpliar constraints apply for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03f20a90b59b059ccb5f39b63fa73e127da8ce9" translate="yes" xml:space="preserve">
          <source>Simplified Chinese</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc10bcd79b7c757a0ea9b160172430b43bf6187" translate="yes" xml:space="preserve">
          <source>Simplified Chinese Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c87a9a8c62c9a638c96ee663fe27e446d3498c" translate="yes" xml:space="preserve">
          <source>Simplify &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt; or &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082e1db1cf3297d6daf9789dee2e4d52d8a96491" translate="yes" xml:space="preserve">
          <source>Simply call the &lt;a href=&quot;qimage#save&quot;&gt;save&lt;/a&gt;() function to save a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5513a5962ec289568c106e227095d2af5eda2fe6" translate="yes" xml:space="preserve">
          <source>Simply call the &lt;a href=&quot;qpixmap#save&quot;&gt;save&lt;/a&gt;() function to save a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d5d2b41a09aad37d0804e70f780bc6f3549a63" translate="yes" xml:space="preserve">
          <source>Simply put, applications need to form data and display the data. Qt Quick has the notion of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80119875175c1dff359a89dd1e591c68977d79dd" translate="yes" xml:space="preserve">
          <source>Simply use the &lt;a href=&quot;qpen#setStyle&quot;&gt;setStyle&lt;/a&gt;() function to convert the pen style to either of the built-in styles, except the &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::CustomDashLine&lt;/a&gt; style which we will come back to shortly. Setting the style to &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::NoPen&lt;/a&gt; tells the painter to not draw lines or outlines. The default pen style is &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::SolidLine&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6af58a72b840e10016c7a109629afeff578510" translate="yes" xml:space="preserve">
          <source>Simulates clicking a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a05226e7fa3d22de9fd89565ad4f95a75361ed8" translate="yes" xml:space="preserve">
          <source>Simulates clicking a mouse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593bbc2198f56cdbab9190a2acfd30026d124532" translate="yes" xml:space="preserve">
          <source>Simulates clicking of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db61f56157291936c593182e4926675f1e9c8a8c" translate="yes" xml:space="preserve">
          <source>Simulates double clicking a mouse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c307551d9276ec61296e8424c78648aeba2d4a8" translate="yes" xml:space="preserve">
          <source>Simulates double-clicking a mouse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615f606b47186677bd6f85aa1b652490d7df9067" translate="yes" xml:space="preserve">
          <source>Simulates dragging the mouse on an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93132f0ee74850906a92c3e3d37181f96e2f6eb" translate="yes" xml:space="preserve">
          <source>Simulates pressing a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7347635a463e2666ba347dea941f2952d856998c" translate="yes" xml:space="preserve">
          <source>Simulates pressing a mouse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fba9462a39f32694cf282ff7b8c5949c94929b" translate="yes" xml:space="preserve">
          <source>Simulates reading a &lt;code&gt;std::nullptr_t&lt;/code&gt; from the stream into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74677ed423286ea75cb3e0045eb413904f324f5e" translate="yes" xml:space="preserve">
          <source>Simulates releasing a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee46972068f9e75f4658f30c9636553df7e9b0ee" translate="yes" xml:space="preserve">
          <source>Simulates releasing a mouse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297719b5c058e5a726629d2e2a97d9efcb53cd67" translate="yes" xml:space="preserve">
          <source>Simulates rotating the mouse wheel on an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e664754e81296e77393a5248221ca4bd421464" translate="yes" xml:space="preserve">
          <source>Simulates that the user did not move the finger identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74654f367bad1df4dbcad2807d742564c932e156" translate="yes" xml:space="preserve">
          <source>Simulates that the user lifted the finger identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83995c6a872694294a2c44e449384b1cf96456f3" translate="yes" xml:space="preserve">
          <source>Simulates that the user moved the finger identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49daee7b9cff1b83dea469e35894091733b03de" translate="yes" xml:space="preserve">
          <source>Simulates that the user pressed the touch screen or pad with the finger identified by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d3fa62ed290ae9612ca7471f7f1b9703768b53" translate="yes" xml:space="preserve">
          <source>Simulates the events from the list one by one on the widget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9c6b40b25e7a0447b6f00257f7fd8e1eb3a48a" translate="yes" xml:space="preserve">
          <source>Simulates the full sequence of events generated by double-clicking a mouse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de44eb82cbf2ca4f4295f00eb7f9edd9aad27ae4" translate="yes" xml:space="preserve">
          <source>Simulates typing of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482bf379a87145dae2841ed78ac0ea5b30d64617" translate="yes" xml:space="preserve">
          <source>Simulates writing a &lt;code&gt;std::nullptr_t&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5ed12c0783f56d2b622a6170d87f63d2991af9" translate="yes" xml:space="preserve">
          <source>Simulating Keyboard and Mouse Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51fb9d95b8ee92d7d6325671671140445c81584" translate="yes" xml:space="preserve">
          <source>Simultaneously in two directions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a4ed66c623d273a571652cc9ae1a89577a837f" translate="yes" xml:space="preserve">
          <source>Since</source>
          <target state="translated">Since</target>
        </trans-unit>
        <trans-unit id="da81fe86e0e45464ea83b285e4671b2f02121e1b" translate="yes" xml:space="preserve">
          <source>Since 4.3, setting a stylesheet on a &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; automatically sets the &lt;a href=&quot;qframe#frameStyle&quot;&gt;QFrame::frameStyle&lt;/a&gt; property to &lt;a href=&quot;qframe#Shape-enum&quot;&gt;QFrame::StyledPanel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217f3edeaf4f81dc9e2edb48c386e572fb90d3e0" translate="yes" xml:space="preserve">
          <source>Since 4.7, the returned region only contains rectangles intersecting (or included in) the viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95649b7c08eccea07bf5a5c3c804e94da3b16650" translate="yes" xml:space="preserve">
          <source>Since 5.0. The boundary finder is at the end of a grapheme, a word, a sentence, or a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2ad0e28a62743156d44b939464c1c204677d8a" translate="yes" xml:space="preserve">
          <source>Since 5.0. The boundary finder is at the end of line (can occur for a Line boundary type only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4457c427b995e17ac5b42a0ba9fc15ace212765b" translate="yes" xml:space="preserve">
          <source>Since 5.0. The boundary finder is at the start of a grapheme, a word, a sentence, or a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d33f0ae16e72dc335351882add53c320b7df625" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; resembles &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and has similar API, it is easier to port a widget from &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; to &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;, instead of &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd39dbf36ef11f6e0a94dd1fd40f2008e30ac1a" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt; 5.12, plugins can additionally restrict this value depending on the current zoom level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cae441b3e0c96795bb9495c8147139e85163a5" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.3 (Qt 5.10), it is also possible to create sub-menus and declare Action objects inside Menu:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8513967906707a5837dbdcdedb379e713bae14d0" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.3, a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962d49537c64aea1953441f465fa70a3bba9a019" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt; and its subclasses are derived from &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, much of the same advice about subclassing normal models also applies to proxy models. In addition, it is worth noting that many of the default implementations of functions in this class are written so that they call the equivalent functions in the relevant source model. This simple proxying mechanism may need to be overridden for source models with more complex behavior; for example, if the source model provides a custom &lt;a href=&quot;qsortfilterproxymodel#hasChildren&quot;&gt;hasChildren&lt;/a&gt;() implementation, you should also provide one in the proxy model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab6e25ef4fc231fb781823dc29b7ba4bfec77c9" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; inherits from &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;, you can combine groups, and easily construct complex animation graphs. You can query &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; for the group it belongs to (using the &lt;a href=&quot;qabstractanimation#group&quot;&gt;group()&lt;/a&gt; function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b773bc9a02303b59aae4f928a65145e315cb2c" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is not a &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; subclass, internally a &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; is created to wrap the byte array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177757e16f0350f161eccc890aa57775be7d78d3" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; inherits &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;, all of its functions are fully documented in the &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914501865b2b9bfc30793027a7dbf98da3d8e386" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt; inherits from &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;, the dial behaves in a similar way to a &lt;a href=&quot;qslider&quot;&gt;slider&lt;/a&gt;. When &lt;a href=&quot;qdial#wrapping-prop&quot;&gt;wrapping&lt;/a&gt;() is false (the default setting) there is no real difference between a slider and a dial. They both share the same signals, slots and member functions. Which one you use depends on the expectations of your users and on the type of application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c2a9c202f8d2f3b35d3498f779fefd02468587" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;restorePurchases&lt;/a&gt;() may, on some platforms, cause the user to be prompted for their password, it should usually be called as a reaction to user input. For instance applications can have a button in the UI which will trigger &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;restorePurchases&lt;/a&gt;() and which users can hit manually if they have reinstalled the application (or installed it on a new device) and need to unlock the features that they have previously paid for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c6d74cedf3a9de3fcdf7db7cac06e3a7ca232b" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qjsonarray&quot;&gt;QJsonArray&lt;/a&gt; is implicitly shared, the copy is shallow as long as the object doesn't get modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef75e48833c4d91bbb068830a2e6a42a053f2db" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qjsonobject&quot;&gt;QJsonObject&lt;/a&gt; is implicitly shared, the copy is shallow as long as the object does not get modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7dbebed07281ea5265fceae9b1079cab6a4185" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; is a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;, you can use several of the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; functions for things like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8d4ebe1efa285ac97979dbb3e4b9c6173a0982" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qml-multimedia#soundeffect&quot;&gt;SoundEffect&lt;/a&gt; requires slightly more resources to achieve lower latency playback, the platform may limit the number of simultaneously playing sound effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de690dd029fdd70f00e3184cd264c6f020d9b282" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qnetworkproxyfactory&quot;&gt;QNetworkProxyFactory&lt;/a&gt; is an abstract class, you cannot create objects of type &lt;a href=&quot;qnetworkproxyfactory&quot;&gt;QNetworkProxyFactory&lt;/a&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf9a1725a84d97b62d3d25f300e414f85553e35" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; can print to any &lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt; subclass, it is possible to extend printing support to cover new types of printing subsystem by subclassing &lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt; and reimplementing its interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d236cac3dd231552c8ad2718da61a564c14f24b5" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qsoundeffect&quot;&gt;QSoundEffect&lt;/a&gt; requires slightly more resources to achieve lower latency playback, the platform may limit the number of simultaneously playing sound effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4638bc9e5b7005a720659b38b7731903f24ec89" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; uses the Unicode encoding internally, every language in the world can be processed transparently using familiar text processing operations. Also, since all Qt functions that present text to the user take a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; as a parameter, there is no &lt;code&gt;char *&lt;/code&gt; to &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; conversion overhead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3692bda918ce6725b188c8ba884ec30fd6d6506" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qsvgwidget&quot;&gt;QSvgWidget&lt;/a&gt; is a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, SVG drawings are rendered using the properties of the display. More control can be exercised over the rendering process with the &lt;a href=&quot;qsvgrenderer&quot;&gt;QSvgRenderer&lt;/a&gt; class, as this can be used to paint onto other paint devices, such as &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and QGLWidget. The renderer used by the widget can be obtained with the &lt;a href=&quot;qsvgwidget#renderer&quot;&gt;renderer&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17943a9ca9b6e9263c6af27f6143e0b3dfa55e77" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; inherits &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, you can use it with &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; and &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;. When reading from a &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, you must make sure that enough data is available by calling &lt;a href=&quot;qabstractsocket#bytesAvailable&quot;&gt;QTcpSocket::bytesAvailable&lt;/a&gt;() beforehand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2803e7c66457a8bc3db9044328c10e449e556e7a" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qtextlist&quot;&gt;QTextList&lt;/a&gt; is a subclass of &lt;a href=&quot;qtextblockgroup&quot;&gt;QTextBlockGroup&lt;/a&gt;, it does not group the list items as child elements, but instead provides various functions for managing them. This means that any text block we find when traversing a document may actually be a list item. We can ensure that list items are correctly identified by using the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a409322aa0e5d8f6f307a63fb05c7c26be07ddbd" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; is a subclass of &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;, subclasses can be used to display custom content that is composed using a series of painting operations with an instance of the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; class. This approach contrasts with the canvas-style approach used by the &lt;a href=&quot;graphicsview#&quot;&gt;Graphics View Framework&lt;/a&gt; where items are added to a scene by the application and are rendered by the framework itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54adc62fa581fa60c58334047923a0b5e282c796" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;ISomeCOMInterface&lt;/code&gt; is a subclass of &lt;code&gt;IUnknown&lt;/code&gt; you will have to implement the &lt;code&gt;QueryInterface()&lt;/code&gt;, &lt;code&gt;AddRef()&lt;/code&gt;, and &lt;code&gt;Release()&lt;/code&gt; functions. Use the QAXAGG_IUNKNOWN macro in your class definition to do that. If you implement the &lt;code&gt;IUnknown&lt;/code&gt; functions manually, delegate the calls to the interface pointer returned by the &lt;a href=&quot;qaxaggregated#controllingUnknown&quot;&gt;QAxAggregated::controllingUnknown&lt;/a&gt;() function, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf7faf94f589e7e3309b36bc4b5f7e6829f3019" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;MyStruct&lt;/code&gt; is now known to &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;, it can be used in &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QVariant&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a402751997b9fd0581a7a803a3ff72294606f3a0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;QtQuick 2.0&lt;/code&gt;, Loader can also load non-visual components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a454c4b1475b79ed83b24e21773eaf252045c9" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;QtQuick 2.0&lt;/code&gt;, Loader can load any object type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc5c3caa0fe3d1e18d64b1726dbe0171e216cc4" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;QtQuick 2.0&lt;/code&gt;, Loader is able to load any type of object; it is not restricted to Item types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fa318c70692d7d0197c1017ccadc86e713e339" translate="yes" xml:space="preserve">
          <source>Since Action presents a user interface action, it is intended to be assigned to a &lt;a href=&quot;qml-qtquick-controls2-menuitem&quot;&gt;MenuItem&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-toolbutton&quot;&gt;ToolButton&lt;/a&gt;, or any other control that inherits &lt;a href=&quot;qml-qtquick-controls2-abstractbutton&quot;&gt;AbstractButton&lt;/a&gt;. For keyboard shortcuts, the simpler &lt;a href=&quot;qml-qtquick-shortcut&quot;&gt;Shortcut&lt;/a&gt; type is more appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2512dfe153d17d063da8ba00b84548fb09843bf" translate="yes" xml:space="preserve">
          <source>Since QAudioBuffers can share the actual sample data, calling this function will result in a deep copy being made if there are any other buffers using the sample. You should avoid calling this unless you really need to modify the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c2cae854cdebaeafeb5223f370e2b0d9b54cd4" translate="yes" xml:space="preserve">
          <source>Since QDoc version 5.12, \code command accepts also optional parameters. Parameters are useful for injecting simple strings into the code snippet. To inject a string to a specific location in the snippet, add a backslash followed by a digit (1..8). The digits correspond with the order of the argument list, where arguments are separated by spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bd8dabd1107755ba544050b461393763e6858c" translate="yes" xml:space="preserve">
          <source>Since Qt 4.0, &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; automatically double-buffers its painting, so there is no need to write double-buffering code in &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() to avoid flicker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71144c67bbb240d18a3e170603c4c71648c50063" translate="yes" xml:space="preserve">
          <source>Since Qt 4.0, &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; automatically double-buffers its painting, so there is no need to write double-buffering code in paintEvent() to avoid flicker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1d33bd6423258f340f905b8e731d4449f06dab" translate="yes" xml:space="preserve">
          <source>Since Qt 4.1 it is also possible to specify a custom dash pattern using the &lt;a href=&quot;qpen#setDashPattern&quot;&gt;setDashPattern&lt;/a&gt;() function which implicitly converts the style of the pen to &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::CustomDashLine&lt;/a&gt;. The pattern argument, a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, must be specified as an even number of &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; entries where the entries 1, 3, 5... are the dashes and 2, 4, 6... are the spaces. For example, the custom pattern shown above is created using the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb02909cc07964521340848fd24317d570f55e6d" translate="yes" xml:space="preserve">
          <source>Since Qt 4.1, the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_ContentsPropagated&lt;/a&gt; widget attribute has been deprecated. Instead, the contents of parent widgets are propagated by default to each of their children as long as &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_PaintOnScreen&lt;/a&gt; is not set. Custom widgets can be written to take advantage of this feature by updating irregular regions (to create non-rectangular child widgets), or painting with colors that have less than full alpha component. The following diagram shows how attributes and properties of a custom widget can be fine-tuned to achieve different effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce3e46ca350abdeb5d2b8751747be7d53b21215" translate="yes" xml:space="preserve">
          <source>Since Qt 4.1, the contents of parent widgets are also propagated to standard Qt widgets. This can lead to some unexpected results if the parent widget is decorated in a non-standard way, as shown in the diagram below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a240ad4c7af7ad9c116961903343d38d20d87a" translate="yes" xml:space="preserve">
          <source>Since Qt 4.2, it is possible to edit stylesheets in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411967677226b8620a179da400058cf4a4df9fe6" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6013e011428b662ee7b6398f33357518bbe5ea3b" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4, double-clicking on the object's name allows you to change the object's name with the in-place editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737af6c08ce4c7db4793bbb995417ee3eaccf400" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4, it is possible to preview forms with various skins - default skins, skins created with Qt Style Sheets or device skins. This feature simulates the effect of calling &lt;code&gt;QApplication::setStyleSheet()&lt;/code&gt; in the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2451314023637700c57fda017717fced87f96a25" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4, it is possible to view code generated by the User Interface Compiler (uic) for the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82280e3d98d9af2f533bd80ba932117032f4fa50" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4, there are two delegate classes: &lt;a href=&quot;qitemdelegate&quot;&gt;QItemDelegate&lt;/a&gt; and &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;. However, the default delegate is &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;. These two classes are independent alternatives to painting and providing editors for items in views. The difference between them is that &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; uses the current style to paint its items. We therefore recommend using &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; as the base class when implementing custom delegates or when working with Qt style sheets. The code required for either class should be equal unless the custom delegate needs to use the style for drawing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a046152fda7cf2df40d40a860409a3470783c632" translate="yes" xml:space="preserve">
          <source>Since Qt 4.5, Qt style sheets fully supports &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7e7c43c9bd5027472ab5716692601a392a3719" translate="yes" xml:space="preserve">
          <source>Since Qt 4.5, it has been possible to create windows with translucent regions on window systems that support compositing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa789cdb9de6eb74c93ff52742a3d36022b3be8" translate="yes" xml:space="preserve">
          <source>Since Qt 4.5, the &lt;b&gt;Object Inspector&lt;/b&gt; displays the layout state of the containers. The broken layout icon ###ICON is displayed if there is something wrong with the layouts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80182ef2183dcdf982642fce62c0d0aefcc461e" translate="yes" xml:space="preserve">
          <source>Since Qt 4.6, restore the old painting algorithm that calls QGraphicsView::drawItems() and QGraphicsScene::drawItems(). To be used only for compatibility with old code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cdef1ff30fe66c5b405db4a4793154e2beb98b" translate="yes" xml:space="preserve">
          <source>Since Qt 4.7, this flag allows you to fine-tune gesture event propagation. By setting the flag when &lt;a href=&quot;qgraphicsobject#grabGesture&quot;&gt;grabbing&lt;/a&gt; a gesture all ignored partial gestures will propagate to their parent items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0550982face987a67bb170230a5b73a0c00d4a" translate="yes" xml:space="preserve">
          <source>Since Qt 5.0, setUrls also exports the urls as plain text, if &lt;a href=&quot;qmimedata#setText&quot;&gt;setText&lt;/a&gt; was not called before, to make it possible to drop them into any lineedit and text editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2638b304f7beeb550ecd18cbcbab8c9131253a" translate="yes" xml:space="preserve">
          <source>Since Qt 5.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f7c886a34e204160d97b7862b6e8e4aadb43d4" translate="yes" xml:space="preserve">
          <source>Since Qt 5.10, this command can be applied also to &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#example-command&quot;&gt;\example&lt;/a&gt; documentation, where it causes the automatically generated list of files and images belonging to an example project to be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29549d67b25f41e48fb4be3f54d59ee65d7f80e" translate="yes" xml:space="preserve">
          <source>Since Qt 5.11, QDoc supports the HTML and WebXML formats. If no &lt;code&gt;outputformats&lt;/code&gt; are specified, QDoc generates the documentation in HTML (the default format). Both output formats can be specified, with dedicated output directories and other settings. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48033c8e281051f821ec951c2b4ee54513c04c1e" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5105359ac64b33c3143e54bd9deba1b2b0692925" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5dd75399d8c74c8e5e8689c725258f1f10b1a8e" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12, &lt;a href=&quot;qstyle#StyleHint-enum&quot;&gt;QStyle::SH_SpinBox_StepModifier&lt;/a&gt; can be used to select which &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::KeyboardModifier&lt;/a&gt; increases the step rate. &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::NoModifier&lt;/a&gt; disables this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e02b66dfb50de01820452f75d1fa3c7b5c3aac8" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12, vertical and horizontal linear gradients can be applied to items. If you need to apply angled gradients, a combination of rotation and clipping can be applied to the relevant items. Alternatively, consider using &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Shapes::LinearGradient or &lt;a href=&quot;qml-qtgraphicaleffects-lineargradient&quot;&gt;QtGraphicalEffects::LinearGradient&lt;/a&gt;. These approaches can all introduce additional performance requirements for your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4450a37a677bce6f0893055338ba8cf541a3c1e8" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, if you want to hide a specific column, you can return &lt;code&gt;0&lt;/code&gt; from the &lt;a href=&quot;qml-qtquick-tableview#columnWidthProvider-prop&quot;&gt;columnWidthProvider&lt;/a&gt; for that column. Likewise, you can return 0 from the &lt;a href=&quot;qml-qtquick-tableview#rowHeightProvider-prop&quot;&gt;rowHeightProvider&lt;/a&gt; to hide a row. If you return a negative number, &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; will fall back to calculate the size based on the delegate items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63e0ad1d47f6539ccf8af215f99c3e4841d5f31" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, if you want to hide a specific column, you can return &lt;code&gt;0&lt;/code&gt; width for that column. If you return a negative number, &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; will fall back to calculate the width based on the delegate items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeaadbc3e15ccf224d9a640def2b3e8f2e0d2d19" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, if you want to hide a specific row, you can return &lt;code&gt;0&lt;/code&gt; height for that row. If you return a negative number, &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; will fall back to calculate the height based on the delegate items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fcc5553d886408889db624ad49bb1e2c98b4ca7" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, the setShowShortcutsInContextMenus() function can be used to override the platform default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3454bd5f9e329b154a6c4f46e1631a39a2f8f917" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, this macro has no effect. In Qt 5.12 and before, if this macro is defined, the compiler will generate warnings if any API declared as deprecated by Qt is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc7645a8a2813f5ff0ce37cb48efb3d9cfcd891" translate="yes" xml:space="preserve">
          <source>Since Qt 5.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69760ed3431ed47d742861623d8580607e8a32f" translate="yes" xml:space="preserve">
          <source>Since Qt 5.2, some default images are provided as resources to aid prototyping:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fccc48327872d4fab2aef102bd5e0891626ada79" translate="yes" xml:space="preserve">
          <source>Since Qt 5.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e9b65731602249f51227b13e589fb4eed2b39d" translate="yes" xml:space="preserve">
          <source>Since Qt 5.3, logging rules are also automatically loaded from the &lt;code&gt;[Rules]&lt;/code&gt; section of a logging configuration file. Such configuration files are looked up in the QtProject configuration directory, or explicitly set in a &lt;code&gt;QT_LOGGING_CONF&lt;/code&gt; environment variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4193b8c7fb1cbf054d7988a58fc610ca7e8957f" translate="yes" xml:space="preserve">
          <source>Since Qt 5.3, logging rules can also be specified in a &lt;code&gt;QT_LOGGING_RULES&lt;/code&gt; environment variable. And since Qt 5.6, multiple rules can also be separated by semicolons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3849a805a374d40c9d1171bb730a79359004e99" translate="yes" xml:space="preserve">
          <source>Since Qt 5.4, this value forces &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; and &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; to be drawn last, on top of other widgets. Ignored for other type of widgets. Setting this attribute breaks the stacking order, but allows having a semi-transparent OpenGL widget with other widgets visible underneath. It is strongly recommended to call update() on the widget's top-level window after enabling or disabling this attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91540024dd91d3c52a61b4febd2180b896b992b" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d518eeebb57119f7fd62bea952121fa3c2549145" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5, &lt;a href=&quot;qml-qtquick-pincharea&quot;&gt;PinchArea&lt;/a&gt; can react to native pinch gesture events from the operating system if available; otherwise it reacts only to touch events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977f1f8df27878eed5f330616cdc3f46fd3042ba" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. Do not start sloppy timers when the mouse leaves a sub-menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3af735714fe289d4cf3e8b46750b478f2fe0a6" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. If the cursor has to move towards the submenu (like it is on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;), or if the cursor can move in any direction as long as it reaches the submenu before the sloppy timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b625498a10a78e840ed03f9fe6bdbcf725cf8a" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. Should other action items be selected when the mouse moves towards a sloppy submenu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23ec94294b2aa5f0726de31f472c69eef56b197" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. The timeout used to close sloppy submenus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a10c1f5b01e96c419b705be8e9e747ca64b952c" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. When SH_Menu_SubMenuUniDirection is defined this enum defines the number of failed mouse moves before the sloppy submenu is discarded. This can be used to control the &quot;strictness&quot; of the uni direction algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9f65bc780c6e563deeeecbc1a4dc0b4d30483d" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. When entering parent from child submenu, should the sloppy state be reset, effectively closing the child and making the current submenu active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4411d90fbe576efc261fa2bed49d870e28071c2" translate="yes" xml:space="preserve">
          <source>Since Qt 5.6, also simple wildcards ('*' and '?') are recognized by &lt;code&gt;excludefiles&lt;/code&gt;. For example, to exclude all private Qt header files from being parsed, define the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5489f0c890835b57010ae219d7fbd97da91a7fab" translate="yes" xml:space="preserve">
          <source>Since Qt 5.6, resize() doesn't shrink the capacity anymore. To shed excess capacity, use &lt;a href=&quot;qvector#squeeze&quot;&gt;squeeze&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee40fc5a5ea50ae798f7824a07a631440882b52" translate="yes" xml:space="preserve">
          <source>Since Qt 5.6, the default implementation logs the messages in a &lt;code&gt;js&lt;/code&gt;&lt;a href=&quot;qloggingcategory&quot;&gt;logging category&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e55157dfedf0618bf8de11e9a586d513a65262a" translate="yes" xml:space="preserve">
          <source>Since Qt 5.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97169eb2f638778e56214283acb92a40f9de07b4" translate="yes" xml:space="preserve">
          <source>Since Qt 5.7, only secure origins such as HTTPS have been able to request Geolocation features. This provides an override to allow non secure origins to access Geolocation again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c00bd08b20e4749451aba58d2211362eef5551e" translate="yes" xml:space="preserve">
          <source>Since Qt 5.7, only secure origins such as HTTPS have been able to request Geolocation features. This provides an override to allow non secure origins to access Geolocation again. Disabled by default. (Added in Qt 5.9)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4395dfc825944c1c93f0f0b60d86863290fc7d" translate="yes" xml:space="preserve">
          <source>Since Qt 5.8, Qt Quick dialogs can be customized by connecting to the &lt;a href=&quot;qml-qtwebengine-webengineview#authenticationDialogRequested-signal&quot;&gt;WebEngineView::authenticationDialogRequested&lt;/a&gt;(), &lt;a href=&quot;qml-qtwebengine-webengineview#javaScriptDialogRequested-signal&quot;&gt;WebEngineView::javaScriptDialogRequested&lt;/a&gt;(), &lt;a href=&quot;qml-qtwebengine-webengineview#colorDialogRequested-signal&quot;&gt;WebEngineView::colorDialogRequested&lt;/a&gt;(), &lt;a href=&quot;qml-qtwebengine-webengineview#fileDialogRequested-signal&quot;&gt;WebEngineView::fileDialogRequested&lt;/a&gt;(), and WebEngineView::formValidationMessageRequested() signals. For an example, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webengine-customdialogs-example.html#&quot;&gt;WebEngine Qt Quick Custom Dialogs Example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3aa666fd85616c2f4725bd29766977a18a5fa00" translate="yes" xml:space="preserve">
          <source>Since Qt 5.8, when the last reference to this &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; gets destroyed,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f70f268cc0aa98baa6d4fac0fef3688d76ab5b" translate="yes" xml:space="preserve">
          <source>Since Qt 5.9 (Qt Quick 2.9), it is possible to make a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; that can be flicked to both directions. In order to do this, the &lt;a href=&quot;qml-qtquick-flickable#flickableDirection-prop&quot;&gt;flickableDirection&lt;/a&gt; can be set to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57428dbdbbb1629eca4304675a79acfc7b21bec5" translate="yes" xml:space="preserve">
          <source>Since Qt Multimedia for iOS uses the camera, the &lt;code&gt;Info.plist&lt;/code&gt; assigned to QMAKE_INFO_PLIST in the project file must contain the key &lt;code&gt;NSCameraUsageDescription&lt;/code&gt;. Otherwise the application will abort on startup. See Info.plist documentation from Apple for more information regarding this key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216047bf91264d3ecad28717da8a8f820ed210a4" translate="yes" xml:space="preserve">
          <source>Since RGB values range between 0 and 255, we need to limit the spin box and slider to that particular range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f18efd3e9a327cac429b40633e18be2d294b85" translate="yes" xml:space="preserve">
          <source>Since US-ASCII and ISO-8859-1 are so common, there are also especially fast functions for mapping to and from them. For example, to open an application's icon one might do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803f2139b4ed6c63e3270d934405e8cce7375212" translate="yes" xml:space="preserve">
          <source>Since XPath 2.0 is a subset of XQuery 1.0, XPath 2.0 is supported. Areas where conformance may be questionable and, consequently, where behavior may be changed in future releases include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111cf4375618c79252d6afdbaa1d95381f57524f" translate="yes" xml:space="preserve">
          <source>Since XPath is a subset of XSLT, its issues are in affect too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3279cef3862deadefbdc499ea91249df9960c299" translate="yes" xml:space="preserve">
          <source>Since a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4a47ec5d7d799ab2586be38dd34861af1c6c42" translate="yes" xml:space="preserve">
          <source>Since a list of model indexes is supplied to the function, this approach is general enough to be used in both hierarchical and non-heirarchical models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02d73828097a0bf60842ff078fd43f8f5beb010" translate="yes" xml:space="preserve">
          <source>Since access to the data displayed by the view is controlled by a model, the model used also has to provide support for drag and drop operations. The actions supported by a model can be specified by reimplementing the &lt;a href=&quot;qabstractitemmodel#supportedDropActions&quot;&gt;QAbstractItemModel::supportedDropActions&lt;/a&gt;() function. For example, copy and move operations are enabled with the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bc4ecabc444375ca87010a429cf7ecd6617c2d" translate="yes" xml:space="preserve">
          <source>Since all methods are considered to be in revision 0 if untagged, a tag of Q_REVISION(0) is invalid and ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d52fb4ea814e17bd0d29a2baf41a887a687a96" translate="yes" xml:space="preserve">
          <source>Since an attribute must appear in an element, for each attribute in the result set, we must create an XML element. We can do that using a &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-for-let&quot;&gt;&lt;i&gt;for&lt;/i&gt; clause&lt;/a&gt; with a &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-variables&quot;&gt;bound variable&lt;/a&gt;, and a &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-orderby-return&quot;&gt;&lt;i&gt;return&lt;/i&gt; clause&lt;/a&gt; with an element constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023dfeafbf3bd18e64aaaef8321f75fb28c1a6f7" translate="yes" xml:space="preserve">
          <source>Since both slots and signals can be used as receivers for signals, and the same connections can be made many times, the number of receivers is the same as the number of connections made from this signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b551c3493c7acafb5583cabd2e68fc93c59f679" translate="yes" xml:space="preserve">
          <source>Since cells can contain other document elements, they too can be formatted and styled as necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f23ba8fdf5f781a9b7b2ea70b5f43d0a346721e" translate="yes" xml:space="preserve">
          <source>Since datagrams can empty, an empty &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is a valid value for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537dddf1ee37a153e989033c8c00fdd9b282dcbc" translate="yes" xml:space="preserve">
          <source>Since dock widgets are &lt;a href=&quot;designer-using-containers#&quot;&gt;container widgets&lt;/a&gt;, they can be added to a form in the usual way. Once added to a form, dock widgets are not placed in any particular dock area by default; you need to set the &lt;b&gt;docked&lt;/b&gt; property to true for each widget and choose an appropriate value for its &lt;b&gt;dockWidgetArea&lt;/b&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71b62a2c93b1f0890adcf5b7d5c3efe2ff63542" translate="yes" xml:space="preserve">
          <source>Since each view transition is run once for each item affected by the transition, the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; properties can be used within a transition to define custom behavior for each item's transition. For example, the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; in the previous example could use this information to create a ripple-type effect on the movement of the displaced items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ef9e71211a014ac0ab8f62e921670354b1eadc" translate="yes" xml:space="preserve">
          <source>Since elements, text nodes, comments, processing instructions, etc., cannot exist outside the context of a document, the document class also contains the factory functions needed to create these objects. The node objects created have an &lt;a href=&quot;qdomnode#ownerDocument&quot;&gt;ownerDocument&lt;/a&gt;() function which associates them with the document within whose context they were created. The DOM classes that will be used most often are &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt;, &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt;, &lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; and &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9891039e2abaa07ff7db1caff7d6d9fe211c17c3" translate="yes" xml:space="preserve">
          <source>Since foreach creates a copy of the container, using a non-const reference for the variable does not allow you to modify the original container. It only affects the copy, which is probably not what you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe1c82e755809a64ce8ade3b9d97bb65a663527" translate="yes" xml:space="preserve">
          <source>Since height maps do not contain values for X or Z axes, those values need to be given separately using &lt;a href=&quot;qheightmapsurfacedataproxy#minXValue-prop&quot;&gt;minXValue&lt;/a&gt;, &lt;a href=&quot;qheightmapsurfacedataproxy#maxXValue-prop&quot;&gt;maxXValue&lt;/a&gt;, &lt;a href=&quot;qheightmapsurfacedataproxy#minZValue-prop&quot;&gt;minZValue&lt;/a&gt;, and &lt;a href=&quot;qheightmapsurfacedataproxy#maxZValue-prop&quot;&gt;maxZValue&lt;/a&gt; properties. X-value corresponds to image horizontal direction and Z-value to the vertical. Setting any of these properties triggers asynchronous re-resolving of any existing height map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971680c0f081fcfe4d0a34d0ba6da76acbc12fd4" translate="yes" xml:space="preserve">
          <source>Since height maps do not contain values for X or Z axes, those values need to be given separately using &lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#minXValue-prop&quot;&gt;minXValue&lt;/a&gt;, &lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#maxXValue-prop&quot;&gt;maxXValue&lt;/a&gt;, &lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#minZValue-prop&quot;&gt;minZValue&lt;/a&gt;, and &lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#maxZValue-prop&quot;&gt;maxZValue&lt;/a&gt; properties. X-value corresponds to image horizontal direction and Z-value to the vertical. Setting any of these properties triggers asynchronous re-resolving of any existing height map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e088827722c6720f6dcf7c00197402521e3766" translate="yes" xml:space="preserve">
          <source>Since input methods need to be able to query certain properties from the widget or graphics item, subclasses must also implement &lt;a href=&quot;qwidget#inputMethodQuery&quot;&gt;QWidget::inputMethodQuery&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#inputMethodQuery&quot;&gt;QGraphicsItem::inputMethodQuery&lt;/a&gt;(), respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b8da869bc66b72321b9cdec635890c922ff24b" translate="yes" xml:space="preserve">
          <source>Since it is not possible to individually add or remove items from a list or object stored in a &lt;code&gt;variant&lt;/code&gt;, the only way to modify its contents is to reassign a new value. However, this is not efficient, as it causes the value to be serialized and deserialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23b62b0af3dbcc799a015982ff9cfad21c7874a" translate="yes" xml:space="preserve">
          <source>Since it is possible to put your own values on the &lt;code&gt;CONFIG&lt;/code&gt; line, this provides you with a convenient way to customize project files and fine-tune the generated Makefiles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e3003b3bb6df8ef78f852657286b8369a9d7d0" translate="yes" xml:space="preserve">
          <source>Since it is so common and people are used to it, it's a good idea to support it for most widgets. However, there is also an important reason to avoid it: you may not want to remove focus from the widget where it was.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d47353590cced78ac1508c8305fad3de0230bf" translate="yes" xml:space="preserve">
          <source>Since it's a Java-like iterator, the &lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; will point immediately before the first result. Every result is returned as a &lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; object. The &lt;a href=&quot;qregularexpressionmatchiterator#hasNext&quot;&gt;hasNext()&lt;/a&gt; function will return true if there's at least one more result, and &lt;a href=&quot;qregularexpressionmatchiterator#next&quot;&gt;next()&lt;/a&gt; will return the next result and advance the iterator. Continuing from the previous example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb6a81fa8f8a2a654ffa923339b37385bd3c8f9" translate="yes" xml:space="preserve">
          <source>Since more than one &lt;a href=&quot;#source&quot;&gt;Source&lt;/a&gt; can be shared by a host node, each &lt;a href=&quot;#source&quot;&gt;Source&lt;/a&gt; requires a name. All &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; generated headers include a way for the node to determine the class name (&lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt; for replica/simplesource/source types, or a static name() function for the SourceAPI type). If you pass your own &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; type to &lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;QRemoteObjectHostBase::enableRemoting&lt;/a&gt;(), the name will be determined using the following logic:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc50f80abef4d86f2b1249a5d62cfdc334b41b8" translate="yes" xml:space="preserve">
          <source>Since multiple Modbus server instances can interact with a Modbus client at the same time (using a serial bus), servers are identified by their &lt;a href=&quot;qmodbusserver#serverAddress&quot;&gt;serverAddress&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e10119ec78e708c849c3ecd5b419112c651948b" translate="yes" xml:space="preserve">
          <source>Since pressing &lt;b&gt;Tab&lt;/b&gt; is so common, most widgets that can have focus should support tab focus. The major exception is widgets that are rarely used, and where there is some keyboard accelerator or error handler that moves the focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2c0db3744727dd2fb975aa0d8f3fb21985c95a" translate="yes" xml:space="preserve">
          <source>Since programs need to react in varied and complex ways, Qt's event delivery mechanisms are flexible. The documentation for &lt;a href=&quot;qcoreapplication#notify&quot;&gt;QCoreApplication::notify&lt;/a&gt;() concisely tells the whole story; the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d7080a94036c52b7a9f961388010fd5d18fc6a" translate="yes" xml:space="preserve">
          <source>Since proxy models inherit from &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, they can be connected to any kind of view, and can be shared between views. They can also be used to process the information obtained from other proxy models in a pipeline arrangement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821803beea4bf422d7e088c15e21a9cac5bd5da9" translate="yes" xml:space="preserve">
          <source>Since rows in this model correspond to strings in a list, the &lt;code&gt;insertRows()&lt;/code&gt; function inserts a number of empty strings into the string list before the specified position. The number of strings inserted is equivalent to the number of rows specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d8cf90e6f653593df7e71c1d01bb6ac812fc94" translate="yes" xml:space="preserve">
          <source>Since sensor backends are created on demand, the sensor plugin is loaded and asked to register the sensor backends it handles. The plugin should implement &lt;a href=&quot;qsensorplugininterface#registerSensors&quot;&gt;QSensorPluginInterface::registerSensors&lt;/a&gt;() and call &lt;a href=&quot;qsensormanager#registerBackend&quot;&gt;QSensorManager::registerBackend&lt;/a&gt;() to register available backends. Typically the plugin will also inherit from &lt;a href=&quot;qsensorbackendfactory&quot;&gt;QSensorBackendFactory&lt;/a&gt; and implement &lt;a href=&quot;qsensorbackendfactory#createBackend&quot;&gt;QSensorBackendFactory::createBackend&lt;/a&gt;() in order to instantiate backends it has registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc161e230bab6742eb8a517072af84d3219bc7b7" translate="yes" xml:space="preserve">
          <source>Since sharing data over NFC is effectively a data pipe between two processes (one on the sender and one of the receiver), the application developer should only create a single instance of &lt;a href=&quot;qnearfieldsharemanager&quot;&gt;QNearFieldShareManager&lt;/a&gt; per application. This avoids the possibility that different parts of the same application attempt to all consume data transferred over NFC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244aeedde06204f9062ec3c02fb64e89c1ef4496" translate="yes" xml:space="preserve">
          <source>Since slots are normal member functions, they follow the normal C++ rules when called directly. However, as slots, they can be invoked by any component, regardless of its access level, via a signal-slot connection. This means that a signal emitted from an instance of an arbitrary class can cause a private slot to be invoked in an instance of an unrelated class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123322ae586987c972d7f5c03547cc99a34b2df2" translate="yes" xml:space="preserve">
          <source>Since text blocks are used to separate other document elements, each frame will always contain at least one text block, and zero or more child frames. We can inspect the contents of a frame by using a &lt;a href=&quot;qtextframe-iterator&quot;&gt;QTextFrame::iterator&lt;/a&gt; to traverse the frame's child elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89c9492ef54f6a33118c8304f23e1d3397273d1" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object does so much initialization, it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf42ae757b5146dd4c72bf1aa7b1dfe63a96384" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; object does so much initialization, it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8451f42c7c2f32ff2d998d6e42442b138e8b1ec5" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; object has been specified on the &lt;code&gt;color&lt;/code&gt; property using the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906c4edad526acb05b7b1d8eb3f1611e702b21a1" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; starts with a blank page, we only need to call the &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage()&lt;/a&gt; function after drawing each page, except for the last page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb46430f4d1518aa921170c748a0841fee6bdaa6" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;*&lt;/code&gt; quantifier is greedy, then reporting a complete match could be an error, because after the current subject &lt;code&gt;&quot;abc&quot;&lt;/code&gt; there may be other occurrences of &lt;code&gt;&quot;abc&quot;&lt;/code&gt;. For instance, the complete text could have been &quot;abcabcX&quot;, and therefore the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27e032c2b5aec68df8c1dab952f28c851b0806b" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;WorkerScript.onMessage()&lt;/code&gt; function is run in a separate thread, the JavaScript file is evaluated in a context separate from the main QML engine. This means that unlike an ordinary JavaScript file that is imported into QML, the &lt;code&gt;script.mjs&lt;/code&gt; in the above example cannot access the properties, methods or other attributes of the QML item, nor can it access any context properties set on the QML object through &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04354b9aa87d327bd05e9542b5e1065e74eb10f4" translate="yes" xml:space="preserve">
          <source>Since the FrameGraph tree is entirely data-driven and can be modified dynamically at runtime, you can:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381a67ce881876fe250b56cb105dbe6678f34e94" translate="yes" xml:space="preserve">
          <source>Since the HTTP header can set more than one cookie at the same time, this function returns a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qnetworkcookie&quot;&gt;QNetworkCookie&lt;/a&gt;&amp;gt;, one for each cookie that is parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b3399320cca89a83d2b47296a5495b5537cc2c" translate="yes" xml:space="preserve">
          <source>Since the QDomClasses do not know which attributes are element IDs, this function returns always a &lt;a href=&quot;qdomnode#isNull&quot;&gt;null element&lt;/a&gt;. This may change in a future version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a354fdb440f6054d94f3215fbde91e2373c453b" translate="yes" xml:space="preserve">
          <source>Since the Q_OS_.* regular expression (specified using the &lt;code&gt;defines&lt;/code&gt; variable) matches &lt;a href=&quot;#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt;, QDoc will process the code within #ifdef and #endif in our example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a90d66b3917dac922cf49fb9f3ea3033e517ff" translate="yes" xml:space="preserve">
          <source>Since the Wavefront .obj format describes an object in 3D space, the coordinates have to be projected into 2D before they can be displayed in Qt Quick.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b6f176917e9ec2c592cc173feed6eb5f5e3d6a" translate="yes" xml:space="preserve">
          <source>Since the capabilities of the supported output formats vary considerably, the writer simply outputs the appropriate subset of objects for each format. This typically includes the formatted text and images contained in a document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2642f3713582deaef42d604dcdd280f1b31041" translate="yes" xml:space="preserve">
          <source>Since the constructor cannot provide feedback when the initialization of the painter failed you should rather use &lt;a href=&quot;qpainter#begin&quot;&gt;begin&lt;/a&gt;() and &lt;a href=&quot;qpainter#end&quot;&gt;end&lt;/a&gt;() to paint on external devices, e.g. printers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48630c088860f2cd3f1f3d456c0cb7a00454eacb" translate="yes" xml:space="preserve">
          <source>Since the example model contains an &lt;code&gt;id&lt;/code&gt; property, it can be referenced by views, such as the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; in this example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac87693c7a8d1c7809faa95d2fb5ba383a73282" translate="yes" xml:space="preserve">
          <source>Since the file is named &lt;code&gt;SquareButton.qml&lt;/code&gt;, &lt;b&gt;this can now be used as a type named &lt;code&gt;SquareButton&lt;/code&gt; by any other QML file within the same directory&lt;/b&gt;. For example, if there was a &lt;code&gt;myapplication.qml&lt;/code&gt; file in the same directory, it could refer to the &lt;code&gt;SquareButton&lt;/code&gt; type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544ce4a0160c1f045b5220dd5ce98f056b962a71" translate="yes" xml:space="preserve">
          <source>Since the final &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; does not specify a &lt;code&gt;to&lt;/code&gt; value, the view implicitly sets this value to the item's final position in the view, and so this last animation will move this item to the correct place. If the transition requires the final position of the item for some calculation, this is accessible through &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04868ac9ae40a61dcc709ab9513ee017ad516ae" translate="yes" xml:space="preserve">
          <source>Since the handler classes only describe interfaces you must implement all the functions. We provide the &lt;a href=&quot;qxmldefaulthandler&quot;&gt;QXmlDefaultHandler&lt;/a&gt; class to make this easier: it implements a default behavior (do nothing) for all functions, so you can subclass it and just implement the functions you are interested in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189661a0851e49ddcd9507be34bf98db7d6fb2cc" translate="yes" xml:space="preserve">
          <source>Since the higher-level API is built on top of the lower-level API, some issues are common to both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4769b25165bddd75f544cd2a957aa4134d2d53" translate="yes" xml:space="preserve">
          <source>Since the maximum numbered place marker value is 99, &lt;code&gt;50&lt;/code&gt; replaces &lt;code&gt;%32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19d3897d53eaac05df42c156b14a0f5b1b3d2d0" translate="yes" xml:space="preserve">
          <source>Since the model is non-hierarchical, we can safely ignore the model index corresponding to the parent item. By default, models derived from &lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; only contain one column, so we do not need to reimplement the &lt;a href=&quot;qabstractitemmodel#columnCount&quot;&gt;columnCount()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9108e71e48eabb71f2edf74cd037d878fbc7e133" translate="yes" xml:space="preserve">
          <source>Since the model provides a more specialized interface than &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, it is not suitable for use with tree views, although it can be used to provide data to a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;. If you need to represent a simple list of items, and only need a model to contain a single column of data, subclassing the &lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; may be more appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd22746342f9e6d6b8e6909f12b4ca7386561581" translate="yes" xml:space="preserve">
          <source>Since the model provides a more specialized interface than &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, it is not suitable for use with tree views; you will need to subclass &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; if you want to provide a model for that purpose. If you need to use a number of list models to manage data, it may be more appropriate to subclass &lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9928e7e269ebebcbeffad1feea23bee67f8eb734" translate="yes" xml:space="preserve">
          <source>Since the model represents a one-dimensional structure, the &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() function returns the total number of items in the model. The &lt;a href=&quot;qabstractitemmodel#columnCount&quot;&gt;columnCount&lt;/a&gt;() function is implemented for interoperability with all kinds of views, but by default informs views that the model contains only one column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7375774ec212ab72d63a3eb2dbe0abccbfd3792c" translate="yes" xml:space="preserve">
          <source>Since the name of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b571b81c27b7ff1f73fd9bca0f84aedce87d0a5e" translate="yes" xml:space="preserve">
          <source>Since the reader will inform the handler of parsing errors, it is necessary to reimplement &lt;a href=&quot;qxmlerrorhandler#fatalError&quot;&gt;QXmlErrorHandler::fatalError&lt;/a&gt;() if, for example, we want to stop parsing when such an error occurs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9806229ea7aa4268cf6c017cb5c446754fd6b0" translate="yes" xml:space="preserve">
          <source>Since the release and debug libraries are inside the framework, the app is simply linked against the framework. Then when you run in the debugger, you will get either the release version or the debug version, depending on whether you set &lt;code&gt;DYLD_IMAGE_SUFFIX&lt;/code&gt;. If you don't set it, you get the release version by default (i.e., non _debug). If you set &lt;code&gt;DYLD_IMAGE_SUFFIX=_debug&lt;/code&gt;, you get the debug version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127d6280b9489aec62c5fd1a12460ce59f19a286" translate="yes" xml:space="preserve">
          <source>Since the rotation of the reading values is based on the screen orientation, Z values will never change, as the Z axis is perpendicular to the screen. As screen orientation changes in 90 degree steps, rotating the reading values is also done in steps of 90 degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6418e31b64c8d22f2e5d66de8863b96d5e8609d" translate="yes" xml:space="preserve">
          <source>Since the sequence is modified in place, QtConcurrent::filter() does not return any results via &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;. However, you can still use &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; and &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; to monitor the status of the filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebeaeaf33da6858b9e700c81d41ac9181be3ef3" translate="yes" xml:space="preserve">
          <source>Since the sequence is modified in place, QtConcurrent::map() does not return any results via &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;. However, you can still use &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; and &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; to monitor the status of the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a677f9127d99dc65387fe7cc0aa2cb37480b446a" translate="yes" xml:space="preserve">
          <source>Since the structure exposed to views is determined by the underlying data structure, it is up to each model subclass to create its own model indexes by providing implementations of the following functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6bf5f5927e65171595bd113b4f2685c41ebb32" translate="yes" xml:space="preserve">
          <source>Since the text stream uses a buffer, you should not read from the stream using the implementation of a superclass. For instance, if you have a &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; and read from it directly using &lt;a href=&quot;qiodevice#readLine&quot;&gt;QFile::readLine&lt;/a&gt;() instead of using the stream, the text stream's internal position will be out of sync with the file's position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5667ffa090e688fa165cc52e47b64e69b69d9645" translate="yes" xml:space="preserve">
          <source>Since the value is changed directly, this bypasses Qt's &lt;a href=&quot;metaobjects&quot;&gt;meta-object system&lt;/a&gt; and the QML engine is not made aware of the property change. This means property bindings to &lt;code&gt;buttonText&lt;/code&gt; would not be updated, and any &lt;code&gt;onButtonTextChanged&lt;/code&gt; handlers would not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e96d3b6f35122a7431ed019b59745fbeef128e1" translate="yes" xml:space="preserve">
          <source>Since the view manages the editor widgets for the delegate, we only need to update the model with the contents of the editor supplied. In this case, we ensure that the spin box is up-to-date, and update the model with the value it contains using the index specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ca465e018a5d4a4cf99ad5ebd93eb7fbd5397f" translate="yes" xml:space="preserve">
          <source>Since there is no standard way to copy and paste files between applications on X11, various MIME types and conventions are currently in use. For instance, Nautilus expects files to be supplied with a &lt;code&gt;x-special/gnome-copied-files&lt;/code&gt; MIME type with data beginning with the cut/copy action, a newline character, and the URL of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978073ac3fe1a847330d2fb7d270469f4c75a440" translate="yes" xml:space="preserve">
          <source>Since there is no tree structure for branch indicators, we only present an image of a tree in the Java style. Each state is marked in the image with a rectangle in a specific color (i.e., the rectangles are not bounding rectangles). All combinations of states you must be aware of are represented in the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203ab01d01a1683304d745bdf0046110396bab56" translate="yes" xml:space="preserve">
          <source>Since there may be a physical component to move, the change in zoom value may not be instantaneous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c4c005e2242b4b096c28147e6831c90a8fbfd9" translate="yes" xml:space="preserve">
          <source>Since these file formats are more rarely used, the codecs may be less thoroughly debugged against potential security holes. As always, care should be taken when creating applications that may be used to decode uncontrolled data files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc95a81be984d34176665534b46934eaaf4e5ce5" translate="yes" xml:space="preserve">
          <source>Since this class is designed to do all the up-front calculations at compile-time, it does not offer a setPattern() method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fcf6a0f210ecb989bb745bfb107e288eb49a89" translate="yes" xml:space="preserve">
          <source>Since this class is only used to refer to string data, and does not take ownership of it, no memory is freed when instances are destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4f662d878db1df2688089ad61e374ab71f0a54" translate="yes" xml:space="preserve">
          <source>Since this function can fail to obtain a valid strong reference to the shared object, you should always verify if the conversion succeeded, by calling &lt;a href=&quot;qsharedpointer#isNull&quot;&gt;QSharedPointer::isNull&lt;/a&gt;() on the returned object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76981d647ae48fe91ec4d3b90b4112f2b78a401" translate="yes" xml:space="preserve">
          <source>Since this function opens the file without specifying the file name, you cannot use this &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; with a &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e1922e8730ad3b75cb7d664a0e7f2cf790bf00" translate="yes" xml:space="preserve">
          <source>Since this operation is item-based, the same function is available for all three convenience classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1b2c2cfd5141eb127150cde59def640e84c9a3" translate="yes" xml:space="preserve">
          <source>Since version 2.0 of the virtual keyboard, input methods can consume touch input data from touch screens or other input devices. This allows integration of a handwriting recognition engine seamlessly to the virtual keyboard, without any changes to the existing keyboard layouts (as the virtual keyboard already provides the handwriting keyboard layouts for most languages).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eedc4b43688e81fa47203c3940a428c2861ab8f" translate="yes" xml:space="preserve">
          <source>Since version 4.3, Qt provides two new classes for reading and writing XML: &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; and &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d613b89b2c7a8c9cbacbefad29dee2d66ce807" translate="yes" xml:space="preserve">
          <source>Since version 5.11, &lt;a href=&quot;qdoc-index&quot;&gt;QDoc&lt;/a&gt; uses Clang to parse C++ code. If you wish to build &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdoc-module.html&quot;&gt;QDoc&lt;/a&gt; manually, refer to &lt;a href=&quot;qdoc-guide-clang&quot;&gt;Installing Clang for QDoc&lt;/a&gt; for specific build requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e2c8463dc7b70700ff054abae643fd38b08a65" translate="yes" xml:space="preserve">
          <source>Since we are implementing an interface, we must ensure that it is made known to the meta-object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro. This enables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd0035a7e74e4188a78bc806175c9fca741b978" translate="yes" xml:space="preserve">
          <source>Since we are implementing an interface, we must ensure that it's made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro. This enables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90afb1328bcd0bb2e300eab28903cbeb3261a834" translate="yes" xml:space="preserve">
          <source>Since widgets propagate the contents of their parents by default, you need to set the &lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt; property, or use &lt;a href=&quot;qwidget#setAttribute&quot;&gt;setAttribute&lt;/a&gt;() to set the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_OpaquePaintEvent&lt;/a&gt; attribute, to make a widget opaque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e6b5fa0ac3c0bbf7ff09d3bb9498d8de6db0f1" translate="yes" xml:space="preserve">
          <source>Since you cannot have a public identifier without a system identifier, the public identifier is set to an empty string if there is no system identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4434cedbc25a9b21d7d06d3713a6484879933703" translate="yes" xml:space="preserve">
          <source>Since:</source>
          <target state="translated">Since:</target>
        </trans-unit>
        <trans-unit id="5e3aa2feddd17892045eebaefc1d9c32a31ca523" translate="yes" xml:space="preserve">
          <source>Single &quot;%&quot; characters: Any occurrences of a percent character &quot;%&quot; not followed by exactly two hexadecimal characters (e.g., &quot;13% coverage.html&quot;) will be replaced by &quot;%25&quot;. Note that one lone &quot;%&quot; character will trigger the correction mode for all percent characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76644e2fa670cadcb03e7c313b16ff4e3895cc43" translate="yes" xml:space="preserve">
          <source>Single Process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6819f201fa15bb79ba544f6fe61e1e001b927c9e" translate="yes" xml:space="preserve">
          <source>Single Process Client Architecture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23914f8eaae4443690537a72ec28381d866ac98" translate="yes" xml:space="preserve">
          <source>Single dates can be selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc734221c92cad831f740c80003fa799dee091a" translate="yes" xml:space="preserve">
          <source>Single level lists of items are typically displayed using a &lt;code&gt;QListWidget&lt;/code&gt; and a number of &lt;code&gt;QListWidgetItem&lt;/code&gt;s. A list widget is constructed in the same way as any other widget:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cd7ea609e0acaff1be02b2b013a4ff1ff7fbf7" translate="yes" xml:space="preserve">
          <source>Single line comments start with // and finish at the end of the line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2dbe5d4cc596fe894764589eb57686eae7b97f" translate="yes" xml:space="preserve">
          <source>Single sided (simplex) printing only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9494a37d17f6f94942c511af58fb28e0e658332e" translate="yes" xml:space="preserve">
          <source>Single-Process Client Development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7c01766eb79167f9e442564552a48fffb66576" translate="yes" xml:space="preserve">
          <source>Single-line plain text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44c6b3e9568e85061a8b6f14494b75fb036824c" translate="yes" xml:space="preserve">
          <source>Single-line text input field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee8db502087d542a57a5cefcff5a147735c6fb3" translate="yes" xml:space="preserve">
          <source>Single-line text input field. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c278c890dda32e564d2cf1e3a645a485b2c256" translate="yes" xml:space="preserve">
          <source>Single-precision float (32-bit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e51249cae0fc5fccdacbae585ba0e813d6cf60" translate="yes" xml:space="preserve">
          <source>SinglePointHandler</source>
          <target state="translated">SinglePointHandler</target>
        </trans-unit>
        <trans-unit id="0bb30bc786a1113affbf9868d6c00a543921ec19" translate="yes" xml:space="preserve">
          <source>SinglePointHandler (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcd611a50cfa7edf7ab8a789e4697283c6d57b2" translate="yes" xml:space="preserve">
          <source>SinglePointHandler QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a395a51cfb2e5b69e82977941e687c6027e255" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.acceptedButtons</source>
          <target state="translated">SinglePointHandler.acceptedButtons</target>
        </trans-unit>
        <trans-unit id="2c44ca1437a10d0e06df18c202f71f238f723571" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.acceptedDevices</source>
          <target state="translated">SinglePointHandler.acceptedDevices</target>
        </trans-unit>
        <trans-unit id="49341134e686853de5324ff030da6c41211a2433" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.acceptedModifiers</source>
          <target state="translated">SinglePointHandler.acceptedModifiers</target>
        </trans-unit>
        <trans-unit id="90be775b379d06c4b2bf780915581b24f8244fec" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.acceptedPointerTypes</source>
          <target state="translated">SinglePointHandler.acceptedPointerTypes</target>
        </trans-unit>
        <trans-unit id="d962a4f72dcdd174fa5f677b5d5d00171491e646" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.active</source>
          <target state="translated">SinglePointHandler.active</target>
        </trans-unit>
        <trans-unit id="ad015089dc7edf5761f7fd30beb4bdcbc2a4d10d" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.canceled()</source>
          <target state="translated">SinglePointHandler.canceled()</target>
        </trans-unit>
        <trans-unit id="0959a2b6954bdfcf3acc1949786a96b421ee10c5" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.enabled</source>
          <target state="translated">SinglePointHandler.enabled</target>
        </trans-unit>
        <trans-unit id="1e8006ca54a3cc2b20ae09884e86b6ff568853fd" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.grabChanged()</source>
          <target state="translated">SinglePointHandler.grabChanged()</target>
        </trans-unit>
        <trans-unit id="80b8a1118e6c93b1ba22f2ca6f996dd9d3cef9ab" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.grabPermissions</source>
          <target state="translated">SinglePointHandler.grabPermissions</target>
        </trans-unit>
        <trans-unit id="717caea785828f1aa1fbfe2deb82ef0c7025e1ec" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.margin</source>
          <target state="translated">SinglePointHandler.margin</target>
        </trans-unit>
        <trans-unit id="8f74be9dac7cfeb70924e80c8b81c0f9059d1914" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.parent</source>
          <target state="translated">SinglePointHandler.parent</target>
        </trans-unit>
        <trans-unit id="622f7c623de1cf1af74f1be43ad22f3b406517cb" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.point</source>
          <target state="translated">SinglePointHandler.point</target>
        </trans-unit>
        <trans-unit id="d890056f6ede8cc19ebc6e121c4a58109c3c9ce8" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.target</source>
          <target state="translated">SinglePointHandler.target</target>
        </trans-unit>
        <trans-unit id="164f306fd67e1822eeb8f4d961107fa23e4ecbc4" translate="yes" xml:space="preserve">
          <source>SingleShot The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; renders to the texture only once after which the resources allocated for rendering are released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8bc28bd230eae9445fec6a48931c7bdeb53ee1" translate="yes" xml:space="preserve">
          <source>Sinhala</source>
          <target state="translated">Sinhala</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="dc09c642d795abf3c0919cdfdee876f71a921495" translate="yes" xml:space="preserve">
          <source>Size - sort by file size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21ebed9f0f8d9de7d6aa3483a3f7f484c8ae939" translate="yes" xml:space="preserve">
          <source>Size Grip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459c7b83fd593d80c606f1b1645a596309472c8c" translate="yes" xml:space="preserve">
          <source>Size Hints and Layouts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cd47dfe3842594673af53a9d528a6bd5e5fa5f" translate="yes" xml:space="preserve">
          <source>Size Hints and Size Policies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2a8d04f4b41d11abb7cff880ee26dc317da75f" translate="yes" xml:space="preserve">
          <source>Size Hints and Size Policies in QGraphicsGridLayout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfb1eb6893d6093a8529805958150c9ff7ce048" translate="yes" xml:space="preserve">
          <source>Size Hints and Size Policies in QGraphicsLinearLayout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402e1a7cee51ebdcfbaccfafe9c21fcf54d1e170" translate="yes" xml:space="preserve">
          <source>Size Hints and Size Policies in an Anchor Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab6f1d33861218947d5ebc92f67fd0ac8cf8dda" translate="yes" xml:space="preserve">
          <source>Size of the entity when projected on the screen as seen from the selected camera, expressed in number of pixels on the side of the bounding square in screen space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ac3f0fd150ee16ee8bac4343cebb513cc76b7f" translate="yes" xml:space="preserve">
          <source>Size of the item can be set via direct manipulation of the items transformation matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbde6e7a3185376de0d3b67ccf9b73d656a0786" translate="yes" xml:space="preserve">
          <source>Size of the page contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bf5121cd9519aaec5f590946c59c19a5a21467" translate="yes" xml:space="preserve">
          <source>Size windows and dialogs in relation to the screen size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7805a2f8658223efcb68debf683046f01bc471" translate="yes" xml:space="preserve">
          <source>Sizing</source>
          <target state="translated">Sizing</target>
        </trans-unit>
        <trans-unit id="4337ef337ecbae01528ec15aa4029353fd42657c" translate="yes" xml:space="preserve">
          <source>Skeleton</source>
          <target state="translated">Skeleton</target>
        </trans-unit>
        <trans-unit id="02316975abc9c133a66cd7958dcaf09dd1da72de" translate="yes" xml:space="preserve">
          <source>Skeleton (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51df08e884c882efec9d41bb05daae5bbbb54767" translate="yes" xml:space="preserve">
          <source>Skeleton QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c74d3877a64500771dfe8541a2a132c4868f1fa" translate="yes" xml:space="preserve">
          <source>Skeleton.rootJoint</source>
          <target state="translated">Skeleton.rootJoint</target>
        </trans-unit>
        <trans-unit id="1eaf4cf1bfe4bf5884ec9772d99dcf3fe61c1ec7" translate="yes" xml:space="preserve">
          <source>SkeletonLoader</source>
          <target state="translated">SkeletonLoader</target>
        </trans-unit>
        <trans-unit id="edd58bf94e0da27d240d959ac0e3eaa179e8a331" translate="yes" xml:space="preserve">
          <source>SkeletonLoader (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8393d01673af16b85b472ea90dc4e9f46c7acbf" translate="yes" xml:space="preserve">
          <source>SkeletonLoader QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114a9cd8387207790909dad4163b7889272f0c46" translate="yes" xml:space="preserve">
          <source>SkeletonLoader.source</source>
          <target state="translated">SkeletonLoader.source</target>
        </trans-unit>
        <trans-unit id="5d651ac0ddc5c38347e48cb4b44da382c84b9172" translate="yes" xml:space="preserve">
          <source>SkeletonLoader.status</source>
          <target state="translated">SkeletonLoader.status</target>
        </trans-unit>
        <trans-unit id="32fd056d3d4b1c9b2ee14fcbcc60776d0f22f1fa" translate="yes" xml:space="preserve">
          <source>Sketch</source>
          <target state="translated">Sketch</target>
        </trans-unit>
        <trans-unit id="67a01d6584f13916407ac2a4b5156bc0808d5e45" translate="yes" xml:space="preserve">
          <source>SkinningPalette</source>
          <target state="translated">SkinningPalette</target>
        </trans-unit>
        <trans-unit id="516d04401beb61899f0fa9adec2f649f570f49a1" translate="yes" xml:space="preserve">
          <source>Skip child elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd65f999b04ce60c4e0ec8b4145d75a6ad7dddc" translate="yes" xml:space="preserve">
          <source>Skips</source>
          <target state="translated">Skips</target>
        </trans-unit>
        <trans-unit id="cdad74c1f4517e867e81d75dbc1ad6a9965245ed" translate="yes" xml:space="preserve">
          <source>Skips the current test case and prints the optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdc5a5dcd34018b0df77844be34f80c86af2f74" translate="yes" xml:space="preserve">
          <source>Skips up to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0f415a97e6861a6527d90cf8842caaf116607c" translate="yes" xml:space="preserve">
          <source>Slash-separated (&quot;looks like a path&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e97c1d92ff9746a38016844fe954b6b8031dd6a" translate="yes" xml:space="preserve">
          <source>Sleeps for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5db7d82232ee34651eb5adea59b01c839eb843" translate="yes" xml:space="preserve">
          <source>Slider</source>
          <target state="translated">Slider</target>
        </trans-unit>
        <trans-unit id="ca1bf6240d8b44bbc15f92c9ee18c566665b427a" translate="yes" xml:space="preserve">
          <source>Slider (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23dceb9c605362980b08ec9e72f3ac047f8e7c48" translate="yes" xml:space="preserve">
          <source>Slider Control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcfe9dcc2a0a3b8176ce7dfc9ff1e40749b408d" translate="yes" xml:space="preserve">
          <source>Slider QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4112fea00fa6f5b7efed63b4f8eb88f3f23d038d" translate="yes" xml:space="preserve">
          <source>Slider consists of two visual items: &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-slider#handle-prop&quot;&gt;handle&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17510cebec22f6c3f31fd0a38b82d55171e841d0" translate="yes" xml:space="preserve">
          <source>Slider handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636a805189e7a9166f09901d54cf343d4465cbec" translate="yes" xml:space="preserve">
          <source>Slider is used to select a value by sliding a handle along a track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030c4523b67f08bffa6def528e9cce11a32b4ea1" translate="yes" xml:space="preserve">
          <source>Slider tickmarks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f38b8659cd5a0cf268ffc47cf39afffe4681073" translate="yes" xml:space="preserve">
          <source>Slider, &lt;a href=&quot;qml-qtquick-controls-spinbox&quot;&gt;SpinBox&lt;/a&gt;, Dial, &lt;a href=&quot;qml-qtquick-controls-private-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe91a8403d124d4148f30cb10cd7bd6f5a4a1d8" translate="yes" xml:space="preserve">
          <source>Slider.activeFocusOnPress</source>
          <target state="translated">Slider.activeFocusOnPress</target>
        </trans-unit>
        <trans-unit id="59b9585bd265b9a9d8408bd589bfaab51ace86a5" translate="yes" xml:space="preserve">
          <source>Slider.decrease()</source>
          <target state="translated">Slider.decrease()</target>
        </trans-unit>
        <trans-unit id="a3a6eabb77a8ab0eb02144eb51bf9d67841c3106" translate="yes" xml:space="preserve">
          <source>Slider.from</source>
          <target state="translated">Slider.from</target>
        </trans-unit>
        <trans-unit id="67b9887863c50292fcc67daec97032e541c5bb9a" translate="yes" xml:space="preserve">
          <source>Slider.handle</source>
          <target state="translated">Slider.handle</target>
        </trans-unit>
        <trans-unit id="b9234975d4b63f44ad0248702126eb12e89c8c76" translate="yes" xml:space="preserve">
          <source>Slider.horizontal</source>
          <target state="translated">Slider.horizontal</target>
        </trans-unit>
        <trans-unit id="02c1aad60588c4bbf51293b08881b9da7c014a44" translate="yes" xml:space="preserve">
          <source>Slider.hovered</source>
          <target state="translated">Slider.hovered</target>
        </trans-unit>
        <trans-unit id="d4a5c37d017b251ff1392723b3e04789a8631211" translate="yes" xml:space="preserve">
          <source>Slider.implicitHandleHeight</source>
          <target state="translated">Slider.implicitHandleHeight</target>
        </trans-unit>
        <trans-unit id="35d11d231b0f3b210e430c83daf9a73e034b07e3" translate="yes" xml:space="preserve">
          <source>Slider.implicitHandleWidth</source>
          <target state="translated">Slider.implicitHandleWidth</target>
        </trans-unit>
        <trans-unit id="f39105361bae80557aeec24d034f1345ac78c80f" translate="yes" xml:space="preserve">
          <source>Slider.increase()</source>
          <target state="translated">Slider.increase()</target>
        </trans-unit>
        <trans-unit id="cce5efb76125dd7602f17a9e635065496de63506" translate="yes" xml:space="preserve">
          <source>Slider.live</source>
          <target state="translated">Slider.live</target>
        </trans-unit>
        <trans-unit id="a4d7bf74ce8a64484b3ed67be418b4ab070c7084" translate="yes" xml:space="preserve">
          <source>Slider.maximumValue</source>
          <target state="translated">Slider.maximumValue</target>
        </trans-unit>
        <trans-unit id="52e7792a4259128384483b0c08161a97f969c9e9" translate="yes" xml:space="preserve">
          <source>Slider.minimumValue</source>
          <target state="translated">Slider.minimumValue</target>
        </trans-unit>
        <trans-unit id="f379d009e725a47b7e5b8c4dfca163ae85a9ae88" translate="yes" xml:space="preserve">
          <source>Slider.moved()</source>
          <target state="translated">Slider.moved()</target>
        </trans-unit>
        <trans-unit id="6786fb9f71be9ce96510fd69ac1f413fe6254547" translate="yes" xml:space="preserve">
          <source>Slider.orientation</source>
          <target state="translated">Slider.orientation</target>
        </trans-unit>
        <trans-unit id="a306c0efa883e1f125fbe86c8fd72658ad2be648" translate="yes" xml:space="preserve">
          <source>Slider.position</source>
          <target state="translated">Slider.position</target>
        </trans-unit>
        <trans-unit id="8bf0389bbe6f3017072c440962540ab269fd1a0b" translate="yes" xml:space="preserve">
          <source>Slider.pressed</source>
          <target state="translated">Slider.pressed</target>
        </trans-unit>
        <trans-unit id="d87859b6bcfd5617ac1ad154887d6b40969229b1" translate="yes" xml:space="preserve">
          <source>Slider.snapMode</source>
          <target state="translated">Slider.snapMode</target>
        </trans-unit>
        <trans-unit id="7b682e5c6118c19e3a33216e72f9413caae3c22c" translate="yes" xml:space="preserve">
          <source>Slider.stepSize</source>
          <target state="translated">Slider.stepSize</target>
        </trans-unit>
        <trans-unit id="d8ee08dbd4e6b47824fad7aaffa1ca564b254b13" translate="yes" xml:space="preserve">
          <source>Slider.tickmarksEnabled</source>
          <target state="translated">Slider.tickmarksEnabled</target>
        </trans-unit>
        <trans-unit id="096bc1ba6964a69d2844860cba513360e869cfd2" translate="yes" xml:space="preserve">
          <source>Slider.to</source>
          <target state="translated">Slider.to</target>
        </trans-unit>
        <trans-unit id="42ef90caa59901457a119463322e88db6d2e58d1" translate="yes" xml:space="preserve">
          <source>Slider.touchDragThreshold</source>
          <target state="translated">Slider.touchDragThreshold</target>
        </trans-unit>
        <trans-unit id="ba2c49abc9927795a7f44bf562c2ac0959173d35" translate="yes" xml:space="preserve">
          <source>Slider.updateValueWhileDragging</source>
          <target state="translated">Slider.updateValueWhileDragging</target>
        </trans-unit>
        <trans-unit id="be52b15f503e6ec7ccb5c0b2e57719f3ca2731f6" translate="yes" xml:space="preserve">
          <source>Slider.value</source>
          <target state="translated">Slider.value</target>
        </trans-unit>
        <trans-unit id="be3786a1f2bc289cc2f716394a4a4fe680ce6191" translate="yes" xml:space="preserve">
          <source>Slider.valueAt()</source>
          <target state="translated">Slider.valueAt()</target>
        </trans-unit>
        <trans-unit id="4a9cb257925909efa78cfa92cb98779f669ea398" translate="yes" xml:space="preserve">
          <source>Slider.vertical</source>
          <target state="translated">Slider.vertical</target>
        </trans-unit>
        <trans-unit id="ecab1d9eea5fbabbb24934471a24bda88994605d" translate="yes" xml:space="preserve">
          <source>Slider.visualPosition</source>
          <target state="translated">Slider.visualPosition</target>
        </trans-unit>
        <trans-unit id="2314fb0a74f132d9ba1e67ded93f0f976234522d" translate="yes" xml:space="preserve">
          <source>Slider.wheelEnabled</source>
          <target state="translated">Slider.wheelEnabled</target>
        </trans-unit>
        <trans-unit id="d689594981a9cf41f84b55f8f45844748c9fb9b7" translate="yes" xml:space="preserve">
          <source>SliderStyle</source>
          <target state="translated">SliderStyle</target>
        </trans-unit>
        <trans-unit id="cb21d9f193b23c253477db3d7b2cb7a59f29c6db" translate="yes" xml:space="preserve">
          <source>SliderStyle (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb1eec6310c686d6559ac46746ef18fc71ee39c" translate="yes" xml:space="preserve">
          <source>SliderStyle QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd21746258d6b5511b15b588931018bfefe21168" translate="yes" xml:space="preserve">
          <source>SliderStyle.control</source>
          <target state="translated">SliderStyle.control</target>
        </trans-unit>
        <trans-unit id="7c1844b53df7f6e6f8ca4d2a74aa8988a08875b0" translate="yes" xml:space="preserve">
          <source>SliderStyle.groove</source>
          <target state="translated">SliderStyle.groove</target>
        </trans-unit>
        <trans-unit id="7f5923fb1bf87a32fa7f063b0ee186aaf8d233f6" translate="yes" xml:space="preserve">
          <source>SliderStyle.handle</source>
          <target state="translated">SliderStyle.handle</target>
        </trans-unit>
        <trans-unit id="a1502b1d14dd623fb7940d0e79ff53ecdfb76ce4" translate="yes" xml:space="preserve">
          <source>SliderStyle.panel</source>
          <target state="translated">SliderStyle.panel</target>
        </trans-unit>
        <trans-unit id="84b09bd48b8582c654523e13bd060d26782e8719" translate="yes" xml:space="preserve">
          <source>SliderStyle.tickmarks</source>
          <target state="translated">SliderStyle.tickmarks</target>
        </trans-unit>
        <trans-unit id="fce087d235bc701db9f6efa7196aee57a683b77f" translate="yes" xml:space="preserve">
          <source>Sliders</source>
          <target state="translated">Sliders</target>
        </trans-unit>
        <trans-unit id="9c73f1323074d5362534e5d1d846551153cd5cce" translate="yes" xml:space="preserve">
          <source>Sliders snap to values while moving, as they do on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7261e1fcf657d36d872062c626823fda67704cbe" translate="yes" xml:space="preserve">
          <source>Slightly beveled (rounded) cube.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc0ebaea5065f2c39ebdc12f2dcf7159f15e8aa" translate="yes" xml:space="preserve">
          <source>Slightly beveled (rounded) rectangular bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1a16e17517d5db584e59f03e5701a1df0aec29" translate="yes" xml:space="preserve">
          <source>Slots</source>
          <target state="translated">Slots</target>
        </trans-unit>
        <trans-unit id="de9f453d0a0c096ba2c9bd188cf6fe2d65d725ae" translate="yes" xml:space="preserve">
          <source>Slots are implemented by the application programmer. Here is a possible implementation of the &lt;code&gt;Counter::setValue()&lt;/code&gt; slot:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf9acb60c3ccf377fae5f467da0a51dc79c1833" translate="yes" xml:space="preserve">
          <source>Slots can be of three kinds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f18c175fc6af81cd5e5c28886bcfe7694c106e" translate="yes" xml:space="preserve">
          <source>Slots can be used for receiving signals, but they are also normal member functions. Just as an object does not know if anything receives its signals, a slot does not know if it has any signals connected to it. This ensures that truly independent components can be created with Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e9def20fcb1920b3271f3f6b186ae0fd79689e" translate="yes" xml:space="preserve">
          <source>Slots can have one parameter of type &lt;code&gt;const QDBusMessage &amp;amp;&lt;/code&gt;, which must appear at the end of the input parameter list, before any output parameters. This parameter, if present, will be initialized with a copy of the current message being processed, which allows the callee to obtain information about the caller, such as its connection name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc20df8f4d5803d170d53a3778054ab2669ca54" translate="yes" xml:space="preserve">
          <source>Slots in D-Bus adaptors are declared just like normal, public slots, but their parameters must follow certain rules (see &lt;a href=&quot;qdbustypesystem#&quot;&gt;The Qt D-Bus Type System&lt;/a&gt; for more information). Slots whose parameters do not follow those rules or that are not public will not be accessible via D-Bus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a8b06eb4898f96a2fc6d5d10dfc35b13982cb6" translate="yes" xml:space="preserve">
          <source>Slovak</source>
          <target state="translated">Slovak</target>
        </trans-unit>
        <trans-unit id="6a3acb36367c06a5500a168780abbfbb98522b53" translate="yes" xml:space="preserve">
          <source>Slovak Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd368bf67c2a1142f1a3890e53e4127424e77a4" translate="yes" xml:space="preserve">
          <source>Slovenian</source>
          <target state="translated">Slovenian</target>
        </trans-unit>
        <trans-unit id="7403c931965471b178b17c8f46b87ce51adb8a8c" translate="yes" xml:space="preserve">
          <source>Slovenian Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17049fd0324619b1065e3442d34fc568386ced7" translate="yes" xml:space="preserve">
          <source>Slovenian, Slovene</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69c25c6c1330c7f13766f37e885af22d4376fac" translate="yes" xml:space="preserve">
          <source>Small font</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0d2a0902bd6b2efd01cbb91c649c26be6b1960" translate="yes" xml:space="preserve">
          <source>Small logo image file. For Windows Phone the image must have a pixel size of 44x44, for other Windows Store App platforms 30x30. Default provided by the mkspec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f386b930893205254759d2f893ca8a646dd718" translate="yes" xml:space="preserve">
          <source>SmartPointer</source>
          <target state="translated">SmartPointer</target>
        </trans-unit>
        <trans-unit id="1605254b3c6498507cff8411b9168a564fc861b1" translate="yes" xml:space="preserve">
          <source>Smooth Scaling Algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9d07fb6a52d4afe198c92b439f79dc86c228ca" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a77b773339965a3c2d26a5cfcc95e7457e6673" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467beefe6831a47c5176b7bfdb1b66b41797b4b1" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation.duration</source>
          <target state="translated">SmoothedAnimation.duration</target>
        </trans-unit>
        <trans-unit id="065cdf81fc6a6fd1099a16f3de1bb5a36611b65c" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation.maximumEasingTime</source>
          <target state="translated">SmoothedAnimation.maximumEasingTime</target>
        </trans-unit>
        <trans-unit id="5fed13ab5b3cd72f23c67f356be0b90eb0d0c41b" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation.reversingMode</source>
          <target state="translated">SmoothedAnimation.reversingMode</target>
        </trans-unit>
        <trans-unit id="5db00925766a14ca66bf16b4ec4c374987bbcf5b" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation.velocity</source>
          <target state="translated">SmoothedAnimation.velocity</target>
        </trans-unit>
        <trans-unit id="622e339b485e44851f1a8b27c0f2bcbebc0f78ca" translate="yes" xml:space="preserve">
          <source>Snow exposure mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a58ce1363c8cf10d255324ae63c0bacad290c9" translate="yes" xml:space="preserve">
          <source>So a processor function typically looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1f5ed0de1d41eeab7b08e0b439b0b6f16bf14c" translate="yes" xml:space="preserve">
          <source>So far, the example has the second component statically selected. It is trivial now to extend this component to make it clickable, and add it to the original application. We still set one of the widgets as focused by default. Now, clicking either MyClickableWidget gives it focus and the other widget loses the focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa17a9b88d55ac111f4f418ce81aaf851c47eb0d" translate="yes" xml:space="preserve">
          <source>So you can write:</source>
          <target state="translated">Así que puedes escribir:</target>
        </trans-unit>
        <trans-unit id="bb9e604e90629c2944c5ca0844c15eab46eef12a" translate="yes" xml:space="preserve">
          <source>So, in general, there are four files interacting with the help system, two used for generating Qt help and two meant for distribution:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c7181dbdac4bc3136036896fc6ccecddcf6b54" translate="yes" xml:space="preserve">
          <source>So, while the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.item, &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.index and &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.destination values vary for each individual transition that is run, the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.&lt;a href=&quot;qml-qtquick-viewtransition#targetIndexes-attached-prop&quot;&gt;targetIndexes&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.&lt;a href=&quot;qml-qtquick-viewtransition#targetItems-attached-prop&quot;&gt;targetItems&lt;/a&gt; values are the same for every &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;displaced&lt;/code&gt; transition that is triggered by a particular add operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce92c87d46725bfc4d8e9af6673890567b5eca75" translate="yes" xml:space="preserve">
          <source>So, you are not limited to call functions. In a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element you can put zero or more C++ statements, and in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6d8c25d5590c5a0f37e92d605a82c1a0cc7920" translate="yes" xml:space="preserve">
          <source>So, you no longer have to worry about rearranging widgets for different platforms, settings, and languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d3d3d075bec544d593fda545be27d10a66fdd8" translate="yes" xml:space="preserve">
          <source>SocialAffairs</source>
          <target state="translated">SocialAffairs</target>
        </trans-unit>
        <trans-unit id="147195b943b996129b7bc2e6aa282d4c44864dee" translate="yes" xml:space="preserve">
          <source>Socket activated, used to implement &lt;a href=&quot;qsocketnotifier&quot;&gt;QSocketNotifier&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5c1adabd9e632aecff79a85337bd03b52888ac" translate="yes" xml:space="preserve">
          <source>Socket is attempting to connect to a device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0139769ddcd014f331244f8d9a0ccfe87aadf52a" translate="yes" xml:space="preserve">
          <source>Socket is bound to a local address and port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74436f2f2ff8c07895b29e63dc49f3ac9d7584ec" translate="yes" xml:space="preserve">
          <source>Socket is connected and will be closed once all pending data is written to the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420311d95838c74487d0a519bdf8e6e61ade65d5" translate="yes" xml:space="preserve">
          <source>Socket is connected to a device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7859e379bb4509a4137b8e126f716a407154c28b" translate="yes" xml:space="preserve">
          <source>Socket is listening for incoming connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9982027706df7085bb80bd4c946059549487581" translate="yes" xml:space="preserve">
          <source>Socket is not connected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157ae7e57f4e6d04eede880f260263af00e2318e" translate="yes" xml:space="preserve">
          <source>Socket is querying connection parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968c009e49bfb5a3b472294b47747ba7152a9501" translate="yes" xml:space="preserve">
          <source>Soft</source>
          <target state="translated">Soft</target>
        </trans-unit>
        <trans-unit id="5cdc9d79faae37afab5cf6d28cd7386c138a850d" translate="yes" xml:space="preserve">
          <source>SoftRhythmAndBlues</source>
          <target state="translated">SoftRhythmAndBlues</target>
        </trans-unit>
        <trans-unit id="43e4ae6b39ae3ffa6f3f55d87b99f42b00a0660b" translate="yes" xml:space="preserve">
          <source>SoftRock</source>
          <target state="translated">SoftRock</target>
        </trans-unit>
        <trans-unit id="31d5e4361c66ef3392c14dd462df6766c9b38cbd" translate="yes" xml:space="preserve">
          <source>Software - Request with the &lt;code&gt;&quot;software&quot;&lt;/code&gt; string or the &lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface::Software&lt;/a&gt; enum value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5eee21e634815badd7d7f51bdf882fb9a0c1c75" translate="yes" xml:space="preserve">
          <source>Software Adaptation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5b48a34830f7379d87e8112a78e54b771dea6a" translate="yes" xml:space="preserve">
          <source>Software flow control (XON/XOFF).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="bd4c9bdccf250ec96b1d18aa6824e58914dfd3cb" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://doc.qt.io/qt-5.13/examples-activeqt.html&quot;&gt;example applications&lt;/a&gt; that use standard ActiveX controls to provide high-level user interface functionality are provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8e555aeb2de3395b2c7f201e5447b8f2d9a621" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://doc.qt.io/qt-5.13/examples-activeqt.html&quot;&gt;example implementations&lt;/a&gt; of ActiveX controls and COM objects are provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad120a0f99a83a8ed1c54af31813eabde3f9c047" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; functions, e.g. &lt;a href=&quot;qobject#children&quot;&gt;children&lt;/a&gt;(), return a &lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectList&lt;/a&gt;. &lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectList&lt;/a&gt; is a typedef for &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0d40bfc19364a237b0f8a870c26d26feabd4b9" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; engines are implemented on top of OpenGL. This will be detected at configure time and &lt;a href=&quot;#qmake-libs-opengl&quot;&gt;QMAKE_LIBS_OPENGL&lt;/a&gt; will be implicitly added to &lt;a href=&quot;#qmake-libs-openvg&quot;&gt;QMAKE_LIBS_OPENVG&lt;/a&gt; wherever the &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; libraries are linked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a65cc896d2c394a64a63a22020c7b31fb3e2b18" translate="yes" xml:space="preserve">
          <source>Some API features are not available on all platforms. The &lt;a href=&quot;qnetworkconfigurationmanager#Capability-enum&quot;&gt;QNetworkConfigurationManager::Capability&lt;/a&gt; should be used to detect platform features at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162b7646e4f363e2a45ff8f230ebe882a818c0c7" translate="yes" xml:space="preserve">
          <source>Some ActiveX controls might be unstable when connected to an event sink. To get OLE events you must use standard COM methods to register your own event sink. Use &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;queryInterface&lt;/a&gt;() to get access to the raw COM object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22735a8f9b7b8b9d58fca6f4f384631ef0943c76" translate="yes" xml:space="preserve">
          <source>Some ActiveX controls might be unstable when used with OLE automation. Use standard COM methods to use those controls through the COM interfaces provided by &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;queryInterface&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdbd560a6d9fc00acf9c205af629467935b7d30" translate="yes" xml:space="preserve">
          <source>Some GUI applications provide a special batch mode ie. provide command line arguments for executing tasks without manual intervention. In such non-GUI mode, it is often sufficient to instantiate a plain &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; to avoid unnecessarily initializing resources needed for a graphical user interface. The following example shows how to dynamically create an appropriate type of application instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1d02fed5f09e5d2dd53d254fa2e49f81491392" translate="yes" xml:space="preserve">
          <source>Some Qt classes and functions are thread-safe. These are mainly the thread-related classes (e.g. &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;) and fundamental functions (e.g. &lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;QCoreApplication::postEvent&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46703cbb26d7b25acbc5a5135113f2487e7ed7f2" translate="yes" xml:space="preserve">
          <source>Some RPM versions have problems installing some of the Qt RPM archives where installation stops with an error message warning about a &lt;b&gt;Failed Dependency&lt;/b&gt;. Use the &lt;code&gt;--nodeps&lt;/code&gt; option of &lt;code&gt;rpm&lt;/code&gt; as workaround this problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70082637a16ac7e4ea50b1f21261f3a8d77d1660" translate="yes" xml:space="preserve">
          <source>Some Windows commands (for example, &lt;code&gt;dir&lt;/code&gt;) are not provided by separate applications, but by the command interpreter itself. If you attempt to use &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; to execute these commands directly, it won't work. One possible solution is to execute the command interpreter itself (&lt;code&gt;cmd.exe&lt;/code&gt; on some Windows systems), and ask the interpreter to execute the desired command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f326897c041ee3357cb49eab1bdb8db80b2efc5" translate="yes" xml:space="preserve">
          <source>Some X11 window managers do not support the &quot;stays on top&quot; flag. A solution is to set up a timer that periodically calls &lt;a href=&quot;qwidget#raise&quot;&gt;raise&lt;/a&gt;() on the splash screen to simulate the &quot;stays on top&quot; effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee646358ffb27f8e10429633f579ceb1f27dd40" translate="yes" xml:space="preserve">
          <source>Some algorithms have special requirements on the value type stored in the containers. For example, &lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;qDeleteAll&lt;/a&gt;() requires that the value type is a non-const pointer type (for example, &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *). The value type requirements are specified for each algorithm, and the compiler will produce an error if a requirement isn't met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d6c5042ca6aa5ed239d9f4c08b4ad0fef3fe27" translate="yes" xml:space="preserve">
          <source>Some applications may need to interface Qt with other frameworks. This often means using graphics contexts or other types of native handles created by one framework with another. For example, on some platforms, &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; offers the ability to wrap an existing native OpenGL context, instead of creating a new one. This existing native context can be created by some other third-party code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eee6a142e6cbbcf87880670099f60f1b3dddcde" translate="yes" xml:space="preserve">
          <source>Some applications may want to suppress any form of roaming altogether. Possible use cases may be high priority downloads or remote services which cannot handle a roaming enabled client. Clients can suppress roaming by connecting to the &lt;a href=&quot;qnetworksession#preferredConfigurationChanged&quot;&gt;preferredConfigurationChanged&lt;/a&gt;() signal and answer each signal emission with &lt;a href=&quot;qnetworksession#ignore&quot;&gt;ignore&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cac5bd2d8cb6853c3303f81f4e0bcdacf5190dc" translate="yes" xml:space="preserve">
          <source>Some applications will want to be functional with multiple accelerated graphics backends. This has consequences for &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; items because the supported shading languages may vary from backend to backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60aec3d66247e24acd4e3074bb92d50c43197b91" translate="yes" xml:space="preserve">
          <source>Some applications, e.g., a word processor or a DTP application might need more features than the ones provided by Qt's layout engine, in which case you can subclass &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; to provide custom layout behavior for your text documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bb3ecd180a54b771a03e20cf47a3d9c9ae5587" translate="yes" xml:space="preserve">
          <source>Some applications, such as Qt Linguist, must be able to support changes to the user's language settings while they are still running. To make widgets aware of changes to the installed &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; objects, reimplement the widget's &lt;a href=&quot;qwidget#changeEvent&quot;&gt;changeEvent()&lt;/a&gt; function to check whether the event is a &lt;a href=&quot;qevent#Type-enum&quot;&gt;LanguageChange&lt;/a&gt; event, and update the text displayed by widgets using the &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt; function in the usual way. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc7ee38d30370f68abe833d4882a4d4fee9142d" translate="yes" xml:space="preserve">
          <source>Some attributes may not be intended to be readable by end users, the label field of such attributes are empty to indicate this fact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f75fb39baa735a212ae894e2f54591d90d889d" translate="yes" xml:space="preserve">
          <source>Some attributes may not be intended to be readable by end users, the label field of such attributes is empty to indicate this fact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c4b200c4ad51f575fd9239721227f984b309d1" translate="yes" xml:space="preserve">
          <source>Some backends (&lt;code&gt;evdev&lt;/code&gt; on Linux and &lt;code&gt;xinput&lt;/code&gt; on Windows) and the plugin loader utilize the logging category &lt;code&gt;qt.gamepad&lt;/code&gt;. Enabling this will print useful information on the debug output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4919cede0988547ba79398c6b62e6fdd3bd7fe28" translate="yes" xml:space="preserve">
          <source>Some backends may support saving and removing places. This can be done by calling the &lt;a href=&quot;qml-qtlocation-place#save-method&quot;&gt;Place::save&lt;/a&gt;() and &lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;Place::remove&lt;/a&gt;() methods respectively. Note that in order to save a &lt;a href=&quot;qml-qtlocation-place&quot;&gt;Place&lt;/a&gt;, a &lt;a href=&quot;#plugin&quot;&gt;Plugin&lt;/a&gt; must be assigned to specify which backend we are saving to. The &lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;status&lt;/a&gt; property will transition into the &lt;code&gt;Saving&lt;/code&gt; state while the save operation is happening and on successful completion will move to the &lt;code&gt;Ready&lt;/code&gt; state. The following snippet shows how to save and remove a place using javascript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c950ed35ade96b1fa1854aaa20defbc6a71921c3" translate="yes" xml:space="preserve">
          <source>Some backends only support enabling or disabling the buffer and do not give control over the size. In this case, the &lt;a href=&quot;qsensor#maxBufferSize-prop&quot;&gt;maxBufferSize&lt;/a&gt; and &lt;a href=&quot;qsensor#efficientBufferSize-prop&quot;&gt;efficientBufferSize&lt;/a&gt; properties might not be set at all, even though buffering is supported. Setting the bufferSize property to any value greater than 1 will enable buffering. After the sensor has been started, the bufferSize property will be set to the actual value by the backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26141714e61c39b279f1be4582e0496445a5f344" translate="yes" xml:space="preserve">
          <source>Some basic types are provided by the &lt;code&gt;QtQuick&lt;/code&gt; module and thus cannot be used as property types unless the module is imported. See the &lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;QML Basic Types&lt;/a&gt; documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c54863b6f3efbd61a066f4424c269890d544ef1" translate="yes" xml:space="preserve">
          <source>Some basic types are supported by the engine by default and do not require an &lt;a href=&quot;qtqml-syntax-imports#&quot;&gt;import statement&lt;/a&gt; to be used, while others do require the client to import the module which provides them. All of the basic types listed below may be used as a &lt;code&gt;property&lt;/code&gt; type in a QML document, with the following exceptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c80cc439d14f33b80fc206b0e1a87855f8c0e9" translate="yes" xml:space="preserve">
          <source>Some basic types have properties: for example, the &lt;a href=&quot;qml-font&quot;&gt;font&lt;/a&gt; type has &lt;code&gt;pixelSize&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt; and &lt;code&gt;bold&lt;/code&gt; properties. Unlike properties of &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-typesystem-topic.html#qml-object-types&quot;&gt;object types&lt;/a&gt;, properties of basic types do not provide their own property change signals. It is only possible to create a property change signal handler for the basic type property itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c195a2983ccc3df664db09acc8d292a2601494e" translate="yes" xml:space="preserve">
          <source>Some cache implementations can keep these cache items in memory for performance reasons, but for security reasons they should not be written to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43c2bb1336686e5886e3b5873a471ea5083d4ac" translate="yes" xml:space="preserve">
          <source>Some camera devices may not have flash hardware, or may not be configurable. In that case, there will be no &lt;a href=&quot;qcameraflashcontrol&quot;&gt;QCameraFlashControl&lt;/a&gt; available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6dcafd31faeeb51db14013ebb69ea2310aedc40" translate="yes" xml:space="preserve">
          <source>Some care must be taken when trying to convert the data in chunks, for example, when receiving it over a network. In such cases it is possible that a multi-byte character will be split over two chunks. At best this might result in the loss of a character and at worst cause the entire conversion to fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28826dedd3e622caa04b8b4e3d1b5b6ea547038" translate="yes" xml:space="preserve">
          <source>Some care should be taken that no conflicting QScrollEvents are sent from two sources. Using &lt;a href=&quot;qscroller#scrollTo&quot;&gt;QScroller::scrollTo&lt;/a&gt; is save however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74df780691d4b57b242bbe806c6d59194a99ccc1" translate="yes" xml:space="preserve">
          <source>Some classes support more than one actual event type. &lt;a href=&quot;qmouseevent&quot;&gt;QMouseEvent&lt;/a&gt; supports mouse button presses, double-clicks, moves, and other related operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b2a8c8b7ee657c1243390515bf985493740f7a" translate="yes" xml:space="preserve">
          <source>Some common context commands are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30ee08e8df5aa89b69ef9142860dc72b755eae8" translate="yes" xml:space="preserve">
          <source>Some common verbs for function documentation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e108be4d3a80dd27f796e11465fcada934fa58a" translate="yes" xml:space="preserve">
          <source>Some configuration updates may require some time to perform updates. A WLAN scan is such an example. Unless the platform performs internal updates it may be required to manually trigger configuration updates via &lt;a href=&quot;qnetworkconfigurationmanager#updateConfigurations&quot;&gt;QNetworkConfigurationManager::updateConfigurations&lt;/a&gt;(). The completion of the update process is indicated by emitting the &lt;a href=&quot;qnetworkconfigurationmanager#updateCompleted&quot;&gt;updateCompleted&lt;/a&gt;() signal. The update process ensures that every existing &lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; instance is updated. There is no need to ask for a renewed configuration list via &lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;allConfigurations&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ff784c555f2694d0cd8ba1ba2347284d69e55f" translate="yes" xml:space="preserve">
          <source>Some configuration variables accept a list of strings as their value, for example: &lt;a href=&quot;22-qdoc-configuration-generalvariables#sourcedirs-variable&quot;&gt;&lt;code&gt;sourcedirs&lt;/code&gt;&lt;/a&gt;, while others accept only a single string. Double quotes around a value string are optional, but including them allows you to use special characters like '=' and ' &quot; ' within the value string, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e892a28898ee44efe78593bc4173579024a00296" translate="yes" xml:space="preserve">
          <source>Some configuration variables allow you to use QDoc to support Qt-based projects. They allow your project to contain links to the online Qt documentation, which means that QDoc will be able to create links to the class reference documentation, without any explicit linking command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3220db37d795d66f72d9fb2bd0f226bc7dc4bad" translate="yes" xml:space="preserve">
          <source>Some constants are defined only on certain platforms. You can use the preprocessor symbols &lt;a href=&quot;qtglobal#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt; and &lt;a href=&quot;qtglobal#Q_OS_MACOS&quot;&gt;Q_OS_MACOS&lt;/a&gt; to test that the application is compiled under Windows or &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac80ccd376dd3fa37080c1f6cc4f9bac7a790b6d" translate="yes" xml:space="preserve">
          <source>Some containers have additional requirements for the data types they can store. For example, the Key type of a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; must provide &lt;code&gt;operator&amp;lt;()&lt;/code&gt;. Such special requirements are documented in a class's detailed description. In some cases, specific functions have special requirements; these are described on a per-function basis. The compiler will always emit an error if a requirement isn't met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df318c855c29b1c02eac127d13434a5aa42baf3c" translate="yes" xml:space="preserve">
          <source>Some corner cases involving namespaces and element constructors are incorrect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0341a8ba7b6bd8b5229a090060c8694cec4ab54" translate="yes" xml:space="preserve">
          <source>Some custom widgets have special user interface features that may make them behave differently to many of the standard widgets found in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ab95ccf5c0a704bfe8fca75433d2dbc50e4d0f" translate="yes" xml:space="preserve">
          <source>Some data, which is returned by &lt;a href=&quot;qxmlnodemodelindex#data&quot;&gt;data&lt;/a&gt;(), &lt;a href=&quot;qxmlnodemodelindex#internalPointer&quot;&gt;internalPointer&lt;/a&gt;(), and &lt;a href=&quot;qxmlnodemodelindex#additionalData&quot;&gt;additionalData&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b954069bad7d32129344a8608b6608c7e6a6478" translate="yes" xml:space="preserve">
          <source>Some databases are capable of returning multiple result sets for stored procedures or SQL batches (a query strings that contains multiple statements). If multiple result sets are available after executing a query this function can be used to navigate to the next result set(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8f96bacee2d0a984bc71f32a17593134a80b94" translate="yes" xml:space="preserve">
          <source>Some driver managers and drivers do not support UNICODE. To use the QODBC plugin with such drivers, it has to be compiled with Q_ODBC_VERSION_2 defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e7ae49950e2bfa24a482d241f485d9c70110f5" translate="yes" xml:space="preserve">
          <source>Some drivers do not support scrollable cursors. In that case, only queries in forwardOnly mode can be used successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1139acfae9592f6359ebedbd1117ab2da0aa3098" translate="yes" xml:space="preserve">
          <source>Some effects will want to provide a vertex shader as well. Below is a similar effect with both the vertex and fragment shader provided by the application. This time the colorization factor is provided by the QML item instead of hardcoding it in the shader. This can allow, among others, animating the value using QML's and Qt Quick's standard facilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991fc05960554eee87efafeb82ef468e7fd6e3e5" translate="yes" xml:space="preserve">
          <source>Some events, such as &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ShortcutOverride&lt;/a&gt; must be explicitly accepted (by calling &lt;a href=&quot;qevent#accept&quot;&gt;accept()&lt;/a&gt; on them) in order to prevent propagation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db4b192e8a5fe570e826b7dbc6dffa9230106cc" translate="yes" xml:space="preserve">
          <source>Some events, such as &lt;a href=&quot;qmouseevent&quot;&gt;QMouseEvent&lt;/a&gt; and &lt;a href=&quot;qkeyevent&quot;&gt;QKeyEvent&lt;/a&gt;, come from the window system; some, such as &lt;a href=&quot;qtimerevent&quot;&gt;QTimerEvent&lt;/a&gt;, come from other sources; some come from the application itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">Algunos ejemplos:</target>
        </trans-unit>
        <trans-unit id="0bd1c07eac0e7a9cbb9bd0005203a01323764e45" translate="yes" xml:space="preserve">
          <source>Some features of &lt;a href=&quot;qnetworkdatagram&quot;&gt;QNetworkDatagram&lt;/a&gt; are not supported in all operating systems. Only the address and ports of the remote host (sender in received packets and destination for outgoing packets) are supported in all systems. On most operating systems, the other features are supported only for IPv6. Software should check at runtime whether the rest could be determined for IPv4 addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5dc9e9835daf9cc0551aa7916959c834a32b539" translate="yes" xml:space="preserve">
          <source>Some filesystem types allow multiple subvolumes inside one device, which may be mounted in different paths. If the subvolume could be detected, it is returned here. The format of the subvolume name is specific to each filesystem type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036acd8848f891ee8e09132c0856d535df203987" translate="yes" xml:space="preserve">
          <source>Some hardware supports a movable focus lens assembly, and typically this hardware also supports automatically focusing via some heuristic. You can influence this via the &lt;a href=&quot;qcamerafocus#FocusPointMode-enum&quot;&gt;FocusPointMode&lt;/a&gt; setting - typically the center of the frame is brought into focus, but some hardware also supports focusing on any faces detected in the frame, or on a specific point (usually provided by a user in a &quot;touch to focus&quot; scenario).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7825ea46a648936cbbfa09dc3a99bd2cfb6817ff" translate="yes" xml:space="preserve">
          <source>Some image formats, in particular lossy ones, entail a tradeoff between a) visual quality of the resulting image, and b) decoding execution time. This function sets the level of that tradeoff for image formats that support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce17fe97507d1e01c740794f57ca06547503a1e" translate="yes" xml:space="preserve">
          <source>Some image formats, in particular lossy ones, entail a tradeoff between a) visual quality of the resulting image, and b) encoding execution time and compression level. This function sets the level of that tradeoff for image formats that support it. For other formats, this value is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a651273181188eb1f5ac6e068cbe1907e1236b" translate="yes" xml:space="preserve">
          <source>Some implementations will share the same OpenGL context between multiple &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instances. The openglContextCreated() signal will in this case only be emitted for the first window, when the OpenGL context is actually created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab5e6a341df84ad18c59ef6e71b6c1c5c09a577" translate="yes" xml:space="preserve">
          <source>Some keyboard layouts, such as symbol layouts, may contain more keys than it is feasible to present on a single keyboard layout. A solution is to embed multiple keyboard layouts into the same context by using the &lt;a href=&quot;qml-qtquick-virtualkeyboard-keyboardlayoutloader&quot;&gt;KeyboardLayoutLoader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1319c0bad4e054b76843ca01a929aa55c5709138" translate="yes" xml:space="preserve">
          <source>Some keys may alternatively be handled via specific signal properties, for example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ed1e6a621c33a147267289e3043b38ba1e00b8" translate="yes" xml:space="preserve">
          <source>Some layouts have width and height interdependencies. These can be expressed using &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;(), &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;(), and &lt;a href=&quot;qlayoutitem#minimumHeightForWidth&quot;&gt;minimumHeightForWidth&lt;/a&gt;(). For more explanation see the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe35a54fd4bbd2b5d48ea819ecf47ee694cbbfa" translate="yes" xml:space="preserve">
          <source>Some map items such as &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-mappolygon&quot;&gt;MapPolygon&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-maprectangle&quot;&gt;MapRectangle&lt;/a&gt; will be rendered after the topmost &lt;a href=&quot;https://www.mapbox.com/mapbox-gl-js/style-spec/#layers&quot;&gt;layer&lt;/a&gt; of the style. With this parameter set, the map items will be rendered &lt;b&gt;before&lt;/b&gt; the layer ID specified, unless the layer is not present on the current style, which will fallback to the default behavior. This parameter can be used to display route lines under labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710c7175fa23aa97cc6490b3eb61267598844604" translate="yes" xml:space="preserve">
          <source>Some material flags prevent batching, the most limiting one being &lt;a href=&quot;qsgmaterial#Flag-enum&quot;&gt;QSGMaterial::RequiresFullMatrix&lt;/a&gt; which prevents all batching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f0f087057d0d4fd03bbbcbc3661e75db5c6037" translate="yes" xml:space="preserve">
          <source>Some mobile platforms use the concept of grouped access points (also called SNAP or Service Network Access Point). In principle multiple configurations are grouped together and possibly even prioritized when compared to each other. This is useful for use cases where all configurations serve a similar purpose or context. A common context could be that they provide access to the public Internet or possibly only to the office Intranet. By providing a pool of configurations the system can make a decision based on given priorities which usually map to factors such as speed, availability and cost. Furthermore the system can automatically roam from one access point to the next one while ensuring minimal impact on the user experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebcfb045ef0c22ebe462994efa03f62e5b9a27f" translate="yes" xml:space="preserve">
          <source>Some models need to obtain data from remote sources, or must perform time-consuming operations to obtain information about the way the data is organized. Since views generally request as much information as possible in order to accurately display model data, it can be useful to restrict the amount of information returned to them to reduce unnecessary follow-up requests for data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2467229d47d85864cfe4603cf78898c7dd7226fd" translate="yes" xml:space="preserve">
          <source>Some more examples of regular expressions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0678d955d52a192c157da4b552f3aff291f2e62f" translate="yes" xml:space="preserve">
          <source>Some notes on autofocus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2758c5eb859a9a9a455088129b82a0d583a71b8d" translate="yes" xml:space="preserve">
          <source>Some of &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;'s functions are concerned with scrolling, for example &lt;a href=&quot;qabstractitemview#horizontalScrollMode-prop&quot;&gt;setHorizontalScrollMode&lt;/a&gt;() and &lt;a href=&quot;qabstractitemview#verticalScrollMode-prop&quot;&gt;setVerticalScrollMode&lt;/a&gt;(). To set the range of the scroll bars, you can, for example, reimplement the view's &lt;a href=&quot;qabstractitemview#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;() function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3acc42de8d80fc592e2235f19f9cac2ec9a2c7a8" translate="yes" xml:space="preserve">
          <source>Some of &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;'s functions query the file system, but for performance reasons, some functions only operate on the file name itself. For example: To return the absolute path of a relative file name, &lt;a href=&quot;qfileinfo#absolutePath&quot;&gt;absolutePath&lt;/a&gt;() has to query the file system. The &lt;a href=&quot;qfileinfo#path&quot;&gt;path&lt;/a&gt;() function, however, can work on the file name directly, and so it is faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2dbacde9d9fc75d3c363c234329af4218dbd220" translate="yes" xml:space="preserve">
          <source>Some of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;'s properties are supported, including window flags and attributes, but not all. You should refer to &lt;a href=&quot;#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;'s class documentation for a complete overview of what is and what is not supported. For example, you can create decorated windows by passing the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt; window flag to &lt;a href=&quot;#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;'s constructor, but Graphics View currently doesn't support the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt; and &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Drawer&lt;/a&gt; flags that are common on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd434cd4eb5a3d0c188615852519007ffead6b20" translate="yes" xml:space="preserve">
          <source>Some of the added features listed above for the Qt Object Model, require that we think of Qt Objects as identities, not values. Values are copied or assigned; identities are cloned. Cloning means to create a new identity, not an exact copy of the old one. For example, twins have different identities. They may look identical, but they have different names, different locations, and may have completely different social networks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95a2dd99996dd2c37356be383f3e67ee874d73d" translate="yes" xml:space="preserve">
          <source>Some of the bounding rectangles that we outline in the widget images are equal. Reasons for this are that some elements draw backgrounds while others draw frames and labels. If in doubt, check the description of each element in &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;. Also, some elements are there to layout, i.e., decide where to draw, other elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4481ffba04111e20b8829ee50fce1d13351d6019" translate="yes" xml:space="preserve">
          <source>Some of the buttons are checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cc239a2a8321feaca77ed800634aca1bc074cf" translate="yes" xml:space="preserve">
          <source>Some of the clocks used by &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; have a limited range and may overflow after hitting the upper limit (usually 32-bit). &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; deals with this overflow issue and presents a consistent timing. However, when extracting the time since reference from &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;, two different processes in the same machine may have different understanding of how much time has actually elapsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd86101a2d21134246bddc667f0638a78348d96f" translate="yes" xml:space="preserve">
          <source>Some of the configuration values are relevant only for the HTML output format and their values contain raw HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4423b9d85f9b55bb21ab8e97f098cf03c0594ee9" translate="yes" xml:space="preserve">
          <source>Some of the criteria may not make sense in all of the types of query. The following table lists the criteria that are most commonly used, according to the type of query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4febf59614808c3b11758b6c9ef5d7357aa6e130" translate="yes" xml:space="preserve">
          <source>Some of the examples discussed above are implemented in the &lt;a href=&quot;qregexp#code-examples&quot;&gt;code examples&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f8a7b0aba18d5114f2534999fc12b9db7f8172" translate="yes" xml:space="preserve">
          <source>Some of the key features are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceefca2abe682ccc9451805dba821fa16feb398" translate="yes" xml:space="preserve">
          <source>Some of the metrics are described in the image to the right. The central dark rectangles cover the logical width() of each character. The outer pale rectangles cover the &lt;a href=&quot;qfontmetricsf#leftBearing&quot;&gt;leftBearing&lt;/a&gt;() and &lt;a href=&quot;qfontmetricsf#rightBearing&quot;&gt;rightBearing&lt;/a&gt;() of each character. Notice that the bearings of &quot;f&quot; in this particular font are both negative, while the bearings of &quot;o&quot; are both positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540cc51176676779f0195774736f9d913cbe97d2" translate="yes" xml:space="preserve">
          <source>Some of the metrics are described in the image. The central dark rectangles cover the logical &lt;a href=&quot;qfontmetrics#horizontalAdvance&quot;&gt;horizontalAdvance&lt;/a&gt;() of each character. The outer pale rectangles cover the &lt;a href=&quot;qfontmetrics#leftBearing&quot;&gt;leftBearing&lt;/a&gt;() and &lt;a href=&quot;qfontmetrics#rightBearing&quot;&gt;rightBearing&lt;/a&gt;() of each character. Notice that the bearings of &quot;f&quot; in this particular font are both negative, while the bearings of &quot;o&quot; are both positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8615d2a934c3f78b4c97976c5f44e3f522d6d04" translate="yes" xml:space="preserve">
          <source>Some of the operating systems and windowing systems that Qt runs on only have limited support for Unicode. The level of support available in the underlying system has some influence on the support that Qt can provide on those platforms, although in general Qt applications need not be too concerned with platform-specific limitations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4c69702f98972ccae098bfbc692f79972cfc06" translate="yes" xml:space="preserve">
          <source>Some of the values in this enum represent a user configuration. Such enum values will return the same paths in different applications, so they could be used to share data with other applications. Other values are specific to this application. Each enum value in the table below describes whether it's application-specific or generic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a850441aa57ddf573c5db0d0877d0bba03e3a19" translate="yes" xml:space="preserve">
          <source>Some of these packages depend on others in this list, so installing one may cause others to be automatically installed. Other distributions may provide system packages with similar names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e25972e9b67bcbc0534ea874569ce9c75077ce" translate="yes" xml:space="preserve">
          <source>Some older Unix distributions contain only partial support for some locales. For example, if you have a &lt;code&gt;/usr/share/locale/ja_JP.EUC&lt;/code&gt; directory, this does not necessarily mean you can display Japanese text; you also need to have Japanese fonts installed, and the &lt;code&gt;/usr/share/locale/ja_JP.EUC&lt;/code&gt; directory needs to be complete. For best results, use complete locales from your system vendor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b060e9d21a995dd450f814649462a0c18dedc1c" translate="yes" xml:space="preserve">
          <source>Some operating systems limit the number of timers that may be used; Qt tries to work around these limitations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bebbdbf48edc89afdd6d88ff7b94a762f4a3f19" translate="yes" xml:space="preserve">
          <source>Some operations such as &lt;a href=&quot;qmatrix4x4#translate&quot;&gt;translate&lt;/a&gt;(), &lt;a href=&quot;qmatrix4x4#scale&quot;&gt;scale&lt;/a&gt;(), and &lt;a href=&quot;qmatrix4x4#rotate&quot;&gt;rotate&lt;/a&gt;() can be performed more efficiently if the matrix being modified is already known to be the identity, a previous &lt;a href=&quot;qmatrix4x4#translate&quot;&gt;translate&lt;/a&gt;(), a previous &lt;a href=&quot;qmatrix4x4#scale&quot;&gt;scale&lt;/a&gt;(), etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406df074b7d82091bfda8f9025dc5dd1447724d7" translate="yes" xml:space="preserve">
          <source>Some paths returned by &lt;a href=&quot;qstandardpaths#writableLocation&quot;&gt;QStandardPaths::writableLocation&lt;/a&gt;() may be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a3e8c363358b16afeba579a141929d263d2df3" translate="yes" xml:space="preserve">
          <source>Some pixel metrics are called from widgets and some are only called internally by the style. If the metric is not called by a widget, it is the discretion of the style author to make use of it. For some styles, this may not be appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9ca305aecb75ea079935082485aba70b0a8ea4" translate="yes" xml:space="preserve">
          <source>Some platforms can group audio streams into categories and manage their volumes independently, or display them in a system mixer control. You can set this property to allow the platform to distinguish the purpose of your streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cb8158c80e7404aa99bc7ed4bbda4bb97c121c" translate="yes" xml:space="preserve">
          <source>Some platforms can perform different audio routing for different categories, or may allow the user to set different volume levels for different categories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f678d8d7a8165963573a3fbf58619582ba6b5539" translate="yes" xml:space="preserve">
          <source>Some platforms have a policy of suspending sensors when the screen turns off. Setting this property to true will ensure the sensor continues to run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8378af5dcd46143ccef6a511c329f89175d0f08b" translate="yes" xml:space="preserve">
          <source>Some platforms like Android and &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; cannot handle multiple native windows properly, so only the Qt Quick 2 graphs are available in practice for those platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e55affafc4f3eeb80c66545c545536c0e0b41a9" translate="yes" xml:space="preserve">
          <source>Some platforms may distinguish forced roaming and application level roaming (ALR). ALR implies that the application controls (via &lt;a href=&quot;qnetworksession#migrate&quot;&gt;migrate&lt;/a&gt;(), &lt;a href=&quot;qnetworksession#ignore&quot;&gt;ignore&lt;/a&gt;(), &lt;a href=&quot;qnetworksession#accept&quot;&gt;accept&lt;/a&gt;() and &lt;a href=&quot;qnetworksession#reject&quot;&gt;reject&lt;/a&gt;()) whether a network session can roam from one access point to the next. Such control is useful if the application maintains stateful socket connections and wants to control the transition from one interface to the next. Forced roaming implies that the system automatically roams to the next network without consulting the application. This has the advantage that the application can make use of roaming features without actually being aware of it. It is expected that the application detects that the underlying socket is broken and automatically reconnects via the new network link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a44856e1adf62c0391a8e332f6135676de3f61c" translate="yes" xml:space="preserve">
          <source>Some platforms may support the concept of Forced Roaming and Application Level Roaming (ALR). Forced roaming implies that the platform may simply roam to a new configuration without consulting applications. It is up to the application to detect the link layer loss and reestablish its sockets. In contrast ALR provides the opportunity to prevent the system from roaming. If this session is based on a configuration that supports roaming the application can choose whether it wants to be consulted (ALR use case) by connecting to this signal. For as long as this signal connection remains the session remains registered as a roaming stakeholder; otherwise roaming will be enforced by the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ceaafb16b30b1a4c6e16476606cf611495607e" translate="yes" xml:space="preserve">
          <source>Some plugin classes require additional functions to be implemented. See the class documentation for details of the virtual functions that must be reimplemented for each type of plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b538d944c5e341a552af9d0ef3a621845ed92a44" translate="yes" xml:space="preserve">
          <source>Some plugins may not support attributes at all, others may only support a certain set, others still may support a dynamically changing set of attributes over time or even allow attributes to be arbitrarily defined by the client application. The attributes could also vary on a place by place basis, for example one place may have opening hours while another does not. Consult the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin references&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3393aee17e5bb1582e551fb770a6624b01665db1" translate="yes" xml:space="preserve">
          <source>Some plugins might allow or require specific parameters to operate. In order to specify these plugin-specific parameters, MapParameter elements can be nested inside a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9403e7c36fe99f265293e78114285d06b88cd1ae" translate="yes" xml:space="preserve">
          <source>Some properties, such as attached properties or those whose value never changes, do not require a change notifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dc2d17c26c53075757c787902304afd0dc790c" translate="yes" xml:space="preserve">
          <source>Some property types do not have a natural value representation, and for those property types the QML engine automatically performs string-to-typed-value conversion. So, for example, even though properties of the &lt;code&gt;color&lt;/code&gt; type store colors and not strings, you are able to assign the string &lt;code&gt;&quot;red&quot;&lt;/code&gt; to a color property, without an error being reported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56fc226c377803beb44d0816d8d289d7050abca" translate="yes" xml:space="preserve">
          <source>Some readers may skip entities if they have not seen the declarations (e.g. because they are in an external DTD). If they do so they report that they skipped the entity called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17acad27639d3bd0fbabc70ea7e93d822e9a9f2a" translate="yes" xml:space="preserve">
          <source>Some readers may use this function to report each chunk of whitespace in element content. The whitespace is reported in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a717aa1d3c22f613ce044441ba2d124ee37437" translate="yes" xml:space="preserve">
          <source>Some readers report whitespace in element content using the &lt;a href=&quot;qxmlcontenthandler#ignorableWhitespace&quot;&gt;ignorableWhitespace&lt;/a&gt;() function rather than using this one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7434baf8f60147b69b2ba04375103c878830a05" translate="yes" xml:space="preserve">
          <source>Some regexps can match an indeterminate number of times. For example if the input string is &quot;Offsets: 12 14 99 231 7&quot; and the regexp, &lt;code&gt;rx&lt;/code&gt;, is &lt;b&gt;(\d+)+&lt;/b&gt;, we would hope to get a list of all the numbers matched. However, after calling &lt;code&gt;rx.indexIn(str)&lt;/code&gt;, capturedTexts() will return the list (&quot;12&quot;, &quot;12&quot;), i.e. the entire match was &quot;12&quot; and the first subexpression matched was &quot;12&quot;. The correct approach is to use &lt;a href=&quot;qregexp#cap&quot;&gt;cap&lt;/a&gt;() in a &lt;a href=&quot;qregexp#cap-in-a-loop&quot;&gt;loop&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c80aff520bb458b7804d6bfa43424458c0154ba" translate="yes" xml:space="preserve">
          <source>Some resources need to change based on the user's locale, such as translation files or icons. This is done by adding a &lt;code&gt;lang&lt;/code&gt; attribute to the &lt;code&gt;qresource&lt;/code&gt; tag, specifying a suitable locale string. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470222b09000ce466b6b177cb7de93a5ad424593" translate="yes" xml:space="preserve">
          <source>Some roles have special semantics. In order to implement check boxes for example a &quot;checked&quot; property is expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f846d2db74ec6aecd2179bfd7823d90e404bc2" translate="yes" xml:space="preserve">
          <source>Some scene graph backends use texture atlasses, grouping multiple small textures into one large texture. If this is the case, the function &lt;a href=&quot;qsgtexture#isAtlasTexture&quot;&gt;isAtlasTexture&lt;/a&gt;() will return true. Atlasses are used to aid the rendering algorithm to do better sorting which increases performance. The location of the texture inside the atlas is given with the &lt;a href=&quot;qsgtexture#normalizedTextureSubRect&quot;&gt;normalizedTextureSubRect&lt;/a&gt;() function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5413c652b587bb43f865f292015ed841602bf2c4" translate="yes" xml:space="preserve">
          <source>Some sensors (eg. the accelerometer) are often accessed very frequently. This may be slowed down by the use of signals and slots. The &lt;a href=&quot;qsensorfilter&quot;&gt;QSensorFilter&lt;/a&gt; interface provides a more efficient way for the sensor to notify your class that the sensor has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab827e505c19ce413614b4be6e91e5fc7cd071f" translate="yes" xml:space="preserve">
          <source>Some sensors may be on the system but unavailable for use. This function will return true if the sensor is busy. You will not be able to &lt;a href=&quot;qsensor#start&quot;&gt;start&lt;/a&gt;() the sensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c11cb38c9732aa1310d16c1ac27db6acf269b7b" translate="yes" xml:space="preserve">
          <source>Some sensors react to screen orientation changes, such as &lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt;, &lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt; and &lt;a href=&quot;qrotationsensor&quot;&gt;QRotationSensor&lt;/a&gt;. These are so called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0c3e2f354bbd4f7b421f0b0fa12319d5465874" translate="yes" xml:space="preserve">
          <source>Some sequential devices support communicating via multiple channels. These channels represent separate streams of data that have the property of independently sequenced delivery. Once the device is opened, you can determine the number of channels by calling the &lt;a href=&quot;qiodevice#readChannelCount&quot;&gt;readChannelCount&lt;/a&gt;() and &lt;a href=&quot;qiodevice#writeChannelCount&quot;&gt;writeChannelCount&lt;/a&gt;() functions. To switch between channels, call &lt;a href=&quot;qiodevice#setCurrentReadChannel&quot;&gt;setCurrentReadChannel&lt;/a&gt;() and &lt;a href=&quot;qiodevice#setCurrentWriteChannel&quot;&gt;setCurrentWriteChannel&lt;/a&gt;(), respectively. &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; also provides additional signals to handle asynchronous communication on a per-channel basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad23f458ed8661d578da8626f24025d3d6bbdbe0" translate="yes" xml:space="preserve">
          <source>Some states and variables are common for all widgets. These are set with &lt;a href=&quot;qstyleoption#initFrom&quot;&gt;QStyleOption::initFrom&lt;/a&gt;(). Not all elements use this function; it is the widgets that create the style options, and for some elements the information from &lt;a href=&quot;qstyleoption#initFrom&quot;&gt;initFrom()&lt;/a&gt; is not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e91612c2869f88b972b3e35c6fc89c6ba11911" translate="yes" xml:space="preserve">
          <source>Some subclasses, such as &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; and &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, are implemented using a memory buffer for intermediate storing of data. This reduces the number of required device accessing calls, which are often very slow. Buffering makes functions like &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;() and &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;() fast, as they can operate on the memory buffer instead of directly on the device itself. Certain I/O operations, however, don't work well with a buffer. For example, if several users open the same device and read it character by character, they may end up reading the same data when they meant to read a separate chunk each. For this reason, &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; allows you to bypass any buffering by passing the Unbuffered flag to &lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;(). When subclassing &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, remember to bypass any buffer you may use when the device is open in Unbuffered mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56971e0e65b18ad393f3c35a8de887c77475535" translate="yes" xml:space="preserve">
          <source>Some syntaxes can have constructs that span several text blocks. For example, a C++ syntax highlighter should be able to cope with &lt;code&gt;/&lt;/code&gt;&lt;code&gt;*...*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt; multiline comments. To deal with these cases it is necessary to know the end state of the previous text block (e.g. &quot;in comment&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f1aee07e7e769f200fdc6537a26be21284582e" translate="yes" xml:space="preserve">
          <source>Some systems may send an event of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchCancel&lt;/a&gt;. Upon receiving this event applications are requested to ignore the entire active touch sequence. For example in a composited system the compositor may decide to treat certain gestures as system-wide gestures. Whenever such a decision is made (the gesture is recognized), the clients will be notified with a &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchCancel&lt;/a&gt; event so they can update their state accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f79de7559db7cd3dd9c6f893d4ee1c3f42fb4ed" translate="yes" xml:space="preserve">
          <source>Some tags are handled specially and change the transformation of the tagged value from CBOR to JSON. The following table lists those special cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d34e6b33829832b0ab9c3c3295ec583222a265" translate="yes" xml:space="preserve">
          <source>Some tools use this value even when the &lt;a href=&quot;qaccessiblevalueinterface#setCurrentValue&quot;&gt;setCurrentValue&lt;/a&gt; does not perform any action. Progress bars for example are read-only but should return their range divided by 100.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bf741d99a457aec6b229a82c2ec7eb25a66695" translate="yes" xml:space="preserve">
          <source>Some transformations like rotations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952f0016827c05d03dc7b6e0f6b28661f0a08ff4" translate="yes" xml:space="preserve">
          <source>Some translatable strings contain placeholders for integer values and need to be translated differently depending on the values in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe022a14713dbd8e8798773e0190defbe081769" translate="yes" xml:space="preserve">
          <source>Some types are registered automatically and do not need this macro:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c53ad7b57f6514837e3c7aad34cae20afce578" translate="yes" xml:space="preserve">
          <source>Some underlying window implementations will reset the cursor if it leaves a widget even if the mouse is grabbed. If you want to have a cursor set for all widgets, even when outside the window, consider &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication::setOverrideCursor&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2203429cf50931c26afcfe32b598f37d27050d" translate="yes" xml:space="preserve">
          <source>Some underlying window implementations will reset the cursor if it leaves a window even if the mouse is grabbed. If you want to have a cursor set for all windows, even when outside the window, consider &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication::setOverrideCursor&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9803af520072141c88603e6f88113b61d85abc1" translate="yes" xml:space="preserve">
          <source>Some utility methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f9fd6e9be640d482094a89b4a7ac41d653eb1a" translate="yes" xml:space="preserve">
          <source>Some value types in Qt such as &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; are represented in JavaScript as objects that have the same properties and functions like in the C++ API. The same representation is possible with custom C++ value types. To enable a custom value type with the QML engine, the class declaration needs to be annotated with &lt;code&gt;Q_GADGET&lt;/code&gt;. Properties that are intended to be visible in the JavaScript representation need to be declared with &lt;code&gt;Q_PROPERTY&lt;/code&gt;. Similarly functions need to be marked with &lt;code&gt;Q_INVOKABLE&lt;/code&gt;. This is the same with &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; based C++ APIs. For example, the &lt;code&gt;Actor&lt;/code&gt; class below is annotated as gadget and has properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee3b8efcd67700fb480946e35281959cccacf43" translate="yes" xml:space="preserve">
          <source>Some views, such as &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; and &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;, display headers as well as items. These are also implemented by a view class, &lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt;. Headers usually access the same model as the view that contains them. They retrieve data from the model using the &lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;QAbstractItemModel::headerData&lt;/a&gt;() function, and usually display header information in the form of a label. New headers can be subclassed from the &lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; class to provide more specialized labels for views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20eb4b7f878f7d96953c06a2e9c0021683db80c6" translate="yes" xml:space="preserve">
          <source>Some views, such as &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; and &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;, are able to display headers along with the item data. If our model is displayed in a view with headers, we want the headers to show the row and column numbers. We can provide information about the headers by subclassing the &lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;headerData()&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c765b2a128af055338668b4d4043ad6f175075a2" translate="yes" xml:space="preserve">
          <source>Some web servers, in particular many intranet sites, require the client to authenticate itself with a certificate, called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2096198ccc37cdba229d9b3cfd8ed6aaeb0db1fb" translate="yes" xml:space="preserve">
          <source>Some widgets can &quot;have focus&quot;, but create a child widget, such as &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, to actually handle the focus. In this case, the widget can set the line edit to be its focus proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7e0a0cc93cb264031989313467d507f2f04594" translate="yes" xml:space="preserve">
          <source>Some widgets display themselves differently when they are disabled. For example a button might draw its label grayed out. If your widget needs to know when it becomes enabled or disabled, you can use the &lt;a href=&quot;qwidget#changeEvent&quot;&gt;changeEvent&lt;/a&gt;() with type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::EnabledChange&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c552dcabad63b704cb81338315d66508fac21dd" translate="yes" xml:space="preserve">
          <source>Some wizards are more complex in that they allow different traversal paths based on the information provided by the user. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-licensewizard-example.html#&quot;&gt;License Wizard&lt;/a&gt; example illustrates this. It provides five wizard pages; depending on which options are selected, the user can reach different pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6eb907028db38b1662f7422455b502934172ee6" translate="yes" xml:space="preserve">
          <source>Some wrappers call Vulkan functions directly, assuming &lt;code&gt;vulkan.h&lt;/code&gt; provides prototypes and the application links to a Vulkan library exporting all necessary symbols. Qt may not directly link to a Vulkan library. Therefore, on some platforms it may be necessary to add &lt;code&gt;LIBS += -lvulkan&lt;/code&gt; or similar in the application's &lt;code&gt;.pro&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957553444d6cb746883bf652bf1c100024ace795" translate="yes" xml:space="preserve">
          <source>Some wrappers require exception support to be enabled. Qt does not use exceptions. To enable exceptions for the application, add &lt;code&gt;CONFIG += exceptions&lt;/code&gt; to the &lt;code&gt;.pro&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fd7b6a54fbd72916398fa16e423ee3a97aa32f" translate="yes" xml:space="preserve">
          <source>Something else happened and it was bad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9de24be1661812722bb63a050d863ba25893086" translate="yes" xml:space="preserve">
          <source>Sometime during startup of an application, the &lt;a href=&quot;qplacemanager#initializeCategories&quot;&gt;initializeCategories&lt;/a&gt;() function should be called to setup the categories. Initializing the categories enables the usage of the following functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5851e38f6eea4130a66d9ded5d27ae9bf9f576" translate="yes" xml:space="preserve">
          <source>Sometimes a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class may need to be registered with the QML type system but not as an instantiable type. For example, this is the case if a C++ class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8a94d7fdd0c5603b7559c80f8748e63217727e" translate="yes" xml:space="preserve">
          <source>Sometimes a situation may arise where we wish to cross-reference and match places between managers. Such a situation may arise where one manager provides read-only access to places (origin manager), while another second r/w manager (destination manager) is used to save selected favorites from the first. During a search of the origin manager, we may want to know which ones have been 'favorited' into the destination manager and perhaps display the customized favorite name rather than the original name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26dbc74d84c15fcb2d9e23dcf600ebc5558f29e" translate="yes" xml:space="preserve">
          <source>Sometimes an item is part of a group of items that should be treated as one. For example two labels might be visually placed next to each other, but separate items. For accessibility purposes they should be treated as one and thus they are represented by a third invisible item with the right geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092a0b7e41217b935c6bd169eda61b0594df2d39" translate="yes" xml:space="preserve">
          <source>Sometimes an object needs to look at, and possibly intercept, the events that are delivered to another object. For example, dialogs commonly want to filter key presses for some widgets; for example, to modify Return-key handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8872115907c50e9af043c0c747e4f756e9a24870" translate="yes" xml:space="preserve">
          <source>Sometimes it can be necessary to have more control over the path for a specific file managed by the resource system. For example, if we wanted to give &lt;code&gt;image2.png&lt;/code&gt; an alias, we would need to switch to an explicit &lt;code&gt;.qrc&lt;/code&gt; file. &lt;a href=&quot;https://doc.qt.io/qtcreator/creator-project-creating.html#creating-resource-files&quot;&gt;Creating Resource Files&lt;/a&gt; explains how to do this in detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb489523a63960a557c78afdfb5f3eabf12ac38" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to have the functions made available in the importing context without needing to qualify them. In this case ECMAScript modules and the JavaScript &lt;code&gt;import&lt;/code&gt; statement should be used without the &lt;code&gt;as&lt;/code&gt; qualifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118c9e0bbab27e12cae11ab7d7be248351b365c7" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to make someone else paint on an unusual &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;. &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; supports a static function to do this, setRedirected().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce3ab2af4ecbcfec30025da1f241645a4f89903" translate="yes" xml:space="preserve">
          <source>Sometimes it is important to be able to format plain text within an irregularly-shaped region, perhaps when rendering a custom widget, for example. Scribe provides generic features, such as those provided by the &lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt; class, to help developers perform word-wrapping and layout tasks without the need to create a document first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790baf2d1725f0cf773eaca1f3ae43128c6f3e51" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary to bind an object's property to that of another object that isn't directly instantiated by QML, such as a property of a class exported to QML by C++. You can use the Binding type to establish this dependency; binding any value to any object's property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d528f339029162a5828f616f532e4f55fdf9bb57" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary to go back more than a single step in the stack, for example, to return to a &quot;main&quot; item or some kind of section item in the application. For this use case, it is possible to specify an item as a parameter for &lt;a href=&quot;qml-qtquick-controls-stackview#pop-method&quot;&gt;pop()&lt;/a&gt;. This is called an &quot;unwind&quot; operation as the stack gets unwound to the specified item. If the item is not found, then the stack unwinds until there is only a single item in the stack, which then becomes the current item. To explicitly unwind to the bottom of the stack, it is recommended to use &lt;a href=&quot;qml-qtquick-controls-stackview#pop-method&quot;&gt;pop(null)&lt;/a&gt;, though technically any non-existent item will do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9110e2ade33fd47ef4efa0eae7f75574e63ca367" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary to search for an item, for example, in order to unwind the stack to an item to which the application does not have a reference. This is facilitated using a function &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; in &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt;. The &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; function takes a callback function as its only argument. The callback gets invoked for each item in the stack (starting at the top). If the callback returns true, then it signals that a match has been found and the &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; function returns that item. If the callback fails to return true (no match is found), then &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9d609327ef733b2d4327723eb76c5b710f7805" translate="yes" xml:space="preserve">
          <source>Sometimes it is needed to get the contents of a surface, for example to provide a screenshot to the user. The &lt;a href=&quot;qwaylandsurfacegrabber&quot;&gt;QWaylandSurfaceGrabber&lt;/a&gt; class provides a simple method to do so, without having to care what type of buffer backs the surface, be it shared memory, OpenGL or something else.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc9e25876cd776a012cb4edfb6fabd9fafd95f7" translate="yes" xml:space="preserve">
          <source>Sometimes it's useful to register custom data with an item, be it a custom item, or a standard item. You can call &lt;a href=&quot;qgraphicsitem#setData&quot;&gt;setData&lt;/a&gt;() on any item to store data in it using a key-value pair (the key being an integer, and the value is a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;). To get custom data from an item, call &lt;a href=&quot;qgraphicsitem#data&quot;&gt;data&lt;/a&gt;(). This functionality is completely untouched by Qt itself; it is provided for the user's convenience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75d9c28c94ea6b99490292f32256e712a3bb4c5" translate="yes" xml:space="preserve">
          <source>Sometimes there might be two items within the pane:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc87b0538b1f7cdd41765ac9998a20566628448" translate="yes" xml:space="preserve">
          <source>Sometimes there might be two items within the popup:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153dcf70cabb6ea778cfc5e22da147f9ece367be" translate="yes" xml:space="preserve">
          <source>Sometimes you do want to access settings stored in a specific file or registry path. On all platforms, if you want to read an INI file directly, you can use the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; constructor that takes a file name as first argument and pass &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::IniFormat&lt;/a&gt; as second argument. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8190ac0550604b34c4fc44b3937b67647664a7d7" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to use C++ to extend your custom style. There are two ways to expose such types to QML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306fced3104bee05c79e9200551e0c9d882f9086" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to cross reference whether places from one manager match those from another manager. Such a situation may arise where one manager provides read-only access to places (origin manager) while another second r/w manager (destination manager) is used to save selected favorites from the first. During a search of the origin manager we may want to know which ones have been 'favorited' into the destination manager and perhaps display a customized favorite name rather than the original name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8134bcbf8e68ea8aca68918bb1a095bdb8ac464" translate="yes" xml:space="preserve">
          <source>Sometimes you'll want to create a &quot;one-off&quot; look for a specific part of your UI, and use a complete style everywhere else. Perhaps you're happy with the style you're using, but there's a certain button that has some special significance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d3bf044554f598e2a8dd2d4bf0b2fb90448e18" translate="yes" xml:space="preserve">
          <source>Sometimes, a font will apply complex rules to a set of characters in order to display them correctly. In some writing systems, such as Brahmic scripts, this is required in order for the text to be legible, but in e.g. Latin script, it is merely a cosmetic feature. Setting the &lt;code&gt;preferShaping&lt;/code&gt; property to false will disable all such features when they are not required, which will improve performance in most cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2311d83d551d6f742277be0e6e3f4ede1d36fc34" translate="yes" xml:space="preserve">
          <source>Sometimes, a font will apply complex rules to a set of characters in order to display them correctly. In some writing systems, such as Brahmic scripts, this is required in order for the text to be legible, but in e.g. Latin script, it is merely a cosmetic feature. The PreferNoShaping flag will disable all such features when they are not required, which will improve performance in most cases (since Qt 5.10).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b018afca93f2eabe47d7926d743b924ee008195" translate="yes" xml:space="preserve">
          <source>Sometimes, it is necessary to build a project in both debug and release modes. Although the &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; variable can hold both &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; options, only the option that is specified last is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e0bfe45d94a3c0e338a6b0244a1d5251d27dee" translate="yes" xml:space="preserve">
          <source>Sometimes, it is necessary to go back more than a single step in the stack. For example, to return to a &quot;main&quot; item or some kind of section item in the application. In such cases, it is possible to specify an item as a parameter for &lt;a href=&quot;qml-qtquick-controls2-stackview#pop-method&quot;&gt;pop()&lt;/a&gt;. This is called an &quot;unwind&quot; operation, where the stack unwinds till the specified item. If the item is not found, stack unwinds until it is left with one item, which becomes the &lt;a href=&quot;qml-qtquick-controls2-stackview#currentItem-prop&quot;&gt;currentItem&lt;/a&gt;. To explicitly unwind to the bottom of the stack, it is recommended to use &lt;a href=&quot;qml-qtquick-controls2-stackview#pop-method&quot;&gt;pop(null)&lt;/a&gt;, although any non-existent item will do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccca815ca684ed3318fc31beb45448813ad5c33" translate="yes" xml:space="preserve">
          <source>Sometimes, you will want to reimplement this function to provide special focus handling for your widget and its subwidgets. For example, a web browser might reimplement it to move its current active link forward or backward, and call the base implementation only when it reaches the last or first link on the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc30f6fc7f2003cdaf02b23b8be5a25bed014e36" translate="yes" xml:space="preserve">
          <source>Sometimes, you will want to reimplement this function. For example, a web browser might reimplement it to move its &quot;current active link&quot; forward or backward, and call focusNextPrevChild() only when it reaches the last or first link on the &quot;page&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7511cbd6b9de7211f1dbdcde058c3d8b713353" translate="yes" xml:space="preserve">
          <source>Somewhat dense brush pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6ffb1badac59873989892e1ee19947726a4729" translate="yes" xml:space="preserve">
          <source>Somewhat sparse brush pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1cca42d3a85a208da3aee1267c4a662210ba10" translate="yes" xml:space="preserve">
          <source>Sonification, such as with user interface sounds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b03c33b50ea6c9b8b0f36112db8b4cc1c436d5d" translate="yes" xml:space="preserve">
          <source>SonificationRole - sonification, such as with user interface sounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f807ae506adddf45a68a46fc68a48cb6932543" translate="yes" xml:space="preserve">
          <source>Sort by file size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f274eb3b3a11df8866e1dba5edf40c7410d422" translate="yes" xml:space="preserve">
          <source>Sort by file type (extension).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0106adab56fea71640c976703233c8b8bd823462" translate="yes" xml:space="preserve">
          <source>Sort by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf3d4b5d5b341472753f7fc9f5a8b37ddb3ba37" translate="yes" xml:space="preserve">
          <source>Sort by time (modification time).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1530ee895394ace727ee136a26e0ca7af87fd3d4" translate="yes" xml:space="preserve">
          <source>Sort case-insensitively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a6e3d416985dfeddd28a36402761f2e45c31cb" translate="yes" xml:space="preserve">
          <source>Sort items appropriately using the current locale settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f1d3c92e7684de84b9ac9edc0687b477dbd7e7" translate="yes" xml:space="preserve">
          <source>Sort the model items in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b021df2d2d4ff285c19f87c420672d1c213858" translate="yes" xml:space="preserve">
          <source>SortPolicy</source>
          <target state="translated">SortPolicy</target>
        </trans-unit>
        <trans-unit id="078a0cc101380a67f5d85d548186ac4ee7102869" translate="yes" xml:space="preserve">
          <source>SortPolicy (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c095bdcbd2c652110d738f0e83684e6dd751931c" translate="yes" xml:space="preserve">
          <source>SortPolicy QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ec755befa68233e8f16d1f2753b8a1056692c7" translate="yes" xml:space="preserve">
          <source>SortPolicy.sortTypes</source>
          <target state="translated">SortPolicy.sortTypes</target>
        </trans-unit>
        <trans-unit id="378e9e163b7eecefadb4415cae533096e336c4ab" translate="yes" xml:space="preserve">
          <source>Sorting</source>
          <target state="translated">Sorting</target>
        </trans-unit>
        <trans-unit id="0686922a433c6087d7ca0237479414d093bf8878" translate="yes" xml:space="preserve">
          <source>Sorting is performed using the STL's std::sort() algorithm, which averages &lt;a href=&quot;containers#linear-logarithmic-time&quot;&gt;linear-logarithmic time&lt;/a&gt;, i.e. O(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8a4b203c7a70438b72d257427b2cfcb7f268ca" translate="yes" xml:space="preserve">
          <source>Sorting order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3060f67716fae4a49a96bc8898fdc04ca016747" translate="yes" xml:space="preserve">
          <source>Sorting order in CBOR is defined in RFC 7049 {https://tools.ietf.org/html/rfc7049#section-3.9}{section 3.9}, which discusses the sorting of keys in a map when following the Canonical encoding. According to the specification, &quot;sorting is performed on the bytes of the representation of the key data items&quot; and lists as consequences that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5690c21a2916044c58c7e48392b0230dea8abc" translate="yes" xml:space="preserve">
          <source>Sorts all the items in the list widget according to the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7712a388e6b19f3c58175d39d3ae9d114180428" translate="yes" xml:space="preserve">
          <source>Sorts all the rows in the table widget based on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74233f49d78ea6182ce03744e3fb65b28e61525" translate="yes" xml:space="preserve">
          <source>Sorts the children of the item using the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a938bda144fa3bae1c6aacb8fc851bcc14f49af" translate="yes" xml:space="preserve">
          <source>Sorts the data by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ab1ba326e28c2aa2912b0be86dd0ea0eff1296" translate="yes" xml:space="preserve">
          <source>Sorts the items in the widget in the specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bc750b5ffc166820f6d1e92f83667257296dcc" translate="yes" xml:space="preserve">
          <source>Sorts the list of strings in ascending order. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af46af9526996dff169ffd9859eac5fc445335ed" translate="yes" xml:space="preserve">
          <source>Sorts the model by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3363ba0a20f8f93b9006719d0bd6b8d43f499e3" translate="yes" xml:space="preserve">
          <source>Sorts the model by the values in the given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2554db959b5baa886502d799cda790fe104400d1" translate="yes" xml:space="preserve">
          <source>Sound (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bca9c33e8ed82d746231a7c778682700efeb65" translate="yes" xml:space="preserve">
          <source>Sound QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b7bb628247d0ba9fd6a6dd74b56ab010afa72c" translate="yes" xml:space="preserve">
          <source>Sound can be accessed through &lt;a href=&quot;qml-qtaudioengine-audioengine#sounds-prop&quot;&gt;QtAudioEngine::AudioEngine::sounds&lt;/a&gt; with its unique name and must be defined inside &lt;a href=&quot;qml-qtaudioengine-audioengine&quot;&gt;AudioEngine&lt;/a&gt; or be added to it using &lt;a href=&quot;qml-qtaudioengine-audioengine#addSound-method&quot;&gt;AudioEngine.addSound()&lt;/a&gt; if &lt;a href=&quot;qml-qtaudioengine-sound&quot;&gt;Sound&lt;/a&gt; is created dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c4432a378760de6d01ee26a6f5573e85982a3b" translate="yes" xml:space="preserve">
          <source>Sound.addPlayVariation()</source>
          <target state="translated">Sound.addPlayVariation()</target>
        </trans-unit>
        <trans-unit id="1a80edf39a6aeccc6528a907fca6e80c0e555133" translate="yes" xml:space="preserve">
          <source>Sound.attenuationModel</source>
          <target state="translated">Sound.attenuationModel</target>
        </trans-unit>
        <trans-unit id="e93baab50904afc932526d9944c6d4d826ec4749" translate="yes" xml:space="preserve">
          <source>Sound.category</source>
          <target state="translated">Sound.category</target>
        </trans-unit>
        <trans-unit id="c76ef13d3bbfcd3e3140a3f749cd11564b1ec38b" translate="yes" xml:space="preserve">
          <source>Sound.cone.innerAngle</source>
          <target state="translated">Sound.cone.innerAngle</target>
        </trans-unit>
        <trans-unit id="7ece3443b651ffcc9db6faf8eb58814346f2b4ac" translate="yes" xml:space="preserve">
          <source>Sound.cone.outerAngle</source>
          <target state="translated">Sound.cone.outerAngle</target>
        </trans-unit>
        <trans-unit id="063e138b5c5b0449d77ff183fc71b7b298f2e5b6" translate="yes" xml:space="preserve">
          <source>Sound.cone.outerGain</source>
          <target state="translated">Sound.cone.outerGain</target>
        </trans-unit>
        <trans-unit id="c93e3b1173a2e3fd86643a2fef43e0e1cd2645da" translate="yes" xml:space="preserve">
          <source>Sound.name</source>
          <target state="translated">Sound.name</target>
        </trans-unit>
        <trans-unit id="915c3f07bf48045ad9c0a1d176f936d2138a657c" translate="yes" xml:space="preserve">
          <source>Sound.newInstance()</source>
          <target state="translated">Sound.newInstance()</target>
        </trans-unit>
        <trans-unit id="6e48f35b6cb4a055bbafe5d2f3198eaa97841e51" translate="yes" xml:space="preserve">
          <source>Sound.play()</source>
          <target state="translated">Sound.play()</target>
        </trans-unit>
        <trans-unit id="3946a313e851ae402feb299d6b02ecb6eb54dc32" translate="yes" xml:space="preserve">
          <source>Sound.playType</source>
          <target state="translated">Sound.playType</target>
        </trans-unit>
        <trans-unit id="56b1443d906df8f8ee604748a8670679ceb45d81" translate="yes" xml:space="preserve">
          <source>SoundEffect</source>
          <target state="translated">SoundEffect</target>
        </trans-unit>
        <trans-unit id="d715c32659768ad090fed373b92fd857a3671725" translate="yes" xml:space="preserve">
          <source>SoundEffect (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee284c2a0a955ade83b761173d9bad07745b46b8" translate="yes" xml:space="preserve">
          <source>SoundEffect QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e74f67c5bc16f54a8561417642cbd3d2fcb5e66" translate="yes" xml:space="preserve">
          <source>SoundEffect.category</source>
          <target state="translated">SoundEffect.category</target>
        </trans-unit>
        <trans-unit id="682bd2ad2b5d2d13543a447b995391be03adf9a1" translate="yes" xml:space="preserve">
          <source>SoundEffect.categoryChanged()</source>
          <target state="translated">SoundEffect.categoryChanged()</target>
        </trans-unit>
        <trans-unit id="6d4d711b7af6df9c4c99e48e631f88222bddecc4" translate="yes" xml:space="preserve">
          <source>SoundEffect.isLoaded()</source>
          <target state="translated">SoundEffect.isLoaded()</target>
        </trans-unit>
        <trans-unit id="ae103848a12f5ea89dd43aa535cea6f4e306831a" translate="yes" xml:space="preserve">
          <source>SoundEffect.loadedChanged()</source>
          <target state="translated">SoundEffect.loadedChanged()</target>
        </trans-unit>
        <trans-unit id="f408baea58efdecf22e945014e5a8f5c79e27b8a" translate="yes" xml:space="preserve">
          <source>SoundEffect.loopCountChanged()</source>
          <target state="translated">SoundEffect.loopCountChanged()</target>
        </trans-unit>
        <trans-unit id="b6d3fe05ae9636e05b5b00a881a5afa928b61b4d" translate="yes" xml:space="preserve">
          <source>SoundEffect.loops</source>
          <target state="translated">SoundEffect.loops</target>
        </trans-unit>
        <trans-unit id="b826a8ad450f59e930bdcbff91bb3e49c9220033" translate="yes" xml:space="preserve">
          <source>SoundEffect.loopsRemaining</source>
          <target state="translated">SoundEffect.loopsRemaining</target>
        </trans-unit>
        <trans-unit id="505ef1a7c4c62ec26331eed3c72c42210ff718d2" translate="yes" xml:space="preserve">
          <source>SoundEffect.loopsRemainingChanged()</source>
          <target state="translated">SoundEffect.loopsRemainingChanged()</target>
        </trans-unit>
        <trans-unit id="95be1da12134e3d9660a37f34478e43d2b71cb24" translate="yes" xml:space="preserve">
          <source>SoundEffect.muted</source>
          <target state="translated">SoundEffect.muted</target>
        </trans-unit>
        <trans-unit id="c75d4583389dac11d209035007a33097c4bf05d4" translate="yes" xml:space="preserve">
          <source>SoundEffect.mutedChanged()</source>
          <target state="translated">SoundEffect.mutedChanged()</target>
        </trans-unit>
        <trans-unit id="d2da20f3d5869953327d93153b28f211ff68de2a" translate="yes" xml:space="preserve">
          <source>SoundEffect.play()</source>
          <target state="translated">SoundEffect.play()</target>
        </trans-unit>
        <trans-unit id="e5fdd3be38e209939b91aff7b60267bfb5a7269b" translate="yes" xml:space="preserve">
          <source>SoundEffect.playing</source>
          <target state="translated">SoundEffect.playing</target>
        </trans-unit>
        <trans-unit id="e18f533d4342e28b0039e1ba53f81c990952022f" translate="yes" xml:space="preserve">
          <source>SoundEffect.playingChanged()</source>
          <target state="translated">SoundEffect.playingChanged()</target>
        </trans-unit>
        <trans-unit id="9d38694121424fac2b0cf8b69c031b707697babb" translate="yes" xml:space="preserve">
          <source>SoundEffect.source</source>
          <target state="translated">SoundEffect.source</target>
        </trans-unit>
        <trans-unit id="08d6f2b6aa4216d018234cf4a1d04eb8fe27df80" translate="yes" xml:space="preserve">
          <source>SoundEffect.sourceChanged()</source>
          <target state="translated">SoundEffect.sourceChanged()</target>
        </trans-unit>
        <trans-unit id="008ce87271cd29d09ed09a315a4e76e799b3ea36" translate="yes" xml:space="preserve">
          <source>SoundEffect.status</source>
          <target state="translated">SoundEffect.status</target>
        </trans-unit>
        <trans-unit id="067819ad1d1df17edc5884c478444d955e3fe283" translate="yes" xml:space="preserve">
          <source>SoundEffect.statusChanged()</source>
          <target state="translated">SoundEffect.statusChanged()</target>
        </trans-unit>
        <trans-unit id="6edc31ae5d4e4d63eda7a1d078bf570eee2fbb65" translate="yes" xml:space="preserve">
          <source>SoundEffect.stop()</source>
          <target state="translated">SoundEffect.stop()</target>
        </trans-unit>
        <trans-unit id="9739abaa6cbf6fffb069026a0de2cba2685cf322" translate="yes" xml:space="preserve">
          <source>SoundEffect.volume</source>
          <target state="translated">SoundEffect.volume</target>
        </trans-unit>
        <trans-unit id="96b0a0583c885e6cd48320347f301018e6e4ac76" translate="yes" xml:space="preserve">
          <source>SoundEffect.volumeChanged()</source>
          <target state="translated">SoundEffect.volumeChanged()</target>
        </trans-unit>
        <trans-unit id="7603fa44e3e610396567fce9ca52a8dc8f2ad9cf" translate="yes" xml:space="preserve">
          <source>SoundInstance (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27299804c055480dc018206b211a51d631fa1ad" translate="yes" xml:space="preserve">
          <source>SoundInstance QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df15f0fe125df68e51ebdb2dceaceb8bd422c3d" translate="yes" xml:space="preserve">
          <source>SoundInstance.direction</source>
          <target state="translated">SoundInstance.direction</target>
        </trans-unit>
        <trans-unit id="14334324cd6c08a92e9d3ed88f159c6603453922" translate="yes" xml:space="preserve">
          <source>SoundInstance.directionChanged()</source>
          <target state="translated">SoundInstance.directionChanged()</target>
        </trans-unit>
        <trans-unit id="89ade54f9fdb52aa76b163919f977910de164afd" translate="yes" xml:space="preserve">
          <source>SoundInstance.engine</source>
          <target state="translated">SoundInstance.engine</target>
        </trans-unit>
        <trans-unit id="673b6183fe2b7e4df8b7ce5eefd9900fcd78e071" translate="yes" xml:space="preserve">
          <source>SoundInstance.gain</source>
          <target state="translated">SoundInstance.gain</target>
        </trans-unit>
        <trans-unit id="f0279e4bb3a246b67d110eccc197d1c3faefc8e1" translate="yes" xml:space="preserve">
          <source>SoundInstance.gainChanged()</source>
          <target state="translated">SoundInstance.gainChanged()</target>
        </trans-unit>
        <trans-unit id="545a6f5df6775792a6765d42d7f649f885fb1126" translate="yes" xml:space="preserve">
          <source>SoundInstance.pause()</source>
          <target state="translated">SoundInstance.pause()</target>
        </trans-unit>
        <trans-unit id="4288947bf9564efb3d837f0073ee1904e496e8a7" translate="yes" xml:space="preserve">
          <source>SoundInstance.pitch</source>
          <target state="translated">SoundInstance.pitch</target>
        </trans-unit>
        <trans-unit id="8434ca0281e645a97b4776f72fd94f57bb65aed0" translate="yes" xml:space="preserve">
          <source>SoundInstance.pitchChanged()</source>
          <target state="translated">SoundInstance.pitchChanged()</target>
        </trans-unit>
        <trans-unit id="89faec84a3669cfbf0ba0ec03eadfd4cc1e9e164" translate="yes" xml:space="preserve">
          <source>SoundInstance.play()</source>
          <target state="translated">SoundInstance.play()</target>
        </trans-unit>
        <trans-unit id="a38132b14546bf9a3164cf00de2efa11fb22ff4d" translate="yes" xml:space="preserve">
          <source>SoundInstance.position</source>
          <target state="translated">SoundInstance.position</target>
        </trans-unit>
        <trans-unit id="91267e7363cc260844f2de5c4657d7632481f9b2" translate="yes" xml:space="preserve">
          <source>SoundInstance.positionChanged()</source>
          <target state="translated">SoundInstance.positionChanged()</target>
        </trans-unit>
        <trans-unit id="013f7f10095f5c69410efc5eb535a0e517cbdfec" translate="yes" xml:space="preserve">
          <source>SoundInstance.sound</source>
          <target state="translated">SoundInstance.sound</target>
        </trans-unit>
        <trans-unit id="5b633ecdbcd86cf86d7ff14ad2717ace42c35746" translate="yes" xml:space="preserve">
          <source>SoundInstance.soundChanged()</source>
          <target state="translated">SoundInstance.soundChanged()</target>
        </trans-unit>
        <trans-unit id="588cf43cf5ed1afd42b848f5f5d957105670754a" translate="yes" xml:space="preserve">
          <source>SoundInstance.state</source>
          <target state="translated">SoundInstance.state</target>
        </trans-unit>
        <trans-unit id="11ecb9aabf337b1ec41cc0f7591338be5b2d1b2d" translate="yes" xml:space="preserve">
          <source>SoundInstance.stateChanged()</source>
          <target state="translated">SoundInstance.stateChanged()</target>
        </trans-unit>
        <trans-unit id="8bacf2342fdfd975da84003accd7791292ff19ba" translate="yes" xml:space="preserve">
          <source>SoundInstance.stop()</source>
          <target state="translated">SoundInstance.stop()</target>
        </trans-unit>
        <trans-unit id="6807d093dea98ca7fe9f687c03267fb2eb4a05dc" translate="yes" xml:space="preserve">
          <source>SoundInstance.velocity</source>
          <target state="translated">SoundInstance.velocity</target>
        </trans-unit>
        <trans-unit id="2744b7ba95b59aaf3c73f8a08d6b013c155deb3a" translate="yes" xml:space="preserve">
          <source>SoundInstance.velocityChanged()</source>
          <target state="translated">SoundInstance.velocityChanged()</target>
        </trans-unit>
        <trans-unit id="3d2a8e9de59387ecf43a569e7c76cacd421ac6b7" translate="yes" xml:space="preserve">
          <source>Sounds played using a &lt;a href=&quot;qsound&quot;&gt;QSound&lt;/a&gt; object may use more memory than the static &lt;a href=&quot;qsound#play-1&quot;&gt;play&lt;/a&gt;() function, but it may also play more immediately (depending on the underlying platform audio facilities).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef109e926d75c77f4a0fb9922173dc8d3e2bd120" translate="yes" xml:space="preserve">
          <source>Sounds the bell, using the default volume and sound. The function is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a654a48323bdddbfeed5809a043a6d0644c6aed7" translate="yes" xml:space="preserve">
          <source>Soundtrack from a movie or a video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="7b37110e5b01350732eac4676af2611966b9ccef" translate="yes" xml:space="preserve">
          <source>Source Code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c4d3fb0afb8fb68abba64f07d187217be5a624" translate="yes" xml:space="preserve">
          <source>Source Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97910e8576828843097fa6391296175d48c7597d" translate="yes" xml:space="preserve">
          <source>Source Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ef650760ec476a68caf9c303b78b304965c104" translate="yes" xml:space="preserve">
          <source>Source Sensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47283c1ae977f5685ac01e432c82c94d29e7fe82" translate="yes" xml:space="preserve">
          <source>Source and Binary Packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97a869e193480008086f74066c6c3087ec1c1dd" translate="yes" xml:space="preserve">
          <source>Source changes happen both programmatically when calling &lt;a href=&quot;qtextbrowser#source-prop&quot;&gt;setSource&lt;/a&gt;(), &lt;a href=&quot;qtextbrowser#forward&quot;&gt;forward&lt;/a&gt;(), backword() or &lt;a href=&quot;qtextbrowser#home&quot;&gt;home&lt;/a&gt;() or when the user clicks on links or presses the equivalent key sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53457826c7420fec36d9de6376c8348f52357d43" translate="yes" xml:space="preserve">
          <source>Source code to access the OUT values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac319911701929d24b4500bb3793e26433b15eb" translate="yes" xml:space="preserve">
          <source>Source models can be added and removed at runtime, and the column count is adjusted accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d02ee8d73932a3fd34596c7604a12adf6f5277a" translate="yes" xml:space="preserve">
          <source>Source type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5084ce5d4ce3dac460e271cdb01ab200e33516" translate="yes" xml:space="preserve">
          <source>Source, Build, and Install Directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a2596666a4cc70fd922d392f7f50120286abd3" translate="yes" xml:space="preserve">
          <source>Sources are exclusive, so only one can be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8c9b124d521027647b4f270cb2872798f9264e" translate="yes" xml:space="preserve">
          <source>Space</source>
          <target state="translated">Space</target>
        </trans-unit>
        <trans-unit id="7dc26b429bdcc7f5b0acf1f951b571930683810f" translate="yes" xml:space="preserve">
          <source>Space for the string is allocated using &lt;code&gt;new []&lt;/code&gt; -- the caller must destroy it with &lt;code&gt;delete []&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac9ddc65df14993c8c22b6947dfbcf31ccfa4f8" translate="yes" xml:space="preserve">
          <source>Space key for keyboard layouts. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6f3a23aa5ce1b3c29684a480455b1d8a8df4de" translate="yes" xml:space="preserve">
          <source>Space parity. The parity bit is sent in the space signal condition. It does not provide error detection information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5929c6de211146852ae1bbbe56250200d2fc66a9" translate="yes" xml:space="preserve">
          <source>SpaceKey</source>
          <target state="translated">SpaceKey</target>
        </trans-unit>
        <trans-unit id="466a2dff20de3b4d16f31c6c0975ca673894ed5e" translate="yes" xml:space="preserve">
          <source>SpaceKey (QML type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23152d3c0dbe4bed079cb9396934286dd5d2816" translate="yes" xml:space="preserve">
          <source>SpaceKey QML Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca86daf68982ed08e2f492dc9a72077f9adfaff2" translate="yes" xml:space="preserve">
          <source>Spaces and &quot;%20&quot;: unencoded space characters will be accepted and will be treated as equivalent to &quot;%20&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2850cb5a5284dace2931b1e9f18750e7af772ed" translate="yes" xml:space="preserve">
          <source>Spacing between menu bar items and left/right of bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5e536c904e85ec2ffb052b6d1f808e817dd251" translate="yes" xml:space="preserve">
          <source>Spacing between menu bar items and top/bottom of bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9bc40f34633a1945219f208d039cdbec57f98e" translate="yes" xml:space="preserve">
          <source>Spacing between menu bar items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a89d8a0f58a41339f40c149ced99628773738f1e" translate="yes" xml:space="preserve">
          <source>Spacing between the toolbar frame and the items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7dbf42752bef6988a7669ec903bc9786d4dce3a" translate="yes" xml:space="preserve">
          <source>Spacing between toolbar items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d28896e8c1d9a27b48f641b111edb1322b9e3b" translate="yes" xml:space="preserve">
          <source>Spacing is useful for controls that have multiple or repetitive building blocks. For example, some styles use spacing to determine the distance between the text and indicator of &lt;a href=&quot;qml-qtquick-controls2-checkbox&quot;&gt;CheckBox&lt;/a&gt;. Spacing is not enforced by Control, so each style may interpret it differently, and some may ignore it altogether.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c09cd80af0d17360cc6a974264a8d48023cfa0" translate="yes" xml:space="preserve">
          <source>Spacing is useful for popups that have multiple or repetitive building blocks. For example, some styles use spacing to determine the distance between the header, content, and footer of &lt;a href=&quot;qml-qtquick-controls2-dialog&quot;&gt;Dialog&lt;/a&gt;. Spacing is not enforced by Popup, so each style may interpret it differently, and some may ignore it altogether.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1c0614a844c0ef71412d1b4dd5d1db473c828e" translate="yes" xml:space="preserve">
          <source>Spacing within QGraphicsLinearLayout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8881b6b1125dcca3ce407fdeb385dbcc8175697" translate="yes" xml:space="preserve">
          <source>Spacing within an Anchor Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df7f1b361b2af42d36011e00d22c0f9891ec0b0" translate="yes" xml:space="preserve">
          <source>Spanish</source>
          <target state="translated">Spanish</target>
        </trans-unit>
        <trans-unit id="4192b61e63c40cd4a10acc3290aeb4eb91bd4acd" translate="yes" xml:space="preserve">
          <source>Spanish - Colombia</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614fdc3e849a05f04ffa9a4091c04ab47dda8d3a" translate="yes" xml:space="preserve">
          <source>Spanish - Mexico</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492161a6dbab1b88c1219a55efba0ea41aeb4aa3" translate="yes" xml:space="preserve">
          <source>Spanish - Spain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77fbfa8bd69bec71fc45fffb0d4b2781cf5ff2e1" translate="yes" xml:space="preserve">
          <source>Spanish Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9f82e997fa1a2f6057971e1d006be500b205ff" translate="yes" xml:space="preserve">
          <source>Spanish Layout (Mexican)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942078ca2d04f25545a316c123a392c4d5d339fd" translate="yes" xml:space="preserve">
          <source>Special</source>
          <target state="translated">Special</target>
        </trans-unit>
        <trans-unit id="20690954364dada25b20cc76ee6150ea0e3cdd38" translate="yes" xml:space="preserve">
          <source>Special Content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11470c2b486b1e098943bb529e57c2d25b1ce6a4" translate="yes" xml:space="preserve">
          <source>Special Effects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b57f3c59982d7912efb4851dd095b6c077c37c2" translate="yes" xml:space="preserve">
          <source>Special Keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965e94d65ac95717e63cc6482e4c14820bdb873f" translate="yes" xml:space="preserve">
          <source>Special Property Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d434ced76b302f3f1e680b0b19af1682fb1578e" translate="yes" xml:space="preserve">
          <source>Special case 1: Returns 0 if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bed1fcfc3b71728b50f725cecdc8590879eb7e1" translate="yes" xml:space="preserve">
          <source>Special case 2: Returns a random non-zero value if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cc6b6113dcd87357bb3550df55b74fb9ccd650" translate="yes" xml:space="preserve">
          <source>Special case 2: Returns an arbitrary non-zero value if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f5bb873a1ba5ce0f1aec79861952de57280b03" translate="yes" xml:space="preserve">
          <source>Special configurations of type &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;UserChoice&lt;/a&gt; provide a placeholder configuration which is resolved to an actual network configuration by the platform when a &lt;a href=&quot;qnetworksession&quot;&gt;session&lt;/a&gt; is &lt;a href=&quot;qnetworksession#open&quot;&gt;opened&lt;/a&gt;. Not all platforms support the concept of a user choice configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a103c55e08df4fe730379693512d316e08755008" translate="yes" xml:space="preserve">
          <source>Special handling of tags and extended types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fe199d7fbedd9bc95e54f14b7b76836892ba31" translate="yes" xml:space="preserve">
          <source>Special sub-control which contains the area in which the slider handle may move.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3ea3d273190dbe85820095779552e41aba295f" translate="yes" xml:space="preserve">
          <source>Special subclasses may need this function, but geometry management will usually take care of any necessary rearrangements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ec45d9701e92f5e299688dc76e97d433eb2434" translate="yes" xml:space="preserve">
          <source>Special thanks to charset gurus Markus Scherer (IBM), Dirk Meyer (Adobe Systems) and Ken Lunde (Adobe Systems) for publishing an excellent GB 18030-2000 summary and specification on the Internet. Some must-read documents are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180012997c432d6cc449bdcf1fe624d080557a28" translate="yes" xml:space="preserve">
          <source>Special type. Additional information can be passed in QVariants with types ranging from User to UserMax. The default implementation of Network Access will ignore any request attributes in this range and it will not produce any attributes in this range in replies. The range is reserved for extensions of &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8117845a85a8264e27ed08a6852164ef5c7e317a" translate="yes" xml:space="preserve">
          <source>Special type. See User.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbd47f34782f3e6b7b77a0a1040c01ae862ee17" translate="yes" xml:space="preserve">
          <source>Special value 0 means that it will look at only the visible area. Special value -1 will imply looking at all elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a37f46e6fe23f4247a60951d1acfa4f3230700" translate="yes" xml:space="preserve">
          <source>Special value returned by &lt;a href=&quot;qsettings#registerFormat&quot;&gt;registerFormat&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff60086f4faca584121fbdd586ee0b6b305d0434" translate="yes" xml:space="preserve">
          <source>Special value that matches all sub-controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07425755aa3fe28845b607b6dadffae18c33a62" translate="yes" xml:space="preserve">
          <source>Special value that matches no other sub control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd9c132745c200af8a1e71d84cbca4cf5cbd051" translate="yes" xml:space="preserve">
          <source>Specialized NDEF record classes can be easily created with the &lt;a href=&quot;qndefrecord#Q_DECLARE_NDEF_RECORD&quot;&gt;Q_DECLARE_NDEF_RECORD&lt;/a&gt;() and &lt;a href=&quot;qndefrecord#Q_DECLARE_ISRECORDTYPE_FOR_NDEF_RECORD&quot;&gt;Q_DECLARE_ISRECORDTYPE_FOR_NDEF_RECORD&lt;/a&gt;() macros. The following example shows the class declaration of the hypothetical</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d63cdbbfbc8948e2e6a96913e6997f3b9333ed7" translate="yes" xml:space="preserve">
          <source>Specialized handlers for viewport events are: &lt;a href=&quot;qabstractscrollarea#paintEvent&quot;&gt;paintEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#wheelEvent&quot;&gt;wheelEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragEnterEvent&quot;&gt;dragEnterEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragMoveEvent&quot;&gt;dragMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragLeaveEvent&quot;&gt;dragLeaveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dropEvent&quot;&gt;dropEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;(), and &lt;a href=&quot;qabstractscrollarea#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f356948006c8dadad3b6e46249da3058e4fa42" translate="yes" xml:space="preserve">
          <source>Specialized number key for keyboard layouts. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced4cb9eb32909c84919d7963828c92541707e10" translate="yes" xml:space="preserve">
          <source>Specialized property animation types have more efficient implementations than the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; type. They are for setting animations to different QML types such as &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;color&lt;/code&gt;, and rotations. Similarly, the &lt;a href=&quot;qml-qtquick-parentanimation&quot;&gt;ParentAnimation&lt;/a&gt; can animate parent changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d25f6a5ce8840bc85a6e381a1bdbc89364c6461" translate="yes" xml:space="preserve">
          <source>Specialized use in conjunction with programming commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530c86417bddc60045b6bd7d99a7c32a8456cab4" translate="yes" xml:space="preserve">
          <source>Specific Options for Platforms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3c6c0862f7c5e7e70b194518f60e4fa212d39e" translate="yes" xml:space="preserve">
          <source>Specific configuration options for the custom build target. Can be set to &lt;code&gt;recursive&lt;/code&gt; to indicate that rules should be created in the Makefile to call the relevant target inside the sub-target specific Makefile. This member defaults to creating an entry for each of the sub-targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb047bfc768769a3e8604bbbbd182bafabb7f81" translate="yes" xml:space="preserve">
          <source>Specific configuration options for the custom compiler. See the CONFIG table for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc693ee1cdbd20373feac9e2faed48ae19dde4c" translate="yes" xml:space="preserve">
          <source>Specific drag types can be obtained using the &lt;a href=&quot;qml-qtquick-dragevent#colorData-prop&quot;&gt;colorData&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-dragevent#html-prop&quot;&gt;html&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-dragevent#text-prop&quot;&gt;text&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-dragevent#urls-prop&quot;&gt;urls&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efe4198c89672c838e3e17fde0293c799a35947" translate="yes" xml:space="preserve">
          <source>Specific requirements and instructions for developing applications on different platforms are covered in the platform pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b242d5414794843ce20c75996909dd7da8c09961" translate="yes" xml:space="preserve">
          <source>Specifically with http, documents with Cache-control set to no-store or any https document that doesn't have &quot;Cache-control: public&quot; set will set the saveToDisk to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50615c7ea878558dae22f37775f57d377b44793e" translate="yes" xml:space="preserve">
          <source>Specifically, margins are only evaluated by &lt;a href=&quot;qml-qtquick-layouts-columnlayout&quot;&gt;ColumnLayout&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-layouts-rowlayout&quot;&gt;RowLayout&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-layouts-gridlayout&quot;&gt;GridLayout&lt;/a&gt;, and other layout-like containers, such as &lt;a href=&quot;qml-qtquick-controls-splitview&quot;&gt;SplitView&lt;/a&gt;, where the effective cell size of an item will be increased as the margins are increased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b947f9c9201673c366d331b7d3f4203319880f7f" translate="yes" xml:space="preserve">
          <source>Specifically, this applies to the &lt;a href=&quot;timers&quot;&gt;timer mechanism&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtnetwork-module.html&quot;&gt;network module&lt;/a&gt;. For example, you cannot start a timer or connect a socket in a thread that is not the &lt;a href=&quot;qobject#thread&quot;&gt;object's thread&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a70498e10ee07d33418ae28cceb2cd564c8fd3e" translate="yes" xml:space="preserve">
          <source>Specifically, you can monitor does the frame cache gets constantly full, or does the rendering process have to wait for frames to become ready. The first case implies that the animation is too complex, and the rendering cannot keep up the pace. Try making the animation simpler, or optimize the QML scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc97d122baca068224e1be011c8ca02d37ed4bb" translate="yes" xml:space="preserve">
          <source>Specified filenames can contain the following template &lt;code&gt;XXXXXX&lt;/code&gt; (six upper case &quot;X&quot; characters), which will be replaced by the auto-generated portion of the filename. Note that the template is case sensitive. If the template is not present in the filename, &lt;a href=&quot;qtemporaryfile&quot;&gt;QTemporaryFile&lt;/a&gt; appends the generated part to the filename given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1033c65fae386c768a9e15f7cce4922cdd6bfc" translate="yes" xml:space="preserve">
          <source>Specifies</source>
          <target state="translated">Specifies</target>
        </trans-unit>
        <trans-unit id="6e17059ef9222c6e7585fcfc67cbd3b8700e4997" translate="yes" xml:space="preserve">
          <source>Specifies 2D transformations of a coordinate system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947acdecc3d64018200cf4e4f4fe0220901df4cf" translate="yes" xml:space="preserve">
          <source>Specifies C++ compiler flags for generating compiler warnings. The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc9500bf2bb6fe51248087e2cacf37bb675964f" translate="yes" xml:space="preserve">
          <source>Specifies The X coordinate of the mouse event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bbf4dce98f397b1513810213fa7839174d17f1" translate="yes" xml:space="preserve">
          <source>Specifies The X coordinate of the mouse wheel event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c0b7393ae38c3ea35d34fb1703365a37cb9737" translate="yes" xml:space="preserve">
          <source>Specifies The Y coordinate of the mouse event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978951b23b66e0e83c84ebb4a171d14470a4b49f" translate="yes" xml:space="preserve">
          <source>Specifies The Y coordinate of the mouse wheel event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a020b7f78f3187bed1f01b1d207e70b6173a836" translate="yes" xml:space="preserve">
          <source>Specifies The change wheel angle of the mouse wheel event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee454e32119537b9780faffbeb92f0c4a896572e" translate="yes" xml:space="preserve">
          <source>Specifies The y coordinate of the mouse event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdacd65e80e35ef31dd1909f275d19d91a6547b" translate="yes" xml:space="preserve">
          <source>Specifies X workgroup size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01374e7ccb68388231f43dd879f5e90e7b95ccf4" translate="yes" xml:space="preserve">
          <source>Specifies X workgroup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8006099cd156b62690f35cf86372442b3be5307c" translate="yes" xml:space="preserve">
          <source>Specifies Y workgroup size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934b86871faf0dbe35f9d34e3ed6d334b34769ed" translate="yes" xml:space="preserve">
          <source>Specifies Y workgroup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea75610a6e049248799054434fddb2bb5c7e9e2" translate="yes" xml:space="preserve">
          <source>Specifies Z workgroup size.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
