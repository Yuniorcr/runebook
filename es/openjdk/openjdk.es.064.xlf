<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="86fb59b6172fd9d3e8dde6acc04fe048006fb646" translate="yes" xml:space="preserve">
          <source>SimpleBindings.isEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58fa2456ad2eb7b9124ab7a2cc32f4dd0a14b81" translate="yes" xml:space="preserve">
          <source>SimpleBindings.keySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426688b4093c730881e9dbeb8747b0801828cbaa" translate="yes" xml:space="preserve">
          <source>SimpleBindings.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2f8c02de6e3b0964eb12f02bd426dc663e907b" translate="yes" xml:space="preserve">
          <source>SimpleBindings.putAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b243e61ee1c5cb2516012beb17a068997bcb88d" translate="yes" xml:space="preserve">
          <source>SimpleBindings.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a141e218b8dea53e9f57848e073360dbe58f4ff" translate="yes" xml:space="preserve">
          <source>SimpleBindings.size()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b633a7ae1f81ab6a0a3a8b41a73ffde7451d9a" translate="yes" xml:space="preserve">
          <source>SimpleBindings.values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e0bf1a3f6a9899a6ddb30e040dbfc9efdc204e" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d5899d1e3bcccf0f78d1a8aa1f1ecaa4684c70" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.applyLocalizedPattern()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e51167f029c31d9c312f99e1368aae1523ff1d7" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.applyPattern()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f41d0f172406a5499bcfdc0cd702f7e44b0e47" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.clone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f271304bb1ed44885f03bf69ed7273a5e307efdf" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df51c8c00303db2602ea516cfcde6e69bfd7b11f" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.format()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09e905ee92006b69815837761eefa9deec20757" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.formatToCharacterIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92e5f1fc8ebf28943f025e06fb2c00702b71bb2" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.get2DigitYearStart()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8245c97801deb1769e66c32636f63d1672b1975" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.getDateFormatSymbols()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1c74d9ecce025a7ba73a3fbb3ea4817ade3a44" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633454ee644fd936de563c9a82af4828f7cf1029" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.parse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71309680e0f2428eb57d81fd2e64a097df78ee8" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.set2DigitYearStart()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a50fdde858899bcfa01cdd70b72771bdf3dd69" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.setDateFormatSymbols()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24535b9c77cd8e627d49c9e8c2f4362141897008" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.toLocalizedPattern()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e2a416db5267251d255cbf4d6b16d1b330e0b5" translate="yes" xml:space="preserve">
          <source>SimpleDateFormat.toPattern()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bb5e80d748938d10e232ad98f02ac396eff04e" translate="yes" xml:space="preserve">
          <source>SimpleDoc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885c2218af00c414741d92278a05ead1c27e62c7" translate="yes" xml:space="preserve">
          <source>SimpleDoc.getAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41dd588528391cb7c223a7a7856e35d6aac81ec" translate="yes" xml:space="preserve">
          <source>SimpleDoc.getDocFlavor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c5e9b0ac620f8273fb73e7bc43570b26216eea" translate="yes" xml:space="preserve">
          <source>SimpleDoc.getPrintData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8479edc81f71f03915a2c370c101b128c1e26c" translate="yes" xml:space="preserve">
          <source>SimpleDoc.getReaderForText()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e428351e2e0dbb45c359f8f8c180fd91884e158" translate="yes" xml:space="preserve">
          <source>SimpleDoc.getStreamForBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e2c00c3c74cb44c1e73c1e55534f0369265930" translate="yes" xml:space="preserve">
          <source>SimpleElementVisitor6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f852db3d753f555b989a16a1bf284b0014e46537" translate="yes" xml:space="preserve">
          <source>SimpleElementVisitor6.defaultAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22217795653896a7b3d4f354969899933ab57e9" translate="yes" xml:space="preserve">
          <source>SimpleElementVisitor6.visitExecutable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba575a222a422d8f42ac33a0974098202b65033" translate="yes" xml:space="preserve">
          <source>SimpleElementVisitor6.visitPackage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8a955f14bd5edbf97c99caebbc05198bd22453" translate="yes" xml:space="preserve">
          <source>SimpleElementVisitor6.visitType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e220a2855ea345fd007dc7e445e84dda9b3dd34" translate="yes" xml:space="preserve">
          <source>SimpleElementVisitor6.visitTypeParameter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d61704e85011293bc55874bfa33baf4e4071d1" translate="yes" xml:space="preserve">
          <source>SimpleElementVisitor6.visitVariable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246f349169a0d7fad12c01fe4a3a929c25606297" translate="yes" xml:space="preserve">
          <source>SimpleElementVisitor7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2430e077803b628804cfb6b463dc77023aa152de" translate="yes" xml:space="preserve">
          <source>SimpleElementVisitor7.visitVariable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c27ffc4e97a0c24410e3bc46d2388edc737e6d8" translate="yes" xml:space="preserve">
          <source>SimpleElementVisitor8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1936127b1a1f3f796749de317355d6f25d621d07" translate="yes" xml:space="preserve">
          <source>SimpleEntry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67469db85e744ed65c19b86f9844e0af92c6d616" translate="yes" xml:space="preserve">
          <source>SimpleFileVisitor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471c16cb531da1e692dbc6a8a9e42fdb6d882225" translate="yes" xml:space="preserve">
          <source>SimpleFileVisitor.postVisitDirectory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15e4b4c85b53b2b35f647cd4c1363aa45dd4f03" translate="yes" xml:space="preserve">
          <source>SimpleFileVisitor.preVisitDirectory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccbf499b3a738ea8cb47718f8876acf6b83d6d2b" translate="yes" xml:space="preserve">
          <source>SimpleFileVisitor.visitFile()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d37245f0e5c0601624f4f06ea66417bcca1d681" translate="yes" xml:space="preserve">
          <source>SimpleFileVisitor.visitFileFailed()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a33dc03ff5129fec1378157f5ba8ddc316e8a0" translate="yes" xml:space="preserve">
          <source>SimpleFormatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a058ba80730d563dbffeae66ae306dd19e5310" translate="yes" xml:space="preserve">
          <source>SimpleFormatter.format()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4663e0bb83c8e0a08ff228431edd9aaf9b3623bd" translate="yes" xml:space="preserve">
          <source>SimpleImmutableEntry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4249b5a6c820d1dc3d0713c35bd5d7603a1d418" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ba12d06ac6468d479c75616b1666e4d2b84932" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.delete()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c881127cfdef41ef4aefd1de93460b25125b1d" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.getAccessLevel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d277859cba50c0a1bbbb1d09467fd02672a647a8" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.getCharContent()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b56a2fd98087c8543c73e3f9c065e23f28a0bb" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.getKind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4458c0fb8703e4efd7293b6f0200f0344f5ba28" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.getLastModified()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94e2816649585c1d7fd4556def6d0d78c9918b5" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3040be3c79dbb7bd543bf7ebd726d14c24532f" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.getNestingKind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc9ea1d9374b14ddf4c112b3132038aae6f9084" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.isNameCompatible()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e855b7cfe6bfb263558e6520cd6aa135ea5221" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.openInputStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0876d43f012cfddf0c5339290cb579968a07df" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.openOutputStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f84e7c08ecca98ca6adaac3ec60adafc5b2ef54" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.openReader()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eff830f1eb6cf994df563ff6e024af6811a258d" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.openWriter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb79079e2d798a3fb7eb73e7884965ea1ef548f2" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb74d7f79a29993d17524b79b32cef170f2d540" translate="yes" xml:space="preserve">
          <source>SimpleJavaFileObject.toUri()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b149ff1f0e498831ff206bb25dc6fa9537be3c15" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0defcf786fdaa9846a0c78e2a7640f69157c8945" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.getAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8248d1ae458069c1c5c84c5b9edce36978fa6e" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.getAttributesScope()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad210e09b3517ed5ad28db4546ddde98aad1073" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.getBindings()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9896c702e1ecaadfc3ac16e3fa9d52900172242" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.getErrorWriter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2664457f092a62044c143d6c9534785f19df0b8e" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.getReader()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b221e9f3a954cf43fdab45e46bd53cf60cbe8631" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.getScopes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9540d4dc363def29f20bb2d17766317926cf8e" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.getWriter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192b2aa01224feb4586df210ec5d5226ce3e62d0" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.removeAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75e162fe560b09c8de704181f732a6934f7a5d4" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.setAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179dac1f046e02d617947524f5ee712de4600874" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.setBindings()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b535083d9f31db14585b784a5d49f4dafabd7b" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.setErrorWriter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0437a3354077ace5c01fcb4bc417b34303772cd6" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.setReader()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcad773b52a950ba11b49d176bb348cd33741eec" translate="yes" xml:space="preserve">
          <source>SimpleScriptContext.setWriter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4705bbd2b0ec4365364bdf7fb24a72224c75fab8" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65981054f92897f4839633efdaac39cd99901067" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.clone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d902f248e223754d128e473c765e58b0f5119dd" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75aa66996a60732b3d6cd1c0a4bfd30d0f276db8" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.getDSTSavings()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d3bb166bb9b35fc0b3fc5370541dd5034a3513" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.getOffset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f820c0d65ce1935146dcfa2d94a2dbe9d9e7dcf" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.getRawOffset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633158f43720fa75cc9c4256cec8db0e0015ea96" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.hasSameRules()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ad0a976e8e1ef54821edffe236e409f2b11162" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70692ae3022e049303749002d6f11d3abfbb7e61" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.inDaylightTime()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5e5019e1d45319b7153964b83131a174b56028" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.observesDaylightTime()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57513920eb965b4d3b66b13c95d6e565c7ec842" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.setDSTSavings()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d455b21a641454bc85d5054ff964a8e9e1e258c" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.setEndRule()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f05370ea8f144a9e76cc3815e9e58f680acc19" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.setRawOffset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d603b6763977a37a415c0171bc6dc4268adafc64" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.setStartRule()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b21b429c11eb87da2b9f519956d570dd96eeb24" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.setStartYear()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48023cca9d13ea391b737876ead9e979e2d29919" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4e0c7faa1a416a9b60ea2889ebbe780e2aff4b" translate="yes" xml:space="preserve">
          <source>SimpleTimeZone.useDaylightTime()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa589266851676727bb23bf61079959fb7acdcd" translate="yes" xml:space="preserve">
          <source>SimpleType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77f6b1235be6311c278e64e44d9547fc015ef95" translate="yes" xml:space="preserve">
          <source>SimpleType.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3ea08faa8bebf16c13b4e5285cf1c939a85b62" translate="yes" xml:space="preserve">
          <source>SimpleType.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f43af2ac6014218e64c746a74176650838c5aa" translate="yes" xml:space="preserve">
          <source>SimpleType.isValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3ab52e55680949f474c167e42e72fd08cc858d" translate="yes" xml:space="preserve">
          <source>SimpleType.readResolve()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c226b9b8eb17d6bf488dc1f7519c58d3f690a2" translate="yes" xml:space="preserve">
          <source>SimpleType.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bd10c88379160c1616a3a7463bbe7ca03c2225" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef72821380941cb6d060ae4829808815ecdfeca3" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6.defaultAction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5759fe66b99750c2ee60dfb1fd45d8d9d2b47ae" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6.visitArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3b792249ce08f322f867a7ec0dc0eabdf40a38" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6.visitDeclared()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7609bea3861eb7dd6efeae6ea647d07cdb0285e" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6.visitError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796512198247f68e4419c5968bdedb702970de8e" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6.visitExecutable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fec2ba0984461706277da2ff96e41919400c79" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6.visitNoType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48bea13944b4a64e1cd6338237b7dd3d2a40d74" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6.visitNull()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291fe9341570389511d9d725f2b4abcee0b653a1" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6.visitPrimitive()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5937289da9a21b1c12a8f7a16fd63682fd802219" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6.visitTypeVariable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cde68866294685c65601d0e4b9e2f19d9501b3" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor6.visitWildcard()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc6382d8229e6185f84a6f8fd8383e4db336c8b" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee165f641a80441792c15643be75a48c7fc26078" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor7.visitUnion()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fdce3791acd631a5766fff97ad16351610368e4" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89b94bc96d3041ed43090dcf073c176aeadde70" translate="yes" xml:space="preserve">
          <source>SimpleTypeVisitor8.visitIntersection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b92e5401b80143e0ffd6829384a29d0d7242c2" translate="yes" xml:space="preserve">
          <source>Since (unlike &lt;a href=&quot;futuretask&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt;&lt;/a&gt;) this class has no direct control over the computation that causes it to be completed, cancellation is treated as just another form of exceptional completion. Method &lt;a href=&quot;completablefuture#cancel-boolean-&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; has the same effect as &lt;code&gt;completeExceptionally(new CancellationException())&lt;/code&gt;. Method &lt;a href=&quot;completablefuture#isCompletedExceptionally--&quot;&gt;&lt;code&gt;isCompletedExceptionally()&lt;/code&gt;&lt;/a&gt; can be used to determine if a CompletableFuture completed in any exceptional fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0547713001c7779ed4ce58764b70dccbd567b7d2" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;DirObjectFactory&lt;/code&gt; extends &lt;code&gt;ObjectFactory&lt;/code&gt;, it effectively has two &lt;code&gt;getObjectInstance()&lt;/code&gt; methods, where one differs from the other by the attributes argument. Given a factory that implements &lt;code&gt;DirObjectFactory&lt;/code&gt;, &lt;code&gt;DirectoryManager.getObjectInstance()&lt;/code&gt; will only use the method that accepts the attributes argument, while &lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; will only use the one that does not accept the attributes argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf88be3ab5fc1b4fbebdd3cedd3d69a0652b507" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;DirStateFactory&lt;/code&gt; extends &lt;code&gt;StateFactory&lt;/code&gt;, it has two &lt;code&gt;getStateToBind()&lt;/code&gt; methods, where one differs from the other by the attributes argument. &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; will only use the form that accepts the attributes argument, while &lt;code&gt;NamingManager.getStateToBind()&lt;/code&gt; will only use the form that does not accept the attributes argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f9574c49c4c3512ede09eba16504d1e77ad4b6" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;ZonedDateTime&lt;/code&gt; does not support a Julian-Gregorian cutover date and uses ISO calendar system, the return GregorianCalendar is a pure Gregorian calendar and uses ISO 8601 standard for week definitions, which has &lt;code&gt;MONDAY&lt;/code&gt; as the &lt;a href=&quot;calendar#getFirstDayOfWeek--&quot;&gt;&lt;code&gt;FirstDayOfWeek&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;4&lt;/code&gt; as the value of the &lt;a href=&quot;calendar#getMinimalDaysInFirstWeek--&quot;&gt;&lt;code&gt;MinimalDaysInFirstWeek&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c244363e868cdaaaa04bccbefc211edf3992bdd3" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;invokevirtual&lt;/code&gt; instructions can natively invoke method handles under any symbolic type descriptor, this reflective view conflicts with the normal presentation of these methods via bytecodes. Thus, these two native methods, when reflectively viewed by &lt;code&gt;Class.getDeclaredMethod&lt;/code&gt;, may be regarded as placeholders only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60a9f8fc3231e141c4e7cc9ef134917ae585400" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;null&lt;/code&gt; is considered to be a value of any reference type, the returned collection permits insertion of null elements whenever the backing collection does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07421f32f68ce6e62801d2277ba000e48fefb0e1" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;null&lt;/code&gt; is considered to be a value of any reference type, the returned list permits insertion of null elements whenever the backing list does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8e34de316d58fdf1fba442b4adcf9d2e0def5d" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;null&lt;/code&gt; is considered to be a value of any reference type, the returned map permits insertion of null keys or values whenever the backing map does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42a5f2f91c622ea2e9c86940fe07e2cc7ffc79b" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;null&lt;/code&gt; is considered to be a value of any reference type, the returned navigable set permits insertion of null elements whenever the backing sorted set does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc53df25923fc6cf68e2b0067d61f19c0735ee8" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;null&lt;/code&gt; is considered to be a value of any reference type, the returned queue permits insertion of &lt;code&gt;null&lt;/code&gt; elements whenever the backing queue does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9418644525f3f066d744a8f9875c0550a8f8c95" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;null&lt;/code&gt; is considered to be a value of any reference type, the returned set permits insertion of null elements whenever the backing set does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce629440c2ec45a33444018fe185c49822cc533a" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;null&lt;/code&gt; is considered to be a value of any reference type, the returned sorted set permits insertion of null elements whenever the backing sorted set does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2836c853bfa01b4e0db780a7a1ed0c52ae3b7485" translate="yes" xml:space="preserve">
          <source>Since JMX 1.2 this class makes it possible to replace the default MBeanServer implementation. This is done using the &lt;a href=&quot;mbeanserverbuilder&quot;&gt;&lt;code&gt;MBeanServerBuilder&lt;/code&gt;&lt;/a&gt; class. The class of the initial MBeanServerBuilder to be instantiated can be specified through the &lt;b&gt;javax.management.builder.initial&lt;/b&gt; system property. The specified class must be a public subclass of &lt;a href=&quot;mbeanserverbuilder&quot;&gt;&lt;code&gt;MBeanServerBuilder&lt;/code&gt;&lt;/a&gt;, and must have a public empty constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d1acb381680b560b66df9214c0462556b8d83b" translate="yes" xml:space="preserve">
          <source>Since ObjectName is immutable, it is not usually useful to make a copy of an ObjectName. The principal use of this method is to guard against a malicious caller who might pass an instance of a subclass with surprising behavior to sensitive code. Such code can call this method to obtain an ObjectName that is known not to have surprising behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88a2a4b6bf5760551b2298678de29a6e886e984" translate="yes" xml:space="preserve">
          <source>Since a &lt;code&gt;MonthDay&lt;/code&gt; does not possess a year, the leap day of February 29th is considered valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b482922f5cbbc442aa6a9ecc303aaa00140668" translate="yes" xml:space="preserve">
          <source>Since a method handle&amp;rsquo;s &lt;code&gt;invoke&lt;/code&gt; method (or other signature-polymorphic method) is non-virtual, it consumes an extra argument for the method handle itself, in addition to any non-virtual receiver object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393e9394374686bb3c42400076e1d818d792a4ca" translate="yes" xml:space="preserve">
          <source>Since a proxy class implements all of the interfaces specified at its creation, invoking &lt;code&gt;getInterfaces&lt;/code&gt; on its &lt;code&gt;Class&lt;/code&gt; object will return an array containing the same list of interfaces (in the order specified at its creation), invoking &lt;code&gt;getMethods&lt;/code&gt; on its &lt;code&gt;Class&lt;/code&gt; object will return an array of &lt;code&gt;Method&lt;/code&gt; objects that include all of the methods in those interfaces, and invoking &lt;code&gt;getMethod&lt;/code&gt; will find methods in the proxy interfaces as would be expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec92317bded5fc0703ae065e41e66b433dc2b424" translate="yes" xml:space="preserve">
          <source>Since annotations are only meta-data associated with a type, the set of annotations on either argument is &lt;em&gt;not&lt;/em&gt; taken into account when computing whether or not two &lt;code&gt;TypeMirror&lt;/code&gt; objects are the same type. In particular, two &lt;code&gt;TypeMirror&lt;/code&gt; objects can have different annotations and still be considered the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880b9c74d9192a0646cf5713bd8eaea1241de6a2" translate="yes" xml:space="preserve">
          <source>Since changing the default locale may affect many different areas of functionality, this method should only be used if the caller is prepared to reinitialize locale-sensitive code running within the same Java Virtual Machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a411e83a26d81ec80847a0524369e1c0bc75de4" translate="yes" xml:space="preserve">
          <source>Since each &lt;code&gt;ClassFileTransformer&lt;/code&gt; can do its own transformation of the bytecodes, more than one layer of wrappers may be applied. Thus each transformer needs its own prefix. Since transformations are applied in order, the prefixes, if applied, will be applied in the same order (see &lt;a href=&quot;instrumentation#addTransformer-java.lang.instrument.ClassFileTransformer-boolean-&quot;&gt;&lt;code&gt;addTransformer&lt;/code&gt;&lt;/a&gt;). Thus if three transformers applied wrappers, &lt;code&gt;foo&lt;/code&gt; might become &lt;code&gt;$trans3_$trans2_$trans1_foo&lt;/code&gt;. But if, say, the second transformer did not apply a wrapper to &lt;code&gt;foo&lt;/code&gt; it would be just &lt;code&gt;$trans3_$trans1_foo&lt;/code&gt;. To be able to efficiently determine the sequence of prefixes, an intermediate prefix is only applied if its non-native wrapper exists. Thus, in the last example, even though &lt;code&gt;$trans1_foo&lt;/code&gt; is not a native method, the &lt;code&gt;$trans1_&lt;/code&gt; prefix is applied since &lt;code&gt;$trans1_foo&lt;/code&gt; exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7790ba64f20704645846ecbd9c509908af85a519" translate="yes" xml:space="preserve">
          <source>Since every attribute class implements &lt;code&gt;Attribute&lt;/code&gt;, every attribute class must provide an implementation for the &lt;a href=&quot;attribute#getCategory--&quot;&gt;&lt;code&gt;getCategory&lt;/code&gt;&lt;/a&gt; method, which returns the attribute category. In the case of &lt;code&gt;Sides&lt;/code&gt;, the &lt;code&gt;getCategory&lt;/code&gt; method returns &lt;code&gt;Sides.class&lt;/code&gt;. The &lt;code&gt;getCategory&lt;/code&gt; method is final to ensure that any vendor-defined subclasses of a standard attribute class appear in the same category. Every attribute object is immutable once constructed so that attribute object references can be passed around freely. To get a different attribute value, construct a different attribute object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de7dba65e035f916df474df0b0485b2e7b97500" translate="yes" xml:space="preserve">
          <source>Since fields such as year vary by chronology, it is recommended to use the &lt;a href=&quot;datetimeformatterbuilder#appendValueReduced-java.time.temporal.TemporalField-int-int-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;appendValueReduced(TemporalField, int, int, ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; date} variant of this method in most cases. This variant is suitable for simple fields or working with only the ISO chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5965fb89e79ad568549f7cb802dd3ef5ca600050" translate="yes" xml:space="preserve">
          <source>Since hosts comparison requires name resolution, this operation is a blocking operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729f59c03e881d58fe4b616cbb80aa17f995f190" translate="yes" xml:space="preserve">
          <source>Since incomplete programs are being modeled, some of the parameters may only have partial information or may be &lt;code&gt;null&lt;/code&gt;. At least one of &lt;code&gt;element&lt;/code&gt; and &lt;code&gt;userText&lt;/code&gt; must be non-&lt;code&gt;null&lt;/code&gt;. If &lt;code&gt;element&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, &lt;code&gt;annotation&lt;/code&gt; and &lt;code&gt;member&lt;/code&gt; may be &lt;code&gt;null&lt;/code&gt;. Processors may not throw a &lt;code&gt;NullPointerException&lt;/code&gt; if some parameters are &lt;code&gt;null&lt;/code&gt;; if a processor has no completions to offer based on the provided information, an empty iterable can be returned. The processor may also return a single completion with an empty value string and a message describing why there are no completions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68d13b230d505ddb0d1e31b168d36c78d6fc017" translate="yes" xml:space="preserve">
          <source>Since invalidation is a global and immediate operation, the execution of this query, on a valid switchpoint, must be internally sequenced with any other threads that could cause invalidation. This query may therefore be expensive. The recommended way to build a boolean-valued method handle which queries the invalidation state of a switch point &lt;code&gt;s&lt;/code&gt; is to call &lt;code&gt;s.guardWithTest&lt;/code&gt; on &lt;a href=&quot;methodhandles#constant-java.lang.Class-java.lang.Object-&quot;&gt;&lt;code&gt;constant&lt;/code&gt;&lt;/a&gt; true and false method handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe44c8ed30a87d7cc712e33c75baa0668d4e4cd" translate="yes" xml:space="preserve">
          <source>Since native methods cannot be directly instrumented (they have no bytecodes), they must be wrapped with a non-native method which can be instrumented. For example, if we had:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122f3a249dfc6f08a76e15b48c7d329a75964dcf" translate="yes" xml:space="preserve">
          <source>Since no other parameters are specified when you call the above algorithm-independent &lt;code&gt;init&lt;/code&gt; methods, it is up to the provider what to do about the algorithm-specific parameters (if any) to be associated with each of the keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25708d5fa1e40f88f2724b076aa56f7bba61a220" translate="yes" xml:space="preserve">
          <source>Since no other parameters are specified when you call the above algorithm-independent &lt;code&gt;initialize&lt;/code&gt; methods, it is up to the provider what to do about the algorithm-specific parameters (if any) to be associated with each of the keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7236b3d8e5cac03ddef98c5e7032c756f810e81b" translate="yes" xml:space="preserve">
          <source>Since not all extensions are known, the &lt;code&gt;getExtensionValue&lt;/code&gt; method returns the DER-encoded OCTET STRING of the extension value (i.e., the &lt;code&gt;extnValue&lt;/code&gt;). This can then be handled by a &lt;em&gt;Class&lt;/em&gt; that understands the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c9b5576123f52d2106e30b869f7fcadfc4a406" translate="yes" xml:space="preserve">
          <source>Since some calendars can be customized, the ID or type typically refers to the default customization. For example, the Gregorian calendar can have multiple cutover dates from the Julian, but the lookup only provides the default cutover date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c29aa583db907f7924a0343183cff2aa705469" translate="yes" xml:space="preserve">
          <source>Since the attribute names and values are themselves immutable, the Attributes returned can be safely modified without affecting the original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fc1c3e2ca4b1999c59489ccd0f6dfa1c7d02d1" translate="yes" xml:space="preserve">
          <source>Since the default is case sensitive, this method should only be used after a previous call to &lt;code&gt;#parseCaseInsensitive&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebf1b39fd259fcad5e51c98cc3afb22461c9cc3" translate="yes" xml:space="preserve">
          <source>Since the external format of environment variable names and values is system-dependent, there may not be a one-to-one mapping between them and Java's Unicode strings. Nevertheless, the map is implemented in such a way that environment variables which are not modified by Java code will have an unmodified native representation in the subprocess.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af08e4799af9fb76139a844b9d3e3834dd070cf9" translate="yes" xml:space="preserve">
          <source>Since the format of subject key identifiers is not mandated by any standard, subject key identifiers are not parsed by the &lt;code&gt;X509CertSelector&lt;/code&gt;. Instead, the values are compared using a byte-by-byte comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032814192aaa7afd1cf22d76a97c967983d63318" translate="yes" xml:space="preserve">
          <source>Since the number of bytes may be greater than Integer.MAX_VALUE, the &lt;a href=&quot;deflater#getBytesRead--&quot;&gt;&lt;code&gt;getBytesRead()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b64825eb14df7c95e115ba189df83f33adec9f" translate="yes" xml:space="preserve">
          <source>Since the number of bytes may be greater than Integer.MAX_VALUE, the &lt;a href=&quot;deflater#getBytesWritten--&quot;&gt;&lt;code&gt;getBytesWritten()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc91a2223cd0be2aa4f7d9c9211c185708ed58f" translate="yes" xml:space="preserve">
          <source>Since the number of bytes may be greater than Integer.MAX_VALUE, the &lt;a href=&quot;inflater#getBytesRead--&quot;&gt;&lt;code&gt;getBytesRead()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a170ec3056ad00f245ddbb1e795e96379dce3bba" translate="yes" xml:space="preserve">
          <source>Since the number of bytes may be greater than Integer.MAX_VALUE, the &lt;a href=&quot;inflater#getBytesWritten--&quot;&gt;&lt;code&gt;getBytesWritten()&lt;/code&gt;&lt;/a&gt; method is now the preferred means of obtaining this information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b6a4d96389c7c99915754ecdf32f7bc9be6537" translate="yes" xml:space="preserve">
          <source>Since the order of format elements in a pattern string often changes during localization, it is generally better to use the &lt;a href=&quot;messageformat#setFormatByArgumentIndex-int-java.text.Format-&quot;&gt;&lt;code&gt;setFormatByArgumentIndex&lt;/code&gt;&lt;/a&gt; method, which accesses format elements based on the argument index they specify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aed6517f3d10f02b71773a5a6e15f402d3afbe2" translate="yes" xml:space="preserve">
          <source>Since the order of format elements in a pattern string often changes during localization, it is generally better to use the &lt;a href=&quot;messageformat#setFormatsByArgumentIndex-java.text.Format:A-&quot;&gt;&lt;code&gt;setFormatsByArgumentIndex&lt;/code&gt;&lt;/a&gt; method, which assumes an order of formats corresponding to the order of elements in the &lt;code&gt;arguments&lt;/code&gt; array passed to the &lt;code&gt;format&lt;/code&gt; methods or the result array returned by the &lt;code&gt;parse&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b4eb9dcbd0b11f16c200ebd7a0d447bfa80af0" translate="yes" xml:space="preserve">
          <source>Since the order of format elements in a pattern string often changes during localization, it's generally better to use the &lt;a href=&quot;messageformat#getFormatsByArgumentIndex--&quot;&gt;&lt;code&gt;getFormatsByArgumentIndex&lt;/code&gt;&lt;/a&gt; method, which assumes an order of formats corresponding to the order of elements in the &lt;code&gt;arguments&lt;/code&gt; array passed to the &lt;code&gt;format&lt;/code&gt; methods or the result array returned by the &lt;code&gt;parse&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9966d2e1882d2cf228d3525fb635fb0a02a60c5b" translate="yes" xml:space="preserve">
          <source>Since the same numerical value can have different representations (with different scales), the rules of arithmetic and rounding must specify both the numerical result and the scale used in the result's representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbed79d924a11bd62c95c6767e7a0be7e0e9c59d" translate="yes" xml:space="preserve">
          <source>Since the time when GC would invoke this method is undetermined, it is strongly recommended that applications invoke the &lt;code&gt;close&lt;/code&gt; method as soon they have finished accessing this &lt;code&gt;ZipFile&lt;/code&gt;. This will prevent holding up system resources for an undetermined length of time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f65bb646daf7ee8371ffb0ca2e33e1c25529d4c" translate="yes" xml:space="preserve">
          <source>Since this class directly implements the BeanContext interface, the class can, and is intended to be used either by subclassing this implementation, or via ad-hoc delegation of an instance of this class from another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a618bf4e69a30834db0657aca469571cde5cc15" translate="yes" xml:space="preserve">
          <source>Since this class directly implements the BeanContextServices interface, the class can, and is intended to be used either by subclassing this implementation, or via delegation of an instance of this class from another through the BeanContextProxy interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552679b7c5f64232988b214e40b9a737762399c7" translate="yes" xml:space="preserve">
          <source>Since this class is immutable, cloning is chiefly of interest to subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2302ca1ef8e62f913993d75b2fe7247aca97fa" translate="yes" xml:space="preserve">
          <source>Since this class is immutable, the clone method is chiefly of interest to subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cab80831717829d661a574b79aeba1d669f197c" translate="yes" xml:space="preserve">
          <source>Since this interface may be implemented by existing classes with different styles of error handling there is no guarantee that errors will be propagated to the invoker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfabca31c7ceb89f83c94bec19d40069970a6add" translate="yes" xml:space="preserve">
          <source>Since this method continues to search through the input looking for a line separator, it may buffer all of the input searching for the line to skip if no line separators are present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec840199b0e02fc9328b584f6a0c7b0c31ddcc2b" translate="yes" xml:space="preserve">
          <source>Since this method continues to search through the input looking for the specified pattern, it may buffer all of the input searching for the desired token if no line separators are present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf6c297dfbcfc220928e629a6ae205ba260e1df" translate="yes" xml:space="preserve">
          <source>Since this method seeks to match the specified pattern starting at the scanner's current position, patterns that can match a lot of input (&quot;.*&quot;, for example) may cause the scanner to buffer a large amount of input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458ee1c742748e0cae2bafee962cd000e9632228" translate="yes" xml:space="preserve">
          <source>Since this object supports a Julian-Gregorian cutover date and &lt;code&gt;ZonedDateTime&lt;/code&gt; does not, it is possible that the resulting year, month and day will have different values. The result will represent the correct date in the ISO calendar system, which will also be the same value for Modified Julian Days.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f3e9a3c9acbcc6dbb1624eed0cebb7f3c10405" translate="yes" xml:space="preserve">
          <source>Since, in the case of Gap and Overlap, the offset returned is a &quot;best&quot; value, rather than the &quot;correct&quot; value, it should be treated with care. Applications that care about the correct offset should use a combination of this method, &lt;a href=&quot;zonerules#getValidOffsets-java.time.LocalDateTime-&quot;&gt;&lt;code&gt;getValidOffsets(LocalDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zonerules#getTransition-java.time.LocalDateTime-&quot;&gt;&lt;code&gt;getTransition(LocalDateTime)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4434cedbc25a9b21d7d06d3713a6484879933703" translate="yes" xml:space="preserve">
          <source>Since:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3af0ef0b44ec152ed25041f2bb4ed0d736885ed" translate="yes" xml:space="preserve">
          <source>Single document -- see above for &lt;a href=&quot;#sdfi&quot;&gt;further information&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06c7e41759e294cb7321e723b165378eddfa36f" translate="yes" xml:space="preserve">
          <source>Single document new sheet -- see above for &lt;a href=&quot;#sdnsfi&quot;&gt;further information&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fa01b887e1ece5debc477264459f7bde6bfae2" translate="yes" xml:space="preserve">
          <source>Single quote &lt;code&gt;'\''&lt;/code&gt; and double quote &lt;code&gt;'&quot;'&lt;/code&gt; are string quote characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419a2d99d615e5d984085848db7c7549217edce0" translate="yes" xml:space="preserve">
          <source>Singleton instance for Japanese chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac35807b303b38ed8c070b77a75df888d8eb0ba3" translate="yes" xml:space="preserve">
          <source>Singleton instance for the Minguo chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae859c31d2a8ff9b06b01ea3dab9ed20b78deade" translate="yes" xml:space="preserve">
          <source>Singleton instance of the Buddhist chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a1e88b4f3a240bbfe72ad8317a1a1dab82c002" translate="yes" xml:space="preserve">
          <source>Singleton instance of the ISO chronology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cdca3de2cd96d173242a98022c61dc8ae9e009d" translate="yes" xml:space="preserve">
          <source>Singleton instance of the Islamic Umm Al-Qura calendar of Saudi Arabia. Other Hijrah chronology variants may be available from &lt;a href=&quot;chronology#getAvailableChronologies--&quot;&gt;&lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd776d2b114a2988cbe9c16f027241436efee88" translate="yes" xml:space="preserve">
          <source>SinkChannel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63130e5a05450adc434075711e62333245b2a5d" translate="yes" xml:space="preserve">
          <source>Site-local</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c900667750f14ccc63501836d9add5ee96d2b810" translate="yes" xml:space="preserve">
          <source>Sixteen-bit UCS Transformation Format, big-endian byte order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d59a1dc6af74f897732c562961212937119caba" translate="yes" xml:space="preserve">
          <source>Sixteen-bit UCS Transformation Format, byte order identified by an optional byte-order mark</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df55a64fba82914cda3f9ae0968e35b1979fa35b" translate="yes" xml:space="preserve">
          <source>Sixteen-bit UCS Transformation Format, little-endian byte order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27896eba7232635606b82c0930df8d7a929d498a" translate="yes" xml:space="preserve">
          <source>Size2DSyntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11193f21431c9a311148569d21f1353aeace56a0" translate="yes" xml:space="preserve">
          <source>Size2DSyntax.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fef1619ee58e13f0c062693ba4f9b03fe70c9a" translate="yes" xml:space="preserve">
          <source>Size2DSyntax.getSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c022881de012273a5b1553cdf761bd085eebe3" translate="yes" xml:space="preserve">
          <source>Size2DSyntax.getX()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722306729b04a01b3a2a270778d0229152c13b1d" translate="yes" xml:space="preserve">
          <source>Size2DSyntax.getXMicrometers()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a4508441850496c7aded48695c52a9b80989a1" translate="yes" xml:space="preserve">
          <source>Size2DSyntax.getY()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1785293e40f0301519fffa8215a2c26644e811b0" translate="yes" xml:space="preserve">
          <source>Size2DSyntax.getYMicrometers()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68400f6d9f377bc57f12e3331df69cb8d2823531" translate="yes" xml:space="preserve">
          <source>Size2DSyntax.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9befaa1a97902f1b135cf3728e61a40a113e9e7" translate="yes" xml:space="preserve">
          <source>Size2DSyntax.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f803a6f64f5d90f24dc4e86bdb03ca0fc57ea3" translate="yes" xml:space="preserve">
          <source>SizeLimitExceededException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2129e592280bad85d13cd5dbdab6be9f16099a" translate="yes" xml:space="preserve">
          <source>Skip characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e2b9d59d5c16ee4782ce5ac5f26d0cbb003d6c" translate="yes" xml:space="preserve">
          <source>Skips &lt;code&gt;n&lt;/code&gt; bytes of input from the bytes that can be read from this input stream without blocking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2734e2d653beb2f8ff0049f9e189db96a0a3c525" translate="yes" xml:space="preserve">
          <source>Skips &lt;code&gt;n&lt;/code&gt; bytes of input from this input stream. Fewer bytes might be skipped if the end of the input stream is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723137557648fb308e259f787a972a5ab57a2bf5" translate="yes" xml:space="preserve">
          <source>Skips &lt;code&gt;n&lt;/code&gt; bytes of input from this input stream. Fewer bytes might be skipped if the end of the input stream is reached. The actual number &lt;code&gt;k&lt;/code&gt; of bytes to be skipped is equal to the smaller of &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;count-pos&lt;/code&gt;. The value &lt;code&gt;k&lt;/code&gt; is added into &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;k&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bcfde39641ece45e1c9d47a339ad0fb99632d11" translate="yes" xml:space="preserve">
          <source>Skips bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59025c2a8fea79b1ce89cedae83d00e3f657be0" translate="yes" xml:space="preserve">
          <source>Skips characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4516d7648630dbe89c84e6a12eee2ceb3ab117" translate="yes" xml:space="preserve">
          <source>Skips characters. Returns the number of characters that were skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3103c970fcd30c607ae7e523c6153a21788b315f" translate="yes" xml:space="preserve">
          <source>Skips characters. This method will block until some characters are available, an I/O error occurs, or the end of the stream is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c72f91f53fe2a0745ce0da45c14e574d088c5c7" translate="yes" xml:space="preserve">
          <source>Skips input that matches a pattern constructed from the specified string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9462e3256e9fdade9ce860f68c6d60b393fe9b" translate="yes" xml:space="preserve">
          <source>Skips input that matches the specified pattern, ignoring delimiters. This method will skip input if an anchored match of the specified pattern succeeds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfdc2f0438c03c5c0ead6d680d9ff43e38331cf" translate="yes" xml:space="preserve">
          <source>Skips n bytes of input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff737c74738849cf965376748ec94336e0f04f9" translate="yes" xml:space="preserve">
          <source>Skips over and discards &lt;code&gt;n&lt;/code&gt; bytes of data from the input stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7483c2413b0abc33cd07a0a813b97b327671f0d0" translate="yes" xml:space="preserve">
          <source>Skips over and discards &lt;code&gt;n&lt;/code&gt; bytes of data from the input stream. The &lt;code&gt;skip&lt;/code&gt; method may, for a variety of reasons, end up skipping over some smaller number of bytes, possibly &lt;code&gt;0&lt;/code&gt;. The actual number of bytes skipped is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411e06bbdbce07af7d16adaa11f7a7225210eea6" translate="yes" xml:space="preserve">
          <source>Skips over and discards &lt;code&gt;n&lt;/code&gt; bytes of data from this input stream. The &lt;code&gt;skip&lt;/code&gt; method may, for a variety of reasons, end up skipping over some smaller number of bytes, possibly &lt;code&gt;0&lt;/code&gt;. The actual number of bytes skipped is returned. If &lt;code&gt;n&lt;/code&gt; is negative, no bytes are skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01089da09612b3a13ee575aac31cefaa6465a7" translate="yes" xml:space="preserve">
          <source>Skips over and discards &lt;code&gt;n&lt;/code&gt; bytes of data from this input stream. The &lt;code&gt;skip&lt;/code&gt; method may, for a variety of reasons, end up skipping over some smaller number of bytes, possibly &lt;code&gt;0&lt;/code&gt;. This may result from any of a number of conditions; reaching end of file before &lt;code&gt;n&lt;/code&gt; bytes have been skipped is only one possibility. The actual number of bytes skipped is returned. If &lt;code&gt;n&lt;/code&gt; is negative, the &lt;code&gt;skip&lt;/code&gt; method for class &lt;code&gt;InputStream&lt;/code&gt; always returns 0, and no bytes are skipped. Subclasses may handle the negative value differently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073c0b076aa82772d2984a9c3837373a341d476e" translate="yes" xml:space="preserve">
          <source>Skips over and discards &lt;code&gt;n&lt;/code&gt; bytes of data from this input stream. The &lt;code&gt;skip&lt;/code&gt; method may, for a variety of reasons, end up skipping over some smaller number of bytes, possibly zero. If &lt;code&gt;n&lt;/code&gt; is negative, no bytes are skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3e29a6dca6704179998cd33b090db4a4277adc" translate="yes" xml:space="preserve">
          <source>Skips over and discards a specified number of bytes from this audio input stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab38fb72013ea7af911c707043c9ba0c365404b1" translate="yes" xml:space="preserve">
          <source>Skips over and discards data from the input stream. This method may block until the specified number of bytes are read and skipped. &lt;em&gt;Note:&lt;/em&gt; While &lt;code&gt;n&lt;/code&gt; is given as a &lt;code&gt;long&lt;/code&gt;, the maximum number of bytes which can be skipped is &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c25b7239a8e4a015851bdd5c118b8db2c6c038" translate="yes" xml:space="preserve">
          <source>Skips specified number of bytes in the current ZIP entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2b2c97abc2f97abac9a307599288201c4a58b9" translate="yes" xml:space="preserve">
          <source>Skips specified number of bytes of input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5108436b95d3e973d46e565c8fbbf664b8319ed" translate="yes" xml:space="preserve">
          <source>Skips specified number of bytes of uncompressed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962212c3e3223740d6c929301abf849b9ac18a74" translate="yes" xml:space="preserve">
          <source>Skips the specified number of characters in the stream. Returns the number of characters that were skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1303cb19d701ddb4aad3e958a16e82eff51368" translate="yes" xml:space="preserve">
          <source>So far, all the stream examples have used methods like &lt;a href=&quot;../collection#stream--&quot;&gt;&lt;code&gt;Collection.stream()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../arrays#stream-T:A-&quot;&gt;&lt;code&gt;Arrays.stream(Object[])&lt;/code&gt;&lt;/a&gt; to obtain a stream. How are those stream-bearing methods implemented?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb1336faa113e50b35bb34f0d974d532f258fa3" translate="yes" xml:space="preserve">
          <source>So for an input class foo.bah.Fred, the PropertyEditorManager would first look in its tables to see if an editor had been registered for foo.bah.Fred and if so use that. Then it will look for a foo.bah.FredEditor class. Then it will look for (say) standardEditorsPackage.FredEditor class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfc7be81a4cc8fcbf96f65c0171b2ec2a1250a2" translate="yes" xml:space="preserve">
          <source>So we can evaluate &lt;code&gt;(a op b)&lt;/code&gt; in parallel with &lt;code&gt;(c op d)&lt;/code&gt;, and then invoke &lt;code&gt;op&lt;/code&gt; on the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34518b81c73bc76b668a0946a03c8144323e677c" translate="yes" xml:space="preserve">
          <source>So, we might define &lt;code&gt;MemoryUsage&lt;/code&gt; like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c6a1f183694628e37ced41591147bfc0da1908" translate="yes" xml:space="preserve">
          <source>Socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771b15d5d2f23d607da96c5b2f1d9dd6a0a3380d" translate="yes" xml:space="preserve">
          <source>Socket channels are safe for use by multiple concurrent threads. They support concurrent reading and writing, though at most one thread may be reading and at most one thread may be writing at any given time. The &lt;a href=&quot;socketchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;socketchannel#finishConnect--&quot;&gt;&lt;code&gt;finishConnect&lt;/code&gt;&lt;/a&gt; methods are mutually synchronized against each other, and an attempt to initiate a read or write operation while an invocation of one of these methods is in progress will block until that invocation is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28ecf3fa2ed19b3a307b5b7fd093ba8b47c3778" translate="yes" xml:space="preserve">
          <source>Socket channels support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34347d329b8d59ad836d94909991d9e2e484aaf" translate="yes" xml:space="preserve">
          <source>Socket channels support connecting, reading, and writing, so this method returns &lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;selectionkey#OP_CONNECT&quot;&gt;&lt;code&gt;SelectionKey.OP_CONNECT&lt;/code&gt;&lt;/a&gt;&lt;code&gt;|&lt;/code&gt;&lt;a href=&quot;selectionkey#OP_READ&quot;&gt;&lt;code&gt;SelectionKey.OP_READ&lt;/code&gt;&lt;/a&gt;&lt;code&gt;|&lt;/code&gt;&lt;a href=&quot;selectionkey#OP_WRITE&quot;&gt;&lt;code&gt;SelectionKey.OP_WRITE&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fb7f0eb6b67f4d3e41e191153c8aa0f0a17ae5" translate="yes" xml:space="preserve">
          <source>Socket factories are a simple way to capture a variety of policies related to the sockets being constructed, producing such sockets in a way which does not require special configuration of the code which asks for the sockets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6b1d1bc134488e2b8fd4d4a22d3deba7e8a1cd" translate="yes" xml:space="preserve">
          <source>Socket options are configured using the &lt;a href=&quot;asynchronousserversocketchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; method. Channels of this type support the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093e97ad85777df3a9822fd21ac541018ee2f51d" translate="yes" xml:space="preserve">
          <source>Socket options are configured using the &lt;a href=&quot;asynchronoussocketchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; method. Asynchronous socket channels support the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f59f1475411fb4a31f65c24ceedba959492f74" translate="yes" xml:space="preserve">
          <source>Socket options are configured using the &lt;a href=&quot;datagramchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; method. A datagram channel to an Internet Protocol socket supports the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e23fb55fde2943a77a3214461faa62e7d3958c" translate="yes" xml:space="preserve">
          <source>Socket options are configured using the &lt;a href=&quot;serversocketchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; method. Server-socket channels support the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a62d8eaae042a17688344d30277cece7bde8e530" translate="yes" xml:space="preserve">
          <source>Socket options are configured using the &lt;a href=&quot;socketchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; method. Socket channels support the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ece51c188dc72c481ee9dc6e2dcdc9b55c874f" translate="yes" xml:space="preserve">
          <source>Socket.bind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a273976664e13c556e12222c5cf3f399f5bc17c" translate="yes" xml:space="preserve">
          <source>Socket.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b05314fc36487c41a43e311c1fe8a515305d77a" translate="yes" xml:space="preserve">
          <source>Socket.connect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4729ae72b1ff77da758efb47aae918cb23ac8ea8" translate="yes" xml:space="preserve">
          <source>Socket.getChannel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ab5d28b8acb50fcbaed96e20c0e87d845c0306" translate="yes" xml:space="preserve">
          <source>Socket.getInetAddress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eccf43c7ff57a33c6168bf0010982e6e8b6061f" translate="yes" xml:space="preserve">
          <source>Socket.getInputStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a54a94f5f5e0df6f0de01251ee53bee518036b" translate="yes" xml:space="preserve">
          <source>Socket.getKeepAlive()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411a2a97b4c0ca8ff257bfae7a23a4e8de20601a" translate="yes" xml:space="preserve">
          <source>Socket.getLocalAddress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94708a8a8a07eb1acabcd11748f3e796c415c3e" translate="yes" xml:space="preserve">
          <source>Socket.getLocalPort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f1d3d3ffd54c07ee946638c445a1f0c6c2d4df" translate="yes" xml:space="preserve">
          <source>Socket.getLocalSocketAddress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e0bb7fbb00a44c5b42d34def53ad72d4f2be5c" translate="yes" xml:space="preserve">
          <source>Socket.getOOBInline()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b918aa976cdbe215d95e0a3dfa2a8bb04e91e57b" translate="yes" xml:space="preserve">
          <source>Socket.getOutputStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58382e1ce78fa12901b7571cfd67f7803fec994" translate="yes" xml:space="preserve">
          <source>Socket.getPort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ffc376a6d99af03d77f827f0c41abce136ad07" translate="yes" xml:space="preserve">
          <source>Socket.getReceiveBufferSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ea99b8c1abd45fbeccb2c84615ade76c4cf90f" translate="yes" xml:space="preserve">
          <source>Socket.getRemoteSocketAddress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4c2f416d5da79122206115d47092e675427959" translate="yes" xml:space="preserve">
          <source>Socket.getReuseAddress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d62659329bac4768ccaa66025f468b67cbf77b" translate="yes" xml:space="preserve">
          <source>Socket.getSendBufferSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f4db5058a08b5e5a1f2c17a3da8cf24e437d00" translate="yes" xml:space="preserve">
          <source>Socket.getSoLinger()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe82e6c6fc2562793ab79823f767ee38a09fd9ea" translate="yes" xml:space="preserve">
          <source>Socket.getSoTimeout()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63a5e51962446f2383837a5db6241c629ba4feb" translate="yes" xml:space="preserve">
          <source>Socket.getTcpNoDelay()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017bc4c4a18d74e03a61ba44fd1bfd1276fd4fae" translate="yes" xml:space="preserve">
          <source>Socket.getTrafficClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372cde142505889b4e8478da2b4f90425ee09df1" translate="yes" xml:space="preserve">
          <source>Socket.isBound()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbaefc992adfd41fc5e0de7f96759ea6d4633f1f" translate="yes" xml:space="preserve">
          <source>Socket.isClosed()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240fb1fee2f1919c05eb6c5510e3645d4a61cf1a" translate="yes" xml:space="preserve">
          <source>Socket.isConnected()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6152dfe1564ea1e8ed38e1a2a38d42a93f51fd1f" translate="yes" xml:space="preserve">
          <source>Socket.isInputShutdown()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bc45cc33e05470e498932df3ca156351e45eb8" translate="yes" xml:space="preserve">
          <source>Socket.isOutputShutdown()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e849749c2922b4a3fc593c336eaa0c88ea15c759" translate="yes" xml:space="preserve">
          <source>Socket.sendUrgentData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8b7a408da7584a1ab7e3dbfbeed175eaedcd4d" translate="yes" xml:space="preserve">
          <source>Socket.setKeepAlive()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2e84b227bc6837fbf0daecb2e6d3241eedb07b" translate="yes" xml:space="preserve">
          <source>Socket.setOOBInline()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39571801c75e21827246c459780b52785150b46d" translate="yes" xml:space="preserve">
          <source>Socket.setPerformancePreferences()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd817fbf9746f3d5bf7a4af6de4851be87a9b52b" translate="yes" xml:space="preserve">
          <source>Socket.setReceiveBufferSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e014584d2a091a31cd327b0fd9e28155384a5d" translate="yes" xml:space="preserve">
          <source>Socket.setReuseAddress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62aeeeb5be3e0204c27464c5761975f51202527c" translate="yes" xml:space="preserve">
          <source>Socket.setSendBufferSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbf578afa17db6e2c9ef564c869af6a43f63045" translate="yes" xml:space="preserve">
          <source>Socket.setSoLinger()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90ec147a00b9a490156e2ee74817e8440667067" translate="yes" xml:space="preserve">
          <source>Socket.setSoTimeout()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cda88a17fdc100dd89a3805b865c174255da887" translate="yes" xml:space="preserve">
          <source>Socket.setSocketImplFactory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2e15d021b9b8c340f30d056abcb3fef0bcd5eb" translate="yes" xml:space="preserve">
          <source>Socket.setTcpNoDelay()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffabe51e5a35f557de443d542ec50549321bd56b" translate="yes" xml:space="preserve">
          <source>Socket.setTrafficClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6f7a818010a862809f454d05e42fdc941ed9d9" translate="yes" xml:space="preserve">
          <source>Socket.shutdownInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b21568deebf591a568f652f0d71c5fd29354ca" translate="yes" xml:space="preserve">
          <source>Socket.shutdownOutput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6838ffce7bc563d3749dbf1dd71292c7becd4c" translate="yes" xml:space="preserve">
          <source>Socket.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc524bfdf9f7eaf4f66ee118a1765de6a0fe738" translate="yes" xml:space="preserve">
          <source>SocketAddress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc97a79464c876abbceeadf093ab134a48373e9" translate="yes" xml:space="preserve">
          <source>SocketChannel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd84163b2c20901c5010c4b097bd50fbbc73ec1" translate="yes" xml:space="preserve">
          <source>SocketChannel.bind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4ea822cf9ff2cf94c2046881ce4e61f606b3de" translate="yes" xml:space="preserve">
          <source>SocketChannel.connect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d3b35339a40c86b741559e0027ac300c7c41ab" translate="yes" xml:space="preserve">
          <source>SocketChannel.finishConnect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fa40ebad9d50b37be095b8d13f15fd12314f51" translate="yes" xml:space="preserve">
          <source>SocketChannel.getLocalAddress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab23679ab97471766f8e6a5c11091e2f6c9bbad9" translate="yes" xml:space="preserve">
          <source>SocketChannel.getRemoteAddress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f110b7e513bb5ea6fd3711e2c01b9621787dfb" translate="yes" xml:space="preserve">
          <source>SocketChannel.isConnected()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44493cf0745eb3e0886345866b21471b53c87e7c" translate="yes" xml:space="preserve">
          <source>SocketChannel.isConnectionPending()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8734b852362d21d3fa2b78065e877bbfb61d4d" translate="yes" xml:space="preserve">
          <source>SocketChannel.open()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a712e99ddc78e345be96c4ea0bc1cbcfc44fc595" translate="yes" xml:space="preserve">
          <source>SocketChannel.read()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f4413a362c658f22624db593462416d1566853" translate="yes" xml:space="preserve">
          <source>SocketChannel.setOption()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4baf22cd83d99ddee8908addd9bbfbe1a40b05b" translate="yes" xml:space="preserve">
          <source>SocketChannel.shutdownInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35411a4be24feff0355d4520b08da3301f4a7ff7" translate="yes" xml:space="preserve">
          <source>SocketChannel.shutdownOutput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d3f719dd460d3e4b963acaab0e412798a789ae" translate="yes" xml:space="preserve">
          <source>SocketChannel.socket()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6712a29fbccf8f6045891b6f6e7e76c5f1271ec6" translate="yes" xml:space="preserve">
          <source>SocketChannel.validOps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9379fb532efa8c847495e4268f088c5c52da4cf0" translate="yes" xml:space="preserve">
          <source>SocketChannel.write()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28feb761f19cb4369ba31370ce06e7df5de9571b" translate="yes" xml:space="preserve">
          <source>SocketException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf52408f27fcc32f6f83a6b4e517f2136174bc1" translate="yes" xml:space="preserve">
          <source>SocketFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fba7fe199d9d73b3496dc49900ea8829d8e719" translate="yes" xml:space="preserve">
          <source>SocketFactory.createSocket()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b09ddaa761961257f378f38ca192154e70998e8" translate="yes" xml:space="preserve">
          <source>SocketFactory.getDefault()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d740a23427e188e3df3355643cd06a5a8c258af2" translate="yes" xml:space="preserve">
          <source>SocketHandler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8bcb1caec0aed1f6160268501ddd528bfe2314" translate="yes" xml:space="preserve">
          <source>SocketHandler.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d822375a8a461ba9aafe58e0c8bf32a973ad61c" translate="yes" xml:space="preserve">
          <source>SocketHandler.publish()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4055058c493b52ebcbfda225215632a551f21c8" translate="yes" xml:space="preserve">
          <source>SocketImpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028db0ddcc9e7e6203dcd29fbca6cd1fd4b91af2" translate="yes" xml:space="preserve">
          <source>SocketImpl.accept()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396c3b391cdbd6735c816170b7626d05def4c2ad" translate="yes" xml:space="preserve">
          <source>SocketImpl.available()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72225c5c9591d3fb61c12ef43289886e511ef0d" translate="yes" xml:space="preserve">
          <source>SocketImpl.bind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9e2e6426fa411f20c2a7fb8b5899fb40f1026b" translate="yes" xml:space="preserve">
          <source>SocketImpl.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2f2d28743f38970508ffbd2b182a39378441d9" translate="yes" xml:space="preserve">
          <source>SocketImpl.connect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8056eae538a94b8985ece3dab2873c687c4b8f0e" translate="yes" xml:space="preserve">
          <source>SocketImpl.create()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35481c7852bb1e11ac1ac83e7f73dab968b44aae" translate="yes" xml:space="preserve">
          <source>SocketImpl.getFileDescriptor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c03ea2243dfca9ea01621cc08db20ffebcc29a8" translate="yes" xml:space="preserve">
          <source>SocketImpl.getInetAddress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf9da8e7ca77e455692195a4c524a4976291f9a" translate="yes" xml:space="preserve">
          <source>SocketImpl.getInputStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebbcdc787ca73af6d93d6cf0eaa09f9f8c8f439" translate="yes" xml:space="preserve">
          <source>SocketImpl.getLocalPort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720f275e5458d203eac559931d246411834d34a9" translate="yes" xml:space="preserve">
          <source>SocketImpl.getOutputStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70a2e96fd115debb1e7f064a6ba20b5533a9d7d" translate="yes" xml:space="preserve">
          <source>SocketImpl.getPort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2b49c76bd0dcaf82a7a37ae1c5627bd2389f0b" translate="yes" xml:space="preserve">
          <source>SocketImpl.listen()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda8936097e440e4338ce0a4b4510acdaeae5065" translate="yes" xml:space="preserve">
          <source>SocketImpl.sendUrgentData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d04688d9977ccbe649ac73693778324e6f64c4d" translate="yes" xml:space="preserve">
          <source>SocketImpl.setPerformancePreferences()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c534c99b961fc843801ea594c38a5ae5191049e1" translate="yes" xml:space="preserve">
          <source>SocketImpl.shutdownInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fad8869718ed053d73e9cc68d4a65d069cf9b5" translate="yes" xml:space="preserve">
          <source>SocketImpl.shutdownOutput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0104edee255964550530dea7107b158c19858f99" translate="yes" xml:space="preserve">
          <source>SocketImpl.supportsUrgentData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f8a46490ff0d5a703f776dd768af923a313a82" translate="yes" xml:space="preserve">
          <source>SocketImpl.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e58254e8d18fcb0335507bb2671fd087dd8942" translate="yes" xml:space="preserve">
          <source>SocketImplFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd9541514e0944a7464840cd69ff77bfd59b7af" translate="yes" xml:space="preserve">
          <source>SocketImplFactory.createSocketImpl()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9959dcc5b082074f1f229b93668a78effa1f5fb2" translate="yes" xml:space="preserve">
          <source>SocketOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca43783f0599cd6fdb3adab168055980b1467f67" translate="yes" xml:space="preserve">
          <source>SocketOption.name()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0b89511bfe87a02c7c78cf6f05b9a2458a9244" translate="yes" xml:space="preserve">
          <source>SocketOption.type()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c51b2c605565efc183e8f4f59c4ba1b6cedea3" translate="yes" xml:space="preserve">
          <source>SocketOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0496bdd8e496cd031c7d1abda6192a82b043e1b4" translate="yes" xml:space="preserve">
          <source>SocketOptions.getOption()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf5681ac58e8532d685a53256a5c56fd777ae52" translate="yes" xml:space="preserve">
          <source>SocketOptions.setOption()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289fb07f3d1298f0d3f409824381ccecf26f5f55" translate="yes" xml:space="preserve">
          <source>SocketPermission</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb8ea87ac3fa189726480617f46c5cebb94ec42" translate="yes" xml:space="preserve">
          <source>SocketPermission objects must be stored in a manner that allows them to be inserted into the collection in any order, but that also enables the PermissionCollection &lt;code&gt;implies&lt;/code&gt; method to be implemented in an efficient (and consistent) manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c32a7dfdd8b91464723054dcfa99a660e77b40" translate="yes" xml:space="preserve">
          <source>SocketPermission.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f27e74747e457ab611a1601ebfb2ebd5ad27ad2" translate="yes" xml:space="preserve">
          <source>SocketPermission.getActions()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f8976377e8842e6e75748800679d7328e45d11" translate="yes" xml:space="preserve">
          <source>SocketPermission.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b0c6f1f91abb93d80bf704011b6c5eeec68686" translate="yes" xml:space="preserve">
          <source>SocketPermission.implies()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43cfa9ba2fb1160e16ac28191f9475ea83c9c1fa" translate="yes" xml:space="preserve">
          <source>SocketPermission.newPermissionCollection()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7412b65531493ba95ab76442a9a82f84a981c580" translate="yes" xml:space="preserve">
          <source>SocketTimeoutException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508c36b3241ae34627fb1cadebb1f27b16e0f61a" translate="yes" xml:space="preserve">
          <source>Sockets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee724bb0df9582e81de3062501ae38e512b986a" translate="yes" xml:space="preserve">
          <source>Sockets are means to establish a communication link between machines over the network. The java.net package provides 4 kinds of Sockets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffd5dac7fb44e6e5d38a1a5cda137f91eecf1ba" translate="yes" xml:space="preserve">
          <source>Sockets use the TCP/IP protocol by default. Some implementations may offer alternative protocols which have different performance characteristics than TCP/IP. This method allows the application to express its own preferences as to how these tradeoffs should be made when the implementation chooses from the available protocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d51998c204e7cd42436cd317c28c613a816251" translate="yes" xml:space="preserve">
          <source>Soft reference objects, which are cleared at the discretion of the garbage collector in response to memory demand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd41ac8573df24ef5d37a14a718a4d516483887" translate="yes" xml:space="preserve">
          <source>Soft reference objects, which are cleared at the discretion of the garbage collector in response to memory demand. Soft references are most often used to implement memory-sensitive caches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f831cb3d4ae7e8a2275a17269e1c0719d54638a0" translate="yes" xml:space="preserve">
          <source>SoftReference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5895d654e6f1535e0407dca71fb33d101f631e3a" translate="yes" xml:space="preserve">
          <source>SoftReference.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34270de73b2218b81777e4bd10c2c163e96c59b" translate="yes" xml:space="preserve">
          <source>Sole constructor. (For invocation by subclass constructors, typically implicit.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dadff93971ff1292581e90a6d654eb34b9b957e" translate="yes" xml:space="preserve">
          <source>Sole constructor. Programmers cannot invoke this constructor. It is for use by code emitted by the compiler in response to enum type declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9088f82cc959b53ab0d5cec02ffecba66ab221" translate="yes" xml:space="preserve">
          <source>Some &lt;code&gt;CertStore&lt;/code&gt; implementations (especially LDAP &lt;code&gt;CertStore&lt;/code&gt;s) may throw a &lt;code&gt;CertStoreException&lt;/code&gt; unless a non-null &lt;code&gt;CRLSelector&lt;/code&gt; is provided that includes specific criteria that can be used to find the CRLs. Issuer names and/or the certificate to be checked are especially useful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c089854edb115f62bf13bfac5518de27718155f" translate="yes" xml:space="preserve">
          <source>Some &lt;code&gt;CertStore&lt;/code&gt; implementations (especially LDAP &lt;code&gt;CertStore&lt;/code&gt;s) may throw a &lt;code&gt;CertStoreException&lt;/code&gt; unless a non-null &lt;code&gt;CertSelector&lt;/code&gt; is provided that includes specific criteria that can be used to find the certificates. Issuer and/or subject names are especially useful criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d0098e02eab981514f62053cdaf2d43c31ed56" translate="yes" xml:space="preserve">
          <source>Some &lt;code&gt;Handlers&lt;/code&gt; may not use &lt;code&gt;Formatters&lt;/code&gt;, in which case the &lt;code&gt;Formatter&lt;/code&gt; will be remembered, but not used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdb5a5ed80faa8904a5ed78642ee9c428fc1bb3" translate="yes" xml:space="preserve">
          <source>Some Java virtual machine implementations may take input arguments from multiple different sources: for examples, arguments passed from the application that launches the Java virtual machine such as the 'java' command, environment variables, configuration files, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b981461536cfb12c787a3c0ec9eb46e4ea254c9e" translate="yes" xml:space="preserve">
          <source>Some Java virtual machines may support monitoring of &lt;a href=&quot;threadmxbean#isObjectMonitorUsageSupported--&quot;&gt;object monitor usage&lt;/a&gt; and &lt;a href=&quot;threadmxbean#isSynchronizerUsageSupported--&quot;&gt;ownable synchronizer usage&lt;/a&gt;. The &lt;a href=&quot;threadmxbean#getThreadInfo-long:A-boolean-boolean-&quot;&gt;&lt;code&gt;getThreadInfo(long[], boolean, boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;threadmxbean#dumpAllThreads-boolean-boolean-&quot;&gt;&lt;code&gt;dumpAllThreads(boolean, boolean)&lt;/code&gt;&lt;/a&gt; methods can be used to obtain the thread stack trace and synchronization information including which &lt;a href=&quot;lockinfo&quot;&gt;&lt;i&gt;lock&lt;/i&gt;&lt;/a&gt; a thread is blocked to acquire or waiting on and which locks the thread currently owns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39ed35b65b34bcf2dc758c17d750edd6506c979" translate="yes" xml:space="preserve">
          <source>Some Java virtual machines may support thread contention monitoring. When thread contention monitoring is enabled, the accumulated elapsed time that the thread has blocked for synchronization or waited for notification will be collected and returned in the &lt;a href=&quot;threadinfo#SyncStats&quot;&gt;&lt;code&gt;ThreadInfo&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21400a7c7700d8ce2be055e4a9aeeaacd12eb6a" translate="yes" xml:space="preserve">
          <source>Some Java virtual machines may, under some circumstances, omit one or more stack frames from the stack trace. In the extreme case, a virtual machine that has no stack trace information concerning the thread associated with this &lt;code&gt;ThreadInfo&lt;/code&gt; is permitted to return a zero-length array from this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12058e0ff61809d2ab8bfb8b5507d25c9f348b9" translate="yes" xml:space="preserve">
          <source>Some Unicode character ranges that contain digits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4553b7f7d74ca5e0566298dca06c88540d3d95d0" translate="yes" xml:space="preserve">
          <source>Some additional fields are defined by Model MBeans. See the information for &lt;a href=&quot;modelmbean/modelmbeaninfo#descriptor&quot;&gt;&lt;code&gt;ModelMBeanInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;modelmbean/modelmbeanattributeinfo#descriptor&quot;&gt;&lt;code&gt;ModelMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;modelmbean/modelmbeanconstructorinfo#descriptor&quot;&gt;&lt;code&gt;ModelMBeanConstructorInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;modelmbean/modelmbeannotificationinfo#descriptor&quot;&gt;&lt;code&gt;ModelMBeanNotificationInfo&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;modelmbean/modelmbeanoperationinfo#descriptor&quot;&gt;&lt;code&gt;ModelMBeanOperationInfo&lt;/code&gt;&lt;/a&gt;, as well as the chapter &quot;Model MBeans&quot; of the &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/tech/javamanagement-140525.html&quot;&gt;JMX Specification&lt;/a&gt;. The following table summarizes these fields. Note that when the Type in this table is Number, a String that is the decimal representation of a Long can also be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d20eb9e9d4010319fbc968e32ec79f29613da2d" translate="yes" xml:space="preserve">
          <source>Some applications may need to use the older &lt;a href=&quot;../../text/format&quot;&gt;&lt;code&gt;java.text.Format&lt;/code&gt;&lt;/a&gt; class for formatting. The &lt;a href=&quot;datetimeformatter#toFormat--&quot;&gt;&lt;code&gt;toFormat()&lt;/code&gt;&lt;/a&gt; method returns an implementation of &lt;code&gt;java.text.Format&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a29c565de130acdbda7efebb6e55a0d4055af1" translate="yes" xml:space="preserve">
          <source>Some attributes are both print request attributes and print job attributes; a client may include such attributes in a Print Request to specify characteristics for the ensuing Print Job, and those attributes then also appear in the Print Job's attribute set. Some attributes are print job attributes but not print request attributes; the print service itself adds these attributes to the Print Job's attribute set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75683a01143c7607b73b4c08f0d8ac7b8ff12d9" translate="yes" xml:space="preserve">
          <source>Some attributes are doc attributes but not print request attributes and may only be specified at the doc level. Some attributes are print request attributes but not doc attributes and may only be specified at the Print Request level. Some attributes are both doc attributes and print request attributes and may be specified either at the doc level or at the Print Request level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd3f3bebdddc54b2c2b0f572c997708a5ff97da" translate="yes" xml:space="preserve">
          <source>Some attributes may not be supported in a particular context (ie for a particular &lt;code&gt;DocFlavor&lt;/code&gt;). Use one of the methods that include a &lt;code&gt;DocFlavor&lt;/code&gt; to validate the request before submitting it, such as &lt;code&gt;getSupportedAttributeValues(..)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1f8539cc6e6537209b51abdc75a37c05c3b49e" translate="yes" xml:space="preserve">
          <source>Some attributes must be represented as a record of several values. One example is printer resolution, which requires two numbers, such as 600 and 300 representing 600 x 300 dpi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b07853d0ad5a499792cfcf2cd970ae63d535f66" translate="yes" xml:space="preserve">
          <source>Some categories may not be supported in a particular context (ie for a particular &lt;code&gt;DocFlavor&lt;/code&gt;). Use one of the methods which include a &lt;code&gt;DocFlavor&lt;/code&gt; to validate the request before submitting it, such as &lt;code&gt;getSupportedAttributeValues(..)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fd5519e2ba2f8e0713d448cfa431aab24d74f4" translate="yes" xml:space="preserve">
          <source>Some channels may not allow more than one read or write to be outstanding at any given time. If a thread invokes a read method before a previous read operation has completed then a &lt;a href=&quot;readpendingexception&quot;&gt;&lt;code&gt;ReadPendingException&lt;/code&gt;&lt;/a&gt; will be thrown. Similarly, if a write method is invoked before a previous write has completed then &lt;a href=&quot;writependingexception&quot;&gt;&lt;code&gt;WritePendingException&lt;/code&gt;&lt;/a&gt; is thrown. Whether or not other kinds of I/O operations may proceed concurrently with a read operation depends upon the type of the channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6beff33b5142e343b9cf1ac3b245747400a4a2" translate="yes" xml:space="preserve">
          <source>Some characters look like pairs of Latin letters. For example, there is an uppercase letter that looks like &quot;LJ&quot; and has a corresponding lowercase letter that looks like &quot;lj&quot;. A third form, which looks like &quot;Lj&quot;, is the appropriate form to use when rendering a word in lowercase with initial capitals, as for a book title.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dd67f7b231a6718ea9df12a6595df74f006817" translate="yes" xml:space="preserve">
          <source>Some cipher suites (such as Kerberos) require remote hostname information, in which case peerHost needs to be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc0cad585075334d9589a01627e164aa38b0522" translate="yes" xml:space="preserve">
          <source>Some cipher suites (such as Kerberos) require remote hostname information, in which case this factory method should not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dc4c85d8112eb175158b7f00bedcad0a718d4b" translate="yes" xml:space="preserve">
          <source>Some cipher suites (such as Kerberos) require remote hostname information. Implementations of this class should use this constructor to use Kerberos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4748576001c2e1fa22ab0f76452b1d76a20ab4c" translate="yes" xml:space="preserve">
          <source>Some collection operations which perform recursive traversal of the collection may fail with an exception for self-referential instances where the collection directly or indirectly contains itself. This includes the &lt;code&gt;clone()&lt;/code&gt;, &lt;code&gt;equals()&lt;/code&gt;, &lt;code&gt;hashCode()&lt;/code&gt; and &lt;code&gt;toString()&lt;/code&gt; methods. Implementations may optionally handle the self-referential scenario, however most current implementations do not do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e37a188e06c44c1219cc36705e571d575252e1" translate="yes" xml:space="preserve">
          <source>Some computer standards are defined in terms of Greenwich mean time (GMT), which is equivalent to universal time (UT). GMT is the &quot;civil&quot; name for the standard; UT is the &quot;scientific&quot; name for the same standard. The distinction between UTC and UT is that UTC is based on an atomic clock and UT is based on astronomical observations, which for all practical purposes is an invisibly fine hair to split. Because the earth's rotation is not uniform (it slows down and speeds up in complicated ways), UT does not always flow uniformly. Leap seconds are introduced as needed into UTC so as to keep UTC within 0.9 seconds of UT1, which is a version of UT with certain corrections applied. There are other time and date systems as well; for example, the time scale used by the satellite-based global positioning system (GPS) is synchronized to UTC but is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3aba9c780cecb9f69b57a187b254cd286b8ba41" translate="yes" xml:space="preserve">
          <source>Some decoders maintain internal state and may need to write some final characters to the output buffer once the overall input sequence has been read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c291f4069489a661a16bde251c73be63b4565df" translate="yes" xml:space="preserve">
          <source>Some directories have the notion of &quot;operational attributes&quot; which are attributes associated with a directory object for administrative purposes. An example of operational attributes is the access control list for an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ba3612b9c996274659002f62be0a4c20073549" translate="yes" xml:space="preserve">
          <source>Some directories support the language codes for attributes. Asking such a directory for the &quot;description&quot; attribute, for example, might return all of the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5a71ca3b1da0d4ff3560fddc2f0fef1fc03d21" translate="yes" xml:space="preserve">
          <source>Some encoders maintain internal state and may need to write some final bytes to the output buffer once the overall input sequence has been read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca6411b9e1f1f36aa86d354853a36056f1e9ebf" translate="yes" xml:space="preserve">
          <source>Some example code indicating how and why this method is used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcc59f60b27e41860f53fd32f160bb70ac59880" translate="yes" xml:space="preserve">
          <source>Some example formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d888674614e76b20821c61b5aaa18b5ccd31b4" translate="yes" xml:space="preserve">
          <source>Some examples of how paths are matched are shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75b4338c584ff92f1d2e0127e1aa5c506797211" translate="yes" xml:space="preserve">
          <source>Some formatters (such as the XMLFormatter) need to wrap head and tail strings around a set of formatted records. The getHeader and getTail methods can be used to obtain these strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f86471cab992900ed72fedd9ebbd0f81e1ccc4e" translate="yes" xml:space="preserve">
          <source>Some garbage-collected memory pools may choose not to support the collection usage threshold. For example, a memory pool is only managed by a continuous concurrent garbage collector. Objects can be allocated in this memory pool by some thread while the unused objects are reclaimed by the concurrent garbage collector simultaneously. Unless there is a well-defined garbage collection time which is the best appropriate time to check the memory usage, the collection usage threshold should not be supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b1655f625ee9cff6fcd80263be5e65c5d110ac" translate="yes" xml:space="preserve">
          <source>Some implementations may store default values in their backing stores. If there is no value associated with the specified key but there is such a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b227bbcb319e196a621410240b1661891a00cb5f" translate="yes" xml:space="preserve">
          <source>Some lines, once closed, cannot be reopened. Attempts to reopen such a line will always result in a &lt;code&gt;LineUnavailableException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd938de3900b1d6482b209e8fdc5f861ac2142f" translate="yes" xml:space="preserve">
          <source>Some list implementations have restrictions on the elements that they may contain. For example, some implementations prohibit null elements, and some have restrictions on the types of their elements. Attempting to add an ineligible element throws an unchecked exception, typically &lt;code&gt;NullPointerException&lt;/code&gt; or &lt;code&gt;ClassCastException&lt;/code&gt;. Attempting to query the presence of an ineligible element may throw an exception, or it may simply return false; some implementations will exhibit the former behavior and some will exhibit the latter. More generally, attempting an operation on an ineligible element whose completion would not result in the insertion of an ineligible element into the list may throw an exception or it may succeed, at the option of the implementation. Such exceptions are marked as &quot;optional&quot; in the specification for this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5caaa171bced720bf8bb464714e113c74bcc93" translate="yes" xml:space="preserve">
          <source>Some map implementations have restrictions on the keys and values they may contain. For example, some implementations prohibit null keys and values, and some have restrictions on the types of their keys. Attempting to insert an ineligible key or value throws an unchecked exception, typically &lt;code&gt;NullPointerException&lt;/code&gt; or &lt;code&gt;ClassCastException&lt;/code&gt;. Attempting to query the presence of an ineligible key or value may throw an exception, or it may simply return false; some implementations will exhibit the former behavior and some will exhibit the latter. More generally, attempting an operation on an ineligible key or value whose completion would not result in the insertion of an ineligible element into the map may throw an exception or it may succeed, at the option of the implementation. Such exceptions are marked as &quot;optional&quot; in the specification for this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e305948d25fe203a72f9bfd31a99a322b5d47da" translate="yes" xml:space="preserve">
          <source>Some map operations which perform recursive traversal of the map may fail with an exception for self-referential instances where the map directly or indirectly contains itself. This includes the &lt;code&gt;clone()&lt;/code&gt;, &lt;code&gt;equals()&lt;/code&gt;, &lt;code&gt;hashCode()&lt;/code&gt; and &lt;code&gt;toString()&lt;/code&gt; methods. Implementations may optionally handle the self-referential scenario, however most current implementations do not do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907f5575caf5586626dbf7f721582994fadabfc5" translate="yes" xml:space="preserve">
          <source>Some methods in this interface take a thread ID or an array of thread IDs as the input parameter and return per-thread information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878af4494777b5bb38781159186bebc5aa7eff1c" translate="yes" xml:space="preserve">
          <source>Some methods in this interface use class names. Such class names must be given in the Java Virtual Machine internal form of fully qualified class and interface names. For convenience '.' and '/' are interchangeable. The internal form is defined in chapter four of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a57be871b010231c3794b895a2507f69f552b22" translate="yes" xml:space="preserve">
          <source>Some mixers, especially those with internal digital mixing capabilities, may provide additional capabilities by implementing the &lt;code&gt;DataLine&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa12e07c3bf7c6ed8f673a734d3fe0293a8932c8" translate="yes" xml:space="preserve">
          <source>Some network filesystems permit file locking to be used with memory-mapped files only when the locked regions are page-aligned and a whole multiple of the underlying hardware's page size. Some network filesystems do not implement file locks on regions that extend past a certain position, often 2&lt;sup&gt;30&lt;/sup&gt; or 2&lt;sup&gt;31&lt;/sup&gt;. In general, great care should be taken when locking files that reside on network filesystems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc58dc2a264ac4179aff3581571217c0f5c60870" translate="yes" xml:space="preserve">
          <source>Some non-standard implementation of this method ignores the specified timeout. To see the read timeout set, please call getReadTimeout().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a9f07c76ffa6bc59d1491d39dd4c0ba6a523b1" translate="yes" xml:space="preserve">
          <source>Some non-standard implementation of this method may ignore the specified timeout. To see the connect timeout set, please call getConnectTimeout().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47cac9aef09effc95248ba6d6f7409272c698758" translate="yes" xml:space="preserve">
          <source>Some of the permission classes have an &quot;actions&quot; list that tells the actions that are permitted for the object. For example, for a &lt;code&gt;java.io.FilePermission&lt;/code&gt; object, the actions list (such as &quot;read, write&quot;) specifies which actions are granted for the specified file (or for files in the specified directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1b7ba92052f380eda8f73faa8a739a149629ec" translate="yes" xml:space="preserve">
          <source>Some of these mechanisms provide both authentication and establishment of a security layer, others only authentication. Anonymous and S/Key do not provide for any security layers. GSSAPI and DIGEST-MD5 allow negotiation of the security layer. For External, the security layer is determined by the external protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1148d1e6bd59fc4a19eb0eb564126d3bf77c9978" translate="yes" xml:space="preserve">
          <source>Some operating systems do not support a mechanism to acquire a file lock in an asynchronous manner. Consequently an implementation may acquire the file lock in a background thread or from a task executed by a thread in the associated thread pool. If there are many lock operations outstanding then it may consume threads in the Java virtual machine for indefinite periods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb22ad6487c9d0ed6299308c215836f85b8c15e" translate="yes" xml:space="preserve">
          <source>Some operating systems do not support shared locks, in which case a request for a shared lock is automatically converted into a request for an exclusive lock. Whether the newly-acquired lock is shared or exclusive may be tested by invoking the resulting lock object's &lt;a href=&quot;filelock#isShared--&quot;&gt;&lt;code&gt;isShared&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745c42f19f662b84e370a9d55fed22ba4a619d65" translate="yes" xml:space="preserve">
          <source>Some operating systems may require that the Java virtual machine be started with implementation specific privileges to enable this option or send broadcast datagrams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0192d46041ec740bba5ea97225f7ce29ccbd2161" translate="yes" xml:space="preserve">
          <source>Some other kind of error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80266d8685156e9f6c27c703f836479e07dd40ea" translate="yes" xml:space="preserve">
          <source>Some other thread &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;interrupts&lt;/a&gt; the current thread, and interruption of lock acquisition is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882572968e223b1c765d4ac90c3cbee3bd695c3f" translate="yes" xml:space="preserve">
          <source>Some other thread &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;interrupts&lt;/a&gt; the current thread, and interruption of lock acquisition is supported; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fe23fba4545f524f436ca565bf974b543b66aa" translate="yes" xml:space="preserve">
          <source>Some other thread &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;interrupts&lt;/a&gt; the current thread, and interruption of thread suspension is supported; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0670596f656df6fbf08a02385c51b787d97a92c" translate="yes" xml:space="preserve">
          <source>Some other thread &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;interrupts&lt;/a&gt; the current thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14241d75fd66092543a09c03a5c2ff4f6b1924ad" translate="yes" xml:space="preserve">
          <source>Some other thread &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;interrupts&lt;/a&gt; the current thread; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d925a087b0a6694f31a659f4143c443bc1c6d439" translate="yes" xml:space="preserve">
          <source>Some other thread &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupts&lt;/a&gt; one of the other waiting threads; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2080461f0b07fd523857bc54e34da5499fe01e18" translate="yes" xml:space="preserve">
          <source>Some other thread &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupts&lt;/a&gt; the current thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cb809cfa3b983354b5255b8cd8b63c6ec7b319" translate="yes" xml:space="preserve">
          <source>Some other thread &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupts&lt;/a&gt; the current thread; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcc52d083097c30174331e61a8518633792d986" translate="yes" xml:space="preserve">
          <source>Some other thread &lt;a href=&quot;thread#interrupt--&quot;&gt;interrupts&lt;/a&gt; thread &lt;var&gt;T&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903f3b14d7295b81f6f6f5c70ca19d1ec6a200e1" translate="yes" xml:space="preserve">
          <source>Some other thread enters the exchange; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba34d2284fe5eb50d1dfad3544e86b4c4a513e2e" translate="yes" xml:space="preserve">
          <source>Some other thread invokes &lt;a href=&quot;cyclicbarrier#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; on this barrier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed7db2f562adcb8c074a8ee4487bd87ea06d915" translate="yes" xml:space="preserve">
          <source>Some other thread invokes &lt;a href=&quot;locksupport#unpark-java.lang.Thread-&quot;&gt;&lt;code&gt;unpark&lt;/code&gt;&lt;/a&gt; with the current thread as the target; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8677156e8394b1dc0f59ffd66a5d84bca82ffe11" translate="yes" xml:space="preserve">
          <source>Some other thread invokes one of the &lt;a href=&quot;semaphore#release--&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; methods for this semaphore, the current thread is next to be assigned permits and the number of available permits satisfies this request; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59547bd4acfc6327afe8750b4b9a6ff02df86b1" translate="yes" xml:space="preserve">
          <source>Some other thread invokes the &lt;a href=&quot;condition#signal--&quot;&gt;&lt;code&gt;signal()&lt;/code&gt;&lt;/a&gt; method for this &lt;code&gt;Condition&lt;/code&gt; and the current thread happens to be chosen as the thread to be awakened; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3088d69d47f1bc5bbc74c03ab9beafc073da91c3" translate="yes" xml:space="preserve">
          <source>Some other thread invokes the &lt;a href=&quot;condition#signalAll--&quot;&gt;&lt;code&gt;signalAll()&lt;/code&gt;&lt;/a&gt; method for this &lt;code&gt;Condition&lt;/code&gt;; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f514ef85d4b07023f918c823aa09c8b4063df158" translate="yes" xml:space="preserve">
          <source>Some other thread invokes the &lt;a href=&quot;semaphore#release--&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method for this semaphore and the current thread is next to be assigned a permit; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8f55f2bfc09a7393f7244d132276fd0996d3bf" translate="yes" xml:space="preserve">
          <source>Some other thread invokes the &lt;code&gt;notify&lt;/code&gt; method for this object and thread &lt;var&gt;T&lt;/var&gt; happens to be arbitrarily chosen as the thread to be awakened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8b2bd2e6e9f2771a08a435fb3ebc1fb05cadf1" translate="yes" xml:space="preserve">
          <source>Some other thread invokes the &lt;code&gt;notifyAll&lt;/code&gt; method for this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f21e7c32c529b174c67262b0caabeb3e188c267" translate="yes" xml:space="preserve">
          <source>Some other thread times out while waiting for barrier; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c61713bfd0855f09a577a23fa96536534847c3" translate="yes" xml:space="preserve">
          <source>Some protocols do caching of documents. Occasionally, it is important to be able to &quot;tunnel through&quot; and ignore the caches (e.g., the &quot;reload&quot; button in a browser). If the UseCaches flag on a connection is true, the connection is allowed to use whatever caches it can. If false, caches are to be ignored. The default value comes from DefaultUseCaches, which defaults to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ebb299fb1d22a23013f3524b36984551a730c1c" translate="yes" xml:space="preserve">
          <source>Some protocols may not support multiple handshakes on an existing engine and may throw an &lt;code&gt;SSLException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1b9b71b5574636d6c598ec11a728dada8693c4" translate="yes" xml:space="preserve">
          <source>Some protocols support skipping the fetching of the object unless the object has been modified more recently than a certain time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5bc4e5461b5c3ffca2edd7ba00e992601ceabc" translate="yes" xml:space="preserve">
          <source>Some provider implementations may encounter unrecoverable internal errors during their operation, for example a failure to communicate with a security token. A &lt;a href=&quot;providerexception&quot;&gt;&lt;code&gt;ProviderException&lt;/code&gt;&lt;/a&gt; should be used to indicate such errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25d6a6fb4f0d210e73192d510230dec4c6c1a86" translate="yes" xml:space="preserve">
          <source>Some set implementations have restrictions on the elements that they may contain. For example, some implementations prohibit null elements, and some have restrictions on the types of their elements. Attempting to add an ineligible element throws an unchecked exception, typically &lt;code&gt;NullPointerException&lt;/code&gt; or &lt;code&gt;ClassCastException&lt;/code&gt;. Attempting to query the presence of an ineligible element may throw an exception, or it may simply return false; some implementations will exhibit the former behavior and some will exhibit the latter. More generally, attempting an operation on an ineligible element whose completion would not result in the insertion of an ineligible element into the set may throw an exception or it may succeed, at the option of the implementation. Such exceptions are marked as &quot;optional&quot; in the specification for this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ee08933023ebccd44ef9f43e73b5529ff7ea6b" translate="yes" xml:space="preserve">
          <source>Some situations require strong random values, such as when creating high-value/long-lived secrets like RSA public/private keys. To help guide applications in selecting a suitable strong &lt;code&gt;SecureRandom&lt;/code&gt; implementation, Java distributions include a list of known strong &lt;code&gt;SecureRandom&lt;/code&gt; implementations in the &lt;code&gt;securerandom.strongAlgorithms&lt;/code&gt; Security property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be07a726b437306b6fe3fbcb845e515b8716bf11" translate="yes" xml:space="preserve">
          <source>Some spliterators, such as the top-level spliterator for an approximately balanced binary tree, will report &lt;code&gt;SIZED&lt;/code&gt; but not &lt;code&gt;SUBSIZED&lt;/code&gt;, since it is common to know the size of the entire tree but not the exact sizes of subtrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34fb38c8b06290b59349432eccc3a3e5bec9429" translate="yes" xml:space="preserve">
          <source>Some standards have defined a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0db343ae2ccd99286f6a6a6df924a9ba1ecadd" translate="yes" xml:space="preserve">
          <source>Some types of lines have configurable properties that may affect resource allocation. For example, a &lt;code&gt;DataLine&lt;/code&gt; must be opened with a particular format and buffer size. Such lines should provide a mechanism for configuring these properties, such as an additional &lt;code&gt;open&lt;/code&gt; method or methods which allow an application to specify the desired settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc291e17b9061876102186764fef43f18bfc3357" translate="yes" xml:space="preserve">
          <source>Some units may return an accurate duration while others return an estimate. For example, days have an estimated duration due to the possibility of daylight saving time changes. To determine if the duration is an estimate, use &lt;a href=&quot;temporalunit#isDurationEstimated--&quot;&gt;&lt;code&gt;isDurationEstimated()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa334f053e4035ad7c87b9bc7d08be0baa4e3cbc" translate="yes" xml:space="preserve">
          <source>Some virtual machines may, under some circumstances, omit one or more stack frames from the stack trace. In the extreme case, a virtual machine that has no stack trace information concerning this thread is permitted to return a zero-length array from this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016fe199bed070a7a79c417b598c63fa040c3cf1" translate="yes" xml:space="preserve">
          <source>Some virtual machines may, under some circumstances, omit one or more stack frames from the stack trace. In the extreme case, a virtual machine that has no stack trace information concerning this throwable is permitted to return a zero-length array from this method. Generally speaking, the array returned by this method will contain one element for every frame that would be printed by &lt;code&gt;printStackTrace&lt;/code&gt;. Writes to the returned array do not affect future calls to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0994e17f23f5df516ab4d232614de1d36689f415" translate="yes" xml:space="preserve">
          <source>Someone has paused the printer and the printer's &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; is STOPPED. In this state, a printer must not produce printed output, but it must perform other operations requested by a client. If a printer had been printing a job when the printer was paused, the Printer must resume printing that job when the printer is no longer paused and leave no evidence in the printed output of such a pause. This value must be supported if the printer can be paused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488a0eb47afa919a54aa9a25f262f181d9dced29" translate="yes" xml:space="preserve">
          <source>Someone has paused the printer, but the device(s) are taking an appreciable time to stop. Later, when all output has stopped, the &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; becomes STOPPED, and the PAUSED value replaces the MOVING_TO_PAUSED value in the &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute. This value must be supported if the printer can be paused and the implementation takes significant time to pause a device in certain circumstances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121f75ef23f5df92ea086d19a42545fac822f90f" translate="yes" xml:space="preserve">
          <source>Someone has removed a printer from service, and the device may be powered down or physically removed. In this state, a printer must not produce printed output, and unless the printer is realized by a print server that is still active, the printer must perform no other operations requested by a client. If a printer had been printing a job when it was shut down, the printer need not resume printing that job when the printer is no longer shut down. If the printer resumes printing such a job, it may leave evidence in the printed output of such a shutdown, e.g. the part printed before the shutdown may be printed a second time after the shutdown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687bc192b4fcc4fc9c6e828b141902d4431972ee" translate="yes" xml:space="preserve">
          <source>Sometimes no valid completion is possible. For example, there is no in-range Mersenne prime starting with 9:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce44007167312f5bfa88f557cbbd20d703898fd" translate="yes" xml:space="preserve">
          <source>Sometimes the unmapped type &lt;em&gt;T&lt;/em&gt; of a method parameter or return value in an MXBean must be represented as a string. If &lt;em&gt;T&lt;/em&gt; is a non-generic type, this string is the value returned by &lt;a href=&quot;../../java/lang/class#getName--&quot;&gt;&lt;code&gt;Class.getName()&lt;/code&gt;&lt;/a&gt;. Otherwise it is the value of &lt;em&gt;genericstring(T)&lt;/em&gt;, defined as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2c5cf870ce8c266f5ef4ae09eee55f6568fd87" translate="yes" xml:space="preserve">
          <source>SortControl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e49a5d326f4a695bd68f6125c4cf493cb82872" translate="yes" xml:space="preserve">
          <source>SortKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15651bfc130f3a8d86f8e924dff07dc445c8085c" translate="yes" xml:space="preserve">
          <source>SortKey.getAttributeID()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bb7b0d9815141d057a4dc64e3cc1b8de10458a" translate="yes" xml:space="preserve">
          <source>SortKey.getMatchingRuleID()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b228ebd08fa436a4914406fd7f25bdfac675d3" translate="yes" xml:space="preserve">
          <source>SortKey.isAscending()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99596ef618492a04c51867586506f19dfd0d6e8" translate="yes" xml:space="preserve">
          <source>SortResponseControl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0cc8a6850627ec7b6d6d34eb2b34225ef86cf4" translate="yes" xml:space="preserve">
          <source>SortResponseControl.getAttributeID()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1f9e229aa454fcf4fb5acf6384c40b6a7392ea" translate="yes" xml:space="preserve">
          <source>SortResponseControl.getException()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8ac45f765514d665bbdae81f57cc89caa78f13" translate="yes" xml:space="preserve">
          <source>SortResponseControl.getResultCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d109d3dba1712ff31c2d470c781d3f3c9420f2" translate="yes" xml:space="preserve">
          <source>SortResponseControl.isSorted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dd71ea546520bb095bac9b2e834e1962639d59" translate="yes" xml:space="preserve">
          <source>SortedMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe3fa408279237ea9658a1dbd3ed8c6d4273845" translate="yes" xml:space="preserve">
          <source>SortedMap.comparator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8e82eeca3e69637937bbbdd7fe282842a1c6c0" translate="yes" xml:space="preserve">
          <source>SortedMap.entrySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c502a641561519926619a7876990fe35fdb12cb5" translate="yes" xml:space="preserve">
          <source>SortedMap.firstKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e73a26a6c3adb042aed947a4659cc758cef99f" translate="yes" xml:space="preserve">
          <source>SortedMap.headMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f876b9488d14ad2709da0faa84824aae9cd5e6" translate="yes" xml:space="preserve">
          <source>SortedMap.keySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66126ef7e08cb488b361d33f418240c62bf8f5ee" translate="yes" xml:space="preserve">
          <source>SortedMap.lastKey()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a04cf62a0a8ae99d88eb5861cf6ada88fbc98a0" translate="yes" xml:space="preserve">
          <source>SortedMap.subMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3af7a92092e1aa1f48a28c2930df1f1d90e3fd" translate="yes" xml:space="preserve">
          <source>SortedMap.tailMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064f600e7794d9c48e22dd38fd3051f2f0feb423" translate="yes" xml:space="preserve">
          <source>SortedMap.values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ccbb93c5fe56b6e2282fb6bf87a67e58f66512" translate="yes" xml:space="preserve">
          <source>SortedSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58bb09076a1226445048ddebde73072170fe9787" translate="yes" xml:space="preserve">
          <source>SortedSet.comparator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f930da66a1317b73b8a26db8b1ae79188b27ff36" translate="yes" xml:space="preserve">
          <source>SortedSet.first()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b307ab123228af42778b807567abe3ccc2abeb" translate="yes" xml:space="preserve">
          <source>SortedSet.headSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5294c521bd928e4d2d0da70c110417070aa869e1" translate="yes" xml:space="preserve">
          <source>SortedSet.last()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bcef4500f4c270cbd31c764e9d6d03fbbe0d50" translate="yes" xml:space="preserve">
          <source>SortedSet.spliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e4c0b4c2ab6cce6b00c8f163209136deb37ec2" translate="yes" xml:space="preserve">
          <source>SortedSet.subSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f5dd2eecc2ca2c58d9aac4d7ad1cbdcc9e4ffc" translate="yes" xml:space="preserve">
          <source>SortedSet.tailSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e624c97094dba9989cba109ca6ab6ae8a4a9b7d6" translate="yes" xml:space="preserve">
          <source>Sorts the specified array into ascending numerical order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb89db0b7c3d181d1b13a5f3c45a5d595374ad60" translate="yes" xml:space="preserve">
          <source>Sorts the specified array of objects according to the order induced by the specified comparator. All elements in the array must be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637e55e90f9bebe65981574025ef1e58fc1e4eca" translate="yes" xml:space="preserve">
          <source>Sorts the specified array of objects into ascending order, according to the &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its elements. All elements in the array must implement the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface. Furthermore, all elements in the array must be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735bfe68e6f93734d8d31777baf2aaf591afb4e9" translate="yes" xml:space="preserve">
          <source>Sorts the specified list according to the order induced by the specified comparator. All elements in the list must be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7dcaa32e4a94f860b4a45ebc23bd8702594a143" translate="yes" xml:space="preserve">
          <source>Sorts the specified list into ascending order, according to the &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its elements. All elements in the list must implement the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface. Furthermore, all elements in the list must be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ced4df120f613019079b6bf166311849a4279a1" translate="yes" xml:space="preserve">
          <source>Sorts the specified range of the array into ascending numerical order. The range to be sorted extends from the index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to the index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. If &lt;code&gt;fromIndex == toIndex&lt;/code&gt;, the range to be sorted is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f217fb8a12729d609466e1852b0d995feec6db4" translate="yes" xml:space="preserve">
          <source>Sorts the specified range of the array into ascending order. The range to be sorted extends from the index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to the index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. If &lt;code&gt;fromIndex == toIndex&lt;/code&gt;, the range to be sorted is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05d8cc726a7cfcd534d366868faeb2291933bb7" translate="yes" xml:space="preserve">
          <source>Sorts the specified range of the specified array of objects according to the order induced by the specified comparator. The range to be sorted extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be sorted is empty.) All elements in the range must be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e26c1e9962e0349f56eeb7a5b121a613eb1619" translate="yes" xml:space="preserve">
          <source>Sorts the specified range of the specified array of objects into ascending order, according to the &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its elements. The range to be sorted extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be sorted is empty.) All elements in this range must implement the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface. Furthermore, all elements in this range must be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd91f649059aefed038ce299931ff113ca6a2ae" translate="yes" xml:space="preserve">
          <source>Sorts this list according to the order induced by the specified &lt;a href=&quot;../comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0bccc78e8954f813d98b00283cc4bec43b7629" translate="yes" xml:space="preserve">
          <source>Sorts this list according to the order induced by the specified &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e3efeba10e84f7148da9f7efe85e07057d7c7a" translate="yes" xml:space="preserve">
          <source>Sound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75aa9e8cd319f77cb2a70546f15f75de296ce83c" translate="yes" xml:space="preserve">
          <source>Soundbank</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5939818491c07d9a023711090bc03723d3d1709e" translate="yes" xml:space="preserve">
          <source>Soundbank.getDescription()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789cf951814998ce6635188cee90f120ac805415" translate="yes" xml:space="preserve">
          <source>Soundbank.getInstrument()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f1ca2517b6864fa9c8a45a545089a2ff0465c0" translate="yes" xml:space="preserve">
          <source>Soundbank.getInstruments()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe4afe4a544a8b7b28adce6248c4047d99d9d24" translate="yes" xml:space="preserve">
          <source>Soundbank.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7b57e015238419ead8fa53f026bba453a1231e" translate="yes" xml:space="preserve">
          <source>Soundbank.getResources()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1095ee5d251175adcb575d6fe888358f6a7be183" translate="yes" xml:space="preserve">
          <source>Soundbank.getVendor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df30c11f175b73756ed98ee5c32702500629ba6d" translate="yes" xml:space="preserve">
          <source>Soundbank.getVersion()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608d46fad864e14581573626aa6326fa524fbe67" translate="yes" xml:space="preserve">
          <source>SoundbankReader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e57df25e8f7b9f2d0638acb26d1bcedadd5d7f1" translate="yes" xml:space="preserve">
          <source>SoundbankReader.getSoundbank()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3b697813baf8555a1eb03e9059b7bf49e87c51" translate="yes" xml:space="preserve">
          <source>SoundbankResource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c4bd71a75a472cdbb4521800c6d7230ef5e0d0" translate="yes" xml:space="preserve">
          <source>SoundbankResource.getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acddad933b2ec76bcc0611f5235b454e40a6dd8" translate="yes" xml:space="preserve">
          <source>SoundbankResource.getDataClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6d4fb7a11a596535486f849b5c949ff21fe888" translate="yes" xml:space="preserve">
          <source>SoundbankResource.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4369b57a583c6d50e41cd816125d4e561e02e5c7" translate="yes" xml:space="preserve">
          <source>SoundbankResource.getSoundbank()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c44614d3d822ab1ef01b60f798592244abce67" translate="yes" xml:space="preserve">
          <source>Source files written in the Java programming language. For example, regular files ending with &lt;code&gt;.java&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5018fcb213562849c8371365777c78f6f79cf93" translate="yes" xml:space="preserve">
          <source>Source versions of the Java&amp;trade; programming language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05e2205424bc459ead4d23c9de92c0a9b778805" translate="yes" xml:space="preserve">
          <source>Source versions of the Java&amp;trade; programming language. See the appropriate edition of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bbe695b6b064d266edb3af554806d1a1bf3d2f" translate="yes" xml:space="preserve">
          <source>SourceChannel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2ed3bd3a75d96dd9f8346f2e404f41cf14d51a" translate="yes" xml:space="preserve">
          <source>SourceDataLine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde8fb22899bd251050be58e2ff83444b2d7d7a6" translate="yes" xml:space="preserve">
          <source>SourceDataLine.open()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc73d36d7135e19ac6cd6a3fc5c06c395e3a7b38" translate="yes" xml:space="preserve">
          <source>SourceDataLine.write()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c7e11478bc7cc469bc0d062302fc26e03f0736" translate="yes" xml:space="preserve">
          <source>SourceVersion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f495acee126ffd2ee8407992bd261b7ba1e5bcd7" translate="yes" xml:space="preserve">
          <source>SourceVersion.isIdentifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77497ee92b8f5ca892e781c7bc3f08117280cdb" translate="yes" xml:space="preserve">
          <source>SourceVersion.isKeyword()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f71dc7927d564ccb0583ac1400f8061f01ee561" translate="yes" xml:space="preserve">
          <source>SourceVersion.isName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e138fd9643f29292fff98def6f1bf4acb312f5a" translate="yes" xml:space="preserve">
          <source>SourceVersion.latest()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590fd51d5053ea530fc3f175a26db1a398caff58" translate="yes" xml:space="preserve">
          <source>SourceVersion.latestSupported()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c437b2689c6ee86fb87c9774ea1a1e4ce0bedb0" translate="yes" xml:space="preserve">
          <source>SourceVersion.valueOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f62f0d6c4a4a7746608ac712c5930b547d433e" translate="yes" xml:space="preserve">
          <source>SourceVersion.values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da662897c6494fcb80fce264e7896fc9a7a5b78" translate="yes" xml:space="preserve">
          <source>Spaces have no special significance in a String representing an ObjectName. For example, the String:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff76f6990e484e3534c69dfa583f29b712f353d8" translate="yes" xml:space="preserve">
          <source>Sparse file. When used with the &lt;a href=&quot;standardopenoption#CREATE_NEW&quot;&gt;&lt;code&gt;CREATE_NEW&lt;/code&gt;&lt;/a&gt; option then this option provides a &lt;em&gt;hint&lt;/em&gt; that the new file will be sparse. The option is ignored when the file system does not support the creation of sparse files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f1fc4c183f95acabbc53da2abac4d4f1206e1e" translate="yes" xml:space="preserve">
          <source>Special Cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9aee89a8228d42350abe21ee90f45732a48017" translate="yes" xml:space="preserve">
          <source>Special IPv6 address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e880f5161c77170a850e9f09a240122725f69744" translate="yes" xml:space="preserve">
          <source>Special Pattern Characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb3c8acb4db764904b42641ce80a2ca233031b8" translate="yes" xml:space="preserve">
          <source>Special Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f613a38c9a77eef52fd9053dd584ff64dc4df0" translate="yes" xml:space="preserve">
          <source>Special cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437c0e93e4038fedb4400f768d96853c07fc1e13" translate="yes" xml:space="preserve">
          <source>Special cases for Chinese. When an input &lt;code&gt;Locale&lt;/code&gt; has the language &quot;zh&quot; (Chinese) and an empty script value, either &quot;Hans&quot; (Simplified) or &quot;Hant&quot; (Traditional) might be supplied, depending on the country. When the country is &quot;CN&quot; (China) or &quot;SG&quot; (Singapore), &quot;Hans&quot; is supplied. When the country is &quot;HK&quot; (Hong Kong SAR China), &quot;MO&quot; (Macau SAR China), or &quot;TW&quot; (Taiwan), &quot;Hant&quot; is supplied. For all other countries or when the country is empty, no script is supplied. For example, for &lt;code&gt;Locale(&quot;zh&quot;, &quot;CN&quot;)
 &lt;/code&gt;, the candidate list will be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ee2c26fdc486510bcf01773c8f62fd8ed2dea1" translate="yes" xml:space="preserve">
          <source>Special cases for Norwegian. Both &lt;code&gt;Locale(&quot;no&quot;, &quot;NO&quot;,
 &quot;NY&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;nn&quot;, &quot;NO&quot;)&lt;/code&gt; represent Norwegian Nynorsk. When a locale's language is &quot;nn&quot;, the standard candidate list is generated up to [&lt;em&gt;L&lt;/em&gt;(&quot;nn&quot;)], and then the following candidates are added:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56064f3962c04c365c47471ff7513622d3ab0964" translate="yes" xml:space="preserve">
          <source>Special cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9c75e19cead79d92c0062df6e87eca07068fca" translate="yes" xml:space="preserve">
          <source>Special constructs (named-capturing and non-capturing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857e74b7449512c952c5670d629c5c7fe94604d8" translate="yes" xml:space="preserve">
          <source>Special requirements of this object are supplied using &lt;code&gt;environment&lt;/code&gt;. An example of such an environment property is user identity information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6920112a9a6adc4f49605bf699de084b7ea3732d" translate="yes" xml:space="preserve">
          <source>Specialization of format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba31db60fc17d73172d4132d942bd174e64a8cf" translate="yes" xml:space="preserve">
          <source>Specialization of format. This method really calls &lt;code&gt;format(double, StringBuffer, FieldPosition)&lt;/code&gt; thus the range of longs that are supported is only equal to the range that can be stored by double. This will never be a practical limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89156b2798610a4501641523fc4d17d091afd72" translate="yes" xml:space="preserve">
          <source>Specialized CRL types can be defined by subclassing off of this abstract class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65c3ff101b986f47826ce63feeca7033d92d5aa" translate="yes" xml:space="preserve">
          <source>Specifically, execution proceeds as if by the following steps, although the methods are not guaranteed to be called if the JVM can predict their effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3465af466056cae6630a9da7426df28b4c612c3" translate="yes" xml:space="preserve">
          <source>Specifically, if the expression represents a computation then all classes and static members should be fully qualified. This rule applies to constructors, static methods and non primitive arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c84654d7a18b359176c4eeb3f7b8497bf37aa11" translate="yes" xml:space="preserve">
          <source>Specifically, if this &lt;code&gt;Class&lt;/code&gt; object represents a declared class, this method returns &lt;code&gt;true&lt;/code&gt; if the specified &lt;code&gt;Object&lt;/code&gt; argument is an instance of the represented class (or of any of its subclasses); it returns &lt;code&gt;false&lt;/code&gt; otherwise. If this &lt;code&gt;Class&lt;/code&gt; object represents an array class, this method returns &lt;code&gt;true&lt;/code&gt; if the specified &lt;code&gt;Object&lt;/code&gt; argument can be converted to an object of the array class by an identity conversion or by a widening reference conversion; it returns &lt;code&gt;false&lt;/code&gt; otherwise. If this &lt;code&gt;Class&lt;/code&gt; object represents an interface, this method returns &lt;code&gt;true&lt;/code&gt; if the class or any superclass of the specified &lt;code&gt;Object&lt;/code&gt; argument implements this interface; it returns &lt;code&gt;false&lt;/code&gt; otherwise. If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type, this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a700ea49bf06dcd25a24796312cb3e0f6b804259" translate="yes" xml:space="preserve">
          <source>Specifically, the write to the current target of &lt;code&gt;S&lt;/code&gt; is taken to happen before the volatile write to &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a951cc10d8116d3fef6ce54d8a06e68cd8f141" translate="yes" xml:space="preserve">
          <source>Specifically, this method returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;Object&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e59c11e2ca200bba536cd3762479c6cc87f5020" translate="yes" xml:space="preserve">
          <source>Specifically, this method tests whether the type represented by the specified &lt;code&gt;Class&lt;/code&gt; parameter can be converted to the type represented by this &lt;code&gt;Class&lt;/code&gt; object via an identity conversion or via a widening reference conversion. See &lt;em&gt;The Java Language Specification&lt;/em&gt;, sections 5.1.1 and 5.1.4 , for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55d344fdfc9ac1f7643fa1d13d2d4218f222640" translate="yes" xml:space="preserve">
          <source>Specification version numbers use a syntax that consists of nonnegative decimal integers separated by periods &quot;.&quot;, for example &quot;2.0&quot; or &quot;1.2.3.4.5.6.7&quot;. This allows an extensible number to be used to represent major, minor, micro, etc. versions. The version specification is described by the following formal grammar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade50e5dbcb6fd9cd6fd07095805154bbfd0c146" translate="yes" xml:space="preserve">
          <source>SpecificationVersion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0cc10f2addad90a3e5953dd262d5262566508e" translate="yes" xml:space="preserve">
          <source>Specified by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a4faadbcd7f831a17fe102c42b56b5499ccc07" translate="yes" xml:space="preserve">
          <source>Specified that the character argument starts a single-line comment. All characters from the comment character to the end of the line are ignored by this stream tokenizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2c0ef94dc64e91e61aaa7abc31a4c2880df8d7" translate="yes" xml:space="preserve">
          <source>Specifies a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f6fbd9a626a3441392df207d6739c107cbd8d4" translate="yes" xml:space="preserve">
          <source>Specifies a JAR file with instrumentation classes to be defined by the bootstrap class loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bcffdbb578c14f1b8eff7c3f9de1681c078d14" translate="yes" xml:space="preserve">
          <source>Specifies a JAR file with instrumentation classes to be defined by the system class loader. When the system class loader for delegation (see &lt;a href=&quot;../classloader#getSystemClassLoader--&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;) unsuccessfully searches for a class, the entries in the &lt;a href=&quot;../../util/jar/jarfile&quot;&gt;&lt;code&gt;JarFile&lt;/code&gt;&lt;/a&gt; will be searched as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceaae4ddd6f081c35c8fce6d68c987cd1268ab8b" translate="yes" xml:space="preserve">
          <source>Specifies a SND file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32a3962c9207b8eab990927aef218056a66051e" translate="yes" xml:space="preserve">
          <source>Specifies a WAVE file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="affc79a63d896307a6654507e367bc51449e408f" translate="yes" xml:space="preserve">
          <source>Specifies a comment URL that describes a cookie's purpose. The comment URL is useful if the browser presents the cookie to the user. Comment URL is RFC 2965 only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfac362eaa2504045bc5f1870adaf4ced2eaf348" translate="yes" xml:space="preserve">
          <source>Specifies a comment that describes a cookie's purpose. The comment is useful if the browser presents the cookie to the user. Comments are not supported by Netscape Version 0 cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bea32534808b7a0229beff1f9ce04dded044c6" translate="yes" xml:space="preserve">
          <source>Specifies a decimation subsampling to apply on I/O. The &lt;code&gt;sourceXSubsampling&lt;/code&gt; and &lt;code&gt;sourceYSubsampling&lt;/code&gt; parameters specify the subsampling period (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4337436e4374a12fcf26f8cdd84040246ca805be" translate="yes" xml:space="preserve">
          <source>Specifies a general information string for this identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12971524ee2d970ee95ff1fa8fb594e86937a03a" translate="yes" xml:space="preserve">
          <source>Specifies a path for the cookie to which the client should return the cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab61778a2b1f07dc32652a800c599c846873521" translate="yes" xml:space="preserve">
          <source>Specifies a-law encoded data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e781279b3ba66595572f6ce52486f9f7590dfde" translate="yes" xml:space="preserve">
          <source>Specifies an AIFF file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c86ceae8f80840adb2a58ad5d04a83c847cd072" translate="yes" xml:space="preserve">
          <source>Specifies an AIFF-C file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfcf323655f72523f5adc9223e7f0eb7504effd" translate="yes" xml:space="preserve">
          <source>Specifies an AU file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f7d3f0772b1c6764ab6ee91da1b9d6ed4c1392" translate="yes" xml:space="preserve">
          <source>Specifies automatic filtering mode based on the given Language Priority List consisting of language ranges. If all of the ranges are basic, basic filtering is selected. Otherwise, extended filtering is selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db6b639297534e761f759c2e9909c78bf5ba4cf" translate="yes" xml:space="preserve">
          <source>Specifies basic filtering: If any extended language ranges are included in the given Language Priority List, the list is rejected and the filtering method throws &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28159eda8c349fd7c9279aa9d767b3aeddef0609" translate="yes" xml:space="preserve">
          <source>Specifies basic filtering: If any extended language ranges are included in the given Language Priority List, they are mapped to the basic language range. Specifically, a language range starting with a subtag &lt;code&gt;&quot;*&quot;&lt;/code&gt; is treated as a language range &lt;code&gt;&quot;*&quot;&lt;/code&gt;. For example, &lt;code&gt;&quot;*-US&quot;&lt;/code&gt; is treated as &lt;code&gt;&quot;*&quot;&lt;/code&gt;. If &lt;code&gt;&quot;*&quot;&lt;/code&gt; is not the first subtag, &lt;code&gt;&quot;*&quot;&lt;/code&gt; and extra &lt;code&gt;&quot;-&quot;&lt;/code&gt; are removed. For example, &lt;code&gt;&quot;ja-*-JP&quot;&lt;/code&gt; is mapped to &lt;code&gt;&quot;ja-JP&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8756a2590c7f07bd83b287a1c2ff0d3d05a39a" translate="yes" xml:space="preserve">
          <source>Specifies basic filtering: Note that any extended language ranges included in the given Language Priority List are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3201b2ec97ef56e2a8f47c25f106d7a87ba95ae5" translate="yes" xml:space="preserve">
          <source>Specifies extended filtering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950bc6f75b58b72979ca69fc49f7ec937490a716" translate="yes" xml:space="preserve">
          <source>Specifies floating-point PCM data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5df5a8deabce182a7f8601dee53d4eb786c36c5" translate="yes" xml:space="preserve">
          <source>Specifies signed, linear PCM data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ff9befd514adeb6cf644dc3fd11cbaab90db1b" translate="yes" xml:space="preserve">
          <source>Specifies that all characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174f2cae75f731f685ccd5ab4fb230942b55327a" translate="yes" xml:space="preserve">
          <source>Specifies that matching pairs of this character delimit string constants in this tokenizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f7628cc097cdcead33662238b53268654fc1fd" translate="yes" xml:space="preserve">
          <source>Specifies that numbers should be parsed by this tokenizer. The syntax table of this tokenizer is modified so that each of the twelve characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5ade3dcc12d4235040851df0a3635ebda0cbab" translate="yes" xml:space="preserve">
          <source>Specifies that the character argument is &quot;ordinary&quot; in this tokenizer. It removes any special significance the character has as a comment character, word component, string delimiter, white space, or number character. When such a character is encountered by the parser, the parser treats it as a single-character token and sets &lt;code&gt;ttype&lt;/code&gt; field to the character value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211422e3b5e82caa154f1d09ef3db4fa0ea4c26a" translate="yes" xml:space="preserve">
          <source>Specifies that the image should be tiled in the output stream. The &lt;code&gt;tileWidth&lt;/code&gt; and &lt;code&gt;tileHeight&lt;/code&gt; parameters specify the width and height of the tiles in the file. If the tile width or height is greater than the width or height of the image, the image is not tiled in that dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f942e97ceb1972cd9db57e161df937dbe6cd12dc" translate="yes" xml:space="preserve">
          <source>Specifies that the writer is to write the image out in a progressive mode such that the stream will contain a series of scans of increasing quality. If progressive encoding is not supported, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ac2d66f10936d907974e3ae23da86df8358779" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A0 size, 841 mm by 1189 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b223b37f9567bf7ed5fa0b807e555880ce3ba37d" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A1 size, 594 mm by 841 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e4b5d10aab868966116cf283418d854aea46fc" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A10 size, 26 mm by 37 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94732aad46afafb0c29ab53e1f651790d2511cf" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A2 size, 420 mm by 594 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cc2b11fe8d8bb601157d762181a298423fc6a4" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A3 size, 297 mm by 420 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c583b4f1bae304738a385a91439be5a4ea5ef8cf" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A4 size, 210 mm by 297 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6b9d387a447d8237c0eaccf37d3687b3f892f4" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A5 size, 148 mm by 210 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698e49d5d81214ebaa606ff388a90b8db1b1207a" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A6 size, 105 mm by 148 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2eed8a15d2723ac743191657823195704dedc0a" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A7 size, 74 mm by 105 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac5a566adf21d2f81bf8a03315f5529f643909d" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A8 size, 52 mm by 74 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b1bd89a8e7dd74cf19c39223bc57e5fc7ff075" translate="yes" xml:space="preserve">
          <source>Specifies the ISO A9 size, 37 mm by 52 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5795506ba6df8fa44d5de3e20140507405025545" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B0 size, 1000 mm by 1414 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ccab76f9d82c2150d63ff89e7a475ba4fee16c" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B1 size, 707 mm by 1000 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37fbef6701e3cfd9d35d99b02798501c08fe80b" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B10 size, 31 mm by 44 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581d210b33820a1b940d4d99509e9702abb7fabc" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B2 size, 500 mm by 707 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5691a1f9f576fa38ac8454d2a83f4e7abfe10472" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B3 size, 353 mm by 500 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29fc0949af0a6e828344d227fa6c9028d6a73ae9" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B4 size, 250 mm by 353 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36311f449571b2111f812570f1bc81c9ffe8beff" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B5 size, 176 mm by 250 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c04073e3a654b11d158d655342a5c760b6bb452" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B6 size, 125 mm by 176 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ccabc6c96f6a466d46b9f92a87a6b70c591d8e" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B7 size, 88 mm by 125 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd3b89c4945ea468062cabebfc08f049a4bd02b" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B8 size, 62 mm by 88 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9377f2aad01c52135af4b2aa3786234e55937185" translate="yes" xml:space="preserve">
          <source>Specifies the ISO B9 size, 44 mm by 62 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8345d26c05341af1d75f4feabf479dbecf90d6" translate="yes" xml:space="preserve">
          <source>Specifies the ISO C3 size, 324 mm by 458 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e11aa0e0c60db6da0a243ca31748009ca226fe" translate="yes" xml:space="preserve">
          <source>Specifies the ISO C4 size, 229 mm by 324 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25fe2ff5c20079c4872e394003c857f760d6b96" translate="yes" xml:space="preserve">
          <source>Specifies the ISO C5 size, 162 mm by 229 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa92d63ea4ce872e8956cefe8fe13cc5a74480db" translate="yes" xml:space="preserve">
          <source>Specifies the ISO C6 size, 114 mm by 162 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922979641b96540e2c59c7ca1076cd54b665cdc1" translate="yes" xml:space="preserve">
          <source>Specifies the ISO Designated Long size, 110 mm by 220 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2540d673baf4e1f54283d4d5eb172a69ba9f5344" translate="yes" xml:space="preserve">
          <source>Specifies the Italy envelope size, 110 mm by 230 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a765318326a27e4beec41052c34ada12eaec14d7" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B0 size, 1030 mm by 1456 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47367890a3712abfb065cee1a4d1b4023de6a178" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B1 size, 728 mm by 1030 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c654f75fb33eede7d73dd0f9928e5afd56d6ddc7" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B10 size, 32 mm by 45 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42785b05a5f4041a06733a619aa555d7599adc06" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B2 size, 515 mm by 728 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5644ee9fdcac48b3396487c86d1b5725f9f79ae8" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B3 size, 364 mm by 515 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47244b88711b15c1f4f073eba40b307429e78c7d" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B4 size, 257 mm by 364 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6452199843ef923475bb22c44cc76054fea30182" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B5 size, 182 mm by 257 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a01af823758e9aa1c22455e41a70333d75b7155" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B6 size, 128 mm by 182 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ad88ee852812a85ba05bf7e3df4dd04c746c45" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B7 size, 91 mm by 128 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed92c18265b52f2755252ab6022c34178e0d31e" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B8 size, 64 mm by 91 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2a5ef652fd0a3e2c0ec457db2f89030149da1e" translate="yes" xml:space="preserve">
          <source>Specifies the JIS B9 size, 45 mm by 64 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83cc83cce86863b4d32550e224a528f79367737" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Chou (&quot;long&quot;) #1 envelope size, 142 mm by 332 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833987d69115ed5b3302cb1ab16e3f2652cffc0b" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Chou (&quot;long&quot;) #2 envelope size, 119 mm by 277 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9121a154d5136d80dc00493c29628f8a64a7fa92" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Chou (&quot;long&quot;) #3 envelope size, 120 mm by 235 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1a603c928316e8babd6a531a577c2cf5f85187" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Chou (&quot;long&quot;) #30 envelope size, 92 mm by 235 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52d74b9ca46fcb3e2804837c8955c1790ac3de4" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Chou (&quot;long&quot;) #4 envelope size, 90 mm by 205 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b987d3b15b4c6559febee4b366ea27a6149094a" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Chou (&quot;long&quot;) #40 envelope size, 90 mm by 225 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc9d1cb256628b9cc03c5566214bd3e257ab29a" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) #0 envelope size, 287 mm by 382 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70766e6eeb20395ba440cd6107fc4881a7967fa" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) #1 envelope size, 270 mm by 382 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ba25c619af4d9e50059cfa12efd5cf5f2178f0" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) #2 envelope size, 240 mm by 332 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed822987c4579ac3b548dc7fecd022049ddb749e" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) #20 envelope size, 229 mm by 324 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1938a2226dfce5a6e007197714e1edcb00e3fa" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) #3 envelope size, 216 mm by 277 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45081902c407b541a52ef01beec57934d397306e" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) #4 envelope size, 197 mm by 267 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc7b1720dcc5dd2c57058dda0ea892b7fc37975" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) #5 envelope size, 190 mm by 240 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b9ed4660a581714f768e65a1bc758d1f88e373" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) #6 envelope size, 162 mm by 229 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59addb3afa851db7e40cb79e10b2ae0e9ac0edc" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) #7 envelope size, 142 mm by 205 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83deefe1a8fea056cdb4e35a624455e94ee3beb" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) #8 envelope size, 119 mm by 197 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122f4a7bbc258967cd1621060ffded80f31e4b77" translate="yes" xml:space="preserve">
          <source>Specifies the JIS Kaku (&quot;square&quot;) A4 envelope size, 228 mm by 312 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0f2d8ce52f78e28baa56916a11a685ed464954" translate="yes" xml:space="preserve">
          <source>Specifies the JIS You (&quot;Western&quot;) #1 envelope size, 120 mm by 176 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a2cabd514c6c3cf5e2072f5e0021a489be02f6" translate="yes" xml:space="preserve">
          <source>Specifies the JIS You (&quot;Western&quot;) #2 envelope size, 114 mm by 162 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8b3538a84c0ecef3dde29aa9b39b53efa7c03d" translate="yes" xml:space="preserve">
          <source>Specifies the JIS You (&quot;Western&quot;) #3 envelope size, 98 mm by 148 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c716212bd332a1c9fa05ee8b2145fb2ddb1ae54" translate="yes" xml:space="preserve">
          <source>Specifies the JIS You (&quot;Western&quot;) #4 envelope size, 105 mm by 235 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fa6afd06e5be6ce354784575c9dc69b5600969" translate="yes" xml:space="preserve">
          <source>Specifies the JIS You (&quot;Western&quot;) #5 envelope size, 95 mm by 217 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0ba804a95e395aa7d79827b308724ac26774fc" translate="yes" xml:space="preserve">
          <source>Specifies the JIS You (&quot;Western&quot;) #6 envelope size, 98 mm by 190 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d8a285ed83519383a9a5c64c2b17a20af0de73" translate="yes" xml:space="preserve">
          <source>Specifies the JIS You (&quot;Western&quot;) #7 envelope size, 92 mm by 165 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b008d4f6d86b5d822c7b2e2b46aaafd9c861d949" translate="yes" xml:space="preserve">
          <source>Specifies the Japanese Double postcard size, 148 mm by 200 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34556431574f823b7c15220960a6a99cf7b35f76" translate="yes" xml:space="preserve">
          <source>Specifies the Japanese postcard size, 100 mm by 148 mm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf3c7213b957cf4632c9d6f9f8eabeaf302b48e" translate="yes" xml:space="preserve">
          <source>Specifies the Monarch envelope size, 3.87 inch by 7.5 inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf63c4f7865e67e97b6447fbabfa0dc9b0630b8" translate="yes" xml:space="preserve">
          <source>Specifies the North American 10 inch by 13 inch envelope size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe91f3cc32f272764efc7eb93f0f2d069519822e" translate="yes" xml:space="preserve">
          <source>Specifies the North American 10 inch by 14 inch envelope size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe650643ab81313f163a8e8601f23e99940d201" translate="yes" xml:space="preserve">
          <source>Specifies the North American 10 inch by 15 inch envelope size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f2076179e3425b298437239c41dd2e6b500007" translate="yes" xml:space="preserve">
          <source>Specifies the North American 5 inch by 7 inch paper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a661a9b9b2b6e930c1b776cd0247b11987e80e" translate="yes" xml:space="preserve">
          <source>Specifies the North American 6 inch by 9 inch envelope size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1711898e12aa3998ccbd9d0dc9f7660d2cf4e7cf" translate="yes" xml:space="preserve">
          <source>Specifies the North American 7 inch by 9 inch envelope size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503b0180adcaed376d394f3d47a931fa72106383" translate="yes" xml:space="preserve">
          <source>Specifies the North American 8 inch by 10 inch paper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df256bfc51a04b18863e4f022320687b1d798691" translate="yes" xml:space="preserve">
          <source>Specifies the North American 9 inch by 11 inch envelope size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea50471f18102cbca21cd944e75270ba5b431ec" translate="yes" xml:space="preserve">
          <source>Specifies the North American 9 inch by 12 inch envelope size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08579ddefb9f7d6806f110c65ebfa2b568dd5794" translate="yes" xml:space="preserve">
          <source>Specifies the North American Number 10 business envelope size, 4.125 inches by 9.5 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1700b99a137b21f7d6de4b9f9c136b4fcfcca87" translate="yes" xml:space="preserve">
          <source>Specifies the North American Number 11 business envelope size, 4.5 inches by 10.375 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af806abac1339f35aff3388ed57f7e80e5fa9a0" translate="yes" xml:space="preserve">
          <source>Specifies the North American Number 12 business envelope size, 4.75 inches by 11 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581c758e2146a08968dcd2a064c589e111064327" translate="yes" xml:space="preserve">
          <source>Specifies the North American Number 14 business envelope size, 5 inches by 11.5 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b0307a03417cb9552b02c7b3005482930604ff" translate="yes" xml:space="preserve">
          <source>Specifies the North American Number 9 business envelope size, 3.875 inches by 8.875 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b39faed068c3afdd00ff4ee7f73acc9adbedae" translate="yes" xml:space="preserve">
          <source>Specifies the North American legal size, 8.5 inches by 14 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e45bef87c485e694bee73588be99869b3477c7" translate="yes" xml:space="preserve">
          <source>Specifies the North American letter size, 8.5 inches by 11 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dcc080ef7a1e93ea9e893e79b6d91533fb3828" translate="yes" xml:space="preserve">
          <source>Specifies the Personal envelope size, 3.625 inch by 6.5 inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd57d0239ca4c6a1848bee240906150dd2b796e" translate="yes" xml:space="preserve">
          <source>Specifies the attributes that will be returned as part of the search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc92ee6a4c5bcf82badb2edfe376ba077c4efc4" translate="yes" xml:space="preserve">
          <source>Specifies the domain within which this cookie should be presented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c534d3775d2765b1547293969fb3149bbd628c" translate="yes" xml:space="preserve">
          <source>Specifies the engineering A size, 8.5 inch by 11 inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fe419d4720e4c4a30accbe183904bba2df8552" translate="yes" xml:space="preserve">
          <source>Specifies the engineering B size, 11 inch by 17 inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b845f51eb91a10965050b23a47cc9da6656446cb" translate="yes" xml:space="preserve">
          <source>Specifies the engineering C size, 17 inch by 22 inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232652f4029163f57417c23c34bd7dee7fd4e2a1" translate="yes" xml:space="preserve">
          <source>Specifies the engineering D size, 22 inch by 34 inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d931cb76d36d9ff9ff35a9b9a5cab07c3ed625" translate="yes" xml:space="preserve">
          <source>Specifies the engineering E size, 34 inch by 44 inch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f685e249a62ba6a4f1366e429043d78b5dfd94" translate="yes" xml:space="preserve">
          <source>Specifies the executive size, 7.25 inches by 10.5 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92084e563a81a52be9d5658e1e46d9431e165fb" translate="yes" xml:space="preserve">
          <source>Specifies the folio size, 8.5 inches by 13 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3c5d954ba351aa3904d0ad8aa091bdd862d432" translate="yes" xml:space="preserve">
          <source>Specifies the invoice size, 5.5 inches by 8.5 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e857930d22840a7df55d2133a913a98f3af232" translate="yes" xml:space="preserve">
          <source>Specifies the ledger size, 11 inches by 17 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11d4ef749d530c272b25b5753d99b8d458ddf5b" translate="yes" xml:space="preserve">
          <source>Specifies the method that a listener of a &lt;code&gt;NamingEvent&lt;/code&gt; with event type of &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; must implement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337905e329cbfd7e3051e08b7695c2f3e1a56493" translate="yes" xml:space="preserve">
          <source>Specifies the methods that a listener interested in namespace changes must implement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5fdfe60b3dc209c9c5c3411eb07d70a182fec9" translate="yes" xml:space="preserve">
          <source>Specifies the methods that a listener interested in namespace changes must implement. Specifically, the listener is interested in &lt;code&gt;NamingEvent&lt;/code&gt;s with event types of &lt;code&gt;OBJECT_ADDED&lt;/code&gt;, &lt;code&gt;OBJECT_RENAMED&lt;/code&gt;, or &lt;code&gt;OBJECT_REMOVED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198144aaf71e54f9747c58e13dbe2a5785533fc7" translate="yes" xml:space="preserve">
          <source>Specifies the offset in the destination image at which future decoded pixels are to be placed, when reading, or where a region will be written, when writing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ec86204a51f9813ad417814ed3537bdf621d72" translate="yes" xml:space="preserve">
          <source>Specifies the principal for which permissions are granted or denied by this ACL entry. If a principal was already set for this ACL entry, false is returned, otherwise true is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cc69bb900a73bf6acfc85527d3b2f37e281811" translate="yes" xml:space="preserve">
          <source>Specifies the quarto size, 8.5 inches by 10.83 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468b8f3d3fca113f3b41e610aa63a9413bf1a6e5" translate="yes" xml:space="preserve">
          <source>Specifies the set of parameters required by a &lt;a href=&quot;../cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; using the Galois/Counter Mode (GCM) mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145f5efc44bfdcfb9441371a57a0d14de33698bd" translate="yes" xml:space="preserve">
          <source>Specifies the tabloid size, 11 inches by 17 inches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d163df166b296fecc6fec14f0690358ace6673e1" translate="yes" xml:space="preserve">
          <source>Specifies u-law encoded data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa3e51698cff563070e1c51499d13067bd72eaf" translate="yes" xml:space="preserve">
          <source>Specifies unsigned, linear PCM data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0d20ac92e49775c8e36e03a98fa4d047f7ff59" translate="yes" xml:space="preserve">
          <source>Specifies whether compression is to be performed, and if so how compression parameters are to be determined. The &lt;code&gt;mode&lt;/code&gt; argument must be one of the four modes, interpreted as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b730a93b093ad16f1890a3d3d2b33139362bc6" translate="yes" xml:space="preserve">
          <source>Specifies whether or not date/time interpretation is to be lenient. With lenient interpretation, a date such as &quot;February 942, 1996&quot; will be treated as being equivalent to the 941st day after February 1, 1996. With strict (non-lenient) interpretation, such dates will cause an exception to be thrown. The default is lenient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892be0b216646875107e369fe6b42c031e58f4f4" translate="yes" xml:space="preserve">
          <source>Specifies whether this relation is handled by the Relation Service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece69b5a7aab8319d532e04db54807dd9d4ee42d" translate="yes" xml:space="preserve">
          <source>Specify a linger-on-close timeout. This option disables/enables immediate return from a &lt;b&gt;close()&lt;/b&gt; of a TCP Socket. Enabling this option with a non-zero Integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fabfeb2f98814c5e3ca499898ff4c4f625a21d" translate="yes" xml:space="preserve">
          <source>Specify stream protocol version to use when writing the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81587501c06dbf953e90d75abc1fbf38c9698f7c" translate="yes" xml:space="preserve">
          <source>Specify the format of print data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00307203b18117b860726788ad254f24ed9fc35" translate="yes" xml:space="preserve">
          <source>Specify the network interface for outgoing multicast datagrams sent on this socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc2f81b2b0636896ffd414ee694f79a5cb15854" translate="yes" xml:space="preserve">
          <source>Specify the portlist of the cookie, which restricts the port(s) to which a cookie may be sent back in a Cookie header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a4593936466330f5bbe43e2a412ef52ed8dc6d" translate="yes" xml:space="preserve">
          <source>Specify whether or not date/time parsing is to be lenient. With lenient parsing, the parser may use heuristics to interpret inputs that do not precisely match this object's format. With strict parsing, inputs must match this object's format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4e95676a829db890d8f3255a401adf839dba6c" translate="yes" xml:space="preserve">
          <source>Specify whether or not this logger should send its output to its parent Logger. This means that any LogRecords will also be written to the parent's Handlers, and potentially to its parent, recursively up the namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b50288067ea7c2c885af86b428b4b3aac836100" translate="yes" xml:space="preserve">
          <source>Specify whether user agent should discard the cookie unconditionally. This is RFC 2965 only attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630252d194dcd8c9e73cc858a8305dfca7d73bab" translate="yes" xml:space="preserve">
          <source>Specifying &lt;a href=&quot;resourcebundle.control#FORMAT_DEFAULT&quot;&gt;&lt;code&gt;FORMAT_DEFAULT&lt;/code&gt;&lt;/a&gt; is equivalent to instantiating the &lt;code&gt;ResourceBundle.Control&lt;/code&gt; class, except that this method returns a singleton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffe89f28fcff48aa8985302cc9dec05601c7829" translate="yes" xml:space="preserve">
          <source>Specifying a &lt;code&gt;port&lt;/code&gt; number of &lt;code&gt;-1&lt;/code&gt; indicates that the URL should use the default port for the protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ef1fc3711dc51b2a8d4cabd35b2393cb12f260" translate="yes" xml:space="preserve">
          <source>Specifying a pattern for ChoiceFormat objects is fairly straightforward. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a49e1fda54a8d1b97ccc401d1dc450b2ab1b11" translate="yes" xml:space="preserve">
          <source>Specifying a value of zero for the &lt;code&gt;stackSize&lt;/code&gt; parameter will cause this constructor to behave exactly like the &lt;code&gt;Thread(ThreadGroup, Runnable, String)&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0776a85ed758ca057a6ec749d5a1b26f5314a99e" translate="yes" xml:space="preserve">
          <source>Specifying an ORB for the RMI/IIOP connector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ecebf16fd78f5fc53b57b6f4844e70854e8cd3" translate="yes" xml:space="preserve">
          <source>Specifying such user relation class is to introduce properties and/or methods. Those have to be exposed for remote management. So this means that any user relation class must be a MBean class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8635e8df3d724d20325e9bbb84c8d0aaa2124f51" translate="yes" xml:space="preserve">
          <source>Specifying this flag may impose a performance penalty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422e57134e5237b2e2449bb725a01201322cd928" translate="yes" xml:space="preserve">
          <source>Specifying this flag may impose a slight performance penalty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffa1bc7e311c3a397504f2506b6e4e82315784c" translate="yes" xml:space="preserve">
          <source>Speedups for parallel compared to sequential forms are common but not guaranteed. Parallel operations involving brief functions on small maps may execute more slowly than sequential forms if the underlying work to parallelize the computation is more expensive than the computation itself. Similarly, parallelization may not lead to much actual parallelism if all processors are busy performing unrelated tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320c622efd8d7ca71305397d5d6c784228f28d71" translate="yes" xml:space="preserve">
          <source>Spliterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f53915432f1e9bfbb44cf6d634748bbe3afa70" translate="yes" xml:space="preserve">
          <source>Spliterator.OfDouble</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a85b868803f77b3744a9483abf73344b302e551" translate="yes" xml:space="preserve">
          <source>Spliterator.OfDouble.forEachRemaining()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efb566c0e7ebc2fbab972b5c00958bbdef82438" translate="yes" xml:space="preserve">
          <source>Spliterator.OfDouble.tryAdvance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd00db3d7a5c48baf4670b2d2e6070163c223dbf" translate="yes" xml:space="preserve">
          <source>Spliterator.OfDouble.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472aff29281630c34b34330c2acd0661bdeb3258" translate="yes" xml:space="preserve">
          <source>Spliterator.OfInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31d7aff31f0c9ce43934173cbbce0a4f25b39bc" translate="yes" xml:space="preserve">
          <source>Spliterator.OfInt.forEachRemaining()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89ce53b5e3c58dc72134e8fc752077d922fb2d7" translate="yes" xml:space="preserve">
          <source>Spliterator.OfInt.tryAdvance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45b5a9e99d87182af5544e9c1b9615285aadee2" translate="yes" xml:space="preserve">
          <source>Spliterator.OfInt.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5b02e680fd26a6f1102dd1842b2533c725db21" translate="yes" xml:space="preserve">
          <source>Spliterator.OfLong</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa7edb5a50a25495a0d85fa482002852475552a0" translate="yes" xml:space="preserve">
          <source>Spliterator.OfLong.forEachRemaining()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507907b8b4141f968bd9cc4d7ad03e447e534bb2" translate="yes" xml:space="preserve">
          <source>Spliterator.OfLong.tryAdvance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2acaf2e3bd42d39b88d33f891d83d6f062021be" translate="yes" xml:space="preserve">
          <source>Spliterator.OfLong.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d3520cf9a04a7887e29bc6416d1f091066e108" translate="yes" xml:space="preserve">
          <source>Spliterator.OfPrimitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5028745edd086efffd10e4cf75ce5e92256399" translate="yes" xml:space="preserve">
          <source>Spliterator.OfPrimitive.forEachRemaining()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723069d20f3d164d79aa1ac961c4e88bb0567578" translate="yes" xml:space="preserve">
          <source>Spliterator.OfPrimitive.tryAdvance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3319ac3f9e1fef57ef5cd242f6de84feb2005c9b" translate="yes" xml:space="preserve">
          <source>Spliterator.OfPrimitive.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55af23190c608f7c4ec90e7b213c924541111f9" translate="yes" xml:space="preserve">
          <source>Spliterator.characteristics()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a932c250be359a8b926197e0fe47a8cc718b312e" translate="yes" xml:space="preserve">
          <source>Spliterator.estimateSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa53295aaa170158abeacd5a8ec5391f866cceb8" translate="yes" xml:space="preserve">
          <source>Spliterator.forEachRemaining()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48496837a5ac2b63f0329ed08a4e54ba2da6b3c3" translate="yes" xml:space="preserve">
          <source>Spliterator.getComparator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79098c45323b89387367f986fdd179196de0343" translate="yes" xml:space="preserve">
          <source>Spliterator.getExactSizeIfKnown()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b634abbae6ff459a7df664239b5b56d7f512b8" translate="yes" xml:space="preserve">
          <source>Spliterator.hasCharacteristics()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c50c4137bbe027647e091e9e45120e5559331c" translate="yes" xml:space="preserve">
          <source>Spliterator.tryAdvance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e40d6686d15b3f454c9a98b9f2ff60713754fd" translate="yes" xml:space="preserve">
          <source>Spliterator.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab2736d7e5de30c05e4db7c7001bee765218c8f" translate="yes" xml:space="preserve">
          <source>Spliterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e61b5bb41e3649e07388d75b0790308cff0db9" translate="yes" xml:space="preserve">
          <source>Spliterators can provide an estimate of the number of remaining elements via the &lt;a href=&quot;spliterator#estimateSize--&quot;&gt;&lt;code&gt;estimateSize()&lt;/code&gt;&lt;/a&gt; method. Ideally, as reflected in characteristic &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, this value corresponds exactly to the number of elements that would be encountered in a successful traversal. However, even when not exactly known, an estimated value value may still be useful to operations being performed on the source, such as helping to determine whether it is preferable to split further or traverse the remaining elements sequentially.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e993662a2e4d962cdb042c7a4bc294931ec75f7a" translate="yes" xml:space="preserve">
          <source>Spliterators for mutable data sources have an additional challenge; timing of binding to the data, since the data could change between the time the spliterator is created and the time the stream pipeline is executed. Ideally, a spliterator for a stream would report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;; if not it should be &lt;a href=&quot;../spliterator#binding&quot;&gt;&lt;em&gt;late-binding&lt;/em&gt;&lt;/a&gt;. If a source cannot directly supply a recommended spliterator, it may indirectly supply a spliterator using a &lt;code&gt;Supplier&lt;/code&gt;, and construct a stream via the &lt;code&gt;Supplier&lt;/code&gt;-accepting versions of &lt;a href=&quot;streamsupport#stream-java.util.function.Supplier-int-boolean-&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt;. The spliterator is obtained from the supplier only after the terminal operation of the stream pipeline commences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9431fa0dc95276745962455c9979f506974b6ba5" translate="yes" xml:space="preserve">
          <source>Spliterators, like &lt;code&gt;Iterator&lt;/code&gt;s, are for traversing the elements of a source. The &lt;code&gt;Spliterator&lt;/code&gt; API was designed to support efficient parallel traversal in addition to sequential traversal, by supporting decomposition as well as single-element iteration. In addition, the protocol for accessing elements via a Spliterator is designed to impose smaller per-element overhead than &lt;code&gt;Iterator&lt;/code&gt;, and to avoid the inherent race involved in having separate methods for &lt;code&gt;hasNext()&lt;/code&gt; and &lt;code&gt;next()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bece69841977b47be83463c8fa5a1ad5e14a74" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractDoubleSpliterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad3f55f02c2c1dfe8b6a616f82fce9deadf7768" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractDoubleSpliterator.characteristics()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc87f18c6321c9104e6ffe46fd6fdb504d2351ed" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractDoubleSpliterator.estimateSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b688d05f8f30893105826b55a368cfb23842a5db" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractDoubleSpliterator.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc679c28a022611c5e4f5c4163bd4f876e6815c0" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractIntSpliterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9fe34661e6f49ba6fb465fdfb679940b5afc09" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractIntSpliterator.characteristics()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ac0cb3e1380e850d68c6293a9f6d90e8bda6cf" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractIntSpliterator.estimateSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1161e9565b37079cc60fcd1f2845ea73341e9e" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractIntSpliterator.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7e9c382f4a13b6b6a31867afa6c389af9d7ca6" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractLongSpliterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59d9f256c8ff42c9a2c7a87b38c7be5c48ec188" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractLongSpliterator.characteristics()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbe6f39da8918c9ed8ce3078162f5b00f429223" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractLongSpliterator.estimateSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abd776d420ac7fd805e6cf717eebc21df2da4ff" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractLongSpliterator.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1d4af4367ab050927d8eb75153457b9a907d6d" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractSpliterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02aab3f511d7a5f8859b38047cc8567d8fa60e8f" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractSpliterator.characteristics()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70edfd75dba98ef08ef403ea21e3fa1f13c8a719" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractSpliterator.estimateSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49e06e2370618eb088bdbcf031290e40fe9c3fe" translate="yes" xml:space="preserve">
          <source>Spliterators.AbstractSpliterator.trySplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107356d91da996f1c856c6fab5d86b695a8408ff" translate="yes" xml:space="preserve">
          <source>Spliterators.emptyDoubleSpliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0413e1d6f6d71d89a4b6964484d90950d07cb5bf" translate="yes" xml:space="preserve">
          <source>Spliterators.emptyIntSpliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62e7e9007c3a082097155020ea34f50edf38d36" translate="yes" xml:space="preserve">
          <source>Spliterators.emptyLongSpliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2f0c26c362027cd848bee8dccc15befe931757" translate="yes" xml:space="preserve">
          <source>Spliterators.emptySpliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d0ed6c9f5a220f06850c907186a1fbf805f235" translate="yes" xml:space="preserve">
          <source>Spliterators.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf3e56074171f3d9064ceef06be90d7e059e89a" translate="yes" xml:space="preserve">
          <source>Spliterators.spliterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd43c4c348b5d70b06f21fa065d955592bec6403" translate="yes" xml:space="preserve">
          <source>Spliterators.spliteratorUnknownSize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966c9e4f8061626aa8a8883a83cacdb44fab9d1d" translate="yes" xml:space="preserve">
          <source>Splits the given input sequence around matches of this pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9bf664642e246556454fda36cfe3262bacc5dc" translate="yes" xml:space="preserve">
          <source>Splits this string around matches of the given &lt;a href=&quot;../util/regex/pattern#sum&quot;&gt;regular expression&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9b0547b5447bd0ff0e05b97989fce967a5b166" translate="yes" xml:space="preserve">
          <source>SplittableRandom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39965bdb784c924c25da8f660d26a4206f032c8" translate="yes" xml:space="preserve">
          <source>SplittableRandom.doubles()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7fefe0469759ac146d374f642201a4943f4cf3" translate="yes" xml:space="preserve">
          <source>SplittableRandom.ints()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78516d7f2bbe9ab27f3db38a2e004b39aa99fdc" translate="yes" xml:space="preserve">
          <source>SplittableRandom.longs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42898a1c505a013adbea1999f3e803dba45199e" translate="yes" xml:space="preserve">
          <source>SplittableRandom.nextBoolean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974d6a4a928ec4dcc92d81513fc1e6b0d7c0f8cb" translate="yes" xml:space="preserve">
          <source>SplittableRandom.nextDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f71f668d4223cf2a354a0cb1b2bc0110dc29b6" translate="yes" xml:space="preserve">
          <source>SplittableRandom.nextInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de3fcbcd1b3b4ba24e34d7add80c968052f5fef" translate="yes" xml:space="preserve">
          <source>SplittableRandom.nextLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298c722b1e0a0e0e7baf96f99ffd3c373f99926d" translate="yes" xml:space="preserve">
          <source>SplittableRandom.split()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faba3545ba965ad7a99587d16fb28e55443ec40e" translate="yes" xml:space="preserve">
          <source>Spread the array into &lt;code&gt;N&lt;/code&gt; separate arguments &lt;code&gt;A0, ...&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a786bafe8b8bf82884118e4ee3b046e3320439c6" translate="yes" xml:space="preserve">
          <source>Square brackets &lt;code&gt;[]&lt;/code&gt; indicate optional parts of the address. Not all protocols will recognize all optional parts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e5a0d3d2ef19df258412a4d3ef3f9533b0c0c1" translate="yes" xml:space="preserve">
          <source>Stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236872ab2f67ccb5bbf50b5b92752b4d2775aab0" translate="yes" xml:space="preserve">
          <source>Stack trace of the thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba58191fde54eab1311eaa5fa7ec38867bce674" translate="yes" xml:space="preserve">
          <source>Stack.empty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a994890fccc550d95c330998da2daff25006b4f" translate="yes" xml:space="preserve">
          <source>Stack.peek()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea9bc43616588988ab8011726b3ba0c4ecc3990" translate="yes" xml:space="preserve">
          <source>Stack.pop()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215c9e61f842633c1194660ed3d958238bcd0412" translate="yes" xml:space="preserve">
          <source>Stack.push()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222d8c717e98724004c683a89988acfa7d410ad6" translate="yes" xml:space="preserve">
          <source>Stack.search()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d04260fae8d332704f75cc0a7cd1e62d6b5e13" translate="yes" xml:space="preserve">
          <source>StackOverflowError</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e6780d539d5ce91c57a14dc1d157a0a4d72cc0" translate="yes" xml:space="preserve">
          <source>StackTraceElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da23e4153b186af2223f5c2f7b98d2ff26a6458" translate="yes" xml:space="preserve">
          <source>StackTraceElement.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4017d046e08a7bb9640c4a9c503b0cf36c76ad01" translate="yes" xml:space="preserve">
          <source>StackTraceElement.getClassName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403ca6c841652e763b1e0704fbf2ae5071edf6bf" translate="yes" xml:space="preserve">
          <source>StackTraceElement.getFileName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b59d031af2d6d62793da70d1aa66d4851337084" translate="yes" xml:space="preserve">
          <source>StackTraceElement.getLineNumber()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd35724700d4853085df5cbf280e49fe9f5f1576" translate="yes" xml:space="preserve">
          <source>StackTraceElement.getMethodName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ab1813b3cf9fec063e86b1d6abc8e65738cf22" translate="yes" xml:space="preserve">
          <source>StackTraceElement.hashCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea6935b407c26fd0baca11562fb91be7ef4ae00" translate="yes" xml:space="preserve">
          <source>StackTraceElement.isNativeMethod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d051d3e08479e94cbf13927debdf8061b67b31b" translate="yes" xml:space="preserve">
          <source>StackTraceElement.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cfc274d6c058c28139c9d2ddca1c1476e88aca" translate="yes" xml:space="preserve">
          <source>StampedLock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b56dd03a94fe1608e4a02d99c15edc7a841bbc" translate="yes" xml:space="preserve">
          <source>StampedLock.asReadLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc15c93d783a7f0e33dae7f69acbaeb531ca23d" translate="yes" xml:space="preserve">
          <source>StampedLock.asReadWriteLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4763885a648f59faa17f4110053162a0744be0c6" translate="yes" xml:space="preserve">
          <source>StampedLock.asWriteLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22b7b3b199c8fa3b1e6fe3daa8f3d8e34c3a64a" translate="yes" xml:space="preserve">
          <source>StampedLock.getReadLockCount()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76504a093e30798b4f5fda94f885a6a20acb66ce" translate="yes" xml:space="preserve">
          <source>StampedLock.isReadLocked()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7032fd2876f7bbb2749f0b7252b14ffc4526c112" translate="yes" xml:space="preserve">
          <source>StampedLock.isWriteLocked()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5399d45f6b15fa48f00b6c90f0641494fa9120f3" translate="yes" xml:space="preserve">
          <source>StampedLock.readLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25afd45d3ca7bb6518288159e5bb22cf7091fe85" translate="yes" xml:space="preserve">
          <source>StampedLock.readLockInterruptibly()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e764dbc58441b959e7cc9724f9c19363dda543ff" translate="yes" xml:space="preserve">
          <source>StampedLock.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a45bd5149a230070b6513730f737e8fb99db1e" translate="yes" xml:space="preserve">
          <source>StampedLock.tryConvertToOptimisticRead()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6212d40b9819bd081b1af4193a8b73b105eaf2bb" translate="yes" xml:space="preserve">
          <source>StampedLock.tryConvertToReadLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d887892ded376a70dd184e56385d9039783bff9" translate="yes" xml:space="preserve">
          <source>StampedLock.tryConvertToWriteLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1962b6d45a845eb3ba5fdd7708873d81fb5e172" translate="yes" xml:space="preserve">
          <source>StampedLock.tryOptimisticRead()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b94b5bd99d28c206c08e31de97007a190e13ff9" translate="yes" xml:space="preserve">
          <source>StampedLock.tryReadLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14f96db106f3191d910163961ae213868ce22fe" translate="yes" xml:space="preserve">
          <source>StampedLock.tryUnlockRead()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6399b044dee87fd47d35401f4f699f95aa37c2" translate="yes" xml:space="preserve">
          <source>StampedLock.tryUnlockWrite()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b33574069a23cae14faa18894ca5b4ebdf88948" translate="yes" xml:space="preserve">
          <source>StampedLock.tryWriteLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829fca579a93d228d8bc40ad00f3b460bb21b5ef" translate="yes" xml:space="preserve">
          <source>StampedLock.unlock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e541c3e7bf95975359dd6eb7751b38505d08a5f" translate="yes" xml:space="preserve">
          <source>StampedLock.unlockRead()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35af99d56ad6f340310828c58f8e54868b878a4" translate="yes" xml:space="preserve">
          <source>StampedLock.unlockWrite()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904fca3317517520132e306cdfb95d067f1a427e" translate="yes" xml:space="preserve">
          <source>StampedLock.validate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bd512fcc23b740015b6761faed9cf036f76975" translate="yes" xml:space="preserve">
          <source>StampedLock.writeLock()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f620ef60bac97f8ee21aa27ca2b3d20cac6d08" translate="yes" xml:space="preserve">
          <source>StampedLock.writeLockInterruptibly()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed98f195899ec68185031c84f0e72985808a379" translate="yes" xml:space="preserve">
          <source>StampedLocks are designed for use as internal utilities in the development of thread-safe components. Their use relies on knowledge of the internal properties of the data, objects, and methods they are protecting. They are not reentrant, so locked bodies should not call other unknown methods that may try to re-acquire locks (although you may pass a stamp to other methods that can use or convert it). The use of read lock modes relies on the associated code sections being side-effect-free. Unvalidated optimistic read sections cannot call methods that are not known to tolerate potential inconsistencies. Stamps use finite representations, and are not cryptographically secure (i.e., a valid stamp may be guessable). Stamp values may recycle after (no sooner than) one year of continuous operation. A stamp held without use or validation for longer than this period may fail to validate correctly. StampedLocks are serializable, but always deserialize into initial unlocked state, so they are not useful for remote locking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6788647d7470ded1e3be09589d223a810f27e9" translate="yes" xml:space="preserve">
          <source>Standard Charsets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261053174e7fd1945a0a88f309fe5ce3926cea0f" translate="yes" xml:space="preserve">
          <source>Standard Finishings values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51883379f72d6a3202c824d606bf529c7985b8f6" translate="yes" xml:space="preserve">
          <source>Standard MBean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8258180bb606acaa8700c21711acefe3b2e064d" translate="yes" xml:space="preserve">
          <source>Standard MBeans</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f912927f3d2ae9a53599f5cc3d6fdd3a7ce0dc85" translate="yes" xml:space="preserve">
          <source>Standard MBeans based on the naming relationship between implementation and interface classes are of course still available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef12d9fe284b738ba81aa856e0b64f02ba04c8f" translate="yes" xml:space="preserve">
          <source>Standard Plug-in Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d65e7478f26c04f33122c224672bc3fcb572f0" translate="yes" xml:space="preserve">
          <source>Standard charsets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29fc5c6821d3d319684543ef917c01ff8de354eb" translate="yes" xml:space="preserve">
          <source>Standard constants definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f877f8a8dc88a4849022c1c2c063b89c02dd24c2" translate="yes" xml:space="preserve">
          <source>Standard locations of file objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22386fc77d53e65431bd5ec820a2d018d8048f6" translate="yes" xml:space="preserve">
          <source>Standard override.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d4f36e5c797b36092f2df3dc3d73f1c5ca2bb2" translate="yes" xml:space="preserve">
          <source>Standard override; no change in semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c148af8768a1995e7768a81d79d12318800b976" translate="yes" xml:space="preserve">
          <source>Standard plug-in for GIF image format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce50976eea6ed9c2fab6ca7ad0af6cae68625bdc" translate="yes" xml:space="preserve">
          <source>StandardCharsets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d3d56f337f09b268f1d5bb187e76cd339a0d65" translate="yes" xml:space="preserve">
          <source>StandardConstants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ceca90e8c7975555cf61ae1b09d2f39b4a7ef76" translate="yes" xml:space="preserve">
          <source>StandardCopyOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cbc46ea193138e3e325f1e421395fdcbd75dd7" translate="yes" xml:space="preserve">
          <source>StandardCopyOption.valueOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6519c566184151fc3084a927060129008297c48c" translate="yes" xml:space="preserve">
          <source>StandardCopyOption.values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a93aef8173ba3ddeba54378c602edbf9a5eee6a" translate="yes" xml:space="preserve">
          <source>StandardEmitterMBean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c550cacee5e04cff4d993e00417ebac12bff88" translate="yes" xml:space="preserve">
          <source>StandardEmitterMBean.addNotificationListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f0d9edbcab542ffd9b507139f71efb57a8290f" translate="yes" xml:space="preserve">
          <source>StandardEmitterMBean.getNotificationInfo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4854c04d0638e1f5fa16e95404ea6d98e4cfdd0d" translate="yes" xml:space="preserve">
          <source>StandardEmitterMBean.removeNotificationListener()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369606e64dc580a0980c20c7c41c26061c0052ca" translate="yes" xml:space="preserve">
          <source>StandardEmitterMBean.sendNotification()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf1f1c293f2e4c9aa9d2c7c5e7c6956180b2dcc" translate="yes" xml:space="preserve">
          <source>StandardJavaFileManager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dac22cc6d09549c06a943307072b6e43eb788ea" translate="yes" xml:space="preserve">
          <source>StandardJavaFileManager.getJavaFileObjects()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972a8cb0bafc7f87eef073f0a9bd0749ad65e326" translate="yes" xml:space="preserve">
          <source>StandardJavaFileManager.getJavaFileObjectsFromFiles()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472c67084160c2717706e67c8c8aa60d1840e906" translate="yes" xml:space="preserve">
          <source>StandardJavaFileManager.getJavaFileObjectsFromStrings()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5a5e7ed35d88f3bd874f388ff9b1beb59d414c" translate="yes" xml:space="preserve">
          <source>StandardJavaFileManager.getLocation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b017349d214c52bd9cd2c3e48081b4178711afc" translate="yes" xml:space="preserve">
          <source>StandardJavaFileManager.isSameFile()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5197d3ce45c10d6b3bce742b0d91ca6f42e363" translate="yes" xml:space="preserve">
          <source>StandardJavaFileManager.setLocation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112583ca3a6f2a755ed46e2c3279b9259215586d" translate="yes" xml:space="preserve">
          <source>StandardLocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224d361e63974f75b4c918b760234e693149b038" translate="yes" xml:space="preserve">
          <source>StandardLocation.getName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bc8002216eb612954409dafb006d576703d25d" translate="yes" xml:space="preserve">
          <source>StandardLocation.isOutputLocation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b93b5c0a93c0ac7b5b109d1702443158c379ca" translate="yes" xml:space="preserve">
          <source>StandardLocation.locationFor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93641e50b7bfe960a19699b112498f02091988de" translate="yes" xml:space="preserve">
          <source>StandardLocation.valueOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bec9eb807d03c6de1c4a82f57e05a0c55f9667c" translate="yes" xml:space="preserve">
          <source>StandardLocation.values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2c6ff2f24db3227bed112aedc288ca7068abf2" translate="yes" xml:space="preserve">
          <source>StandardMBean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85dad558396f18061daab7ebf7fa5178a3035bf7" translate="yes" xml:space="preserve">
          <source>StandardMBean.cacheMBeanInfo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0fbde515541df226f18a5250e5c6796befb1b8" translate="yes" xml:space="preserve">
          <source>StandardMBean.getAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3867125417903f7eb38fa8a0a138293cc858a56d" translate="yes" xml:space="preserve">
          <source>StandardMBean.getAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81140ade339536f9d5df78f8a583420604f4c37f" translate="yes" xml:space="preserve">
          <source>StandardMBean.getCachedMBeanInfo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afd0cc574d74462d7d42400d75d9c7b1ed25420" translate="yes" xml:space="preserve">
          <source>StandardMBean.getClassName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2d10ac6c21603208964492be978a3aa7776b99" translate="yes" xml:space="preserve">
          <source>StandardMBean.getConstructors()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c9cb2ba60b3ca665ac901f40a38a3bf463f087" translate="yes" xml:space="preserve">
          <source>StandardMBean.getDescription()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24bafd0a4300b0a1d6dc973a50c6aab19ef0b1c2" translate="yes" xml:space="preserve">
          <source>StandardMBean.getImpact()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fcee607164994d5f80e4958307125dbe9c60ba" translate="yes" xml:space="preserve">
          <source>StandardMBean.getImplementation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c69f32bb7af8d802bfa5b7b732773c154b332e9" translate="yes" xml:space="preserve">
          <source>StandardMBean.getImplementationClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e963fc582ba5830d2f5a4526f5573f3fcc82f6bf" translate="yes" xml:space="preserve">
          <source>StandardMBean.getMBeanInfo()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a214906aa2de0bf8ecab1c259fc00ab228eb80b8" translate="yes" xml:space="preserve">
          <source>StandardMBean.getMBeanInterface()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d3f8797292fde93c7faec6500f147b862a72f4" translate="yes" xml:space="preserve">
          <source>StandardMBean.getParameterName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469717a95e7c38f96ce01f687d8da185add780dc" translate="yes" xml:space="preserve">
          <source>StandardMBean.invoke()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8fcde18997c830876e5cc8b057917d90579748" translate="yes" xml:space="preserve">
          <source>StandardMBean.postDeregister()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d9472de819a450f5f772d119edab8ea45361aa" translate="yes" xml:space="preserve">
          <source>StandardMBean.postRegister()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1cc7a10cb616a12f10728b50f28217183e8c9e" translate="yes" xml:space="preserve">
          <source>StandardMBean.preDeregister()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6058bba4965883d23690290ab2017638816b32" translate="yes" xml:space="preserve">
          <source>StandardMBean.preRegister()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fd14518f05bbaeef87fda0b28575e16752c837" translate="yes" xml:space="preserve">
          <source>StandardMBean.setAttribute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1ae1d0c613a2d3b73a92e690ea8382c0d055b6" translate="yes" xml:space="preserve">
          <source>StandardMBean.setAttributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23125d222c210f6ddb3eee141f7b4716a0a9db92" translate="yes" xml:space="preserve">
          <source>StandardMBean.setImplementation()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b1c524959c3cecbb4103912e4ddb81e7524c56" translate="yes" xml:space="preserve">
          <source>StandardOpenOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3220149f10e43c7b82188bef283f9e6fc870116" translate="yes" xml:space="preserve">
          <source>StandardOpenOption.valueOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cc01f30f974e5764f5254fcc39cd6662c96b16" translate="yes" xml:space="preserve">
          <source>StandardOpenOption.values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684c9bef566b91ba33166ff56cff501a126ce848" translate="yes" xml:space="preserve">
          <source>StandardProtocolFamily</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fc2b901b1f7c820f74a1d9e192435cf09f8bdf" translate="yes" xml:space="preserve">
          <source>StandardProtocolFamily.valueOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639d76ebbde56c891c27d65d8e107cc9bbf52e83" translate="yes" xml:space="preserve">
          <source>StandardProtocolFamily.values()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebc60c312c067951d135f466b0aa421685d7f18" translate="yes" xml:space="preserve">
          <source>StandardSocketOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b90195f043488c9e4f3e9d8a0830973b477762d" translate="yes" xml:space="preserve">
          <source>StandardWatchEventKinds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c05ccf4af46c0937270935f66b14bc084c18f7e" translate="yes" xml:space="preserve">
          <source>Standardized representation for serialized Key objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719d91e50098fb1acc59d59f167b1c6ea41a7437" translate="yes" xml:space="preserve">
          <source>StartTlsRequest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ceb4aabb2052e8b9281f79a72ba67f5ea95658c" translate="yes" xml:space="preserve">
          <source>StartTlsRequest.createExtendedResponse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c1cba1849d1dfe7e8ec8dfdc2406ea9d98c933" translate="yes" xml:space="preserve">
          <source>StartTlsRequest.getEncodedValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb79d6f5a458eb56dc941e59d501ffcaeecda461" translate="yes" xml:space="preserve">
          <source>StartTlsRequest.getID()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45676ec53b37852675b6ebfcf353873bfc93b60" translate="yes" xml:space="preserve">
          <source>StartTlsResponse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7718afd3862b1ff3951383ccdb29862098ac296f" translate="yes" xml:space="preserve">
          <source>StartTlsResponse.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b27a008bc0d60862c1c5434bfc9b8cc9bb10082" translate="yes" xml:space="preserve">
          <source>StartTlsResponse.getEncodedValue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75edf5056494d64dbf35ba652399454becf7a52c" translate="yes" xml:space="preserve">
          <source>StartTlsResponse.getID()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145103c21ec53a118781c7be6c6c5814a10e78f3" translate="yes" xml:space="preserve">
          <source>StartTlsResponse.negotiate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61e4bdafb58c22c33f25c6aaaf6dfeeaad5b69b" translate="yes" xml:space="preserve">
          <source>StartTlsResponse.setEnabledCipherSuites()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d81b18d14743d6e07054516a10b4156fa57d81" translate="yes" xml:space="preserve">
          <source>StartTlsResponse.setHostnameVerifier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc68b4e6f45ee7e07f840331ec7fe92162ba92ab" translate="yes" xml:space="preserve">
          <source>Starting a new process which uses the default working directory and environment is easy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6e836bb716274b7c6add18300f540edfc353d8" translate="yes" xml:space="preserve">
          <source>Starting an operating system process is highly system-dependent. Among the many things that can go wrong are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f850f882829cf54b883b40e7180891afc387897" translate="yes" xml:space="preserve">
          <source>Starting from JDK8, the search order of locale sensitive services can be configured by using the &quot;java.locale.providers&quot; system property. This system property declares the user's preferred order for looking up the locale sensitive services separated by a comma. It is only read at the Java runtime startup, so the later call to System.setProperty() won't affect the order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ecea288276809ff4e1877cfa54db78ffd0f497" translate="yes" xml:space="preserve">
          <source>Starts a core thread, causing it to idly wait for work. This overrides the default policy of starting core threads only when new tasks are executed. This method will return &lt;code&gt;false&lt;/code&gt; if all core threads have already been started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7562e0da40e8305749b29583895fb8839c164c2b" translate="yes" xml:space="preserve">
          <source>Starts a new process using the attributes of this process builder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1f442de6d984e91374856fb1fbd2d96a9378f5" translate="yes" xml:space="preserve">
          <source>Starts all core threads, causing them to idly wait for work. This overrides the default policy of starting core threads only when new tasks are executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c525a5a01530bd571b5d9169d9cd0cf7ece5322" translate="yes" xml:space="preserve">
          <source>Starts an SSL handshake on this connection. Common reasons include a need to use new encryption keys, to change cipher suites, or to initiate a new session. To force complete reauthentication, the current session could be invalidated before starting this handshake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad5a3d1d3adb34fc2e8e0eb520905154bb4ae5d" translate="yes" xml:space="preserve">
          <source>Starts looping playback from the current position. Playback will continue to the loop's end point, then loop back to the loop start point &lt;code&gt;count&lt;/code&gt; times, and finally continue playback to the end of the clip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6a4b98bb4117fe8e37c992d37f531558a17e94" translate="yes" xml:space="preserve">
          <source>Starts playback of the MIDI data in the currently loaded sequence. Playback will begin from the current position. If the playback position reaches the loop end point, and the loop count is greater than 0, playback will resume at the loop start point for the number of repetitions set with &lt;code&gt;setLoopCount&lt;/code&gt;. After that, or if the loop count is 0, playback will continue to play to the end of the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741ed2366eae3574f4a922b0d5286e85d1f0b148" translate="yes" xml:space="preserve">
          <source>Starts recording and playback of MIDI data. Data is recorded to all enabled tracks, on the channel(s) for which they were enabled. Recording begins at the current position of the sequencer. Any events already in the track are overwritten for the duration of the recording session. Events from the currently loaded sequence, if any, are delivered to the sequencer's transmitter(s) along with messages received during recording.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81626002569b3c1d1153d95e727a37c541fac31" translate="yes" xml:space="preserve">
          <source>Starts the counter monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0e60ae387f372ed30285bb340abc3c7dead46b" translate="yes" xml:space="preserve">
          <source>Starts the gauge monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ccc5eb746e4d923043ba868603144b33ab7e6f6" translate="yes" xml:space="preserve">
          <source>Starts the monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd7f189ff068811a33548c14ec76ba646115588" translate="yes" xml:space="preserve">
          <source>Starts the specified note sounding. The key-down velocity usually controls the note's volume and/or brightness. If &lt;code&gt;velocity&lt;/code&gt; is zero, this method instead acts like &lt;a href=&quot;midichannel#noteOff-int-&quot;&gt;&lt;code&gt;noteOff(int)&lt;/code&gt;&lt;/a&gt;, terminating the note.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bda2dc2e5664e24e539a7f04905e1269dab90b3" translate="yes" xml:space="preserve">
          <source>Starts the string monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdc27c982e7ca7266126f8508bb626f92d9b454" translate="yes" xml:space="preserve">
          <source>Starts the timer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718874628047ffdbd8c80dc173479191a9f8bfc8" translate="yes" xml:space="preserve">
          <source>StateFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cef88ec6819399baf39e72e4407c0497fbf9dce" translate="yes" xml:space="preserve">
          <source>StateFactory.getStateToBind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd06719741256b9a25406984d1e60d96fd9b57c" translate="yes" xml:space="preserve">
          <source>Stateful operations may need to process the entire input before producing a result. For example, one cannot produce any results from sorting a stream until one has seen all elements of the stream. As a result, under parallel computation, some pipelines containing stateful intermediate operations may require multiple passes on the data or may need to buffer significant data. Pipelines containing exclusively stateless intermediate operations can be processed in a single pass, whether sequential or parallel, with minimal data buffering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d3e89dcfa7ce7ac87009b1c9572093cf7760b7" translate="yes" xml:space="preserve">
          <source>Stateless behaviors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72ca256dc49e55a1a57b9a727fbde9834c9a3f7" translate="yes" xml:space="preserve">
          <source>Statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acf1000a0cf670b95aaca728c58bc74cd5e7cb3" translate="yes" xml:space="preserve">
          <source>Statement.execute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cffdfba8e42a5128305e728e7000e023a382832" translate="yes" xml:space="preserve">
          <source>Statement.getArguments()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd1db9bc986a3a904676af5895f1696ed2a56b6" translate="yes" xml:space="preserve">
          <source>Statement.getMethodName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263823304fba97616ef944aa269c25c6c0a1bd3e" translate="yes" xml:space="preserve">
          <source>Statement.getTarget()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea3cef1b7dfd953090037df99c1511d6b866546" translate="yes" xml:space="preserve">
          <source>Statement.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea31ab87b567474dcf2f3dd7979eafc493f1420" translate="yes" xml:space="preserve">
          <source>Static &lt;code&gt;from&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469c99805df2b4a4307f47a671d9586b602270e2" translate="yes" xml:space="preserve">
          <source>Static classes and methods for operating on or creating instances of &lt;a href=&quot;spliterator&quot;&gt;&lt;code&gt;Spliterator&lt;/code&gt;&lt;/a&gt; and its primitive specializations &lt;a href=&quot;spliterator.ofint&quot;&gt;&lt;code&gt;Spliterator.OfInt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator.oflong&quot;&gt;&lt;code&gt;Spliterator.OfLong&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator.ofdouble&quot;&gt;&lt;code&gt;Spliterator.OfDouble&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b082088f6805112652627c7350df410805d91412" translate="yes" xml:space="preserve">
          <source>Static factory method that returns the unique object describing a malformed-input error of the given length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a5e95faf64d3c3932281400287dc3adb197129" translate="yes" xml:space="preserve">
          <source>Static factory method that returns the unique result object describing an unmappable-character error of the given length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd3c6cac9a0543bba3dd93ebf12f1efde4a64ad" translate="yes" xml:space="preserve">
          <source>Static factory to retrieve a type 3 (name based) &lt;code&gt;UUID&lt;/code&gt; based on the specified byte array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa35295b026f404130c78b54555b9b963c124b1" translate="yes" xml:space="preserve">
          <source>Static factory to retrieve a type 4 (pseudo randomly generated) UUID. The &lt;code&gt;UUID&lt;/code&gt; is generated using a cryptographically strong pseudo random number generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfa887378d35e0312c162019c09b801afb67941" translate="yes" xml:space="preserve">
          <source>Static field: &lt;code&gt;java.awt.Color.orange&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01076ed8cfdb67739ed08c6145ffbd16a022801e" translate="yes" xml:space="preserve">
          <source>Static method: &lt;code&gt;javax.swing.Box.createRigidArea(new
                                   java.awt.Dimension(0, 5))&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43bfbb7037e14a339985625f0b95e7ce71cdc00" translate="yes" xml:space="preserve">
          <source>Static methods declared in superinterfaces of the class or interface represented by this &lt;code&gt;Class&lt;/code&gt; object are not considered members of the class or interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d78bb439c0ca80a9f95376b953190d4d14c679" translate="yes" xml:space="preserve">
          <source>Static methods from the JMX API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a2377904982021a58fbb1327a1ef3f22471167" translate="yes" xml:space="preserve">
          <source>Static methods from the JMX API. There are no instances of this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542a8a4cedbfbb8d27750124466f3ce0828731af" translate="yes" xml:space="preserve">
          <source>Static methods may be called by using a class object as the target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe10577855afeadc4470f4f25d01735234486aed" translate="yes" xml:space="preserve">
          <source>Status byte for &lt;code&gt;MetaMessage&lt;/code&gt; (0xFF, or 255), which is used in MIDI files. It has the same value as SYSTEM_RESET, which is used in the real-time &quot;MIDI wire&quot; protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad23752a1f1e4ddabf82629a8619ac4183e7be2" translate="yes" xml:space="preserve">
          <source>Status byte for Active Sensing message (0xFE, or 254).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb29867de2b7d8a8539684af9650dabcc653091" translate="yes" xml:space="preserve">
          <source>Status byte for Continue message (0xFB, or 251).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd8220bcb1b73e3f8e9d3578f774da2c809550d" translate="yes" xml:space="preserve">
          <source>Status byte for End of System Exclusive message (0xF7, or 247).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec21aaf0cc42ebe5312ad3d1149f91afa676ca4b" translate="yes" xml:space="preserve">
          <source>Status byte for MIDI Song Select message (0xF3, or 243).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf39938cbc15f48f2026ba0cad436f9c56dfc05" translate="yes" xml:space="preserve">
          <source>Status byte for MIDI Time Code Quarter Frame message (0xF1, or 241).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ddfd86b1ae354a8ade9afc66f17a3d1fc84be7" translate="yes" xml:space="preserve">
          <source>Status byte for Song Position Pointer message (0xF2, or 242).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4b6365dd2d02b7958ab640b282f6c110c4f491" translate="yes" xml:space="preserve">
          <source>Status byte for Special System Exclusive message (0xF7, or 247), which is used in MIDI files. It has the same value as END_OF_EXCLUSIVE, which is used in the real-time &quot;MIDI wire&quot; protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa476a540b006602c87dc9cf9d6c4400f5cf928" translate="yes" xml:space="preserve">
          <source>Status byte for Start message (0xFA, or 250).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246e36757189d87740980a7d822b6bdfbf956f1b" translate="yes" xml:space="preserve">
          <source>Status byte for Stop message (0xFC, or 252).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42734e5d2d14420b5e5deb296dc9b9b1568148bd" translate="yes" xml:space="preserve">
          <source>Status byte for System Exclusive message (0xF0, or 240).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51f7dcc94575625cb5d6ac1abb75f4a9b82e814" translate="yes" xml:space="preserve">
          <source>Status byte for System Reset message (0xFF, or 255).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08482aee38de7288ed8a0cf5732d5de56fccfa75" translate="yes" xml:space="preserve">
          <source>Status byte for Timing Clock message (0xF8, or 248).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bb7cae1d918286880c99e8f646b1621f675036" translate="yes" xml:space="preserve">
          <source>Status byte for Tune Request message (0xF6, or 246).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee757c43a8f253b12d3c0d9a77b957140d89a70" translate="yes" xml:space="preserve">
          <source>StdACChrominance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758eb63f8a62a38b27a9e620617a7594ce5ae0b6" translate="yes" xml:space="preserve">
          <source>StdACLuminance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd464fa7c1aeb8ba04d5a7901a85a154e3339ed" translate="yes" xml:space="preserve">
          <source>StdDCChrominance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317d4ff17e8ac6fd49ec944819c51af1ec691866" translate="yes" xml:space="preserve">
          <source>StdDCLuminance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b8aa507bda16528a62cef30c3afced4b667c49" translate="yes" xml:space="preserve">
          <source>Stopping a connector server does not unregister it from its MBean server. A connector server once stopped cannot be restarted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611f11cc5462dfcdcdd87e3730c2d68e50069fe3" translate="yes" xml:space="preserve">
          <source>Stopping of threads via calls to the Thread &lt;code&gt;stop&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975c27ddfcb36160b7d6f1a143dc4353a93e08ab" translate="yes" xml:space="preserve">
          <source>Stops all threads in this thread group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4ef69d5d825ba05bfd7f5f256527c1c4e0f05d" translate="yes" xml:space="preserve">
          <source>Stops further processing of a print job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d14bf55682a97e0661fcd3c6c0d8775f168621" translate="yes" xml:space="preserve">
          <source>Stops recording, if active, and playback of the currently loaded sequence, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19127d4b0c1b71808ff290795d428e5976b8d60" translate="yes" xml:space="preserve">
          <source>Stops recording, if active. Playback of the current sequence continues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1355e0393e240908c361a743bc771c81373b73" translate="yes" xml:space="preserve">
          <source>Stops the counter monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1702ab2823981e3816dc2ea153cd03b79f785d9a" translate="yes" xml:space="preserve">
          <source>Stops the gauge monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c66f02d0287f793023a08a65e59dad400e8349" translate="yes" xml:space="preserve">
          <source>Stops the line. A stopped line should cease I/O activity. If the line is open and running, however, it should retain the resources required to resume activity. A stopped line should retain any audio data in its buffer instead of discarding it, so that upon resumption the I/O can continue where it left off, if possible. (This doesn't guarantee that there will never be discontinuities beyond the current buffer, of course; if the stopped condition continues for too long, input or output samples might be dropped.) If desired, the retained data can be discarded by invoking the &lt;code&gt;flush&lt;/code&gt; method. When audio capture or playback stops, a &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57edf442c085f7f0ecf70f94da8a8ae3a444cfb" translate="yes" xml:space="preserve">
          <source>Stops the monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfda91860d7075327a1c1edfc1fc29aff4332a7" translate="yes" xml:space="preserve">
          <source>Stops the string monitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0713b3a8e511e95638c9e466e15cdda08a2fea" translate="yes" xml:space="preserve">
          <source>Stops the timer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c1df704bafb2160285e8bd44141449ccedf07d" translate="yes" xml:space="preserve">
          <source>Storage for files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515635911b42913b826d3e29cce235a6649433c9" translate="yes" xml:space="preserve">
          <source>Storage for files. A &lt;code&gt;FileStore&lt;/code&gt; represents a storage pool, device, partition, volume, concrete file system or other implementation specific means of file storage. The &lt;code&gt;FileStore&lt;/code&gt; for where a file is stored is obtained by invoking the &lt;a href=&quot;files#getFileStore-java.nio.file.Path-&quot;&gt;&lt;code&gt;getFileStore&lt;/code&gt;&lt;/a&gt; method, or all file stores can be enumerated by invoking the &lt;a href=&quot;filesystem#getFileStores--&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e84f15bb2ed5bd2ba9a540d5f2330a9a807522" translate="yes" xml:space="preserve">
          <source>Store a &lt;code&gt;LogRecord&lt;/code&gt; in an internal buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2c160aba4c99e1f150cb949eb141acf42180b0" translate="yes" xml:space="preserve">
          <source>Store the MBean if 'persistPolicy' field is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3753fffcdb3deb984b61b8fdc5fd46f9de5c7b" translate="yes" xml:space="preserve">
          <source>Stores this keystore to the given output stream, and protects its integrity with the given password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a512bdf66a54122e1954256af19158e557d8e7f" translate="yes" xml:space="preserve">
          <source>Stores this keystore using the given &lt;code&gt;KeyStore.LoadStoreParmeter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804811a8fc6a2b78d7a874f373a5ceced15e66ab" translate="yes" xml:space="preserve">
          <source>Stores this keystore using the given &lt;code&gt;LoadStoreParameter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b427915b2946ba5414f41f145afd680618835d3" translate="yes" xml:space="preserve">
          <source>Storing the dimensions internally in common units of &amp;micro;m lets two size attributes be compared without regard to the units in which they were created; for example, 8.5 in will compare equal to 215.9 mm, as they both are stored as 215900 &amp;micro;m. For example, a lookup service can match resolution attributes based on equality of their serialized representations regardless of the units in which they were created. Using integers for internal storage allows precise equality comparisons to be done, which would not be guaranteed if an internal floating point representation were used. Note that if you're looking for U.S. letter sized media in metric units, you have to search for a media size of 215.9 x 279.4 mm; rounding off to an integral 216 x 279 mm will not match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db046535c4d92e8e0e5edb978430ee296b3c7d3d" translate="yes" xml:space="preserve">
          <source>Storing the values internally in common units of dphi lets two resolution attributes be compared without regard to the units in which they were created; for example, 300 dpcm will compare equal to 762 dpi, as they both are stored as 76200 dphi. In particular, a lookup service can match resolution attributes based on equality of their serialized representations regardless of the units in which they were created. Again, using integers for internal storage allows precise equality comparisons to be done, which would not be guaranteed if a floating point representation were used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fccd0b5065d791c295f17066b281e9372fb4c92" translate="yes" xml:space="preserve">
          <source>Strategy for adjusting a temporal object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d7f07080ff7984f9840863d57d67d70998b065" translate="yes" xml:space="preserve">
          <source>Strategy for querying a temporal object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df063869e11d7a9aa132cd4a984f7b5eb870d656" translate="yes" xml:space="preserve">
          <source>Stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eeaaaa50edaa985a97ad587aea17bd1a04483b2" translate="yes" xml:space="preserve">
          <source>Stream based logging &lt;code&gt;Handler&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375be10e87160f1e20a6685eed3e63a6f8f4a6b7" translate="yes" xml:space="preserve">
          <source>Stream marks are intended to be used in situations where you need to read ahead a little to see what's in the stream. Often this is most easily done by invoking some general parser. If the stream is of the type handled by the parse, it just chugs along happily. If the stream is not of that type, the parser should toss an exception when it fails. If this happens within readlimit bytes, it allows the outer code to reset the stream and try another parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5700c62d61b202046b3938e1a4791a619517c5ca" translate="yes" xml:space="preserve">
          <source>Stream marks are intended to be used in situations where you need to read ahead a little to see what's in the stream. Often this is most easily done by invoking some general parser. If the stream is of the type handled by the parser, it just chugs along happily. If the stream is not of that type, the parser should toss an exception when it fails, which, if it happens within readlimit bytes, allows the outer code to reset the stream and try another parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f875c81e6ee94c120a6f5957a8c789655ec24cde" translate="yes" xml:space="preserve">
          <source>Stream metadata may optionally be supplied; if it is &lt;code&gt;null&lt;/code&gt;, default stream metadata will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83dc0ada989ee56e68c42d6d093ac2bf6b1a3405" translate="yes" xml:space="preserve">
          <source>Stream operations and pipelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f659425e860f2b63b40baa118bf663cd5f0e7e" translate="yes" xml:space="preserve">
          <source>Stream operations are divided into &lt;em&gt;intermediate&lt;/em&gt; and &lt;em&gt;terminal&lt;/em&gt; operations, and are combined to form &lt;em&gt;stream pipelines&lt;/em&gt;. A stream pipeline consists of a source (such as a &lt;code&gt;Collection&lt;/code&gt;, an array, a generator function, or an I/O channel); followed by zero or more intermediate operations such as &lt;code&gt;Stream.filter&lt;/code&gt; or &lt;code&gt;Stream.map&lt;/code&gt;; and a terminal operation such as &lt;code&gt;Stream.forEach&lt;/code&gt; or &lt;code&gt;Stream.reduce&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc795529980114a4f12fb63c1b60c3f1ec9cf68" translate="yes" xml:space="preserve">
          <source>Stream pipeline results may be nondeterministic or incorrect if the behavioral parameters to the stream operations are &lt;em&gt;stateful&lt;/em&gt;. A stateful lambda (or other object implementing the appropriate functional interface) is one whose result depends on any state which might change during the execution of the stream pipeline. An example of a stateful lambda is the parameter to &lt;code&gt;map()&lt;/code&gt; in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2285e35c343bd1fa6dfcf2e513b3c6cde94dcbc4" translate="yes" xml:space="preserve">
          <source>Stream pipelines may execute either sequentially or in &lt;a href=&quot;package-summary#Parallelism&quot;&gt;parallel&lt;/a&gt;. This execution mode is a property of the stream. Streams are created with an initial choice of sequential or parallel execution. (For example, &lt;a href=&quot;../collection#stream--&quot;&gt;&lt;code&gt;Collection.stream()&lt;/code&gt;&lt;/a&gt; creates a sequential stream, and &lt;a href=&quot;../collection#parallelStream--&quot;&gt;&lt;code&gt;Collection.parallelStream()&lt;/code&gt;&lt;/a&gt; creates a parallel one.) This choice of execution mode may be modified by the &lt;a href=&quot;basestream#sequential--&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;basestream#parallel--&quot;&gt;&lt;code&gt;BaseStream.parallel()&lt;/code&gt;&lt;/a&gt; methods, and may be queried with the &lt;a href=&quot;basestream#isParallel--&quot;&gt;&lt;code&gt;BaseStream.isParallel()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adb7c72172f79a4a3c9e87ffdacac288d8aab3e" translate="yes" xml:space="preserve">
          <source>Stream.Builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b619fe5a3317cd0be72a1d3262d9ed081c69ed6" translate="yes" xml:space="preserve">
          <source>Stream.Builder.accept()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ddf38238b85cd63faa8e774945e683a20b67fd" translate="yes" xml:space="preserve">
          <source>Stream.Builder.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04a5b910982f02c53bdfb36985f6867f9da9d6f" translate="yes" xml:space="preserve">
          <source>Stream.Builder.build()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7126aad4ca96bbe6cda141b346445c08f5da6008" translate="yes" xml:space="preserve">
          <source>Stream.allMatch()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc318780d0dc7b78e559133044e8f7a1701b6b3" translate="yes" xml:space="preserve">
          <source>Stream.anyMatch()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc21a6a80df84a206bb3d21d219c853a9a492b6" translate="yes" xml:space="preserve">
          <source>Stream.builder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd0c2712621755ebe76aa7f2451f9286078c681" translate="yes" xml:space="preserve">
          <source>Stream.collect()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3baefc34e2fcdc366afbde51c446671e1c5c3cc0" translate="yes" xml:space="preserve">
          <source>Stream.concat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269e33de70cf73fbd506c9a9a8ab58953fcedefd" translate="yes" xml:space="preserve">
          <source>Stream.count()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e941eb0e809a86881e08733b314447ce5a624582" translate="yes" xml:space="preserve">
          <source>Stream.distinct()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec578e1f2b9cf215bf02179443d2b9731280e18" translate="yes" xml:space="preserve">
          <source>Stream.empty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79439e8493ba6c324ebd8be2e8461e15d33ff95a" translate="yes" xml:space="preserve">
          <source>Stream.filter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ebe0f5d5c670dc76b77ffb9fadbd9dd7507684" translate="yes" xml:space="preserve">
          <source>Stream.findAny()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a55eb96868040c688a341bd44c95eb822433c9" translate="yes" xml:space="preserve">
          <source>Stream.findFirst()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2998bb30afa9ffd79f8d8d3c3f5b46a72f51e99" translate="yes" xml:space="preserve">
          <source>Stream.flatMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed76d629b52c204a19a74c5d37778136a1832d9" translate="yes" xml:space="preserve">
          <source>Stream.flatMapToDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9630706140c99f7cd64fa5a35610a4a028d25572" translate="yes" xml:space="preserve">
          <source>Stream.flatMapToInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e10c5a6f1d7ec7028c00adb928da5913f97394" translate="yes" xml:space="preserve">
          <source>Stream.flatMapToLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80741f74803d5ec1b726af02db3e8a11c0a688db" translate="yes" xml:space="preserve">
          <source>Stream.forEach()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f531ed3c77591e791d2919245fac1ce342dda19e" translate="yes" xml:space="preserve">
          <source>Stream.forEachOrdered()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a1c1e52dc2b092a5d52a8ee1942746d2579b4d" translate="yes" xml:space="preserve">
          <source>Stream.generate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b8cd6d17eb2b9b62885e6e3e79bf86d63d74a8" translate="yes" xml:space="preserve">
          <source>Stream.iterate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df30f21b4659adaab68265d8c750ad14a0cc51a4" translate="yes" xml:space="preserve">
          <source>Stream.limit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6bcd13b8016867e54e2174b58b9db5c96cd802" translate="yes" xml:space="preserve">
          <source>Stream.map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d0a23b03937df1b9cb38963b20bcd954addac5" translate="yes" xml:space="preserve">
          <source>Stream.mapToDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff332742c3ea17aca5644d706260f622789d651" translate="yes" xml:space="preserve">
          <source>Stream.mapToInt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8c72bedbf616af0188653334f25fad52075bdb" translate="yes" xml:space="preserve">
          <source>Stream.mapToLong()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4956599296d6e87433d2c402ffa2a9e1a61ca53" translate="yes" xml:space="preserve">
          <source>Stream.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045e06eea17832dee5ce589ef05340d2ca4ab805" translate="yes" xml:space="preserve">
          <source>Stream.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fe76f1895af66c2927998c1a6e6df0d7dcd37f" translate="yes" xml:space="preserve">
          <source>Stream.noneMatch()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf13c146605c7a7f2ba8acfb038284d8d56d41a" translate="yes" xml:space="preserve">
          <source>Stream.of()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0691d7f3904bf0d4638acb3b3e9d98f4b80a6f74" translate="yes" xml:space="preserve">
          <source>Stream.peek()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441c900eb82181eb1de0ace63b07ad5df18f42ee" translate="yes" xml:space="preserve">
          <source>Stream.reduce()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e545e42a89bcdcbe9a596694ae1d0d1717352727" translate="yes" xml:space="preserve">
          <source>Stream.skip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d26432b3c42a5315996e73e8a7db3db79d68acf" translate="yes" xml:space="preserve">
          <source>Stream.sorted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f296e8312e28ba98c9c129577006cd805ab000" translate="yes" xml:space="preserve">
          <source>Stream.toArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1718dd809013db043eb40a9a6e9ae92f89f5d8" translate="yes" xml:space="preserve">
          <source>StreamCorruptedException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e82e51665d41e14a42a817879e54fc401d36d92" translate="yes" xml:space="preserve">
          <source>StreamHandler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad06a5638842271058935da38f887d458c06ac49" translate="yes" xml:space="preserve">
          <source>StreamHandler.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2518a3b36fd21ff57ee4e94b425177496fe02915" translate="yes" xml:space="preserve">
          <source>StreamHandler.flush()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff69c9b069025b0d4aebc1f9557b3100b7aa008" translate="yes" xml:space="preserve">
          <source>StreamHandler.isLoggable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c26a4cc8768e0fa41604cdaea26e7fc6a38f43" translate="yes" xml:space="preserve">
          <source>StreamHandler.publish()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880d83a69a31f0576fb4dc5347f0e02ce8dc38bf" translate="yes" xml:space="preserve">
          <source>StreamHandler.setEncoding()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef444d3f4da02e6376c7eb27110ff3f12b65026" translate="yes" xml:space="preserve">
          <source>StreamHandler.setOutputStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3016125357519154dceffb69a341a76dfde95c4" translate="yes" xml:space="preserve">
          <source>StreamPrintService</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72791241acd9756b42c0ef57fb39db8e3f430dd3" translate="yes" xml:space="preserve">
          <source>StreamPrintService.dispose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f057c9bab249fc44fc21eb4d1f873303037602" translate="yes" xml:space="preserve">
          <source>StreamPrintService.getOutputFormat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c128cf1330f916e8d1b605eaf35aba1cece22305" translate="yes" xml:space="preserve">
          <source>StreamPrintService.getOutputStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c05a5da0d37b5f3d4230cf1a54303481c70538" translate="yes" xml:space="preserve">
          <source>StreamPrintService.isDisposed()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7348d1189468e8cc2d46ed54d12f9bba71c0f275" translate="yes" xml:space="preserve">
          <source>StreamPrintServiceFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a82824a32659ba47f2224879baeef76cecd12fc" translate="yes" xml:space="preserve">
          <source>StreamPrintServiceFactory.getOutputFormat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0612a48abb59e20e9134f4fe943943464acbd2" translate="yes" xml:space="preserve">
          <source>StreamPrintServiceFactory.getPrintService()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e844b46e7e0949c6191dff92481acd9cc85223f" translate="yes" xml:space="preserve">
          <source>StreamPrintServiceFactory.getSupportedDocFlavors()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e0564158bfbacc4535363cfa4127012e76de5a3" translate="yes" xml:space="preserve">
          <source>StreamPrintServiceFactory.lookupStreamPrintServiceFactories()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f90c413c2507d7c0681d52b3122f665255c4bd6" translate="yes" xml:space="preserve">
          <source>StreamSupport</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d7d2d932704f040cde3346f840fe895050ca34" translate="yes" xml:space="preserve">
          <source>StreamSupport.doubleStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c95961c9721dfa262b35d8865e91a3af0741f69" translate="yes" xml:space="preserve">
          <source>StreamSupport.intStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e63090d1f4cca665ca810bceb1aff89b699c00" translate="yes" xml:space="preserve">
          <source>StreamSupport.longStream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db64ba9993ef0e098e07160f2c1f1fa0bdc5c62b" translate="yes" xml:space="preserve">
          <source>StreamSupport.stream()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6809f40328614f5d624e28972cb2b8009a3bc9c4" translate="yes" xml:space="preserve">
          <source>StreamTokenizer</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
