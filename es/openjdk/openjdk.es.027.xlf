<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="15a2250d58064792e0aa4c812b2fcd12bbf2cba8" translate="yes" xml:space="preserve">
          <source>Arrays.equals()</source>
          <target state="translated">Arrays.equals()</target>
        </trans-unit>
        <trans-unit id="7065cdf47ae5fa24a1bc1786252642b6ffc02e75" translate="yes" xml:space="preserve">
          <source>Arrays.fill()</source>
          <target state="translated">Arrays.fill()</target>
        </trans-unit>
        <trans-unit id="b7f4f05ac6079c2f39826d73fa974a667c2af896" translate="yes" xml:space="preserve">
          <source>Arrays.hashCode()</source>
          <target state="translated">Arrays.hashCode()</target>
        </trans-unit>
        <trans-unit id="1c84a0a521a0f88270229b96bf0c0c7052d3e797" translate="yes" xml:space="preserve">
          <source>Arrays.parallelPrefix()</source>
          <target state="translated">Arrays.parallelPrefix()</target>
        </trans-unit>
        <trans-unit id="6158fac122308b4615eef303cf6d18c4b6c598db" translate="yes" xml:space="preserve">
          <source>Arrays.parallelSetAll()</source>
          <target state="translated">Arrays.parallelSetAll()</target>
        </trans-unit>
        <trans-unit id="80c65cbf63256455d9f0156c52fe85f7774ffe3b" translate="yes" xml:space="preserve">
          <source>Arrays.parallelSort()</source>
          <target state="translated">Arrays.parallelSort()</target>
        </trans-unit>
        <trans-unit id="be3d1ea55339b035c7d4c55fc7102d227e5eb8ac" translate="yes" xml:space="preserve">
          <source>Arrays.setAll()</source>
          <target state="translated">Arrays.setAll()</target>
        </trans-unit>
        <trans-unit id="6eb3c3ed8dad53c9c7b43fe48c62d680b9b601f2" translate="yes" xml:space="preserve">
          <source>Arrays.sort()</source>
          <target state="translated">Arrays.sort()</target>
        </trans-unit>
        <trans-unit id="db8256238c2e9e487d4c3cd55dcc7735a411e0ad" translate="yes" xml:space="preserve">
          <source>Arrays.spliterator()</source>
          <target state="translated">Arrays.spliterator()</target>
        </trans-unit>
        <trans-unit id="3f01157894c7fb06cfd674ea96da3e264a32b485" translate="yes" xml:space="preserve">
          <source>Arrays.stream()</source>
          <target state="translated">Arrays.stream()</target>
        </trans-unit>
        <trans-unit id="9169ccbfd1326cb33090f82ec8fbe3c7ab8af645" translate="yes" xml:space="preserve">
          <source>Arrays.toString()</source>
          <target state="translated">Arrays.toString()</target>
        </trans-unit>
        <trans-unit id="b298b30836ac59332910f7b9733054fb1ef7ff82" translate="yes" xml:space="preserve">
          <source>Arrives at this phaser and awaits others. Equivalent in effect to &lt;code&gt;awaitAdvance(arrive())&lt;/code&gt;. If you need to await with interruption or timeout, you can arrange this with an analogous construction using one of the other forms of the &lt;code&gt;awaitAdvance&lt;/code&gt; method. If instead you need to deregister upon arrival, use &lt;code&gt;awaitAdvance(arriveAndDeregister())&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331a996402bfe9c73489f9b59ef23c5414ff2f59" translate="yes" xml:space="preserve">
          <source>Arrives at this phaser and deregisters from it without waiting for others to arrive. Deregistration reduces the number of parties required to advance in future phases. If this phaser has a parent, and deregistration causes this phaser to have zero parties, this phaser is also deregistered from its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77bf15c90eea56d5b8772727b356cf4aaf22515" translate="yes" xml:space="preserve">
          <source>Arrives at this phaser, without waiting for others to arrive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a0f3f10a2375351ccbcd46c508e740e33c0052" translate="yes" xml:space="preserve">
          <source>Artificial unit that represents the concept of forever. This is primarily used with &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; to represent unbounded fields such as the year or era. The estimated duration of the era is artificially defined as the largest duration supported by &lt;code&gt;Duration&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51055c590ce92112eede9c3d7b64cc8efee1e10c" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;ArrayType&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a06eee7db8e8e0c95360d596e24304443d3c08a" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;ArrayType&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f31c066c80c5ecc56fb18455cfb5f55e8d1452b" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;CompositeType&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e5a49915ee48848aa83aac1c10d5aa4e7f1ccb" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;CompositeType&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39844cef3aced03bf7c027927a3077ca0c207aa" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;EventHandler&lt;/code&gt; ultimately relies on reflection to invoke a method we recommend against targeting an overloaded method. For example, if the target is an instance of the class &lt;code&gt;MyTarget&lt;/code&gt; which is defined as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee103e1a122355fcb9e79b4fe3fc234251537c4" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946d6e26cfa18c5dae68a73cdfafd66ae3e8c5fc" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfab5877cfd4aadd260affbf021286f773564b5" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac07f54833c9ed8e5c753676bb8a2eddf1a57aa" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf0445af58e188e046e7e859bff2655bb05cf95" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428c0b090909064feea96c5ea3e0851adaf9590a" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c738e291bc0c1040cfbeb66d921626f9eb1fdc" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227aadac004a08ea1ee54c3a5b5ecd8b3b17e38b" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6930e46117c4bb5747552c4bb0b1e5ed8204dae" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28102d97791fec60864d02ec9584b7d0725f6f7" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4aa7fa6a849490533c1d02585baa36a48ace15e" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;SimpleType&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6cadd5d40419488fed610574bff741e74a9113" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;SimpleType&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bc4d923197d0977c93323bf2dfa7f5a46914ed" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;TabularType&lt;/code&gt; instances are immutable, the hash code for this instance is calculated once, on the first call to &lt;code&gt;hashCode&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047b3ab07b8a9ec14650cf8b2c56435c20d42ea5" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;TabularType&lt;/code&gt; instances are immutable, the string representation for this instance is calculated once, on the first call to &lt;code&gt;toString&lt;/code&gt;, and then the same value is returned for subsequent calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a1d751cfb71b7fcb97fc65216d17c414cf67ab" translate="yes" xml:space="preserve">
          <source>As RFC 1122 section 4.2.4.2 indicates, a compliant TCP implementation should, but is not required to, let application change the TOS field during the lifetime of a connection. So whether the type-of-service field can be changed after the TCP connection has been established depends on the implementation in the underlying platform. Applications should not assume that they can change the TOS field after the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63933179360786262318bf144605f9c23c651e60" translate="yes" xml:space="preserve">
          <source>As SO_SNDBUF is a hint, applications that want to verify what size the buffer is should call &lt;a href=&quot;datagramsocket#getSendBufferSize--&quot;&gt;&lt;code&gt;getSendBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1384114084e4b557636b3a669133612afbae554c" translate="yes" xml:space="preserve">
          <source>As a corner case, an uncasted &lt;code&gt;null&lt;/code&gt; argument is given a symbolic type descriptor of &lt;code&gt;java.lang.Void&lt;/code&gt;. The ambiguity with the type &lt;code&gt;Void&lt;/code&gt; is harmless, since there are no references of type &lt;code&gt;Void&lt;/code&gt; except the null reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd15ca7767698ca99948d2fe7faf753510dcb36" translate="yes" xml:space="preserve">
          <source>As a corollary of this, access to protected members is restricted to receivers only of the accessing class, or one of its subclasses, and the accessing class must in turn be a subclass (or package sibling) of the protected member's defining class. If a method reference refers to a protected non-static method or field of a class outside the current package, the receiver argument will be narrowed to the type of the accessing class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e2fbf4bf3c3874328b22e88bce1d044494b951" translate="yes" xml:space="preserve">
          <source>As a corollary, two threads must not attempt to call the same method (either &lt;code&gt;wrap()&lt;/code&gt; or &lt;code&gt;unwrap()&lt;/code&gt;) concurrently, because there is no way to guarantee the eventual packet ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580e11f8bfcdf88928df2e045bb0ed702f504ca2" translate="yes" xml:space="preserve">
          <source>As a further improvement, notice that the left task need not even exist. Instead of creating a new one, we can iterate using the original task, and add a pending count for each fork. Additionally, because no task in this tree implements an &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; method, &lt;code&gt;tryComplete()&lt;/code&gt; can be replaced with &lt;a href=&quot;countedcompleter#propagateCompletion--&quot;&gt;&lt;code&gt;propagateCompletion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b19025d85d644eb22f97cbd0fa732dcda56af0" translate="yes" xml:space="preserve">
          <source>As a general rule, the default load factor (.75) offers a good tradeoff between time and space costs. Higher values decrease the space overhead but increase the lookup cost (reflected in most of the operations of the &lt;code&gt;HashMap&lt;/code&gt; class, including &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt;). The expected number of entries in the map and its load factor should be taken into account when setting its initial capacity, so as to minimize the number of rehash operations. If the initial capacity is greater than the maximum number of entries divided by the load factor, no rehash operations will ever occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e854b3bf3147e12e70b3724dc0c7a2eaff478c26" translate="yes" xml:space="preserve">
          <source>As a matter of pure convention, the &lt;a href=&quot;methodhandles.lookup#lookupClass&quot;&gt;lookup class&lt;/a&gt; of this lookup object will be &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b19e5b4703495ec90563138008d666eca821389" translate="yes" xml:space="preserve">
          <source>As a matter of style, programmers should always use this annotation on the most deeply nested element where it is effective. If you want to suppress a warning in a particular method, you should annotate that method rather than its class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b54334dbad11746d8242cb8b52d1a32929adbea" translate="yes" xml:space="preserve">
          <source>As a numeric identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea0debaf0c58be87193507940bb32b65aead044" translate="yes" xml:space="preserve">
          <source>As a rule, the &lt;code&gt;equals&lt;/code&gt; method should be used by implementations of this class to decide if two keys are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc11a3f7d42b1ac540afd0c6c3ee9d0bfe836f85" translate="yes" xml:space="preserve">
          <source>As a special case, a value of -1 will produce a single large segment with all input files, while a value of 0 will produce one segment for each class. Larger archive segments result in less fragmentation and better compression, but processing them requires more memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b0d14a79938767ce36fbb2707705d3d9cc39a1" translate="yes" xml:space="preserve">
          <source>As a special case, urls of the form, &quot;scheme:*&quot; are accepted to mean any url of the given scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216f9961d4139cec8f0bddd8265f28e7c9a615bb" translate="yes" xml:space="preserve">
          <source>As a special case, when the Core Reflection API is used to view the signature polymorphic methods &lt;code&gt;invokeExact&lt;/code&gt; or plain &lt;code&gt;invoke&lt;/code&gt; in this class, they appear as ordinary non-polymorphic methods. Their reflective appearance, as viewed by &lt;a href=&quot;../class#getDeclaredMethod-java.lang.String-java.lang.Class...-&quot;&gt;&lt;code&gt;Class.getDeclaredMethod&lt;/code&gt;&lt;/a&gt;, is unaffected by their special status in this API. For example, &lt;a href=&quot;../reflect/method#getModifiers--&quot;&gt;&lt;code&gt;Method.getModifiers&lt;/code&gt;&lt;/a&gt; will report exactly those modifier bits required for any similarly declared method, including in this case &lt;code&gt;native&lt;/code&gt; and &lt;code&gt;varargs&lt;/code&gt; bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3508d6b0f8d38b0a073fe61a77c17290460cd9c" translate="yes" xml:space="preserve">
          <source>As a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c0e99193c309cd55617591b9c9cc47876658f4" translate="yes" xml:space="preserve">
          <source>As a third example, the line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8eb36876577789fcdb3c4850fa5c24c780ff9a" translate="yes" xml:space="preserve">
          <source>As an alternative to the generated addresses just described, the &lt;code&gt;serviceURL&lt;/code&gt; address supplied when creating a connector server can specify a &lt;em&gt;directory address&lt;/em&gt; in which to store the provided or generated &lt;code&gt;RMIServer&lt;/code&gt; stub. This directory address is then used by both client and server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519670b8abe414575f9887bc856f1caca855376c" translate="yes" xml:space="preserve">
          <source>As an example how a parallel computation framework, such as the &lt;code&gt;java.util.stream&lt;/code&gt; package, would use Spliterator in a parallel computation, here is one way to implement an associated parallel forEach, that illustrates the primary usage idiom of splitting off subtasks until the estimated amount of work is small enough to perform sequentially. Here we assume that the order of processing across subtasks doesn't matter; different (forked) tasks may further split and process elements concurrently in undetermined order. This example uses a &lt;a href=&quot;concurrent/countedcompleter&quot;&gt;&lt;code&gt;CountedCompleter&lt;/code&gt;&lt;/a&gt;; similar usages apply to other parallel task constructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0ae0a0b146fb1c4a7ccc7080745fe849c0f316" translate="yes" xml:space="preserve">
          <source>As an example of how to transform a stream pipeline that inappropriately uses side-effects to one that does not, the following code searches a stream of strings for those matching a given regular expression, and puts the matches in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0b4cb6953281dedf890ce02d6399e01e8e281d" translate="yes" xml:space="preserve">
          <source>As an example of the creation and meaning of SocketPermissions, note that if the following permission:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b387abc8b857d9304279d1b14c91f4f3312903" translate="yes" xml:space="preserve">
          <source>As an example, a connection ID can look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f24b1ec4f0deb26b67d4a967e2d2944546f1544" translate="yes" xml:space="preserve">
          <source>As an example, each of the following three lines specifies the key &lt;code&gt;&quot;Truth&quot;&lt;/code&gt; and the associated element value &lt;code&gt;&quot;Beauty&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5287559ce076aa6993abddd37b36a81602b2644f" translate="yes" xml:space="preserve">
          <source>As an example, suppose we have a bounded buffer which supports &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;take&lt;/code&gt; methods. If a &lt;code&gt;take&lt;/code&gt; is attempted on an empty buffer, then the thread will block until an item becomes available; if a &lt;code&gt;put&lt;/code&gt; is attempted on a full buffer, then the thread will block until a space becomes available. We would like to keep waiting &lt;code&gt;put&lt;/code&gt; threads and &lt;code&gt;take&lt;/code&gt; threads in separate wait-sets so that we can use the optimization of only notifying a single thread at a time when items or spaces become available in the buffer. This can be achieved using two &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3bc312e29b02ca913f13cc16a375dece93eb7a" translate="yes" xml:space="preserve">
          <source>As an example, suppose you wanted to find all MBeans where the &lt;code&gt;Enabled&lt;/code&gt; attribute is &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;Owner&lt;/code&gt; attribute is &lt;code&gt;&quot;Duke&quot;&lt;/code&gt;. Here is how you could construct the appropriate &lt;code&gt;QueryExp&lt;/code&gt; by chaining together method calls:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20743818463fcdeb7f18917626acb2165d277608" translate="yes" xml:space="preserve">
          <source>As an example, the following piece of code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bfa17581a2aa8712de27e7e305b34e05a857cb" translate="yes" xml:space="preserve">
          <source>As an example, the strings &quot;Good&quot;, &quot;Better&quot;, and &quot;Best&quot; could be associated with the ranges &lt;code&gt;[0, .33)&lt;/code&gt;, &lt;code&gt;[.33, .66)&lt;/code&gt;, and &lt;code&gt;[.66, 1.0]&lt;/code&gt;. In this case, &lt;code&gt;getCompressionQualityDescriptions&lt;/code&gt; would return &lt;code&gt;{ &quot;Good&quot;, &quot;Better&quot;, &quot;Best&quot; }&lt;/code&gt; and &lt;code&gt;getCompressionQualityValues&lt;/code&gt; would return &lt;code&gt;{ 0.0F, .33F, .66F, 1.0F }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c84b909cb394014f6e9e28fcceef3cdf0b27e39" translate="yes" xml:space="preserve">
          <source>As an example, think of two Language Priority Lists each of which includes only one language range and a set of following language tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74235f16bc65bf0ded8643900f93d34fe2af4db" translate="yes" xml:space="preserve">
          <source>As another example, if the &lt;code&gt;JMXServiceURL&lt;/code&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3aa2758b9604888fefa6adbf8630b3457e22630" translate="yes" xml:space="preserve">
          <source>As another example, the following three lines specify a single property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8bb67abb028308da14d13bd3f1168caca43131" translate="yes" xml:space="preserve">
          <source>As another example, this code allows &lt;code&gt;long&lt;/code&gt; types to be assigned from entries in a file &lt;code&gt;myNumbers&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5298b9629494ed8424507f9377213cba4fd0e6bf" translate="yes" xml:space="preserve">
          <source>As appropriate, the tool calls the &lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;&lt;code&gt;process&lt;/code&gt;&lt;/a&gt; method on the &lt;code&gt;Processor&lt;/code&gt; object; a new &lt;code&gt;Processor&lt;/code&gt; object is &lt;em&gt;not&lt;/em&gt; created for each round.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6301b17b79ed3b3340c90417e936d981fab12b" translate="yes" xml:space="preserve">
          <source>As described in section 3, &quot;Server Name Indication&quot;, of &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS Extensions (RFC 6066)&lt;/a&gt;, &quot;HostName&quot; contains the fully qualified DNS hostname of the server, as understood by the client. The encoded server name value of a hostname is represented as a byte string using ASCII encoding without a trailing dot. This allows the support of Internationalized Domain Names (IDN) through the use of A-labels (the ASCII-Compatible Encoding (ACE) form of a valid string of Internationalized Domain Names for Applications (IDNA)) defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc5890.txt&quot;&gt;RFC 5890&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4f306157d9d4daaf890904a7cf403b8f976740" translate="yes" xml:space="preserve">
          <source>As described in the Java Virtual Machine Specification, certain types in this package have special relations to dynamic language support in the virtual machine:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e701ee63c9d6aac4889cb8fb04b11a80bd1ad2" translate="yes" xml:space="preserve">
          <source>As dictated by the Standard MIDI Files specification, two status byte values are legal for a &lt;code&gt;SysexMessage&lt;/code&gt; read from a MIDI file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823211c0e6e5c6f3a690856e6dbbe71cc75eed60" translate="yes" xml:space="preserve">
          <source>As discussed above, performing calculations on a date where the rules of the calendar system are pluggable requires skill and is not recommended. Fortunately, the need to perform calculations on a date in an arbitrary calendar system is extremely rare. For example, it is highly unlikely that the business rules of a library book rental scheme will allow rentals to be for one month, where meaning of the month is dependent on the user's preferred calendar system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36314eb89ebb3a2d4ef9809875cad02204176e33" translate="yes" xml:space="preserve">
          <source>As documented in the JVM specification, all failures arising from the linkage of a dynamic call site are reported by a &lt;a href=&quot;../bootstrapmethoderror&quot;&gt;&lt;code&gt;BootstrapMethodError&lt;/code&gt;&lt;/a&gt;, which is thrown as the abnormal termination of the dynamic call site execution. If this happens, the same error will the thrown for all subsequent attempts to execute the dynamic call site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7620dc9eaffdd8d3c92f18aa3797c61e64859c95" translate="yes" xml:space="preserve">
          <source>As in the one argument version, interrupts and spurious wakeups are possible, and this method should always be used in a loop:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de0ea91bebc6cff04f6c4a0b27942aa56579aef" translate="yes" xml:space="preserve">
          <source>As indicated above, there are many issues to consider when try to use and manipulate a date in an arbitrary calendar system. These are some of the key issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5642f21bd06f9e0469d94ef1ca5f2237ede6c426" translate="yes" xml:space="preserve">
          <source>As interruption generally implies cancellation, and checks for interruption are often infrequent, an implementation can favor responding to an interrupt over normal method return. This is true even if it can be shown that the interrupt occurred after another action may have unblocked the thread. An implementation should document this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682a7908747b239c3cd1be0e6e2d9d7739d4d462" translate="yes" xml:space="preserve">
          <source>As interruption generally implies cancellation, and checks for interruption are often infrequent, an implementation can favor responding to an interrupt over normal method return. This is true even if it can be shown that the interrupt occurred after another action that may have unblocked the thread. An implementation should document this behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deca80918e6f723d8b3411fc4be463146d7fb9d5" translate="yes" xml:space="preserve">
          <source>As is normal with thread-local ordering of write events, every action already performed by the current thread is taken to happen before the volatile write to &lt;code&gt;V&lt;/code&gt;. (In some implementations, this means that the current thread performs a global release operation.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b850de7e5f6fae367a3847e0ff710535eb37d2" translate="yes" xml:space="preserve">
          <source>As is the case with other ExecutorServices, there are three main task execution methods summarized in the following table. These are designed to be used primarily by clients not already engaged in fork/join computations in the current pool. The main forms of these methods accept instances of &lt;code&gt;ForkJoinTask&lt;/code&gt;, but overloaded forms also allow mixed execution of plain &lt;code&gt;Runnable&lt;/code&gt;- or &lt;code&gt;Callable&lt;/code&gt;- based activities as well. However, tasks that are already executing in a pool should normally instead use the within-computation forms listed in the table unless using async event-style tasks that are not usually joined, in which case there is little difference among choice of methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d082e3a7819c6c85102d27161b03668225f32f" translate="yes" xml:space="preserve">
          <source>As is usual with virtual methods, source-level calls to &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt; compile to an &lt;code&gt;invokevirtual&lt;/code&gt; instruction. More unusually, the compiler must record the actual argument types, and may not perform method invocation conversions on the arguments. Instead, it must push them on the stack according to their own unconverted types. The method handle object itself is pushed on the stack before the arguments. The compiler then calls the method handle with a symbolic type descriptor which describes the argument and return types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd413f3a79e5b5d005a16c39828bd3b915ac3102" translate="yes" xml:space="preserve">
          <source>As long as each bootstrap method can be correctly invoked by &lt;code&gt;MethodHandle.invoke&lt;/code&gt;, its detailed type is arbitrary. For example, the first argument could be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, and the return type could also be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;CallSite&lt;/code&gt;. (Note that the types and number of the stacked arguments limit the legal kinds of bootstrap methods to appropriately typed static methods and constructors of &lt;code&gt;CallSite&lt;/code&gt; subclasses.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0466654ef45ec448d8ee41f8acfd12ca31c99c4" translate="yes" xml:space="preserve">
          <source>As long as the constraints of the Java Memory Model are obeyed, implementations may delay the completion of a &lt;code&gt;syncAll&lt;/code&gt; operation while other threads (&lt;code&gt;T&lt;/code&gt; above) continue to use previous values of &lt;code&gt;S&lt;/code&gt;'s target. However, implementations are (as always) encouraged to avoid livelock, and to eventually require all threads to take account of the updated target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef47518c57367cc39530570a388c653f9133e814" translate="yes" xml:space="preserve">
          <source>As mentioned in the package description of javax.print, a null reference parameter to methods is incorrect unless explicitly documented on the method as having a meaningful interpretation. Usage to the contrary is incorrect coding and may result in a run time exception either immediately or at some later time. IllegalArgumentException and NullPointerException are examples of typical and acceptable run time exceptions for such cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0c458e0a3f734bebd8ffc23b81ee99b33a763f" translate="yes" xml:space="preserve">
          <source>As mentioned, URL and URLConnection rely on protocol handlers which must be present, otherwise an Exception is thrown. This is the major difference with URIs which only identify resources, and therefore don't need to have access to the protocol handler. So, while it is possible to create an URI with any kind of protocol scheme (e.g. &lt;code&gt;myproto://myhost.mydomain/resource/&lt;/code&gt;), a similar URL will try to instantiate the handler for the specified protocol; if it doesn't exist an exception will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74b35b186283378f9b0106c790dba3e1f4abdfd" translate="yes" xml:space="preserve">
          <source>As much as is reasonably practical, the hashCode method defined by class &lt;code&gt;Object&lt;/code&gt; does return distinct integers for distinct objects. (This is typically implemented by converting the internal address of the object into an integer, but this implementation technique is not required by the Java&amp;trade; programming language.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896cf238ecb885632ecc94b86442bd80a47d1959" translate="yes" xml:space="preserve">
          <source>As noted above, the actual method type of the bootstrap method can vary. For example, the fourth argument could be &lt;code&gt;MethodHandle&lt;/code&gt;, if that is the type of the corresponding constant in the &lt;code&gt;CONSTANT_InvokeDynamic&lt;/code&gt; entry. In that case, the &lt;code&gt;MethodHandle.invoke&lt;/code&gt; call will pass the extra method handle constant as an &lt;code&gt;Object&lt;/code&gt;, but the type matching machinery of &lt;code&gt;MethodHandle.invoke&lt;/code&gt; will cast the reference back to &lt;code&gt;MethodHandle&lt;/code&gt; before invoking the bootstrap method. (If a string constant were passed instead, by badly generated code, that cast would then fail, resulting in a &lt;code&gt;BootstrapMethodError&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a33e4d3cced7ddc9346d0339be98de3caa49df" translate="yes" xml:space="preserve">
          <source>As noted in &lt;a href=&quot;../lang/autocloseable#close--&quot;&gt;&lt;code&gt;AutoCloseable.close()&lt;/code&gt;&lt;/a&gt;, cases where the close may fail require careful attention. It is strongly advised to relinquish the underlying resources and to internally &lt;em&gt;mark&lt;/em&gt; the &lt;code&gt;Closeable&lt;/code&gt; as closed, prior to throwing the &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f841b77c906be2ef00ecd3023912695621031d6" translate="yes" xml:space="preserve">
          <source>As of 1.5, &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; is the preferred way to create a &lt;code&gt;Process&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6a2c0383ddcb7e62fc33647247dd7f714d05a6" translate="yes" xml:space="preserve">
          <source>As of Java 2 SDK v1.2, the default implementation of each of the other &lt;code&gt;check&lt;/code&gt; methods in &lt;code&gt;SecurityManager&lt;/code&gt; is to call the &lt;code&gt;SecurityManager checkPermission&lt;/code&gt; method to determine if the calling thread has permission to perform the requested operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155920b436a733307bf2f132ae7bdebc97ee45ce" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;exception causing the abort&quot; that is provided at construction time and accessed via the public &lt;a href=&quot;writeabortedexception#detail&quot;&gt;&lt;code&gt;detail&lt;/code&gt;&lt;/a&gt; field is now known as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8495fe7de406e54be9a9a6704464127b904b17f9" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;exception thrown by the privileged computation&quot; that is provided at construction time and accessed via the &lt;a href=&quot;privilegedactionexception#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e80c8416bb52dec10dec7b4bec14bd1c9044e25" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;optional exception that was raised while loading the class&quot; that may be provided at construction time and accessed via the &lt;a href=&quot;classnotfoundexception#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03b661cd4f78001e9078093a2c0b7edd9e59ee0" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;saved throwable object&quot; that may be provided at construction time and accessed via the &lt;a href=&quot;exceptionininitializererror#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f4d3eca6416349f41ab5a1a6b1e77c4d437ad4" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;target exception&quot; that is provided at construction time and accessed via the &lt;a href=&quot;invocationtargetexception#getTargetException--&quot;&gt;&lt;code&gt;getTargetException()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745046a23cf80e295270cdcaa70c0f899787c482" translate="yes" xml:space="preserve">
          <source>As of release 1.4, this exception has been retrofitted to conform to the general purpose exception-chaining mechanism. The &quot;undeclared checked exception that was thrown by the invocation handler&quot; that may be provided at construction time and accessed via the &lt;a href=&quot;undeclaredthrowableexception#getUndeclaredThrowable--&quot;&gt;&lt;code&gt;getUndeclaredThrowable()&lt;/code&gt;&lt;/a&gt; method is now known as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08abfb7f42903e6ce5dc42817d72e81a7e3128b7" translate="yes" xml:space="preserve">
          <source>As of release 7, the platform supports the notion of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d199937d4d0e643598ee602346c6a171ef560fe1" translate="yes" xml:space="preserve">
          <source>As of release JDK 5, this class has been supplemented with an equivalent class designed for use by a single thread, &lt;a href=&quot;stringbuilder&quot;&gt;&lt;code&gt;StringBuilder&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;StringBuilder&lt;/code&gt; class should generally be used in preference to this one, as it supports all of the same operations but it is faster, as it performs no synchronization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6bcd78086d103a664fb31d032ae03a98131ac5" translate="yes" xml:space="preserve">
          <source>As of the Java 2 platform v1.2, this class was retrofitted to implement the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface, making it a member of the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt; Java Collections Framework&lt;/a&gt;. Unlike the new collection implementations, &lt;code&gt;Vector&lt;/code&gt; is synchronized. If a thread-safe implementation is not needed, it is recommended to use &lt;a href=&quot;arraylist&quot;&gt;&lt;code&gt;ArrayList&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;Vector&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca7f268bf7fdde33cb8e4ec038344234d57ae07" translate="yes" xml:space="preserve">
          <source>As of the Java 2 platform v1.2, this class was retrofitted to implement the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; interface, making it a member of the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/collections/index.html&quot;&gt; Java Collections Framework&lt;/a&gt;. Unlike the new collection implementations, &lt;code&gt;Hashtable&lt;/code&gt; is synchronized. If a thread-safe implementation is not needed, it is recommended to use &lt;a href=&quot;hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;Hashtable&lt;/code&gt;. If a thread-safe highly-concurrent implementation is desired, then it is recommended to use &lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; in place of &lt;code&gt;Hashtable&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1dadb9a609742bac134bce7543bdcb4233e40d" translate="yes" xml:space="preserve">
          <source>As of v1.4, the &lt;code&gt;java.beans&lt;/code&gt; package provides support for &lt;em&gt;long-term persistence&lt;/em&gt; -- reading and writing a bean as a textual representation of its property values. The property values are treated as beans, and are recursively read or written to capture their publicly available state. This approach is suitable for long-term storage because it relies only on public API, rather than the likely-to-change private implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74de9815fea9b7360931636613219dd6f8de6ac1" translate="yes" xml:space="preserve">
          <source>As shown, although the date objects are in different calendar systems, represented by different &lt;code&gt;Chronology&lt;/code&gt; instances, both can be queried using the same constant on &lt;code&gt;ChronoField&lt;/code&gt;. For a full discussion of the implications of this, see &lt;a href=&quot;chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt;. In general, the advice is to use the known ISO-based &lt;code&gt;LocalDate&lt;/code&gt;, rather than &lt;code&gt;ChronoLocalDate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d7e1176138c02170e7e0f9731e4b0101ef7e9d" translate="yes" xml:space="preserve">
          <source>As shown, there can be two different sets of request controls associated with a context: connection request controls and context request controls. This is required for those applications needing to send critical controls that might not be applicable to both the context operation and any implicit LDAP &quot;bind&quot; operation. A typical user program would do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a81f332a784752a04d5a460f5f8755e0973c1c2" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;WatchService&lt;/code&gt; is intended to map directly on to the native file event notification facility (where available) then many of details on how registered objects are watched is highly implementation specific. When watching a directory for changes for example, and the directory is moved or renamed in the file system, there is no guarantee that the watch key will be cancelled and so the object returned by this method may no longer be a valid path to the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10db4757a6b843534723bc0bbcb82eb46a835d72" translate="yes" xml:space="preserve">
          <source>As the monitor attributes may change at runtime, a check is performed before each observation. If a monitor attribute has become invalid, a monitor setting exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c93f4f4fbd468b9aefc52826d44fc46124020f4" translate="yes" xml:space="preserve">
          <source>As the semantics of how a tree or subtree may be merged with another tree are completely format-specific, plug-in authors may implement this method in whatever manner is most appropriate for the format, including simply replacing all existing state with the contents of the given tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3b663db14ddbd84bf650414e653cfed7b4d3bf" translate="yes" xml:space="preserve">
          <source>As the underlying network implementation may ignore the traffic class or type-of-service set using &lt;a href=&quot;datagramsocket#setTrafficClass-int-&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; this method may return a different value than was previously set using the &lt;a href=&quot;datagramsocket#setTrafficClass-int-&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; method on this DatagramSocket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3dcaa75bfca85fdab534c16fe7b401186b0b4f" translate="yes" xml:space="preserve">
          <source>As the underlying network implementation may ignore the traffic class or type-of-service set using &lt;a href=&quot;socket#setTrafficClass-int-&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; this method may return a different value than was previously set using the &lt;a href=&quot;socket#setTrafficClass-int-&quot;&gt;&lt;code&gt;setTrafficClass(int)&lt;/code&gt;&lt;/a&gt; method on this Socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b2cbf6bbb7a70620dccb2c42662a47a39ad720" translate="yes" xml:space="preserve">
          <source>As this formatter has an optional element, it may be necessary to parse using &lt;a href=&quot;datetimeformatter#parseBest-java.lang.CharSequence-java.time.temporal.TemporalQuery...-&quot;&gt;&lt;code&gt;parseBest(java.lang.CharSequence, java.time.temporal.TemporalQuery&amp;lt;?&amp;gt;...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90cb6e4f589014bf7857aa07948c0333ab20879" translate="yes" xml:space="preserve">
          <source>As usual, the &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; and &lt;code&gt;:&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; can be omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d986f1c6b5fc10c93dce9af4e60795f3b2310ad7" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt;, the view of a file provided by an instance of this class is guaranteed to be consistent with other views of the same file provided by other instances in the same program. The view provided by an instance of this class may or may not, however, be consistent with the views seen by other concurrently-running programs due to caching performed by the underlying operating system and delays induced by network-filesystem protocols. This is true regardless of the language in which these other programs are written, and whether they are running on the same machine or on some other machine. The exact nature of any such inconsistencies are system-dependent and are therefore unspecified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a1adff4be253570aae7c70e7723a214fe98ebb" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt;, the JobImpressions value must also not include the multiplicative factor due to a copies instruction embedded in the document data. If the document data actually includes replications of the document data, this value will include such replication. In other words, this value is always the number of impressions in the source document data, rather than a measure of the number of impressions to be produced by the job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f9f9939fad21a9bd4b811bb57e093c751929f2" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt;, the JobImpressions value must not include the multiplicative factors contributed by the number of copies specified by the &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute, independent of whether the device can process multiple copies without making multiple passes over the job or document data and independent of whether the output is collated or not. Thus the value is independent of the implementation and reflects the size of the document(s) measured in impressions independent of the number of copies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc6e5c3cc00733d1ff1b8546cc74f47994bb5e7" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;Object.equals()&lt;/code&gt;, the notion of ordering for names depends on the class that implements this interface. For example, the ordering may be based on lexicographical ordering of the name components. Specific attributes of the name, such as how it treats case, may affect the ordering. In general, two names of different classes may not be compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262554f67a3eea86592c01186bc8f29566223708" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;reduce()&lt;/code&gt;, a benefit of expressing &lt;code&gt;collect&lt;/code&gt; in this abstract way is that it is directly amenable to parallelization: we can accumulate partial results in parallel and then combine them, so long as the accumulation and combining functions satisfy the appropriate requirements. For example, to collect the String representations of the elements in a stream into an &lt;code&gt;ArrayList&lt;/code&gt;, we could write the obvious sequential for-each form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896d64f648c747af5597747b989014908d267502" translate="yes" xml:space="preserve">
          <source>As with any reflected method, these methods (when reflected) may be invoked via &lt;a href=&quot;../reflect/method#invoke-java.lang.Object-java.lang.Object...-&quot;&gt;&lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt;&lt;/a&gt;. However, such reflective calls do not result in method handle invocations. Such a call, if passed the required argument (a single one, of type &lt;code&gt;Object[]&lt;/code&gt;), will ignore the argument and will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba2c61f7f99bc01a53a595cc3d12bcd79fb3392" translate="yes" xml:space="preserve">
          <source>As with other &lt;a href=&quot;../../java/security/permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; objects, an MBeanPermission can represent either a permission that you &lt;em&gt;have&lt;/em&gt; or a permission that you &lt;em&gt;need&lt;/em&gt;. When a sensitive operation is being checked for permission, an MBeanPermission is constructed representing the permission you need. The operation is only allowed if the permissions you have &lt;a href=&quot;mbeanpermission#implies-java.security.Permission-&quot;&gt;imply&lt;/a&gt; the permission you need.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99dc2c6441f0c0cb81841bcf0e2788829832e10" translate="yes" xml:space="preserve">
          <source>As with other &lt;code&gt;&lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; subclasses, a method is provided that returns string labels for the values, suitable for display in the user interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a81f92999bbe8bb40deddaac7c56d7ffe984df" translate="yes" xml:space="preserve">
          <source>As with selectors, the implementation of asynchronous channels can be replaced by &quot;plugging in&quot; an alternative definition or instance of the &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; class defined in the &lt;code&gt;&lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.channels.spi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package. It is not expected that many developers will actually make use of this facility; it is provided primarily so that sophisticated users can take advantage of operating-system-specific asynchronous I/O mechanisms when very high performance is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da4a35fbeea42792bb871fcaaaff80c1a8f2297" translate="yes" xml:space="preserve">
          <source>As with the &lt;a href=&quot;files#delete-java.nio.file.Path-&quot;&gt;&lt;code&gt;delete(Path)&lt;/code&gt;&lt;/a&gt; method, an implementation may need to examine the file to determine if the file is a directory. Consequently this method may not be atomic with respect to other file system operations. If the file is a symbolic link, then the symbolic link itself, not the final target of the link, is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a261b6a09fb814b4bbbcd5aab921703e3b7193" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;File.createTempFile&lt;/code&gt; methods, this method is only part of a temporary-file facility. Where used as a &lt;em&gt;work files&lt;/em&gt;, the resulting file may be opened using the &lt;a href=&quot;standardopenoption#DELETE_ON_CLOSE&quot;&gt;&lt;code&gt;DELETE_ON_CLOSE&lt;/code&gt;&lt;/a&gt; option so that the file is deleted when the appropriate &lt;code&gt;close&lt;/code&gt; method is invoked. Alternatively, a &lt;a href=&quot;../../lang/runtime#addShutdownHook-java.lang.Thread-&quot;&gt;&lt;code&gt;shutdown-hook&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;../../io/file#deleteOnExit--&quot;&gt;&lt;code&gt;File.deleteOnExit()&lt;/code&gt;&lt;/a&gt; mechanism may be used to delete the file automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326ad63f1918b9c85c6453ad60621a5368927b46" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;createTempFile&lt;/code&gt; methods, this method is only part of a temporary-file facility. A &lt;a href=&quot;../../lang/runtime#addShutdownHook-java.lang.Thread-&quot;&gt;&lt;code&gt;shutdown-hook&lt;/code&gt;&lt;/a&gt;, or the &lt;a href=&quot;../../io/file#deleteOnExit--&quot;&gt;&lt;code&gt;File.deleteOnExit()&lt;/code&gt;&lt;/a&gt; mechanism may be used to delete the directory automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e3b8ba36cadd3e6df85e320488c95b68d911b8" translate="yes" xml:space="preserve">
          <source>As with the regular reduction operation, &lt;code&gt;collect()&lt;/code&gt; operations can only be parallelized if appropriate conditions are met. For any partially accumulated result, combining it with an empty result container must produce an equivalent result. That is, for a partially accumulated result &lt;code&gt;p&lt;/code&gt; that is the result of any series of accumulator and combiner invocations, &lt;code&gt;p&lt;/code&gt; must be equivalent to &lt;code&gt;combiner.apply(p, supplier.get())&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce160b9c85add9848ba5fabe3a06f93d6b3242c4" translate="yes" xml:space="preserve">
          <source>As you can see, the definitions are very similar. The only difference is that the convention for naming the interface is to use &lt;code&gt;&lt;em&gt;Something&lt;/em&gt;MXBean&lt;/code&gt; for MXBeans, rather than &lt;code&gt;&lt;em&gt;Something&lt;/em&gt;MBean&lt;/code&gt; for Standard MBeans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221179f56564f16c3bf0ead01596d6864af0443e" translate="yes" xml:space="preserve">
          <source>Ascending key ordered views and their iterators are faster than descending ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680836461076e4d9fd895662b650ecbef5e28569" translate="yes" xml:space="preserve">
          <source>Ascending ordered views and their iterators are faster than descending ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d9bda45e150bb1a9913fe8f8dfb05cb4ff7c64" translate="yes" xml:space="preserve">
          <source>Aside from some minor deviations noted below, an instance of this class represents a URI reference as defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;&lt;i&gt;RFC 2396: Uniform Resource Identifiers (URI): Generic Syntax&lt;/i&gt;&lt;/a&gt;, amended by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732: Format for Literal IPv6 Addresses in URLs&lt;/i&gt;&lt;/a&gt;. The Literal IPv6 address format also supports scope_ids. The syntax and usage of scope_ids is described &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt;. This class provides constructors for creating URI instances from their components or by parsing their string forms, methods for accessing the various components of an instance, and methods for normalizing, resolving, and relativizing URI instances. Instances of this class are immutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53f94e0b88a8376cd30e61475e0381084d5b75d" translate="yes" xml:space="preserve">
          <source>Ask the authenticator that has been registered with the system for a password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ce9a9c92de1ff89be39c1eee7738ad15cf079f" translate="yes" xml:space="preserve">
          <source>Ask the authenticator that has been registered with the system for a password. This is the preferred method for requesting a password because the hostname can be provided in cases where the InetAddress is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3292c12a856a02722a46d87471ff4e6faefa104" translate="yes" xml:space="preserve">
          <source>AssertionError</source>
          <target state="translated">AssertionError</target>
        </trans-unit>
        <trans-unit id="e24e824b68118fff14de0778b82b4c9dbfb94b46" translate="yes" xml:space="preserve">
          <source>Assigned</source>
          <target state="translated">Assigned</target>
        </trans-unit>
        <trans-unit id="b52d10a10654b41ea61d70d7f65aa92071dd4dd3" translate="yes" xml:space="preserve">
          <source>Assigns a new value to a cookie after the cookie is created. If you use a binary value, you may want to use BASE64 encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14131902f49a325ec31a2d035fe77e792ea1898a" translate="yes" xml:space="preserve">
          <source>Assigns the given certificate to the given alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd54242e3214e9a11b71c1f7bbbd2c0d26edd181" translate="yes" xml:space="preserve">
          <source>Assigns the given key (that has already been protected) to the given alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190310fc8afce66d231a98403c36c4c9c03fcbe3" translate="yes" xml:space="preserve">
          <source>Assigns the given key to the given alias, protecting it with the given password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0f1bbf5f4d07b8de90733569bccd093335123e" translate="yes" xml:space="preserve">
          <source>Assigns the given trusted certificate to the given alias.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41bb3dd961b066e09527355b3f6b2f0decad0e47" translate="yes" xml:space="preserve">
          <source>Assigns the specified Object reference to each element of the specified array of Objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6567cd1d0e6b379d3edb1755530e088fdcca25" translate="yes" xml:space="preserve">
          <source>Assigns the specified Object reference to each element of the specified range of the specified array of Objects. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa97362d123bf088ceb72ad6ec4beca483f4bbd7" translate="yes" xml:space="preserve">
          <source>Assigns the specified boolean value to each element of the specified array of booleans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c114567eeb53351e27e40c31941a7cad152ac2" translate="yes" xml:space="preserve">
          <source>Assigns the specified boolean value to each element of the specified range of the specified array of booleans. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71da5862ab3bca6cd964d71a1c4b63d88307544" translate="yes" xml:space="preserve">
          <source>Assigns the specified byte value to each element of the specified array of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabf230d433b804d69bfbdde2d2bbe871d5db946" translate="yes" xml:space="preserve">
          <source>Assigns the specified byte value to each element of the specified range of the specified array of bytes. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61cd2fecf8872fd26aa3b2bc9d7203ef55288db" translate="yes" xml:space="preserve">
          <source>Assigns the specified char value to each element of the specified array of chars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc01c4cd64169604e3669500d07ccedad5fa31b" translate="yes" xml:space="preserve">
          <source>Assigns the specified char value to each element of the specified range of the specified array of chars. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2949a21b0bda3197dc597b50e2edbadd924d2d" translate="yes" xml:space="preserve">
          <source>Assigns the specified double value to each element of the specified array of doubles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cccf0fbbdc4c631f0191e8949b6b9e251d2e05" translate="yes" xml:space="preserve">
          <source>Assigns the specified double value to each element of the specified range of the specified array of doubles. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548f8d9d8d90319449cd7c1e43c0ddb3165d7cba" translate="yes" xml:space="preserve">
          <source>Assigns the specified float value to each element of the specified array of floats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f83cba2e8ee29319591b81320b49a9a38a3f77" translate="yes" xml:space="preserve">
          <source>Assigns the specified float value to each element of the specified range of the specified array of floats. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab05d5d5c34361f40aec66e70227fcc60b823b6" translate="yes" xml:space="preserve">
          <source>Assigns the specified int value to each element of the specified array of ints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab20ceeff85d29f36f3312d2b8c7695c820d435" translate="yes" xml:space="preserve">
          <source>Assigns the specified int value to each element of the specified range of the specified array of ints. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7cfdfe806edcc64f438c51c5879abbcede733e" translate="yes" xml:space="preserve">
          <source>Assigns the specified long value to each element of the specified array of longs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c12a444178cac052d8254551cf806e6c839cad0" translate="yes" xml:space="preserve">
          <source>Assigns the specified long value to each element of the specified range of the specified array of longs. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0362a5fb07ffcc97a8d631afd78d1343ee6009e" translate="yes" xml:space="preserve">
          <source>Assigns the specified short value to each element of the specified array of shorts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb589c326208de9d7da93d57ef3ba32112689328" translate="yes" xml:space="preserve">
          <source>Assigns the specified short value to each element of the specified range of the specified array of shorts. The range to be filled extends from index &lt;code&gt;fromIndex&lt;/code&gt;, inclusive, to index &lt;code&gt;toIndex&lt;/code&gt;, exclusive. (If &lt;code&gt;fromIndex==toIndex&lt;/code&gt;, the range to be filled is empty.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afda1354a3a51a2a4ece66c971df42f00468cfd9" translate="yes" xml:space="preserve">
          <source>Associate a named attribute with this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed07227fb7016097478db12f2ca5f4e93599583" translate="yes" xml:space="preserve">
          <source>Associate the newly instantiated Applet with the appropriate AppletContext.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea80ee780b44807cfe90a72a283ba223f4cc7d4" translate="yes" xml:space="preserve">
          <source>Associate the provided &lt;code&gt;Subject&lt;/code&gt; with this &lt;code&gt;SubjectDomainCombiner&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29d38541cd869d3405412eed5b1633671996421" translate="yes" xml:space="preserve">
          <source>Associated</source>
          <target state="translated">Associated</target>
        </trans-unit>
        <trans-unit id="5b775edadbddda2d7d7523bed597c7f2ffebaac1" translate="yes" xml:space="preserve">
          <source>Associates a &lt;code&gt;Bindings&lt;/code&gt; instance with a particular scope in this &lt;code&gt;ScriptContext&lt;/code&gt;. Calls to the &lt;code&gt;getAttribute&lt;/code&gt; and &lt;code&gt;setAttribute&lt;/code&gt; methods must map to the &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;put&lt;/code&gt; methods of the &lt;code&gt;Bindings&lt;/code&gt; for the specified scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1e81826acc11cdd4fd8787f2f261093651dd07" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified boolean value with the specified key in this preference node. The associated string is &lt;code&gt;&quot;true&quot;&lt;/code&gt; if the value is true, and &lt;code&gt;&quot;false&quot;&lt;/code&gt; if it is false. This method is intended for use in conjunction with &lt;a href=&quot;preferences#getBoolean-java.lang.String-boolean-&quot;&gt;&lt;code&gt;getBoolean(java.lang.String, boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2833c20c864a4a65f2407bd5a5f7c09afc6d20e5" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified byte array with the specified key in this preference node. The associated string is the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405e98c0ec2e33a2102051245efeb3354d88d37a" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified double value with the specified key in this preference node. The associated string is the one that would be returned if the double value were passed to &lt;a href=&quot;../../lang/double#toString-double-&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;preferences#getDouble-java.lang.String-double-&quot;&gt;&lt;code&gt;getDouble(java.lang.String, double)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a97e7672e7f164eb7d746fc62a23c0bfd82b25" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified float value with the specified key in this preference node. The associated string is the one that would be returned if the float value were passed to &lt;a href=&quot;../../lang/float#toString-float-&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;preferences#getFloat-java.lang.String-float-&quot;&gt;&lt;code&gt;getFloat(java.lang.String, float)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402eba66a399cc572ffcc2bcf5d31eaf5d6758a9" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified int value with the specified key in this preference node. The associated string is the one that would be returned if the int value were passed to &lt;a href=&quot;../../lang/integer#toString-int-&quot;&gt;&lt;code&gt;Integer.toString(int)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;preferences#getInt-java.lang.String-int-&quot;&gt;&lt;code&gt;getInt(java.lang.String, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72969c845bbda1489fd6757f2f1f88ef6d5c3422" translate="yes" xml:space="preserve">
          <source>Associates a string representing the specified long value with the specified key in this preference node. The associated string is the one that would be returned if the long value were passed to &lt;a href=&quot;../../lang/long#toString-long-&quot;&gt;&lt;code&gt;Long.toString(long)&lt;/code&gt;&lt;/a&gt;. This method is intended for use in conjunction with &lt;a href=&quot;preferences#getLong-java.lang.String-long-&quot;&gt;&lt;code&gt;getLong(java.lang.String, long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8b941f2598d7e75a59544d73f6b3752776225a" translate="yes" xml:space="preserve">
          <source>Associates the given path with the given location. Any previous value will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce44901b8fe7b1e5a344bf936e73410fd825cae2" translate="yes" xml:space="preserve">
          <source>Associates the specified message digest with this stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aedc217436104862899bfd917f42c6876d02da2" translate="yes" xml:space="preserve">
          <source>Associates the specified persistence delegate with the given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d6673941ced8f85bc7d2d31f579905b7989d0a" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified attribute name (key) in this Map. If the Map previously contained a mapping for the attribute name, the old value is replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f2bdf25f7f51dda93e424528bcb2ebe5312dfe" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified attribute name, specified as a String. The attributes name is case-insensitive. If the Map previously contained a mapping for the attribute name, the old value is replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0741057f3a2bf120ef2d33699a0aa9512f6a283e" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this identity hash map. If the map previously contained a mapping for the key, the old value is replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb82428d35baee9740c6ecdf19fc281e23f9c3d" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this map (optional operation). If the map previously contained a mapping for the key, the old value is replaced by the specified value. (A map &lt;code&gt;m&lt;/code&gt; is said to contain a mapping for a key &lt;code&gt;k&lt;/code&gt; if and only if &lt;a href=&quot;map#containsKey-java.lang.Object-&quot;&gt;&lt;code&gt;m.containsKey(k)&lt;/code&gt;&lt;/a&gt; would return &lt;code&gt;true&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb578d547a699ec9eca9741fe72aa2e0bdc6674" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this map. If the map previously contained a mapping for the key, the old value is replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551bc84ca615d2fafe109a62876f4e8d0a4502a6" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this map. If the map previously contained a mapping for this key, the old value is replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc237fc2b57374ff6a182e558a47d47e8763f0a" translate="yes" xml:space="preserve">
          <source>Associates the specified value with the specified key in this preference node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20b5a26a1cdf631954b50a5206246dff93d9c8a" translate="yes" xml:space="preserve">
          <source>Associativity</source>
          <target state="translated">Associativity</target>
        </trans-unit>
        <trans-unit id="01c87cbcfcb3a4c3c670dfd17de13f85145d0637" translate="yes" xml:space="preserve">
          <source>Assume the linkage arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b8d1cd93b0a70aa708d7ef3eaaabd54c871558" translate="yes" xml:space="preserve">
          <source>Assuming a map contains no incorrectly typed keys or values prior to the time a dynamically typesafe view is generated, and that all subsequent access to the map takes place through the view (or one of its collection views), it is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea0a7be7566f90ae54ba0c383e2ca9e62b14ca1" translate="yes" xml:space="preserve">
          <source>Assuming a map contains no incorrectly typed keys or values prior to the time a dynamically typesafe view is generated, and that all subsequent access to the map takes place through the view (or one of its collection views), it is &lt;em&gt;guaranteed&lt;/em&gt; that the map cannot contain an incorrectly typed key or value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e277e047ec1bb884239c12a127e28b4227b5181" translate="yes" xml:space="preserve">
          <source>Assuming that there is a security manager, or that the implementation chooses to make checks anyway, the checks are made as detailed below. In what follows, and unless otherwise specified, &lt;code&gt;className&lt;/code&gt; is the string returned by &lt;a href=&quot;mbeaninfo#getClassName--&quot;&gt;&lt;code&gt;MBeanInfo.getClassName()&lt;/code&gt;&lt;/a&gt; for the target MBean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54da51c6e514c6c934fbde58897984f378972c6c" translate="yes" xml:space="preserve">
          <source>Astronomical and Scientific Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580edc5fb3b7034f1b915922663d854b824bc61b" translate="yes" xml:space="preserve">
          <source>Asymmetric primitive: key agreement and key distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2980e582cf65c953331bea13f7e0d66a66676398" translate="yes" xml:space="preserve">
          <source>Asymmetric primitive: key encapsulation mechanism</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2796c4c5fa505c038af711127a4b8a98410166" translate="yes" xml:space="preserve">
          <source>Asymmetric primitive: public key encryption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8470d41ba31d8d653235530d47cdc9f886b039c" translate="yes" xml:space="preserve">
          <source>Asymmetric primitive: signature scheme</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7011bcb2a149d047c8ec7153896517a23adc9f65" translate="yes" xml:space="preserve">
          <source>Asynchronous I/O</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3beeb5d6437684f9d37c4cc7339c30f7ce34c987" translate="yes" xml:space="preserve">
          <source>Asynchronous channels are bound to an asynchronous channel group for the purpose of resource sharing. A group has an associated &lt;a href=&quot;../../util/concurrent/executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; to which tasks are submitted to handle I/O events and dispatch to completion handlers that consume the result of asynchronous operations performed on channels in the group. The group can optionally be specified when creating the channel or the channel can be bound to a &lt;em&gt;default group&lt;/em&gt;. Sophisticated users may wish to create their own asynchronous channel groups or configure the &lt;code&gt;ExecutorService&lt;/code&gt; that will be used for the default group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10310ac79f4a508680b2efe15ed75869c6a0dde6" translate="yes" xml:space="preserve">
          <source>Asynchronous channels are safe for use by multiple concurrent threads. Some channel implementations may support concurrent reading and writing, but may not allow more than one read and one write operation to be outstanding at any given time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457ba8593230a1f46060a7b261e3c57edf4f55f3" translate="yes" xml:space="preserve">
          <source>Asynchronous socket channels are created in one of two ways. A newly-created &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; is created by invoking one of the &lt;a href=&quot;asynchronoussocketchannel#open-java.nio.channels.AsynchronousChannelGroup-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. A newly-created channel is open but not yet connected. A connected &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; is created when a connection is made to the socket of an &lt;a href=&quot;asynchronousserversocketchannel&quot;&gt;&lt;code&gt;AsynchronousServerSocketChannel&lt;/code&gt;&lt;/a&gt;. It is not possible to create an asynchronous socket channel for an arbitrary, pre-existing &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d1e165da18a2de45d488ef5c26e97f609c9064" translate="yes" xml:space="preserve">
          <source>AsynchronousByteChannel</source>
          <target state="translated">AsynchronousByteChannel</target>
        </trans-unit>
        <trans-unit id="38c2395242933dc76544daf5402d38cadc614d41" translate="yes" xml:space="preserve">
          <source>AsynchronousByteChannel.read()</source>
          <target state="translated">AsynchronousByteChannel.read()</target>
        </trans-unit>
        <trans-unit id="b148fb2a4231546109f0b653e76c4eeb809c429d" translate="yes" xml:space="preserve">
          <source>AsynchronousByteChannel.write()</source>
          <target state="translated">AsynchronousByteChannel.write()</target>
        </trans-unit>
        <trans-unit id="1bd5d4e7a7b5727a599dc116eaef1a6e3cf085b8" translate="yes" xml:space="preserve">
          <source>AsynchronousChannel</source>
          <target state="translated">AsynchronousChannel</target>
        </trans-unit>
        <trans-unit id="e6375b79b014e9e2bcc2fba4a81fc8429f4d2aad" translate="yes" xml:space="preserve">
          <source>AsynchronousChannel.close()</source>
          <target state="translated">AsynchronousChannel.close()</target>
        </trans-unit>
        <trans-unit id="084d7863268b49ee5d503756306daef2b2bb8d92" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup</source>
          <target state="translated">AsynchronousChannelGroup</target>
        </trans-unit>
        <trans-unit id="231457371c8ee568e4c4e461d506ae5ab111f8f0" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.awaitTermination()</source>
          <target state="translated">AsynchronousChannelGroup.awaitTermination()</target>
        </trans-unit>
        <trans-unit id="a77c1a9ec94c64cbd1f0942cd08b9ef2e90cc331" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.isShutdown()</source>
          <target state="translated">AsynchronousChannelGroup.isShutdown()</target>
        </trans-unit>
        <trans-unit id="05cddf221adabd93fd23ab51dcdafb5c40632f65" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.isTerminated()</source>
          <target state="translated">AsynchronousChannelGroup.isTerminated()</target>
        </trans-unit>
        <trans-unit id="365dd258e4339ad5b62ae65934f91d75a70b2530" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.provider()</source>
          <target state="translated">AsynchronousChannelGroup.provider()</target>
        </trans-unit>
        <trans-unit id="0d4cd7dcfebb616b24af5609c185d78b8cef5cca" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.shutdown()</source>
          <target state="translated">AsynchronousChannelGroup.shutdown()</target>
        </trans-unit>
        <trans-unit id="b9b902a93fc9e218993b0bd1abff5f1e60bd542f" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.shutdownNow()</source>
          <target state="translated">AsynchronousChannelGroup.shutdownNow()</target>
        </trans-unit>
        <trans-unit id="805a9f69a66b72c7f2d89bcfd6fed3d149c4eb92" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.withCachedThreadPool()</source>
          <target state="translated">AsynchronousChannelGroup.withCachedThreadPool()</target>
        </trans-unit>
        <trans-unit id="f0a8f823754034c375b249ef64e58c70a6eff6ab" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.withFixedThreadPool()</source>
          <target state="translated">AsynchronousChannelGroup.withFixedThreadPool()</target>
        </trans-unit>
        <trans-unit id="d4a60b6c164c7058c4effeebfdab80a84863dfa9" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.withThreadPool()</source>
          <target state="translated">AsynchronousChannelGroup.withThreadPool()</target>
        </trans-unit>
        <trans-unit id="e9306537f6a48ba0687fbac1e30e1b8afbf86a80" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelProvider</source>
          <target state="translated">AsynchronousChannelProvider</target>
        </trans-unit>
        <trans-unit id="dd41bacfc4bd784351a40b5fb3ec70794f07f505" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelProvider.openAsynchronousChannelGroup()</source>
          <target state="translated">AsynchronousChannelProvider.openAsynchronousChannelGroup()</target>
        </trans-unit>
        <trans-unit id="a3721826030acbac1d2b5ee44f47c017f8701c4d" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelProvider.openAsynchronousServerSocketChannel()</source>
          <target state="translated">AsynchronousChannelProvider.openAsynchronousServerSocketChannel()</target>
        </trans-unit>
        <trans-unit id="715363556807fd9142f1ffb683d6e4e6ca9a4a9d" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelProvider.openAsynchronousSocketChannel()</source>
          <target state="translated">AsynchronousChannelProvider.openAsynchronousSocketChannel()</target>
        </trans-unit>
        <trans-unit id="cb5ad6a32bf86cd395602adfe70345f6309e11e6" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelProvider.provider()</source>
          <target state="translated">AsynchronousChannelProvider.provider()</target>
        </trans-unit>
        <trans-unit id="3f3c71d4577b9db0b73c9695596807edfccdf151" translate="yes" xml:space="preserve">
          <source>AsynchronousCloseException</source>
          <target state="translated">AsynchronousCloseException</target>
        </trans-unit>
        <trans-unit id="e6d7c57566eea09f975ec578b281effa9e828e0b" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel</source>
          <target state="translated">AsynchronousFileChannel</target>
        </trans-unit>
        <trans-unit id="b636326faba51f4d5aa1ff77b840a325b24577f7" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.force()</source>
          <target state="translated">AsynchronousFileChannel.force()</target>
        </trans-unit>
        <trans-unit id="79d01c62175cf4d3400781f64a6280ad3320b764" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.lock()</source>
          <target state="translated">AsynchronousFileChannel.lock()</target>
        </trans-unit>
        <trans-unit id="dc4185f231833e1f9286a64cd8bac776ab0bd0b2" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.open()</source>
          <target state="translated">AsynchronousFileChannel.open()</target>
        </trans-unit>
        <trans-unit id="95f0a39c98fe341f738d5e97a2d24efde3c09a7f" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.read()</source>
          <target state="translated">AsynchronousFileChannel.read()</target>
        </trans-unit>
        <trans-unit id="342cf21e6b57aba468c4406bdbc68d5ae84456a9" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.size()</source>
          <target state="translated">AsynchronousFileChannel.size()</target>
        </trans-unit>
        <trans-unit id="f2a0e94a307aed84704ca7719e2217d35094b899" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.truncate()</source>
          <target state="translated">AsynchronousFileChannel.truncate()</target>
        </trans-unit>
        <trans-unit id="0461b432fcad0bfcbfbede6659d4cac01aeff352" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.tryLock()</source>
          <target state="translated">AsynchronousFileChannel.tryLock()</target>
        </trans-unit>
        <trans-unit id="0d9d3c124561902d2ed067194dcabc13bef9e32f" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.write()</source>
          <target state="translated">AsynchronousFileChannel.write()</target>
        </trans-unit>
        <trans-unit id="9820a668ac36c047c8fc3c88beddfe1c6e4de467" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel</source>
          <target state="translated">AsynchronousServerSocketChannel</target>
        </trans-unit>
        <trans-unit id="0ed948c40f5ab1a65902b9c351b7d64330a6d683" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.accept()</source>
          <target state="translated">AsynchronousServerSocketChannel.accept()</target>
        </trans-unit>
        <trans-unit id="67dd37dc020e003689e2634e4b72160bbf95ced1" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.bind()</source>
          <target state="translated">AsynchronousServerSocketChannel.bind()</target>
        </trans-unit>
        <trans-unit id="68004c87af8f2afaf52e389020a56f05a52ebf70" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.getLocalAddress()</source>
          <target state="translated">AsynchronousServerSocketChannel.getLocalAddress()</target>
        </trans-unit>
        <trans-unit id="3b3385acd971fa6f7af8b73432f320981e5e284f" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.open()</source>
          <target state="translated">AsynchronousServerSocketChannel.open()</target>
        </trans-unit>
        <trans-unit id="af0a97236c952e07d89e6b35f23772e47e78d3d1" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.provider()</source>
          <target state="translated">AsynchronousServerSocketChannel.provider()</target>
        </trans-unit>
        <trans-unit id="dc5b9061787eed9e8b249943e56933361c70b652" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.setOption()</source>
          <target state="translated">AsynchronousServerSocketChannel.setOption()</target>
        </trans-unit>
        <trans-unit id="19b0bc9ffd74de23112a7825d4a92c38f4496b27" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel</source>
          <target state="translated">AsynchronousSocketChannel</target>
        </trans-unit>
        <trans-unit id="3c556485faa9f0b602270568e0e88aca6b61adc9" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.bind()</source>
          <target state="translated">AsynchronousSocketChannel.bind()</target>
        </trans-unit>
        <trans-unit id="5f04352e3263607eddb106f05894f657afad77c0" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.connect()</source>
          <target state="translated">AsynchronousSocketChannel.connect()</target>
        </trans-unit>
        <trans-unit id="eb17533b1c6dd367f748fd2a1f7831055f30fe4a" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.getLocalAddress()</source>
          <target state="translated">AsynchronousSocketChannel.getLocalAddress()</target>
        </trans-unit>
        <trans-unit id="e8e962516d0a1cf476846ed81f049bb0c89c3b65" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.getRemoteAddress()</source>
          <target state="translated">AsynchronousSocketChannel.getRemoteAddress()</target>
        </trans-unit>
        <trans-unit id="97fc71267041d6d1805e0d4c5a6e7cf1ffec2be7" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.open()</source>
          <target state="translated">AsynchronousSocketChannel.open()</target>
        </trans-unit>
        <trans-unit id="61198a34e6791c0c83be05300c899f29bf7941d8" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.provider()</source>
          <target state="translated">AsynchronousSocketChannel.provider()</target>
        </trans-unit>
        <trans-unit id="91fbfaae6f623af2474b8fd90cdd598c1ec2b519" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.read()</source>
          <target state="translated">AsynchronousSocketChannel.read()</target>
        </trans-unit>
        <trans-unit id="77daa2795de913d31bfa2670f9bfbcffcdee30dd" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.setOption()</source>
          <target state="translated">AsynchronousSocketChannel.setOption()</target>
        </trans-unit>
        <trans-unit id="6b53b99270afbb64ff8312cbace8118ec6baf2e7" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.shutdownInput()</source>
          <target state="translated">AsynchronousSocketChannel.shutdownInput()</target>
        </trans-unit>
        <trans-unit id="f9f90e06b9d36df23262bd662f1af5fdcac6386c" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.shutdownOutput()</source>
          <target state="translated">AsynchronousSocketChannel.shutdownOutput()</target>
        </trans-unit>
        <trans-unit id="82429badd61ae52d398401a5ecf2597dfa6ab69b" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.write()</source>
          <target state="translated">AsynchronousSocketChannel.write()</target>
        </trans-unit>
        <trans-unit id="465f4db403e45e6fb27fbb5afc0eff730f096b16" translate="yes" xml:space="preserve">
          <source>At a high level, the &lt;code&gt;SSLEngine&lt;/code&gt; appears thus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794013949b2e9be3a6704050c29247d164b4c468" translate="yes" xml:space="preserve">
          <source>At a minimum, a &lt;code&gt;CertPathBuilderResult&lt;/code&gt; contains the &lt;code&gt;CertPath&lt;/code&gt; built by the &lt;code&gt;CertPathBuilder&lt;/code&gt; instance. Implementations of this interface may add methods to return implementation or algorithm specific information, such as debugging information or certification path validation results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6127688af7da3c07200f3074a005cb92ef0e32b7" translate="yes" xml:space="preserve">
          <source>At a minimum, the unpacker must set progress to 0 at the beginning of a packing operation, and to 100 at the end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ae6f8341e10c25d9dd4bff94d65f2135d69854" translate="yes" xml:space="preserve">
          <source>At least one input tray is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9afe38b66a597bfb1e738aa766522915020ff5" translate="yes" xml:space="preserve">
          <source>At least one input tray is low on media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c72aae14b0592984195a6d333c85aec5e1dad21" translate="yes" xml:space="preserve">
          <source>At least one of the resources needed by the job, such as media, fonts, resource objects, etc., is not ready on any of the physical printers for which the job is a candidate. This condition may be detected when the job is accepted, or subsequently while the job is pending or processing, depending on implementation. The job may remain in its current state or be moved to the PENDING_HELD state, depending on implementation and/or job scheduling policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8be2c174b716c3f30c1cf6769ccf4211404f05c" translate="yes" xml:space="preserve">
          <source>At most one element of a key property list may be an asterisk. If the key property list contains an asterisk element, the ObjectName is a property list pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd789fed137eead45a5ddb2c0e3ccd440ce67d7d" translate="yes" xml:space="preserve">
          <source>At runtime, the conversions applied to reference arguments or return values may require additional runtime checks which can fail. An unboxing operation may fail because the original reference is null, causing a &lt;a href=&quot;../nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;. An unboxing operation or a reference cast may also fail on a reference to an object of the wrong type, causing a &lt;a href=&quot;../classcastexception&quot;&gt;&lt;code&gt;ClassCastException&lt;/code&gt;&lt;/a&gt;. Although an unboxing operation may accept several kinds of wrappers, if none are available, a &lt;code&gt;ClassCastException&lt;/code&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a449671467bacfacb5cfdc12566e9fd22b5292" translate="yes" xml:space="preserve">
          <source>At startup the LogManager class is located using the java.util.logging.manager system property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baddd2b1e84cbc7e6d86e3a6b6beaac2e18f08c9" translate="yes" xml:space="preserve">
          <source>At the end of a communication session, applications should properly close the SSL/TLS link. The SSL/TLS protocols have closure handshake messages, and these messages should be communicated to the peer before releasing the &lt;code&gt;SSLEngine&lt;/code&gt; and closing the underlying transport mechanism. A close can be initiated by one of: an SSLException, an inbound closure handshake message, or one of the close methods. In all cases, closure handshake messages are generated by the engine, and &lt;code&gt;wrap()&lt;/code&gt; should be repeatedly called until the resulting &lt;code&gt;SSLEngineResult&lt;/code&gt;'s status returns &quot;CLOSED&quot;, or &lt;a href=&quot;sslengine#isOutboundDone--&quot;&gt;&lt;code&gt;isOutboundDone()&lt;/code&gt;&lt;/a&gt; returns true. All data obtained from the &lt;code&gt;wrap()&lt;/code&gt; method should be sent to the peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3600dcf739c85535bbcb604c9f198e1e39fbed63" translate="yes" xml:space="preserve">
          <source>At the highest level a URI reference (hereinafter simply &quot;URI&quot;) in string form has the syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732f992a8ac91e6d3c80ad202f2b11658aec5c35" translate="yes" xml:space="preserve">
          <source>At the time of reading or writing, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown by the reader or writer if a value larger than the largest destination band index has been specified, or if the number of source bands and destination bands to be used differ. The &lt;code&gt;ImageReader.checkReadParamBandSettings&lt;/code&gt; method may be used to automate this test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41012a0616676f7d23f9fe0674fd8b3a31f06d5" translate="yes" xml:space="preserve">
          <source>At the time of reading, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown by the reader or writer if a value larger than the largest available source band index has been specified or if the number of source bands and destination bands to be used differ. The &lt;code&gt;ImageReader.checkReadParamBandSettings&lt;/code&gt; method may be used to automate this test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff746f577b2ef009b70a0d8c13d2aaff8eebfb5" translate="yes" xml:space="preserve">
          <source>At the time of reading, the image is checked to verify that its &lt;code&gt;ColorModel&lt;/code&gt; and &lt;code&gt;SampleModel&lt;/code&gt; correspond to one of the &lt;code&gt;ImageTypeSpecifier&lt;/code&gt;s returned from the &lt;code&gt;ImageReader&lt;/code&gt;'s &lt;code&gt;getImageTypes&lt;/code&gt; method. If it does not, the reader will throw an &lt;code&gt;IIOException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04572e2e3855dc7fbb76d1c15cf78b667eda066c" translate="yes" xml:space="preserve">
          <source>At this point, &lt;code&gt;getBundle&lt;/code&gt; finds &lt;code&gt;foo/bar/Messages.properties&lt;/code&gt;, which is put on hold because it's the base bundle. &lt;code&gt;getBundle&lt;/code&gt; calls &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getFallbackLocale(&quot;foo.bar.Messages&quot;, Locale.ITALY)&lt;/code&gt;&lt;/a&gt; which returns &lt;code&gt;Locale.FRENCH&lt;/code&gt;. Next, &lt;code&gt;getBundle&lt;/code&gt; tries loading a bundle in the following sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e410ecd471472d8a7aa5335a30bed37263709a93" translate="yes" xml:space="preserve">
          <source>At this point, we have found a resource bundle that's not the base bundle. If this bundle set its parent during its instantiation, it is returned to the caller. Otherwise, its &lt;a href=&quot;resourcebundle#parent_chain&quot;&gt;parent chain&lt;/a&gt; is instantiated based on the list of candidate locales from which it was found. Finally, the bundle is returned to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9dcb2d2164b28c11a33a8399737216abc72537" translate="yes" xml:space="preserve">
          <source>At various points this class specifies that an instance that is &quot;open for reading,&quot; &quot;open for writing,&quot; or &quot;open for reading and writing&quot; is required. A channel obtained via the &lt;a href=&quot;../../io/fileinputstream#getChannel--&quot;&gt;&lt;code&gt;getChannel&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../io/fileinputstream&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt; instance will be open for reading. A channel obtained via the &lt;a href=&quot;../../io/fileoutputstream#getChannel--&quot;&gt;&lt;code&gt;getChannel&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../io/fileoutputstream&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt; instance will be open for writing. Finally, a channel obtained via the &lt;a href=&quot;../../io/randomaccessfile#getChannel--&quot;&gt;&lt;code&gt;getChannel&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../io/randomaccessfile&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; instance will be open for reading if the instance was created with mode &lt;code&gt;&quot;r&quot;&lt;/code&gt; and will be open for reading and writing if the instance was created with mode &lt;code&gt;&quot;rw&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ba21965adef48b4fad4b03fdd1aa1a192eda15" translate="yes" xml:space="preserve">
          <source>Atomic classes are designed primarily as building blocks for implementing non-blocking data structures and related infrastructure classes. The &lt;code&gt;compareAndSet&lt;/code&gt; method is not a general replacement for locking. It applies only when critical updates for an object are confined to a &lt;em&gt;single&lt;/em&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a65302a48d01169c145c0498c4a74f4c4a556c" translate="yes" xml:space="preserve">
          <source>Atomic classes are not general purpose replacements for &lt;code&gt;java.lang.Integer&lt;/code&gt; and related classes. They do &lt;em&gt;not&lt;/em&gt; define methods such as &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt; and &lt;code&gt;compareTo&lt;/code&gt;. (Because atomic variables are expected to be mutated, they are poor choices for hash table keys.) Additionally, classes are provided only for those types that are commonly useful in intended applications. For example, there is no atomic class for representing &lt;code&gt;byte&lt;/code&gt;. In those infrequent cases where you would like to do so, you can use an &lt;code&gt;AtomicInteger&lt;/code&gt; to hold &lt;code&gt;byte&lt;/code&gt; values, and cast appropriately. You can also hold floats using &lt;a href=&quot;../../../lang/float#floatToRawIntBits-float-&quot;&gt;&lt;code&gt;Float.floatToRawIntBits(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../lang/float#intBitsToFloat-int-&quot;&gt;&lt;code&gt;Float.intBitsToFloat(int)&lt;/code&gt;&lt;/a&gt; conversions, and doubles using &lt;a href=&quot;../../../lang/double#doubleToRawLongBits-double-&quot;&gt;&lt;code&gt;Double.doubleToRawLongBits(double)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../lang/double#longBitsToDouble-long-&quot;&gt;&lt;code&gt;Double.longBitsToDouble(long)&lt;/code&gt;&lt;/a&gt; conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed33adfdb95cc7fd0d5b3fe6ea9bbb8c6df7c8b" translate="yes" xml:space="preserve">
          <source>AtomicBoolean</source>
          <target state="translated">AtomicBoolean</target>
        </trans-unit>
        <trans-unit id="e1a0712ffb4a50bd7ef8cf48cc018df683180a49" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.compareAndSet()</source>
          <target state="translated">AtomicBoolean.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="21054de6a44e6381682876a4063a9f8aca016d4b" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.get()</source>
          <target state="translated">AtomicBoolean.get()</target>
        </trans-unit>
        <trans-unit id="232343d81c881d60cc5fa50b236596969d6732d3" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.getAndSet()</source>
          <target state="translated">AtomicBoolean.getAndSet()</target>
        </trans-unit>
        <trans-unit id="c0fdd2ef1750c2490d128f44a0a50b3347a65f60" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.lazySet()</source>
          <target state="translated">AtomicBoolean.lazySet()</target>
        </trans-unit>
        <trans-unit id="23dc3d9a1a1b2d49fef1a8182a62abce0bcdf52b" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.set()</source>
          <target state="translated">AtomicBoolean.set()</target>
        </trans-unit>
        <trans-unit id="ac099f49dfe262eb4c378f3c7de061ead4f52869" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.toString()</source>
          <target state="translated">AtomicBoolean.toString()</target>
        </trans-unit>
        <trans-unit id="c1a4be4d11a98201a57b910a8db823f16b43e18d" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.weakCompareAndSet()</source>
          <target state="translated">AtomicBoolean.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="031c2d24a8a8b5aac829ffde38e403ce10db3dd2" translate="yes" xml:space="preserve">
          <source>AtomicInteger</source>
          <target state="translated">AtomicInteger</target>
        </trans-unit>
        <trans-unit id="33e44f3d88e36fc1bcab3da80f8c45ec89e4c338" translate="yes" xml:space="preserve">
          <source>AtomicInteger.accumulateAndGet()</source>
          <target state="translated">AtomicInteger.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="850969b16dc996b5bc4a3d42cfa46901c88a0701" translate="yes" xml:space="preserve">
          <source>AtomicInteger.addAndGet()</source>
          <target state="translated">AtomicInteger.addAndGet()</target>
        </trans-unit>
        <trans-unit id="c5662727b197824e8d6859634f44401f594f31d9" translate="yes" xml:space="preserve">
          <source>AtomicInteger.compareAndSet()</source>
          <target state="translated">AtomicInteger.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="ee0a3850d4e46b56ac9985e96683d74876d9fc4e" translate="yes" xml:space="preserve">
          <source>AtomicInteger.decrementAndGet()</source>
          <target state="translated">AtomicInteger.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="4f3cb05fce30ccee0967a8f5489eb8997821aa0a" translate="yes" xml:space="preserve">
          <source>AtomicInteger.doubleValue()</source>
          <target state="translated">AtomicInteger.doubleValue()</target>
        </trans-unit>
        <trans-unit id="fb31bfbcbeab4f91a91731ac9264587401bde17b" translate="yes" xml:space="preserve">
          <source>AtomicInteger.floatValue()</source>
          <target state="translated">AtomicInteger.floatValue()</target>
        </trans-unit>
        <trans-unit id="fabbe156dd02dd022d99dbbb4d4a7c691219ed57" translate="yes" xml:space="preserve">
          <source>AtomicInteger.get()</source>
          <target state="translated">AtomicInteger.get()</target>
        </trans-unit>
        <trans-unit id="5e3d573530ae582667f4fb6da85b0a8817d6d5a2" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndAccumulate()</source>
          <target state="translated">AtomicInteger.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="0101e2bd3b30d5ddb2a6d947fb230353cf69af95" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndAdd()</source>
          <target state="translated">AtomicInteger.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="2bcaa86c024cac33e85e2370f0c8f443398dfe26" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndDecrement()</source>
          <target state="translated">AtomicInteger.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="fbe349bf35ee01659e23d28bc6f233ef335d5f26" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndIncrement()</source>
          <target state="translated">AtomicInteger.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="780f9ea63336977d97ffb4970334e8a17b708430" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndSet()</source>
          <target state="translated">AtomicInteger.getAndSet()</target>
        </trans-unit>
        <trans-unit id="2041373f7c0f68cbcd8b7ca5bc07c587e0232d30" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndUpdate()</source>
          <target state="translated">AtomicInteger.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="c78df742cea261db3e4ff471ea30fedfab4a6aed" translate="yes" xml:space="preserve">
          <source>AtomicInteger.incrementAndGet()</source>
          <target state="translated">AtomicInteger.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="a35e1a5a8c9d1a30abd84fb2e7e662e2f71c0989" translate="yes" xml:space="preserve">
          <source>AtomicInteger.intValue()</source>
          <target state="translated">AtomicInteger.intValue()</target>
        </trans-unit>
        <trans-unit id="159b939ea29321726f3bedc8883099ec1beab90f" translate="yes" xml:space="preserve">
          <source>AtomicInteger.lazySet()</source>
          <target state="translated">AtomicInteger.lazySet()</target>
        </trans-unit>
        <trans-unit id="c52d3998931b661db45b1b329fa6b8463d57f738" translate="yes" xml:space="preserve">
          <source>AtomicInteger.longValue()</source>
          <target state="translated">AtomicInteger.longValue()</target>
        </trans-unit>
        <trans-unit id="32422db05e4fa5d4ab45173bb721a60958d05dcd" translate="yes" xml:space="preserve">
          <source>AtomicInteger.set()</source>
          <target state="translated">AtomicInteger.set()</target>
        </trans-unit>
        <trans-unit id="dda537410032ad73b22156f22a95e22d7e7c3d0d" translate="yes" xml:space="preserve">
          <source>AtomicInteger.toString()</source>
          <target state="translated">AtomicInteger.toString()</target>
        </trans-unit>
        <trans-unit id="a29bc6dceff9c2083e0ee3b52073dafe204517d2" translate="yes" xml:space="preserve">
          <source>AtomicInteger.updateAndGet()</source>
          <target state="translated">AtomicInteger.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="88dfef7324c272c0bf93e5a9f6cead9afd0d9c9f" translate="yes" xml:space="preserve">
          <source>AtomicInteger.weakCompareAndSet()</source>
          <target state="translated">AtomicInteger.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="bfb54e429f35d898e4d023b0015555f1acd008fb" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray</source>
          <target state="translated">AtomicIntegerArray</target>
        </trans-unit>
        <trans-unit id="54afdb7f07145a2ef44f2a85b1e3d12388b6f14d" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.accumulateAndGet()</source>
          <target state="translated">AtomicIntegerArray.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="50f239109ed56572a062f156953619fae80133fb" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.addAndGet()</source>
          <target state="translated">AtomicIntegerArray.addAndGet()</target>
        </trans-unit>
        <trans-unit id="e44ba65d1670aa1b97efdc19e7129d8e3fcbbb92" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.compareAndSet()</source>
          <target state="translated">AtomicIntegerArray.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="a9cc3f20875d81123af7548e1852346eacac4f0e" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.decrementAndGet()</source>
          <target state="translated">AtomicIntegerArray.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="c93bb8d82dc097929cd60c3829e3ffa97da1b08f" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.get()</source>
          <target state="translated">AtomicIntegerArray.get()</target>
        </trans-unit>
        <trans-unit id="812f9f7e956f67b47b0dd71b82b4bf8d221cb3ff" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndAccumulate()</source>
          <target state="translated">AtomicIntegerArray.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="84da9a0d1d65a6705bb2c54b75c85cc08c6ddf00" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndAdd()</source>
          <target state="translated">AtomicIntegerArray.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="b7deb760d8f84c84eb39e6016ae44087971f9e56" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndDecrement()</source>
          <target state="translated">AtomicIntegerArray.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="81f4a3ea2c564dcc8651dc6aafecf826f494df94" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndIncrement()</source>
          <target state="translated">AtomicIntegerArray.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="a20a2aba670e6946b7b788a7b7e2283311d6afaa" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndSet()</source>
          <target state="translated">AtomicIntegerArray.getAndSet()</target>
        </trans-unit>
        <trans-unit id="0d405c96d4e1d10e048c183a286c6cb879232225" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndUpdate()</source>
          <target state="translated">AtomicIntegerArray.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="0591252d970181bf597f7336d81cc876473ff2c1" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.incrementAndGet()</source>
          <target state="translated">AtomicIntegerArray.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="b5380b3c279f34ab800b19263be3da08caf14dbf" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.lazySet()</source>
          <target state="translated">AtomicIntegerArray.lazySet()</target>
        </trans-unit>
        <trans-unit id="892a7d4b518d9e41bb2e76b83946381c469beb0c" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.length()</source>
          <target state="translated">AtomicIntegerArray.length()</target>
        </trans-unit>
        <trans-unit id="4bdbe7687de6027e24b4c6aa92bdf49e1a2a01a5" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.set()</source>
          <target state="translated">AtomicIntegerArray.set()</target>
        </trans-unit>
        <trans-unit id="4edd5fc461c9d3820012ee66f828993ec0def7d0" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.toString()</source>
          <target state="translated">AtomicIntegerArray.toString()</target>
        </trans-unit>
        <trans-unit id="bb63b03f5da5e175c096622592ace5ecccdfe171" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.updateAndGet()</source>
          <target state="translated">AtomicIntegerArray.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="f9a7384ca188a7675f4dd0e6301eb9cc3a24f398" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.weakCompareAndSet()</source>
          <target state="translated">AtomicIntegerArray.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="b222ae05afd2334353d2af9b9be0529b4a3e4493" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater</source>
          <target state="translated">AtomicIntegerFieldUpdater</target>
        </trans-unit>
        <trans-unit id="0a9d0b65621fccf1f1a59c175c9252c0fe29fab9" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.accumulateAndGet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="87d8fdf5f94c84f9a281309c153f3bca86e68688" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.addAndGet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.addAndGet()</target>
        </trans-unit>
        <trans-unit id="508ca4728a5961f11de1ba5b13504b219b1847d3" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.compareAndSet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="8d45162650558ae068fb750ebee8be371b3e4626" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.decrementAndGet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="6ab374843b32815b96b9609342d10b7de074c65d" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.get()</source>
          <target state="translated">AtomicIntegerFieldUpdater.get()</target>
        </trans-unit>
        <trans-unit id="291f0606bdbdfd52caab94d1069d3ee93d70731e" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndAccumulate()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="b98e2106a93966a315a55cd605e665b36cf3e154" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndAdd()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="0ee51f8ce659712914148acb621dcd8ef1cde16f" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndDecrement()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="0c121e86b4a8b73e62c88fb132dc87aa984f05f0" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndIncrement()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="c50af348b107c5da3e3acefd9c8d25fdfb084a2d" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndSet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndSet()</target>
        </trans-unit>
        <trans-unit id="c91fb9af841f7e6e7280084c75d24e9d8f63c7c1" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndUpdate()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="210b391457c91db7fa9e517c1a9b9bf1b9ddef43" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.incrementAndGet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="abd65fb123eb8a8195419474bfd166bdadaae82c" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.lazySet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.lazySet()</target>
        </trans-unit>
        <trans-unit id="b92fdb00306192470b7a129070dbb4923636d957" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.newUpdater()</source>
          <target state="translated">AtomicIntegerFieldUpdater.newUpdater()</target>
        </trans-unit>
        <trans-unit id="53d48a5b8eb288feeddf59865d2764759ca2afc8" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.set()</source>
          <target state="translated">AtomicIntegerFieldUpdater.set()</target>
        </trans-unit>
        <trans-unit id="7a6b5a7e1b13eac86ac4c200b4f78bbdc15ba25c" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.updateAndGet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="72d509680fbaf415e5d4cef7235ca0cafb5e6c14" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.weakCompareAndSet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="c6711287dc9369302489e77fcf65d42a31c0643c" translate="yes" xml:space="preserve">
          <source>AtomicLong</source>
          <target state="translated">AtomicLong</target>
        </trans-unit>
        <trans-unit id="29bedc8d57cf6d18205d8992deb4b50175991ffa" translate="yes" xml:space="preserve">
          <source>AtomicLong.accumulateAndGet()</source>
          <target state="translated">AtomicLong.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="dcad15add528ee741ae935e323beaf3ce4d52f0e" translate="yes" xml:space="preserve">
          <source>AtomicLong.addAndGet()</source>
          <target state="translated">AtomicLong.addAndGet()</target>
        </trans-unit>
        <trans-unit id="048d5b527550179b90673ed784473727dd5a7a97" translate="yes" xml:space="preserve">
          <source>AtomicLong.compareAndSet()</source>
          <target state="translated">AtomicLong.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="10af50e8a1728dd89d88c9e8ce2707c750fcecc3" translate="yes" xml:space="preserve">
          <source>AtomicLong.decrementAndGet()</source>
          <target state="translated">AtomicLong.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="6856ecf94eed17b6f815f1798162779189225fc4" translate="yes" xml:space="preserve">
          <source>AtomicLong.doubleValue()</source>
          <target state="translated">AtomicLong.doubleValue()</target>
        </trans-unit>
        <trans-unit id="4290047db645475e908241ca58ca41e3edc86499" translate="yes" xml:space="preserve">
          <source>AtomicLong.floatValue()</source>
          <target state="translated">AtomicLong.floatValue()</target>
        </trans-unit>
        <trans-unit id="a07c6f678271343a028ce200359a771bcbcad0dc" translate="yes" xml:space="preserve">
          <source>AtomicLong.get()</source>
          <target state="translated">AtomicLong.get()</target>
        </trans-unit>
        <trans-unit id="d284959d19430e320b4cb3ae1e43614ba44ebb5a" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndAccumulate()</source>
          <target state="translated">AtomicLong.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="592f7de23c6fdcda131b12976434c2a895565848" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndAdd()</source>
          <target state="translated">AtomicLong.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="a649cbb9676ca8f1905d114f36e25d0c963cd223" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndDecrement()</source>
          <target state="translated">AtomicLong.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="c3288f36f6aea0d15ec8b08fc5b5c590fc6abc4e" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndIncrement()</source>
          <target state="translated">AtomicLong.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="b51c865ea825f915fca794ee4c89379e24feb109" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndSet()</source>
          <target state="translated">AtomicLong.getAndSet()</target>
        </trans-unit>
        <trans-unit id="3e92d02ca289424a9984aac735d3c7e8dde1aa5a" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndUpdate()</source>
          <target state="translated">AtomicLong.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="277cbfa5794a36eab5a1afc10be3819a0e192763" translate="yes" xml:space="preserve">
          <source>AtomicLong.incrementAndGet()</source>
          <target state="translated">AtomicLong.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="c8577b4543d969b10ec418d36d0607927efe97da" translate="yes" xml:space="preserve">
          <source>AtomicLong.intValue()</source>
          <target state="translated">AtomicLong.intValue()</target>
        </trans-unit>
        <trans-unit id="5b7363d9887db279674ece596992d6e9feca4724" translate="yes" xml:space="preserve">
          <source>AtomicLong.lazySet()</source>
          <target state="translated">AtomicLong.lazySet()</target>
        </trans-unit>
        <trans-unit id="519638edb99a53e2bd6e240f216aa5b215557a3a" translate="yes" xml:space="preserve">
          <source>AtomicLong.longValue()</source>
          <target state="translated">AtomicLong.longValue()</target>
        </trans-unit>
        <trans-unit id="fed17a99a5c11ef8e62ce924123a43e9f6482787" translate="yes" xml:space="preserve">
          <source>AtomicLong.set()</source>
          <target state="translated">AtomicLong.set()</target>
        </trans-unit>
        <trans-unit id="7e375fc5c7b9078c4cc20b4989508a61987224db" translate="yes" xml:space="preserve">
          <source>AtomicLong.toString()</source>
          <target state="translated">AtomicLong.toString()</target>
        </trans-unit>
        <trans-unit id="1e2a73b77c10dcaafafe7d91c0b4ef14d5ea24e4" translate="yes" xml:space="preserve">
          <source>AtomicLong.updateAndGet()</source>
          <target state="translated">AtomicLong.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="de71eab95df47f91101b4135c28f5273b29ad6ff" translate="yes" xml:space="preserve">
          <source>AtomicLong.weakCompareAndSet()</source>
          <target state="translated">AtomicLong.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="f3abe0a33a5e8a7ef1199f8ccf72d15d16d75fae" translate="yes" xml:space="preserve">
          <source>AtomicLongArray</source>
          <target state="translated">AtomicLongArray</target>
        </trans-unit>
        <trans-unit id="ed5b1cbd39f316563b103c7f85373d93da185077" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.accumulateAndGet()</source>
          <target state="translated">AtomicLongArray.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="a9a67b07d80c930114a283db589cadc5dbaa7ce0" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.addAndGet()</source>
          <target state="translated">AtomicLongArray.addAndGet()</target>
        </trans-unit>
        <trans-unit id="0bc6a8d153be9990cfd46b4c1881e36d666f64f6" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.compareAndSet()</source>
          <target state="translated">AtomicLongArray.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="e501b91262e50987b9b0b9ffdf897dcf8d4aa16d" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.decrementAndGet()</source>
          <target state="translated">AtomicLongArray.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="9e1bd8f9c25a6542bc6e226c4aa124e44f06bc0e" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.get()</source>
          <target state="translated">AtomicLongArray.get()</target>
        </trans-unit>
        <trans-unit id="b4abc4755060d5e355cb1cebe2990c935c42c897" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndAccumulate()</source>
          <target state="translated">AtomicLongArray.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="28a5bbf8a87b18e9de26ae6e58ae329b353ca17a" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndAdd()</source>
          <target state="translated">AtomicLongArray.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="8f31b483deea2f0b4d7b43db6d7afbe0140797bb" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndDecrement()</source>
          <target state="translated">AtomicLongArray.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="3e833ec289b55d8872cb5959ffefb834e5672da7" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndIncrement()</source>
          <target state="translated">AtomicLongArray.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="83ab4c56faf18213b9222361c2cd90b9d2e8a5a3" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndSet()</source>
          <target state="translated">AtomicLongArray.getAndSet()</target>
        </trans-unit>
        <trans-unit id="177dcc18d24581a09ff8da6880b40ad32b849337" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndUpdate()</source>
          <target state="translated">AtomicLongArray.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="a226eea3807552e9d2160731cdc3a9c01bcdac4d" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.incrementAndGet()</source>
          <target state="translated">AtomicLongArray.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="2ea63a474ca52950ca83026643a6b3f1828fa790" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.lazySet()</source>
          <target state="translated">AtomicLongArray.lazySet()</target>
        </trans-unit>
        <trans-unit id="e04b429b3c0e7d7c7480e3844517009da27f15aa" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.length()</source>
          <target state="translated">AtomicLongArray.length()</target>
        </trans-unit>
        <trans-unit id="a0b69644ca5b763199eaeb0af453927e43996f96" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.set()</source>
          <target state="translated">AtomicLongArray.set()</target>
        </trans-unit>
        <trans-unit id="43628b4dba6d01ff93d3554b3c88cf9fad4509c0" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.toString()</source>
          <target state="translated">AtomicLongArray.toString()</target>
        </trans-unit>
        <trans-unit id="ee73cbcaea55fc2ea8c8283b447761b819510a5d" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.updateAndGet()</source>
          <target state="translated">AtomicLongArray.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="7257b38520c5f469e61d59fda3b72fa80fc21c40" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.weakCompareAndSet()</source>
          <target state="translated">AtomicLongArray.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="dff88c91e8d6ece833e75c1d98bbdaf0faf06e17" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater</source>
          <target state="translated">AtomicLongFieldUpdater</target>
        </trans-unit>
        <trans-unit id="459d9bf82358187794710d178e659333b886fa59" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.accumulateAndGet()</source>
          <target state="translated">AtomicLongFieldUpdater.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="f2e57b0bf9d275848f1af8c451f50e5860f841cf" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.addAndGet()</source>
          <target state="translated">AtomicLongFieldUpdater.addAndGet()</target>
        </trans-unit>
        <trans-unit id="ac996d10e3737a0d2e5adf6c6703e84305968a04" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.compareAndSet()</source>
          <target state="translated">AtomicLongFieldUpdater.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="dd9b2c6994fab44365c2f99d2322ec22713fb03d" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.decrementAndGet()</source>
          <target state="translated">AtomicLongFieldUpdater.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="e6376632acea0d1a64c49681cc66204f8edb476c" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.get()</source>
          <target state="translated">AtomicLongFieldUpdater.get()</target>
        </trans-unit>
        <trans-unit id="4575662c5d599883463d05ea12a81b9e5995563c" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndAccumulate()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="d4c121bc0822171f68df5d5c7018bebd5972cd2e" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndAdd()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="d6533ba120d953b70ed112c1b00994d5a659df22" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndDecrement()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="ffacc6d2fc29573bac44f47b68854ef05d85c3bc" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndIncrement()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="f12cc0bea3fb12a3c3256ebfc935cf092fd967ee" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndSet()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndSet()</target>
        </trans-unit>
        <trans-unit id="fa19e730688511ee1a9c884a9a40e35120418db7" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndUpdate()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="d8e24e93bc5baa57c1d461b16edd775e072b021f" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.incrementAndGet()</source>
          <target state="translated">AtomicLongFieldUpdater.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="d5860f97071d90ffef51a0a8cc483a7c17475e17" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.lazySet()</source>
          <target state="translated">AtomicLongFieldUpdater.lazySet()</target>
        </trans-unit>
        <trans-unit id="b9c761166bd318f47fd13edf17827f1d5bd0fabb" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.newUpdater()</source>
          <target state="translated">AtomicLongFieldUpdater.newUpdater()</target>
        </trans-unit>
        <trans-unit id="feb423fd494070b2436fa31ddd96a77abdd916ba" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.set()</source>
          <target state="translated">AtomicLongFieldUpdater.set()</target>
        </trans-unit>
        <trans-unit id="3b7cdaeae1ae3132375a41d5abbcf15cb6c87306" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.updateAndGet()</source>
          <target state="translated">AtomicLongFieldUpdater.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="f8e13a07b210ca29ff38dbe3b7ca3d2ae954c3d7" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.weakCompareAndSet()</source>
          <target state="translated">AtomicLongFieldUpdater.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="e5330c4d454ee99a40799036d3e85f3db9c670c6" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference</source>
          <target state="translated">AtomicMarkableReference</target>
        </trans-unit>
        <trans-unit id="6aa4cfba3bb29934e0d10f189a2b4896ed8e8df4" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.attemptMark()</source>
          <target state="translated">AtomicMarkableReference.attemptMark()</target>
        </trans-unit>
        <trans-unit id="d22108d81d3712c04517b637fa468b83881915eb" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.compareAndSet()</source>
          <target state="translated">AtomicMarkableReference.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="49adfad52450d9cb399e7f6d8dd15ae2f0de97dc" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.get()</source>
          <target state="translated">AtomicMarkableReference.get()</target>
        </trans-unit>
        <trans-unit id="63bb8915704bc7acc92123809135e92b01343f18" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.getReference()</source>
          <target state="translated">AtomicMarkableReference.getReference()</target>
        </trans-unit>
        <trans-unit id="8d5e11c405249306e01bb6dc31eba6afbc4bef1b" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.isMarked()</source>
          <target state="translated">AtomicMarkableReference.isMarked()</target>
        </trans-unit>
        <trans-unit id="6f2fe0fd58ee0a6e48da6ffe4d59158be094683a" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.set()</source>
          <target state="translated">AtomicMarkableReference.set()</target>
        </trans-unit>
        <trans-unit id="9202de494c8715e5fda3322e1e1dbe9c35b148ec" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.weakCompareAndSet()</source>
          <target state="translated">AtomicMarkableReference.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="cfdca2dd88df2e7dca32315788ab7a13c5232511" translate="yes" xml:space="preserve">
          <source>AtomicMoveNotSupportedException</source>
          <target state="translated">AtomicMoveNotSupportedException</target>
        </trans-unit>
        <trans-unit id="cd0e6702ca5c371f1347949dd4a2eec403216573" translate="yes" xml:space="preserve">
          <source>AtomicReference</source>
          <target state="translated">AtomicReference</target>
        </trans-unit>
        <trans-unit id="152a6f3fa8d2678ea6c9bc56b87a229fb6899f21" translate="yes" xml:space="preserve">
          <source>AtomicReference.accumulateAndGet()</source>
          <target state="translated">AtomicReference.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="078d36a5603ef5ae156ab7a1540d6a504e188270" translate="yes" xml:space="preserve">
          <source>AtomicReference.compareAndSet()</source>
          <target state="translated">AtomicReference.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="9665f2d7ade4175f6eb773bab03fa11b9e7381e2" translate="yes" xml:space="preserve">
          <source>AtomicReference.get()</source>
          <target state="translated">AtomicReference.get()</target>
        </trans-unit>
        <trans-unit id="ec52595ab9c3e3af5df99a1ae7e7cc76adc9a476" translate="yes" xml:space="preserve">
          <source>AtomicReference.getAndAccumulate()</source>
          <target state="translated">AtomicReference.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="d1119fe14b8b0963e2045b08ae2ef93ea8801457" translate="yes" xml:space="preserve">
          <source>AtomicReference.getAndSet()</source>
          <target state="translated">AtomicReference.getAndSet()</target>
        </trans-unit>
        <trans-unit id="002389ccb7c0d9f12a790f273d849f8b7ca77177" translate="yes" xml:space="preserve">
          <source>AtomicReference.getAndUpdate()</source>
          <target state="translated">AtomicReference.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="593535c7d09249722925c8e4093f808c6f927efe" translate="yes" xml:space="preserve">
          <source>AtomicReference.lazySet()</source>
          <target state="translated">AtomicReference.lazySet()</target>
        </trans-unit>
        <trans-unit id="af116d40f0f59bb5e572578cce91a854a3f36c23" translate="yes" xml:space="preserve">
          <source>AtomicReference.set()</source>
          <target state="translated">AtomicReference.set()</target>
        </trans-unit>
        <trans-unit id="13515748041d9b0747c53d4e3d9e858cfb1ae4c3" translate="yes" xml:space="preserve">
          <source>AtomicReference.toString()</source>
          <target state="translated">AtomicReference.toString()</target>
        </trans-unit>
        <trans-unit id="f257d570b2781e05a73ac465a1755f3aea5e252f" translate="yes" xml:space="preserve">
          <source>AtomicReference.updateAndGet()</source>
          <target state="translated">AtomicReference.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="3840caed78716e41365deafcacacec1c99d4fbe8" translate="yes" xml:space="preserve">
          <source>AtomicReference.weakCompareAndSet()</source>
          <target state="translated">AtomicReference.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="ba88d49711ca7ee3db92b2a2278624c7c7d76cab" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray</source>
          <target state="translated">AtomicReferenceArray</target>
        </trans-unit>
        <trans-unit id="b22b90994094579158c1422c9ed5c3826f7e2c14" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.accumulateAndGet()</source>
          <target state="translated">AtomicReferenceArray.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="114867875e5737c22a3d5c1f00c08d33f34c6de3" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.compareAndSet()</source>
          <target state="translated">AtomicReferenceArray.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="53ba598bbf2e9779faf954d1499c670f48625747" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.get()</source>
          <target state="translated">AtomicReferenceArray.get()</target>
        </trans-unit>
        <trans-unit id="ad617040a73dd91bdbee266a3a8d37a133916dc7" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.getAndAccumulate()</source>
          <target state="translated">AtomicReferenceArray.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="6ceaa3a4717a4e89dcb62e54afb08ee28662ca7e" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.getAndSet()</source>
          <target state="translated">AtomicReferenceArray.getAndSet()</target>
        </trans-unit>
        <trans-unit id="b263c256a4f9f6d46ada3f4d84d48b2ec59d34fe" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.getAndUpdate()</source>
          <target state="translated">AtomicReferenceArray.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="3d0a01069725089eb3b15b435a7cb5cb2e957bee" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.lazySet()</source>
          <target state="translated">AtomicReferenceArray.lazySet()</target>
        </trans-unit>
        <trans-unit id="d76e089925b4130a583c40b218da4124556cf4dd" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.length()</source>
          <target state="translated">AtomicReferenceArray.length()</target>
        </trans-unit>
        <trans-unit id="01d5eb602cbca42c766f6fa88e9a4f70f948b14f" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.set()</source>
          <target state="translated">AtomicReferenceArray.set()</target>
        </trans-unit>
        <trans-unit id="c93412b7fa99bb08be0f91d4ed484107fd50dda6" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.toString()</source>
          <target state="translated">AtomicReferenceArray.toString()</target>
        </trans-unit>
        <trans-unit id="7506ff277766a130d8128d550a7641708fa0faba" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.updateAndGet()</source>
          <target state="translated">AtomicReferenceArray.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="414f9eac47c954782b01043168ca014c747d9048" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.weakCompareAndSet()</source>
          <target state="translated">AtomicReferenceArray.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="b9304de17f7a00f437560b688eab6d0a12c725e1" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater</source>
          <target state="translated">AtomicReferenceFieldUpdater</target>
        </trans-unit>
        <trans-unit id="b45133189f9aed1931c50da7bf60471f49148343" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.accumulateAndGet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="c2c25b51784460e16403705c857a20b604877351" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.compareAndSet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="1c1ec918f330abfb86694888a95f1ec9623547e7" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.get()</source>
          <target state="translated">AtomicReferenceFieldUpdater.get()</target>
        </trans-unit>
        <trans-unit id="8b08f2228d34cc130ca8754a77b4dae452a5e602" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.getAndAccumulate()</source>
          <target state="translated">AtomicReferenceFieldUpdater.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="17af343f18171a9d3466921ad875de34199c3aa0" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.getAndSet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.getAndSet()</target>
        </trans-unit>
        <trans-unit id="f83cecafa1faad93d4a5d7d66e99b32b7e0d9094" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.getAndUpdate()</source>
          <target state="translated">AtomicReferenceFieldUpdater.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="34c5584eb9c022196af3504d48e8454f50ad32dd" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.lazySet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.lazySet()</target>
        </trans-unit>
        <trans-unit id="25444fd26537067dd0a497a2b89488f8fa77e987" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.newUpdater()</source>
          <target state="translated">AtomicReferenceFieldUpdater.newUpdater()</target>
        </trans-unit>
        <trans-unit id="8f71e63b75fce9603ed1f1a69130dafe217508f8" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.set()</source>
          <target state="translated">AtomicReferenceFieldUpdater.set()</target>
        </trans-unit>
        <trans-unit id="a2da32d51eb53604c7e1d5b17a4a9c19c744bd8c" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.updateAndGet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="d4cbf96123fd9ea541599fb18443ccda2dd1a4b9" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.weakCompareAndSet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="c3e7f4e4ae42a4e0805952db6296615b8700b090" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference</source>
          <target state="translated">AtomicStampedReference</target>
        </trans-unit>
        <trans-unit id="cc23325654de63824d4dc456726707dce07afa36" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.attemptStamp()</source>
          <target state="translated">AtomicStampedReference.attemptStamp()</target>
        </trans-unit>
        <trans-unit id="dcc1eaa38e7190c7f4756658fd3a485102d4efd5" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.compareAndSet()</source>
          <target state="translated">AtomicStampedReference.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="d3851557183cb20fd5111c66c7d96543d560db27" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.get()</source>
          <target state="translated">AtomicStampedReference.get()</target>
        </trans-unit>
        <trans-unit id="97b9ca8012cbb1c608cd59c71b8f624d65087779" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.getReference()</source>
          <target state="translated">AtomicStampedReference.getReference()</target>
        </trans-unit>
        <trans-unit id="a2e2d7b2b68e14da7d071ab8f62039162018e437" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.getStamp()</source>
          <target state="translated">AtomicStampedReference.getStamp()</target>
        </trans-unit>
        <trans-unit id="0d7da6d9c35b6c22ab8bb92f084734d7bc103237" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.set()</source>
          <target state="translated">AtomicStampedReference.set()</target>
        </trans-unit>
        <trans-unit id="a23e690fe47761046c9775dff800b3207a42df64" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.weakCompareAndSet()</source>
          <target state="translated">AtomicStampedReference.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="e321b6bd6d15ba09704fb4bba61bac042a132934" translate="yes" xml:space="preserve">
          <source>Atomically adds the given value to the current value of the field of the given object managed by this updater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a99dbe324349f1f8ad0c7e994a141ef74df90a4" translate="yes" xml:space="preserve">
          <source>Atomically adds the given value to the current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecd271e5190b42969ee56c8a5833ab7bfcc099b" translate="yes" xml:space="preserve">
          <source>Atomically adds the given value to the element at index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d0d3eda0b21632cc6f791945a4bbec54092358" translate="yes" xml:space="preserve">
          <source>Atomically conditionally sets the tag value for this task. Among other applications, tags can be used as visit markers in tasks operating on graphs, as in methods that check: &lt;code&gt;if (task.compareAndSetForkJoinTaskTag((short)0, (short)1))&lt;/code&gt; before processing, otherwise exiting because the node has already been visited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e136665690d436c90ac24597330e75aa71bf4153" translate="yes" xml:space="preserve">
          <source>Atomically creates a new, empty file named by this abstract pathname if and only if a file with this name does not yet exist. The check for the existence of the file and the creation of the file if it does not exist are a single operation that is atomic with respect to all other filesystem activities that might affect the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be92a897a5279695bbf54c0e7a2834c8e25918e" translate="yes" xml:space="preserve">
          <source>Atomically decrements by one the current value of the field of the given object managed by this updater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ed3d4b4ea275383e57f1acdbb323dcdc91cf19" translate="yes" xml:space="preserve">
          <source>Atomically decrements by one the current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c10b083f8e3b70d7a23642ad6451df97f5172e" translate="yes" xml:space="preserve">
          <source>Atomically decrements by one the element at index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c370b2617158f37c64c06f2430195f84d6987a57" translate="yes" xml:space="preserve">
          <source>Atomically increments by one the current value of the field of the given object managed by this updater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adfcf5044b2e8ced2c45c92756be5b12b2bf424" translate="yes" xml:space="preserve">
          <source>Atomically increments by one the current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c90d0214d231d89aec21066442688b0f34d2ff6" translate="yes" xml:space="preserve">
          <source>Atomically increments by one the element at index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4975902423cbb31a1a3e496e3368620435e94494" translate="yes" xml:space="preserve">
          <source>Atomically removes all of the elements from this delay queue. The queue will be empty after this call returns. Elements with an unexpired delay are not waited for; they are simply discarded from the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61b61439e9a655ec6a4ecf9cd3bbaff53f07a2c" translate="yes" xml:space="preserve">
          <source>Atomically removes all of the elements from this deque. The deque will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86148fb0c74111febed1c4e4e06e1c0fc16f8e1" translate="yes" xml:space="preserve">
          <source>Atomically removes all of the elements from this queue. The queue will be empty after this call returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2c6f7639b51a6fd0d4cee557a725a15096a795" translate="yes" xml:space="preserve">
          <source>Atomically sets synchronization state to the given updated value if the current state value equals the expected value. This operation has memory semantics of a &lt;code&gt;volatile&lt;/code&gt; read and write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfc1f0b30a22e296a77a8873b7527c6ba170ca6" translate="yes" xml:space="preserve">
          <source>Atomically sets the element at position &lt;code&gt;i&lt;/code&gt; to the given updated value if the current value &lt;code&gt;==&lt;/code&gt; the expected value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd311dbbf55d45e10eb2707ae4c172708102cf71" translate="yes" xml:space="preserve">
          <source>Atomically sets the element at position &lt;code&gt;i&lt;/code&gt; to the given value and returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad1656270a1fddfa375fc5eccf577df5a8174ac" translate="yes" xml:space="preserve">
          <source>Atomically sets the field of the given object managed by this updater to the given updated value if the current value &lt;code&gt;==&lt;/code&gt; the expected value. This method is guaranteed to be atomic with respect to other calls to &lt;code&gt;compareAndSet&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;, but not necessarily with respect to other changes in the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8de1dc7d2c76a71fe76270f11e983c5c3a919b0" translate="yes" xml:space="preserve">
          <source>Atomically sets the field of the given object managed by this updater to the given value and returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c741fa337623774cc4c593424264b3a27b719c2c" translate="yes" xml:space="preserve">
          <source>Atomically sets the tag value for this task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cdd4050771e51fd121dddebcba128afe05e7243" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of both the reference and mark to the given update values if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference and the current mark is equal to the expected mark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404582ff13a2a20f0878671c23363fd87ab76295" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of both the reference and stamp to the given update values if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference and the current stamp is equal to the expected stamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69038f060f753b8857af01a760c06feb96975cbe" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of the mark to the given update value if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference. Any given invocation of this operation may fail (return &lt;code&gt;false&lt;/code&gt;) spuriously, but repeated invocation when the current value holds the expected value and no other thread is also attempting to set the value will eventually succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec8c3b9d589156e03686a2ffe57e31cb91992b2" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of the stamp to the given update value if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference. Any given invocation of this operation may fail (return &lt;code&gt;false&lt;/code&gt;) spuriously, but repeated invocation when the current value holds the expected value and no other thread is also attempting to set the value will eventually succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcae4a98786c2d113853e09169296ee04a555685" translate="yes" xml:space="preserve">
          <source>Atomically sets the value to the given updated value if the current value &lt;code&gt;==&lt;/code&gt; the expected value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91f84eea49e7ebc047c4a80b7e3397bb27cb116" translate="yes" xml:space="preserve">
          <source>Atomically sets to the given value and returns the old value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587c658d0d7c23472ad54a8dac8285e214a46c53" translate="yes" xml:space="preserve">
          <source>Atomically sets to the given value and returns the previous value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7338990b09f91a6d13fa1a6280c5ec4392707e" translate="yes" xml:space="preserve">
          <source>Atomically updates the current value with the results of applying the given function to the current and given values, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97cfecf129b8ec8b963449e8369e9124ca98510" translate="yes" xml:space="preserve">
          <source>Atomically updates the current value with the results of applying the given function to the current and given values, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1d1f29a81982a3b76137e08310f4ce87b749c1" translate="yes" xml:space="preserve">
          <source>Atomically updates the current value with the results of applying the given function, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bb2f62c86efc4ccb390c26afce9c2fb105b16e" translate="yes" xml:space="preserve">
          <source>Atomically updates the current value with the results of applying the given function, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8621e36612593a2c90372132b916937787e2c96e" translate="yes" xml:space="preserve">
          <source>Atomically updates the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function to the current and given values, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value at index &lt;code&gt;i&lt;/code&gt; as its first argument, and the given update as the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff5f799c3976b42cfe03fdaa26f53419c7ef729" translate="yes" xml:space="preserve">
          <source>Atomically updates the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function to the current and given values, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value at index &lt;code&gt;i&lt;/code&gt; as its first argument, and the given update as the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003d7e9d9a51da9fb37dd2e112a98305d46fc8a1" translate="yes" xml:space="preserve">
          <source>Atomically updates the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57332221ee4264ab68c52a43c497fa2ffff5d1ec" translate="yes" xml:space="preserve">
          <source>Atomically updates the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bb27997e9844b71d881d3c625502ad6492d2ef" translate="yes" xml:space="preserve">
          <source>Atomically updates the field of the given object managed by this updater with the results of applying the given function to the current and given values, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7395352f3aac14cf69a302abb5064e1ea24002" translate="yes" xml:space="preserve">
          <source>Atomically updates the field of the given object managed by this updater with the results of applying the given function to the current and given values, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32546a59c4effee8cd8b850e4f32cc1b838aa127" translate="yes" xml:space="preserve">
          <source>Atomically updates the field of the given object managed by this updater with the results of applying the given function, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b676f77dda23fa485916946d4b418e90c90f288b" translate="yes" xml:space="preserve">
          <source>Atomically updates the field of the given object managed by this updater with the results of applying the given function, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9583fb4b4ca3f5163fc49011d32f3cccd8818f52" translate="yes" xml:space="preserve">
          <source>Attaches the given object to this key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9454d836e7a581cb136146bbdd37af1d311369e2" translate="yes" xml:space="preserve">
          <source>Attempted updates to &quot;Constrained&quot; properties will cause a &quot;VetoableChange&quot; event to get fired when the property is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc68c49ca21550562ae891f8f64d2de3cfe64c9f" translate="yes" xml:space="preserve">
          <source>Attempting to invoke any methods except &lt;a href=&quot;formatter#ioException--&quot;&gt;&lt;code&gt;ioException()&lt;/code&gt;&lt;/a&gt; in this formatter after it has been closed will result in a &lt;a href=&quot;formatterclosedexception&quot;&gt;&lt;code&gt;FormatterClosedException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865ca0df2fcad55810c5e4f69e9fcf96951fae82" translate="yes" xml:space="preserve">
          <source>Attempting to perform search operations after a scanner has been closed will result in an &lt;a href=&quot;../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f26ee13d64a90cd27d362b6fec350ce5bb96eb" translate="yes" xml:space="preserve">
          <source>Attempts to acquire a lock on the given region of this channel's file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4f500600dbc802ced889713dd4c6f66404f0d3" translate="yes" xml:space="preserve">
          <source>Attempts to acquire an exclusive lock on this channel's file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845a596c5e3cd6896649c41030509cb6cc526976" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in exclusive mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses. This method can be used to implement method &lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;Lock.tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d059fa2c960cdca270005ce5010c7c3e9c69d1b" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in exclusive mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses. This method can be used to implement method &lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;Lock.tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9642465c4559f4bd3b441fa1065b5584e9ec6c5" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in exclusive mode. This method should query if the state of the object permits it to be acquired in the exclusive mode, and if so to acquire it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67286ad727db07e417f9186dbd3dd5aa8446f07a" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in shared mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd151416a26cf52c2cf84528a9250d2fc2433f9a" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in shared mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84219cd339297ad2b7f16a47468dc8f1460a682" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in shared mode. This method should query if the state of the object permits it to be acquired in the shared mode, and if so to acquire it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9aeceffd046652b694ee82bbcab5f64aed3d0d5" translate="yes" xml:space="preserve">
          <source>Attempts to build a certification path using the specified algorithm parameter set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbef3794aa05ea06fb16ed81579e23110b04941" translate="yes" xml:space="preserve">
          <source>Attempts to cancel execution of this task. This attempt will fail if the task has already completed or could not be cancelled for some other reason. If successful, and this task has not started when &lt;code&gt;cancel&lt;/code&gt; is called, execution of this task is suppressed. After this method returns successfully, unless there is an intervening call to &lt;a href=&quot;forkjointask#reinitialize--&quot;&gt;&lt;code&gt;reinitialize()&lt;/code&gt;&lt;/a&gt;, subsequent calls to &lt;a href=&quot;forkjointask#isCancelled--&quot;&gt;&lt;code&gt;isCancelled()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#isDone--&quot;&gt;&lt;code&gt;isDone()&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;cancel&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and calls to &lt;a href=&quot;forkjointask#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; and related methods will result in &lt;code&gt;CancellationException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f545bf8d096ea1b833b5eb0f7ce29c25e8dfe2" translate="yes" xml:space="preserve">
          <source>Attempts to cancel execution of this task. This attempt will fail if the task has already completed, has already been cancelled, or could not be cancelled for some other reason. If successful, and this task has not started when &lt;code&gt;cancel&lt;/code&gt; is called, this task should never run. If the task has already started, then the &lt;code&gt;mayInterruptIfRunning&lt;/code&gt; parameter determines whether the thread executing this task should be interrupted in an attempt to stop the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffd76704e71881008ba6ee96de86c766c61e175" translate="yes" xml:space="preserve">
          <source>Attempts to compute a mapping for the specified key and its current mapped value (or &lt;code&gt;null&lt;/code&gt; if there is no current mapping).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6995f73d660985e0068ac7840ce5b9d5105058c6" translate="yes" xml:space="preserve">
          <source>Attempts to compute a mapping for the specified key and its current mapped value (or &lt;code&gt;null&lt;/code&gt; if there is no current mapping). For example, to either create or append a &lt;code&gt;String&lt;/code&gt; msg to a value mapping:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4485fda1d0b5fc8e8c7719d09f4af2abd59f0d" translate="yes" xml:space="preserve">
          <source>Attempts to compute a mapping for the specified key and its current mapped value (or &lt;code&gt;null&lt;/code&gt; if there is no current mapping). The entire method invocation is performed atomically. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple, and must not attempt to update any other mappings of this Map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddeddbb6a5b1402c75107991ad79ee1af098855d" translate="yes" xml:space="preserve">
          <source>Attempts to compute a mapping for the specified key and its current mapped value (or &lt;code&gt;null&lt;/code&gt; if there is no current mapping). The function is &lt;em&gt;NOT&lt;/em&gt; guaranteed to be applied once atomically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b58e766c141ae3d28277152f3a39f8828973cd" translate="yes" xml:space="preserve">
          <source>Attempts to copy the file attributes associated with this file to the target file. The exact file attributes that are copied is platform and file system dependent and therefore unspecified. Minimally, the &lt;a href=&quot;attribute/basicfileattributes#lastModifiedTime--&quot;&gt;&lt;code&gt;last-modified-time&lt;/code&gt;&lt;/a&gt; is copied to the target file if supported by both the source and target file stores. Copying of file timestamps may result in precision loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a651e1dbacb8068014dd57b1daa55dc3774580" translate="yes" xml:space="preserve">
          <source>Attempts to decode SSL/TLS network data into a plaintext application data buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5268b10d6d3b64c3761f720d93f345168f7d14" translate="yes" xml:space="preserve">
          <source>Attempts to decode SSL/TLS network data into a sequence of plaintext application data buffers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4977f4a60ff88c648f5bb7c4bd3faa08c210f2c7" translate="yes" xml:space="preserve">
          <source>Attempts to decode SSL/TLS network data into a subsequence of plaintext application data buffers. This</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ad1ba17c44917f59ef98d8863c0245c5daa894" translate="yes" xml:space="preserve">
          <source>Attempts to encode a buffer of plaintext application data into SSL/TLS network data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f05364da5001a5b265e18741c400010b08ed21f" translate="yes" xml:space="preserve">
          <source>Attempts to encode plaintext bytes from a sequence of data buffers into SSL/TLS network data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5251f982b6de6843fa0560083d5fdf6ed5f26d4b" translate="yes" xml:space="preserve">
          <source>Attempts to encode plaintext bytes from a subsequence of data buffers into SSL/TLS network data. This</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec39fd211545bf65f5b194937ecfa5bed7529dab" translate="yes" xml:space="preserve">
          <source>Attempts to find the next occurrence of a pattern constructed from the specified string, ignoring delimiters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d418aa08bdc4ffdd5816f14ae1b103c76220d8" translate="yes" xml:space="preserve">
          <source>Attempts to find the next occurrence of the specified pattern ignoring delimiters. If the pattern is found before the next line separator, the scanner advances past the input that matched and returns the string that matched the pattern. If no such pattern is detected in the input up to the next line separator, then &lt;code&gt;null&lt;/code&gt; is returned and the scanner's position is unchanged. This method may block waiting for input that matches the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3812d20478045d8485120b05100458d1c13e199a" translate="yes" xml:space="preserve">
          <source>Attempts to find the next occurrence of the specified pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330398bd81e9cb8ab3301ade101b0a5bcc20666c" translate="yes" xml:space="preserve">
          <source>Attempts to find the next subsequence of the input sequence that matches the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53961c46179a42096ee9a8812a60985eda896e2e" translate="yes" xml:space="preserve">
          <source>Attempts to interpret the string &lt;code&gt;s&lt;/code&gt; as a representation of a date and time. If the attempt is successful, the time indicated is returned represented as the distance, measured in milliseconds, of that time from the epoch (00:00:00 GMT on January 1, 1970). If the attempt fails, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed02f4242df122d8a99d249969503460eed0b70" translate="yes" xml:space="preserve">
          <source>Attempts to match the entire region against the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21c0c5ca6d97f1389b8751366a51ff89cd3af76" translate="yes" xml:space="preserve">
          <source>Attempts to match the given &lt;a href=&quot;sniservername&quot;&gt;&lt;code&gt;SNIServerName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1ffb18a77fce0ff1a7745c9f8f825c236feceb" translate="yes" xml:space="preserve">
          <source>Attempts to match the input sequence, starting at the beginning of the region, against the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e492c31685a512b783f2ecd36b9f4177cdc9a60" translate="yes" xml:space="preserve">
          <source>Attempts to modify the returned &lt;code&gt;Iterator&lt;/code&gt; via its &lt;code&gt;remove&lt;/code&gt; method result in an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc99ece4be959bb2c767caf53927098dea9796e8" translate="yes" xml:space="preserve">
          <source>Attempts to parse this URI's authority component, if defined, into user-information, host, and port components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6bbece5380d32bb47a01ff7e0e9f342b10609f" translate="yes" xml:space="preserve">
          <source>Attempts to read characters into the specified character buffer. The buffer is used as a repository of characters as-is: the only changes made are the results of a put operation. No flipping or rewinding of the buffer is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8e5c1c4f4435c91f0e4b31eb3cdf12e1e03fd2" translate="yes" xml:space="preserve">
          <source>Attempts to reduce storage used for the character sequence. If the buffer is larger than necessary to hold its current sequence of characters, then it may be resized to become more space efficient. Calling this method may, but is not required to, affect the value returned by a subsequent call to the &lt;a href=&quot;stringbuffer#capacity--&quot;&gt;&lt;code&gt;capacity()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2adad58e2b3d067b178b23723d203533032801e3" translate="yes" xml:space="preserve">
          <source>Attempts to reduce storage used for the character sequence. If the buffer is larger than necessary to hold its current sequence of characters, then it may be resized to become more space efficient. Calling this method may, but is not required to, affect the value returned by a subsequent call to the &lt;a href=&quot;stringbuilder#capacity--&quot;&gt;&lt;code&gt;capacity()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbaab4122ca5ea943be8319d6c2ad91124d6bd6" translate="yes" xml:space="preserve">
          <source>Attempts to release this lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdc53110a2ff68ef5c4ff07eb5c187b0fe84ec9" translate="yes" xml:space="preserve">
          <source>Attempts to set the state to reflect a release in exclusive mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596f8b5c5090b0b227f87afd3fd05c1fbc29fca7" translate="yes" xml:space="preserve">
          <source>Attempts to set the state to reflect a release in shared mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d56255251e8f7056da33178522865b774bf63b" translate="yes" xml:space="preserve">
          <source>Attempts to skip over &lt;code&gt;n&lt;/code&gt; bytes of input discarding the skipped bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1745423da9b831e272687095443cbe5e175dcc3a" translate="yes" xml:space="preserve">
          <source>Attempts to stop all actively executing tasks, halts the processing of waiting tasks, and returns a list of the tasks that were awaiting execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e153214832a3d811e4f03d0faa5d224fba87fbd" translate="yes" xml:space="preserve">
          <source>Attempts to stop all actively executing tasks, halts the processing of waiting tasks, and returns a list of the tasks that were awaiting execution. These tasks are drained (removed) from the task queue upon return from this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="0fa78cf5f77109ee8d2345b1e78803eff12be467" translate="yes" xml:space="preserve">
          <source>Attribute Categories and Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe462099fbeb57d289ce57cd51b118b84d30152b" translate="yes" xml:space="preserve">
          <source>Attribute Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a810f301b05f92afd25065b6c635a955c44733" translate="yes" xml:space="preserve">
          <source>Attribute Class Design</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97721ba9e20d1849ae5553431ccee726ba5ea302" translate="yes" xml:space="preserve">
          <source>Attribute Definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba6dde6b753e94bee2517dee184260571238379" translate="yes" xml:space="preserve">
          <source>Attribute Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eab3fab536d255dc6845c496d77591c6825885" translate="yes" xml:space="preserve">
          <source>Attribute Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a0e7f7702aa95455439b1ec47be40a9e348c82" translate="yes" xml:space="preserve">
          <source>Attribute Organization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bb9852caceea65a561c3b9c61b2071d465df85" translate="yes" xml:space="preserve">
          <source>Attribute Roles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb2a09d77d10c08a15d2433e8a79e376bfddd43" translate="yes" xml:space="preserve">
          <source>Attribute Sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e605d901898148c780749bd66ccf500fe3ac283" translate="yes" xml:space="preserve">
          <source>Attribute Table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b280e979e69b4599ffa47b810c1cf118f67fcd7" translate="yes" xml:space="preserve">
          <source>Attribute Type Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb1576107ec9d1827a70fca006dbabf5765db6d" translate="yes" xml:space="preserve">
          <source>Attribute Vendors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6cd99c2368a4b510d0c7f702e52e143f2381b1" translate="yes" xml:space="preserve">
          <source>Attribute category name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3fedaac74206a10a92c83ec7f28cfb8bc0c8e8" translate="yes" xml:space="preserve">
          <source>Attribute comparision for removal is case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bb63469b1981a729e25e73a00f91b77e2cda68" translate="yes" xml:space="preserve">
          <source>Attribute key for input method segments. Input methods often break up text into segments, which usually correspond to words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1763e88e09dc6d43cedd1f10ad9bcf0ec4a4f184" translate="yes" xml:space="preserve">
          <source>Attribute key for the language of some text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a0bdbf46107e1743137445e7c5aabb9b88bf5f" translate="yes" xml:space="preserve">
          <source>Attribute key for the reading of some text. In languages where the written form and the pronunciation of a word are only loosely related (such as Japanese), it is often necessary to store the reading (pronunciation) along with the written form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43adb91b31278aaa1bd3a8eb6504920c59755104" translate="yes" xml:space="preserve">
          <source>Attribute keys are instances of &lt;a href=&quot;attributedcharacteriterator.attribute&quot;&gt;&lt;code&gt;AttributedCharacterIterator.Attribute&lt;/code&gt;&lt;/a&gt; and its subclasses, such as &lt;a href=&quot;/openjdk~8_gui/java/awt/font/textattribute&quot;&gt;&lt;code&gt;TextAttribute&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db7e8cffe657361faaaf56deedf7fa4f39ce959" translate="yes" xml:space="preserve">
          <source>Attribute name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67eb757752a348394b9daab37ecff5e31e31ce48" translate="yes" xml:space="preserve">
          <source>Attribute sets are used in several places in the Print Service API. In each context, only certain kinds of attributes are allowed to appear in the attribute set, as determined by the tagging interfaces which the attribute class implements -- &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;printjobattribute&quot;&gt;&lt;code&gt;PrintJobAttribute&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printserviceattribute&quot;&gt;&lt;code&gt;PrintServiceAttribute&lt;/code&gt;&lt;/a&gt;. There are four specializations of an attribute set that are restricted to contain just one of the four kinds of attribute -- &lt;a href=&quot;docattributeset&quot;&gt;&lt;code&gt;DocAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;printrequestattributeset&quot;&gt;&lt;code&gt;PrintRequestAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;printjobattributeset&quot;&gt;&lt;code&gt;PrintJobAttributeSet&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printserviceattributeset&quot;&gt;&lt;code&gt;PrintServiceAttributeSet&lt;/code&gt;&lt;/a&gt;, respectively. Note that many attribute classes implement more than one tagging interface and so may appear in more than one context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f7cdbffc11174cb0f675c478fb518ee9b9634a" translate="yes" xml:space="preserve">
          <source>Attribute values of type &lt;code&gt;DATATYPE_BOOLEAN&lt;/code&gt; should be marked as enumerations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e916688913665dea194b5f8c7b24e586dd743f" translate="yes" xml:space="preserve">
          <source>Attribute views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacec4ad2e2c73adbd895b3402471382e0b094ea" translate="yes" xml:space="preserve">
          <source>Attribute.add()</source>
          <target state="translated">Attribute.add()</target>
        </trans-unit>
        <trans-unit id="b03a94f2c9c8b0b4bd8e8ac0a763a9d3d850dbdd" translate="yes" xml:space="preserve">
          <source>Attribute.clear()</source>
          <target state="translated">Attribute.clear()</target>
        </trans-unit>
        <trans-unit id="47f55546a01f7f35ba430158e1fbe569823946e9" translate="yes" xml:space="preserve">
          <source>Attribute.clone()</source>
          <target state="translated">Attribute.clone()</target>
        </trans-unit>
        <trans-unit id="f1eaf55093454c1e6880e2e23e89d95f257e81c8" translate="yes" xml:space="preserve">
          <source>Attribute.contains()</source>
          <target state="translated">Attribute.contains()</target>
        </trans-unit>
        <trans-unit id="1b7f81a1fab3559199b9a12e82489f46074ccd26" translate="yes" xml:space="preserve">
          <source>Attribute.equals()</source>
          <target state="translated">Attribute.equals()</target>
        </trans-unit>
        <trans-unit id="765a3d929d2e3c3e57d7f85a625e45e1f4800b08" translate="yes" xml:space="preserve">
          <source>Attribute.get()</source>
          <target state="translated">Attribute.get()</target>
        </trans-unit>
        <trans-unit id="270bacec624d0bdc3c513b6d94d1754a8564fa48" translate="yes" xml:space="preserve">
          <source>Attribute.getAll()</source>
          <target state="translated">Attribute.getAll()</target>
        </trans-unit>
        <trans-unit id="6b25dc53db94749c23e6abd167912c8f1dada74f" translate="yes" xml:space="preserve">
          <source>Attribute.getAttributeDefinition()</source>
          <target state="translated">Attribute.getAttributeDefinition()</target>
        </trans-unit>
        <trans-unit id="f392e628cb5be965d7f3a505e53df570c640daac" translate="yes" xml:space="preserve">
          <source>Attribute.getAttributeSyntaxDefinition()</source>
          <target state="translated">Attribute.getAttributeSyntaxDefinition()</target>
        </trans-unit>
        <trans-unit id="35c6550104c8e5e21fd553288f0de2699afa65d2" translate="yes" xml:space="preserve">
          <source>Attribute.getCategory()</source>
          <target state="translated">Attribute.getCategory()</target>
        </trans-unit>
        <trans-unit id="199587bd3fec63ebf18c33d8d977ceb291e3b2d9" translate="yes" xml:space="preserve">
          <source>Attribute.getID()</source>
          <target state="translated">Attribute.getID()</target>
        </trans-unit>
        <trans-unit id="be5b4a884fccc07d5f8310e475676e250cacc0bc" translate="yes" xml:space="preserve">
          <source>Attribute.getName()</source>
          <target state="translated">Attribute.getName()</target>
        </trans-unit>
        <trans-unit id="fe25af2877add303ae07f7dfcc78ba14af441aae" translate="yes" xml:space="preserve">
          <source>Attribute.getValue()</source>
          <target state="translated">Attribute.getValue()</target>
        </trans-unit>
        <trans-unit id="a6da0c470e259ef09810c5a498cfa0b666bf73fc" translate="yes" xml:space="preserve">
          <source>Attribute.hashCode()</source>
          <target state="translated">Attribute.hashCode()</target>
        </trans-unit>
        <trans-unit id="9757227b6f86227dee54377689a699c6f682446c" translate="yes" xml:space="preserve">
          <source>Attribute.isOrdered()</source>
          <target state="translated">Attribute.isOrdered()</target>
        </trans-unit>
        <trans-unit id="b772342231ed1d00306c5af3f227de36243eb13f" translate="yes" xml:space="preserve">
          <source>Attribute.remove()</source>
          <target state="translated">Attribute.remove()</target>
        </trans-unit>
        <trans-unit id="49f9c71bcf26753fce77fa7afaecc30d1be0e17b" translate="yes" xml:space="preserve">
          <source>Attribute.set()</source>
          <target state="translated">Attribute.set()</target>
        </trans-unit>
        <trans-unit id="ced12f7b5458f1b8c3368f15114dad3cf10d34f6" translate="yes" xml:space="preserve">
          <source>Attribute.size()</source>
          <target state="translated">Attribute.size()</target>
        </trans-unit>
        <trans-unit id="20ed2cb2725c92939369e0da631bd17976b20117" translate="yes" xml:space="preserve">
          <source>Attribute.toString()</source>
          <target state="translated">Attribute.toString()</target>
        </trans-unit>
        <trans-unit id="452e0ffb24b1623ea5f849ca8ce40957b3ef0dcd" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotification</source>
          <target state="translated">AttributeChangeNotification</target>
        </trans-unit>
        <trans-unit id="3b1403d8f3b91e8cb2a9d2a7348e924072cc120c" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotification.getAttributeName()</source>
          <target state="translated">AttributeChangeNotification.getAttributeName()</target>
        </trans-unit>
        <trans-unit id="ebe6e0b93a9f91c79458bfb2d1897f3d859acf7b" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotification.getAttributeType()</source>
          <target state="translated">AttributeChangeNotification.getAttributeType()</target>
        </trans-unit>
        <trans-unit id="17648d4f85f5c5adf7fdfa62f43c908a0ce7f7d9" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotification.getNewValue()</source>
          <target state="translated">AttributeChangeNotification.getNewValue()</target>
        </trans-unit>
        <trans-unit id="6fe24c67880305581467b5bf972da1aa535f849c" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotification.getOldValue()</source>
          <target state="translated">AttributeChangeNotification.getOldValue()</target>
        </trans-unit>
        <trans-unit id="48b96949c7b3dff0092ebf31b0ed06a30ab51b84" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter</source>
          <target state="translated">AttributeChangeNotificationFilter</target>
        </trans-unit>
        <trans-unit id="ee895eb22e53ccfababb447917024b03d9626059" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter.disableAllAttributes()</source>
          <target state="translated">AttributeChangeNotificationFilter.disableAllAttributes()</target>
        </trans-unit>
        <trans-unit id="f3bb206079a06a67e675157176ff8209045dac2d" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter.disableAttribute()</source>
          <target state="translated">AttributeChangeNotificationFilter.disableAttribute()</target>
        </trans-unit>
        <trans-unit id="fa5d5a56e0105212bc1a5faf4068b16e1dd31fc7" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter.enableAttribute()</source>
          <target state="translated">AttributeChangeNotificationFilter.enableAttribute()</target>
        </trans-unit>
        <trans-unit id="47aa82a9b5aac088dbd832d31eae25f4088aa766" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter.getEnabledAttributes()</source>
          <target state="translated">AttributeChangeNotificationFilter.getEnabledAttributes()</target>
        </trans-unit>
        <trans-unit id="02536efded736db7e53c559ea2599487f8a659a6" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter.isNotificationEnabled()</source>
          <target state="translated">AttributeChangeNotificationFilter.isNotificationEnabled()</target>
        </trans-unit>
        <trans-unit id="eea225671d08afc0c7988e76a3ba87304a8bd054" translate="yes" xml:space="preserve">
          <source>AttributeException</source>
          <target state="translated">AttributeException</target>
        </trans-unit>
        <trans-unit id="358970c93af45367a9a6109a0c01abea062fb6fd" translate="yes" xml:space="preserve">
          <source>AttributeException. If one or more of the attributes are not valid for this print job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075b9c2cf488193cb76e4b0064644d6bd31e0b58" translate="yes" xml:space="preserve">
          <source>AttributeException.getUnsupportedAttributes()</source>
          <target state="translated">AttributeException.getUnsupportedAttributes()</target>
        </trans-unit>
        <trans-unit id="beef9c84e6888c07f76b9ccdf1288dc8637beb8a" translate="yes" xml:space="preserve">
          <source>AttributeException.getUnsupportedValues()</source>
          <target state="translated">AttributeException.getUnsupportedValues()</target>
        </trans-unit>
        <trans-unit id="6b2778b89170d14c4e1b843e7bb5a0cd809d563c" translate="yes" xml:space="preserve">
          <source>AttributeInUseException</source>
          <target state="translated">AttributeInUseException</target>
        </trans-unit>
        <trans-unit id="a2de454ef29dbce6d84b9699949979da71141ada" translate="yes" xml:space="preserve">
          <source>AttributeList</source>
          <target state="translated">AttributeList</target>
        </trans-unit>
        <trans-unit id="ed6b9d54d3b545bdabb58e1068da8f90354c0ce6" translate="yes" xml:space="preserve">
          <source>AttributeList.add()</source>
          <target state="translated">AttributeList.add()</target>
        </trans-unit>
        <trans-unit id="71a908fa0354fd9775c2e563146f5133ff046c30" translate="yes" xml:space="preserve">
          <source>AttributeList.addAll()</source>
          <target state="translated">AttributeList.addAll()</target>
        </trans-unit>
        <trans-unit id="4323b09b5ca031a75887e3257bb90b34d1446f2f" translate="yes" xml:space="preserve">
          <source>AttributeList.asList()</source>
          <target state="translated">AttributeList.asList()</target>
        </trans-unit>
        <trans-unit id="fa72175778387ca71e84c7f4c5f28dcbc3e739bc" translate="yes" xml:space="preserve">
          <source>AttributeList.set()</source>
          <target state="translated">AttributeList.set()</target>
        </trans-unit>
        <trans-unit id="cafbaadc3b70b9a0b86951ba4f524dd1df2d0ca0" translate="yes" xml:space="preserve">
          <source>AttributeModificationException</source>
          <target state="translated">AttributeModificationException</target>
        </trans-unit>
        <trans-unit id="4a350d02bb29f6066ac0960d2b3c714b1dcf87e1" translate="yes" xml:space="preserve">
          <source>AttributeModificationException.getUnexecutedModifications()</source>
          <target state="translated">AttributeModificationException.getUnexecutedModifications()</target>
        </trans-unit>
        <trans-unit id="c85f0f676ac099c7e0b091e3b14d89f4c3c769fc" translate="yes" xml:space="preserve">
          <source>AttributeModificationException.setUnexecutedModifications()</source>
          <target state="translated">AttributeModificationException.setUnexecutedModifications()</target>
        </trans-unit>
        <trans-unit id="d53941cc31bff0fd1455300bcdfbc815ed09bec7" translate="yes" xml:space="preserve">
          <source>AttributeModificationException.toString()</source>
          <target state="translated">AttributeModificationException.toString()</target>
        </trans-unit>
        <trans-unit id="8fd3507ef760cb046ca020d1cda144fa5b7d9e36" translate="yes" xml:space="preserve">
          <source>AttributeNotFoundException</source>
          <target state="translated">AttributeNotFoundException</target>
        </trans-unit>
        <trans-unit id="f60edc85e786791af15b942e55aa411831d5868e" translate="yes" xml:space="preserve">
          <source>AttributeSet</source>
          <target state="translated">AttributeSet</target>
        </trans-unit>
        <trans-unit id="66e498f78632adaf4fa358c4969e93a673a595c9" translate="yes" xml:space="preserve">
          <source>AttributeSet.add()</source>
          <target state="translated">AttributeSet.add()</target>
        </trans-unit>
        <trans-unit id="5da7005b672a6db3bc4b8292a9be9a7170187c73" translate="yes" xml:space="preserve">
          <source>AttributeSet.addAll()</source>
          <target state="translated">AttributeSet.addAll()</target>
        </trans-unit>
        <trans-unit id="ab9d4bef8f5192cf256a41add78704f9175a73e7" translate="yes" xml:space="preserve">
          <source>AttributeSet.clear()</source>
          <target state="translated">AttributeSet.clear()</target>
        </trans-unit>
        <trans-unit id="021e680089a148b823159c659add0974f70e1ef9" translate="yes" xml:space="preserve">
          <source>AttributeSet.containsKey()</source>
          <target state="translated">AttributeSet.containsKey()</target>
        </trans-unit>
        <trans-unit id="fc4c7a3d1842061368562cba138f288f3912dc64" translate="yes" xml:space="preserve">
          <source>AttributeSet.containsValue()</source>
          <target state="translated">AttributeSet.containsValue()</target>
        </trans-unit>
        <trans-unit id="2bbfe53d1ec4a3f23debce262dfffa928287f081" translate="yes" xml:space="preserve">
          <source>AttributeSet.equals()</source>
          <target state="translated">AttributeSet.equals()</target>
        </trans-unit>
        <trans-unit id="6c76b91b7b80a12f84b20b6944ee13a2d09ede8b" translate="yes" xml:space="preserve">
          <source>AttributeSet.get()</source>
          <target state="translated">AttributeSet.get()</target>
        </trans-unit>
        <trans-unit id="2342adf88abd5e038a49cfe34e609a66c4cf14a8" translate="yes" xml:space="preserve">
          <source>AttributeSet.hashCode()</source>
          <target state="translated">AttributeSet.hashCode()</target>
        </trans-unit>
        <trans-unit id="743f2456312a31182edf0d503ec0cac0436dfc49" translate="yes" xml:space="preserve">
          <source>AttributeSet.isEmpty()</source>
          <target state="translated">AttributeSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="c4d8e638a92be579fd009ad0652c8edeefbd8dad" translate="yes" xml:space="preserve">
          <source>AttributeSet.remove()</source>
          <target state="translated">AttributeSet.remove()</target>
        </trans-unit>
        <trans-unit id="a60991a2611d4bf5e2d9759e267a4957a57dd6c4" translate="yes" xml:space="preserve">
          <source>AttributeSet.size()</source>
          <target state="translated">AttributeSet.size()</target>
        </trans-unit>
        <trans-unit id="d0c1875b1442683e8964fc20749158cf99db7fb3" translate="yes" xml:space="preserve">
          <source>AttributeSet.toArray()</source>
          <target state="translated">AttributeSet.toArray()</target>
        </trans-unit>
        <trans-unit id="97874f6fbf2c9b16d3071e6f8b6b1933ea7d8b55" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities</source>
          <target state="translated">AttributeSetUtilities</target>
        </trans-unit>
        <trans-unit id="77ea8f400b85d4e47a1e8de2eeebae27ce9a8165" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities.synchronizedView()</source>
          <target state="translated">AttributeSetUtilities.synchronizedView()</target>
        </trans-unit>
        <trans-unit id="98437ad6f100a8cb9a4151c6f458a05db687d6b6" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities.unmodifiableView()</source>
          <target state="translated">AttributeSetUtilities.unmodifiableView()</target>
        </trans-unit>
        <trans-unit id="28adac6f572add266f96a63efd9f3f6d26a02d95" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities.verifyAttributeCategory()</source>
          <target state="translated">AttributeSetUtilities.verifyAttributeCategory()</target>
        </trans-unit>
        <trans-unit id="60b40decf62c263039b39862a20fb206d3d20349" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities.verifyAttributeValue()</source>
          <target state="translated">AttributeSetUtilities.verifyAttributeValue()</target>
        </trans-unit>
        <trans-unit id="81babb14e623059053a1d3abc505c7ec6796afb5" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities.verifyCategoryForValue()</source>
          <target state="translated">AttributeSetUtilities.verifyCategoryForValue()</target>
        </trans-unit>
        <trans-unit id="2e64d9c17f3f9a141385db972ca65dd140c84352" translate="yes" xml:space="preserve">
          <source>AttributeValue strings containing '=' or non-leading '#' characters (unescaped) are accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301e77b0b44622584579fe1d92dba17b278488a3" translate="yes" xml:space="preserve">
          <source>AttributeValueExp</source>
          <target state="translated">AttributeValueExp</target>
        </trans-unit>
        <trans-unit id="8dda10943f59f7501e420b18ed15e758a5014b69" translate="yes" xml:space="preserve">
          <source>AttributeValueExp.apply()</source>
          <target state="translated">AttributeValueExp.apply()</target>
        </trans-unit>
        <trans-unit id="e036cab07e937b18274cf737de18292af8f18251" translate="yes" xml:space="preserve">
          <source>AttributeValueExp.getAttribute()</source>
          <target state="translated">AttributeValueExp.getAttribute()</target>
        </trans-unit>
        <trans-unit id="ad9771bd243336dc97240a7775adc9afec206f76" translate="yes" xml:space="preserve">
          <source>AttributeValueExp.getAttributeName()</source>
          <target state="translated">AttributeValueExp.getAttributeName()</target>
        </trans-unit>
        <trans-unit id="aa74cea928d8a07f34b185503d4378b93c2c30d8" translate="yes" xml:space="preserve">
          <source>AttributeValueExp.setMBeanServer()</source>
          <target state="translated">AttributeValueExp.setMBeanServer()</target>
        </trans-unit>
        <trans-unit id="41f8be95f544388d0bd2b0cd76232117fed685d2" translate="yes" xml:space="preserve">
          <source>AttributeValueExp.toString()</source>
          <target state="translated">AttributeValueExp.toString()</target>
        </trans-unit>
        <trans-unit id="41a55ae97c16eda5800bb589635944d32e8ceaf7" translate="yes" xml:space="preserve">
          <source>AttributeView</source>
          <target state="translated">AttributeView</target>
        </trans-unit>
        <trans-unit id="df7b1b3de257119dc7075a70794bd510710a29a6" translate="yes" xml:space="preserve">
          <source>AttributeView.name()</source>
          <target state="translated">AttributeView.name()</target>
        </trans-unit>
        <trans-unit id="6857cdd808a968f6ae32a39212ac1165b46cbf0e" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator</source>
          <target state="translated">AttributedCharacterIterator</target>
        </trans-unit>
        <trans-unit id="6e4bd52673405afe92692d22f408cf85b59a8a65" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator describing the formatted value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac8c13d5d1cb0b88f58134f0d9c8a31df0851e7" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute</source>
          <target state="translated">AttributedCharacterIterator.Attribute</target>
        </trans-unit>
        <trans-unit id="3daeb7de1cfbd011ac22249df438850e966d1e65" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute.equals()</source>
          <target state="translated">AttributedCharacterIterator.Attribute.equals()</target>
        </trans-unit>
        <trans-unit id="74484fc223f810f09accae6d87c795b47802ad02" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute.getName()</source>
          <target state="translated">AttributedCharacterIterator.Attribute.getName()</target>
        </trans-unit>
        <trans-unit id="75f073baa4788de7eb17aa1aa8f34d61b20fcd8e" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute.hashCode()</source>
          <target state="translated">AttributedCharacterIterator.Attribute.hashCode()</target>
        </trans-unit>
        <trans-unit id="1bdd6de4006e548ef8408a5a6cb0d1cb16ec4487" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute.readResolve()</source>
          <target state="translated">AttributedCharacterIterator.Attribute.readResolve()</target>
        </trans-unit>
        <trans-unit id="d228299bfc8867d70fe01ec53cba1b429634a654" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute.toString()</source>
          <target state="translated">AttributedCharacterIterator.Attribute.toString()</target>
        </trans-unit>
        <trans-unit id="bba7495f38c1df679bb4bbae5c12c0b1f41b50f0" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.getAllAttributeKeys()</source>
          <target state="translated">AttributedCharacterIterator.getAllAttributeKeys()</target>
        </trans-unit>
        <trans-unit id="e101bc5387f5f1034936385cb1e628827adef962" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.getAttribute()</source>
          <target state="translated">AttributedCharacterIterator.getAttribute()</target>
        </trans-unit>
        <trans-unit id="9ff353a36628ede86c0ccdc5826ea018a5b84722" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.getAttributes()</source>
          <target state="translated">AttributedCharacterIterator.getAttributes()</target>
        </trans-unit>
        <trans-unit id="cedeece13224e4162a903ae7e0ed062c5a01e0fa" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.getRunLimit()</source>
          <target state="translated">AttributedCharacterIterator.getRunLimit()</target>
        </trans-unit>
        <trans-unit id="30274a2cd180d81d199b4f3a2e8672becf5c94a9" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.getRunStart()</source>
          <target state="translated">AttributedCharacterIterator.getRunStart()</target>
        </trans-unit>
        <trans-unit id="58ef98be514355be82ed498c203d6c8f244da9ca" translate="yes" xml:space="preserve">
          <source>AttributedString</source>
          <target state="translated">AttributedString</target>
        </trans-unit>
        <trans-unit id="f1d52ad161cba6a7f9ddce9997a8f6b8ee5894ea" translate="yes" xml:space="preserve">
          <source>AttributedString.addAttribute()</source>
          <target state="translated">AttributedString.addAttribute()</target>
        </trans-unit>
        <trans-unit id="f58ff1f2372dbef6c55c80860a4f352737285497" translate="yes" xml:space="preserve">
          <source>AttributedString.addAttributes()</source>
          <target state="translated">AttributedString.addAttributes()</target>
        </trans-unit>
        <trans-unit id="5301783be512e0ab6c138ab857057f54d97a53be" translate="yes" xml:space="preserve">
          <source>AttributedString.getIterator()</source>
          <target state="translated">AttributedString.getIterator()</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="4c8de99e2b721e9b734f9136a2ba56fdb13a1b8a" translate="yes" xml:space="preserve">
          <source>Attributes containing the new values for the print job attributes that changed. The returned set may not be modifiable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90446799d581d66f35ba0e54ff1eded7dbf6b10" translate="yes" xml:space="preserve">
          <source>Attributes containing the new values for the service attributes that changed. The returned set may be unmodifiable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e6cbe6651e6571d560e929f794db0d0bbb060b" translate="yes" xml:space="preserve">
          <source>Attributes in an object that implements the Attributes interface are unordered. The object can have zero or more attributes. Attributes is either case-sensitive or case-insensitive (case-ignore). This property is determined at the time the Attributes object is created. (see BasicAttributes constructor for example). In a case-insensitive Attributes, the case of its attribute identifiers is ignored when searching for an attribute, or adding attributes. In a case-sensitive Attributes, the case is significant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43989d6cd679f7be31a00e123c08069b041239ef" translate="yes" xml:space="preserve">
          <source>Attributes which are tagged with PrintRequestAttribute and are also tagged as PrintJobAttribute, represent the subset of job attributes which can be part of the specification of a job request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef72caac8857bb64c8d95ec34c38531ffe67566c" translate="yes" xml:space="preserve">
          <source>Attributes.Name</source>
          <target state="translated">Attributes.Name</target>
        </trans-unit>
        <trans-unit id="2ef176c7573cca5f1e528ac268699004714bc5de" translate="yes" xml:space="preserve">
          <source>Attributes.Name.equals()</source>
          <target state="translated">Attributes.Name.equals()</target>
        </trans-unit>
        <trans-unit id="737b2786c289d8ca16c6384acb4615df82fdf342" translate="yes" xml:space="preserve">
          <source>Attributes.Name.hashCode()</source>
          <target state="translated">Attributes.Name.hashCode()</target>
        </trans-unit>
        <trans-unit id="bfa433b811054da43148c9345bfa92376c2e86c9" translate="yes" xml:space="preserve">
          <source>Attributes.Name.toString()</source>
          <target state="translated">Attributes.Name.toString()</target>
        </trans-unit>
        <trans-unit id="59d90e9c462b6176e6673ea48ac2d2921c350612" translate="yes" xml:space="preserve">
          <source>Attributes.clear()</source>
          <target state="translated">Attributes.clear()</target>
        </trans-unit>
        <trans-unit id="cc101aa818fe7d145f5fc4ebaec31145ed70a96c" translate="yes" xml:space="preserve">
          <source>Attributes.clone()</source>
          <target state="translated">Attributes.clone()</target>
        </trans-unit>
        <trans-unit id="00267418855bc36467ec9e0607f9116958f45cbe" translate="yes" xml:space="preserve">
          <source>Attributes.containsKey()</source>
          <target state="translated">Attributes.containsKey()</target>
        </trans-unit>
        <trans-unit id="54b5daea78ebb959ab7c787e2117bcb56b292ff7" translate="yes" xml:space="preserve">
          <source>Attributes.containsValue()</source>
          <target state="translated">Attributes.containsValue()</target>
        </trans-unit>
        <trans-unit id="8a08b05ce7399bde7c8e9c0f89c00183ea087928" translate="yes" xml:space="preserve">
          <source>Attributes.entrySet()</source>
          <target state="translated">Attributes.entrySet()</target>
        </trans-unit>
        <trans-unit id="d48db896862e3ca7714fae5eb659da470f5c2c1f" translate="yes" xml:space="preserve">
          <source>Attributes.equals()</source>
          <target state="translated">Attributes.equals()</target>
        </trans-unit>
        <trans-unit id="6b3917c7b18c0133423524db34d4b691290d4fb7" translate="yes" xml:space="preserve">
          <source>Attributes.get()</source>
          <target state="translated">Attributes.get()</target>
        </trans-unit>
        <trans-unit id="fd4ffe6edf93a23b0e145c7bf038c569ca686c60" translate="yes" xml:space="preserve">
          <source>Attributes.getAll()</source>
          <target state="translated">Attributes.getAll()</target>
        </trans-unit>
        <trans-unit id="7ccc899bed0c4532ce0ff21510660a6e5a5bb7e7" translate="yes" xml:space="preserve">
          <source>Attributes.getIDs()</source>
          <target state="translated">Attributes.getIDs()</target>
        </trans-unit>
        <trans-unit id="de50dcb63dd116709b9088971e7145f71a0f58c6" translate="yes" xml:space="preserve">
          <source>Attributes.getValue()</source>
          <target state="translated">Attributes.getValue()</target>
        </trans-unit>
        <trans-unit id="3047c27501b38945a82c38fd0453d5e95324b14f" translate="yes" xml:space="preserve">
          <source>Attributes.hashCode()</source>
          <target state="translated">Attributes.hashCode()</target>
        </trans-unit>
        <trans-unit id="be0697c9d50ed385c9ff813a4626e5a6f336f723" translate="yes" xml:space="preserve">
          <source>Attributes.isCaseIgnored()</source>
          <target state="translated">Attributes.isCaseIgnored()</target>
        </trans-unit>
        <trans-unit id="4542b3a8f5ffb8f63860e0c8caf157296ed430e7" translate="yes" xml:space="preserve">
          <source>Attributes.isEmpty()</source>
          <target state="translated">Attributes.isEmpty()</target>
        </trans-unit>
        <trans-unit id="e4d97e6d95157cfdb26856ea2659738224e675c8" translate="yes" xml:space="preserve">
          <source>Attributes.keySet()</source>
          <target state="translated">Attributes.keySet()</target>
        </trans-unit>
        <trans-unit id="14e43a4ddf7d8bd18c3f8480e719574539c695d7" translate="yes" xml:space="preserve">
          <source>Attributes.put()</source>
          <target state="translated">Attributes.put()</target>
        </trans-unit>
        <trans-unit id="ce0ea71b6e582de22fd381ce6157f8da9dbfc754" translate="yes" xml:space="preserve">
          <source>Attributes.putAll()</source>
          <target state="translated">Attributes.putAll()</target>
        </trans-unit>
        <trans-unit id="2cf19ab59b20099a78ff0673718f30de6316de11" translate="yes" xml:space="preserve">
          <source>Attributes.putValue()</source>
          <target state="translated">Attributes.putValue()</target>
        </trans-unit>
        <trans-unit id="eea2ddcf77d1e5b0f250b4de905c8cf01ddf5454" translate="yes" xml:space="preserve">
          <source>Attributes.remove()</source>
          <target state="translated">Attributes.remove()</target>
        </trans-unit>
        <trans-unit id="cb182de8b30220d0f7cace60ed2ba148e60ce312" translate="yes" xml:space="preserve">
          <source>Attributes.size()</source>
          <target state="translated">Attributes.size()</target>
        </trans-unit>
        <trans-unit id="1fe4a1478cc3a139c60cb06fc8bbaaf573ea1183" translate="yes" xml:space="preserve">
          <source>Attributes.values()</source>
          <target state="translated">Attributes.values()</target>
        </trans-unit>
        <trans-unit id="86d94dace519a2ba2a6d2d15e32f722c955d9bfa" translate="yes" xml:space="preserve">
          <source>Audio File Format Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c494ebfdbc0ae4d0a20ac5dd2e0a478110b4c91" translate="yes" xml:space="preserve">
          <source>Audio Format Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1e525fd39558e121261a0f3a080395c2f96364" translate="yes" xml:space="preserve">
          <source>Audio System Property Keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a428542fd2eae95dfa2eb4da2201191833630e6" translate="yes" xml:space="preserve">
          <source>Audio playback through the audio device or devices on the system. Allows the application to obtain and manipulate lines and mixers for audio playback (rendering).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01002a56546176e8269827ddc364e42f85085ad6" translate="yes" xml:space="preserve">
          <source>Audio recording through the audio device or devices on the system. Allows the application to obtain and manipulate lines and mixers for audio recording (capture).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddae990439ebc62a8153ae92cf60fd9a0aeb550" translate="yes" xml:space="preserve">
          <source>Audio samples. A sample typically is a sampled audio waveform which contains a short sound recording whose duration is a fraction of a second, or at most a few seconds. These audio samples may be used by a &lt;code&gt;&lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; to synthesize sound in response to MIDI commands, or extracted for use by an application. (The terminology reflects musicians' use of the word &quot;sample&quot; to refer collectively to a series of contiguous audio samples or frames, rather than to a single, instantaneous sample.) The data class for an audio sample will be an object that encapsulates the audio sample data itself and information about how to interpret it (the format of the audio data), such as an &lt;code&gt;&lt;a href=&quot;../sampled/audioinputstream&quot;&gt;&lt;code&gt;AudioInputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d62a05a6ed7898dfad05b9d378c7e1cf726988a" translate="yes" xml:space="preserve">
          <source>AudioFileFormat</source>
          <target state="translated">AudioFileFormat</target>
        </trans-unit>
        <trans-unit id="b1789408d94ac82e96c59cef3b6ef9f572826115" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.Type</source>
          <target state="translated">AudioFileFormat.Type</target>
        </trans-unit>
        <trans-unit id="a994008b10cf189b55d4098c5367064fa7bd7857" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.Type.equals()</source>
          <target state="translated">AudioFileFormat.Type.equals()</target>
        </trans-unit>
        <trans-unit id="2462adb7cbb89117e9c7391497a040e5fa4ff5ec" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.Type.getExtension()</source>
          <target state="translated">AudioFileFormat.Type.getExtension()</target>
        </trans-unit>
        <trans-unit id="d4e9b9dc1cd356777a49145e09b328fa1d991543" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.Type.hashCode()</source>
          <target state="translated">AudioFileFormat.Type.hashCode()</target>
        </trans-unit>
        <trans-unit id="7d42bbc64a9cf05fbaf06a161d3a644f3c2b52ce" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.Type.toString()</source>
          <target state="translated">AudioFileFormat.Type.toString()</target>
        </trans-unit>
        <trans-unit id="0731a09901ed193d147189975500add6073a61f5" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.getByteLength()</source>
          <target state="translated">AudioFileFormat.getByteLength()</target>
        </trans-unit>
        <trans-unit id="072de7c35fb5e2fc360f57920cf2068d66aae910" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.getFormat()</source>
          <target state="translated">AudioFileFormat.getFormat()</target>
        </trans-unit>
        <trans-unit id="5480df6a3025ebc3816e03dd02bc46c6ef355eff" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.getFrameLength()</source>
          <target state="translated">AudioFileFormat.getFrameLength()</target>
        </trans-unit>
        <trans-unit id="dc428d2a57707bbde6d12fc77fdc39125a40ae88" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.getProperty()</source>
          <target state="translated">AudioFileFormat.getProperty()</target>
        </trans-unit>
        <trans-unit id="688ac125a2ae50d198e17a0141d52350ca2ba3cf" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.getType()</source>
          <target state="translated">AudioFileFormat.getType()</target>
        </trans-unit>
        <trans-unit id="19467b93d663072ccfff6f0d76f88f175a1bc8c3" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.properties()</source>
          <target state="translated">AudioFileFormat.properties()</target>
        </trans-unit>
        <trans-unit id="1085a31c812b0a71124340d39e80a78c0d5007eb" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.toString()</source>
          <target state="translated">AudioFileFormat.toString()</target>
        </trans-unit>
        <trans-unit id="9fe0470e52aacc324c05fb515d338f0ddce63c52" translate="yes" xml:space="preserve">
          <source>AudioFileReader</source>
          <target state="translated">AudioFileReader</target>
        </trans-unit>
        <trans-unit id="3fa3b8915e33c066a6cc00238cd39d28a7eae396" translate="yes" xml:space="preserve">
          <source>AudioFileReader.getAudioFileFormat()</source>
          <target state="translated">AudioFileReader.getAudioFileFormat()</target>
        </trans-unit>
        <trans-unit id="b90861952de0f1d4355124e5885ac08be65b3135" translate="yes" xml:space="preserve">
          <source>AudioFileReader.getAudioInputStream()</source>
          <target state="translated">AudioFileReader.getAudioInputStream()</target>
        </trans-unit>
        <trans-unit id="be0883e2cd6603f358dc4cb09324f2eceb3e2351" translate="yes" xml:space="preserve">
          <source>AudioFileWriter</source>
          <target state="translated">AudioFileWriter</target>
        </trans-unit>
        <trans-unit id="a1c7c648723a3cf57fc5d7804b0a7d371b56fd85" translate="yes" xml:space="preserve">
          <source>AudioFileWriter.getAudioFileTypes()</source>
          <target state="translated">AudioFileWriter.getAudioFileTypes()</target>
        </trans-unit>
        <trans-unit id="cdc4a49a2458ef239d15a318d15efb4c6aa4144b" translate="yes" xml:space="preserve">
          <source>AudioFileWriter.isFileTypeSupported()</source>
          <target state="translated">AudioFileWriter.isFileTypeSupported()</target>
        </trans-unit>
        <trans-unit id="b869310ea526d3a87cb0e555708adcc5e5e87382" translate="yes" xml:space="preserve">
          <source>AudioFileWriter.write()</source>
          <target state="translated">AudioFileWriter.write()</target>
        </trans-unit>
        <trans-unit id="8dcf74fea157147f002226d87ff6a27f2fc66c8a" translate="yes" xml:space="preserve">
          <source>AudioFormat</source>
          <target state="translated">AudioFormat</target>
        </trans-unit>
        <trans-unit id="6097272a10d77373ddaca995a74711e775bc7397" translate="yes" xml:space="preserve">
          <source>AudioFormat.Encoding</source>
          <target state="translated">AudioFormat.Encoding</target>
        </trans-unit>
        <trans-unit id="6ef708b21407f40af6eccb19b98bd2a61b5a303e" translate="yes" xml:space="preserve">
          <source>AudioFormat.Encoding.equals()</source>
          <target state="translated">AudioFormat.Encoding.equals()</target>
        </trans-unit>
        <trans-unit id="6c370d5fece9b0850f624500e1dc42be389a536a" translate="yes" xml:space="preserve">
          <source>AudioFormat.Encoding.hashCode()</source>
          <target state="translated">AudioFormat.Encoding.hashCode()</target>
        </trans-unit>
        <trans-unit id="b51d5a4e97a4855213076c242e3a9443255aed8b" translate="yes" xml:space="preserve">
          <source>AudioFormat.Encoding.toString()</source>
          <target state="translated">AudioFormat.Encoding.toString()</target>
        </trans-unit>
        <trans-unit id="ac27de5eb1ead901faf9cfc4d830a655ec989db2" translate="yes" xml:space="preserve">
          <source>AudioFormat.getChannels()</source>
          <target state="translated">AudioFormat.getChannels()</target>
        </trans-unit>
        <trans-unit id="15aa87302533991bbc53a81462d6dc705c4e2844" translate="yes" xml:space="preserve">
          <source>AudioFormat.getEncoding()</source>
          <target state="translated">AudioFormat.getEncoding()</target>
        </trans-unit>
        <trans-unit id="7fbfa477a2b3c28263ce35bba16d5231b2258720" translate="yes" xml:space="preserve">
          <source>AudioFormat.getFrameRate()</source>
          <target state="translated">AudioFormat.getFrameRate()</target>
        </trans-unit>
        <trans-unit id="9aca5542cd316e89a862c9e9da4f26f9a5abcf86" translate="yes" xml:space="preserve">
          <source>AudioFormat.getFrameSize()</source>
          <target state="translated">AudioFormat.getFrameSize()</target>
        </trans-unit>
        <trans-unit id="c5b9124c56c52f48afd8c84132074ca6c237567c" translate="yes" xml:space="preserve">
          <source>AudioFormat.getProperty()</source>
          <target state="translated">AudioFormat.getProperty()</target>
        </trans-unit>
        <trans-unit id="f67e2d1b0aca4b89cee8c73265f638c90f8bb300" translate="yes" xml:space="preserve">
          <source>AudioFormat.getSampleRate()</source>
          <target state="translated">AudioFormat.getSampleRate()</target>
        </trans-unit>
        <trans-unit id="db2a713b3050993741831ee9ec5522916f1b7f7d" translate="yes" xml:space="preserve">
          <source>AudioFormat.getSampleSizeInBits()</source>
          <target state="translated">AudioFormat.getSampleSizeInBits()</target>
        </trans-unit>
        <trans-unit id="4d0cfd2146308b78e279d7ef5adb73815ad0a5f1" translate="yes" xml:space="preserve">
          <source>AudioFormat.isBigEndian()</source>
          <target state="translated">AudioFormat.isBigEndian()</target>
        </trans-unit>
        <trans-unit id="3ba4d0abfda8b5998ff241d49b9d0dd4ae298576" translate="yes" xml:space="preserve">
          <source>AudioFormat.matches()</source>
          <target state="translated">AudioFormat.matches()</target>
        </trans-unit>
        <trans-unit id="f41b87275155e00b15186ded87745cd4a44ce8c7" translate="yes" xml:space="preserve">
          <source>AudioFormat.properties()</source>
          <target state="translated">AudioFormat.properties()</target>
        </trans-unit>
        <trans-unit id="cb4d3f27ca8a0ea37a984de9c50a64ab17875f5e" translate="yes" xml:space="preserve">
          <source>AudioFormat.toString()</source>
          <target state="translated">AudioFormat.toString()</target>
        </trans-unit>
        <trans-unit id="69b8ab6239eee18d43af32ad99be9469ce246f00" translate="yes" xml:space="preserve">
          <source>AudioInputStream</source>
          <target state="translated">AudioInputStream</target>
        </trans-unit>
        <trans-unit id="d14dbba15357b3672895f3c573e5cc9f3a757d2e" translate="yes" xml:space="preserve">
          <source>AudioInputStream.available()</source>
          <target state="translated">AudioInputStream.available()</target>
        </trans-unit>
        <trans-unit id="3d624c2c24ae696289c103cdaa5ae983f5ce5bc8" translate="yes" xml:space="preserve">
          <source>AudioInputStream.close()</source>
          <target state="translated">AudioInputStream.close()</target>
        </trans-unit>
        <trans-unit id="8452e4155bf4b68c55f3e8dae220ba5f71e0bc89" translate="yes" xml:space="preserve">
          <source>AudioInputStream.getFormat()</source>
          <target state="translated">AudioInputStream.getFormat()</target>
        </trans-unit>
        <trans-unit id="7e984fab7faee7608df2b1015a25059feff72ed3" translate="yes" xml:space="preserve">
          <source>AudioInputStream.getFrameLength()</source>
          <target state="translated">AudioInputStream.getFrameLength()</target>
        </trans-unit>
        <trans-unit id="9a6d2fba5b0fe994c732cac28a358528a2540094" translate="yes" xml:space="preserve">
          <source>AudioInputStream.mark()</source>
          <target state="translated">AudioInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="efef21349f5e604ea21dc7e1b3fd80c5a6e4bd6a" translate="yes" xml:space="preserve">
          <source>AudioInputStream.markSupported()</source>
          <target state="translated">AudioInputStream.markSupported()</target>
        </trans-unit>
        <trans-unit id="2403f3298e5bfd969e02f3ffccf2c8441f34f527" translate="yes" xml:space="preserve">
          <source>AudioInputStream.read()</source>
          <target state="translated">AudioInputStream.read()</target>
        </trans-unit>
        <trans-unit id="10f496df4d32ff5eeebaa17ee0484ac8942f86cd" translate="yes" xml:space="preserve">
          <source>AudioInputStream.reset()</source>
          <target state="translated">AudioInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="4e2b567d980504ee2b4c9045339fff73160b2d16" translate="yes" xml:space="preserve">
          <source>AudioInputStream.skip()</source>
          <target state="translated">AudioInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="a7647f46f5f41b28f3ea4a0b49f7aff9e9a9de2c" translate="yes" xml:space="preserve">
          <source>AudioPermission</source>
          <target state="translated">AudioPermission</target>
        </trans-unit>
        <trans-unit id="7b6ab8a7275e4006c05561127978f6d1d5c9131d" translate="yes" xml:space="preserve">
          <source>AudioSystem</source>
          <target state="translated">AudioSystem</target>
        </trans-unit>
        <trans-unit id="12a677ee861f9831315d213fa05a12e8a05b66fa" translate="yes" xml:space="preserve">
          <source>AudioSystem.getAudioFileFormat()</source>
          <target state="translated">AudioSystem.getAudioFileFormat()</target>
        </trans-unit>
        <trans-unit id="6a8fac74ca7a116b086aa9275a187b43d2e461d7" translate="yes" xml:space="preserve">
          <source>AudioSystem.getAudioFileTypes()</source>
          <target state="translated">AudioSystem.getAudioFileTypes()</target>
        </trans-unit>
        <trans-unit id="883ce331b04441c102f465ed0e479dd793190d48" translate="yes" xml:space="preserve">
          <source>AudioSystem.getAudioInputStream()</source>
          <target state="translated">AudioSystem.getAudioInputStream()</target>
        </trans-unit>
        <trans-unit id="27ebb6073423c88642bac0871423c9470115e022" translate="yes" xml:space="preserve">
          <source>AudioSystem.getClip()</source>
          <target state="translated">AudioSystem.getClip()</target>
        </trans-unit>
        <trans-unit id="2979bb2ddcebbaf35e1958362b6f9eaeb0e78c50" translate="yes" xml:space="preserve">
          <source>AudioSystem.getLine()</source>
          <target state="translated">AudioSystem.getLine()</target>
        </trans-unit>
        <trans-unit id="e3e76fbf1e1ba8197d109096bb544118e8e46995" translate="yes" xml:space="preserve">
          <source>AudioSystem.getMixer()</source>
          <target state="translated">AudioSystem.getMixer()</target>
        </trans-unit>
        <trans-unit id="0da0d279ee03aca3c809cabaab251e30568bcd49" translate="yes" xml:space="preserve">
          <source>AudioSystem.getMixerInfo()</source>
          <target state="translated">AudioSystem.getMixerInfo()</target>
        </trans-unit>
        <trans-unit id="82dafcbb18539369d98bea7fc9c0796d796cc144" translate="yes" xml:space="preserve">
          <source>AudioSystem.getSourceDataLine()</source>
          <target state="translated">AudioSystem.getSourceDataLine()</target>
        </trans-unit>
        <trans-unit id="26f2aec9a7e85fe5e165d5139769f8639cadaaed" translate="yes" xml:space="preserve">
          <source>AudioSystem.getSourceLineInfo()</source>
          <target state="translated">AudioSystem.getSourceLineInfo()</target>
        </trans-unit>
        <trans-unit id="3211dbd031fe5d6134ffdf6a771d7d987b68a7c6" translate="yes" xml:space="preserve">
          <source>AudioSystem.getTargetDataLine()</source>
          <target state="translated">AudioSystem.getTargetDataLine()</target>
        </trans-unit>
        <trans-unit id="d83f0fdbc1f532e3c2234a9869759ef3257ff55c" translate="yes" xml:space="preserve">
          <source>AudioSystem.getTargetEncodings()</source>
          <target state="translated">AudioSystem.getTargetEncodings()</target>
        </trans-unit>
        <trans-unit id="c3f163f534f8aa87d53140eec1d8bfffaf0dfe89" translate="yes" xml:space="preserve">
          <source>AudioSystem.getTargetFormats()</source>
          <target state="translated">AudioSystem.getTargetFormats()</target>
        </trans-unit>
        <trans-unit id="f5c79382e8a0ef3108e0abdabc9e3be52e82904f" translate="yes" xml:space="preserve">
          <source>AudioSystem.getTargetLineInfo()</source>
          <target state="translated">AudioSystem.getTargetLineInfo()</target>
        </trans-unit>
        <trans-unit id="45f21cb3a330b293024aadbfb4617b1f230154c1" translate="yes" xml:space="preserve">
          <source>AudioSystem.isConversionSupported()</source>
          <target state="translated">AudioSystem.isConversionSupported()</target>
        </trans-unit>
        <trans-unit id="b34e7251f47cef6d0d6bb395eef2edb2fde9b967" translate="yes" xml:space="preserve">
          <source>AudioSystem.isFileTypeSupported()</source>
          <target state="translated">AudioSystem.isFileTypeSupported()</target>
        </trans-unit>
        <trans-unit id="078aed7ce38a1e087383f3da6c2aaee4b2b05d4e" translate="yes" xml:space="preserve">
          <source>AudioSystem.isLineSupported()</source>
          <target state="translated">AudioSystem.isLineSupported()</target>
        </trans-unit>
        <trans-unit id="b45866d18c5b0df1c32de2695769038f81bea956" translate="yes" xml:space="preserve">
          <source>AudioSystem.write()</source>
          <target state="translated">AudioSystem.write()</target>
        </trans-unit>
        <trans-unit id="3b9d6feb9dfae82937f0c497fb3b26ffd1cfe5be" translate="yes" xml:space="preserve">
          <source>AuthPermission</source>
          <target state="translated">AuthPermission</target>
        </trans-unit>
        <trans-unit id="31dcbcc284e85669c0cbfd5e521e107f7512f300" translate="yes" xml:space="preserve">
          <source>AuthProvider</source>
          <target state="translated">AuthProvider</target>
        </trans-unit>
        <trans-unit id="73335e6d66ae490378f354cf410418b1641ed04e" translate="yes" xml:space="preserve">
          <source>AuthProvider.login()</source>
          <target state="translated">AuthProvider.login()</target>
        </trans-unit>
        <trans-unit id="653831f9667906b736b3ff6a2ec9711d97d76873" translate="yes" xml:space="preserve">
          <source>AuthProvider.logout()</source>
          <target state="translated">AuthProvider.logout()</target>
        </trans-unit>
        <trans-unit id="d000b082cf765a9cabe5f428657bc26d9237fb2f" translate="yes" xml:space="preserve">
          <source>AuthProvider.setCallbackHandler()</source>
          <target state="translated">AuthProvider.setCallbackHandler()</target>
        </trans-unit>
        <trans-unit id="e428ae55ba51a28fe68ce56a32525ef4d9329064" translate="yes" xml:space="preserve">
          <source>Authenticates the &lt;code&gt;MBeanServerConnection&lt;/code&gt; client with the given client credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1cce4f75d26093c7cb32e71281a2a9f922488e" translate="yes" xml:space="preserve">
          <source>AuthenticationException</source>
          <target state="translated">AuthenticationException</target>
        </trans-unit>
        <trans-unit id="4d3d46950665249a78264334bcbf4120e40bcfd6" translate="yes" xml:space="preserve">
          <source>AuthenticationNotSupportedException</source>
          <target state="translated">AuthenticationNotSupportedException</target>
        </trans-unit>
        <trans-unit id="4853c808b11b9b67738f58bbcfad661b3344e999" translate="yes" xml:space="preserve">
          <source>Authenticator</source>
          <target state="translated">Authenticator</target>
        </trans-unit>
        <trans-unit id="ce00c76e2c2e0db314fc84710385f08a74541e13" translate="yes" xml:space="preserve">
          <source>Authenticator.RequestorType</source>
          <target state="translated">Authenticator.RequestorType</target>
        </trans-unit>
        <trans-unit id="aafd210228565b37fa3f31c2c2d087a1e1bd2433" translate="yes" xml:space="preserve">
          <source>Authenticator.RequestorType.valueOf()</source>
          <target state="translated">Authenticator.RequestorType.valueOf()</target>
        </trans-unit>
        <trans-unit id="f7a5b9c4b60acea70e47d5bf2743a93deb8e8ec0" translate="yes" xml:space="preserve">
          <source>Authenticator.RequestorType.values()</source>
          <target state="translated">Authenticator.RequestorType.values()</target>
        </trans-unit>
        <trans-unit id="c006dae2d7fa632e43d70b45cfa97ea28fb9350b" translate="yes" xml:space="preserve">
          <source>Authenticator.getPasswordAuthentication()</source>
          <target state="translated">Authenticator.getPasswordAuthentication()</target>
        </trans-unit>
        <trans-unit id="270842216280866d72e01e4bdd945f588f132d2b" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingHost()</source>
          <target state="translated">Authenticator.getRequestingHost()</target>
        </trans-unit>
        <trans-unit id="d710f51435e7aa8bef92242c4bdca288c2a629a8" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingPort()</source>
          <target state="translated">Authenticator.getRequestingPort()</target>
        </trans-unit>
        <trans-unit id="7a7048c8b5c6db4c315dfd3878ac2a8f8be48e7a" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingPrompt()</source>
          <target state="translated">Authenticator.getRequestingPrompt()</target>
        </trans-unit>
        <trans-unit id="17f4b68df0bf2ddad7ba58123d840a67211df358" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingProtocol()</source>
          <target state="translated">Authenticator.getRequestingProtocol()</target>
        </trans-unit>
        <trans-unit id="5bec0ece8c518281f99d941b225914398dbc1784" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingScheme()</source>
          <target state="translated">Authenticator.getRequestingScheme()</target>
        </trans-unit>
        <trans-unit id="6936e960e2568303453b355d1c10cbf0d3ac0f4f" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingSite()</source>
          <target state="translated">Authenticator.getRequestingSite()</target>
        </trans-unit>
        <trans-unit id="dc751c6c822d2d69eca43765af31b863343ee110" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingURL()</source>
          <target state="translated">Authenticator.getRequestingURL()</target>
        </trans-unit>
        <trans-unit id="a4186842434ad19f730821673d0c291325121523" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestorType()</source>
          <target state="translated">Authenticator.getRequestorType()</target>
        </trans-unit>
        <trans-unit id="c6134474400a73540a30c51d8370eec3386c6515" translate="yes" xml:space="preserve">
          <source>Authenticator.requestPasswordAuthentication()</source>
          <target state="translated">Authenticator.requestPasswordAuthentication()</target>
        </trans-unit>
        <trans-unit id="cce6e55b4704f063864f77a507a16b3758994764" translate="yes" xml:space="preserve">
          <source>Authenticator.setDefault()</source>
          <target state="translated">Authenticator.setDefault()</target>
        </trans-unit>
        <trans-unit id="ab1244805710c8e7c03970d0bbc8c6216aa8f2d9" translate="yes" xml:space="preserve">
          <source>Authority key identifiers are not parsed by the &lt;code&gt;X509CertSelector&lt;/code&gt;. Instead, the values are compared using a byte-by-byte comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013503a2aa0ce466450f0b8797ab4608d9afdd98" translate="yes" xml:space="preserve">
          <source>AuthorityKeyIdentifier</source>
          <target state="translated">AuthorityKeyIdentifier</target>
        </trans-unit>
        <trans-unit id="f49d76999a2f373090058b3362254fd440f7cd2b" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback</source>
          <target state="translated">AuthorizeCallback</target>
        </trans-unit>
        <trans-unit id="2ed7ef68c9e356e5fac7c4ff23e52abbd57cf7f5" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.getAuthenticationID()</source>
          <target state="translated">AuthorizeCallback.getAuthenticationID()</target>
        </trans-unit>
        <trans-unit id="8e59e9ef4c03d005d2cb00f266097a3712b0932b" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.getAuthorizationID()</source>
          <target state="translated">AuthorizeCallback.getAuthorizationID()</target>
        </trans-unit>
        <trans-unit id="68c55d36099094a9526998a6677168f67490639f" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.getAuthorizedID()</source>
          <target state="translated">AuthorizeCallback.getAuthorizedID()</target>
        </trans-unit>
        <trans-unit id="0f571aa086dbb89b41827a007756644d944eb42e" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.isAuthorized()</source>
          <target state="translated">AuthorizeCallback.isAuthorized()</target>
        </trans-unit>
        <trans-unit id="3ec3f37e5a36b832f7b957af714e30583271e8ee" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.setAuthorized()</source>
          <target state="translated">AuthorizeCallback.setAuthorized()</target>
        </trans-unit>
        <trans-unit id="d1a8f7b5424312ec74fad5ac7d50444f6930fb4e" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.setAuthorizedID()</source>
          <target state="translated">AuthorizeCallback.setAuthorizedID()</target>
        </trans-unit>
        <trans-unit id="671417172f076e5ba7613593c53d0a895dc87087" translate="yes" xml:space="preserve">
          <source>AutoCloseable</source>
          <target state="translated">AutoCloseable</target>
        </trans-unit>
        <trans-unit id="2830ba856ca3be7dd02d68fbe5bb30b706dbd5eb" translate="yes" xml:space="preserve">
          <source>AutoCloseable.close()</source>
          <target state="translated">AutoCloseable.close()</target>
        </trans-unit>
        <trans-unit id="dba5d9a5e3886a841cca600e9c59875e4dd23b21" translate="yes" xml:space="preserve">
          <source>Available resource bundles: &lt;code&gt;foo/bar/Messages_fr.properties&lt;/code&gt; and &lt;code&gt;foo/bar/Messages.properties&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d296533c86c93a5a4883d9a37960c5ba8505fec9" translate="yes" xml:space="preserve">
          <source>Awaits termination of the group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1af80c4563aed36671070cabec7e65d23da811" translate="yes" xml:space="preserve">
          <source>Awaits the phase of this phaser to advance from the given phase value or the given timeout to elapse, throwing &lt;code&gt;InterruptedException&lt;/code&gt; if interrupted while waiting, or returning immediately if the current phase is not equal to the given phase value or this phaser is terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f3dd3721fa81a4c8cabb26cfa6ed7c929c494a" translate="yes" xml:space="preserve">
          <source>Awaits the phase of this phaser to advance from the given phase value, returning immediately if the current phase is not equal to the given phase value or this phaser is terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22e6ae212ae3823d623ab667deded86473022db" translate="yes" xml:space="preserve">
          <source>Awaits the phase of this phaser to advance from the given phase value, throwing &lt;code&gt;InterruptedException&lt;/code&gt; if interrupted while waiting, or returning immediately if the current phase is not equal to the given phase value or this phaser is terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="17ce16dd55ecc4a625798ef48d952d2a253bbec1" translate="yes" xml:space="preserve">
          <source>B size .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5bf362ddfe233106cabcd727d4106dce09b5e9" translate="yes" xml:space="preserve">
          <source>B.E. (Buddhist Era)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca874deaab16366191c7957785eea44d50d3a744" translate="yes" xml:space="preserve">
          <source>B0</source>
          <target state="translated">B0</target>
        </trans-unit>
        <trans-unit id="ef48c8d0df5118edd036315d2021412c3ca49d8a" translate="yes" xml:space="preserve">
          <source>B1</source>
          <target state="translated">B1</target>
        </trans-unit>
        <trans-unit id="add4127aa37a76bcbcd6e5edf9f2bdc0c99009a6" translate="yes" xml:space="preserve">
          <source>B10</source>
          <target state="translated">B10</target>
        </trans-unit>
        <trans-unit id="d7d321cd8f852dd84037aad117400f65d20cb2fe" translate="yes" xml:space="preserve">
          <source>B2</source>
          <target state="translated">B2</target>
        </trans-unit>
        <trans-unit id="2a728b64dd5e3817fb20441a73940eb7f662f0d7" translate="yes" xml:space="preserve">
          <source>B3</source>
          <target state="translated">B3</target>
        </trans-unit>
        <trans-unit id="c6400eaec160a4a41543edfea959e655d8e35d9f" translate="yes" xml:space="preserve">
          <source>B4</source>
          <target state="translated">B4</target>
        </trans-unit>
        <trans-unit id="6952d23be8231427a9994cf117ac904e19922eea" translate="yes" xml:space="preserve">
          <source>B5</source>
          <target state="translated">B5</target>
        </trans-unit>
        <trans-unit id="47c92ee1c48b3c7faaa260318ff0c51bf6eac420" translate="yes" xml:space="preserve">
          <source>B6</source>
          <target state="translated">B6</target>
        </trans-unit>
        <trans-unit id="20cf11aa74c2b447363ff2abd540bd2a270581cf" translate="yes" xml:space="preserve">
          <source>B7</source>
          <target state="translated">B7</target>
        </trans-unit>
        <trans-unit id="32526d1d6e8be7be93c88ba8c14ec09d51784d1a" translate="yes" xml:space="preserve">
          <source>B8</source>
          <target state="translated">B8</target>
        </trans-unit>
        <trans-unit id="74a7976468c3c0ea75025f15ae2b8f2207a4014d" translate="yes" xml:space="preserve">
          <source>B9</source>
          <target state="translated">B9</target>
        </trans-unit>
        <trans-unit id="2b3ccf951751c5efb177f4b89ce8fae2304af5b5" translate="yes" xml:space="preserve">
          <source>BALANCE</source>
          <target state="translated">BALANCE</target>
        </trans-unit>
        <trans-unit id="3ad722fbb916cd87ec8e36f4cb2adc4fd315993e" translate="yes" xml:space="preserve">
          <source>BALINESE</source>
          <target state="translated">BALINESE</target>
        </trans-unit>
        <trans-unit id="321c0e8a0558c7526c8293623fd85f0a96e35fe3" translate="yes" xml:space="preserve">
          <source>BAMUM</source>
          <target state="translated">BAMUM</target>
        </trans-unit>
        <trans-unit id="53a362ed06a5ef755273d60162c00ecdeba48f7e" translate="yes" xml:space="preserve">
          <source>BAMUM_SUPPLEMENT</source>
          <target state="translated">BAMUM_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="20ba08dca40b62bef4f009e428db8333219bb74e" translate="yes" xml:space="preserve">
          <source>BASIC_ISO_DATE</source>
          <target state="translated">BASIC_ISO_DATE</target>
        </trans-unit>
        <trans-unit id="5192186669bf8b178614a1f6ee921307dce593c1" translate="yes" xml:space="preserve">
          <source>BASIC_LATIN</source>
          <target state="translated">BASIC_LATIN</target>
        </trans-unit>
        <trans-unit id="1e35844cb1e1f4d0c3e69ced26bd3d5a7bddd2c0" translate="yes" xml:space="preserve">
          <source>BATAK</source>
          <target state="translated">BATAK</target>
        </trans-unit>
        <trans-unit id="ac22e8d8aa2a5bf7c3eecb15bf4b359d1975f562" translate="yes" xml:space="preserve">
          <source>BATCHSIZE</source>
          <target state="translated">BATCHSIZE</target>
        </trans-unit>
        <trans-unit id="a7a051355c3e05fb5fb80de30930bee9d2eb7847" translate="yes" xml:space="preserve">
          <source>BC</source>
          <target state="translated">BC</target>
        </trans-unit>
        <trans-unit id="37ff049ca21491a18f123e855fc4e46abfad5a6a" translate="yes" xml:space="preserve">
          <source>BC (BCE)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae80cdcae7b5492fb81bed065e09208a47cc355b" translate="yes" xml:space="preserve">
          <source>BCE</source>
          <target state="translated">BCE</target>
        </trans-unit>
        <trans-unit id="3472ff5765a2d9cb8605e9b928f61808c7010096" translate="yes" xml:space="preserve">
          <source>BE</source>
          <target state="translated">BE</target>
        </trans-unit>
        <trans-unit id="1b8201c18ee5b85c5f291eae3f8324be30f603f5" translate="yes" xml:space="preserve">
          <source>BEFORE_BE</source>
          <target state="translated">BEFORE_BE</target>
        </trans-unit>
        <trans-unit id="e6454f4a1afcbbe82bba64619a8f13caec5f74f1" translate="yes" xml:space="preserve">
          <source>BEFORE_ROC</source>
          <target state="translated">BEFORE_ROC</target>
        </trans-unit>
        <trans-unit id="e397094a0ed13338e527e3f8cc7ea5ff5b01d36e" translate="yes" xml:space="preserve">
          <source>BENGALI</source>
          <target state="translated">BENGALI</target>
        </trans-unit>
        <trans-unit id="1535f58c0af6bef9c957a359c1bc7cecddc75034" translate="yes" xml:space="preserve">
          <source>BEST_COMPRESSION</source>
          <target state="translated">BEST_COMPRESSION</target>
        </trans-unit>
        <trans-unit id="0cb6508a540db7c7ac9fb8ba495986fedd53f6dc" translate="yes" xml:space="preserve">
          <source>BEST_SPEED</source>
          <target state="translated">BEST_SPEED</target>
        </trans-unit>
        <trans-unit id="273491b41904a3041dc3f9b4e5f6bf416600e538" translate="yes" xml:space="preserve">
          <source>BET - America/Sao_Paulo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee4cda234c086f1d8912ba7985b73cf5be44c86" translate="yes" xml:space="preserve">
          <source>BEWARE, this method has to be exposed as the Relation Service will access the relation through its management interface. It is RECOMMENDED NOT to use this method. Using it does not affect the registration of the relation object in the Relation Service, but will provide wrong information about it!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af0e75949d216afa06afea285bf7370664ea1a1" translate="yes" xml:space="preserve">
          <source>BEWARE. the user is not expected to call this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84af00b94a02a50999d651cdffec0ebc75742f3a" translate="yes" xml:space="preserve">
          <source>BIGDECIMAL</source>
          <target state="translated">BIGDECIMAL</target>
        </trans-unit>
        <trans-unit id="45b3ea3d0054ba5295dfb586273d356f93bd0efd" translate="yes" xml:space="preserve">
          <source>BIGINTEGER</source>
          <target state="translated">BIGINTEGER</target>
        </trans-unit>
        <trans-unit id="a10f69d43d8a20beb4277f3a86e0e4a8864a8488" translate="yes" xml:space="preserve">
          <source>BIG_ENDIAN</source>
          <target state="translated">BIG_ENDIAN</target>
        </trans-unit>
        <trans-unit id="736022c7380365bcfcaf1ba1d6b522b269dcabd0" translate="yes" xml:space="preserve">
          <source>BIND</source>
          <target state="translated">BIND</target>
        </trans-unit>
        <trans-unit id="592f434c6928ec5bbdc98abcf67260108bffb2d1" translate="yes" xml:space="preserve">
          <source>BI_BITFIELDS</source>
          <target state="translated">BI_BITFIELDS</target>
        </trans-unit>
        <trans-unit id="7df7fe024a0f001b90ac78439596e1289d6515f4" translate="yes" xml:space="preserve">
          <source>BI_RGB</source>
          <target state="translated">BI_RGB</target>
        </trans-unit>
        <trans-unit id="b2be791a636a95326872fe08d6c384f0a27fb9eb" translate="yes" xml:space="preserve">
          <source>BI_RLE4</source>
          <target state="translated">BI_RLE4</target>
        </trans-unit>
        <trans-unit id="79676e4aad2d10968d9ae73ee6e89d44a9639ace" translate="yes" xml:space="preserve">
          <source>BI_RLE8</source>
          <target state="translated">BI_RLE8</target>
        </trans-unit>
        <trans-unit id="fcc4cce12177701ec0c8ab248fb9e86dff8f83f4" translate="yes" xml:space="preserve">
          <source>BLOCKED</source>
          <target state="translated">BLOCKED</target>
        </trans-unit>
        <trans-unit id="47e5f143a23380fb6a3b1a9f6739717095505d6b" translate="yes" xml:space="preserve">
          <source>BLOCK_CIPHER</source>
          <target state="translated">BLOCK_CIPHER</target>
        </trans-unit>
        <trans-unit id="775b418a96d3a5414f63a02c42e29be083f2b589" translate="yes" xml:space="preserve">
          <source>BLOCK_ELEMENTS</source>
          <target state="translated">BLOCK_ELEMENTS</target>
        </trans-unit>
        <trans-unit id="8306a543f91f1fd548cb382031a57ef6cd3bdffb" translate="yes" xml:space="preserve">
          <source>BMP</source>
          <target state="translated">BMP</target>
        </trans-unit>
        <trans-unit id="2db42a4cf50a1afce240ed3a9b64f4e18aeda85a" translate="yes" xml:space="preserve">
          <source>BMP metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8f1128841191a04e4cf5a400f49513c08cbe97" translate="yes" xml:space="preserve">
          <source>BMP metadata format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a7d4e648260e7021934d0af4241f1f62cc8c2a" translate="yes" xml:space="preserve">
          <source>BMPImageWriteParam</source>
          <target state="translated">BMPImageWriteParam</target>
        </trans-unit>
        <trans-unit id="0a89548dee2ca76340987445da438742ad05af86" translate="yes" xml:space="preserve">
          <source>BMPImageWriteParam.isTopDown()</source>
          <target state="translated">BMPImageWriteParam.isTopDown()</target>
        </trans-unit>
        <trans-unit id="411e9ae5e0196264a87a868e06488a28ddb025d8" translate="yes" xml:space="preserve">
          <source>BMPImageWriteParam.setTopDown()</source>
          <target state="translated">BMPImageWriteParam.setTopDown()</target>
        </trans-unit>
        <trans-unit id="ab68d8e893a82cff70979ba20bec0023dbfe4be3" translate="yes" xml:space="preserve">
          <source>BOOLEAN</source>
          <target state="translated">BOOLEAN</target>
        </trans-unit>
        <trans-unit id="8598679850cd72d702affd35737f9a55823b7e9a" translate="yes" xml:space="preserve">
          <source>BOPOMOFO</source>
          <target state="translated">BOPOMOFO</target>
        </trans-unit>
        <trans-unit id="0bb01391b45e1d3c4bb1a4958423b1023be537e4" translate="yes" xml:space="preserve">
          <source>BOPOMOFO_EXTENDED</source>
          <target state="translated">BOPOMOFO_EXTENDED</target>
        </trans-unit>
        <trans-unit id="44d0fd52d22bc3880e85e62976e56bf1bd6ea9d4" translate="yes" xml:space="preserve">
          <source>BOTTOM</source>
          <target state="translated">BOTTOM</target>
        </trans-unit>
        <trans-unit id="6a48b0b6689d125afba80fffb4714d67a2fdc4f1" translate="yes" xml:space="preserve">
          <source>BOUND_SERVER_NAME</source>
          <target state="translated">BOUND_SERVER_NAME</target>
        </trans-unit>
        <trans-unit id="da2bf564d9fdc41229019df68c85d564668a4bca" translate="yes" xml:space="preserve">
          <source>BOX_DRAWING</source>
          <target state="translated">BOX_DRAWING</target>
        </trans-unit>
        <trans-unit id="abbff7ea475f4d853f47139c32df9a6f35dd2407" translate="yes" xml:space="preserve">
          <source>BRAHMI</source>
          <target state="translated">BRAHMI</target>
        </trans-unit>
        <trans-unit id="2742771b4b48507265b27c5f0641c16120502ec2" translate="yes" xml:space="preserve">
          <source>BRAILLE</source>
          <target state="translated">BRAILLE</target>
        </trans-unit>
        <trans-unit id="05695c2ed3d3a5a91af1e29dca361daffd9e3d6a" translate="yes" xml:space="preserve">
          <source>BRAILLE_PATTERNS</source>
          <target state="translated">BRAILLE_PATTERNS</target>
        </trans-unit>
        <trans-unit id="d29d4dd47cc85d1c12b53d9cf441dc5c3eb64ac4" translate="yes" xml:space="preserve">
          <source>BST - Asia/Dhaka</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b610a0f22114412e60daf9466bea3ca4a592589" translate="yes" xml:space="preserve">
          <source>BUFFER_OVERFLOW</source>
          <target state="translated">BUFFER_OVERFLOW</target>
        </trans-unit>
        <trans-unit id="ce61dd1a5680729bd8cb8f40226ee27325e04b48" translate="yes" xml:space="preserve">
          <source>BUFFER_UNDERFLOW</source>
          <target state="translated">BUFFER_UNDERFLOW</target>
        </trans-unit>
        <trans-unit id="93c39315e570357a93f7121cc58c94ba1024ed8e" translate="yes" xml:space="preserve">
          <source>BUGINESE</source>
          <target state="translated">BUGINESE</target>
        </trans-unit>
        <trans-unit id="feb2c9372aa13c6c2836361bf927c0dcf95286ba" translate="yes" xml:space="preserve">
          <source>BUHID</source>
          <target state="translated">BUHID</target>
        </trans-unit>
        <trans-unit id="1d7caa593761d5e9b3a933c7c28bf276e5fe0725" translate="yes" xml:space="preserve">
          <source>BYTE</source>
          <target state="translated">BYTE</target>
        </trans-unit>
        <trans-unit id="7d70f6a49c217b2daa206e8811d0f77109ad0a96" translate="yes" xml:space="preserve">
          <source>BYTES</source>
          <target state="translated">BYTES</target>
        </trans-unit>
        <trans-unit id="429713d663fe2d29f5b0139a5f5fbcf1e93c5692" translate="yes" xml:space="preserve">
          <source>BYTE_ARRAY</source>
          <target state="translated">BYTE_ARRAY</target>
        </trans-unit>
        <trans-unit id="1d2cea396e687f2d77062a74c015d4a76571b94c" translate="yes" xml:space="preserve">
          <source>BYZANTINE_MUSICAL_SYMBOLS</source>
          <target state="translated">BYZANTINE_MUSICAL_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="2ba208c7a57215fe25a2dc8edeb1eed6d80c323c" translate="yes" xml:space="preserve">
          <source>Back references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4002f8605fb7eee3ac560d5f4277d5f6ffa08a" translate="yes" xml:space="preserve">
          <source>BackingStoreException</source>
          <target state="translated">BackingStoreException</target>
        </trans-unit>
        <trans-unit id="e66547664ee0e132394ce3e19def8c2b058b57ac" translate="yes" xml:space="preserve">
          <source>Backslashes within string literals in Java source code are interpreted as required by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139a2c1cd431c9a6d99d598b65de5def14a27ea6" translate="yes" xml:space="preserve">
          <source>Backslashes, escapes, and quoting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbe21ea8c0817440c88819365e4384fcc84d124" translate="yes" xml:space="preserve">
          <source>BadAttributeValueExpException</source>
          <target state="translated">BadAttributeValueExpException</target>
        </trans-unit>
        <trans-unit id="2e4b21b77bf7b855366d1b0d3a754d4b24518725" translate="yes" xml:space="preserve">
          <source>BadAttributeValueExpException.toString()</source>
          <target state="translated">BadAttributeValueExpException.toString()</target>
        </trans-unit>
        <trans-unit id="f70b915ca66d06660058f1d07ac981c3ca38a288" translate="yes" xml:space="preserve">
          <source>BadBinaryOpValueExpException</source>
          <target state="translated">BadBinaryOpValueExpException</target>
        </trans-unit>
        <trans-unit id="4ecc26ed844a0ad1e2b2bea70ea385d9772b653c" translate="yes" xml:space="preserve">
          <source>BadBinaryOpValueExpException.getExp()</source>
          <target state="translated">BadBinaryOpValueExpException.getExp()</target>
        </trans-unit>
        <trans-unit id="a2b4190ea3906eb011c2f718317207e0037fb9a7" translate="yes" xml:space="preserve">
          <source>BadBinaryOpValueExpException.toString()</source>
          <target state="translated">BadBinaryOpValueExpException.toString()</target>
        </trans-unit>
        <trans-unit id="926b35fcddabbc2a1497ce6eaa51574f91cfe7b1" translate="yes" xml:space="preserve">
          <source>BadPaddingException</source>
          <target state="translated">BadPaddingException</target>
        </trans-unit>
        <trans-unit id="b2ed8d73529136a4e3b1e8dbe76730ae4a641e3e" translate="yes" xml:space="preserve">
          <source>BadStringOperationException</source>
          <target state="translated">BadStringOperationException</target>
        </trans-unit>
        <trans-unit id="88adc261e1104b35b97b25aef3f97fa58b8a285b" translate="yes" xml:space="preserve">
          <source>BadStringOperationException.toString()</source>
          <target state="translated">BadStringOperationException.toString()</target>
        </trans-unit>
        <trans-unit id="81cf1fc845edadc7e93ac2d4bb5d0d787bb60d42" translate="yes" xml:space="preserve">
          <source>Bags</source>
          <target state="translated">Bags</target>
        </trans-unit>
        <trans-unit id="94588da0543b97fca5ed84bcb7daf3bd22cd8f19" translate="yes" xml:space="preserve">
          <source>Base bundle name: &lt;code&gt;foo.bar.Messages&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11aa12a9be3af0b2db3b3f391277f470308cf25c" translate="yes" xml:space="preserve">
          <source>Base class for character conversion exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a726c958512fd25171d8898b5dfd780a86dc918" translate="yes" xml:space="preserve">
          <source>Base implementation class for interruptible channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7faddce7bd6086dae4af2ebb71fb9d4677483f" translate="yes" xml:space="preserve">
          <source>Base implementation class for selectable channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef6808c1b587cc595b85f77be1ef166e9a004d8" translate="yes" xml:space="preserve">
          <source>Base implementation class for selection keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d843938cca216c61c85941268c5da5fb0068ad1" translate="yes" xml:space="preserve">
          <source>Base implementation class for selectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9f80da9d9892ffe0b5fc54b54f2cdc87c991fe" translate="yes" xml:space="preserve">
          <source>Base interface for streams, which are sequences of elements supporting sequential and parallel aggregate operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9476b0bc0ca2d0aed7d604a866913ee3712035" translate="yes" xml:space="preserve">
          <source>Base interface for streams, which are sequences of elements supporting sequential and parallel aggregate operations. The following example illustrates an aggregate operation using the stream types &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;, computing the sum of the weights of the red widgets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895c330ff6166a7f13701f8d9b78f313787269c8" translate="yes" xml:space="preserve">
          <source>Base64</source>
          <target state="translated">Base64</target>
        </trans-unit>
        <trans-unit id="5b885e1be52dad6ad1a1410a88802a0a8657f286" translate="yes" xml:space="preserve">
          <source>Base64 Alphabet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b7749141d8b0a9e9d15974c36a0c24fa5924ed" translate="yes" xml:space="preserve">
          <source>Base64.Decoder</source>
          <target state="translated">Base64.Decoder</target>
        </trans-unit>
        <trans-unit id="82f5be667e7104b658bfbd74f9bf3e5b415a20e0" translate="yes" xml:space="preserve">
          <source>Base64.Decoder.decode()</source>
          <target state="translated">Base64.Decoder.decode()</target>
        </trans-unit>
        <trans-unit id="14d4a8ef3d4ec462a2fa0ea19b297827cc270135" translate="yes" xml:space="preserve">
          <source>Base64.Decoder.wrap()</source>
          <target state="translated">Base64.Decoder.wrap()</target>
        </trans-unit>
        <trans-unit id="2e1bd45025962711c44045b171b4f38f3d53b6b9" translate="yes" xml:space="preserve">
          <source>Base64.Encoder</source>
          <target state="translated">Base64.Encoder</target>
        </trans-unit>
        <trans-unit id="b15c643a699fe0fb31cbab791142bee2bb04f106" translate="yes" xml:space="preserve">
          <source>Base64.Encoder.encode()</source>
          <target state="translated">Base64.Encoder.encode()</target>
        </trans-unit>
        <trans-unit id="c10e70d301dd349aaf339cd5b73dd31dc63942fa" translate="yes" xml:space="preserve">
          <source>Base64.Encoder.encodeToString()</source>
          <target state="translated">Base64.Encoder.encodeToString()</target>
        </trans-unit>
        <trans-unit id="244910dd3ca6a8890222912ead396caf61fb84b6" translate="yes" xml:space="preserve">
          <source>Base64.Encoder.withoutPadding()</source>
          <target state="translated">Base64.Encoder.withoutPadding()</target>
        </trans-unit>
        <trans-unit id="89c21a9def023097c38c68fb1b4cfce19b4c3e0a" translate="yes" xml:space="preserve">
          <source>Base64.Encoder.wrap()</source>
          <target state="translated">Base64.Encoder.wrap()</target>
        </trans-unit>
        <trans-unit id="fb7d1736133ae6564db2c9592c7c9a289f2be35a" translate="yes" xml:space="preserve">
          <source>Base64.getDecoder()</source>
          <target state="translated">Base64.getDecoder()</target>
        </trans-unit>
        <trans-unit id="4f7e91ac37b336779cba123288a2b0f908645eef" translate="yes" xml:space="preserve">
          <source>Base64.getEncoder()</source>
          <target state="translated">Base64.getEncoder()</target>
        </trans-unit>
        <trans-unit id="1f36f20f0842ec7bef414a090cc0f92cdef4e3de" translate="yes" xml:space="preserve">
          <source>Base64.getMimeDecoder()</source>
          <target state="translated">Base64.getMimeDecoder()</target>
        </trans-unit>
        <trans-unit id="817f5aa7a1cf687c80866182424d5c6b78e2f676" translate="yes" xml:space="preserve">
          <source>Base64.getMimeEncoder()</source>
          <target state="translated">Base64.getMimeEncoder()</target>
        </trans-unit>
        <trans-unit id="8e2d019d5a53cbfca815fbc865408eb69f65afa8" translate="yes" xml:space="preserve">
          <source>Base64.getUrlDecoder()</source>
          <target state="translated">Base64.getUrlDecoder()</target>
        </trans-unit>
        <trans-unit id="9ba0128e8ecb924c8076d9516d3339d44c286d46" translate="yes" xml:space="preserve">
          <source>Base64.getUrlEncoder()</source>
          <target state="translated">Base64.getUrlEncoder()</target>
        </trans-unit>
        <trans-unit id="61cd6987ee6d9404eea8660562bfcae62b54de8f" translate="yes" xml:space="preserve">
          <source>BaseStream</source>
          <target state="translated">BaseStream</target>
        </trans-unit>
        <trans-unit id="6949af0d6bbae7bebe10c0c68e760ab8d6e2428e" translate="yes" xml:space="preserve">
          <source>BaseStream.close()</source>
          <target state="translated">BaseStream.close()</target>
        </trans-unit>
        <trans-unit id="48bcfce35d2ce4a6f122be92a7e22d519efb2ea7" translate="yes" xml:space="preserve">
          <source>BaseStream.isParallel()</source>
          <target state="translated">BaseStream.isParallel()</target>
        </trans-unit>
        <trans-unit id="0cf0fa77e63347443e48c57c03711407adcdf462" translate="yes" xml:space="preserve">
          <source>BaseStream.iterator()</source>
          <target state="translated">BaseStream.iterator()</target>
        </trans-unit>
        <trans-unit id="fa67257c20306e7633cf559ef235f98460df83a0" translate="yes" xml:space="preserve">
          <source>BaseStream.onClose()</source>
          <target state="translated">BaseStream.onClose()</target>
        </trans-unit>
        <trans-unit id="51f6d7343386125b659c1f5bebd3d195268610cb" translate="yes" xml:space="preserve">
          <source>BaseStream.parallel()</source>
          <target state="translated">BaseStream.parallel()</target>
        </trans-unit>
        <trans-unit id="cf17deed6a070a361d727b37656f72f2eecb164a" translate="yes" xml:space="preserve">
          <source>BaseStream.sequential()</source>
          <target state="translated">BaseStream.sequential()</target>
        </trans-unit>
        <trans-unit id="28793e7901d0014124f2d4e68f113de813abe083" translate="yes" xml:space="preserve">
          <source>BaseStream.spliterator()</source>
          <target state="translated">BaseStream.spliterator()</target>
        </trans-unit>
        <trans-unit id="1114de640ae1f4babada0d3462c9098825e66a5a" translate="yes" xml:space="preserve">
          <source>BaseStream.unordered()</source>
          <target state="translated">BaseStream.unordered()</target>
        </trans-unit>
        <trans-unit id="cc7bc650ee2edc878d74d035e5b9fae2fbb19f93" translate="yes" xml:space="preserve">
          <source>Basic ISO date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6727734a3b3be264c9febcfd300515e4b40fc6" translate="yes" xml:space="preserve">
          <source>Basic Multilingual Plane (BMP)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52671e6f7529cd9efafc4195e6aa9ed24267c5c5" translate="yes" xml:space="preserve">
          <source>Basic attributes associated with a file in a file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe3fda8f983dab53ccb1aa2f7a19721bae796eb" translate="yes" xml:space="preserve">
          <source>Basic constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd8e1f72224e86bef38baf6d103a3432b4769ca" translate="yes" xml:space="preserve">
          <source>Basic file attributes are attributes that are common to many file systems and consist of mandatory and optional file attributes as defined by this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265094f0a11b21110ee3d36557c997bfb5320e27" translate="yes" xml:space="preserve">
          <source>Basic thread blocking primitives for creating locks and other synchronization classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19c4356aab17d797cac0b818f2f9895befb8aa8" translate="yes" xml:space="preserve">
          <source>BasicAttribute</source>
          <target state="translated">BasicAttribute</target>
        </trans-unit>
        <trans-unit id="03015b370101d5f9717f7c301c6cf24c55943951" translate="yes" xml:space="preserve">
          <source>BasicAttribute.add()</source>
          <target state="translated">BasicAttribute.add()</target>
        </trans-unit>
        <trans-unit id="f950a96ed6d47eef985a50163169a3c87e151697" translate="yes" xml:space="preserve">
          <source>BasicAttribute.clear()</source>
          <target state="translated">BasicAttribute.clear()</target>
        </trans-unit>
        <trans-unit id="a754d3cb3a72947422cdef6984e56367cbe6527e" translate="yes" xml:space="preserve">
          <source>BasicAttribute.clone()</source>
          <target state="translated">BasicAttribute.clone()</target>
        </trans-unit>
        <trans-unit id="ef986171f865cc328c73bb6624b5b5d697640d8f" translate="yes" xml:space="preserve">
          <source>BasicAttribute.contains()</source>
          <target state="translated">BasicAttribute.contains()</target>
        </trans-unit>
        <trans-unit id="3595adf5d8ae7763456e6e42fb75c8abad4d3ba5" translate="yes" xml:space="preserve">
          <source>BasicAttribute.equals()</source>
          <target state="translated">BasicAttribute.equals()</target>
        </trans-unit>
        <trans-unit id="e1775811780b0983573294bc7ac63366719ca51a" translate="yes" xml:space="preserve">
          <source>BasicAttribute.get()</source>
          <target state="translated">BasicAttribute.get()</target>
        </trans-unit>
        <trans-unit id="b638e6d74adaada5103ccd8b8a59224cd3b8bc85" translate="yes" xml:space="preserve">
          <source>BasicAttribute.getAll()</source>
          <target state="translated">BasicAttribute.getAll()</target>
        </trans-unit>
        <trans-unit id="24b6dce03cc3147b21c377209584d4d85d784df7" translate="yes" xml:space="preserve">
          <source>BasicAttribute.getAttributeDefinition()</source>
          <target state="translated">BasicAttribute.getAttributeDefinition()</target>
        </trans-unit>
        <trans-unit id="9d4e9ef46e3eab6c3ebe82a3bd88286a75421325" translate="yes" xml:space="preserve">
          <source>BasicAttribute.getAttributeSyntaxDefinition()</source>
          <target state="translated">BasicAttribute.getAttributeSyntaxDefinition()</target>
        </trans-unit>
        <trans-unit id="0171e69812f531ef763cda5b9ecd66e201769465" translate="yes" xml:space="preserve">
          <source>BasicAttribute.getID()</source>
          <target state="translated">BasicAttribute.getID()</target>
        </trans-unit>
        <trans-unit id="60ac2aacf3ea5167ba77d29959d3215dab64623b" translate="yes" xml:space="preserve">
          <source>BasicAttribute.hashCode()</source>
          <target state="translated">BasicAttribute.hashCode()</target>
        </trans-unit>
        <trans-unit id="116a906d6ee66140685f01fc8ab5559748f1d18b" translate="yes" xml:space="preserve">
          <source>BasicAttribute.isOrdered()</source>
          <target state="translated">BasicAttribute.isOrdered()</target>
        </trans-unit>
        <trans-unit id="213c6106a0e82d4f695ff378413911a91f1e1d0c" translate="yes" xml:space="preserve">
          <source>BasicAttribute.remove()</source>
          <target state="translated">BasicAttribute.remove()</target>
        </trans-unit>
        <trans-unit id="7bb1ba4a96f527af86172ded93ec0d4298a541a2" translate="yes" xml:space="preserve">
          <source>BasicAttribute.set()</source>
          <target state="translated">BasicAttribute.set()</target>
        </trans-unit>
        <trans-unit id="abd4c48cf56c4e8e0e89094a5f28ed4f74989481" translate="yes" xml:space="preserve">
          <source>BasicAttribute.size()</source>
          <target state="translated">BasicAttribute.size()</target>
        </trans-unit>
        <trans-unit id="bf963e0898975ddd4edc6b07e90db0770a20de7b" translate="yes" xml:space="preserve">
          <source>BasicAttribute.toString()</source>
          <target state="translated">BasicAttribute.toString()</target>
        </trans-unit>
        <trans-unit id="b72da12879287b6b4d051746ab90551b436c5c99" translate="yes" xml:space="preserve">
          <source>BasicAttributes</source>
          <target state="translated">BasicAttributes</target>
        </trans-unit>
        <trans-unit id="483f2675a5c681defe70d8b974897d24f5630202" translate="yes" xml:space="preserve">
          <source>BasicAttributes is either case-sensitive or case-insensitive (case-ignore). This property is determined at the time the BasicAttributes constructor is called. In a case-insensitive BasicAttributes, the case of its attribute identifiers is ignored when searching for an attribute, or adding attributes. In a case-sensitive BasicAttributes, the case is significant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb4ecedc9ed668ea2fb58122eec0ed6f6e4983d" translate="yes" xml:space="preserve">
          <source>BasicAttributes.clone()</source>
          <target state="translated">BasicAttributes.clone()</target>
        </trans-unit>
        <trans-unit id="933ac46ddab5a4ec64537a4531f1f0587441604d" translate="yes" xml:space="preserve">
          <source>BasicAttributes.equals()</source>
          <target state="translated">BasicAttributes.equals()</target>
        </trans-unit>
        <trans-unit id="d66370566aa14cc5edb3c9d57fb5544c8cf99a4f" translate="yes" xml:space="preserve">
          <source>BasicAttributes.get()</source>
          <target state="translated">BasicAttributes.get()</target>
        </trans-unit>
        <trans-unit id="49d53aa251e46451b35abee66351d3764bf62604" translate="yes" xml:space="preserve">
          <source>BasicAttributes.getAll()</source>
          <target state="translated">BasicAttributes.getAll()</target>
        </trans-unit>
        <trans-unit id="0f54605f33034c38a2cf0daf8fd7a39e4497f263" translate="yes" xml:space="preserve">
          <source>BasicAttributes.getIDs()</source>
          <target state="translated">BasicAttributes.getIDs()</target>
        </trans-unit>
        <trans-unit id="8ae9f2438df737b60753763f65aec0a266f0fac4" translate="yes" xml:space="preserve">
          <source>BasicAttributes.hashCode()</source>
          <target state="translated">BasicAttributes.hashCode()</target>
        </trans-unit>
        <trans-unit id="d4aa64c921e33871c33fd0dbb072c70ac2230f77" translate="yes" xml:space="preserve">
          <source>BasicAttributes.isCaseIgnored()</source>
          <target state="translated">BasicAttributes.isCaseIgnored()</target>
        </trans-unit>
        <trans-unit id="1447a1c9040353537aed24b64b477d9546d2c820" translate="yes" xml:space="preserve">
          <source>BasicAttributes.put()</source>
          <target state="translated">BasicAttributes.put()</target>
        </trans-unit>
        <trans-unit id="656bca90bf0c9b620083a9f0f5038ddf5213a758" translate="yes" xml:space="preserve">
          <source>BasicAttributes.remove()</source>
          <target state="translated">BasicAttributes.remove()</target>
        </trans-unit>
        <trans-unit id="00533b68257040efff729b0fb3a1d81ad6ed0262" translate="yes" xml:space="preserve">
          <source>BasicAttributes.size()</source>
          <target state="translated">BasicAttributes.size()</target>
        </trans-unit>
        <trans-unit id="5ea4fa7044b5ea2dba2e499e94b593cd4a733519" translate="yes" xml:space="preserve">
          <source>BasicAttributes.toString()</source>
          <target state="translated">BasicAttributes.toString()</target>
        </trans-unit>
        <trans-unit id="eb88f885adaaaf403a2f6c7a1078acb8f5af6636" translate="yes" xml:space="preserve">
          <source>BasicConstraints</source>
          <target state="translated">BasicConstraints</target>
        </trans-unit>
        <trans-unit id="9aef8c83632c0e5f6494e312f26a4c876624c619" translate="yes" xml:space="preserve">
          <source>BasicControl</source>
          <target state="translated">BasicControl</target>
        </trans-unit>
        <trans-unit id="d7be1f3d7ea2b0123f26a29c1bcfd496f2e5442a" translate="yes" xml:space="preserve">
          <source>BasicControl.getEncodedValue()</source>
          <target state="translated">BasicControl.getEncodedValue()</target>
        </trans-unit>
        <trans-unit id="db57c72ebba785af4526d9d4f922553171829111" translate="yes" xml:space="preserve">
          <source>BasicControl.getID()</source>
          <target state="translated">BasicControl.getID()</target>
        </trans-unit>
        <trans-unit id="e7a5d64ca09c1af8ee155e7c141edf5ddf729147" translate="yes" xml:space="preserve">
          <source>BasicControl.isCritical()</source>
          <target state="translated">BasicControl.isCritical()</target>
        </trans-unit>
        <trans-unit id="d6cab7be681fd837b3e7e1cea467a70388f24f7a" translate="yes" xml:space="preserve">
          <source>BasicFileAttributeView</source>
          <target state="translated">BasicFileAttributeView</target>
        </trans-unit>
        <trans-unit id="d5ee551ba520b744be486dac77fa9abca4c2813f" translate="yes" xml:space="preserve">
          <source>BasicFileAttributeView.name()</source>
          <target state="translated">BasicFileAttributeView.name()</target>
        </trans-unit>
        <trans-unit id="b3d04865b8837642cdf9982a4f297ef63b504a05" translate="yes" xml:space="preserve">
          <source>BasicFileAttributeView.readAttributes()</source>
          <target state="translated">BasicFileAttributeView.readAttributes()</target>
        </trans-unit>
        <trans-unit id="c7c6ca4d680bfeec32a2d71d5df0680849faa366" translate="yes" xml:space="preserve">
          <source>BasicFileAttributeView.setTimes()</source>
          <target state="translated">BasicFileAttributeView.setTimes()</target>
        </trans-unit>
        <trans-unit id="e16cf182b4e826095060f24a95ddee49959afd00" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes</source>
          <target state="translated">BasicFileAttributes</target>
        </trans-unit>
        <trans-unit id="5edab6d700ce4b189e65f8cd46071ec4b87e6bc5" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.creationTime()</source>
          <target state="translated">BasicFileAttributes.creationTime()</target>
        </trans-unit>
        <trans-unit id="91003b38c8b9cbc87ba4dbec31c903422d741bae" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.fileKey()</source>
          <target state="translated">BasicFileAttributes.fileKey()</target>
        </trans-unit>
        <trans-unit id="87e33f37d1063880efe407e1e34b5918d5ca8bc4" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.isDirectory()</source>
          <target state="translated">BasicFileAttributes.isDirectory()</target>
        </trans-unit>
        <trans-unit id="9da5d4a929d73c9b0d59f9402c2ccb18dc1b4f6b" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.isOther()</source>
          <target state="translated">BasicFileAttributes.isOther()</target>
        </trans-unit>
        <trans-unit id="1b6b9fd30281d61b1f5b1d7870ec97bc1f1a1eac" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.isRegularFile()</source>
          <target state="translated">BasicFileAttributes.isRegularFile()</target>
        </trans-unit>
        <trans-unit id="b23dc4043c2ddad5511d27d5ce4a4d2c7d8a281d" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.isSymbolicLink()</source>
          <target state="translated">BasicFileAttributes.isSymbolicLink()</target>
        </trans-unit>
        <trans-unit id="7abbb976f7a5756ba5ddd067fea74e8e11e1350b" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.lastAccessTime()</source>
          <target state="translated">BasicFileAttributes.lastAccessTime()</target>
        </trans-unit>
        <trans-unit id="a17dd1210d7444f3b9e5af5dded59fdaab1b0c5b" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.lastModifiedTime()</source>
          <target state="translated">BasicFileAttributes.lastModifiedTime()</target>
        </trans-unit>
        <trans-unit id="96806d6646a05494b1d20c07a50894ac3bfe7187" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.size()</source>
          <target state="translated">BasicFileAttributes.size()</target>
        </trans-unit>
        <trans-unit id="51cb9b96687d61c164a8378361270a5209cc8c54" translate="yes" xml:space="preserve">
          <source>BasicPermission</source>
          <target state="translated">BasicPermission</target>
        </trans-unit>
        <trans-unit id="310cba51546be2bf910b6958bb45679306a56782" translate="yes" xml:space="preserve">
          <source>BasicPermission objects must be stored in a manner that allows them to be inserted in any order, but that also enables the PermissionCollection &lt;code&gt;implies&lt;/code&gt; method to be implemented in an efficient (and consistent) manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a03b5535c7a044296e751b0610b132635d308d" translate="yes" xml:space="preserve">
          <source>BasicPermission.equals()</source>
          <target state="translated">BasicPermission.equals()</target>
        </trans-unit>
        <trans-unit id="dde952aa0a247448351d7ca970b35c16c2b279ca" translate="yes" xml:space="preserve">
          <source>BasicPermission.getActions()</source>
          <target state="translated">BasicPermission.getActions()</target>
        </trans-unit>
        <trans-unit id="3ec5c1dd07c504816208fb0e18a0861a9fec75f6" translate="yes" xml:space="preserve">
          <source>BasicPermission.hashCode()</source>
          <target state="translated">BasicPermission.hashCode()</target>
        </trans-unit>
        <trans-unit id="d1f3ddd34769068bb8e8ddfc5f11b9bd4541ade2" translate="yes" xml:space="preserve">
          <source>BasicPermission.implies()</source>
          <target state="translated">BasicPermission.implies()</target>
        </trans-unit>
        <trans-unit id="2ec016717f2c8b1fa7e7f298313112fa42570843" translate="yes" xml:space="preserve">
          <source>BasicPermission.newPermissionCollection()</source>
          <target state="translated">BasicPermission.newPermissionCollection()</target>
        </trans-unit>
        <trans-unit id="90857b5f0f23879f3d2af52f0f6afcc16c794f36" translate="yes" xml:space="preserve">
          <source>Basically, tests if a method from a class defined using a class loader is on the execution stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dee6baa2f134a80800f091a0f6ce68dd230d8c7" translate="yes" xml:space="preserve">
          <source>Be *very* careful in your use of the &quot;privileged&quot; construct, and always remember to make the privileged code section as small as possible. You can pass &lt;code&gt;Permission&lt;/code&gt; arguments to further limit the scope of the &quot;privilege&quot; (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3db4c886be573c347b34969f298e73aea21e787" translate="yes" xml:space="preserve">
          <source>Be aware that if a ClassLoader in the ClassLoaderRepository calls this method from its &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method, it exposes itself to a deadlock if another ClassLoader in the ClassLoaderRepository does the same thing at the same time. The &lt;a href=&quot;classloaderrepository#loadClassBefore-java.lang.ClassLoader-java.lang.String-&quot;&gt;&lt;code&gt;loadClassBefore(java.lang.ClassLoader, java.lang.String)&lt;/code&gt;&lt;/a&gt; method is recommended to avoid the risk of deadlock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc9d7eb00aec0e9eb430e9c34d797229abeedd8" translate="yes" xml:space="preserve">
          <source>Be careful when granting FilePermissions. Think about the implications of granting read and especially write access to various files and directories. The &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; permission with write action is especially dangerous. This grants permission to write to the entire file system. One thing this effectively allows is replacement of the system binary, including the JVM runtime environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1035dc2185c003c3e41e55e751b3076a27c43aa1" translate="yes" xml:space="preserve">
          <source>BeanContext</source>
          <target state="translated">BeanContext</target>
        </trans-unit>
        <trans-unit id="fd2967cdd3549dcec66779102a936617524bcc77" translate="yes" xml:space="preserve">
          <source>BeanContext.addBeanContextMembershipListener()</source>
          <target state="translated">BeanContext.addBeanContextMembershipListener()</target>
        </trans-unit>
        <trans-unit id="3302d9e0ddb6c2327a4b4b9fdf83b9f65c255ec6" translate="yes" xml:space="preserve">
          <source>BeanContext.getResource()</source>
          <target state="translated">BeanContext.getResource()</target>
        </trans-unit>
        <trans-unit id="5c8009de0f76f6f6e3ffeef6b9ee18246788d3e6" translate="yes" xml:space="preserve">
          <source>BeanContext.getResourceAsStream()</source>
          <target state="translated">BeanContext.getResourceAsStream()</target>
        </trans-unit>
        <trans-unit id="73cc28569f6a864314e95e55639957b5a523f718" translate="yes" xml:space="preserve">
          <source>BeanContext.instantiateChild()</source>
          <target state="translated">BeanContext.instantiateChild()</target>
        </trans-unit>
        <trans-unit id="828cf5921264cba2a4a5f8f605eb4b8fbfdd946c" translate="yes" xml:space="preserve">
          <source>BeanContext.removeBeanContextMembershipListener()</source>
          <target state="translated">BeanContext.removeBeanContextMembershipListener()</target>
        </trans-unit>
        <trans-unit id="0c96018c78bce1c1b4d13c81e2dbdaa092fd6497" translate="yes" xml:space="preserve">
          <source>BeanContextChild</source>
          <target state="translated">BeanContextChild</target>
        </trans-unit>
        <trans-unit id="0311f80e4c6a36512a30729d47cb531c4b1dcec1" translate="yes" xml:space="preserve">
          <source>BeanContextChild.addPropertyChangeListener()</source>
          <target state="translated">BeanContextChild.addPropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="b443e4dbf67f926e123679dac8746788c81ef71e" translate="yes" xml:space="preserve">
          <source>BeanContextChild.addVetoableChangeListener()</source>
          <target state="translated">BeanContextChild.addVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="446975a774283316058bd6383390fb4a6e58be65" translate="yes" xml:space="preserve">
          <source>BeanContextChild.getBeanContext()</source>
          <target state="translated">BeanContextChild.getBeanContext()</target>
        </trans-unit>
        <trans-unit id="501d498efa235f4084665fb80f6fa3f07efe8895" translate="yes" xml:space="preserve">
          <source>BeanContextChild.removePropertyChangeListener()</source>
          <target state="translated">BeanContextChild.removePropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="fb55a1d88e47fdc1d2b7e473f724128bd97a8058" translate="yes" xml:space="preserve">
          <source>BeanContextChild.removeVetoableChangeListener()</source>
          <target state="translated">BeanContextChild.removeVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="0e754a0be4390c222d5fc301ec04320f01bd8968" translate="yes" xml:space="preserve">
          <source>BeanContextChild.setBeanContext()</source>
          <target state="translated">BeanContextChild.setBeanContext()</target>
        </trans-unit>
        <trans-unit id="d3d055f9b15a1b44db58caf1c0276c4e5c87911b" translate="yes" xml:space="preserve">
          <source>BeanContextChildComponentProxy</source>
          <target state="translated">BeanContextChildComponentProxy</target>
        </trans-unit>
        <trans-unit id="a5448051ba0e5b33961e8cc4e24971b1ef4bfd29" translate="yes" xml:space="preserve">
          <source>BeanContextChildComponentProxy.getComponent()</source>
          <target state="translated">BeanContextChildComponentProxy.getComponent()</target>
        </trans-unit>
        <trans-unit id="99de42bd712f63bb80091f370cbe825e44053d43" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport</source>
          <target state="translated">BeanContextChildSupport</target>
        </trans-unit>
        <trans-unit id="95d04d3d647033fff27c89ce04b32019372c7d4c" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.addPropertyChangeListener()</source>
          <target state="translated">BeanContextChildSupport.addPropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="4188957505f3c0b7b280ecafb56b6e6295cc2397" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.addVetoableChangeListener()</source>
          <target state="translated">BeanContextChildSupport.addVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="cc07aa35d387cd5b7b4c6e451757598f798efca2" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.firePropertyChange()</source>
          <target state="translated">BeanContextChildSupport.firePropertyChange()</target>
        </trans-unit>
        <trans-unit id="55ea548cc400d51cc07272fa9fd6dbae0b81afcb" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.fireVetoableChange()</source>
          <target state="translated">BeanContextChildSupport.fireVetoableChange()</target>
        </trans-unit>
        <trans-unit id="824b2b29162d08a2a3d0831a1c79c215c117204e" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.getBeanContext()</source>
          <target state="translated">BeanContextChildSupport.getBeanContext()</target>
        </trans-unit>
        <trans-unit id="8b70112d2faefbf3f875e4f58f1dce9ef7d20908" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.getBeanContextChildPeer()</source>
          <target state="translated">BeanContextChildSupport.getBeanContextChildPeer()</target>
        </trans-unit>
        <trans-unit id="912ab1e9facf096d1eb0e2923a2d63285f542d8f" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.initializeBeanContextResources()</source>
          <target state="translated">BeanContextChildSupport.initializeBeanContextResources()</target>
        </trans-unit>
        <trans-unit id="f3a3ae29f8f36f87d6af3734343d6da2c1712918" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.isDelegated()</source>
          <target state="translated">BeanContextChildSupport.isDelegated()</target>
        </trans-unit>
        <trans-unit id="827108e52200a547a316b3e4525c63eef7863c00" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.releaseBeanContextResources()</source>
          <target state="translated">BeanContextChildSupport.releaseBeanContextResources()</target>
        </trans-unit>
        <trans-unit id="404b4cc5b097075207fe1174557546d46e18dafb" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.removePropertyChangeListener()</source>
          <target state="translated">BeanContextChildSupport.removePropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="a9da19dc7f6656a111da038805de5a529dc9736c" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.removeVetoableChangeListener()</source>
          <target state="translated">BeanContextChildSupport.removeVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="4eb573c3eef2e2e8cbf5d9f515f89d5b2de7b71e" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.serviceAvailable()</source>
          <target state="translated">BeanContextChildSupport.serviceAvailable()</target>
        </trans-unit>
        <trans-unit id="6e092db548897c6fd7bf8a5e91dd421d447c6bee" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.serviceRevoked()</source>
          <target state="translated">BeanContextChildSupport.serviceRevoked()</target>
        </trans-unit>
        <trans-unit id="ebe8016d4100481e4780298c1d5ab27700a336e3" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.setBeanContext()</source>
          <target state="translated">BeanContextChildSupport.setBeanContext()</target>
        </trans-unit>
        <trans-unit id="55d123fb385131eea57da4f0c7b2f0e744e2ae93" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.validatePendingSetBeanContext()</source>
          <target state="translated">BeanContextChildSupport.validatePendingSetBeanContext()</target>
        </trans-unit>
        <trans-unit id="deeafcea830d355d7ff69390ad54bed10ab722bf" translate="yes" xml:space="preserve">
          <source>BeanContextContainerProxy</source>
          <target state="translated">BeanContextContainerProxy</target>
        </trans-unit>
        <trans-unit id="5015a2992fa1ee31dd2029ffbd2a9843850bcba5" translate="yes" xml:space="preserve">
          <source>BeanContextContainerProxy.getContainer()</source>
          <target state="translated">BeanContextContainerProxy.getContainer()</target>
        </trans-unit>
        <trans-unit id="297018be5cf90fcca4f11a3da51c607faceae648" translate="yes" xml:space="preserve">
          <source>BeanContextEvent</source>
          <target state="translated">BeanContextEvent</target>
        </trans-unit>
        <trans-unit id="5e2a1ae643d5820060d8b2dd99c74256e51f965c" translate="yes" xml:space="preserve">
          <source>BeanContextEvent.getBeanContext()</source>
          <target state="translated">BeanContextEvent.getBeanContext()</target>
        </trans-unit>
        <trans-unit id="c692f4199f3bd12452a0938e121c5448c9757788" translate="yes" xml:space="preserve">
          <source>BeanContextEvent.getPropagatedFrom()</source>
          <target state="translated">BeanContextEvent.getPropagatedFrom()</target>
        </trans-unit>
        <trans-unit id="b3647850719fcea6967c24cd0b59c43c5467fced" translate="yes" xml:space="preserve">
          <source>BeanContextEvent.isPropagated()</source>
          <target state="translated">BeanContextEvent.isPropagated()</target>
        </trans-unit>
        <trans-unit id="087fca3c3a71e10fe7e4b0dbcd6f31549211b5d7" translate="yes" xml:space="preserve">
          <source>BeanContextEvent.setPropagatedFrom()</source>
          <target state="translated">BeanContextEvent.setPropagatedFrom()</target>
        </trans-unit>
        <trans-unit id="f06c2ea76c6cad3f6665cf6d5cbc65b9eac9998d" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipEvent</source>
          <target state="translated">BeanContextMembershipEvent</target>
        </trans-unit>
        <trans-unit id="7fc83f34d41ae613e06ba60c6c81a497f0d89b8d" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipEvent.contains()</source>
          <target state="translated">BeanContextMembershipEvent.contains()</target>
        </trans-unit>
        <trans-unit id="d22d8f4d43c16211d4939f04c8ccb26bc2bd817c" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipEvent.iterator()</source>
          <target state="translated">BeanContextMembershipEvent.iterator()</target>
        </trans-unit>
        <trans-unit id="0e9b579457289c5ebb4a55ee09e20e2441f4eb9b" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipEvent.size()</source>
          <target state="translated">BeanContextMembershipEvent.size()</target>
        </trans-unit>
        <trans-unit id="9bb6f5b135fa64344784a9ae56179be284129a08" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipEvent.toArray()</source>
          <target state="translated">BeanContextMembershipEvent.toArray()</target>
        </trans-unit>
        <trans-unit id="a212c4aee8b5a05cc9452e328c7501f4088d4ee1" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipListener</source>
          <target state="translated">BeanContextMembershipListener</target>
        </trans-unit>
        <trans-unit id="f096244c0f562bafe5bf0e11cb5f0b5168cdd1dc" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipListener.childrenAdded()</source>
          <target state="translated">BeanContextMembershipListener.childrenAdded()</target>
        </trans-unit>
        <trans-unit id="1246c139883b8868b3db4785237c43f75c4142e9" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipListener.childrenRemoved()</source>
          <target state="translated">BeanContextMembershipListener.childrenRemoved()</target>
        </trans-unit>
        <trans-unit id="3eef644e395551a4fbac85f22882727f37181d49" translate="yes" xml:space="preserve">
          <source>BeanContextProxy</source>
          <target state="translated">BeanContextProxy</target>
        </trans-unit>
        <trans-unit id="329223fc27ae1d3a8555d8bb9880d0e2e72d4871" translate="yes" xml:space="preserve">
          <source>BeanContextProxy.getBeanContextProxy()</source>
          <target state="translated">BeanContextProxy.getBeanContextProxy()</target>
        </trans-unit>
        <trans-unit id="2a1a3dafc3db6cfe2b6886a8f561dbee5162fc0d" translate="yes" xml:space="preserve">
          <source>BeanContextServiceAvailableEvent</source>
          <target state="translated">BeanContextServiceAvailableEvent</target>
        </trans-unit>
        <trans-unit id="b2bf8e52971c5c2205241bb3c08938d87ad723aa" translate="yes" xml:space="preserve">
          <source>BeanContextServiceAvailableEvent.getCurrentServiceSelectors()</source>
          <target state="translated">BeanContextServiceAvailableEvent.getCurrentServiceSelectors()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
