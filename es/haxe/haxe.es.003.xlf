<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="haxe">
    <body>
      <group id="haxe">
        <trans-unit id="79d4270dbe8f1054f70d00dc00aeec7e70230753" translate="yes" xml:space="preserve">
          <source>The general runtime type information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5477604c5e73f4cf1e3141d1029764f52d81568" translate="yes" xml:space="preserve">
          <source>The generated name is an implementation detail and should not be relied upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c71e43109222f6e47f059494ae3c99f62647de" translate="yes" xml:space="preserve">
          <source>The implementation class of the abstract, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535cf539bd22ec409949f430e1c6c857d65f4199" translate="yes" xml:space="preserve">
          <source>The implemented interfaces and their type parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3207e26d3d01eab37cc7493bf943dd4ba0d9353d" translate="yes" xml:space="preserve">
          <source>The index &lt;code&gt;n&lt;/code&gt; corresponds to the n-th set of parentheses in the pattern of &lt;code&gt;this&lt;/code&gt; EReg. If no such sub-group exists, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733d8fd642c28707705a88cc5d48a8893efbb71a" translate="yes" xml:space="preserve">
          <source>The index of the enum constructor, i.e. in which position it appears in the syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029abef2b12a92956e4bb40ff87e82b4e9f97037" translate="yes" xml:space="preserve">
          <source>The individual &lt;code&gt;types&lt;/code&gt; can reference each other and any identifier respects the &lt;code&gt;imports&lt;/code&gt; and &lt;code&gt;usings&lt;/code&gt; as usual, expect that imports are not allowed to have &lt;code&gt;.*&lt;/code&gt; wildcards or &lt;code&gt;in s&lt;/code&gt; shorthands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19127d38c1cf26a3b7badf31df96e6dfb6d4fbcf" translate="yes" xml:space="preserve">
          <source>The individual cache setting for &lt;code&gt;this&lt;/code&gt; Serializer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e484922f2adc7b170c48f96ee69e2dd7b8f1b924" translate="yes" xml:space="preserve">
          <source>The individual elements are not duplicated and retain their identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b13e1036ae02c700a2939aa45c6b244a3572bb" translate="yes" xml:space="preserve">
          <source>The individual enum index setting for &lt;code&gt;this&lt;/code&gt; Serializer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4128faf7af403e5bcef679b827d7377c8079a6" translate="yes" xml:space="preserve">
          <source>The information that all types (&lt;code&gt;&lt;a href=&quot;classtype#ClassType&quot;&gt;ClassType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;enumtype#EnumType&quot;&gt;EnumType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;deftype#DefType&quot;&gt;DefType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;abstracttype#AbstractType&quot;&gt;AbstractType&lt;/a&gt;&lt;/code&gt;) have in common.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de0c2264459ecc7421afacb0767933dbb6ae9e2" translate="yes" xml:space="preserve">
          <source>The inner PCDATA or CDATA of the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a56ad88457359bbe2f05b2a3297b67d0a78ce0d" translate="yes" xml:space="preserve">
          <source>The intended usage is to bind it to a custom function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6af3bc4f201dd4ca4bc9c195877a46fc256a74" translate="yes" xml:space="preserve">
          <source>The intended usage is to create an instance of the Timer class with a given interval, set its run() method to a custom function to be invoked and eventually call stop() to stop the Timer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29be66df4dc4b34fe996599025af21f3f29c133b" translate="yes" xml:space="preserve">
          <source>The keys are considered to be weak references on static targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa646f1577fccf0b4a5f0b456fa12235842ad2f" translate="yes" xml:space="preserve">
          <source>The keys of the returned map are the variable names, the values are their types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbfb8ccb520fd7f85895c1497294b28b638a0b5" translate="yes" xml:space="preserve">
          <source>The kind of the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9d84313ba7ced153700765addddc2c7aa55c37" translate="yes" xml:space="preserve">
          <source>The kind of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5fa62e1341352b4baad73052c0fc57c71a0096" translate="yes" xml:space="preserve">
          <source>The kind of the type definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0297b018588f8c800635bf072a5d7f21e737035" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a9254762e53a32c11e5b46d7b39fe8bfda8fc9" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0d6770b7799358f407959d3eb1e9e858e38592" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;this&lt;/code&gt; StringBuf in characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0db95f8917abe015336018854026613818aa850" translate="yes" xml:space="preserve">
          <source>The length of the buffer in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641c8398d6587f25fc2d391b7f164ebef28556b8" translate="yes" xml:space="preserve">
          <source>The length of the returned Array is equal to the new length of &lt;code&gt;this&lt;/code&gt; Array subtracted from the original length of &lt;code&gt;this&lt;/code&gt; Array. In other words, each element of the original &lt;code&gt;this&lt;/code&gt; Array either remains in &lt;code&gt;this&lt;/code&gt; Array or becomes an element of the returned Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfc02c2f39838b1847a840cb81f048c22933d94" translate="yes" xml:space="preserve">
          <source>The length of the returned Array is equal to the sum of &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;a.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f112efcb5c0db7e3c3fb0af40e1586e66e879182" translate="yes" xml:space="preserve">
          <source>The length of the stream in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80756e6910c8ea018c3e3ee5e541e9a1c2ae2906" translate="yes" xml:space="preserve">
          <source>The line number where the field is defined. This information is only available if the field has an expression. Otherwise the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe2db0fb75d393cd88588eae831e3b7aa2b6cd3" translate="yes" xml:space="preserve">
          <source>The list of all sub-elements which are the nodes with type &lt;code&gt;&lt;a href=&quot;../../xml#Element&quot;&gt;Xml.Element&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5e1e984c16e04448fd23c5fe971bcf3fd5c48b" translate="yes" xml:space="preserve">
          <source>The list of arguments the constructor has or &lt;code&gt;null&lt;/code&gt; if no arguments are available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d349618f13f9ee0327e04d18b88a8a5af8787c3" translate="yes" xml:space="preserve">
          <source>The list of available overloads for the fields or &lt;code&gt;null&lt;/code&gt; if no overloads exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d5c5f8b6cc6dc0acb923af6b4d109f07d11dd1" translate="yes" xml:space="preserve">
          <source>The list of enum constructors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18212e7b866f4524d18db6a5d6936e5bd98cc8cc" translate="yes" xml:space="preserve">
          <source>The list of fields that have override status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5c5d8201c42b04e95279a5fca035fe7d95e302" translate="yes" xml:space="preserve">
          <source>The list of interfaces defined by their type path and list of type parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23125fca446c2046383aa55efab069de99292c0a" translate="yes" xml:space="preserve">
          <source>The list of member &lt;a href=&quot;https://haxe.org/manual/class-field.html&quot;&gt;class fields&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db1fbbd8967966a9e2e978fc9d283b9f08d93f2" translate="yes" xml:space="preserve">
          <source>The list of parameters types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbe4bf209091b95812fada8758469ddff30833b" translate="yes" xml:space="preserve">
          <source>The list of runtime metadata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f16070baf511dad690276b1ec365c31565a088" translate="yes" xml:space="preserve">
          <source>The list of static class fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f8920cf74b2db295e76b11b2a84ddc5e126c1a" translate="yes" xml:space="preserve">
          <source>The member fields of the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9271bb119e6547e7b49540d641977a92a69b51e" translate="yes" xml:space="preserve">
          <source>The meta data the constructor was annotated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c282c3ed204b37068803f2d14560627ab87a4d16" translate="yes" xml:space="preserve">
          <source>The meta data the field was annotated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e62cfbc4b6104c4fe26839e7de79340fdd12ae" translate="yes" xml:space="preserve">
          <source>The metadata of the class field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d0df0eb4a0f8c7803e56e927090e7346c40ca2" translate="yes" xml:space="preserve">
          <source>The metadata of the enum constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fe15dddd49de7f8314e26f51a2ddf4ac699075" translate="yes" xml:space="preserve">
          <source>The metadata of the function argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bd6aaaf0aa75b7fcce8ee3eaed13e058ad5484" translate="yes" xml:space="preserve">
          <source>The metadata of the type parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43bcc6985dc296531a44c8c626dfdab5432f2546" translate="yes" xml:space="preserve">
          <source>The metadata of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcebcd037d6384a31f268c91bda717920e19c806" translate="yes" xml:space="preserve">
          <source>The metadata of the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10387a03bcb1ccf9576d13bf0eecf2e37c9da6c1" translate="yes" xml:space="preserve">
          <source>The method name of the unit test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091fafd3c178e60d4876c512c8e6ad9d03342cff" translate="yes" xml:space="preserve">
          <source>The method used for resolving unknown field access, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e143d19f9d2410dc54311c4f18a9d32fd44a5392" translate="yes" xml:space="preserve">
          <source>The mode of the import expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b326fad6d2acb336f379dd8922428b05bd436c8" translate="yes" xml:space="preserve">
          <source>The module name of the type, which might be different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff787b56a421d4cf69aee32a804515556b220cd" translate="yes" xml:space="preserve">
          <source>The name of the catch variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc1e2ed86710397e5aa5e558eec1b9186ec4866" translate="yes" xml:space="preserve">
          <source>The name of the class field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a289cfe5963a5570920181dbc7431a8529816d3" translate="yes" xml:space="preserve">
          <source>The name of the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c291519507b7a4b0c2576631904ed538b51fca" translate="yes" xml:space="preserve">
          <source>The name of the current element. This is the same as &lt;code&gt;&lt;a href=&quot;../../xml#nodeName&quot;&gt;Xml.nodeName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d1e8fa03ad94c351414bcac7f914fe0480fe24" translate="yes" xml:space="preserve">
          <source>The name of the enum constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603c0a5d2c15b9cea557f9daa63c49955d94d328" translate="yes" xml:space="preserve">
          <source>The name of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4224784d5c3a1b437b9210ff6c915596d8794c" translate="yes" xml:space="preserve">
          <source>The name of the function argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199b6ba70a9dc7ba92f4b749d2b80a7a3e927638" translate="yes" xml:space="preserve">
          <source>The name of the metadata entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d12a9f186497ec8ab7ba108f95e2cf7d1902ef" translate="yes" xml:space="preserve">
          <source>The name of the type definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04d7acc23cb7f1c3edd70910118e5bac0a58836" translate="yes" xml:space="preserve">
          <source>The name of the type parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee01b2a46df67ca1813e8ebd9683c9563b5a32e" translate="yes" xml:space="preserve">
          <source>The name of the type path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006863f5e94e06237f4603476e3ecce5078ae3ee" translate="yes" xml:space="preserve">
          <source>The name of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5c171e470acee77d3e646d7c9294e8b30feb42" translate="yes" xml:space="preserve">
          <source>The name of the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae71a48432d1fc191f1f2f0fe7976ef722933cc" translate="yes" xml:space="preserve">
          <source>The number of characters in &lt;code&gt;this&lt;/code&gt; String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced3dbe5d6ea0bf28b15d4cb208fbcbc9d8eae89" translate="yes" xml:space="preserve">
          <source>The offset is calculated like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033f2218e097d05a444bf281866f7e7c4fb0bba3" translate="yes" xml:space="preserve">
          <source>The optional constraints of the type parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3676acd9da1d63396da624ef57cc388acd43371" translate="yes" xml:space="preserve">
          <source>The optional guard expressions of the case, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e8504fd003149cf51bd88894671fdec5c5ef91" translate="yes" xml:space="preserve">
          <source>The optional metadata of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef06a91ae1f37dcb9e2a440608a4e40ec91146f6" translate="yes" xml:space="preserve">
          <source>The optional metadata of the type definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29eca9f349f9b1932a87196f3e565eec408342e3" translate="yes" xml:space="preserve">
          <source>The optional parameters of the metadata entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734ad047566231373724b914efc65a73f6f0d4f9" translate="yes" xml:space="preserve">
          <source>The optional parameters of the type parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fa63196c452e8d727d2b03c499cf88404e1195" translate="yes" xml:space="preserve">
          <source>The optional value of the function argument, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe5a7980d2360f5529649fb000c0220bf02961a" translate="yes" xml:space="preserve">
          <source>The order of elements is preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404ece50d31fbb87ec3d1c8e06b169bf658e5a1b" translate="yes" xml:space="preserve">
          <source>The order of keys is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd7bde21cf6efbf5df4511a0312d1e125f06d8d" translate="yes" xml:space="preserve">
          <source>The order of the constructor names in the returned Array is preserved from the original syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c14cce49c25a82da90a54386e66fa02201244e" translate="yes" xml:space="preserve">
          <source>The order of the fields in the returned Array is unspecified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3845e9d9eaf3a9eeacc6da56e61f2d93454464" translate="yes" xml:space="preserve">
          <source>The order of values is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9361c7b02e7a3d9173e7a10cbf91b4208062c86a" translate="yes" xml:space="preserve">
          <source>The overload fields of the class field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcda8584191851fd5c08a7410db1954eaaa50500" translate="yes" xml:space="preserve">
          <source>The package of the type definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa65277e83d8223f39f18743ff6b383751579e1" translate="yes" xml:space="preserve">
          <source>The package of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07aed11053323d8c68dee74dd147e8751ffd4265" translate="yes" xml:space="preserve">
          <source>The parameter type declarations of the type definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95638ca48aded620e5d5b5016120d4b0e91188c8" translate="yes" xml:space="preserve">
          <source>The parent class and its type parameters, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f12cc7396b2300717e1ec0b0d99449a2256a7c9" translate="yes" xml:space="preserve">
          <source>The parsing rules for &lt;code&gt;parseInt&lt;/code&gt; apply here as well, with the exception of invalid input resulting in a &lt;code&gt;NaN&lt;/code&gt; value instead of null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1ce3892f9edf3fb9fda839c5ce25fb43f173c0" translate="yes" xml:space="preserve">
          <source>The path of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f58989f07ed48f1c2005bfa98f1624cd145bf5b" translate="yes" xml:space="preserve">
          <source>The path to the import expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feba8269f75d6e6d27ce6bade48750e778f1bc55" translate="yes" xml:space="preserve">
          <source>The position information of the unit test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734fa4cb4ce24c9ec9a345e5aa8051478e3c829f" translate="yes" xml:space="preserve">
          <source>The position of the class field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c431b0977914bd68fbfa0e9cc6592b12f467c081" translate="yes" xml:space="preserve">
          <source>The position of the enum constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac5eb2507c7b0deb3e3d77f77a96b0a7640f9b8" translate="yes" xml:space="preserve">
          <source>The position of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73230f81b7067187fb817dbc2bad02fcf977d8ae" translate="yes" xml:space="preserve">
          <source>The position of the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec40a6ef5ea16ed96c5a98337c90d7f98b176062" translate="yes" xml:space="preserve">
          <source>The position of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2072656054b0d7528d2549c4cce4199d182f7342" translate="yes" xml:space="preserve">
          <source>The position of the metadata entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aedb8c6f4c01aee3b3f5a84ecb12db5710ab79b" translate="yes" xml:space="preserve">
          <source>The position of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd335e23e658f177fd282b4b62d3d98faa877ae9" translate="yes" xml:space="preserve">
          <source>The position to the type definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488bef4f573ad1c8ca5ae907d453eb5bd9922f16" translate="yes" xml:space="preserve">
          <source>The possible IO errors that can occur</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a418238cdcef03380043e5df9cef237d55fecd" translate="yes" xml:space="preserve">
          <source>The provided &lt;code&gt;&lt;a href=&quot;position#Position&quot;&gt;Position&lt;/a&gt;&lt;/code&gt;&lt;code&gt;pos&lt;/code&gt; is used for all generated inner AST nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f725a1c2fde14ebda42a6e230d79a8878274992" translate="yes" xml:space="preserve">
          <source>The replacements follow:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d933258bb32d55733627be8e39efd1312e0698" translate="yes" xml:space="preserve">
          <source>The representation of the stack exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64d16d58cd764f82202d8c8e12b98db5068dac2" translate="yes" xml:space="preserve">
          <source>The resolution follows the usual class path rules where the last declared class path has priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf99a04f0339af5f6f818d8d215acb7bc04bb5ea" translate="yes" xml:space="preserve">
          <source>The resource is then available using the &lt;code&gt;&lt;a href=&quot;../resource#Resource&quot;&gt;haxe.macro.Resource&lt;/a&gt;&lt;/code&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b1ba19282aecb23c861b4406ec7186ce9db263" translate="yes" xml:space="preserve">
          <source>The result String does not contain any constructor arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1053ad930408238d17baa3f09eb4facc039c7a" translate="yes" xml:space="preserve">
          <source>The result corresponds to the type &lt;code&gt;v&lt;/code&gt; has at runtime, which may vary per platform. Assumptions regarding this should be minimized to avoid surprises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ecba669eea18d7d51b885042a11acfd93ecd2f" translate="yes" xml:space="preserve">
          <source>The result does not include the matched part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cfdc8e4f24c8f4bbe8a112a06f4252b1951bac" translate="yes" xml:space="preserve">
          <source>The result is enclosed in { } with the individual elements being separated by a comma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b1406efda6250f355316e307c8e858b42e435b" translate="yes" xml:space="preserve">
          <source>The result is guaranteed to be valid Haxe code, but there may be differences from the original lexical syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67513b200dc97957b8399515a96b75f4031a329" translate="yes" xml:space="preserve">
          <source>The result is true if &lt;code&gt;v&lt;/code&gt; is of type EnumValue, i.e. an enum constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d696f64cc2efe18df233537dc719b261186b9071" translate="yes" xml:space="preserve">
          <source>The result is true if &lt;code&gt;v&lt;/code&gt; is one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ba31076026aca7ea22470c099cab466d0e0a7d" translate="yes" xml:space="preserve">
          <source>The result of this operation is equal to &lt;code&gt;&lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[0]) + sep + &lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[1]) + sep + ... + sep + &lt;a href=&quot;../../std#string&quot;&gt;Std.string&lt;/a&gt;(this[this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;-1])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ff2e8674bca759ed2a588546559242f1dc8cd7" translate="yes" xml:space="preserve">
          <source>The result of this operation is equal to &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[0]) + sep + &lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[1]) + sep + ... + sep + &lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;(this[this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;-1])&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3015ddb32c9de6a975e6dde639c0cf5a53cb0ceb" translate="yes" xml:space="preserve">
          <source>The result will include the individual elements' String representations separated by comma. The enclosing [ ] may be missing on some platforms, use &lt;code&gt;&lt;a href=&quot;std#string&quot;&gt;Std.string&lt;/a&gt;()&lt;/code&gt; to get a String representation that is consistent across platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae8d014577b6b1c1287a75b507fce287cf149f5" translate="yes" xml:space="preserve">
          <source>The results are unspecified if &lt;code&gt;length&lt;/code&gt; results in out-of-bounds access, or if &lt;code&gt;src&lt;/code&gt; or &lt;code&gt;dest&lt;/code&gt; are null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7705addba1dd448a489800874655b3cde1b21ea" translate="yes" xml:space="preserve">
          <source>The return type of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e18ef7268908f503c9f300bd27587c170c33d63" translate="yes" xml:space="preserve">
          <source>The return type-hint of the function, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15bb2daf003c3286c47e223c31873a04858134e9" translate="yes" xml:space="preserve">
          <source>The returned expression is a concatenation of string parts and escaped elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfb83f12e1202577e430f350d7f38e6bb5af21b" translate="yes" xml:space="preserve">
          <source>The runtime class definition information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3014067f3c9a35fef46fcdf4d89883762aa12c" translate="yes" xml:space="preserve">
          <source>The runtime class field information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e16f71c84286d92238a8ed2585d79630d94cacf" translate="yes" xml:space="preserve">
          <source>The runtime enum constructor information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb0e86144ed01963939947cd0828b50deb2d69f" translate="yes" xml:space="preserve">
          <source>The runtime member types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a3c0d5ba161f7c1dde59fb8cf8d664c8124d3f" translate="yes" xml:space="preserve">
          <source>The second parameter &lt;code&gt;infos&lt;/code&gt; is injected by the compiler and contains information about the position where the &lt;code&gt;trace()&lt;/code&gt; call was made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8170d735c05012b741db4cbe8fccbfa1168cd28" translate="yes" xml:space="preserve">
          <source>The sort operation is not guaranteed to be stable, which means that the order of equal elements may not be retained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a9302ad52c85769dfecf6035946dca38ee6e0b" translate="yes" xml:space="preserve">
          <source>The sort operation is not guaranteed to be stable, which means that the order of equal elements may not be retained. For a stable Array sorting algorithm, &lt;code&gt;&lt;a href=&quot;haxe/ds/arraysort#sort&quot;&gt;haxe.ds.ArraySort.sort&lt;/a&gt;()&lt;/code&gt; can be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e503e864664b30668663887bc8639050534dff74" translate="yes" xml:space="preserve">
          <source>The specification of the serialization format can be found here: &lt;a href=&quot;https://haxe.org/manual/serialization/format&quot;&gt;https://haxe.org/manual/serialization/format&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63fb36f14ec226c36657a33ba556012dd9582463" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;&lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; type, this is a double-precision IEEE 64bit float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0e73b5acc43a846196f2f1b6eecf691605c7ae" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; type. Its precision depends on the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e9a5b3081a30ee39e8d268c4e3586996350585" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;&lt;a href=&quot;void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; type. Only &lt;code&gt;null&lt;/code&gt; values can be of the type &lt;code&gt;&lt;a href=&quot;void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d0430428f4de1e33d500811eb6b76be274abcd" translate="yes" xml:space="preserve">
          <source>The standard Boolean type, which can either be &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a1806594ff2ac943a45c87ecf953ac180c2b5c" translate="yes" xml:space="preserve">
          <source>The static fields of the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3fbf2e842b7d58772fb1bdd53fdbb2d8abe123" translate="yes" xml:space="preserve">
          <source>The status information of a unit test case method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e0781777165d416f6174ef31e9e3f68de28f3a" translate="yes" xml:space="preserve">
          <source>The status/kind of the structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be670a2b999ec19d7db167136e60836b52fea3b7" translate="yes" xml:space="preserve">
          <source>The target type of the typedef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7027d1bbe0616a6471ec6f1c70265f8d0af9bab7" translate="yes" xml:space="preserve">
          <source>The tree types of the runtime type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bb415ebae9f2bdb8e570d781cfb6cbf9ce43f0" translate="yes" xml:space="preserve">
          <source>The type of the catch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd33aec1b5bb805e3500dfd484d149a65546907b" translate="yes" xml:space="preserve">
          <source>The type of the class field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecf9ea77d8a48637aa3d51e97434adb03bc1b26" translate="yes" xml:space="preserve">
          <source>The type of the enum constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37e2aaad386c1ac5e9f0016c42e7b609226d289" translate="yes" xml:space="preserve">
          <source>The type of the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4ade17a8b0d3869f7eae7c21662c0c62a9eaac" translate="yes" xml:space="preserve">
          <source>The type of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30a38f76b995d47f643979d630720d963312d9e" translate="yes" xml:space="preserve">
          <source>The type of the type parameter. It is guaranteed to be a &lt;code&gt;TInst&lt;/code&gt; with a &lt;code&gt;KTypeParameter&lt;/code&gt; kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9217dac1aa4cfd6ea552760e2743d5f3f13d59f" translate="yes" xml:space="preserve">
          <source>The type of the typedef.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f57797b4b6f287fc75de0cb30d904cad8dd9628" translate="yes" xml:space="preserve">
          <source>The type of the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca3230222bcac6ec4968f4152534e0585858ef0" translate="yes" xml:space="preserve">
          <source>The type parameters in the runtime type information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a7390688c817b0ffed008da38aebb428d1f71a" translate="yes" xml:space="preserve">
          <source>The type parameters of the class field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22142e447aa37ab89f555cb44aaaeb0ad0d9a1cf" translate="yes" xml:space="preserve">
          <source>The type parameters of the enum constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ee8c9db25f7a9cc927924aa5e5bf6fc3006652" translate="yes" xml:space="preserve">
          <source>The type parameters of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ee37f4a9f3946d48e5e58f705844d38d6ef58e" translate="yes" xml:space="preserve">
          <source>The type path of the module containing the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2946d252f29e49ab99ab12f2732eefc71d66764" translate="yes" xml:space="preserve">
          <source>The type path of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220d02146ca728c92b2e9bb8b0b06e8699f7a7e0" translate="yes" xml:space="preserve">
          <source>The type which is dynamically implemented by the class or &lt;code&gt;null&lt;/code&gt; if no such type exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2ea27e3b251b2d732afba9cd93b1fa0f72ecb8" translate="yes" xml:space="preserve">
          <source>The type-hint of the function argument, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a40b30442808fdae368c21a733b82e61a65cb55" translate="yes" xml:space="preserve">
          <source>The type-hint of the variable, if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2d65adb0d58236e0d83340364aa79e8e6b6f09" translate="yes" xml:space="preserve">
          <source>The typedef runtime information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fbdb70544454354b713ba673757aa2428a7ffe" translate="yes" xml:space="preserve">
          <source>The types of the typedef, by platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81fb8048bfdf181cb1977a2d58ae0720eab3242" translate="yes" xml:space="preserve">
          <source>The underlying implementation can allocate proper working space depending on this information, or simply ignore it. This is not a mandatory call but a tip and is only used in some specific cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3fbd20e8b8d96c3e2fac8b9ac30c43c91a37dd" translate="yes" xml:space="preserve">
          <source>The underlying type of the abstract.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf128cf17ee4dcc688072500314a624fb2cfcc96" translate="yes" xml:space="preserve">
          <source>The unique ID of the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a77105bf30beebf86a1cdc9ba040b44718b851" translate="yes" xml:space="preserve">
          <source>The unit test results. Available after the &lt;code&gt;run()&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc04b56b4c78724ea740235b09464b5d1802120b" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; type is only defined for Flash and C#. Simulate it for other platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8793e84a115b59305603e3eb72c2ddc9808828" translate="yes" xml:space="preserve">
          <source>The url of &lt;code&gt;this&lt;/code&gt; request. It is used only by the &lt;code&gt;request()&lt;/code&gt; method and can be changed in order to send the same request to different target Urls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a5a9e3ef625d5c9eb9a18ab988d0c522ec2cbb" translate="yes" xml:space="preserve">
          <source>The value expressions of the case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017b5bd3c8eabeb3b0d638af18849f246408bc23" translate="yes" xml:space="preserve">
          <source>The value itself might differ depending on platforms, only differences between two values make sense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4c7b658826880273753f5947d632b9e0d3b04f" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;this.&lt;a href=&quot;#useCache&quot;&gt;useCache&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;this.&lt;a href=&quot;#useEnumIndex&quot;&gt;useEnumIndex&lt;/a&gt;&lt;/code&gt; may affect serialization output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d3338723b775c36772a1b2f4b2e15a4cec1cd5" translate="yes" xml:space="preserve">
          <source>There are some extra functions available in the &lt;code&gt;&lt;a href=&quot;datetools&quot;&gt;DateTools&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded431814b40c985c6bdda001b2f4c626947f413" translate="yes" xml:space="preserve">
          <source>There can only be one post data per request. Subsequent calls overwrite the previously set value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a94415bee1985847c77a40dd1b52e81d2e76b56" translate="yes" xml:space="preserve">
          <source>These test methods should call the assertion methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d123a6e6e497b2f476dfad850f4e4d0e39afae" translate="yes" xml:space="preserve">
          <source>This affects usages such as &lt;code&gt;var x:&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt; = macroCall()&lt;/code&gt;, where the expected type will be reported as Int.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2ff620bf791460fee598b6dc6482ad9d711f45" translate="yes" xml:space="preserve">
          <source>This also extends to the sub-types of resolved modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc0679a27a04c7f8b28b5042d0e6234959e89b3" translate="yes" xml:space="preserve">
          <source>This also triggers loading of given module and its dependencies, if it's not yet loaded, but given macro call will not be called on the first module load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809b22c05753275b540bd711d7a1fdf31f7f9a04" translate="yes" xml:space="preserve">
          <source>This always creates a copy, even on platforms where the internal representation is Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5014fe6f70160b23aa534d9a0f28622b35dad0a3" translate="yes" xml:space="preserve">
          <source>This becomes a constructor call to one of the specialization types in the output. The rules for that are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334837b71383260ae2021a83b1ae653c71643eb6" translate="yes" xml:space="preserve">
          <source>This can be used to track positions of calls in e.g. a unit testing framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2472565641c21238cedcf59c561c066247b365" translate="yes" xml:space="preserve">
          <source>This class can be used in two ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5eeae6560da61722937d144217bd3dd56ee931" translate="yes" xml:space="preserve">
          <source>This class can be used to handle Http requests consistently across platforms. There are two intended usages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d47826abf04e871d2a6c4deb7709da11b53f940" translate="yes" xml:space="preserve">
          <source>This class complements the more lightweight Reflect class, with a focus on class and enum instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb07d0fb130ae612cb49ea04a6a70089378a13ff" translate="yes" xml:space="preserve">
          <source>This class defines mathematical functions and constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611f8e6221470bffc6fe307c5005275aa31977b5" translate="yes" xml:space="preserve">
          <source>This class gives you access to many base functionalities of system platforms. Looks in &lt;code&gt;sys&lt;/code&gt; sub packages for more system APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd20366796ce669283a7f96c35c64fedcc3e11f" translate="yes" xml:space="preserve">
          <source>This class is generic, which means one type is generated for each type parameter T on static targets. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a158ce4096351b5d5393c90f44d0130dc1b74897" translate="yes" xml:space="preserve">
          <source>This class is magic. When you extend it with a class C, it will automaticaly create a stub class with all public methods forwarding remoting messages over the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bec1e7ca9e1261a211deb993f5a3c775a5747b6" translate="yes" xml:space="preserve">
          <source>This class is used by &lt;code&gt;&lt;a href=&quot;../json#Json&quot;&gt;haxe.Json&lt;/a&gt;&lt;/code&gt; when native JSON implementation is not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0c8444c54391b2aebb18c68e4df270d0888524" translate="yes" xml:space="preserve">
          <source>This class provides a convenient way of working with paths. It supports the common path formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7137962bceb10627ee074014c48b76c96e8812f5" translate="yes" xml:space="preserve">
          <source>This class provides advanced methods on Strings. It is ideally used with &lt;code&gt;using &lt;a href=&quot;stringtools&quot;&gt;StringTools&lt;/a&gt;&lt;/code&gt; and then acts as an &lt;a href=&quot;https://haxe.org/manual/lf-static-extension.html&quot;&gt;extension&lt;/a&gt; to the &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3013818020dddedea1529800702b7bfa65ce178e" translate="yes" xml:space="preserve">
          <source>This class provides advanced methods on enum values. It is ideally used with &lt;code&gt;using &lt;a href=&quot;enumvaluetools#EnumValueTools&quot;&gt;EnumValueTools&lt;/a&gt;&lt;/code&gt; and then acts as an &lt;a href=&quot;https://haxe.org/manual/lf-static-extension.html&quot;&gt;extension&lt;/a&gt; to the &lt;code&gt;&lt;a href=&quot;../enumvalue&quot;&gt;EnumValue&lt;/a&gt;&lt;/code&gt; types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1174754923e2dcacbf5f86f3a5464e893770d3ff" translate="yes" xml:space="preserve">
          <source>This class provides advanced methods on enums. It is ideally used with &lt;code&gt;using &lt;a href=&quot;enumtools#EnumTools&quot;&gt;EnumTools&lt;/a&gt;&lt;/code&gt; and then acts as an &lt;a href=&quot;https://haxe.org/manual/lf-static-extension.html&quot;&gt;extension&lt;/a&gt; to the &lt;code&gt;enum&lt;/code&gt; types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2cff56bafe0c8c1b2f181a95a9ee605f6eb2aa" translate="yes" xml:space="preserve">
          <source>This class provides functions on expression arrays for convenience. For a detailed reference on each method, see the documentation of ExprTools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270ba2dc81d56d1a6ec3c7244ee2d7fe03fc6958" translate="yes" xml:space="preserve">
          <source>This class provides some methods which can be invoked from command line using &lt;code&gt;--macro server.field(args)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2d013415a0ba51ecce02f23f9e8317ad0a8b8a" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to convert elements from the macro context to a human-readable String representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca2a2b31a3ace836fb5ca95ea780e1131e640e9" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to work with AST-level types. It is best used through &lt;code&gt;using &lt;a href=&quot;complextypetools#ComplexTypeTools&quot;&gt;haxe.macro.ComplexTypeTools&lt;/a&gt;&lt;/code&gt; syntax and then provides additional methods on &lt;code&gt;&lt;a href=&quot;complextype#ComplexType&quot;&gt;haxe.macro.ComplexType&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6186a75f7314123487ea057b86acce3bdde783" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to work with expressions. It is best used through 'using haxe.macro.ExprTools' syntax and then provides additional methods on haxe.macro.Expr instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9153321ae1931deb8e0b4e33bdf4d76cc177fe61" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to work with strings in macro context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cfa554f02c2e3b8a7a4c5ea1211eacff647d48" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to work with typed expressions. It is best used through 'using haxe.macro.TypedExprTools' syntax and then provides additional methods on &lt;code&gt;&lt;a href=&quot;typedexpr#TypedExpr&quot;&gt;haxe.macro.TypedExpr&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bad97f173508bdc3b4b730e52294643414e9ccc" translate="yes" xml:space="preserve">
          <source>This class provides some utility methods to work with types. It is best used through 'using haxe.macro.TypeTools' syntax and then provides additional methods on haxe.macro.Type instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbd2b2cb53735c6f3f9f8137294743b30a164b8" translate="yes" xml:space="preserve">
          <source>This class provides utility methods to convert Xml instances to String representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d160c2bac620ae30631a38d547a6b97e3f61b861" translate="yes" xml:space="preserve">
          <source>This class runs unit test cases and prints the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29af5193ee23c06255e939cb9724591d6e9afff" translate="yes" xml:space="preserve">
          <source>This corresponds to the original syntactic position of &lt;code&gt;e&lt;/code&gt;. The index of the first declared constructor is 0, the next one is 1 etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143cfb8a49926328ff87f8afb00ce1c29fdeb0b9" translate="yes" xml:space="preserve">
          <source>This creates a new Http instance and makes a GET request by calling its &lt;code&gt;request(&lt;a href=&quot;../bool&quot;&gt;false&lt;/a&gt;)&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64987f5b234076d3efed10be6d0034a3b9aa19d" translate="yes" xml:space="preserve">
          <source>This does not do a request until &lt;code&gt;request()&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430cc46b0eb0bfa57bc14a484f6fe0b58fbe8c8c" translate="yes" xml:space="preserve">
          <source>This does not include static fields of parent classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38f684c505616c20bcc717ec27f4d5d2a9e5da7" translate="yes" xml:space="preserve">
          <source>This does not parse &lt;code&gt;buf&lt;/code&gt; immediately. It is parsed only when calls to &lt;code&gt;this.&lt;a href=&quot;#unserialize&quot;&gt;unserialize&lt;/a&gt;&lt;/code&gt; are made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c63c2fa92200fc4a4b3c035337f2185b0542696" translate="yes" xml:space="preserve">
          <source>This error can be used to handle or produce compilation errors in macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd68f6c1815da9acce9b759c6a2a1af9d4ec28b" translate="yes" xml:space="preserve">
          <source>This exception is raised when reading while data is no longer available in the &lt;code&gt;&lt;a href=&quot;input#Input&quot;&gt;haxe.io.Input&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8ffd843732b44fb8af7e87a6b295d9a775cc89" translate="yes" xml:space="preserve">
          <source>This function does not modify &lt;code&gt;this&lt;/code&gt; List.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a438994aa4116fc82ea3e056af65ad1980adeaaa" translate="yes" xml:space="preserve">
          <source>This function does not traverse the elements, but simply sets the internal references to null and &lt;code&gt;this.&lt;a href=&quot;#length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5758ab2e37559e50d889774c1267eacd1d2bb85" translate="yes" xml:space="preserve">
          <source>This function expects &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; to describe a valid substring of &lt;code&gt;s&lt;/code&gt;, or else the result is unspecified. To get more robust behavior, &lt;code&gt;this.&lt;a href=&quot;#add&quot;&gt;add&lt;/a&gt;(s.substr(pos,len))&lt;/code&gt; can be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb8846d0c859d6306b57a0ad72f2a11c6a6e72c" translate="yes" xml:space="preserve">
          <source>This function expects &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; to describe a valid substring of &lt;code&gt;s&lt;/code&gt;, or else the result is unspecified. To get more robust behavior, &lt;code&gt;this.&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;(s.substr(pos,len))&lt;/code&gt; can be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f511175188b2d99e36953a70f3b2421fe76d2c" translate="yes" xml:space="preserve">
          <source>This function guarantees that the class constructor is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6774f4f7d54047d8c56b22d5312b1f0bc285345b" translate="yes" xml:space="preserve">
          <source>This function guarantees that the class constructor is not called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc115a814f0feff1a73a8cfd8dfe4809511f6f3" translate="yes" xml:space="preserve">
          <source>This function internally calls &lt;code&gt;isSpace()&lt;/code&gt; to decide which characters to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63d0e1ebb3d6cd0f48014677bf29191e7c1b167" translate="yes" xml:space="preserve">
          <source>This function is mostly inverse to &lt;code&gt;&lt;a href=&quot;complextypetools#toType&quot;&gt;ComplexTypeTools.toType&lt;/a&gt;&lt;/code&gt;, but may lose some information on types that do not have a corresponding syntax version, such as monomorphs. In these cases, the result is null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a2506b49cb4b37d812e18c54c04b6e22717152" translate="yes" xml:space="preserve">
          <source>This function is only defined if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are of the same type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db1de37ba729131f5888cc639fb798f1bbcfb78" translate="yes" xml:space="preserve">
          <source>This function may call &lt;code&gt;this.&lt;a href=&quot;#resolver&quot;&gt;resolver&lt;/a&gt;.resolveClass&lt;/code&gt; to determine a Class from a String, and &lt;code&gt;this.&lt;a href=&quot;#resolver&quot;&gt;resolver&lt;/a&gt;.resolveEnum&lt;/code&gt; to determine an Enum from a String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66babd745461df8ad2b058452c35619cc9a897af" translate="yes" xml:space="preserve">
          <source>This function replaces occurrences of type parameters in &lt;code&gt;t&lt;/code&gt; if they are part of &lt;code&gt;typeParameters&lt;/code&gt;. The array index of such a type parameter is then used to lookup the concrete type in &lt;code&gt;concreteTypes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210de59f0ddfd2be0d2bcf3fc0346b564903e841" translate="yes" xml:space="preserve">
          <source>This function returns as soon as an element is found for which a call to &lt;code&gt;f&lt;/code&gt; returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad5c292b32ba52b5a375686e7c88a2a51f36bbe" translate="yes" xml:space="preserve">
          <source>This function returns false as soon as an element is found for which a call to &lt;code&gt;f&lt;/code&gt; returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7f540c07eb69db96680cabccc4b3afa788be83" translate="yes" xml:space="preserve">
          <source>This function returns true as soon as an element is found for which a call to &lt;code&gt;f&lt;/code&gt; returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b518f0b02723369d8d3901f8c68301934b0ffe5" translate="yes" xml:space="preserve">
          <source>This function returns true as soon as an element is found which is equal to &lt;code&gt;elt&lt;/code&gt; according to the &lt;code&gt;==&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2795a181a4ec573a9ef2e750858139586eb8cf76" translate="yes" xml:space="preserve">
          <source>This function should not be called more than once on a given &lt;code&gt;&lt;a href=&quot;bytesoutput#BytesOutput&quot;&gt;BytesOutput&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cceb7d8907bd25f999d5f411b15fe16ce6bc0aa" translate="yes" xml:space="preserve">
          <source>This function traverses all elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adca71a2e69db0f24bd7370e5d5c0c452096b3f" translate="yes" xml:space="preserve">
          <source>This function uses operator &lt;code&gt;==&lt;/code&gt; to check for equality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724ec37ad5a6c11574123667b3ceba94ab8580be" translate="yes" xml:space="preserve">
          <source>This interface should be used for externs only. Haxe does not support custom array access on classes. However, array access can be implemented for abstract types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9549ca6dd29bf4a8bbdefff3749e0236f253aa49" translate="yes" xml:space="preserve">
          <source>This is a convenience function for &lt;code&gt;ltrim(rtrim(s))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e809bd3717ce9ec3ef41aff438cf69205924f3" translate="yes" xml:space="preserve">
          <source>This is a convenience function for &lt;code&gt;s.split(sub).join(by)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2e83d8d13625d7e368d24ff50dace3e37cbbd7" translate="yes" xml:space="preserve">
          <source>This is a convenience function for calculating the difference between Timer.stamp() before and after the invocation of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ee4a148535a6f0e83cc3fcaf8ca6e2e857c57a" translate="yes" xml:space="preserve">
          <source>This is a convenience function for calling &lt;code&gt;&lt;a href=&quot;date#fromTime&quot;&gt;Date.fromTime&lt;/a&gt;(d.getTime() + t)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f6df51dc22fd8778edbeaa3c76bf097f6bc101" translate="yes" xml:space="preserve">
          <source>This is a convenience function for creating a new Timer instance with &lt;code&gt;time_ms&lt;/code&gt; as argument, binding its run() method to &lt;code&gt;f&lt;/code&gt; and then stopping &lt;code&gt;this&lt;/code&gt; Timer upon the first invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48153eb9578e4a18821dcb3ddcdbbc28a67601cc" translate="yes" xml:space="preserve">
          <source>This is a convenience function for creating a new instance of Serializer, serialize &lt;code&gt;v&lt;/code&gt; into it and obtain the result through a call to toString().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19ade9b59a6e1013858111850c37e33a460b78c" translate="yes" xml:space="preserve">
          <source>This is a convenience function for creating a new instance of Unserializer with &lt;code&gt;v&lt;/code&gt; as buffer and calling its unserialize() method once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca763690a3fec280e3b33d017dc8233580ccc66" translate="yes" xml:space="preserve">
          <source>This is a multi-type abstract, it is instantiated as one of its specialization types depending on its type parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c224da170a76eecc396ff8c5fc695b28e9760a" translate="yes" xml:space="preserve">
          <source>This is equivalent to the shorthand syntax &lt;code&gt;~/r/opt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3712d370c54734fb8773f44c846374c044e0ba" translate="yes" xml:space="preserve">
          <source>This is only defined for &lt;code&gt;@:build/@:autoBuild&lt;/code&gt; macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977cb6100e94159ea1107b9382b80edf0dea91c8" translate="yes" xml:space="preserve">
          <source>This is only guaranteed to work for anonymous structures. Refer to &lt;code&gt;&lt;a href=&quot;type#getInstanceFields&quot;&gt;Type.getInstanceFields&lt;/a&gt;&lt;/code&gt; for a function supporting class instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29322d36f24e9b972b21a5639c9decddd7ed499d" translate="yes" xml:space="preserve">
          <source>This is only guaranteed to work on anonymous structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef00397b7be63eb2d4060f8832932dfd1db5823f" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;&lt;a href=&quot;../string#substr&quot;&gt;String.substr&lt;/a&gt;&lt;/code&gt; but the &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; parts are considering UTF8 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2608e20a2582c1544e95e4aee8845e70fd812f9a" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;code&gt;&lt;a href=&quot;stringmap#StringMap&quot;&gt;StringMap&lt;/a&gt;&lt;/code&gt; excepts that it does not sanitize the keys. As a result, it will be faster to access the map for reading, but it might fail with some reserved keys such as &lt;code&gt;constructor&lt;/code&gt; or &lt;code&gt;prototype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92cba053fdd39d99c4d8f781b7805aafad22a0f9" translate="yes" xml:space="preserve">
          <source>This is the api that is passed to the custom JS generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00612c7c1510f712bac51db4e79ef978c2d11686" translate="yes" xml:space="preserve">
          <source>This is the inverse operation to htmlEscape, i.e. the following always holds: &lt;code&gt;htmlUnescape(htmlEscape(s)) == s&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b6268477b997096047c153823695fc5dfb1479" translate="yes" xml:space="preserve">
          <source>This is the leading part of the path that is not part of the file name and the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad385727c236768f60af07c06f075b19025eb06" translate="yes" xml:space="preserve">
          <source>This is the mathematical inverse operation of exp, i.e. &lt;code&gt;log(exp(v)) == v&lt;/code&gt; always holds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9bc9ee7606985619612f5b37b160cfbb8a5dba" translate="yes" xml:space="preserve">
          <source>This is the part of the part between the directory and the extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7271f92d7b05c788971e26fb2f9cd01687da6fae" translate="yes" xml:space="preserve">
          <source>This may also reduce the size of serialization Strings at the expense of performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbb1fc21ba602499dc8abd14192b139958b9860" translate="yes" xml:space="preserve">
          <source>This may involve initialization of the internal buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7888b892b42ba4ab109f31027de691b2f4850a1" translate="yes" xml:space="preserve">
          <source>This may reduce the size of serialization Strings, but makes them less suited for long-term storage: If constructors are removed or added from the enum, the indices may no longer match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111c8da522ac61a48460b07084e5427c0ea8ed27" translate="yes" xml:space="preserve">
          <source>This may return the empty Array &lt;code&gt;[]&lt;/code&gt; if all constructors of &lt;code&gt;e&lt;/code&gt; require arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0103ae6e047d80d64ba94fae2a542e4725f91ccf" translate="yes" xml:space="preserve">
          <source>This means that a value of any type can be assigned to &lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt;, and vice-versa, a value of &lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; type can be assigned to any other type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28de51ba6c0f81ebff797ff81eddc7e656c4406e" translate="yes" xml:space="preserve">
          <source>This method can be rebound to a custom function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03bf1bb69ef5b8c2c5caaeb23dd538a44489e25" translate="yes" xml:space="preserve">
          <source>This method checks if a downcast is possible. That is, if the runtime type of &lt;code&gt;value&lt;/code&gt; is assignable to the class specified by &lt;code&gt;c&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt; is returned. Otherwise null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d28f18019e4cee9f5d2c2b7ecf7a8a0637d7b0" translate="yes" xml:space="preserve">
          <source>This method does not call itself recursively. It should instead be used in a recursive function which handles the expression nodes of interest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16de304def6f081540a27177b539be3d4ca38a92" translate="yes" xml:space="preserve">
          <source>This method generates AST nodes depending on the macro-runtime value of &lt;code&gt;v&lt;/code&gt;. As such, only basic types and enums are supported and the behavior for other types is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592bf71cefa725fbc6aab968ad50b4503f194e06" translate="yes" xml:space="preserve">
          <source>This method handles leap years.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe6304b5348ddfdb4ff0b9427f1ebe1adec1546" translate="yes" xml:space="preserve">
          <source>This method is called upon a Http status change, with &lt;code&gt;status&lt;/code&gt; being the new status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71553280198745c8f8257ae1076ff3eb29d61386" translate="yes" xml:space="preserve">
          <source>This method is called upon a request error, with &lt;code&gt;msg&lt;/code&gt; containing the error description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7d1c6163e7dacf2bd7522b745f9271c2424f20" translate="yes" xml:space="preserve">
          <source>This method is called upon a successful request, with &lt;code&gt;data&lt;/code&gt; containing the result String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc8310203c9ff5523fad47493911af0c8524571" translate="yes" xml:space="preserve">
          <source>This method is faster than &lt;code&gt;&lt;a href=&quot;string#charCodeAt&quot;&gt;String.charCodeAt&lt;/a&gt;()&lt;/code&gt; on some platforms, but the result is unspecified if &lt;code&gt;index&lt;/code&gt; is negative or greater than &lt;code&gt;s.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f69298485f4636a0fae2bc7516db01a60274f26" translate="yes" xml:space="preserve">
          <source>This method is implemented in the compiler. This definition exists only for documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fba886274a8ffa551b2997a9acb8bf1d569a0fd" translate="yes" xml:space="preserve">
          <source>This method is invoked repeatedly on &lt;code&gt;this&lt;/code&gt; Timer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353812b0955f9a565f0a371dd9044469afaa30d2" translate="yes" xml:space="preserve">
          <source>This method is not guaranteed to work with interfaces or core types such as &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7c3c8e67367f1b46be53f404107e9c66677046" translate="yes" xml:space="preserve">
          <source>This method is not required to check &lt;code&gt;hasNext()&lt;/code&gt; first. A call to this method while &lt;code&gt;hasNext()&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; yields unspecified behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7348ed21aeda95b8e72d6f66638bd2dbcd7f535" translate="yes" xml:space="preserve">
          <source>This method is only guaranteed to work on anonymous structures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95534aaa4e843469216f492d3d14226e3c5e4d3" translate="yes" xml:space="preserve">
          <source>This method is only guaranteed to work on anonymous structures. Refer to &lt;code&gt;&lt;a href=&quot;type#getInstanceFields&quot;&gt;Type.getInstanceFields&lt;/a&gt;&lt;/code&gt; for a function supporting class instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b7b9fd0997e0b5fdd6aa15fc29524f86b1f3b8" translate="yes" xml:space="preserve">
          <source>This method is optimized if &lt;code&gt;v&lt;/code&gt; is an enum instance expression such as SomeEnum.SomeCtor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbe3b12f9586cfe5200330c037787e8a1078996" translate="yes" xml:space="preserve">
          <source>This method might clear several metadata entries of the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5d6c2a65f93e5d2ac234a9310da7c59265d098" translate="yes" xml:space="preserve">
          <source>This method modifies the internal state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb8979a918fcee65731b49554f7f7149939002b" translate="yes" xml:space="preserve">
          <source>This method provides a fluent interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006f63344b6dbeb41f53b140f3c87688709ec322" translate="yes" xml:space="preserve">
          <source>This method returns true even if &lt;code&gt;key&lt;/code&gt; is bound to null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed42d44534a1e6c0b1dee0caf74ecbb9415fdd1" translate="yes" xml:space="preserve">
          <source>This method should be considered experimental.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f143f24ffe108282e7b85fd62a9c09870db843f" translate="yes" xml:space="preserve">
          <source>This method should only be called after &lt;code&gt;this.&lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;this.&lt;a href=&quot;#matchSub&quot;&gt;matchSub&lt;/a&gt;&lt;/code&gt;, and then operates on the String of that operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f65256e817e52e8bfce68d4e4fa929f56f7932" translate="yes" xml:space="preserve">
          <source>This method traverses the stack until it finds a matching element and unlinks it, returning true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41ccd35985e8452b3b6ecd84a2546e275e916e6" translate="yes" xml:space="preserve">
          <source>This only includes fields which are known at compile-time. In particular, using getInstanceFields(getClass(obj)) will not include any fields which were added to obj at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613150d9ce5e3480a3a4a1927679151ee7cbed2c" translate="yes" xml:space="preserve">
          <source>This only works if &lt;code&gt;e&lt;/code&gt; has a position which the compiler can find. While this is true for any expressions appearing in real Haxe code (i.e. some .hx file), it might not work for expressions generated by macros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa14467fe8049852a596a6f63d71250329d8dcab" translate="yes" xml:space="preserve">
          <source>This operation depends on the position of &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2ee2c4ad63796e9b105ce47355643a02b5fd0a" translate="yes" xml:space="preserve">
          <source>This operation does not modify &lt;code&gt;this&lt;/code&gt; Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4173e3adf5b496dd4cccc080d39ea2384eb314" translate="yes" xml:space="preserve">
          <source>This operation has no effect if the type has already been loaded, e.g. through &lt;code&gt;&lt;a href=&quot;context#getType&quot;&gt;Context.getType&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3520ed805531b7a442c3b7ef6fe59ce0ee1aa33b" translate="yes" xml:space="preserve">
          <source>This operation is not guaranteed to work if &lt;code&gt;s&lt;/code&gt; contains the &lt;code&gt;\0&lt;/code&gt; character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e377b4d43f335386b3d9d3898dc94dc2f843a1d4" translate="yes" xml:space="preserve">
          <source>This operation is performed in-order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f6b1dfe8108ff9fb08f60ddaa4f67b33e8c8aa" translate="yes" xml:space="preserve">
          <source>This operation is stable: The order of equal elements is preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73db165c10b920dec0e1ac0f6dd8ccbbffd22df1" translate="yes" xml:space="preserve">
          <source>This operation may fail on structurally valid data if a type cannot be resolved or if a field cannot be set. This can happen when unserializing Strings that were serialized on a different Haxe target, in which the serialization side has to make sure not to include platform-specific data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4da95d73be830eec5c1a0e64ebb0391fa81769" translate="yes" xml:space="preserve">
          <source>This operation modifies &lt;code&gt;this&lt;/code&gt; Array in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd897fb8fbea36571390143ba22035d00c353828" translate="yes" xml:space="preserve">
          <source>This operation modifies &lt;code&gt;this&lt;/code&gt; Vector in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc8beafd28f66bdb793c1404e9d58d0be9e3be2" translate="yes" xml:space="preserve">
          <source>This operation modifies Array &lt;code&gt;a&lt;/code&gt; in place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33381c555198f72a06bbc769c60342da948e39cd" translate="yes" xml:space="preserve">
          <source>This operation modifies List &lt;code&gt;a&lt;/code&gt; in place and returns its head once modified. The &lt;code&gt;prev&lt;/code&gt; of the head is set to the tail of the sorted list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbc0ff29908c78f454caa3182c486db68295337" translate="yes" xml:space="preserve">
          <source>This process may lose some information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5268cf6ca8cf4f647926de09d54b11fc325647c2" translate="yes" xml:space="preserve">
          <source>This proxy can be inherited with an XML file name parameter. It will only allow access to fields which corresponds to an &quot;id&quot; attribute value in the XML file :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71634ca54e2233289c01f38a2c8cc998780713a0" translate="yes" xml:space="preserve">
          <source>This returns the internal representation type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d5303f7bb568ab25a0c241cf7f9cdaca88f752" translate="yes" xml:space="preserve">
          <source>This type is meant to be used to generate custom types using a macro. For instance by doing MacroType&amp;lt;[my.Class.myMacro(55)]&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29708d9f4ef4a991becb66c02fe4e3c4a298b10" translate="yes" xml:space="preserve">
          <source>This type unifies with an enum instance if all constructors of the enum require no arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4cea3cf360ee3f6d9d810a41389abb1ab9f527d" translate="yes" xml:space="preserve">
          <source>This type unifies with any function type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391b291f690ab93c086cd265f7716470e2f46604" translate="yes" xml:space="preserve">
          <source>This type unifies with any instance of classes that have a constructor which</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4638a7368155899d5edd8d4326e95326077cc32" translate="yes" xml:space="preserve">
          <source>This unit test class should be extended to create test cases. Each test method created in this extended class should start with the name &quot;test&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6742478f6673861cfff62d2e58a5ac48d29b856b" translate="yes" xml:space="preserve">
          <source>This value can be changed for individual instances of Serializer by setting their useCache field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc1cc612170b53321be79240d9208a7618242edd" translate="yes" xml:space="preserve">
          <source>This value can be changed for individual instances of Serializer by setting their useEnumIndex field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b957c2e22d4a6ffccb41a7171fed7d59fef381b" translate="yes" xml:space="preserve">
          <source>This value can be set to use custom type resolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55815a62b96eb33f07c1055ea89c0bcd4c52f0f8" translate="yes" xml:space="preserve">
          <source>This value is applied when a new &lt;code&gt;&lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;&lt;/code&gt; instance is created. Changing it afterwards has no effect on previously created instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1b3e348c5e658c9f04296e21ad3e2315006119" translate="yes" xml:space="preserve">
          <source>Throws:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819b086930722fc1b5ea7fdd55d95e855f41c98c" translate="yes" xml:space="preserve">
          <source>Ties are rounded up, so that &lt;code&gt;0.5&lt;/code&gt; becomes &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;-0.5&lt;/code&gt; becomes &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548a6f52203a7bc451ae1096ee468877c75afce0" translate="yes" xml:space="preserve">
          <source>Timer.delay()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8fdbcd0d2c175590f0c6303ffb81a517cf1d86" translate="yes" xml:space="preserve">
          <source>Timer.measure()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a6d9e9756be1dbacf26a94c89f9ed929b0f1f5" translate="yes" xml:space="preserve">
          <source>Timer.run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56cd81893a62c4a4e38b9bc1f4b9eb13e9f820f7" translate="yes" xml:space="preserve">
          <source>Timer.stamp()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464ee22a6605fc707ee61cbe4b6acf2a62a27242" translate="yes" xml:space="preserve">
          <source>Timer.stop()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ceed213111d545ed9352fab76f3ad832c427084" translate="yes" xml:space="preserve">
          <source>To obtain the character code of a single character, &quot;x&quot;.code can be used instead to @:extern public inline the character code at compile time. Note that this only works on Ucs2 literals of length 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83971cfd5af89459044b79116496017a0e6e8a3" translate="yes" xml:space="preserve">
          <source>To obtain the character code of a single character, &lt;code&gt;&quot;x&quot;.code&lt;/code&gt; can be used instead to inline the character code at compile time. Note that this only works on String literals of length 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8467bf807316f1b02c82b0af1c421a4bdcf04fa" translate="yes" xml:space="preserve">
          <source>To run code before or after the test, override the functions &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;tearDown&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b46de558b0cf37cc3f5e64c7755fbad5d9535cf" translate="yes" xml:space="preserve">
          <source>Top Level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d33b40c21bbdaf81c2714c34b7afc33ece9d229" translate="yes" xml:space="preserve">
          <source>Transform a function taking an array of arguments into a function that can be called with any number of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b55ba7f81b8ddce034e70016d43cf7bcb3a541f" translate="yes" xml:space="preserve">
          <source>Transforms &lt;code&gt;t&lt;/code&gt; by calling &lt;code&gt;f&lt;/code&gt; on each of its subtypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7033a528e360829c6a8a25a1b3e98e050b972e61" translate="yes" xml:space="preserve">
          <source>Transforms the sub-expressions of &lt;code&gt;e&lt;/code&gt; by calling &lt;code&gt;f&lt;/code&gt; on each of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e434b118e10401aba6508bddbff2700c2f1bcf74" translate="yes" xml:space="preserve">
          <source>Transforms the sub-expressions of &lt;code&gt;e&lt;/code&gt; by calling &lt;code&gt;f&lt;/code&gt; on each of them. Additionally, types are mapped using &lt;code&gt;ft&lt;/code&gt; and variables are mapped using &lt;code&gt;fv&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555aca844f8ecfdffc5f75cf88cc25f1c6a2a9af" translate="yes" xml:space="preserve">
          <source>TreeNode&amp;lt;K, V&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9485a1dc129a15edfc273bb827ed184f5342ba1c" translate="yes" xml:space="preserve">
          <source>Tries to extract the class instance stored inside &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538646bec5e3ad4eb52fd5ed4937c26af9a08c1d" translate="yes" xml:space="preserve">
          <source>Tries to extract the enum instance stored inside &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfa7a8d975605765490812b33faf3687bf87679" translate="yes" xml:space="preserve">
          <source>Tries to unify &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt; and returns &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt; if successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8810441b86b52ffbbe6795ca220e1b75acaced7" translate="yes" xml:space="preserve">
          <source>True if the last directory separator is a backslash, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb84fa83f6f10fc50d04c9301d91cf1801c81f6" translate="yes" xml:space="preserve">
          <source>Type.allEnums()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd111fee1341542f42aac02dfd0c393ca6965d9c" translate="yes" xml:space="preserve">
          <source>Type.createEmptyInstance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11517f76cdec2a11c2a52925ec3f654e3a396fb5" translate="yes" xml:space="preserve">
          <source>Type.createEnum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150bf42d81ce9039fd7377f3e31bad0374ad627d" translate="yes" xml:space="preserve">
          <source>Type.createEnumIndex()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f8851eb6229423ccace9e3bfa089a56ca66109" translate="yes" xml:space="preserve">
          <source>Type.createInstance()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f3f50ad37608a8549f852222f7bebe45a22031" translate="yes" xml:space="preserve">
          <source>Type.enumConstructor()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfcaf4f2f0b03a607f26f629809ac119970a4e0" translate="yes" xml:space="preserve">
          <source>Type.enumEq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f503ece5a3fa51aa4baf9d83478f6b9b338e1063" translate="yes" xml:space="preserve">
          <source>Type.enumIndex()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b728951e8d791558fc909b1a6a817d31be1e99b" translate="yes" xml:space="preserve">
          <source>Type.enumParameters()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7caf67ad9c090a87298299ef6aad22816121c3cb" translate="yes" xml:space="preserve">
          <source>Type.getClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa14078d669088a01f2fd9aa3c929337e560ac1" translate="yes" xml:space="preserve">
          <source>Type.getClassFields()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da57ed136a4ba90958cc2c544b66ebffe6535bc" translate="yes" xml:space="preserve">
          <source>Type.getClassName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c71f778acd7c18ef298e94528dc2bc770f31b09" translate="yes" xml:space="preserve">
          <source>Type.getEnum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3e8345be65c37b76f90bc23936a2724758302f" translate="yes" xml:space="preserve">
          <source>Type.getEnumConstructs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899ca45230d4036b6d703af2727ce86d306cad15" translate="yes" xml:space="preserve">
          <source>Type.getEnumName()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a0945997a58e393873b5ea034a08510392384c" translate="yes" xml:space="preserve">
          <source>Type.getInstanceFields()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f82f80bf96f57288ba02353cbc9d79636d3ac9" translate="yes" xml:space="preserve">
          <source>Type.getSuperClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f1e99af31b2cc4130bda57fdbda3e2e5a184a0" translate="yes" xml:space="preserve">
          <source>Type.resolveClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43aa3cfd72c4fa4ec9d83dbae5dd8912936bb9e6" translate="yes" xml:space="preserve">
          <source>Type.resolveEnum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae254f0b9699d8dfb576930fb0dfd9e4cf6fd0a9" translate="yes" xml:space="preserve">
          <source>Type.typeof()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfde39f15f6b983bca17055dba3b336d84804ce" translate="yes" xml:space="preserve">
          <source>TypeApi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed32066b1b312f4299a27fb3ce2502f5f6f98ecb" translate="yes" xml:space="preserve">
          <source>TypeDefKind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a241630edbac84596f8d9708400c4a1ea7522a7" translate="yes" xml:space="preserve">
          <source>TypeDefinition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d24aa1772e66ff639befb801acbeb8110dfefc9" translate="yes" xml:space="preserve">
          <source>TypeInfos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bbff6de3409630e8cf8d7c2d18b76ecf0326f4" translate="yes" xml:space="preserve">
          <source>TypeParam</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcee3d44311c1a013882139196a3714350d66cac" translate="yes" xml:space="preserve">
          <source>TypeParamDecl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b4855e1f3319a01df03868e40b1c47270047c9" translate="yes" xml:space="preserve">
          <source>TypeParameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2725fc6232072bdec271765b73a6baff8aeef2f5" translate="yes" xml:space="preserve">
          <source>TypeParams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3357a1e0c404885fffaf41ea3154dc9ba27d4224" translate="yes" xml:space="preserve">
          <source>TypePath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2088b4971fe21181ff638435138d2648a39f3fd" translate="yes" xml:space="preserve">
          <source>TypeRoot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f19d8a72bf0fd7c1dd6b63a4eabcb32503cb12e" translate="yes" xml:space="preserve">
          <source>TypeTools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536a4cbc9c77e61d97215fc5c6be35e0b5ef949e" translate="yes" xml:space="preserve">
          <source>TypeTree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bebbb5c0ba9d5cc24e7e2a1f71c629379d11c4" translate="yes" xml:space="preserve">
          <source>TypedExpr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6470e34bca77d339df91367ca0ee2718bfb7de3b" translate="yes" xml:space="preserve">
          <source>TypedExprDef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adb5ce6fd3cd92353b479984e4e8f94a4f1e2dc" translate="yes" xml:space="preserve">
          <source>TypedExprTools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf31d5bb5e8f193a6afc85b45a2520994093217" translate="yes" xml:space="preserve">
          <source>Typedef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b206f85d0409b4849a746c24066cb65dc55428" translate="yes" xml:space="preserve">
          <source>Types expression &lt;code&gt;e&lt;/code&gt; and returns its type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152b7323963f7b4149a8399c20a9d2aa1c3e697f" translate="yes" xml:space="preserve">
          <source>Types expression &lt;code&gt;e&lt;/code&gt; and returns the corresponding &lt;code&gt;&lt;a href=&quot;typedexpr#TypedExpr&quot;&gt;TypedExpr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d66b410a7e04327a3f87f5a8fabf5a18bdfd7b3" translate="yes" xml:space="preserve">
          <source>Typing the expression may result in a compiler error which can be caught using &lt;code&gt;try ... catch&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b81a5f58a08d125439c4fe920735e6f93f6c26f" translate="yes" xml:space="preserve">
          <source>UInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e17b0550e78cb7a985971b93e2d11cfb394576" translate="yes" xml:space="preserve">
          <source>UInt(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3b455f07e3c7118094f958e1ca744d9507912d" translate="yes" xml:space="preserve">
          <source>UInt16Array(&lt;a href=&quot;uint16arraydata&quot;&gt;UInt16ArrayData&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbab666493698dee333f06d22beb9b9662eb99fd" translate="yes" xml:space="preserve">
          <source>UInt16ArrayData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec47d7b247f3bae413ad38ae0f135dd30f21bd7" translate="yes" xml:space="preserve">
          <source>UInt32Array(&lt;a href=&quot;uint32arraydata&quot;&gt;UInt32ArrayData&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66d3d594feaf1f013532b03f6bbf3a847706d52" translate="yes" xml:space="preserve">
          <source>UInt32ArrayData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebeb465f5e41c7b27b4d896832ae077694a5072b" translate="yes" xml:space="preserve">
          <source>UInt8Array(&lt;a href=&quot;uint8arraydata&quot;&gt;UInt8ArrayData&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa85b64d29c01fb292ad4f2c3bc059f6fa9a45fe" translate="yes" xml:space="preserve">
          <source>UInt8ArrayData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d43851fd0bf29f1272c481001b45891c97b8000" translate="yes" xml:space="preserve">
          <source>Ucs2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e6dc50f522e9e8450bc9b45777f2861f780621" translate="yes" xml:space="preserve">
          <source>Ucs2(&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b00c19bfb704875acbf3cb41653d98913adae8a" translate="yes" xml:space="preserve">
          <source>Ucs2.charAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c484b8a436a8a025ce043399c3c2b02871c39f" translate="yes" xml:space="preserve">
          <source>Ucs2.charCodeAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc4083b5ad8991ecdc23ec2a7c5cf07dcbdd3dd" translate="yes" xml:space="preserve">
          <source>Ucs2.fromCharCode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc73e2cea760a2603c6533c434fe4f328714b96" translate="yes" xml:space="preserve">
          <source>Ucs2.indexOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729b6d20c5c27e652e9dc576dd07415bf3de9917" translate="yes" xml:space="preserve">
          <source>Ucs2.lastIndexOf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ff2bbe5e9be913cb3e344975c11fe3234bc3d3" translate="yes" xml:space="preserve">
          <source>Ucs2.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f56b6198c4e8449a76bcc471a815e90ae4b13d" translate="yes" xml:space="preserve">
          <source>Ucs2.split()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140f45c0148fcd82d9eee8fda6245a9c608068cf" translate="yes" xml:space="preserve">
          <source>Ucs2.substr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce53b36b0d0eab14493238ff5228ab73bd4ce53" translate="yes" xml:space="preserve">
          <source>Ucs2.substring()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed338415f77f0d940caab915c416de5ae3298a83" translate="yes" xml:space="preserve">
          <source>Ucs2.toLowerCase()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541d9e9a738f09962c7ac12e2c03232030b52beb" translate="yes" xml:space="preserve">
          <source>Ucs2.toNativeString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e77c112c6853c3887dfee26c117d1d6b98b73e2" translate="yes" xml:space="preserve">
          <source>Ucs2.toUpperCase()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c0d48976f5f137e5bdda9c79782802e08a1394" translate="yes" xml:space="preserve">
          <source>Uncompress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b11181fe46b7795740173232c82bcc21d14ada" translate="yes" xml:space="preserve">
          <source>Unescapes HTML special characters of the string &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfd6d6beac3a32222e6d1e773e89d4ea5b8818d" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;a == b&lt;/code&gt;, this function performs a deep equality check on the arguments of the constructors (if there are any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05e0c1cfae992d4a505015f3180a69c4c9a6a3b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;a == b&lt;/code&gt;, this function performs a deep equality check on the arguments of the constructors, if exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0036583c9fa9ab035d0462bdb0f40cc112776662" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;c1 == c2&lt;/code&gt;, this function performs a deep equality check on the arguments of the enum constructors, if exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b496c3b1c2a4535b84f7399774967c7af93428c" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;f1 == f2&lt;/code&gt;, this function performs a deep equality check on the given &lt;code&gt;&lt;a href=&quot;classfield#ClassField&quot;&gt;ClassField&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f681c9d7c00cfb9868c3f4bc242eed10b1ce67" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;r1 == r2&lt;/code&gt;, this function performs a deep equality check on the given &lt;code&gt;&lt;a href=&quot;rights#Rights&quot;&gt;Rights&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8810011eff1b1cebf63eda7ae72c9caf75a5caf" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;readBytes&lt;/code&gt;, this method tries to read the exact &lt;code&gt;len&lt;/code&gt; amount of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beab7d0bc28a45a702ce26de7755eea82d4d5aa9" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;t1 == t2&lt;/code&gt;, this function performs a deep equality check on the given &lt;code&gt;&lt;a href=&quot;ctype#CType&quot;&gt;CType&lt;/a&gt;&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08eaec1e1f5b101e4b48818115c5eaf159c18381" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;writeBytes&lt;/code&gt;, this method tries to write the exact &lt;code&gt;len&lt;/code&gt; amount of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0114e326a36f4df45f07febf6dc5117b87dbbe48" translate="yes" xml:space="preserve">
          <source>Unlike String, an instance of StringBuf is not immutable in the sense that it can be passed as argument to functions which modify it by appending more values. However, the internal buffer cannot be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ae293ded1c6fb9866ad7e767682fded0fa74b2" translate="yes" xml:space="preserve">
          <source>Unop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98518b66439ea58bba199b7eca2e079ec9f5d7e4" translate="yes" xml:space="preserve">
          <source>UnsafeStringMap&amp;lt;T&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dbe2af56241451943d304b8ba757e49b27e53e" translate="yes" xml:space="preserve">
          <source>Unserializer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787a9c0a21c2daea4b320f1ef5abdfb4450fb99d" translate="yes" xml:space="preserve">
          <source>Unserializer.DEFAULT_RESOLVER()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a85718c9ef1c3a19c92c610de6865911f356656" translate="yes" xml:space="preserve">
          <source>Unserializer.getResolver()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629574824b5e9825712419f875b0ec04c44d9ae2" translate="yes" xml:space="preserve">
          <source>Unserializer.run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7216c858f436af5b1e0d26e67e0e594eb4c17cf4" translate="yes" xml:space="preserve">
          <source>Unserializer.setResolver()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda1c6221aef2275ee8797c1b21c7c450ae644c6" translate="yes" xml:space="preserve">
          <source>Unserializer.unserialize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa99e2caf43038f5d0e1882f80d1f9352020208f" translate="yes" xml:space="preserve">
          <source>Unserializes &lt;code&gt;v&lt;/code&gt; and returns the according value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142ab4e4ef473b226a155e7999c912e12b433cc0" translate="yes" xml:space="preserve">
          <source>Unserializes the next part of &lt;code&gt;this&lt;/code&gt; Unserializer instance and returns the according value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0551c0595911ad3ee0df06b2bebf9a713469137" translate="yes" xml:space="preserve">
          <source>Unsets the index of enum instance &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13be7738e1389f72c0f88aa84d17719f746bf4a" translate="yes" xml:space="preserve">
          <source>Unused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcb8ca44e9b844a8875efc061aa91ba58c8bc18" translate="yes" xml:space="preserve">
          <source>Use constructor indexes for enums instead of names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a7f0eade0e6b07396034e5126f8316e2d522c1" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;&lt;a href=&quot;dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; should be minimized as it prevents several compiler checks and optimizations. See &lt;code&gt;&lt;a href=&quot;any&quot;&gt;Any&lt;/a&gt;&lt;/code&gt; type for a safer alternative for representing values of any type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c966967a0a7e99243186dc67cd68b5fcd6ac2284" translate="yes" xml:space="preserve">
          <source>Used internally by the compiler to delay some typing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02a8a313fe67235efa1c276b098e64b7edbaeb4" translate="yes" xml:space="preserve">
          <source>Usually iteration is considered to be complete if all elements of the underlying data structure were handled through calls to &lt;code&gt;next()&lt;/code&gt;. However, in custom iterators any logic may be used to determine the completion state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011fca5c2a7f33c8e2800679272e51b42926fb80" translate="yes" xml:space="preserve">
          <source>Utf8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c58c3754dcb96959ee6394e8db1d9e9bc3ad0a9" translate="yes" xml:space="preserve">
          <source>Utf8.addChar()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98b1b0607cc23dfbc6da929977aa532a4d86bc2" translate="yes" xml:space="preserve">
          <source>Utf8.char()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6915ed12043803e691d5da23c22e3d3d7ae719a9" translate="yes" xml:space="preserve">
          <source>Utf8.charCodeAt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5896817a7086d227b8fa9c5e889be8dcb37f20" translate="yes" xml:space="preserve">
          <source>Utf8.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5308158bf37f7082cb5b449d42fdb6d47ee81aba" translate="yes" xml:space="preserve">
          <source>Utf8.decode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f06be627f08ac97406545d7081c2113dbeb7466" translate="yes" xml:space="preserve">
          <source>Utf8.encode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c257ca6bc3258bff786018724cdeab61e0b8dad4" translate="yes" xml:space="preserve">
          <source>Utf8.iter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f295a1a0c306938024371b2b6576012b4f09b1" translate="yes" xml:space="preserve">
          <source>Utf8.length()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f5770ee0cad841e7b9cc03b0c4c829018eea71" translate="yes" xml:space="preserve">
          <source>Utf8.sub()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36570547e998724b06448a194e26fccffc4e86bd" translate="yes" xml:space="preserve">
          <source>Utf8.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72c5afdded269792a56940bbfb707dda286ccd7" translate="yes" xml:space="preserve">
          <source>Utf8.validate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfdbdef621053e4c2adb3e5800cfd3510d6d549" translate="yes" xml:space="preserve">
          <source>ValueType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a09e11e3922b456e6280f3eb4544e4686caef24" translate="yes" xml:space="preserve">
          <source>ValueType.TBool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d856478f8dad08b842ebf53f17517f516ef5b6" translate="yes" xml:space="preserve">
          <source>ValueType.TClass()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82e747589c1dfc49a66bde213acac48aec51b30" translate="yes" xml:space="preserve">
          <source>ValueType.TEnum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7eb845ce62800235a56c4d986e86c2549e103e" translate="yes" xml:space="preserve">
          <source>ValueType.TFloat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57f8548fc4dff62e6cf867ffc232451356fef0d" translate="yes" xml:space="preserve">
          <source>ValueType.TFunction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b316af29c5f9aab2057c6fbcdf2ea7e68535f0d6" translate="yes" xml:space="preserve">
          <source>ValueType.TInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04aa470d746056b7985b83262d1a5a7b6cbb6995" translate="yes" xml:space="preserve">
          <source>ValueType.TNull</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac3dac296bd1a0547143c52a228e06e165ca416" translate="yes" xml:space="preserve">
          <source>ValueType.TObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de17cb19c20ffadc046f9cbba0cdbd0fcc7ab00b" translate="yes" xml:space="preserve">
          <source>ValueType.TUnknown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1564f6b1512cbfa3cfcebc9a5badb6b239954f1" translate="yes" xml:space="preserve">
          <source>Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cea87cf757286518e1e5c257fb70591a7aa6af7" translate="yes" xml:space="preserve">
          <source>Var</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8db74f9e4bb7d51ef7d5cf443eb581283740449" translate="yes" xml:space="preserve">
          <source>VarAccess</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d42df752ce7fb579dd67e29cf86586ed07b296" translate="yes" xml:space="preserve">
          <source>Variable declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2327b6f9b091e308c676a657d93ef420af35f29" translate="yes" xml:space="preserve">
          <source>Vector&amp;lt;T&amp;gt;(VectorData&amp;lt;T&amp;gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207c7c00630b836d3afb46848bdb24a92023331d" translate="yes" xml:space="preserve">
          <source>Void</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babba0dbddbb7c680636caf6ac8a7584901bd20f" translate="yes" xml:space="preserve">
          <source>Wakeup a sleeping run()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f186e028e81984a5783c456e8aafb98e6fcdca3d" translate="yes" xml:space="preserve">
          <source>WeakMap allows mapping of object keys to arbitrary values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446f5ce958480e0ec4d65317342d8f05b58a5339" translate="yes" xml:space="preserve">
          <source>WeakMap&amp;lt;K, V&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c936db9b0e660f2f4ff239da03718200521d81da" translate="yes" xml:space="preserve">
          <source>When you extend it with a class C, it will automatically create a stub class with all public methods forwarding remoting messages over the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7871be2cbfca4586dc8324dc30024e78000e20" translate="yes" xml:space="preserve">
          <source>Whether or not the class field is public.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c27f426b94da259f5b60456e57d8a2eb8db3cb" translate="yes" xml:space="preserve">
          <source>Whether or not the class is &lt;a href=&quot;https://haxe.org/manual/lf-externs.html&quot;&gt;extern&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5ad735546e443dd215f2284a32adfc9c7644e2" translate="yes" xml:space="preserve">
          <source>Whether or not the class is actually an &lt;a href=&quot;https://haxe.org/manual/types-interfaces.html&quot;&gt;interface&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2275c156dc7de024b6a0643d867194cea162dd4c" translate="yes" xml:space="preserve">
          <source>Whether or not the enum is &lt;a href=&quot;https://haxe.org/manual/lf-externs.html&quot;&gt;extern&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442fccfba190f01547b7c47d36d28ddfa7d51617" translate="yes" xml:space="preserve">
          <source>Whether or not the field is public.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851289fd77c84e148bcf2e8f761196e3bcb21dab" translate="yes" xml:space="preserve">
          <source>Whether or not the field overrides another field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ce8ac36c614ee0c1d5bd54bc02eb04468f39e0" translate="yes" xml:space="preserve">
          <source>Whether or not the function argument is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c9e3aebbd7a1133338d60e89fb8f189d897459" translate="yes" xml:space="preserve">
          <source>Whether or not the type is &lt;a href=&quot;https://haxe.org/manual/dictionary.html#define-private-type&quot;&gt;private&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0bfe8279a5fd5e617622b7306ced9c09708e75" translate="yes" xml:space="preserve">
          <source>Whether or not the type is extern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b96a9ebf83964d6f3e10dc1a4e40659ca6ebb8" translate="yes" xml:space="preserve">
          <source>Whether or not the type is private.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b57fef7dc30b2659e1fbd66e5e75ab44a371cc" translate="yes" xml:space="preserve">
          <source>Whether or not the variable has been captured by a closure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4d205272273f7092eef5824445fb53cdb08f7f" translate="yes" xml:space="preserve">
          <source>While basic usage and patterns consistently work across platforms, some more complex operations may yield different results. This is a necessary trade- off to retain a certain level of performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9a65d7658fcb454c6b871c2b8a4593b62181dc" translate="yes" xml:space="preserve">
          <source>While it is possible to assign an instance of IntIterator to a variable or field, it is worth noting that IntIterator does not reset after being used in a for-loop. Subsequent uses of the same instance will then have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8deac9eb4e92c6352a1b91dd86b5aab507297b" translate="yes" xml:space="preserve">
          <source>While mainly intended to be used in macros, it works in non-macro code as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e74612bc90558af0a0b6bc796cbe14f193fed09" translate="yes" xml:space="preserve">
          <source>Will however follow also abstracts to their underlying implementation, if they are not a @:coreType abstract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92b26e4e39d44726f4332fbe5bf7b15b0872873" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;len&lt;/code&gt; bytes from &lt;code&gt;s&lt;/code&gt; starting by position specified by &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c172371f036d5fc83a93da34f0ee81f0043b0e8f" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;s&lt;/code&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8672fd33984728ba3ebe811bed6989cb7a0b7ee" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 16-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c27f8ee597a0952eb932ab5e8bf3149371b3cd" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 16-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eba1bdd7d775c3179d0f46092ccada1932113cf" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 24-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fd666cf3c32a99f8022eaa0f6373bb98a1ca4b" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 24-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f4d1cfa8c6ba7c31e275de1fa3e47896af6354" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 32-bit floating point number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4c35866dddf0191b365abd0917bc9075ef2aee" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 32-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b251f71587421a3b086464ed090fb28cac9a1f" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 64-bit double-precision floating point number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff53b13915b3f366e076ce1b7923943bb291b7b" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;x&lt;/code&gt; as 8-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64fc4c6f78d5089449488c08698f5486dd2abd1" translate="yes" xml:space="preserve">
          <source>Write all bytes stored in &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb24984bb307106bd26340b8daf806362b3a7ecd" translate="yes" xml:space="preserve">
          <source>Write one byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da1ebb3a3c65f44e1250e922542a6f81e7ef536" translate="yes" xml:space="preserve">
          <source>XML character data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396e1ca34a808f9f2b298b6e1d4a168b370e0dae" translate="yes" xml:space="preserve">
          <source>XML comment type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2294290ea977ddb805d03e6528337fb5a5cb8d72" translate="yes" xml:space="preserve">
          <source>XML doctype element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89e9148fe41194e529bc06604c7a668369a3d39" translate="yes" xml:space="preserve">
          <source>XML document type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bb6cb6e5d1859e01ebe34395d9a336259fefa1" translate="yes" xml:space="preserve">
          <source>XML element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77ffc0d861d34784a4699952ba9e8a1352bc1b3" translate="yes" xml:space="preserve">
          <source>XML parsed character data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc051292066a5afc43db9ca056a6931aefc6838" translate="yes" xml:space="preserve">
          <source>XML processing instruction type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8a993ceb8c1707c00289c58d54eb50df175cee" translate="yes" xml:space="preserve">
          <source>Xml</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ea3b73455df8bbdbf8f0b35feb87e1996ca34c" translate="yes" xml:space="preserve">
          <source>Xml node types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc47b955a40ab7202938616d001184bb08a0d941" translate="yes" xml:space="preserve">
          <source>Xml.CData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3159503d75f6cee2d4b5c3c378374831dbbda6" translate="yes" xml:space="preserve">
          <source>Xml.Comment()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02620d40c24a0e9ba2b2e54b18aef7b93714674f" translate="yes" xml:space="preserve">
          <source>Xml.DocType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b6fa56e83cddd659652c7185bda04c484d82b4" translate="yes" xml:space="preserve">
          <source>Xml.Document()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976feeb507a1f1bb07f6e4c7b73f8e9a8a2f51cd" translate="yes" xml:space="preserve">
          <source>Xml.Element()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae77a4641c35d4e75fcc18b4744a06a60ca9e9c" translate="yes" xml:space="preserve">
          <source>Xml.PCData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f09d25ae664e3ad10cb94b75dcfd5a796ad847" translate="yes" xml:space="preserve">
          <source>Xml.ProcessingInstruction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d77cac327bc12731c5f3a19306cdbb733ad6601" translate="yes" xml:space="preserve">
          <source>Xml.addChild()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dd61ac022d0e4c99f72498a04e3bfe338f7e70" translate="yes" xml:space="preserve">
          <source>Xml.attributes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5865c404ea6a1e5aef353150b6c88edb50354972" translate="yes" xml:space="preserve">
          <source>Xml.createCData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beaea70fe769829e5dea6e66fe58edc747045034" translate="yes" xml:space="preserve">
          <source>Xml.createComment()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730dcf708f14669ab67f6bcf3dfdd2971b5088ab" translate="yes" xml:space="preserve">
          <source>Xml.createDocType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c3399af8d48ac4df63f0d373f7f50cd43a29d9" translate="yes" xml:space="preserve">
          <source>Xml.createDocument()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267a4ddb6a10c2b0618c3898c7ee931368e6403c" translate="yes" xml:space="preserve">
          <source>Xml.createElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be16bfc4bff5e6b3639be6fba4b775f63c90d187" translate="yes" xml:space="preserve">
          <source>Xml.createPCData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5438d234751d3bcd72e40c3146c197a2c2ee2c15" translate="yes" xml:space="preserve">
          <source>Xml.createProcessingInstruction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29892711dc5c52688ea9e8cad446db71b9a084d" translate="yes" xml:space="preserve">
          <source>Xml.elements()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3344514b4021d704bdede74a0c75051c2dd9095" translate="yes" xml:space="preserve">
          <source>Xml.elementsNamed()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df80a52bc73a86fdfc96cf631525881215afba36" translate="yes" xml:space="preserve">
          <source>Xml.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777d6ad3ae923d7141973171915290918700ea85" translate="yes" xml:space="preserve">
          <source>Xml.firstChild()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1750d0136212ab37868de0a7a61373b28b465b30" translate="yes" xml:space="preserve">
          <source>Xml.firstElement()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4aa35da925335f60261974d2322c66890dd37d" translate="yes" xml:space="preserve">
          <source>Xml.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e467f3a372aacc3b571c8136ee47583d7468b2e3" translate="yes" xml:space="preserve">
          <source>Xml.insertChild()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283011bd598f978efbe76ccd73806fbf94d28d98" translate="yes" xml:space="preserve">
          <source>Xml.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc35f95e316ab3362eb357afcb2c546768211a5e" translate="yes" xml:space="preserve">
          <source>Xml.nodeName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fa336fda46d0546ccb7fdef026a1b16ad5bfe1" translate="yes" xml:space="preserve">
          <source>Xml.nodeType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa01ee1d504b88c7e1d3febff80fb51ee6b4a500" translate="yes" xml:space="preserve">
          <source>Xml.nodeValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5078913da3cc2bffda7c387648b4363add5b30e2" translate="yes" xml:space="preserve">
          <source>Xml.parent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a49495539c416fed77427fe5fa033d9c764175" translate="yes" xml:space="preserve">
          <source>Xml.parse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdc2edea18266dd9bc97d162ada5dbf2470f0ae" translate="yes" xml:space="preserve">
          <source>Xml.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99335c7d626b4ad90c46ba1e6930f0a50ab92d7b" translate="yes" xml:space="preserve">
          <source>Xml.removeChild()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c142b6a7ea3dea41bd9e63d9fc699dfbbcde136c" translate="yes" xml:space="preserve">
          <source>Xml.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647bfd5bfeb0190d080cec6b15f739368ce2a015" translate="yes" xml:space="preserve">
          <source>Xml.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c89aead603fa44d44fbe3d310288725a856c46f" translate="yes" xml:space="preserve">
          <source>XmlParser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0c20f2f540d543b1ec2fe399a686de141e3d77" translate="yes" xml:space="preserve">
          <source>XmlParser processes the runtime type information (RTTI) which is stored as a XML string in a static field &lt;code&gt;__rtti&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d7375135f15523e30b08a9f80226b5e76dda7c" translate="yes" xml:space="preserve">
          <source>XmlParserException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001aae531441f3e7a305a5aa1642b48e8bcdf16a" translate="yes" xml:space="preserve">
          <source>XmlType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd20e4736e65cde44e28a1e92aa083053f8bda8" translate="yes" xml:space="preserve">
          <source>XmlType(&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c463325e75a1212d5131c65474f8c7747619fa" translate="yes" xml:space="preserve">
          <source>XmlType.CData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168bdfd0891d6a9c8cd122a0f72249845b104c2a" translate="yes" xml:space="preserve">
          <source>XmlType.Comment()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd1397488ba6167ceddc7c90098b75f9b65cec7" translate="yes" xml:space="preserve">
          <source>XmlType.DocType()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ef780e9f8fef98f7be814064f8a2d1815ee8e5" translate="yes" xml:space="preserve">
          <source>XmlType.Document()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5f94435350782590c6e18a176261947e2ead37" translate="yes" xml:space="preserve">
          <source>XmlType.Element()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63d370dacf46dfa09c5a129f31ea581312c5bb7" translate="yes" xml:space="preserve">
          <source>XmlType.PCData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4860ca0ff296be1fb41e8747e60e2cbbfe362270" translate="yes" xml:space="preserve">
          <source>XmlType.ProcessingInstruction()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb0d31ac4e7a43a2def1b59d37b4c888dc7e0b5" translate="yes" xml:space="preserve">
          <source>[js] If &lt;code&gt;this.&lt;a href=&quot;#async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; is false, the callback functions are called before this method returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e15bb5c01e7dd56499e37c634cf791d3a519aee" translate="yes" xml:space="preserve">
          <source>`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e784aaad66d8d22c73667e1488fffbae1e32d8" translate="yes" xml:space="preserve">
          <source>a serialized value representing the result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2944d59e9498907d9d2d4d422795e88639d29bda" translate="yes" xml:space="preserve">
          <source>add a feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5e0d974e37c2abd189d6ef96a2dd30e40ecf70" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf7270188eccd0fb402ee35782ee637963647bb" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;https://api.haxe.org/cpp/UInt8.html&quot;&gt;UInt8&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70efad98709dfb28b0683f956d27f01680bc0605" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;metadataentry&quot;&gt;MetadataEntry&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3b04f2fa52389efbb2ab259ccf68f7d3cf56ba" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;typetree&quot;&gt;TypeTree&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa06eaf1745febe44b4669c98fb71473eaaddaf8" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;{params:&lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;, name:&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;}&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53611cb5f35fb639a3ef1756fdb1f83a05e82434" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../list&quot;&gt;List&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5566e62fb3595af65d05e4852f9dc72292bb2b4" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e81ba34709f6cbac044ab3186fe73208484f405" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;arraybufferviewdata&quot;&gt;ArrayBufferViewData&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9761b1016d973cafa5a41e64d19602f841e99b46" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;arraybufferviewimpl&quot;&gt;ArrayBufferViewImpl&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20f859df58d5d45aa6f294a90f8e221ee59bd85" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;expr&quot;&gt;Expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106cc35fb9dd0ec24985870eee1a724987ba9b30" translate="yes" xml:space="preserve">
          <source>alias for &lt;a href=&quot;https://api.haxe.org/sys/net/Socket.html&quot;&gt;Socket&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6d2aab4703e2159ed64d6a395b4a42a36171b6" translate="yes" xml:space="preserve">
          <source>alias for T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1890a7d8ffcab472c944f0a60f12e117f550d022" translate="yes" xml:space="preserve">
          <source>all the types that were compiled by Haxe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb3e762e75a20155da41dbcc1c534315abb62e4" translate="yes" xml:space="preserve">
          <source>always null on dynamic targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b652053c97356e1d2146f13fbb90088111fc11f0" translate="yes" xml:space="preserve">
          <source>an array of parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596da67fb6b3d1b128e6f21cf4a6b6004900a53e" translate="yes" xml:space="preserve">
          <source>an array of strings representing the object+method path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946b55730945907335b07fb5f69fd2e93a0f9093" translate="yes" xml:space="preserve">
          <source>array declarations if all their elements are values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660c659fae364c438e07fe4269de10ff7906281a" translate="yes" xml:space="preserve">
          <source>binary operators except &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;...&lt;/code&gt; and assignments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ea2cdf630bb5d86ad97c5371a78308d10ff648" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;&lt;a href=&quot;http#requestUrl&quot;&gt;haxe.Http.requestUrl&lt;/a&gt;(url)&lt;/code&gt; and receive the result as a &lt;code&gt;&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;&lt;/code&gt; (not available on flash)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c49de68b9a739975b8faf71dda255b46854580" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;&lt;a href=&quot;serializer#run&quot;&gt;Serializer.run&lt;/a&gt;()&lt;/code&gt; to obtain the serialized representation of a single argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11569e91e5ae3e243abf0e5070427f16dbc52818" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;&lt;a href=&quot;unserializer#run&quot;&gt;Unserializer.run&lt;/a&gt;()&lt;/code&gt; to unserialize a single value from a given String</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f54a6cc867121c6e9bf458a08fe5ba2c2ff665" translate="yes" xml:space="preserve">
          <source>check if a feature is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe63b365d7f5dcc2a2dc313b7588474a9f14742" translate="yes" xml:space="preserve">
          <source>class instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd9a349011f4725e482bc6bc145ec92ab109a82" translate="yes" xml:space="preserve">
          <source>cpp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf302763dc7a0de6fb3ec0a4d9b5e451f87b220" translate="yes" xml:space="preserve">
          <source>create a &lt;code&gt;new &lt;a href=&quot;http#Http&quot;&gt;haxe.Http&lt;/a&gt;(url)&lt;/code&gt;, register your callbacks for &lt;code&gt;onData&lt;/code&gt;, &lt;code&gt;onError&lt;/code&gt; and &lt;code&gt;onStatus&lt;/code&gt;, then call &lt;code&gt;request()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b4355e3a61265bf94bae7dc27a0605499c2157" translate="yes" xml:space="preserve">
          <source>create a &lt;code&gt;new &lt;a href=&quot;serializer#Serializer&quot;&gt;Serializer&lt;/a&gt;()&lt;/code&gt; instance, call its &lt;code&gt;serialize()&lt;/code&gt; method with any argument and finally retrieve the String representation from &lt;code&gt;toString()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096ad464fc0991cc91f16a92c47b022367831c39" translate="yes" xml:space="preserve">
          <source>create a &lt;code&gt;new &lt;a href=&quot;unserializer#Unserializer&quot;&gt;Unserializer&lt;/a&gt;()&lt;/code&gt; instance with a given serialization String, then call its &lt;code&gt;unserialize()&lt;/code&gt; method until all values are extracted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e59915e33a92e0ee14d7d24cfa244984121c5c" translate="yes" xml:space="preserve">
          <source>create the metadata expression for the given type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372f9c03ba5deea5f598777ffce513974e4924c2" translate="yes" xml:space="preserve">
          <source>crypto.Adler32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7183365afa1d8eabec7f204304d8e71d771b82de" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.equals()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9219138ee800a015676d541a508f0135e00bd55d" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173b9531957d9dc56d8e22c15e7eb8d9f3c3d01c" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.make()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e5aeb82b7e8dc93d0102d08cf67a7214eb36c0" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.read()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bd3cfbf58ecdc5702824f1decf04a06163f7ea" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2742ed356141c52073c689b9e174489eb6d6ffe" translate="yes" xml:space="preserve">
          <source>crypto.Adler32.update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aefda12fe24e04e841c72c3adc94bdfa24293f9" translate="yes" xml:space="preserve">
          <source>crypto.Base64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1d03d2fdddf120176485bccfa0562d7a04dd3f" translate="yes" xml:space="preserve">
          <source>crypto.Base64.BYTES()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b7d1bd64549b67af5efabdb23750e571a7977c" translate="yes" xml:space="preserve">
          <source>crypto.Base64.CHARS()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cbe4521e0250fb377857033f97d8270defc2af" translate="yes" xml:space="preserve">
          <source>crypto.Base64.decode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d6eef33502c8b7b4448a4cd082951b95b9b238" translate="yes" xml:space="preserve">
          <source>crypto.Base64.encode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb67c2019fb92e0c65698188d04ac2f8ed5c462f" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dac054f6a5a1c5182f89ea0729fb39df195367f" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.decode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9335026661943cc8564ca4fc849eab7d9a755f9" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.decodeBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd214a98963ad0617a46bc6af35a4272faf6e80" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.decodeString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e06def46f422f42a2e3ea6f658d08d22fdefe57" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.encode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad372e32a3f38884cecba2e47968e7e1093adae" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.encodeBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7db4a888a02adc4e5c2549a4a64c7da5c1ad9f6" translate="yes" xml:space="preserve">
          <source>crypto.BaseCode.encodeString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75b6098489b149947754b2ba8c3f467fcb84ff5" translate="yes" xml:space="preserve">
          <source>crypto.Crc32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f0d97d55fe54ed4203ef83acb15adf502599bc" translate="yes" xml:space="preserve">
          <source>crypto.Crc32.byte()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a0582627089d44eda374911864cd70c482d4be" translate="yes" xml:space="preserve">
          <source>crypto.Crc32.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3051832f32237294023f308bad354e698851b5a3" translate="yes" xml:space="preserve">
          <source>crypto.Crc32.make()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106a006eff8af733daec0e2ebb87823672d22792" translate="yes" xml:space="preserve">
          <source>crypto.Crc32.update()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8478db8abd3e929a6771e2014fe68bf6ff00e864" translate="yes" xml:space="preserve">
          <source>crypto.HashMethod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245c17acabf8782ee2ed7ede5ceabdd4e55afb8b" translate="yes" xml:space="preserve">
          <source>crypto.HashMethod.MD5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeda14dcc198a92ad26d4a0a95b7e521e4fc2e68" translate="yes" xml:space="preserve">
          <source>crypto.HashMethod.SHA1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0140d54242adcdd1b0977097d5ff6a306d4c36e3" translate="yes" xml:space="preserve">
          <source>crypto.HashMethod.SHA256</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c802934d7a93f06487cbbca5fe3b951cf02b8d73" translate="yes" xml:space="preserve">
          <source>crypto.Hmac</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b16ab20f8d96c599ffe6bacdb8948f0b25bfd7b" translate="yes" xml:space="preserve">
          <source>crypto.Hmac.make()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4a10caa34d69718a894ad940cfd7f6bf7dcc89" translate="yes" xml:space="preserve">
          <source>crypto.Md5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdac338649311fc1a94c501b34da7c02b9a3e40" translate="yes" xml:space="preserve">
          <source>crypto.Md5.encode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa519b954f70c6fa5aa6061c098223acb762137" translate="yes" xml:space="preserve">
          <source>crypto.Md5.make()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5dfccb552c2ef8b3fb9a1b16879153a474f5b10" translate="yes" xml:space="preserve">
          <source>crypto.Sha1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f89ff724408a5c961976d1a4b92505acd6e804" translate="yes" xml:space="preserve">
          <source>crypto.Sha1.encode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893a1e579a1b5ac230aab70d8e9675c5d6c2c57c" translate="yes" xml:space="preserve">
          <source>crypto.Sha1.make()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55fc33fd89a73d191236bb439586cf6282f67b7" translate="yes" xml:space="preserve">
          <source>crypto.Sha224</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1feb19f2c75ef9d13989f056752412ccbf440ab8" translate="yes" xml:space="preserve">
          <source>crypto.Sha224.encode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250f1245c279de815ae303c5a0f919bc88eeffde" translate="yes" xml:space="preserve">
          <source>crypto.Sha224.make()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f2af593542f2795a5b25d301fc403fa998027c" translate="yes" xml:space="preserve">
          <source>crypto.Sha256</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6ba44f091b2b7345cbedc7cc1b48b4fd92d626" translate="yes" xml:space="preserve">
          <source>crypto.Sha256.encode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42259fc69a5e435dcf71a32dc2685372af0a2566" translate="yes" xml:space="preserve">
          <source>crypto.Sha256.make()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f994533a5d976eed69aeae05e381bf6fa851e8" translate="yes" xml:space="preserve">
          <source>cs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c8634f3e9572e8f53ded83bb3855cb9d4c2109" translate="yes" xml:space="preserve">
          <source>day: 1 to 31</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b4fc8d04866ec39903c985f684d2cce2f7da8b" translate="yes" xml:space="preserve">
          <source>define the JS code that gets generated when a class or enum is accessed in a typed expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25dc2b8415fbba542f2d3c8bdb3209329dacf488" translate="yes" xml:space="preserve">
          <source>directory1/directory2/filename.extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afac0820b31f249dfde5837ac0d2de6bdb691e44" translate="yes" xml:space="preserve">
          <source>directory1\directory2\filename.extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f5bbecaebe15c3049db1b0f589be7487e9b204" translate="yes" xml:space="preserve">
          <source>ds.ArraySort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbf31f57ac6e524686ffc06be7fe5d8a634b021" translate="yes" xml:space="preserve">
          <source>ds.ArraySort.sort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19743d7a84d468dd289ee73738516b92c489833" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519d3973ae745618b84d9ded5dd4254dc304131f" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcac7b89be02bd6879a59abbf195c0991341ea7d" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b65969b997448d09f8e3162dd660eba331f4ae6" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1513f2e2b57db85d7797d640c2dde40d6e7f838a" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.keys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8de009d09da30713c3e073b79dbc9cfde387ee5" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa8687d7c7e5b37b1788c342474dff4fb50061e" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70dc860463d7d57857234443e19e0b5c66d6b30" translate="yes" xml:space="preserve">
          <source>ds.BalancedTree.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819095f4fdd380948ae411f68de39d9b843ace8d" translate="yes" xml:space="preserve">
          <source>ds.Either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20c97f7d27a33324b090c4d6ea17bb58f3f35f4" translate="yes" xml:space="preserve">
          <source>ds.Either.Left()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffab26b44d4550320182030ac21c94b7a244d4a0" translate="yes" xml:space="preserve">
          <source>ds.Either.Right()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027982a964ae7773c428da59b3d0012d9fecee36" translate="yes" xml:space="preserve">
          <source>ds.EnumValueMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ea304e361e33b5d24d2376bd8374b480f14843" translate="yes" xml:space="preserve">
          <source>ds.GenericCell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765ebc2b069a57ca346ac681217ae21dc853c3ca" translate="yes" xml:space="preserve">
          <source>ds.GenericCell.elt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05bd45eab0fade4eb0a5a4b9f00427acbb9e0d4" translate="yes" xml:space="preserve">
          <source>ds.GenericCell.next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bcb36915e2c8b1538d467a935b049c0748b2ec" translate="yes" xml:space="preserve">
          <source>ds.GenericStack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c17b6d59f36223cd495383f379ea0a2330889e" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a76615c5a441c1beaabada1034fc47a4179eaff" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.first()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64c2c204c2ff45a432633e572f19391c632a50f" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.head</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff233168ead7e071c9c9dff150545411155e9324" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.isEmpty()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c56cfb9cc4838e5d4470f9d6f8607893dce240" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0920949ae694c0896254110a3368ff62c3b8d9" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.pop()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e932b16a747c36c484307da55f44587ce6722d23" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e14ecee5e455ad7383dfb0f665f40b0e8c50a2" translate="yes" xml:space="preserve">
          <source>ds.GenericStack.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072ea6ffdc36b32b3a2a000538706f0351c097fd" translate="yes" xml:space="preserve">
          <source>ds.HashMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6358698525ea26652f89adf8a895232bfe324e" translate="yes" xml:space="preserve">
          <source>ds.HashMap.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f8da64defcb167bb50927dd9add1eb8a084f92" translate="yes" xml:space="preserve">
          <source>ds.HashMap.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8f37679e39e166b0a9e6c6e447fc69cbf005ae" translate="yes" xml:space="preserve">
          <source>ds.HashMap.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bfe29b3e6ed7cddd24c83def6501cb9fa2bc98" translate="yes" xml:space="preserve">
          <source>ds.HashMap.keys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973098af1a92f4f8a64e76b8e4483a8c59dbbef3" translate="yes" xml:space="preserve">
          <source>ds.HashMap.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6d11c7afe56e6179b74e5b781e1d157705fc9f" translate="yes" xml:space="preserve">
          <source>ds.HashMap.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acffd57bff47c00d437eeddfc1c77fabd0a92a4" translate="yes" xml:space="preserve">
          <source>ds.IntMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9607ebab0a2f939cae556cd3332f4c87c65ea25" translate="yes" xml:space="preserve">
          <source>ds.IntMap.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d144523ddc8ee018085f89637910d3baf2068c06" translate="yes" xml:space="preserve">
          <source>ds.IntMap.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10e87fa116e3257006d75138083fc68d3c0b689" translate="yes" xml:space="preserve">
          <source>ds.IntMap.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf732d464982f949cffc192d35c19063e0e26443" translate="yes" xml:space="preserve">
          <source>ds.IntMap.keys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1453a1142e894add7a8a9d461bc9d95e8fdf964" translate="yes" xml:space="preserve">
          <source>ds.IntMap.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22c47630396b08ddf0588bb73a7e8cb937a3026" translate="yes" xml:space="preserve">
          <source>ds.IntMap.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1600e4860adfdf7bc03db89b651c68d65fafdd6f" translate="yes" xml:space="preserve">
          <source>ds.IntMap.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d439beb3ce77878669db7cdbb4ffc687a6a05de" translate="yes" xml:space="preserve">
          <source>ds.ListSort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897d9d572ac01081d9862a575a0af7ec41f1f370" translate="yes" xml:space="preserve">
          <source>ds.ListSort.sort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8222317075d25b6af598ce61e6521d4081133d" translate="yes" xml:space="preserve">
          <source>ds.ListSort.sortSingleLinked()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe66516b2fdd2b97bd82083f4f8c03342369a7cc" translate="yes" xml:space="preserve">
          <source>ds.ObjectMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f055fe4e3d1377d86d57354706a570c135956a92" translate="yes" xml:space="preserve">
          <source>ds.ObjectMap.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7b6a0e31516d332488a328c48b4f67368ac74a" translate="yes" xml:space="preserve">
          <source>ds.ObjectMap.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d803de710749cfb71b066fdca7de9a834e5be8d7" translate="yes" xml:space="preserve">
          <source>ds.ObjectMap.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be514a21bfaeb208eb9b94012373c60210fe9f1" translate="yes" xml:space="preserve">
          <source>ds.ObjectMap.keys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e3301da8a6dde0edf6cfb40d9c6913922bab69" translate="yes" xml:space="preserve">
          <source>ds.ObjectMap.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8833d88bcd42eb9b23ed082e8794523b0c7967b3" translate="yes" xml:space="preserve">
          <source>ds.ObjectMap.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9529fe36fbcd284dcf980391289c2d86cba8752" translate="yes" xml:space="preserve">
          <source>ds.ObjectMap.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647e62e73018b2cb1a0533c4a31aa5cd9c2a6d78" translate="yes" xml:space="preserve">
          <source>ds.Option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec83c13ae08f4ce5a3e92c33f9357354812604aa" translate="yes" xml:space="preserve">
          <source>ds.Option.None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bf00b6c6b70fcf7a6b0509e5bce3c6c7f204f4" translate="yes" xml:space="preserve">
          <source>ds.Option.Some()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7570f1cf427d43556282f60c0377e8e63debb928" translate="yes" xml:space="preserve">
          <source>ds.StringMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d022fc62efc9d7b6224320923e5173653c16f1" translate="yes" xml:space="preserve">
          <source>ds.StringMap.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bedee7b399f26cdc45797721990a063144ef07b" translate="yes" xml:space="preserve">
          <source>ds.StringMap.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d6b42ef3ca661cde8b03e7bc71e17816ca4a19" translate="yes" xml:space="preserve">
          <source>ds.StringMap.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4176f2bb90ea8bd52fab0962bdfa9ba829b352e8" translate="yes" xml:space="preserve">
          <source>ds.StringMap.keys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fbf39d59bcd9a628ea1ff84354497604db71ae" translate="yes" xml:space="preserve">
          <source>ds.StringMap.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddf2912ad9de8cd540d1f231f3f637382d49b3a" translate="yes" xml:space="preserve">
          <source>ds.StringMap.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbb4df849269e867101148505784f91a404ba0b" translate="yes" xml:space="preserve">
          <source>ds.StringMap.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2a1378cfc5accb392bc9744e54b0395f6bf9b2" translate="yes" xml:space="preserve">
          <source>ds.TreeNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f270a9486f5af4eea7b2e8add8b862ef9b11b23" translate="yes" xml:space="preserve">
          <source>ds.TreeNode.get_height()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733cd09c9e2c4bdc3a434a4130f2563337d191b3" translate="yes" xml:space="preserve">
          <source>ds.TreeNode.key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7ea8292b00aaa818dd7f78bb0165f65d613be9" translate="yes" xml:space="preserve">
          <source>ds.TreeNode.left</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfd8ec5e985e07b10d00a713a368671e36c4258" translate="yes" xml:space="preserve">
          <source>ds.TreeNode.right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7046cf78d799c2a783b781fb531bdb3a87ce7fd" translate="yes" xml:space="preserve">
          <source>ds.TreeNode.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40e05fe650fcc45fbe20b07d574f00a72ad3206" translate="yes" xml:space="preserve">
          <source>ds.TreeNode.value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7074270172a0acae4e42c859a5bde1f83d0fde26" translate="yes" xml:space="preserve">
          <source>ds.UnsafeStringMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7644823ffbe67fa55fed0434402dbb1497c03303" translate="yes" xml:space="preserve">
          <source>ds.UnsafeStringMap.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02edd934755d4af6407be3e1e3ca797cf306845" translate="yes" xml:space="preserve">
          <source>ds.UnsafeStringMap.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fce7db23acdfea4f2bf7932accb38b0a66436a7" translate="yes" xml:space="preserve">
          <source>ds.UnsafeStringMap.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec96df3e910831468ffefaf36170cf6f0e74fed" translate="yes" xml:space="preserve">
          <source>ds.UnsafeStringMap.keys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7081c4578c12811e1ddf04a8d137099d60dbcda1" translate="yes" xml:space="preserve">
          <source>ds.UnsafeStringMap.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd583ced9e46c134052ddd8a770a3d4b9b0698e" translate="yes" xml:space="preserve">
          <source>ds.UnsafeStringMap.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881ebf459c28f0f35297396660c4006b9a3df332" translate="yes" xml:space="preserve">
          <source>ds.UnsafeStringMap.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e8b70b9e2b44a258065aeb315121b1395eb141" translate="yes" xml:space="preserve">
          <source>ds.Vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a302acb42979f535a9bbad77eb5042cd0b38aa5d" translate="yes" xml:space="preserve">
          <source>ds.Vector.blit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75cc54c5dcfc9d64ea9552b4def2edb8050f6b4e" translate="yes" xml:space="preserve">
          <source>ds.Vector.copy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7aa30e0aa35fcaea6d8650b9639d5aff38aa5ad" translate="yes" xml:space="preserve">
          <source>ds.Vector.fromArrayCopy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e5217a894dd075d71d30fcbc8e71b928aee1d1" translate="yes" xml:space="preserve">
          <source>ds.Vector.fromData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec7ad9018f04612d0724775daadf18a1840b193" translate="yes" xml:space="preserve">
          <source>ds.Vector.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231133bfcbf70cb8e417c6c528d7be4cc5ec042c" translate="yes" xml:space="preserve">
          <source>ds.Vector.join()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012fd2285d8cf010d7ea163fe0b3b098d7b24d03" translate="yes" xml:space="preserve">
          <source>ds.Vector.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0e7c73d525fbc868c9f83988b7d13ee15af936" translate="yes" xml:space="preserve">
          <source>ds.Vector.map()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c839f3c6ca1dda28c30293fb453e2b771bec3b3" translate="yes" xml:space="preserve">
          <source>ds.Vector.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8653bb9e11261b87fdb206b32cffc21683baaf" translate="yes" xml:space="preserve">
          <source>ds.Vector.sort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5be2b036f641c25900849b164dc3662b87a2f2" translate="yes" xml:space="preserve">
          <source>ds.Vector.toArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89402961a0b7965053a7ad18dd27834b73dadfac" translate="yes" xml:space="preserve">
          <source>ds.Vector.toData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293ef544bbfefb8b363c2c4d576318afa1736141" translate="yes" xml:space="preserve">
          <source>ds.WeakMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050da35d9904982fc7a4f512a213b285a3e873e9" translate="yes" xml:space="preserve">
          <source>ds.WeakMap.exists()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f565f276046fadc7e9c2709b2eeefd576e51abf" translate="yes" xml:space="preserve">
          <source>ds.WeakMap.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6253b29fddedff1ba6ed3cc3e6b524b00151e4" translate="yes" xml:space="preserve">
          <source>ds.WeakMap.iterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="750b29eec88431504058e9978e334a79c121d573" translate="yes" xml:space="preserve">
          <source>ds.WeakMap.keys()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e2d3cde4392784562ab9a4a8dcf21ed6e2c141" translate="yes" xml:space="preserve">
          <source>ds.WeakMap.remove()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65a8736eb6b11af7b35fb472c99562d4497fb45c" translate="yes" xml:space="preserve">
          <source>ds.WeakMap.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cc7f41a787c099ac75f228beb99087a259d25e" translate="yes" xml:space="preserve">
          <source>ds.WeakMap.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302e64cbd4e855a0de0a853b7eae2114ddf09597" translate="yes" xml:space="preserve">
          <source>e++ (op = OpIncrement, postFix = true) e-- (op = OpDecrement, postFix = true) ++e (op = OpIncrement, postFix = false) --e (op = OpDecrement, postFix = false) -e (op = OpNeg, postFix = false) !e (op = OpNot, postFix = false) ~e (op = OpNegBits, postFix = false)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38928ead5e1cea8a6ff64e14a2dd83f18649fb76" translate="yes" xml:space="preserve">
          <source>exp(1.0) is approximately 2.718281828459.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef05a96057df1c3e6f0d2593b5cb2beb54b0d3a" translate="yes" xml:space="preserve">
          <source>extended by &lt;a href=&quot;contextall&quot;&gt;ContextAll&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6259962b3b90b5c24e468b47a1056f449c9bf031" translate="yes" xml:space="preserve">
          <source>extended by &lt;a href=&quot;enumvaluemap&quot;&gt;EnumValueMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc7fd56f312a78d99ee7cf4fabd261fdafcbdd4" translate="yes" xml:space="preserve">
          <source>extended by &lt;a href=&quot;https://api.haxe.org/cs/io/NativeInput.html&quot;&gt;NativeInput&lt;/a&gt;, &lt;a href=&quot;bufferinput&quot;&gt;BufferInput&lt;/a&gt;, &lt;a href=&quot;bytesinput&quot;&gt;BytesInput&lt;/a&gt;, &lt;a href=&quot;https://api.haxe.org/java/io/NativeInput.html&quot;&gt;NativeInput&lt;/a&gt;, &lt;a href=&quot;https://api.haxe.org/python/io/NativeInput.html&quot;&gt;NativeInput&lt;/a&gt;, &lt;a href=&quot;https://api.haxe.org/sys/io/FileInput.html&quot;&gt;FileInput&lt;/a&gt;, &lt;a href=&quot;https://api.haxe.org/sys/io/ProcessInput.html&quot;&gt;ProcessInput&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1511e96e5e62194feb72395fafd2bddce5b001" translate="yes" xml:space="preserve">
          <source>extended by &lt;a href=&quot;https://api.haxe.org/cs/io/NativeOutput.html&quot;&gt;NativeOutput&lt;/a&gt;, &lt;a href=&quot;bytesoutput&quot;&gt;BytesOutput&lt;/a&gt;, &lt;a href=&quot;https://api.haxe.org/java/io/NativeOutput.html&quot;&gt;NativeOutput&lt;/a&gt;, &lt;a href=&quot;https://api.haxe.org/python/io/NativeOutput.html&quot;&gt;NativeOutput&lt;/a&gt;, &lt;a href=&quot;https://api.haxe.org/sys/io/FileOutput.html&quot;&gt;FileOutput&lt;/a&gt;, &lt;a href=&quot;https://api.haxe.org/sys/io/ProcessOutput.html&quot;&gt;ProcessOutput&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54ca2b86c80eee8ec5e448e7fa49ce9829a1d01" translate="yes" xml:space="preserve">
          <source>extended by &lt;a href=&quot;https://api.haxe.org/cs/system/collections/generic/IList_1.html&quot;&gt;IList_1&lt;/a&gt;, &lt;a href=&quot;https://api.haxe.org/cs/system/collections/IDictionary.html&quot;&gt;IDictionary&lt;/a&gt;, &lt;a href=&quot;https://api.haxe.org/cs/system/collections/IList.html&quot;&gt;IList&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6394a85e80382f3b545ee9b9938b88c0a33e98e" translate="yes" xml:space="preserve">
          <source>extended by &lt;a href=&quot;https://api.haxe.org/js/RegExpMatch.html&quot;&gt;RegExpMatch&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b25c0c27ecb707bd2b87f56e560c999532f8c7f" translate="yes" xml:space="preserve">
          <source>extended by &lt;a href=&quot;stringinput&quot;&gt;StringInput&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82059164137f5964cedd4434434ea2fd0e1ab5b" translate="yes" xml:space="preserve">
          <source>extends &lt;a href=&quot;balancedtree&quot;&gt;BalancedTree&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3f4a6114e3b76d2c0d9879695fa3e10b17a7a8" translate="yes" xml:space="preserve">
          <source>extends &lt;a href=&quot;bytesinput&quot;&gt;BytesInput&lt;/a&gt; &amp;rsaquo; &lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6677db7511b573e6de6fe958f2779bb059f42445" translate="yes" xml:space="preserve">
          <source>extends &lt;a href=&quot;context&quot;&gt;Context&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e89788c0a922589c4278565ab9a58de0443d9ee" translate="yes" xml:space="preserve">
          <source>extends &lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab08b3de2c454acb2576d34a63618091143403b" translate="yes" xml:space="preserve">
          <source>extends &lt;a href=&quot;output&quot;&gt;Output&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb6190f66ce3fb3c935f9df8987a53b8ad125bc" translate="yes" xml:space="preserve">
          <source>extern.AsVar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ec002d28510594e1194d3c7cf697bc7e48df71" translate="yes" xml:space="preserve">
          <source>extern.EitherType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ff5aa1b2030ecc46e35692d79a309dd4371631" translate="yes" xml:space="preserve">
          <source>extern.Rest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6117e45ab57f8660d866a21ca5e9d2c31dbc1945" translate="yes" xml:space="preserve">
          <source>flash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df7ebe746d1b77a0eec17ee6e4f309133d142b5" translate="yes" xml:space="preserve">
          <source>format.JsonParser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230f5b6d0543b98510dcfec3603420bdb2c32b39" translate="yes" xml:space="preserve">
          <source>format.JsonParser.parse()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a892a7f8b8bfd68f68eb42297300f453a87fa43a" translate="yes" xml:space="preserve">
          <source>format.JsonPrinter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26dc5e55f93ec6e8f26fc91de8e989fb5be5a370" translate="yes" xml:space="preserve">
          <source>format.JsonPrinter.print()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca7b5b7c5b75167905298db5edba61ba2f2ac29" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; to &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16884fcfeb273ae7e82083cd0be386e1e83aa75d" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;lt;T&amp;gt; to &lt;a href=&quot;../dynamic&quot;&gt;Dynamic&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba86598d0ae581a19dc1fd59d7c2119394caef8" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt; to &lt;a href=&quot;../int&quot;&gt;Int&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e60446ae42e363def195ec4283b769450183922" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt; to &lt;a href=&quot;float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b59e30643ea252a3bc6cb2c6d8820257bc1d3e9" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt; to &lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4dba1bcbeaa7fedfb3c823bbce1a9306d01f6a" translate="yes" xml:space="preserve">
          <source>from T to T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6ced5b7edb5ab64316c8e7693d1a067a988194" translate="yes" xml:space="preserve">
          <source>from T2, T1 to T2, T1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe5c1844624df9b142d4bb8619e46ea137b1c88" translate="yes" xml:space="preserve">
          <source>from __Int64,  to __Int64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20f18c50d6adefa812aab1afb17308fa01814de" translate="yes" xml:space="preserve">
          <source>generate the JS code for a given typed expression-value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4935487742a4b19ed36d3708bed954c5f7c3522" translate="yes" xml:space="preserve">
          <source>generate the JS code for any given typed expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2562f89eabc1c93b3f1fa0a5d59fa924be1c92" translate="yes" xml:space="preserve">
          <source>haxe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4016e2da2b4d598bde3103c8cc5f459da260616" translate="yes" xml:space="preserve">
          <source>haxe.crypto</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fab71091f99c331c2b942f3a70d9ec8595c19e6" translate="yes" xml:space="preserve">
          <source>haxe.ds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e8485670049c6a6fe073ced8974434532d0a7a" translate="yes" xml:space="preserve">
          <source>haxe.extern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b3441d182f8f72645020648824cd65dfaaa547" translate="yes" xml:space="preserve">
          <source>haxe.format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec472de394479f6497b4344aead287a1e417d17c" translate="yes" xml:space="preserve">
          <source>haxe.io</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9425243e8ddc0956a410da4c73199e6c28be359" translate="yes" xml:space="preserve">
          <source>haxe.macro</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ede42e63e58e49a33ba5e7d1507511f946ed7ed" translate="yes" xml:space="preserve">
          <source>haxe.remoting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94cadbd569282955f45caca188e43a2d55b3e9c" translate="yes" xml:space="preserve">
          <source>haxe.rtti</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445ea479f0c187170d8b5ed42600241c8d08598d" translate="yes" xml:space="preserve">
          <source>haxe.unit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7f65539d6c6eb344ce720781bf46e2a9a5632d" translate="yes" xml:space="preserve">
          <source>haxe.web</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af45f1ea7140648c603893d5156ee2425c8ba161" translate="yes" xml:space="preserve">
          <source>haxe.xml</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765e25c871638eaeda77b8d4f4c5ef50e928446d" translate="yes" xml:space="preserve">
          <source>haxe.xml.XmlParserException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8173fc908c75f7589e4cc8f907265708c9f49dfb" translate="yes" xml:space="preserve">
          <source>haxe.zip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9fe3c0450a180d111405ace687410d20d0d0895" translate="yes" xml:space="preserve">
          <source>hl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47855810f1356e4d448657ed58d09568e502f71" translate="yes" xml:space="preserve">
          <source>hour: 0 to 23</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90ced9c0a61a71d1d3dc29e58c41dae12caf30f" translate="yes" xml:space="preserve">
          <source>identifiers &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;true&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../bool&quot;&gt;false&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db3c0cd07e62687019f3c30ef0c7d8a8966c726" translate="yes" xml:space="preserve">
          <source>if K is a &lt;code&gt;&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;haxe/ds/stringmap#StringMap&quot;&gt;haxe.ds.StringMap&lt;/a&gt;&lt;/code&gt; is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867328ac4f90913dcdfe6a8582e4230dcfa8920c" translate="yes" xml:space="preserve">
          <source>if K is an &lt;code&gt;&lt;a href=&quot;enumvalue&quot;&gt;EnumValue&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;haxe/ds/enumvaluemap#EnumValueMap&quot;&gt;haxe.ds.EnumValueMap&lt;/a&gt;&lt;/code&gt; is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2bdb36a21676f42502df182351e13d022e3bd5" translate="yes" xml:space="preserve">
          <source>if K is an &lt;code&gt;&lt;a href=&quot;int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;haxe/ds/intmap#IntMap&quot;&gt;haxe.ds.IntMap&lt;/a&gt;&lt;/code&gt; is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb431d1590d47e9b7121dd7a4eb9e331b441256" translate="yes" xml:space="preserve">
          <source>if K is any other class or structure, &lt;code&gt;&lt;a href=&quot;haxe/ds/objectmap#ObjectMap&quot;&gt;haxe.ds.ObjectMap&lt;/a&gt;&lt;/code&gt; is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4be3342ac54171d9f822ad164142229e801b92d" translate="yes" xml:space="preserve">
          <source>if K is any other type, it causes a compile-time error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d740d42c1a46d2eb9e7018413d8e91b09995b598" translate="yes" xml:space="preserve">
          <source>implemented by &lt;a href=&quot;amfconnection&quot;&gt;AMFConnection&lt;/a&gt;, &lt;a href=&quot;asyncadapter&quot;&gt;AsyncAdapter&lt;/a&gt;, &lt;a href=&quot;asyncdebugconnection&quot;&gt;AsyncDebugConnection&lt;/a&gt;, &lt;a href=&quot;delayedconnection&quot;&gt;DelayedConnection&lt;/a&gt;, &lt;a href=&quot;httpasyncconnection&quot;&gt;HttpAsyncConnection&lt;/a&gt;, &lt;a href=&quot;localconnection&quot;&gt;LocalConnection&lt;/a&gt;, &lt;a href=&quot;socketconnection&quot;&gt;SocketConnection&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26975df4154e0aa1ff5850d1a4622551cbfd7c89" translate="yes" xml:space="preserve">
          <source>implemented by &lt;a href=&quot;ds/enumvaluemap&quot;&gt;EnumValueMap&lt;/a&gt;, &lt;a href=&quot;ds/intmap&quot;&gt;IntMap&lt;/a&gt;, &lt;a href=&quot;ds/objectmap&quot;&gt;ObjectMap&lt;/a&gt;, &lt;a href=&quot;ds/stringmap&quot;&gt;StringMap&lt;/a&gt;, &lt;a href=&quot;ds/unsafestringmap&quot;&gt;UnsafeStringMap&lt;/a&gt;, &lt;a href=&quot;ds/weakmap&quot;&gt;WeakMap&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b90307a42ff5e337d386cdd3877fcffc0e9a3a" translate="yes" xml:space="preserve">
          <source>implemented by &lt;a href=&quot;externalconnection&quot;&gt;ExternalConnection&lt;/a&gt;, &lt;a href=&quot;httpconnection&quot;&gt;HttpConnection&lt;/a&gt;, &lt;a href=&quot;syncsocketconnection&quot;&gt;SyncSocketConnection&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680a64aaa9bbdd834a4747ae383e73811ef54cb0" translate="yes" xml:space="preserve">
          <source>implements &lt;a href=&quot;../imap&quot;&gt;IMap&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../int&quot;&gt;Int&lt;/a&gt;, T&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a4558df0cbdc3317b19368a1fffbd4636e31eb" translate="yes" xml:space="preserve">
          <source>implements &lt;a href=&quot;../imap&quot;&gt;IMap&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;, T&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf6558e2b9c709105dd2952ead68ce560a7e4e7" translate="yes" xml:space="preserve">
          <source>implements &lt;a href=&quot;../imap&quot;&gt;IMap&lt;/a&gt;&amp;lt;K, V&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023e0ff05e718cab995b107204f125520c287340" translate="yes" xml:space="preserve">
          <source>implements &lt;a href=&quot;asyncconnection&quot;&gt;AsyncConnection&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248c21aa877b67d94dc3b37752f09d89e858543d" translate="yes" xml:space="preserve">
          <source>implements &lt;a href=&quot;connection&quot;&gt;Connection&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b45b396e0557d0e998afed0b8164fe35c9b4a1" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;arraybufferview&quot;&gt;haxe.io.ArrayBufferView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9cf6aa11a1346a56f27c4ea1c63524e032e3cb" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;balancedtree&quot;&gt;haxe.ds.BalancedTree&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dec6f07830cb6bdee274dd9f3396e7e353b329" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;bytesdata&quot;&gt;haxe.io.BytesData&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e37f0d3b24da5cf15ce26a1cb50f1871235b0c" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;callstack&quot;&gt;haxe.CallStack&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045f229204fd8ef47543e8b6eb1552d0c1f646d0" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;check&quot;&gt;haxe.xml.Check&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cd323f5db614dc0e43a127a3a9eb741c580652" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;compilationserver&quot;&gt;haxe.macro.CompilationServer&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc550b6c269a05d79d77cb51b93179da003a3ce" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;compiler&quot;&gt;haxe.macro.Compiler&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1135532a20cb9d9f7da150ebe0e16679a7dc6486" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;constraints&quot;&gt;haxe.Constraints&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f4684f030f45d1f9c31c9383deadc39c6b29a5" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;ctype&quot;&gt;haxe.rtti.CType&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a47bd4956d1f60b6dc5e6b778459c0cd47e6fe7" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;dispatch&quot;&gt;haxe.web.Dispatch&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f59ae6f9052a1ca0295617a77179f76f578848" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;entry&quot;&gt;haxe.zip.Entry&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2c21853b295a31862c6c50a545e993bc3475a1" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;enumtools&quot;&gt;haxe.EnumTools&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fac8ea2acc9f409f8253b1b22bde1854befe944" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;expr&quot;&gt;haxe.macro.Expr&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc2b3aba3df770cc242a1b86a59b486a99503f0" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;exprtools&quot;&gt;haxe.macro.ExprTools&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f653913971d3e62b75c70ff49e7e90798922d8a4" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;float32array&quot;&gt;haxe.io.Float32Array&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6660ef202e51099f3324f64949e5b07ec5a27e5" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;float64array&quot;&gt;haxe.io.Float64Array&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769e81985e63c8055f8abec8a1ce5cbfea29fb2d" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;genericstack&quot;&gt;haxe.ds.GenericStack&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6d5290dd53bf4e66ffc43a2a600751688b29a8" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;hmac&quot;&gt;haxe.crypto.Hmac&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc34062abc8670ab8eace282d8f5ebd6e1fda0a" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;huffman&quot;&gt;haxe.zip.Huffman&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c99258f2f3f3649fff74cb6776d6ef9b423a1b" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;int32array&quot;&gt;haxe.io.Int32Array&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8126c2d0213d9624fecf7fb1265737a576dc6e" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;mainloop&quot;&gt;haxe.MainLoop&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39d3812a566c04c0ca745d91fc1e7844d74b073" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;parser&quot;&gt;haxe.xml.Parser&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc1fe0d80dba906ccfe3b569ea48f11c7b5cb4c" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;socketprotocol&quot;&gt;haxe.remoting.SocketProtocol&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a1ed2af749435436e221c2e947c1f65785c60f" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;type&quot;&gt;Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee85cd4e68f6128a790c7b9432f1701e60a7cef8" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;type&quot;&gt;haxe.macro.Type&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da9c22ba1eacbbcef8d973ef1687007e8d01440" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;uint16array&quot;&gt;haxe.io.UInt16Array&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63824b83f703ad8b35c694af6197fd1becfe9ad9" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;uint32array&quot;&gt;haxe.io.UInt32Array&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085b91d56cd35d3621218bc20e0f217b79c8ccad" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;uint8array&quot;&gt;haxe.io.UInt8Array&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090fa3d223b9db65130e3bbb663dd816c24ead2f" translate="yes" xml:space="preserve">
          <source>import &lt;a href=&quot;xml&quot;&gt;Xml&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2322f966bbf03bbfae2791ed99f5d18af517f057" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d313e4bfc706f3270b1bbf8eec4e9d7b21cf3db6" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferView.EMULATED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8dec63da7a792fb96a7e79906bc65b6e9e65677" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferView.buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2812149b18f7dd14ac705ff1299069b10cae6038" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferView.byteLength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da01b5d00934868f056384f84801e35e7d24034" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferView.byteOffset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8c71703d8faf389cefcab1ee63da2afb4cc3f1" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferView.fromBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd88a0ef3146284368540a100cd500cd6649f90" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferView.fromData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3b9b27a09a4c38b68b835162a1e599597a817a" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferView.getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af01acf07d3c6b322792ccaf09ab21b9b2e24e3" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferView.sub()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa32d69e3f98ef5a3d686a31def53988a3f64dd4" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferView.subarray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29e15b915228ebe832bbde5c6ea586e21a26059" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferViewData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192ae5c89a41626f9b0a9193c496aae593739343" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferViewImpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0881ca7b451e6a57f10a51259634cc0730416d2" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferViewImpl.byteLength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73abe6cbab0f097b8c360ea2c7e2996df405bebd" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferViewImpl.byteOffset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45c8105c2479b9f1d391393bbc5a40e4d1c5d7e" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferViewImpl.bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ce85254b7d6503a2328ef494b6b29f742186dc" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferViewImpl.sub()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f480641f6eecfc16ac3c635a090b00ef90370490" translate="yes" xml:space="preserve">
          <source>io.ArrayBufferViewImpl.subarray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b346311a6f4504578c2b9f6c3f4c9182c74b54aa" translate="yes" xml:space="preserve">
          <source>io.BufferInput</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365146d038661a80ec3bede7e3672c1ddd639b63" translate="yes" xml:space="preserve">
          <source>io.BufferInput.available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d3f9283be0d797bcc71b668fbc2ecde9870ce4" translate="yes" xml:space="preserve">
          <source>io.BufferInput.buf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43022fb0eab01629219cc2ce7cd24d312c34066a" translate="yes" xml:space="preserve">
          <source>io.BufferInput.i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f412369b94539f45856f6ed92d96aeb2b010d0a1" translate="yes" xml:space="preserve">
          <source>io.BufferInput.pos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc4ec8f0d0a00e658a2d09cf8eeadf8d7dfefb2" translate="yes" xml:space="preserve">
          <source>io.BufferInput.refill()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba8db4d6d1616fa9910494b7bf4fa1ea57f8b62" translate="yes" xml:space="preserve">
          <source>io.Bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8ee3b1647e90f37fe5cbead5135d66c6d2f037" translate="yes" xml:space="preserve">
          <source>io.Bytes.alloc()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6c32c6cd61204ba9e546c4c389473b03fe7ecf" translate="yes" xml:space="preserve">
          <source>io.Bytes.blit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff6656cac5021ae7773ddd3c7eee2caba5a4493" translate="yes" xml:space="preserve">
          <source>io.Bytes.compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9411a15463cde65ce53bf3c9dcb4aaa65070b03d" translate="yes" xml:space="preserve">
          <source>io.Bytes.fastGet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a2044b7b10091a6ff59ff9904c4f0ad74904e2" translate="yes" xml:space="preserve">
          <source>io.Bytes.fill()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f0dc9de0b106b174f5bee4905da9b7ce5841cc" translate="yes" xml:space="preserve">
          <source>io.Bytes.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a52cf146d42859e9aa241a70c2a2ae4a199282f" translate="yes" xml:space="preserve">
          <source>io.Bytes.getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4beb8c45b142a1c33cf6a3469cc31be900b80e0" translate="yes" xml:space="preserve">
          <source>io.Bytes.getDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d8caab1b2146eea1b352b4b02d4bb0953cd72d" translate="yes" xml:space="preserve">
          <source>io.Bytes.getFloat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3dd3ff63f1283c2ee766a32b1b9c73b02876e73" translate="yes" xml:space="preserve">
          <source>io.Bytes.getInt32()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d28900ba7f749a9249328c7635c7d28871415c" translate="yes" xml:space="preserve">
          <source>io.Bytes.getInt64()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442a7c5274325603a2bd118e005ebc415caefda7" translate="yes" xml:space="preserve">
          <source>io.Bytes.getString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf3cfc002ef79e3fd61347a1fe5781a8dc2e294" translate="yes" xml:space="preserve">
          <source>io.Bytes.getUInt16()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea764edda6e256143b31c7c4bfe15ca2b84171cd" translate="yes" xml:space="preserve">
          <source>io.Bytes.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d4be284ad25d4c6f9206a12c27605e1cdda3ed" translate="yes" xml:space="preserve">
          <source>io.Bytes.ofData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a3caa08e1352c178e5eeac2f6beeda8b0f530e" translate="yes" xml:space="preserve">
          <source>io.Bytes.ofString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a0e1c625d5797b16d72a9d0aeb1e6cf8ce15d3" translate="yes" xml:space="preserve">
          <source>io.Bytes.readString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388151a39f99d8f1e250c2db2ee88a522c7ebfbf" translate="yes" xml:space="preserve">
          <source>io.Bytes.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a406a0e63d1a03a10ba835260c2cc9d7a78a18" translate="yes" xml:space="preserve">
          <source>io.Bytes.setDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a04e608e27a21266b50c228bcdb0eae16790c6" translate="yes" xml:space="preserve">
          <source>io.Bytes.setFloat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6760de77afdd9e19df5d88d0ac36e63bf449ca" translate="yes" xml:space="preserve">
          <source>io.Bytes.setInt32()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71d8383f623be169c4143602cad6f227104c9eb" translate="yes" xml:space="preserve">
          <source>io.Bytes.setInt64()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923bdfd3ecfb03f151686fc90df78171c3279da5" translate="yes" xml:space="preserve">
          <source>io.Bytes.setUInt16()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af116b488e680591af8fae81f4bb08e4d6e889ed" translate="yes" xml:space="preserve">
          <source>io.Bytes.sub()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ef9d484f448f0624709088f9a5bf5d660d9b42" translate="yes" xml:space="preserve">
          <source>io.Bytes.toHex()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90617570e4fd12d69e0390b1cebdde087c1f611b" translate="yes" xml:space="preserve">
          <source>io.Bytes.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acb58ec856b718f1fb460a151acc26c2e380ac0" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329b7a575eb6104486992f05dd34bf0363dc53ea" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9eb54970d5496aaabf2e3ff4487acfcab6b004" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer.addByte()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac8b77c8fd1ce18099a1ba134b235ed1b334cae" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer.addBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8480119c00b187fe3527bdd66fd3a36fe024598" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer.addDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb47a50bd2003b204300f41f31fd56192651b79" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer.addFloat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467251ec2e8cd2d02d48d1657b1ec513b87a0aa7" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer.addInt32()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34bad67b8b706b5238aa14a6490a78d81ccd29c" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer.addInt64()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2073f5a70d5e5b9f08425db007c53af3e2c1633" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer.addString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2cc4dce290d95347a8ebda1edb6e4516f5fba7" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer.getBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26531a6e0ca772facf10acb3290b1ed012259fb" translate="yes" xml:space="preserve">
          <source>io.BytesBuffer.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518df65c3fbec1a9ed2d43b1997cee4e3ca8f2cb" translate="yes" xml:space="preserve">
          <source>io.BytesData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6404248a6aaac75525a4a1d56b90b3589a2c9aa" translate="yes" xml:space="preserve">
          <source>io.BytesDataAbstract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e758c8f2045c4614134c8a32eb55da99d82ed8" translate="yes" xml:space="preserve">
          <source>io.BytesDataImpl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202e19a2e66bae3f8610e9ccd75c99975a03b0d0" translate="yes" xml:space="preserve">
          <source>io.BytesDataImpl.bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af16fe1aba69ace624b00a39c371ab1f1dd9684f" translate="yes" xml:space="preserve">
          <source>io.BytesDataImpl.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12108f8ad2e2e95430a7138ee018fe078f108aa1" translate="yes" xml:space="preserve">
          <source>io.BytesInput</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a98815e99a6c3a1a2129e2fa42a966fccc4554" translate="yes" xml:space="preserve">
          <source>io.BytesInput.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110b0f901c803c4401ac3f91aebbc362e48dec45" translate="yes" xml:space="preserve">
          <source>io.BytesInput.position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1bbf17413d92e5fd30e969c89bb84558eab8f9" translate="yes" xml:space="preserve">
          <source>io.BytesOutput</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da9232060ffd3198d577c8ec1950b878834a1df" translate="yes" xml:space="preserve">
          <source>io.BytesOutput.getBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b836af2ff4e29eb43e586ce1d272ece14a52d6" translate="yes" xml:space="preserve">
          <source>io.BytesOutput.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6373ebf628f231f9ad680eecaa837758a11a4c77" translate="yes" xml:space="preserve">
          <source>io.Eof</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317fc03185cb68f78716fc1e42b58886a4422e82" translate="yes" xml:space="preserve">
          <source>io.Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056da448e9aff16f0ecfcbcb57c3dfc9c6cf0f71" translate="yes" xml:space="preserve">
          <source>io.FPHelper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c565998f4cd2e7d402bb938a83ef9086e0ae02a" translate="yes" xml:space="preserve">
          <source>io.FPHelper.doubleToI64()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4dbdafd18312aacd6ea55155e3c5d613136e3c" translate="yes" xml:space="preserve">
          <source>io.FPHelper.floatToI32()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486951525f951aa178b6b69c6c206a9e69c2a157" translate="yes" xml:space="preserve">
          <source>io.FPHelper.i32ToFloat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ad8d91617ce137619e79939c56ecfff04360ec" translate="yes" xml:space="preserve">
          <source>io.FPHelper.i64ToDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288ca987d65a2a3e2b7963e043316a28b2e2244a" translate="yes" xml:space="preserve">
          <source>io.Float32Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcbcbb50ae11c78847ba55667dbf8e6d6a0c464" translate="yes" xml:space="preserve">
          <source>io.Float32Array.BYTES_PER_ELEMENT()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86865ec2bbef79b40763ddb0831e78a0d74cefb7" translate="yes" xml:space="preserve">
          <source>io.Float32Array.fromArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d2600ca53ad80e1099395b7207e27f9c9cd26d" translate="yes" xml:space="preserve">
          <source>io.Float32Array.fromBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3640c1671b2043f4e52440599f3ba87a0721773" translate="yes" xml:space="preserve">
          <source>io.Float32Array.fromData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10373f3e4a08a2e8f171b50ca763e264b40d0d8" translate="yes" xml:space="preserve">
          <source>io.Float32Array.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af943a0bfb055af1468b1383bd317cd7029dfef" translate="yes" xml:space="preserve">
          <source>io.Float32Array.getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716ed0c09fe4ce89a0415fea16a3f1f454bde33b" translate="yes" xml:space="preserve">
          <source>io.Float32Array.get_view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8b1b25828ccb0a4adfdf44926b71ab0b722c8c" translate="yes" xml:space="preserve">
          <source>io.Float32Array.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41c4647042c9a840cfe291d9a48921bd3705a01" translate="yes" xml:space="preserve">
          <source>io.Float32Array.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e365b231e32fd21333908e516d22939284854cc" translate="yes" xml:space="preserve">
          <source>io.Float32Array.sub()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2340aa49803c7d3f2c68e908a7bc1d429ea7ef91" translate="yes" xml:space="preserve">
          <source>io.Float32Array.subarray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cdb770c5cb33487541a406a245d80d39d63710d" translate="yes" xml:space="preserve">
          <source>io.Float32Array.view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edf5da0fed3d440895768569e29ddabc84a4e64" translate="yes" xml:space="preserve">
          <source>io.Float32ArrayData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182f4ec4920ee09590bda5dc806d7e494fb4b75d" translate="yes" xml:space="preserve">
          <source>io.Float64Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59a81d1d7668debf69622bfd88105ee32afee98" translate="yes" xml:space="preserve">
          <source>io.Float64Array.BYTES_PER_ELEMENT()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1df69834103b7b2ed135066faa700e116b96cdc" translate="yes" xml:space="preserve">
          <source>io.Float64Array.fromArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7408242a11274f88f6b8d1fca34352f01ac46d" translate="yes" xml:space="preserve">
          <source>io.Float64Array.fromBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e185fea66b7962a4ce8f5c6a24e9a8a9d4d264" translate="yes" xml:space="preserve">
          <source>io.Float64Array.fromData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78851dde68d7cd3464b1113291fb7fd47bd594f4" translate="yes" xml:space="preserve">
          <source>io.Float64Array.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac04ef89a3d1de2f22ee6f35e087cdeb5481dbe" translate="yes" xml:space="preserve">
          <source>io.Float64Array.getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952173a8650ca849fa1675dedd1027e020d8af25" translate="yes" xml:space="preserve">
          <source>io.Float64Array.get_view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a31ef808f0a78e4c0a54db08e62758c91b924d" translate="yes" xml:space="preserve">
          <source>io.Float64Array.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84e8a07021fb2746d4f495b142af9d8608d216e" translate="yes" xml:space="preserve">
          <source>io.Float64Array.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a783be05ee11f35c0c5fc564df9cdc8c64d62471" translate="yes" xml:space="preserve">
          <source>io.Float64Array.sub()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0a044ce540c344a1fe77f122b0923d0e21e0e2" translate="yes" xml:space="preserve">
          <source>io.Float64Array.subarray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c7500c56a8bd93b15cf8f2a130eee49cd3ad4f" translate="yes" xml:space="preserve">
          <source>io.Float64Array.view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dccb2fae4531a9aa1d5378755d1377f02e84ad" translate="yes" xml:space="preserve">
          <source>io.Float64ArrayData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d7ba94002ed7c6636aed575e03713e734c1e3e" translate="yes" xml:space="preserve">
          <source>io.Input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7a5792b430244a1bc57e5d1221ae70bf36517f" translate="yes" xml:space="preserve">
          <source>io.Input.bigEndian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fad9b126a96bb49f3af2add449cf3db2b9b08f7" translate="yes" xml:space="preserve">
          <source>io.Input.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34baefc1e6556a610cd79ddf2583646fb17f61ee" translate="yes" xml:space="preserve">
          <source>io.Input.read()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c272f6dcf0bf799e4967da65626c6fc906b4ef50" translate="yes" xml:space="preserve">
          <source>io.Input.readAll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbc3455056350e8b22faa1048a2db872e69e7fb" translate="yes" xml:space="preserve">
          <source>io.Input.readByte()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6656e38cc903a8bf74d7003d3a2d8e51d9f68c44" translate="yes" xml:space="preserve">
          <source>io.Input.readBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765e49afb6ba61aaebe1b05605aeca8357674b1b" translate="yes" xml:space="preserve">
          <source>io.Input.readDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afda848d6cbb5959f1f17c82108b2d361397c66a" translate="yes" xml:space="preserve">
          <source>io.Input.readFloat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b276cae1baf6441c3c4e75f83f279151679a68b" translate="yes" xml:space="preserve">
          <source>io.Input.readFullBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a01f9af5326e2a90f402f4e591891effcb0d1f8" translate="yes" xml:space="preserve">
          <source>io.Input.readInt16()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a1729ac4460f1366aa39cdfdd286243141cafb" translate="yes" xml:space="preserve">
          <source>io.Input.readInt24()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241503eb92c058fc1c65c28a01476ed3241660aa" translate="yes" xml:space="preserve">
          <source>io.Input.readInt32()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81beace0b439d078d7f195000f56fe299fbd80c5" translate="yes" xml:space="preserve">
          <source>io.Input.readInt8()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d563569a93d0dff091ce151f5d066a5235b51e4" translate="yes" xml:space="preserve">
          <source>io.Input.readLine()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771928398d8c9c657874a5f06e549cc7a6eac8cf" translate="yes" xml:space="preserve">
          <source>io.Input.readString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f236432c673e6720b99b1ea151d9d9bc5a2e11fa" translate="yes" xml:space="preserve">
          <source>io.Input.readUInt16()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810103e51c2e6457360132ba1217f5b7dcda8b5e" translate="yes" xml:space="preserve">
          <source>io.Input.readUInt24()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5383ceabd2c99f6d6757e87abbfcfd51d99a8e" translate="yes" xml:space="preserve">
          <source>io.Input.readUntil()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db2977a3c98d7681b606c7d86de17d633d065eab" translate="yes" xml:space="preserve">
          <source>io.Int32Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2390c9f8cccc32c87e97db0433cb7d5cd08a2f58" translate="yes" xml:space="preserve">
          <source>io.Int32Array.BYTES_PER_ELEMENT()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8a7d531ff7522dc1f0f5a8e38364e7e6acc0f6" translate="yes" xml:space="preserve">
          <source>io.Int32Array.fromArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977d76a14da15ff60e903242145cd6b2bdeb62bd" translate="yes" xml:space="preserve">
          <source>io.Int32Array.fromBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e383c2f2bd8b250d2cd7b2845941b12f55f073bc" translate="yes" xml:space="preserve">
          <source>io.Int32Array.fromData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0757a19e913c8415496986db1fdd7dad20ed4da0" translate="yes" xml:space="preserve">
          <source>io.Int32Array.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866bbc9233011b46201c6a47c1579b5b2102193d" translate="yes" xml:space="preserve">
          <source>io.Int32Array.getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbade1808d585da13a9e64ef58ced8828cd6c7a9" translate="yes" xml:space="preserve">
          <source>io.Int32Array.get_view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb76c2a12b0428518db3c75fa5a582729e2ae36d" translate="yes" xml:space="preserve">
          <source>io.Int32Array.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cd87df5cee0d1f0a1bb9d8b6f3c5ee3dfcc60e" translate="yes" xml:space="preserve">
          <source>io.Int32Array.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185b1f7c1a78eb8af3d1443b9b71599fe17660bb" translate="yes" xml:space="preserve">
          <source>io.Int32Array.sub()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077d7bf6f38eabf8d6b978b6fdca282eb6ca3d78" translate="yes" xml:space="preserve">
          <source>io.Int32Array.subarray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63885e4cc5f4e87fca5659b04f7fc930c0a3202c" translate="yes" xml:space="preserve">
          <source>io.Int32Array.view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289c4a6fb99549a71d92ee8fd7e7a2aabd8d6a16" translate="yes" xml:space="preserve">
          <source>io.Int32ArrayData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd7af01b71c8e6ee5d686a3f434c569078d0e46" translate="yes" xml:space="preserve">
          <source>io.Output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0b3681e1c0ff754c1a758102d71afe39dc1f34" translate="yes" xml:space="preserve">
          <source>io.Output.bigEndian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f44f7df3a6c4085b223082511cbdd857618116" translate="yes" xml:space="preserve">
          <source>io.Output.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002b825f16619d05fb25413f6a9b68aa8bd93e4c" translate="yes" xml:space="preserve">
          <source>io.Output.flush()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301f8ff84d805d4d6d0674029ca67151c89f150c" translate="yes" xml:space="preserve">
          <source>io.Output.prepare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c9d286eb212b5f1c3d505780a44a4ef7f81eb9" translate="yes" xml:space="preserve">
          <source>io.Output.write()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6ccfab85f0b65dd81d0610478c4c2c654dbe51" translate="yes" xml:space="preserve">
          <source>io.Output.writeByte()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2762bfcace28af9e2a091dca016db065793589c0" translate="yes" xml:space="preserve">
          <source>io.Output.writeBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00505f9310d2f51304cde6cdab620fa4f3c2d042" translate="yes" xml:space="preserve">
          <source>io.Output.writeDouble()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3680894c5e9fdcdeed988195c492e237fccee3" translate="yes" xml:space="preserve">
          <source>io.Output.writeFloat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a742b73e6fe076bd0064f5053b68e2395153f33" translate="yes" xml:space="preserve">
          <source>io.Output.writeFullBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411f156e445e580bbd4709a8d2af31ee4adff2a2" translate="yes" xml:space="preserve">
          <source>io.Output.writeInput()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690f7845056fd5e5a4dfcb17eb56332e8a4f7767" translate="yes" xml:space="preserve">
          <source>io.Output.writeInt16()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fa1c5db09e7287293a730de5b5fe1feeddca9c" translate="yes" xml:space="preserve">
          <source>io.Output.writeInt24()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564806a47011573dc1e7e5da357a881509548d3b" translate="yes" xml:space="preserve">
          <source>io.Output.writeInt32()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0a09f199948d447965b264912d1195a097c8ad" translate="yes" xml:space="preserve">
          <source>io.Output.writeInt8()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0459100e714ce113222a3c7841c240ab46e9fc9" translate="yes" xml:space="preserve">
          <source>io.Output.writeString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7339109bcae77c6e0285dd4b0b250bf2770c6add" translate="yes" xml:space="preserve">
          <source>io.Output.writeUInt16()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1ae9e239c9ead8e2e6a28c1ec361c30b6018e0" translate="yes" xml:space="preserve">
          <source>io.Output.writeUInt24()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189b28935cbf7390ea313eaf7796e348d029d398" translate="yes" xml:space="preserve">
          <source>io.Path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76eb47e19138f6b162a3bcb4d31e7022b7a01174" translate="yes" xml:space="preserve">
          <source>io.Path.addTrailingSlash()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421057679c5f44e1cfc6958539638d0b95e40c56" translate="yes" xml:space="preserve">
          <source>io.Path.backslash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995b47a0fe75c760af00d86d9ed13ee3e90ddaa0" translate="yes" xml:space="preserve">
          <source>io.Path.dir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878fa6b06fe422fbc22b52ce015416c4d9e33330" translate="yes" xml:space="preserve">
          <source>io.Path.directory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0cb32558dd2c2386f0674b53eb2b361b6e7fe5" translate="yes" xml:space="preserve">
          <source>io.Path.ext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763fbdbac879e54a6c7ea82637703076f18352c3" translate="yes" xml:space="preserve">
          <source>io.Path.extension()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d510bd7b6457004bed165035020ec4b0fca976" translate="yes" xml:space="preserve">
          <source>io.Path.file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a7663a2f0fc825496ebe56608bc9241789ec00" translate="yes" xml:space="preserve">
          <source>io.Path.isAbsolute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609d4cf1cf48d004feeb1a710f4eb723b3d5a71c" translate="yes" xml:space="preserve">
          <source>io.Path.join()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ae300f0a0384bc9d6c75ad99bd6e484b3ff1f1" translate="yes" xml:space="preserve">
          <source>io.Path.normalize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1af2e63076bc9c94496e0acf59c1528065ff60" translate="yes" xml:space="preserve">
          <source>io.Path.removeTrailingSlashes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed55400d128b13276d108c4ddac227d62e998957" translate="yes" xml:space="preserve">
          <source>io.Path.toString()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c6a58ef0c3ccd05123837640df891329264f30" translate="yes" xml:space="preserve">
          <source>io.Path.withExtension()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd117e425aad6906b2518d78fb9355e280d498d" translate="yes" xml:space="preserve">
          <source>io.Path.withoutDirectory()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8909320b3a24f363381dd6f483df4d7c00ea4122" translate="yes" xml:space="preserve">
          <source>io.Path.withoutExtension()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5a8ca9428bb38998e2e712ce1713f2bdb2672f" translate="yes" xml:space="preserve">
          <source>io.StringInput</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b611344d29e1e119eb90ed01673366eb8a8f15f" translate="yes" xml:space="preserve">
          <source>io.UInt16Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a23c02cffcea054f3af869a6ec9f4c1e6754512" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.BYTES_PER_ELEMENT()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e4af325061c57eadb31fcef9fe3b7c1a6aa586" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.fromArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88685f9417daf797ef31f0d96f318b26448ae3a" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.fromBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e0d4ac99388c31e212ded9343f6404e38897d6" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.fromData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557c8ffedb9872084bd6443d69f92229e25607e3" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c51d014f871bf5f7be95be0d666a758a0f9868" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3951f8278b9159e160bfdc87d860ba3864b5746e" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.get_view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03137eee418cfd26d779c5f8d600dd97b011536" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8200ccf6b6042919b4923a28f5b696f6a1d0fbea" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d552bc74d6592c7ba6cada80f3ee4eca100f5f63" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.sub()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f358b3f45042091d06eb950a8e02e769727cc5f" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.subarray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451a4019af3ef405ff2150dc9faf14b845c26c19" translate="yes" xml:space="preserve">
          <source>io.UInt16Array.view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d6ce1047e38db606b5776c7d936452d2e5cb69" translate="yes" xml:space="preserve">
          <source>io.UInt16ArrayData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16066a230770471e5e435b17b2524e93b5db306" translate="yes" xml:space="preserve">
          <source>io.UInt32Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df4b63cc32f66586e47a86a6ad07592892323e0" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.BYTES_PER_ELEMENT()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2452347588e33cc6e81dd1586feae823b180e8e" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.fromArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17db3be29ab6160165f9ba349e0a326ffbe72d4c" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.fromBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb10951c88cf273dd4b0b5bba92a4e07c2cdbed3" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.fromData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e590ad370eefdf819894329a8c6ce58bd9d998c" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c512e51079b96fb36eafa908699be8c1a41f0455" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a89a945f4ab4cfbc49eb65d63874f3bf273b55a" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.get_view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282d6b759fe3f4df0bf4e8b9b5115abfc5003d24" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3471b34fb06800c32e584401db257c869b807f" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529d5ab66638d8b4cc311639642edb64cf549982" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.sub()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93c20efa708caf9cde66eb714fc7f18b3494acf" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.subarray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f13788e1c6fe46e0e49f92c3524160ef52ab8b" translate="yes" xml:space="preserve">
          <source>io.UInt32Array.view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20857b1d5fce4e0aaa54196c2085f9b814e35d93" translate="yes" xml:space="preserve">
          <source>io.UInt32ArrayData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c80553994fab88098fe52dc15f7a5c262c110e" translate="yes" xml:space="preserve">
          <source>io.UInt8Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24175d121358f3836517027a1b8c4054d0d280cd" translate="yes" xml:space="preserve">
          <source>io.UInt8Array.BYTES_PER_ELEMENT()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c08364d6aef2178829f2b4d87f6102df0a5621" translate="yes" xml:space="preserve">
          <source>io.UInt8Array.fromArray()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44027ac6524df99088117c0f24eac3c9668a5082" translate="yes" xml:space="preserve">
          <source>io.UInt8Array.fromBytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18330033cff8cfcbee56f3b79430901de6ff0e8c" translate="yes" xml:space="preserve">
          <source>io.UInt8Array.fromData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a803f8d0308f1a59385dbf0ff2cdef2cbe58bb5d" translate="yes" xml:space="preserve">
          <source>io.UInt8Array.get()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce657bae7482ada5044ab5c0b32b1c0428b58a0f" translate="yes" xml:space="preserve">
          <source>io.UInt8Array.getData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d168a8fd8dc28eafc06e7e8b43cbe983f35d0e" translate="yes" xml:space="preserve">
          <source>io.UInt8Array.get_view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb5979fcfdc97cdbaa1a5a7aa81ddcb5438263f" translate="yes" xml:space="preserve">
          <source>io.UInt8Array.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637c909696ddd6c9af5da4fadaeee9e7d192cb03" translate="yes" xml:space="preserve">
          <source>io.UInt8Array.set()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107c2a7c5bd177a5f98a3faabefafbad3bfaf22a" translate="yes" xml:space="preserve">
          <source>io.UInt8Array.sub()</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
