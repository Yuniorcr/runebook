<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="http">
    <body>
      <group id="http">
        <trans-unit id="0c7f5bf0cdba71e3fcce4ae6ffd7e3c77697eed0" translate="yes" xml:space="preserve">
          <source>7.2.2 Entity Length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252815b6fe232bdcf02e640f676aafc5a70199f6" translate="yes" xml:space="preserve">
          <source>7.2.2.  Registrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9dee4c87de3696fc8c98353c4ca8266af35036" translate="yes" xml:space="preserve">
          <source>7.3.  Authentication Challenges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfeebb07df8750ae29ebf7efa8ef5f6acd3bb8fd" translate="yes" xml:space="preserve">
          <source>7.3.  Header Field Registration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0616fc11540014a2ad5c88fbafea8afff8999c0" translate="yes" xml:space="preserve">
          <source>7.3.  Write Locks and Unmapped URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596523992e6e4030c069794204c7d8eb0fa05dd0" translate="yes" xml:space="preserve">
          <source>7.4.  Response Context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449bd990a53f309500c3164712ad3753e864a40b" translate="yes" xml:space="preserve">
          <source>7.4.  Write Locks and Collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf1958e97db8bc6e9ff58e9fc4053742dd0e67f" translate="yes" xml:space="preserve">
          <source>7.4.1.  Allow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799de7ef6b023097a7e633502a715c1d46be6538" translate="yes" xml:space="preserve">
          <source>7.4.2.  Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0937f23484a08844eba9aee62398d73590e4fb" translate="yes" xml:space="preserve">
          <source>7.5.  Write Locks and the If Request Header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1de1f0bc43682a9faf80bc9908f9fe3fd8dfabd" translate="yes" xml:space="preserve">
          <source>7.5.1.  Example - Write Lock and COPY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73fd35c9f418f29acdf6323b667e4573c863f84" translate="yes" xml:space="preserve">
          <source>7.5.2.  Example - Deleting a Member of a Locked Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c19cd224a680ed699fe199c043ca42b6132c24" translate="yes" xml:space="preserve">
          <source>7.6.  Write Locks and COPY/MOVE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928eabdf32c91c00c82f9eb5816951c21b53a69d" translate="yes" xml:space="preserve">
          <source>7.7.  Refreshing Write Locks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5dbbcea5ce7e2988b8c69bcfdfde8904aabc1f" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6b853b3a4680fb6179a1500274f4da0cf1e484" translate="yes" xml:space="preserve">
          <source>8 Connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0d7bd1643e3208c22dac8034252eeea377f89e" translate="yes" xml:space="preserve">
          <source>8.  General Request and Response Handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0848002e655e29a2ddef121ea1a8fbd4dfdb2b5d" translate="yes" xml:space="preserve">
          <source>8.  IANA Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772d0ad0da342915abfda96bb238048306dc30b2" translate="yes" xml:space="preserve">
          <source>8.  References</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955a97fa84d0ccc1470b0406b7bf3199be683354" translate="yes" xml:space="preserve">
          <source>8.  Security Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688654a1611161f0ebd2182ce90a411b637757b3" translate="yes" xml:space="preserve">
          <source>8.  Service Documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52e11f026ee3b14b65ab93a6681efef6289f715" translate="yes" xml:space="preserve">
          <source>8.1 Persistent Connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf348c835743f4a39c2223245bf3dc4f31e4170" translate="yes" xml:space="preserve">
          <source>8.1.  Header Field Registration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882859ff5e2a6c34a771a22cb88c7360dbb15ee7" translate="yes" xml:space="preserve">
          <source>8.1.  Method Registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8685cd6a6de4b8cd90b0614ceabc143128d8fee9" translate="yes" xml:space="preserve">
          <source>8.1.  Normative References</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595d44333d864d0b4642140baf34cc94cd79be03" translate="yes" xml:space="preserve">
          <source>8.1.  Precedence in Error Handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8e63f2b3ec59e45d6dee6d5fe299a77902db50" translate="yes" xml:space="preserve">
          <source>8.1.  Workspaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c766cd99ea236289c968fce363aa75510123c0f" translate="yes" xml:space="preserve">
          <source>8.1.1 Purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544257cf53daedd15811854158bf3b09f67f68ca" translate="yes" xml:space="preserve">
          <source>8.1.1.  Procedure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d487905270ee4997761c7a161b1b2ea05b20ae9f" translate="yes" xml:space="preserve">
          <source>8.1.2 Overall Operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926aa905bd8e47239b7c472a2bbfcd960a5048e7" translate="yes" xml:space="preserve">
          <source>8.1.2.  Considerations for New Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cc2719b9d79a33f8c930fb0abfee615e9f7a4f" translate="yes" xml:space="preserve">
          <source>8.1.2.1 Negotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a690645c8a0914127db1633c51280895adf30db3" translate="yes" xml:space="preserve">
          <source>8.1.2.2 Pipelining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbf38f425cada3795c87c58c86fdc5ac7227928" translate="yes" xml:space="preserve">
          <source>8.1.3 Proxy Servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c8a3ca266bb1da14b5d8496f4584bceb29bbb7" translate="yes" xml:space="preserve">
          <source>8.1.3.  Registrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bed99622f53d142d7290f31524006920eff27b" translate="yes" xml:space="preserve">
          <source>8.1.4 Practical Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a09922d149944f1e6e14bf055cb6d81de23da6" translate="yes" xml:space="preserve">
          <source>8.2 Message Transmission Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30cbaabcb8a4b7f3414da3123cce037dab90b384" translate="yes" xml:space="preserve">
          <source>8.2.  Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86bb886e18058bd56b0d97b7105cc967ef07979" translate="yes" xml:space="preserve">
          <source>8.2.  Informative References</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e772b2c870af05846073585b99c05c78d284da4a" translate="yes" xml:space="preserve">
          <source>8.2.  Status Code Registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d9b2bd1d61021cf02cd965b94201d473a3f86a" translate="yes" xml:space="preserve">
          <source>8.2.  URI Scheme Registration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e4eae6d20546ebf58b19edc29b5d5ef3dbdbec" translate="yes" xml:space="preserve">
          <source>8.2.  Use of XML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b41d4a1bf59057ccd0f3a6bebdca2398d79144" translate="yes" xml:space="preserve">
          <source>8.2.1 Persistent Connections and Flow Control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf7e46a1d4badaecac8e086613a27aa209c93f2" translate="yes" xml:space="preserve">
          <source>8.2.1.  Procedure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5423aac0fd0bb1ba63b266a16a29caf3b26fc76" translate="yes" xml:space="preserve">
          <source>8.2.2 Monitoring Connections for Error Status Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f580822b062f2bbd1de473f871362ba08e9221b" translate="yes" xml:space="preserve">
          <source>8.2.2.  Considerations for New Status Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9546bd5c9513ab279d02729d8cf1af9d2711fe0" translate="yes" xml:space="preserve">
          <source>8.2.3 Use of the 100 (Continue) Status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859ddefbf669b679444c58a8a1d3ce9266902c3f" translate="yes" xml:space="preserve">
          <source>8.2.3.  Registrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c698b63bed6e2a275bb5658f35eff8ae4ae773" translate="yes" xml:space="preserve">
          <source>8.2.4 Client Behavior if Server Prematurely Closes Connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5747b44037675f5cf75073321d9f2adc9adaa44" translate="yes" xml:space="preserve">
          <source>8.3.  Element Definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e619b36ecbe9ae316031ede6f171351d9bd12473" translate="yes" xml:space="preserve">
          <source>8.3.  Header Field Registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb8ee663645d168e4950e761593d7ecdafdffac" translate="yes" xml:space="preserve">
          <source>8.3.  Internet Media Type Registration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ed3feca7e0c69bb265cb80e09b2f31cc4db94c" translate="yes" xml:space="preserve">
          <source>8.3.  URL Handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f78b7b9afd9050e0ff43d697bf43d559165d084" translate="yes" xml:space="preserve">
          <source>8.3.1.  Considerations for New Header Fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a37aa2ec34b676beac38bd13a0b17693b5c666" translate="yes" xml:space="preserve">
          <source>8.3.1.  Example - Correct URL Handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbe59f00bffe687d9a603979ea7f73439787fae" translate="yes" xml:space="preserve">
          <source>8.3.1.  Internet Media Type message/http</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4608f8029e312800acec7dc30c05bee8cb0c9f" translate="yes" xml:space="preserve">
          <source>8.3.1.  The &quot;app:service&quot; Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3577466bb861ca74dc8b27ddbc824e272a61ce8d" translate="yes" xml:space="preserve">
          <source>8.3.2.  Internet Media Type application/http</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d92c0aa9927c39fdef3683d4584710577844e3" translate="yes" xml:space="preserve">
          <source>8.3.2.  Registrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9bd043b63f248711a361a3ac6625d0edc127f6" translate="yes" xml:space="preserve">
          <source>8.3.2.  The &quot;app:workspace&quot; Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e636d66a47aa88119c0d51e7b108302e69b17f82" translate="yes" xml:space="preserve">
          <source>8.3.2.1.  The &quot;atom:title&quot; Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a2abab7c8ce1f45345f950f2939ed7a131277b" translate="yes" xml:space="preserve">
          <source>8.3.3.  The &quot;app:collection&quot; Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b93845f8a5834b805cc1e39e46b2e4b733c26b9" translate="yes" xml:space="preserve">
          <source>8.3.3.1.  The &quot;href&quot; Attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d059a2a36945f816b35af9a3f9240be9ead5612" translate="yes" xml:space="preserve">
          <source>8.3.3.2.  The &quot;atom:title&quot; Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8e3bad319369332d98e91902987bb71111a57a" translate="yes" xml:space="preserve">
          <source>8.3.4.  The &quot;app:accept&quot; Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c6cfdb32fa1a789df82077004254a8cdc33353" translate="yes" xml:space="preserve">
          <source>8.3.5.  Usage in Atom Feed Documents</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0398705d3ce3c06e0a8219dfadade2d9d42f78" translate="yes" xml:space="preserve">
          <source>8.3.6.  The &quot;app:categories&quot; Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532cb5b70a3f71ce180c165205647e8909d4e8a0" translate="yes" xml:space="preserve">
          <source>8.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3c2ff91d1cdc10240e6c5b50be99e3d701abba" translate="yes" xml:space="preserve">
          <source>8.4.  Content Coding Registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70a43b9d6df8f03c4cdd23b90b1e17a88db81c9" translate="yes" xml:space="preserve">
          <source>8.4.  Required Bodies in Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2cbe14aff90b49672b8f71630d4168f5fc0643" translate="yes" xml:space="preserve">
          <source>8.4.  Transfer Coding Registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2806a19a32129d76712b8468831dbca10a489c96" translate="yes" xml:space="preserve">
          <source>8.4.1.  Procedure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5191841ca987ae1af34c5bf34064677bf9891e9" translate="yes" xml:space="preserve">
          <source>8.4.2.  Registration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc77e20caa25eb215e96d77cf1ed6007a951d0f" translate="yes" xml:space="preserve">
          <source>8.4.2.  Registrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea7e1291e5152f44c231bf4343b6fe7366d0014" translate="yes" xml:space="preserve">
          <source>8.5.  Content Coding Registration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e5d588dfb339b057c59fdb211f8a458a1f6be1" translate="yes" xml:space="preserve">
          <source>8.5.  HTTP Headers for Use in WebDAV</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12786bc52c8840c2e15ef82298709f07d02886dd" translate="yes" xml:space="preserve">
          <source>8.6.  ETag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009c4ba12f87894bb9474b99290ef4e8b8b01674" translate="yes" xml:space="preserve">
          <source>8.6.  Upgrade Token Registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a357a7de89609709cfb85081a90ff2b60c43c1d" translate="yes" xml:space="preserve">
          <source>8.6.1.  Procedure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4abfde4dcdc9f16f8cf39dbfc7b0a315dd1d053" translate="yes" xml:space="preserve">
          <source>8.6.2.  Upgrade Token Registration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a09b454ba69f62db7ff15d61892cdda9c550690" translate="yes" xml:space="preserve">
          <source>8.7.  Including Error Response Bodies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc21196919ce433b13c6fd73735fa99ba6c84ac4" translate="yes" xml:space="preserve">
          <source>8.8.  Impact of Namespace Operations on Cache Validators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ade7c2cf97f75d009975f4d720d1fa6c19f4897" translate="yes" xml:space="preserve">
          <source>9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f79927b47900b503224ceb99c18bc7bd382a51" translate="yes" xml:space="preserve">
          <source>9 Method Definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2835844bca76adb0863cb604f7d2200b0a414e" translate="yes" xml:space="preserve">
          <source>9.  Acknowledgments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de82dac6bbe52b5bd4616e59bee0e2407b6d402" translate="yes" xml:space="preserve">
          <source>9.  Creating and Editing Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17c29532359e458c19307d512ed3cbcbcd0de54" translate="yes" xml:space="preserve">
          <source>9.  HTTP Methods for Distributed Authoring</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32c336974e105dee56e3e6934a3a264db2c5ee4" translate="yes" xml:space="preserve">
          <source>9.  Security Considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15acd848c2626d3369c0aedc071b0986840200e4" translate="yes" xml:space="preserve">
          <source>9.1 Safe and Idempotent Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94c08ff38731b0bcadc38bd18f3f07ac35fe3de" translate="yes" xml:space="preserve">
          <source>9.1.  Attacks Based on File and Path Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db48eb50cecd264fc15ed2d6648a58f99beb88c" translate="yes" xml:space="preserve">
          <source>9.1.  Establishing Authority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b737789972c4af1cb442b73c9de18bbe2568ae04" translate="yes" xml:space="preserve">
          <source>9.1.  Member URIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa38bc0b5b96c153ed2923ec2ded09d5c5656fa" translate="yes" xml:space="preserve">
          <source>9.1.  PROPFIND Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e3312e5546085d3157895104cac050c2e4f9dc" translate="yes" xml:space="preserve">
          <source>9.1.1 Safe Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a4781b84a38db477ef11504aeefa5e58e9e566" translate="yes" xml:space="preserve">
          <source>9.1.1.  PROPFIND Status Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7719fadd3e0645d41479a1228b26e6cc59ff723" translate="yes" xml:space="preserve">
          <source>9.1.2 Idempotent Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088d1f6c9fb96dfcd6d4c5a8c5a2f2f74cbbd8dd" translate="yes" xml:space="preserve">
          <source>9.1.2.  Status Codes for Use in 'propstat' Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9407f474bc0206238d6da62b5ad8786d5cd25e1c" translate="yes" xml:space="preserve">
          <source>9.1.3.  Example - Retrieving Named Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ec8f6d9eff690e06c4d2d512bcaea779e71d46" translate="yes" xml:space="preserve">
          <source>9.1.4.  Example - Using 'propname' to Retrieve All Property Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e44421071e62a8c7432770ddaacafc649cb3fb4" translate="yes" xml:space="preserve">
          <source>9.1.5.  Example - Using So-called 'allprop'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18b52979002062e2b665285e88e7c019849fbc1" translate="yes" xml:space="preserve">
          <source>9.1.6.  Example - Using 'allprop' with 'include'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5505d2f60cf3a215f71009c67c09b144def3615" translate="yes" xml:space="preserve">
          <source>9.10.  LOCK Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48aecbf242a344cc265bc92491b0f1f6c213aeef" translate="yes" xml:space="preserve">
          <source>9.10.1.  Creating a Lock on an Existing Resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c7a896ce601bc6f243878c788e091479d51c88" translate="yes" xml:space="preserve">
          <source>9.10.2.  Refreshing Locks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af01b838147030d2bfae57054665e48b11db4399" translate="yes" xml:space="preserve">
          <source>9.10.3.  Depth and Locking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95a67a4755418885e8cfca8598f1260c3267d5d" translate="yes" xml:space="preserve">
          <source>9.10.4.  Locking Unmapped URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3ba48d5005e99f0e6e8c1156e43fb55fd9bcad" translate="yes" xml:space="preserve">
          <source>9.10.5.  Lock Compatibility Table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2925b696ce6c6cf1a2cf7dbffdc2e0c2b7ffc96f" translate="yes" xml:space="preserve">
          <source>9.10.6.  LOCK Responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49805a782a0cd44173c04aed3e66ce8691949c0d" translate="yes" xml:space="preserve">
          <source>9.10.7.  Example - Simple Lock Request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc940f0408943408e989d55902ead9998c51c94" translate="yes" xml:space="preserve">
          <source>9.10.8.  Example - Refreshing a Write Lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c145bd64e28b001f8e899f19c8282372257da40" translate="yes" xml:space="preserve">
          <source>9.10.9.  Example - Multi-Resource Lock Request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacdf0bc7f84ba5462a93e23216e621b6138a8c1" translate="yes" xml:space="preserve">
          <source>9.11.  UNLOCK Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce488e3b8483a11a74a0e9300300706ed348ff5f" translate="yes" xml:space="preserve">
          <source>9.11.1.  Status Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc8fb328ebd541cc2f6c4c1ab79566fdac9adf1" translate="yes" xml:space="preserve">
          <source>9.11.2.  Example - UNLOCK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba661cba2ab853943502fe7e8c6bdaf616a09b5" translate="yes" xml:space="preserve">
          <source>9.2 OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411aba7d531f645a2e6c2b64a0365baa7e5a035c" translate="yes" xml:space="preserve">
          <source>9.2.  Attacks Based on Command, Code, or Query Injection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7378d18d16e0fb2bfc3e4ee4b9dddfd6621d2e4" translate="yes" xml:space="preserve">
          <source>9.2.  Creating Resources with POST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9eae521d298203dc52543780a399b587011ef35" translate="yes" xml:space="preserve">
          <source>9.2.  PROPPATCH Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4be81d6a85633bbc2cdd85c9399d9cb9fba5c2" translate="yes" xml:space="preserve">
          <source>9.2.  Risks of Intermediaries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc0e9fc2d7fc4a5e33ebd813250b1b1868c151f" translate="yes" xml:space="preserve">
          <source>9.2.1.  Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d909549b8f4bdab0ec999ef8eb9f77e05423eb" translate="yes" xml:space="preserve">
          <source>9.2.1.  Status Codes for Use in 'propstat' Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa584c280f9e6a11935946be6e4ed9ad62d7a3c" translate="yes" xml:space="preserve">
          <source>9.2.2.  Example - PROPPATCH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f7a3a299f62225cba076fc6d3d6e677f303482" translate="yes" xml:space="preserve">
          <source>9.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd53cb91b360a2adec39a2a9e27de272a6c2b1b6" translate="yes" xml:space="preserve">
          <source>9.3 GET</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f077ec85549921eb6b8f5cdc1feeb0491de6e62" translate="yes" xml:space="preserve">
          <source>9.3.  Attacks via Protocol Element Length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd138cb9b9de301e986dfa44cb6d6d1276def2fd" translate="yes" xml:space="preserve">
          <source>9.3.  Disclosure of Personal Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2ad2a2bc424b7aeafbdfdef173ac4e7d8dff3d" translate="yes" xml:space="preserve">
          <source>9.3.  Editing Resources with PUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b36f561f3ee2bbc1494e2bd06e6d0703c1cd6c" translate="yes" xml:space="preserve">
          <source>9.3.  MKCOL Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c824825a28247bd9c52e583687fa58f36997cf97" translate="yes" xml:space="preserve">
          <source>9.3.1.  MKCOL Status Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16239305e5156c9eebfb0879f474ac8403d5d6d3" translate="yes" xml:space="preserve">
          <source>9.3.2.  Example - MKCOL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac16a87ce8deb622192f25b54530881cdee5fc5" translate="yes" xml:space="preserve">
          <source>9.4 HEAD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69078f8347e31a9bcdb5a88372ec5d0b05ca3be0" translate="yes" xml:space="preserve">
          <source>9.4.  Deleting Resources with DELETE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa1861a2c8482d9d8681b51293d86ed24a2a181" translate="yes" xml:space="preserve">
          <source>9.4.  Disclosure of Sensitive Information in URIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef170665d8869a60fc6966c91476c493d7a3abc" translate="yes" xml:space="preserve">
          <source>9.4.  GET, HEAD for Collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b093955e6682ce3ddd574641638b3b3fc7a3a8f" translate="yes" xml:space="preserve">
          <source>9.4.  Response Splitting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24af5340b43ce074ec0b5f2b50355e43113680b1" translate="yes" xml:space="preserve">
          <source>9.5 POST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061eefb707b9953cd6c1da4c85f4835a1263c7f6" translate="yes" xml:space="preserve">
          <source>9.5.  Caching and Entity Tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6bdac14096553c369467b454bd48ae5b50746c" translate="yes" xml:space="preserve">
          <source>9.5.  Disclosure of Fragment after Redirects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa70bc9a6637941e021a79f02b2d62570b0ec53" translate="yes" xml:space="preserve">
          <source>9.5.  POST for Collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49ef2590feae90d2b86b67ebf7638d8d84b7cf7" translate="yes" xml:space="preserve">
          <source>9.5.  Request Smuggling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1835637471ac1a96e92501e1b910b478bf4e51" translate="yes" xml:space="preserve">
          <source>9.5.1.  Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f660ccbe7b9d85874c11f6eb08e3c8624efc403" translate="yes" xml:space="preserve">
          <source>9.6 PUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61f0c2840a948a20f9ae3232fc5e4b57f822081" translate="yes" xml:space="preserve">
          <source>9.6.  DELETE Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfc092f260ff766f128a48111069a35116a946e" translate="yes" xml:space="preserve">
          <source>9.6.  Disclosure of Product Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3366c8aa8f589e80905afc8d7867aab604bd069e" translate="yes" xml:space="preserve">
          <source>9.6.  Media Resources and Media Link Entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abcd01d6da35a0e7cb6212c6eb43427b4d4598c" translate="yes" xml:space="preserve">
          <source>9.6.  Message Integrity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c481b9156b0a603926d3c6441b473e12404ad38a" translate="yes" xml:space="preserve">
          <source>9.6.1.  DELETE for Collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ca514bc92f1e391efaeb66bb98a7ed8822b423" translate="yes" xml:space="preserve">
          <source>9.6.1.  Examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc77a1880ba47f38446b2c597123d0cc24f0c19e" translate="yes" xml:space="preserve">
          <source>9.6.2.  Example - DELETE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752030424807bad8f8e8a9aae89fa62fed64db00" translate="yes" xml:space="preserve">
          <source>9.7 DELETE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242bf6ef5907227038865f97b4a8547bc9b03afc" translate="yes" xml:space="preserve">
          <source>9.7.  Browser Fingerprinting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8abdc95c0815c58df742681957066331f128b0e" translate="yes" xml:space="preserve">
          <source>9.7.  Message Confidentiality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d65c7bc44403ffae45c4570b83be50ac2473c37" translate="yes" xml:space="preserve">
          <source>9.7.  PUT Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d025c641b5ee4ac3e967752fac5ac6b944885a9" translate="yes" xml:space="preserve">
          <source>9.7.  The Slug Header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb022e27c376d8d8a6f216b6b5eea5c67a20db86" translate="yes" xml:space="preserve">
          <source>9.7.1.  PUT for Non-Collection Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f73871184cdd707dac1949b1ed56cde74da684d" translate="yes" xml:space="preserve">
          <source>9.7.1.  Slug Header Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b70998af9ff8d33f14358183f7af211da80ebdc" translate="yes" xml:space="preserve">
          <source>9.7.2.  Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cb2a1bd83a034047c66d113d45aa25bbe4c219" translate="yes" xml:space="preserve">
          <source>9.7.2.  PUT for Collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabf2d29c4877b9566dde077e75d56bf8ea72376" translate="yes" xml:space="preserve">
          <source>9.8 TRACE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c36b12fa619f8372166ac0e0eac124b7bad5603" translate="yes" xml:space="preserve">
          <source>9.8.  COPY Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf5e219139cbb4f3287106d51b2ec952d43d64b" translate="yes" xml:space="preserve">
          <source>9.8.  Privacy of Server Log Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1290cfc31becf2fd7e13bcfcd471d6c064f02d9c" translate="yes" xml:space="preserve">
          <source>9.8.1.  COPY for Non-collection Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268a07404e28921ccef9189bf593605c33e1dc3e" translate="yes" xml:space="preserve">
          <source>9.8.2.  COPY for Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ef434149bd84624a14a7ceeddde015c97c3a46" translate="yes" xml:space="preserve">
          <source>9.8.3.  COPY for Collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302c8a19dc53cf1c57c9f539eec1ea6b2a2079bb" translate="yes" xml:space="preserve">
          <source>9.8.4.  COPY and Overwriting Destination Resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b310bfff99853d3ee335b0e320b40eb6762f4f" translate="yes" xml:space="preserve">
          <source>9.8.5.  Status Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a105f8ad21f1bbd1577a0817003c39a0e346da73" translate="yes" xml:space="preserve">
          <source>9.8.6.  Example - COPY with Overwrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bb68041b87fc4733b5f654e88742d2298f4ca4" translate="yes" xml:space="preserve">
          <source>9.8.7.  Example - COPY with No Overwrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea05e6ad45274257d49ca80da4c2b50bd7d8327a" translate="yes" xml:space="preserve">
          <source>9.8.8.  Example - COPY of a Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef40472beee5cfb74f193c971fd8494e47bc5662" translate="yes" xml:space="preserve">
          <source>9.9 CONNECT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63798b047939ccebb83d9e20f4c4ef4ec9b1922" translate="yes" xml:space="preserve">
          <source>9.9.  MOVE Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df35c26b0805ecbddfd13edeabc86c2401df6c3" translate="yes" xml:space="preserve">
          <source>9.9.1.  MOVE for Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9295239dd6471de57779466fa41ebe414231bf5" translate="yes" xml:space="preserve">
          <source>9.9.2.  MOVE for Collections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccf878be0020d41603e4bf0f1aba51560a111fa" translate="yes" xml:space="preserve">
          <source>9.9.3.  MOVE and the Overwrite Header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930bcd8739873e7b9ad387c34198988248636418" translate="yes" xml:space="preserve">
          <source>9.9.4.  Status Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0695e061d1d8c213f8648a8d001b0d1975dac0f" translate="yes" xml:space="preserve">
          <source>9.9.5.  Example - MOVE of a Non-Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b586de092bc3abb789e654c14dab0901f0cd0bd4" translate="yes" xml:space="preserve">
          <source>9.9.6.  Example - MOVE of a Collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9f8f569541c5054afa7def95289cb374225506" translate="yes" xml:space="preserve">
          <source>; MSIE xyz;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9206c0e5abd77b473a826049dd6814207e180376" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#Requests_with_credentials&quot;&gt;Credentialed requests&lt;/a&gt; are discussed above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad41b541eaecf474166af4fbcb9cafc21091541" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../authentication#Authentication_schemes&quot;&gt;Authentication type&lt;/a&gt;. A common type is &lt;a href=&quot;../authentication#Basic_authentication_scheme&quot;&gt;&quot;Basic&quot;&lt;/a&gt;. IANA maintains a &lt;a href=&quot;http://www.iana.org/assignments/http-authschemes/http-authschemes.xhtml&quot;&gt;list of Authentication schemes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f482fbc4881a1d523807d916609f28b7872a754" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../authentication#Authentication_schemes&quot;&gt;Authentication type&lt;/a&gt;. A common type is &lt;a href=&quot;../authentication#Basic_authentication_scheme&quot;&gt;&quot;Basic&quot;&lt;/a&gt;. IANA maintains a &lt;a href=&quot;http://www.iana.org/assignments/http-authschemes/http-authschemes.xhtml&quot;&gt;list of authentication schemes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9271b3ca583d0a214f169aaac5d8b901ef407013" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../authentication#Authentication_schemes&quot;&gt;Authentication type&lt;/a&gt;. A common type is &lt;a href=&quot;../authentication#Basic_authentication_scheme&quot;&gt;&quot;Basic&quot;&lt;/a&gt;. Other types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3998a95caed017360b796a210cceac3a44d3d533" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../authentication#Authentication_schemes&quot;&gt;Authentication type&lt;/a&gt;. A common type is &lt;a href=&quot;../authentication#Basic_authentication_scheme&quot;&gt;&quot;Basic&quot;&lt;/a&gt;. See also the &lt;a href=&quot;http://www.iana.org/assignments/http-authschemes/http-authschemes.xhtml&quot;&gt;IANA registry of Authentication schemes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7334f69496caa4ec2939e19465a7ec9d222ae5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;object-src&quot;&gt;&lt;code&gt;object-src&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed1a6aef9465b5e123982191eb4404e99344afe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../cors&quot;&gt;Cross-Origin Resource Sharing&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt;) is a standard that allows a server to relax the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;. This is used to explicitly allow some cross-origin requests while rejecting others. For example, if a site offers an embeddable service, it may be necessary to relax certain restrictions. Setting up such a CORS configuration isn't necessarily easy and may present some challenges. In these pages, we'll look into some common CORS error messages and how to resolve them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b38152b84ee0e25f627bbe623b139530315e2a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../feature-policy&quot;&gt;&lt;code&gt;Feature-Policy&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b7cf670d8bf3e8c0247eb54f4183995ff1c1bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../feature_policy&quot;&gt;Feature Policy&lt;/a&gt; allows you to control which origins can use which features, both in the top-level page and in embedded frames. Essentially, you write a policy, which is an allowed list of origins for each feature. For every feature controlled by Feature Policy, the feature is only enabled in the current document or frame if its origin matches the allowed list of origins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7323284a8b94a6807a5dea17703ee1ca786d110d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../headers/allow&quot;&gt;&lt;code&gt;Allow&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496306922873a2a923e0f9d95448b1be1cd87d9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../headers/allow&quot;&gt;&lt;code&gt;Allow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../headers/access-control-allow-methods&quot;&gt;&lt;code&gt;Access-Control-Allow-Methods&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d375c37ff27b87692d620f5e8c47471ad77b7cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../headers/content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4dbf7bbb18babc1fc5834c1b8a19311c477ee56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../headers/feature-policy&quot;&gt;&lt;code&gt;Feature-Policy&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9705aa7ee7e4c95279a78e245bc3a3a3567e1dec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../headers/referrer-policy&quot;&gt;&lt;code&gt;Referrer-Policy&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f35e59923245ed9d0fcf3d3cdefc1fdca48afc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt;: The resource has been fetched and is transmitted in the message body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d07176716d3f86abf20a2e2c1a6ab7ff50d515" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt;: The entity headers are in the message body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b982dc106de34043bb4b3472d12c3e660a36eac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt;: The resource describing the result of the action is transmitted in the message body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cbabd53a68bd1ccb42762efaf63d8445f42a2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../methods/trace&quot;&gt;&lt;code&gt;TRACE&lt;/code&gt;&lt;/a&gt;: The message body contains the request message as received by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e92c1b872ce21006e7e8f9df9ec13571456c1c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../referer&quot;&gt;&lt;code&gt;Referer&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28b0d59252da0429dda77c9d0da40c2b0671c06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../referrer-policy&quot;&gt;&lt;code&gt;Referrer-Policy&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447c3d9d796be2ce01ba113824d5f8c8099e47ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/100&quot;&gt;&lt;code&gt;100&lt;/code&gt;&lt;/a&gt; if the information contained in the header is sufficient to cause an immediate success,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9292c293a83b1ba2dcfa5ae62f0f52cef214243f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/100&quot;&gt;&lt;code&gt;100&lt;/code&gt;&lt;/a&gt;&lt;code&gt; Continue&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00718e501727ff7c9a5da87cf5a33d4bc082022d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt; Partial Content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff179b15cc19dfafde19f8f5c55a8953716531f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt;&lt;code&gt; Partial Content&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcfeb960ca130e592d6476eeb10a1ce210994bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Partial Content&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9398eaf85dc2becca09d0d245048291c32d000" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/301&quot;&gt;&lt;code&gt;301&lt;/code&gt;&lt;/a&gt; (Moved Permanently)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caaceec4f71dfb1bac3cfc85630cc666c3e1ca1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/301&quot;&gt;&lt;code&gt;301&lt;/code&gt;&lt;/a&gt; (Permanent Redirect) and &lt;a href=&quot;../status/302&quot;&gt;&lt;code&gt;302&lt;/code&gt;&lt;/a&gt; (Found) doesn't change the method most of the time, though older user-agents may (so you basically don't know).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1587f383f5c5d5c02c184b37016ff4e9cf84ab5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/304&quot;&gt;&lt;code&gt;304&lt;/code&gt;&lt;/a&gt;&lt;code&gt; Not Modified&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d5ff05fd562bada27c68e575694eb74ba92c5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/401&quot;&gt;&lt;code&gt;401&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../status/403&quot;&gt;&lt;code&gt;403&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../status/407&quot;&gt;&lt;code&gt;407&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ff659fdc7b03b46b7cf716ed1d26c18c19c355" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/412&quot;&gt;&lt;code&gt;412&lt;/code&gt;&lt;/a&gt;&lt;code&gt; Precondition Failed&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c936ac7aa471b0def1c705b283daca07099cc2a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/416&quot;&gt;&lt;code&gt;416&lt;/code&gt;&lt;/a&gt;&lt;code&gt; Range Not Satisfiable&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e321a2a2ce3e11466d3241752372dd5904c455ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/416&quot;&gt;&lt;code&gt;416&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Range Not Satisfiable&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886335205fa49b07a9ca20ebd1a2460caec15d32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/417&quot;&gt;&lt;code&gt;417&lt;/code&gt;&lt;/a&gt; (Expectation Failed) if it cannot meet the expectation; or any other 4xx status otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23d1ba104b921c9225e6419d78e31ac53cd2d7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/417&quot;&gt;&lt;code&gt;417&lt;/code&gt;&lt;/a&gt;&lt;code&gt; Expectation Failed&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea4071fb56c6c10ab93f08c0d44100108b71457" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../status/503&quot;&gt;&lt;code&gt;503&lt;/code&gt;&lt;/a&gt; (Service Unavailable)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5896a45d539cdb4a7b594153c0742526e2c19a68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../strict-transport-security&quot;&gt;&lt;code&gt;Strict-Transport-Security&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HSTS&quot;&gt;HSTS&lt;/a&gt;) header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ac61e08214c3413b19da15cd773a1a644afc3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../upgrade-insecure-requests&quot;&gt;&lt;code&gt;Upgrade-Insecure-Requests&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f389273ffc3be9a0559f42be791c4468ef7c5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;101&quot;&gt;&lt;code&gt;101&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Switching Protocol&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aae31cfc9e8d12ca680a2eda8a0995350d55b51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;204&quot;&gt;&lt;code&gt;204&lt;/code&gt;&lt;/a&gt; No Content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96998aeaec477c65b368bfaf55fe3d86b684de68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Partial Content&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf5f66ce8f89479a5806a6467a855cabd7ce6f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;301&quot;&gt;&lt;code&gt;301 Moved Permanently&lt;/code&gt;&lt;/a&gt;, a permanent redirect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb63f01f450ce3a36bd747cbb9368b8667a11a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;301&quot;&gt;&lt;code&gt;301 Moved Permanently&lt;/code&gt;&lt;/a&gt;, the permanent redirect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9cf7fe94dfd1bceb61572fb6e26fd0fa4c2b7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;301&quot;&gt;&lt;code&gt;301&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Moved Permanently&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39663ebd0499db268519d9fba8ccd78abcc08f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;302&quot;&gt;&lt;code&gt;302 Found&lt;/code&gt;&lt;/a&gt;, the equivalent of this status code, but that may change the method used when it is not a &lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4902f5b765b52d64443bf1e6e1a08c5a7829f44d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;302&quot;&gt;&lt;code&gt;302 Found&lt;/code&gt;&lt;/a&gt;, the temporary redirect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154f2185c5d845b589db5629717db1869ea48aad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;302&quot;&gt;&lt;code&gt;302&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Found&lt;/code&gt;, the temporary redirect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d0520bab74905174e270a4ee2d9a1c492e5d0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;303&quot;&gt;&lt;code&gt;303 See Other&lt;/code&gt;&lt;/a&gt;, a temporary redirect that changes the method used to &lt;a href=&quot;../methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c215acc4427e83f14f5a7fadecbaba72b2442628" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;307&quot;&gt;&lt;code&gt;307 Temporary Redirect&lt;/code&gt;&lt;/a&gt;, the equivalent of this status code where the method used never changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cab4fddcbb810e37f5d0aa420073bea80c89b11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;308&quot;&gt;&lt;code&gt;308&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Permanent Redirect&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a9b75f8cc550801163fe3ce90ae046eb5b8c17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;401&quot;&gt;&lt;code&gt;401&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;403&quot;&gt;&lt;code&gt;403&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10340ac0e112f6e4b79c12898019c5c5568369f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;403&quot;&gt;&lt;code&gt;403&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;407&quot;&gt;&lt;code&gt;407&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686204ea7a4504d59dde4780ee0e959fd5c1defc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;426&quot;&gt;&lt;code&gt;426&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Upgrade Required&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c85a909f9661b955fc4d2a0b947dcc34c637bcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;accept&quot;&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;accept-charset&quot;&gt;&lt;code&gt;Accept-Charset&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2955d69ded251b1f872f437034b0737a548f21de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basics_of_http/mime_types#multipartform-data&quot;&gt;Multiple-resource bodies&lt;/a&gt;, consisting of a multipart body, each containing a different bit of information. This is typically associated with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTML Forms&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9103a9d1b1bec59bca1cdcd2ca794a3f8a3cfb35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basics_of_http/mime_types#multipartform-data&quot;&gt;Multiple-resource bodies&lt;/a&gt;, consisting of a multipart body, each containing a different section of information. These are relatively rare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0104aba36835db03e5a66b46354c47702304774" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cors#Preflighted_requests&quot;&gt;Preflighted Access Control Requests&lt;/a&gt; occur when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213078ea3cf4933337ac0d3170418fb40e865c08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cors#Requests_with_credentials&quot;&gt;Credentialed Access Control Requests&lt;/a&gt; &amp;ndash; that is, requests that are accompanied by &lt;a href=&quot;cookies&quot;&gt;Cookies&lt;/a&gt; or HTTP Authentication information (and which expect Cookies to be sent with responses) &amp;ndash; can be either &lt;a href=&quot;cors#Simple_requests&quot;&gt;Simple&lt;/a&gt; or &lt;a href=&quot;cors#Preflighted_requests&quot;&gt;Preflighted&lt;/a&gt;, depending on the request methods used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f52c5ef87675b42accd7bff47fc616dc76f593" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cors#Simple_requests&quot;&gt;Simple Access Control Requests&lt;/a&gt; are initiated when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0310e0fc70de79e5005db9a9c18a3fd1466fedf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; fallback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c74d9a51098d128e18dc97bc296c5e9d33e519c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dnt&quot;&gt;&lt;code&gt;DNT&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f45d6c41cac2212c59ab14e6851f231dd370a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;headers&quot;&gt;HTTP headers&lt;/a&gt; for responses follow the same structure as any other header: a case-insensitive string followed by a colon (&lt;code&gt;':'&lt;/code&gt;) and a value whose structure depends upon the type of the header. The whole header, including its value, presents as a single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aed5c045fdb122c43450119a62b4e967dc02a42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;headers&quot;&gt;HTTP headers&lt;/a&gt; from a request follow the same basic structure of an HTTP header: a case-insensitive string followed by a colon (&lt;code&gt;':'&lt;/code&gt;) and a value whose structure depends upon the header. The whole header, including the value, consist of one single line, which can be quite long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424b1d5aa86255b5e958e8e5ab79ac04d408445e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;headers/content-security-policy&quot;&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSP&quot;&gt;CSP&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fa6443e9ebd6932d22b920edffc615555b87cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; (but note the additional requirements below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cc8ea41eaea3f1696996b0f204fe4dc4a36008" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;headers/feature-policy&quot;&gt;&lt;code&gt;Feature-Policy&lt;/code&gt;&lt;/a&gt; HTTP header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a823703f83996516a9191237a81cab7f5e42564" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;headers/pragma&quot;&gt;&lt;code&gt;Pragma&lt;/code&gt;&lt;/a&gt; is a HTTP/1.0 header, it is not specified for HTTP responses and is therefore not a reliable replacement for the general HTTP/1.1 &lt;code&gt;Cache-Control&lt;/code&gt; header, although it does behave the same as &lt;code&gt;Cache-Control: no-cache&lt;/code&gt;, if the &lt;code&gt;Cache-Control&lt;/code&gt; header field is omitted in a request. Use &lt;code&gt;Pragma&lt;/code&gt; only for backwards compatibility with HTTP/1.0 clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147b7fd2600de4c4224e8b17f384de5770aeb50b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;headers/public-key-pins&quot;&gt;&lt;code&gt;Public-Key-Pins&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HPKP&quot;&gt;HPKP&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a50918e48d0b84f4eccc5e6381046b4c36596a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;headers/strict-transport-security&quot;&gt;&lt;code&gt;Strict-Transport-Security&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HSTS&quot;&gt;HSTS&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82381a21f0c8763f6fd8c6c864a787a5fde10260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;headers/x-frame-options&quot;&gt;&lt;code&gt;X-Frame-Options&lt;/code&gt;&lt;/a&gt; (XFO)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7647fc1cb7347aaffdd5c884bbded0f18e878cbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://lawrencemandel.com/2012/07/27/decision-made-firefox-os-user-agent-string/&quot;&gt;Firefox OS User Agent String&lt;/a&gt; (blog post w/&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=777710&quot;&gt;bug 777710&lt;/a&gt; reference)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd3030868fd23cfd1d97b8907a17069eb4ef22b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://my.opera.com/community/openweb/idopera/&quot;&gt;&lt;strong&gt;Opera Mobi/xyz&lt;/strong&gt; token&lt;/a&gt; in the comment (Opera 12-)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae778018d6f5464577968cb8cb99433fff2e7acf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.apple.com/library/safari/documentation/AppleApplications/Reference/SafariWebContent/OptimizingforSafarioniPhone/OptimizingforSafarioniPhone.html#//apple_ref/doc/uid/TP40006517-SW3&quot;&gt;&lt;strong&gt;Mobile Safari&lt;/strong&gt; token&lt;/a&gt; outside the comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a92620ee93ec8895cb3c868ea8420cda25098f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/status/cspupgradeinsecurerequestsdirective&quot;&gt;Under consideration&lt;/a&gt; for future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd66fa4156b13b03631a230472f8fe3653068f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/status/publickeypinningextensionforhttp&quot;&gt;Under consideration&lt;/a&gt; for future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885a756b1a1c19ff64592397d63e365bf1de8006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Gecko_user_agent_string_reference&quot;&gt;&lt;strong&gt;Mobile&lt;/strong&gt; or &lt;strong&gt;Tablet&lt;/strong&gt; token&lt;/a&gt; in the comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb20cba2549aad91f3ea8e7e3533f51e3fe9cc09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; requests may only use the HTTPS URL scheme, but the URL specified by the request is of a different type. This often occurs if the URL specifies a local file, using a &lt;code&gt;file:///&lt;/code&gt; URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f45381e19fc026b07cfb93f413968b6ec0e18d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Entity_header&quot;&gt;Entity header&lt;/a&gt;: Headers containing more information about the body of the entity, like its content length or its MIME-type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abf6bfcb4fc3725cded6c0713830b333428cabf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/General_header&quot;&gt;General header&lt;/a&gt; (for a subpart of a multipart body)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0924375af9270a5fa484f99af1715b19aab70616" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/General_header&quot;&gt;General header&lt;/a&gt;, but response behavior is not specified and thus implementation-specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204737614993305bc7a09b8d0d112cdb47475748" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/General_header&quot;&gt;General header&lt;/a&gt;: Headers applying to both requests and responses but with no relation to the data eventually transmitted in the body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc2773815edfe4c45ab199989f8cd753eb44e00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt;&lt;code&gt;&lt;strong&gt;307 Temporary Redirect&lt;/strong&gt;&lt;/code&gt; redirect status response code indicates that the resource requested has been temporarily moved to the URL given by the &lt;a href=&quot;../headers/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1927a8d565ae2a0e9fa30c8b5b7fc06614647cb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Request_header&quot;&gt;Request header&lt;/a&gt;: Headers containing more information about the resource to be fetched or about the client itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d49bad6f984c1f6fdfb5eb7ba8549e1fd7993b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Response_header&quot;&gt;Response header&lt;/a&gt; (for the main body)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12576c8a7dcfb63ca24c705c9d761839207cc890" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Response_header&quot;&gt;Response header&lt;/a&gt;: Headers with additional information about the response, like its location or about the server itself (name and version etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48014b8041280c539437a3d9b0682e88a335b87e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/safe&quot;&gt;Unsafe&lt;/a&gt; requests modify the state of the server and the user shouldn't replay them inadvertently. Typically, you don't want your users to resend &lt;a href=&quot;methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methods/delete&quot;&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/a&gt; requests. If you just serve the response as the result of this request, a simple press of the reload button will (possibly after a confirmation message), resend the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bfb19177d4dcc4ba9b6256935ef0c0c70cae76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventSource&quot;&gt;&lt;code&gt;EventSource&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b03137d33a0cde2f459d3a94bdaf187ac404e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch&quot;&gt;&lt;code&gt;Fetch&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf7d28276c2e34f07a2add7a9b89063e933dc11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File_and_Directory_Entries_API&quot;&gt;FileSystem API data&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff12613cd1521e3201cb391a88d35c3089f7f94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events&quot;&gt;Server-sent events&lt;/a&gt;, where the server can push occasional messages to the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75fc56379e00eca8023ec476227875179c24969" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL&quot;&gt;WebGL textures&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527c8f9396053c4392c64c6576a34386be99f9f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket&quot;&gt;&lt;code&gt;WebSocket&lt;/code&gt;&lt;/a&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b480c762a752fe17a95f32fdab08df233f3dc2ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket_API&quot;&gt;WebSocket&lt;/a&gt;, a new protocol that can be set up by upgrading an existing HTTP connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051547768052d6577e8b72226bcfc16e77bf4fc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/execScript&quot;&gt;&lt;code&gt;window.execScript&lt;/code&gt;&lt;/a&gt;  (IE &amp;lt; 11 only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29cfb078a934f04858378fd031a7c2bd4f74743" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SharedWorker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker&quot;&gt;&lt;code&gt;ServiceWorker&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121d345e6c994ca1444c6f913fc7d1b0802c35b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SharedWorker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker&quot;&gt;&lt;code&gt;ServiceWorker&lt;/code&gt;&lt;/a&gt; are blocked and won't load:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f8891b3d67bb09eb27462d29fe3acf34e30576" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker&quot;&gt;Workers&lt;/a&gt; are in general &lt;em&gt;not&lt;/em&gt; governed by the content security policy of the document (or parent worker) that created them. To specify a content security policy for the worker, set a &lt;code&gt;Content-Security-Policy&lt;/code&gt; response header for the request which requested the worker script itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ba6a1fc23a8a4b4960b1ac4f920bc86a6ce68a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7291591fbfa4e68c8d2b7266325aa50bc4e6cb41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-ping&quot;&gt;ping&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5e2e4cc2d26b65097bc20fc91f2c5b64912fe9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-ping&quot;&gt;ping&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deeb0ec2c2adcc63a982ba289f3ce64496fbc923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track&quot;&gt;&lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aaae8675107b3ee794881841be8642d3dfe166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame&quot;&gt;&lt;code&gt;&amp;lt;frame&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc5f543bf0d66e2b16f616b420d58a39c133870" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#Attributes&quot;&gt;&lt;code&gt;allow&lt;/code&gt;&lt;/a&gt; attribute on iframes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b57422b3f0d40a50e97eedc7eb93ac03c683a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#Attributes&quot;&gt;allow&lt;/a&gt; attribute on iframes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d442bc5bca12f767e54c770297a51344b438a9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet&quot;&gt;&lt;code&gt;&amp;lt;applet&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbab38a2e3ee6da0c917db896bb6767869f26d39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements like the following will be loaded as they use a valid integrity attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d8d509704c0088dca1bc043774ef6c5e7fa241" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee14ee28d335b1101d20e77e1618fd23a4c3b48e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Patch&quot;&gt;&lt;code&gt;Accept-Patch&lt;/code&gt;&lt;/a&gt; &amp;ndash; specifies the patch document formats accepted by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803430e48b1f4fc92d9e3e147f7982e1262c6035" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link&quot;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0eb1b48205ba9daaaa748119f618eba6683a33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/102&quot;&gt;&lt;code&gt;102 Processing&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebDAV&quot;&gt;WebDAV&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1401b9b93c50a71b8c7e7bf5cc9f481d3e323dc4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/207&quot;&gt;&lt;code&gt;207 Multi-Status&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebDAV&quot;&gt;WebDAV&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a8a4366f33f1a4594169ae89044d99fa414a5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/208&quot;&gt;&lt;code&gt;208 Multi-Status&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebDAV&quot;&gt;WebDAV&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f75a162322671871fa7ea37c3ba8ac7aab1c01e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/226&quot;&gt;&lt;code&gt;226 IM Used&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://tools.ietf.org/html/rfc3229&quot;&gt;HTTP Delta encoding&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494a964b0f03394d278010c73ec1be83ef042d19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/423&quot;&gt;&lt;code&gt;423 Locked&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebDAV&quot;&gt;WebDAV&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fd041fc769cf29931079bf285fddb583b72050" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/424&quot;&gt;&lt;code&gt;424 Failed Dependency&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebDAV&quot;&gt;WebDAV&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19f78d27aca46a688664ac521b7c4f85e23faf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/508&quot;&gt;&lt;code&gt;508 Loop Detected&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebDAV&quot;&gt;WebDAV&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc67af154c70b19256dfad2e55cee9c6e5a745ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly&quot;&gt;WebAssembly&lt;/a&gt; or asm.js applications can use large contiguous blocks of allocated memory. For complex games, for example, these allocations can be quite large, sometimes as large as 1GB. The &lt;code&gt;Large-Allocation&lt;/code&gt; tells the browser that the web content in the to-be-loaded page is going to want to perform a large contiguous memory allocation and the browser can react to this header by starting a dedicated process for the to-be-loaded document, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90855cd5575005519e921e3ee181334ec78344d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developers.google.com/chrome/mobile/docs/user-agent&quot;&gt;&lt;strong&gt;Mobile Safari&lt;/strong&gt; token&lt;/a&gt; outside the comment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71023495a533600233b9025e7c1ccc4f6dd2ac9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/3GP_and_3G2&quot;&gt;3GPP2&lt;/a&gt; audio/video container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ad57df5293f560db2b2341439c2cdd084820ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/3GP_and_3G2&quot;&gt;3GPP&lt;/a&gt; audio/video container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9805b72c662234acccad5a3ae432768a782ed9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/7-Zip&quot;&gt;7-zip&lt;/a&gt; archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e5917dd93ae5319beec11f95a8a53a40c7a7b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/AbiWord&quot;&gt;AbiWord&lt;/a&gt; document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af85af5c8d46fecf71ede8ae0826de736d98fe93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Fahrenheit_451&quot;&gt;Wikipedia: Fahrenheit 451&lt;/a&gt; (which gave this status code its number)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90992a735f883012bcd1e6519b4c5195e7577464" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_cookie#Cross-site_request_forgery&quot;&gt;Wikipedia&lt;/a&gt; mentions a good example for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSRF&quot;&gt;CSRF&lt;/a&gt;. In this situation, someone includes an image that isn&amp;rsquo;t really an image (for example in an unfiltered chat or forum), instead it really is a request to your bank&amp;rsquo;s server to withdraw money:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95824313cfe958502e16ee8dd0b65f4bee95dde8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/SWF&quot;&gt;Small web format&lt;/a&gt; (SWF) or Adobe Flash document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e4206b64a40883ac7b41d0f2708e33c6881854" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hacks.mozilla.org/2010/09/final-user-agent-string-for-firefox-4/&quot;&gt;Final User Agent string for Firefox 4&lt;/a&gt; (blog post)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969dd1b2c1f07ea8f242d97d8f1ea3a0d3698831" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://redbot.org/&quot;&gt;RedBot&lt;/a&gt;, a tool to check your cache-related HTTP headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb1eb4d8b630d11aceaca15ad9779a270e7cc7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe/43881141#43881141&quot;&gt;Stack Overflow answer with &amp;ldquo;how to&amp;rdquo; info for dealing with common problems&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfcc5d4f80eca574b571caf2d439ca95585ec61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1806&quot;&gt;RFC 1806&lt;/a&gt; [&lt;a href=&quot;#ref-35&quot;&gt;35&lt;/a&gt;], from which the often implemented Content-Disposition
   (see &lt;a href=&quot;#section-19.5.1&quot;&gt;section 19.5.1&lt;/a&gt;) header in HTTP is derived, has a number of very
   serious security considerations. Content-Disposition is not part of
   the HTTP standard, but since it is widely implemented, we are
   documenting its use and risks for implementors. See &lt;a href=&quot;https://tools.ietf.org/html/rfc2183&quot;&gt;RFC 2183&lt;/a&gt; [&lt;a href=&quot;#ref-49&quot;&gt;49&lt;/a&gt;]
   (which updates &lt;a href=&quot;https://tools.ietf.org/html/rfc1806&quot;&gt;RFC 1806&lt;/a&gt;) for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0df8b93b8a0f3864d3456467b4c5c6a47512b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc1945&quot;&gt;RFC 1945&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc2068&quot;&gt;RFC 2068&lt;/a&gt; document protocol elements used by some
   existing HTTP implementations, but not consistently and correctly
   across most HTTP/1.1 applications. Implementors are advised to be
   aware of these features, but cannot rely upon their presence in, or
   interoperability with, other HTTP/1.1 applications. Some of these 

   describe proposed experimental features, and some describe features
   that experimental deployment found lacking that are now addressed in
   the base HTTP/1.1 specification.

   A number of other headers, such as Content-Disposition and Title,
   from SMTP and MIME are also often implemented (see &lt;a href=&quot;https://tools.ietf.org/html/rfc2076&quot;&gt;RFC 2076&lt;/a&gt; [&lt;a href=&quot;#ref-37&quot;&gt;37&lt;/a&gt;]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe4f38ae24103ebdb792af2d65cd70fc4c20239" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt; [&lt;a href=&quot;#ref-7&quot;&gt;7&lt;/a&gt;] requires that an Internet mail entity be converted to
   canonical form prior to being transferred, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc2049#section-4&quot;&gt;section&amp;nbsp;4
   of RFC 2049&lt;/a&gt; [&lt;a href=&quot;#ref-48&quot;&gt;48&lt;/a&gt;]. &lt;a href=&quot;#section-3.7.1&quot;&gt;Section 3.7.1&lt;/a&gt; of this document describes the forms
   allowed for subtypes of the &quot;text&quot; media type when transmitted over
   HTTP. &lt;a href=&quot;https://tools.ietf.org/html/rfc2046&quot;&gt;RFC 2046&lt;/a&gt; requires that content with a type of &quot;text&quot; represent
   line breaks as CRLF and forbids the use of CR or LF outside of line 

   break sequences. HTTP allows CRLF, bare CR, and bare LF to indicate a
   line break within text content when a message is transmitted over
   HTTP.

   Where it is possible, a proxy or gateway from HTTP to a strict MIME
   environment SHOULD translate all line breaks within the text media
   types described in &lt;a href=&quot;#section-3.7.1&quot;&gt;section 3.7.1&lt;/a&gt; of this document to the &lt;a href=&quot;https://tools.ietf.org/html/rfc2049&quot;&gt;RFC 2049&lt;/a&gt;
   canonical form of CRLF. Note, however, that this might be complicated
   by the presence of a Content-Encoding and by the fact that HTTP
   allows the use of some character sets which do not use octets 13 and
   10 to represent CR and LF, as is the case for some multi-byte
   character sets.

   Implementors should note that conversion will break any cryptographic
   checksums applied to the original content unless the original content
   is already in canonical form. Therefore, the canonical form is
   recommended for any content that uses such checksums in HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d193bfc6093fe1b32e29afdc38f102573deda1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt; does not include any concept equivalent to HTTP/1.1's
   Content-Encoding header field. Since this acts as a modifier on the
   media type, proxies and gateways from HTTP to MIME-compliant
   protocols MUST either change the value of the Content-Type header
   field or decode the entity-body before forwarding the message. (Some
   experimental applications of Content-Type for Internet mail have used
   a media-type parameter of &quot;;conversions=&amp;lt;content-coding&amp;gt;&quot; to perform
   a function equivalent to Content-Encoding. However, this parameter is
   not part of &lt;a href=&quot;https://tools.ietf.org/html/rfc2045&quot;&gt;RFC 2045&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5acd73bfe3f98dd39b904514a97e9692f78dfe6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot;&gt;RFC 7235&lt;/a&gt; defines the HTTP authentication framework which can be used by a server to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/challenge&quot;&gt;challenge&lt;/a&gt; a client request and by a client to provide authentication information. The challenge and response flow works like this: The server responds to a client with a &lt;a href=&quot;status/401&quot;&gt;&lt;code&gt;401&lt;/code&gt;&lt;/a&gt; (Unauthorized) response status and provides information on how to authorize with a &lt;a href=&quot;headers/www-authenticate&quot;&gt;&lt;code&gt;WWW-Authenticate&lt;/code&gt;&lt;/a&gt; response header containing at least one challenge. A client that wants to authenticate itself with a server can then do so by including an &lt;a href=&quot;headers/authorization&quot;&gt;&lt;code&gt;Authorization&lt;/code&gt;&lt;/a&gt; request header field with the credentials. Usually a client will present a password prompt to the user and will then issue the request including the correct &lt;code&gt;Authorization&lt;/code&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59eb5be676c5b795d95c8f6407684b03430f13c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://wikipedia.org/wiki/HTTP/2&quot;&gt;HTTP/2&lt;/a&gt; doesn't support HTTP 1.1's chunked transfer encoding mechanism, as it provides its own, more efficient, mechanisms for data streaming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf0a100051b938f88dfccd208e5d52309c6960d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.chrisfinke.com/2011/07/25/what-do-people-type-in-the-address-bar/&quot;&gt;Stats on what people type in the URL bar&lt;/a&gt; (2011)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe00741409212237a760229eb46bd7a8e1955843" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml&quot;&gt;IANA list of URI schemes&lt;/a&gt; (&lt;code&gt;resource:&lt;/code&gt; is &lt;a href=&quot;https://www.iana.org/assignments/uri-schemes/prov/resource&quot;&gt;covered here&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7ab0cd5e9d6cc0bbf5bf2b7c9833780f7ec900" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.test-cors.org&quot;&gt;https://www.test-cors.org&lt;/a&gt; &amp;ndash; page to test CORS requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e982e595fe9a2ec1aee9d34686bc26531f6e1e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;Content-Location&lt;/code&gt; are different. &lt;code&gt;Location&lt;/code&gt; indicates the URL of a redirect, while &lt;code&gt;Content-Location&lt;/code&gt; indicates the direct URL to use to access the resource, without further content negotiation in the future. &lt;code&gt;Location&lt;/code&gt; is a header associated with the response, while &lt;code&gt;Content-Location&lt;/code&gt; is associated with the data returned. This distinction may seem abstract without &lt;a href=&quot;#Examples&quot;&gt;examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2a6ddaec16a3edfdc94e0f7efe959587a84071" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; methods unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12770ae1a036fc62a1ebf9754529de25f0f0f14a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;status&quot;&gt;HTTP response status codes&lt;/a&gt; indicate if a specific HTTP request has been successfully completed. Responses are grouped into five classes: informational responses, successful responses, redirects, client errors, and servers errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e94225d9244fed7eb590a62f656ac9e5b7ac60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt;: OK. The request has succeeded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86cf8a9c3f892ccc82f678757f0b561dbc201889" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;status/301&quot;&gt;&lt;code&gt;301&lt;/code&gt;&lt;/a&gt;: Moved Permanently. This response code means that the URI of requested resource has been changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edee8954a71dd974c7fbbe6d22db039702cc57f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;status/401&quot;&gt;&lt;code&gt;401&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;status/403&quot;&gt;&lt;code&gt;403&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;status/407&quot;&gt;&lt;code&gt;407&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5682faaeff8d8405ba05e973e78bbcca22d3c72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;status/404&quot;&gt;&lt;code&gt;404&lt;/code&gt;&lt;/a&gt;: Not Found. The server cannot find the requested resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011efcf4daa603d7987653eeace6aaf8d3607e32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;status/422&quot;&gt;&lt;code&gt;422 Unprocessable Entity&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebDAV&quot;&gt;WebDAV&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69c119cc7df18547bdb91b3d1efbb42c7bb7251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tk&quot;&gt;&lt;code&gt;Tk&lt;/code&gt;&lt;/a&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c7189225cc6ddfd5598fe268e3da86fd821907" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;via&quot;&gt;&lt;code&gt;Via&lt;/code&gt;&lt;/a&gt; &amp;ndash; provides information about the proxy itself, not about the client connecting to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1dfac9b90963cc67b4212fb5d9bddb9d3a0c67d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;*&quot;&lt;/code&gt; (wildcard)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168969db02c31ae92b1ca289a449ca1e5f4e001e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#SomewhereInTheDocument&lt;/code&gt; is an anchor to another part of the resource itself. An anchor represents a sort of &quot;bookmark&quot; inside the resource, giving the browser the directions to show the content located at that &quot;bookmarked&quot; spot. On an HTML document, for example, the browser will scroll to the point where the anchor is defined; on a video or audio document, the browser will try to go to the time the anchor represents. It is worth noting that the part after the #, also known as fragment identifier, is never sent to the server with the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313f87cfb5d4045c1f52e5fbe3080ad71e9cdf97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; element support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1122e2a033ba6b2b2503f5df8c55129672264777" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'W/'&lt;/code&gt; (case-sensitive) indicates that a &lt;a href=&quot;../conditional_requests#Weak_validation&quot;&gt;weak validator&lt;/a&gt; is used. Weak validators are easy to generate but are far less useful for comparisons. Strong validators are ideal for comparisons but can be very difficult to generate efficiently. Weak &lt;code&gt;Etag&lt;/code&gt; values of two representations of the same resources might be semantically equivalent, but not byte-for-byte identical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97188b3b49fff06d5cc0411a9c53601360f9be47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'blob:'&lt;/code&gt; Allows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Blob&quot;&gt;&lt;code&gt;blob:&lt;/code&gt; URIs&lt;/a&gt; to be used as a content source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a342eef2501189145a4898e7b90e0200f609cfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'filesystem:'&lt;/code&gt; Allows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystem&quot;&gt;&lt;code&gt;filesystem:&lt;/code&gt; URIs&lt;/a&gt; to be used as a content source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f01a01ad3e13e84d55afb3360d54da02466f6f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'mediastream:'&lt;/code&gt; Allows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API&quot;&gt;&lt;code&gt;mediastream:&lt;/code&gt; URIs&lt;/a&gt; to be used as a content source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200a0c76d0f7a6e30e78926189fb255771573943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'none'&lt;/code&gt;: The feature is disabled in top-level and nested browsing contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edfaf30ad941efcb25dadbc7e607c927f243a38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'self'&lt;/code&gt;: (Default) The feature is allowed by default in top-level browsing contexts and in nested browsing contexts (iframes) in the same origin. The feature is not allowed in cross-origin documents in nested browsing contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0a59cdafd06e8ffac5bc440bc361a7f61d8df1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'self'&lt;/code&gt;: The feature is allowed by default in top-level browsing contexts and in nested browsing contexts (iframes) in the same origin. The feature is not allowed in cross-origin documents in nested browsing contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc91fdfc5adeaec9e83bec9e5834b4577c5ed493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'self'&lt;/code&gt;: The feature will be allowed in this document, and in all nested browsing contexts (iframes) in the same origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eefd2f14d31b996b7dc4b8f860bdaacc733fa51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'src'&lt;/code&gt;: (In an iframe allow attribute only) The feature will be allowed in this iframe, as long as the document loaded into it comes from the same origin as the URL in the iframe's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#Attributes&quot;&gt;src&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bbef44051c7dfd255962f76b4414b76ae1e96a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*/*&lt;/code&gt; (since Firefox 47)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecab0afb6d993678a9d5e5886358762a177a476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;: The feature is allowed by default in top-level browsing contexts and all nested browsing contexts (iframes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b735430b4dce2f66f7724c0514f34ff870390503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;: The feature will be allowed in this document, and all nested browsing contexts (iframes) regardless of their origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640173e85ee307e082e6700d6e4edb3e9d5ca922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/csp-violation-report-endpoint/&lt;/code&gt; could for example run a PHP something like the following that logs the JSON detailing the violation and, if the violation is the first one added to the log file, sends an email to an administrator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a960d27af11e8445c320f9d3dceb0187a318c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/path/to/myfile.html&lt;/code&gt; is the path to the resource on the Web server. In the early days of the Web, a path like this represented a physical file location on the Web server. Nowadays, it is mostly an abstraction handled by Web servers without any physical reality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c38fe2afa93176170c2dda890053534dfe0412" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1xx&lt;/code&gt; warn-codes describe the freshness or validation status of the response and will be deleted by a cache after deletion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1d2a53eeba25dad15ec1f39c7e1dd6e42147c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2xx&lt;/code&gt; warn-codes describe some aspect of the representation that is not rectified by a validation and won't be deleted by a cache after validation unless a full response is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dee2eeab14da7845ccee5d3cee967c0833ba940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:80&lt;/code&gt; is the port in this instance. It indicates the technical &quot;gate&quot; used to access the resources on the web server. It is usually omitted if the web server uses the standard ports of the HTTP protocol (80 for HTTP and 443 for HTTPS) to grant access to its resources. Otherwise it is mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2603c58f23a2639ce60266df5d1d08caf743e6b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;;q=&lt;/code&gt; (q-factor weighting)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460f4edc88bff619c62a108dd52d684004a53ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;;q=&lt;/code&gt; (qvalues weighting)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67341fd67b3e7962e5b06e083f9ebfe05b879707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox&quot;&gt;sandbox&lt;/a&gt;&lt;/code&gt; attribute on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3661c58d4e20d3e694eb61cbcad7206fa54c87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;var&gt;appname&lt;/var&gt;/&lt;var&gt;appversion&lt;/var&gt;&lt;/code&gt; indicates the application name and version. For instance, this could be &quot;&lt;code&gt;Camino/2.1.1&lt;/code&gt;&quot;, or &quot;&lt;code&gt;SeaMonkey/2.7.1&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717fd253203196b643ddde759c150f99a881aa11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;var&gt;platform&lt;/var&gt;&lt;/code&gt; describes the native platform the browser is running on (e.g. Windows, Mac, Linux or Android), and whether or not it's a mobile phone. Firefox OS phones simply say &quot;&lt;code&gt;Mobile&lt;/code&gt;&quot;; the web is the platform. Note that &lt;code&gt;&lt;var&gt;platform&lt;/var&gt;&lt;/code&gt; can consist of multiple &quot;; &quot;-separated tokens. See below for further details and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33cf37c486d86f50139e9e81bb66f3a1ea180a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;?key1=value1&amp;amp;key2=value2&lt;/code&gt; are extra parameters provided to the Web server. Those parameters are a list of key/value pairs separated with the &lt;code&gt;&amp;amp;&lt;/code&gt; symbol. The Web server can use those parameters to do extra stuff before returning the resource to the user. Each Web server has its own rules regarding parameters, and the only reliable way to know how a specific Web server is handling parameters is by asking the Web server owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9734377524f4bab7229213e86c4fba2fe3db4f5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; specifies either a single origin, which tells browsers to allow that origin to access the resource; or else &amp;mdash; for requests &lt;strong&gt;without&lt;/strong&gt; credentials &amp;mdash; the &quot;&lt;code&gt;*&lt;/code&gt;&quot; wildcard, to tell browsers to allow any origin to access the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6fcf486efcf8dafaacacf95f66825d65a0a921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Authorization&lt;/code&gt; and &lt;code&gt;Proxy-Authorization&lt;/code&gt; headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b0525452310a4781fea8bb6c9a4d5d0b0a171a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONNECT&lt;/code&gt; is a hop-by-hop method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70a4c14456fddc799fb9f380cd422c12e395e4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Content-Type&lt;/code&gt; in HTML forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666b68c9f7c2985d1c0aec2e7c1526456ea60e3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Domain&lt;/code&gt; specifies allowed hosts to receive the cookie. If unspecified, it defaults to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/location&quot;&gt;host of the current document location&lt;/a&gt;, &lt;strong&gt;excluding subdomains&lt;/strong&gt;. If &lt;code&gt;Domain&lt;/code&gt;&lt;em&gt;is&lt;/em&gt; specified, then subdomains are always included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430eccbeb10616c1667b56b08dafd037880c502b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Firefox/&lt;var&gt;firefoxversion&lt;/var&gt;&lt;/code&gt; indicates the browser is Firefox, and provides the version (such as &quot;&lt;code&gt;17.0&lt;/code&gt;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7a50735711e281c9047991e11bebb33bcb62d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Firefox/&lt;var&gt;firefoxversion&lt;/var&gt;&lt;/code&gt; is an optional compatibility token that some Gecko-based browsers may choose to incorporate, to achieve maximum compatibility with websites that expect Firefox. &lt;code&gt;&lt;var&gt;firefoxversion&lt;/var&gt;&lt;/code&gt; will generally represent the equivalent Firefox release corresponding to the given Gecko version. Some Gecko-based browsers may not opt into using this token; for this reason, sniffers should be looking for Gecko &amp;mdash; not Firefox! Whether this token appears is controlled by the &lt;em&gt;&quot;general.useragent.compatMode.firefox&quot;&lt;/em&gt; boolean pref.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83175c0c83190340c4489fd6ae9ee1a934ed9a71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Gecko/&lt;var&gt;geckotrail&lt;/var&gt;&lt;/code&gt; indicates that the browser is based on Gecko.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a228fd96a7408392cbcb3813928350f350e50207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;If-None-Match&lt;/code&gt; will only work with HTTP/1.1 (and later) compliant servers. If unsure if the server will be compliant, you need first to issue a &lt;a href=&quot;methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; request to the resource to check this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508404d1813ebabe2c32ce512a94765a712d52dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Location&lt;/code&gt; and &lt;a href=&quot;content-location&quot;&gt;&lt;code&gt;Content-Location&lt;/code&gt;&lt;/a&gt; are different: &lt;code&gt;Location&lt;/code&gt; indicates the target of a redirection (or the URL of a newly created resource), while &lt;a href=&quot;content-location&quot;&gt;&lt;code&gt;Content-Location&lt;/code&gt;&lt;/a&gt; indicates the direct URL to use to access the resource when &lt;a href=&quot;../content_negotiation&quot;&gt;content negotiation&lt;/a&gt; happened, without the need of further content negotiation. &lt;code&gt;Location&lt;/code&gt; is a header associated with the response, while &lt;a href=&quot;content-location&quot;&gt;&lt;code&gt;Content-Location&lt;/code&gt;&lt;/a&gt; is associated with the entity returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c886ee9de036a11cd39c55c1c8a34a671515932a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mozilla/5.0&lt;/code&gt; is the general token that says the browser is Mozilla compatible, and is common to almost every browser today.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c5b53f9cc971e41d354a59f08cb14193e42687" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Origin&lt;/code&gt; can be the empty string: this is useful, for example, if the source is a &lt;code&gt;data&lt;/code&gt; URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4b55a7a3845806e6a220853adae33bedbc35ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PATCH&lt;/code&gt; (like &lt;code&gt;PUT&lt;/code&gt;) &lt;em&gt;may &lt;/em&gt;have side-effects on other resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8837a866bb5e84cb36edb035c9dacae15b9fb67e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path&lt;/code&gt; indicates a URL path that must exist in the requested URL in order to send the &lt;code&gt;Cookie&lt;/code&gt; header. The %x2F (&quot;/&quot;) character is considered a directory separator, and subdirectories will match as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbecfc6d033457d994eb9ec8e8c4e9fb27ad4c18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RedirectMatch&lt;/code&gt; does the same but takes a regular expression to define a collection of URLs that are affected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b101c508d7de641e3c9b78b6c6dafd91ce5ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Report-To&lt;/code&gt; header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3545cf00b2dbecae3edf60ab36339a9e2b1a7148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SameSite&lt;/code&gt; cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d46751b9db498f94e74c67533e0ca80cb5244b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SameSite&lt;/code&gt; cookies let servers require that a cookie shouldn't be sent with cross-site requests, which somewhat protects against cross-site request forgery attacks (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSRF&quot;&gt;CSRF&lt;/a&gt;). &lt;code&gt;SameSite&lt;/code&gt; cookies are still experimental and not yet supported by all browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e745dd567a61d2b823b698b6c567db5372ef05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Secure&lt;/code&gt; and &lt;code&gt;HttpOnly&lt;/code&gt; cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2bc175611e9927b33e13ba6a527f1c80aa6b74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Transfer-Encoding&lt;/code&gt; is a &lt;a href=&quot;../headers#hbh&quot;&gt;hop-by-hop header&lt;/a&gt;, that is applied to a message between two nodes, not to a resource itself. Each segment of a multi-node connection can use different &lt;code&gt;Transfer-Encoding&lt;/code&gt; values. If you want to compress data over the whole connection, use the end-to-end &lt;a href=&quot;content-encoding&quot;&gt;&lt;code&gt;Content-Encoding&lt;/code&gt;&lt;/a&gt; header instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb0832484e9846e79382518dacea3694cc908eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;W/&lt;/code&gt;Optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ea12a44dc357dc998d062b442a6d0abbda2ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WWW-Authenticate&lt;/code&gt; and &lt;code&gt;Proxy-Authenticate&lt;/code&gt; headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4720c2e36891a142570a6efa51f4846c339e536e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Warning&lt;/code&gt; header fields can in general be applied to any message, however some warn-codes are specific to caches and can only be applied to response messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559d4f22d24d4979caf62ca90aeaf3c1b68a0259" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X-Forwarded-For&lt;/code&gt; is also an email-header indicating that an email-message was forwarded from another account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b735f974dabf08278d397b03c66755afbcebc6cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__Host-&lt;/code&gt;: Cookies with a name starting with &lt;code&gt;__Host-&lt;/code&gt; must be set with the &lt;code&gt;secure&lt;/code&gt; flag, must be from a secure page (HTTPS), must not have a domain specified (and therefore aren't sent to subdomains) and the path must be &quot;/&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996734424aec529514e582d86d9a9ef9829d2120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__Secure-&lt;/code&gt;: Cookies with a name starting with&lt;code&gt; __Secure-&lt;/code&gt; (dash is part of the prefix) must be set with the &lt;code&gt;secure&lt;/code&gt; flag and must be from a secure page (HTTPS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b071688faf7d15be2467412e43935f9c1876e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application/javascript&lt;/code&gt;, &lt;code&gt;application/octet-stream&lt;/code&gt;, &lt;code&gt;application/pkcs12&lt;/code&gt;, &lt;code&gt;application/vnd.mspowerpoint&lt;/code&gt;, &lt;code&gt;application/xhtml+xml&lt;/code&gt;, &lt;code&gt;application/xml&lt;/code&gt;, &lt;code&gt;application/pdf&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb2236f20aafa32e3bbe6503e35dd80aaa067cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application/octet-stream&lt;/code&gt; is the default value for all other cases. An unknown file type should use this type. Browsers pay a particular care when manipulating these files, attempting to safeguard the user to prevent dangerous behaviors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046dd47603143dd66b0f699e01834a2cb3c1c2a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;: the keys and values are encoded in key-value tuples separated by &lt;code&gt;'&amp;amp;'&lt;/code&gt;, with a &lt;code&gt;'='&lt;/code&gt; between the key and the value. Non-alphanumeric characters in both keys and values are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;percent encoded&lt;/a&gt;: this is the reason why this type is not suitable to use with binary data (use &lt;code&gt;multipart/form-data&lt;/code&gt; instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f5a165adceece66c277fd419332c789ef5af49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;audio/3gpp2&lt;/code&gt; if it doesn't contain video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbc0a63dc90b20c644c5db4a3f7bb5ed2b79887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;audio/3gpp&lt;/code&gt; if it doesn't contain video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7c1ee8c9e35ada5c9f97ef1406b8f2a89cc6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;audio/midi&lt;/code&gt;, &lt;code&gt;audio/mpeg, audio/webm, audio/ogg, audio/wav&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15476bce65870287ed95ee775d8d0125b5796b49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;audio/midi&lt;/code&gt;&lt;code&gt;audio/x-midi&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74b47e8962de30a095a4afdb1434eb44473082d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blob:&lt;/code&gt; Allows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Blob&quot;&gt;&lt;code&gt;blob:&lt;/code&gt; URIs&lt;/a&gt; to be used as a content source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cedf202bd5e56b4a7a0b770207c7b3e537482f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data:&lt;/code&gt; Allows &lt;a href=&quot;../../basics_of_http/data_uris&quot;&gt;&lt;code&gt;data:&lt;/code&gt; URIs&lt;/a&gt; to be used as a content source.&lt;em&gt; This is insecure; an attacker can also inject arbitrary data: URIs. Use this sparingly and definitely not for scripts.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e8d4582838210a0010175b9f1d1a94e64bd760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filesystem:&lt;/code&gt; Allows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystem&quot;&gt;&lt;code&gt;filesystem:&lt;/code&gt; URIs&lt;/a&gt; to be used as a content source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5b17704aa73d71b57ddfee5ae52904f6cbe4a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http://*.example.com&lt;/code&gt;: Matches all attempts to load from any subdomain of example.com using the &lt;code&gt;http:&lt;/code&gt; URL scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87adcad8b7f3a444fe3a23d324ebbd9ad80279d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http://&lt;/code&gt; is the protocol. It indicates which protocol the browser must use. Usually it is the HTTP protocol or its secured version, HTTPS. The Web requires one of these two, but browsers also know how to handle other protocols such as &lt;code&gt;mailto:&lt;/code&gt; (to open a mail client) or &lt;code&gt;ftp:&lt;/code&gt; to handle file transfer, so don't be surprised if you see such protocols. Common schemes are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8192cc4926f052b38b6889bdffb5176a46aa8aef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;https://store.example.com&lt;/code&gt;: Matches all attempts to access store.example.com using &lt;code&gt;https:&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad89516a0a68ec4595a318ee40d2deb7696466d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image/gif&lt;/code&gt;, &lt;code&gt;image/png&lt;/code&gt;, &lt;code&gt;image/jpeg&lt;/code&gt;, &lt;code&gt;image/bmp&lt;/code&gt;, &lt;code&gt;image/webp&lt;/code&gt;, &lt;code&gt;image/vnd.microsoft.icon&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e670e11840f2c143114bfcce0447e0ea8a84b55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image/png,image/*;q=0.8,*/*;q=0.5&lt;/code&gt; (before)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a7c0c94f93c554de4b3aa43992df395ee61067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image/webp,*/*&lt;/code&gt; (since Firefox 65)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4192bd9d6484dddc749760f4426df861d5bfd291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image/x-icon&lt;/code&gt;, &lt;code&gt;image/vnd.microsoft.icon&lt;/code&gt;&lt;sup&gt;&lt;a href=&quot;#Image_types-Footnote_1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7b700cde15a948a0b04f2f9f7edd0d48f85282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includeSubDomains &lt;/code&gt;Optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76eb27d7b65b54721b0983aa99db6ae4b267ee8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includeSubDomains&lt;/code&gt;Optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195331eac1cd6749f68b58df82f4a6d4a55022b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mail.example.com:443&lt;/code&gt;: Matches all attempts to access port 443 on mail.example.com.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dc64cdda1be2a90261b52bc77a141c04fddf53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max&lt;/code&gt;: indicating the maximum number of requests that can be sent on this connection before closing it. Unless &lt;code&gt;0&lt;/code&gt;, this value is ignored for non-pipelined connections as another request will be send in the next response. An HTTP pipeline can use it to limit the pipelining.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f43ccf9d7cac9cf7fb4438f42052a1b1f7e949" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mediastream:&lt;/code&gt; Allows &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStream_API&quot;&gt;&lt;code&gt;mediastream:&lt;/code&gt; URIs&lt;/a&gt; to be used as a content source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661ebbcc4e7719acc5621bcdaa2b4dd44f6991f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preload&lt;/code&gt;Optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69a05026d10099f5c4e7e1edda1853c3a4d8600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report-uri&lt;/code&gt;Optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3f7b9f76f87b8aa77b6bdf71edd198e488b727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;report-uri=&quot;&amp;lt;uri&amp;gt;&quot;&lt;/code&gt;Optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4d8bf35d5c972f33a0893e3786633a26c91383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rv:&lt;var&gt;geckoversion&lt;/var&gt;&lt;/code&gt; indicates the release version of Gecko (such as &quot;&lt;code&gt;17.0&lt;/code&gt;&quot;). In recent browsers, &lt;code&gt;&lt;var&gt;geckoversion&lt;/var&gt;&lt;/code&gt; is the same as &lt;code&gt;&lt;var&gt;firefoxversion&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa586a25b1ec44d122c0258a241af3405c4a55e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text/css&lt;/code&gt; and &lt;code&gt;text/javascript&lt;/code&gt; are historical accidents, as neither are intended to be read by humans &amp;mdash; the correct type for JavaScript is &lt;code&gt;application/javascript&lt;/code&gt;. (HTML is theoretically human-readable.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f312da5b0b0ddd5748b1440a9691ccbb58837b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&lt;/code&gt; since Firefox 65</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e8089a7a6fdeb63cba11fb8501804cd9b7e200" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text/plain&lt;/code&gt; is the default value for textual files. A textual file should be human-readable and must not contain binary data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e19e340a5225f9c02c996ba02bcf0410a35022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;text/plain&lt;/code&gt;, &lt;code&gt;text/html&lt;/code&gt;, &lt;code&gt;text/markdown&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb315a4aeff16225144f0b24695e6c0aabd7fbd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt;: indicating the &lt;em&gt;minimum &lt;/em&gt;amount of time an idle connection has to be kept opened (in seconds). Note that timeouts longer than the TCP timeout may be ignored if no keep-alive TCP message is set at the transport level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4c9ca98f90ee99ad0ecda35698acf41a64d572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;video/webm&lt;/code&gt;, &lt;code&gt;video/ogg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a50abcf404ce53dc913e3c4b97ec01c39ec8476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;www.example.com&lt;/code&gt; is the domain name or authority that governs the namespace. It indicates which Web server is being requested. Alternatively, it is possible to directly use an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IP_address&quot;&gt;IP address&lt;/a&gt;, but because it is less convenient, it is not often used on the Web.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd7a814489306a2b9b33623194e15c3842d66fa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;caching&quot;&gt;Cache&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd18426e2cd7335133bc7e14c1cd8d3a60d074e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;a href=&quot;proxy_servers_and_tunneling&quot;&gt;Proxy and tunneling&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c32439dcb841a3d6844f4714f9707585f834e24" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Firefox/firefoxversion&lt;/strong&gt;&lt;/em&gt; indicates the browser is Firefox, and provides the version (such as &quot;&lt;em&gt;17.0&quot;&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205d202607b77dfc62ca6694fb7137816a0d88db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Mozilla/5.0&lt;/strong&gt;&lt;/em&gt; is the general token that says the browser is Mozilla compatible, and is common to almost every browser today.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0585b5eaeaae9739dd5394ed8c12d4d3cf9ac0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Authentication&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ad7a5e56ad919aba089e4e852ea6b5ca1702c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CSP 1.1 and CSP 3.0 doesn't extend the HTTP standard&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e3c783d2f13f60e8dca9bb5f23c14bc6d9f5fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Defines Cookies&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a782db2f388d165f78cada70c2901f5aa6ed0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Defines X-UA-Compatible&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5ea7d6554c520c0e9058df4e89035a6853679c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Defines extensions of HTTP for Server-Sent Events&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa696994a7c729cfd1c75b2a9abb1ffe7b472610" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Defines the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link&quot;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt; header&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652774b91a41d1c441878b834c6f9c02e6cfd4f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Discrete&lt;/em&gt; types indicate the category of the document. They can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccf32c42d860131d3507245284e343714e658e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Entity headers&lt;/em&gt;, like &lt;a href=&quot;headers/content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt; which apply to the body of the request. Obviously there is no such header transmitted if there is no body in the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f7c28b4a1d4ccd52a9a0385104109534bb4e4e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Entity headers&lt;/em&gt;, like &lt;a href=&quot;headers/content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt;, apply to the body of the request. Obviously no such headers are transmitted when there is no body in the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1eaf871e722da99394106a7d776ce349bbac563" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;General headers&lt;/em&gt;, like &lt;a href=&quot;headers/via&quot;&gt;&lt;code&gt;Via&lt;/code&gt;&lt;/a&gt;, apply to the message as a whole.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ca0f7f91ee62f68d5eb81ba02e7811a691e556" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;General headers&lt;/em&gt;, like &lt;a href=&quot;headers/via&quot;&gt;&lt;code&gt;Via&lt;/code&gt;&lt;/a&gt;, apply to the whole message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d3f2181bc3dcfd044924623ac347c468927091" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Learn more about CORS &lt;a href=&quot;cors&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3494c495d3c834b66ef3eec53d5dd06314c78e43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Loss-less compression&lt;/em&gt;, where the compression-uncompression cycle doesn't alter the data that is recovered. It matches (byte to byte) with the original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973d7421310f7d03886c6d840a375a925e2b551f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Lossy compression&lt;/em&gt;, where the cycle alters the original data, in an imperceptible way for the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f5b815edc736cce3d4b20c367ac61304e83d7e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Multipart&lt;/em&gt; types indicate a category of document broken into pieces, often with different MIME types. They represent a &lt;em&gt;composite&lt;/em&gt; document. With the exception of &lt;code&gt;multipart/form-data&lt;/code&gt;, used in the &lt;a href=&quot;../methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTML Forms&lt;/a&gt;, and &lt;code&gt;multipart/byteranges&lt;/code&gt;, used with &lt;a href=&quot;../status/206&quot;&gt;&lt;code&gt;206&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Partial Content&lt;/code&gt; to send part of a document, HTTP doesn't handle multipart documents in a special way: the message is transmitted to the browser (which will likely show a &quot;Save As&quot; window if it doesn't know how to display the document.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d539738e616f539ed42045a14b10c30505d0abb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Once ready, this protocol will supersede TLS 1.2.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bf6a6ac1b240e26f283bf2d786697552c4c75d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Only a subset of syntax of the &lt;a href=&quot;headers/content-disposition&quot;&gt;&lt;code&gt;Content-Disposition&lt;/code&gt;&lt;/a&gt; header can be used in the context of HTTP messages.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9a1eb062cbe2b2736d8bb67ec412a4db64d665" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Or&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c202d7ba5e373898ce781fd2d5e3bd85bb081936" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Relaxing the origin constraint&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5ed9e5d28547c4ddc84ec3ef33671852584179" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Request headers&lt;/em&gt;, like &lt;a href=&quot;headers/user-agent&quot;&gt;&lt;code&gt;User-Agent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Type&quot;&gt;&lt;code&gt;Accept-Type&lt;/code&gt;&lt;/a&gt;, modify the request by specifying it further (like &lt;a href=&quot;headers/accept-language&quot;&gt;&lt;code&gt;Accept-Language&lt;/code&gt;&lt;/a&gt;), by giving context (like &lt;a href=&quot;headers/referer&quot;&gt;&lt;code&gt;Referer&lt;/code&gt;&lt;/a&gt;), or by conditionally restricting it (like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None&quot;&gt;&lt;code&gt;If-None&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ec5d5ec01acd408cbb8d41f9eaa1f319e45f4e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Response headers&lt;/em&gt;, like &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;headers/accept-ranges&quot;&gt;&lt;code&gt;Accept-Ranges&lt;/code&gt;&lt;/a&gt;, give additional information about the server which doesn't fit in the status line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41fcdb2dc5895c2f95355727851bf01e68a73b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Sessions&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357ced148b416eefdfdc1ed97193312372bd10bf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Strong validation&lt;/em&gt; is used when byte to byte identity is expected, for example when resuming a download.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c787246903f3cb55a909d6483f4f32e64d68299" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;These extensions of the Web, as well as CardDAV and CalDAV, are out-of-scope for HTTP on the Web. Modern APIs for application are defines using the RESTful pattern nowadays.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22ca9abe9568d2dd5535806963885e93212fadc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This page needs to be completed by someone with a deeper understanding of &lt;strong&gt;HTTP Alternative Services&lt;/strong&gt; than me. ~~&lt;a href=&quot;https://developer.mozilla.org/en-US/profiles/ExE-Boss&quot;&gt;ExE-Boss&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3286ea8c1c0b44535058a0b9f08b07107d60e7a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This specification has been modified by subsequent RFCs, but these modifications have no effect on the HTTP protocol.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9da2e01081947dbf1af62034e489ea51f447540" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Used to negotiate HTTP/2 at the transport to save an extra request/response round trip.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817922e8bb9ec046cf17e4f551398f2370e0827e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Weak validation&lt;/em&gt; is used when the user-agent only needs to determine if the two resources have the same content. This is even if they are minor differences; like different ads, or a footer with a different date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3c1d9291828e9dc20cc46d928f34379bde45f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;no support for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da1640cd064d733bc91e03bbd7a8fdd7a1b04e0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;no support for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3853505372fe592bda8804bbd1d24bacc08f84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Deprecated&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6d428e3c3bdac121ee984826a4318bc3046d02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Non-standard&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23e7b16b1b356401be67f3b11f39c65f93e89ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Obsolete&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0675290f5b555cb034aa6386cc0d8707c6cf11fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(none)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39c9eacd633f4d4bc54138ab48ccf9dc3066cd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;dfn&gt;Hypertext Transfer Protocol (HTTP)&lt;/dfn&gt;&lt;/strong&gt; is an &lt;a href=&quot;https://en.wikipedia.org/wiki/Application_Layer&quot;&gt;application-layer&lt;/a&gt; protocol for transmitting hypermedia documents, such as HTML. It was designed for communication between web browsers and web servers, but it can also be used for other purposes. HTTP follows a classical &lt;a href=&quot;https://en.wikipedia.org/wiki/Client%E2%80%93server_model&quot;&gt;client-server model&lt;/a&gt;, with a client opening a connection to make a request, then waiting until it receives a response. HTTP is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Stateless_protocol&quot;&gt;stateless protocol&lt;/a&gt;, meaning that the server does not keep any data (state) between two requests. Though often based on a TCP/IP layer, it can be used on any reliable &lt;a href=&quot;https://en.wikipedia.org/wiki/Transport_Layer&quot;&gt;transport layer&lt;/a&gt;; that is, a protocol that doesn't lose messages silently, such as UDP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a6601a76d0150e64e2b793dcf6c5c52f732021" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Gecko/geckotrail&lt;/em&gt;&lt;/strong&gt; indicates that the browser is based on Gecko.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9fbe408fc73f4887beecf25bc3c49357956d7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;platform&lt;/em&gt;&lt;/strong&gt; describes the native platform the browser is running on (e.g. Windows, Mac, Linux or Android), and whether or not it's a mobile phone. Firefox OS phones simply say &quot;Mobile&quot;; the web is the platform. Note that &lt;strong&gt;&lt;em&gt;platform&lt;/em&gt;&lt;/strong&gt; can consist of multiple &quot;; &quot;-separated tokens. See below for further details and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d026c9dbda7139fa607c97bfa4fc742f93ed75d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;AWS4-HMAC-SHA256&lt;/strong&gt; (see &lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html&quot;&gt;AWS docs&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff50a00404cdc50e905add1f6f81dbc9eb31056" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access Control, Access-Control-Allow-Origin, CORS, Dealing with CORS, HTTP, HTTP Header, How to Fix CORS, Reference, Security, cross-origin issue, header, origin&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd44b5cf358ded1c1995ace68440c401004a3b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Basic&lt;/strong&gt; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7617&quot;&gt;RFC 7617&lt;/a&gt;, base64-encoded credentials. See below for more information.),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c7c3ad97c68719c936edd09f335204375c3551" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bearer&lt;/strong&gt; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc6750&quot;&gt;RFC 6750&lt;/a&gt;, bearer tokens to access OAuth 2.0-protected resources),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7c17bcce265fcfa32bf14e671864dd13f9d6d0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CORS, HTTP, Reference, Timing-Allow-Origin, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cf58b43d916fccc91ccee3317aa2ddfcf1c477" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CORS, HTTP, Reference, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f915a2bfea059cf773478bb2fd13a1a8ae2e1e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSP, Directive, Document directive, HTTP, Security&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db0ffb816c4095cf4e1192e9284d0fe589e8c46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSP, Directive, Flash, HTTP, Java, Plugins, Security&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1b67e770ae3b07ac0865912968fed7b5a37ab4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSP, Directive, HTTP, Mixed Content, Reference, Security&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2c8b77f55fb2403040b0cd24068d773ccddefc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSP, Directive, HTTP, Reference, Security&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cc20ac88a2be31686a1d0b2c1474ca49aff46c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSP, Directive, HTTP, Security&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916fe1e939f85bbb98d7f63c6e92a98b7e8a7727" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSP, HTTP, HTTPS, Reference, Security, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c218e21fa7d88b439513436168996bbf6e59c2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSP, HTTP, Reference, Security, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69060716d3f4bc8066250560b356ec2e1720607" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSP, HTTP, report-to&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8547aefa3ded5766f3fb6b0e36cf67019ded1e46" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caching, Deprecated, HTTP, header, request&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a15c7d4d521c9ec83f7404d91d58662315db8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caching, HTTP, Response, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282569f6f839871af755e5f61b9be6b5c1a0432c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Client hints, HTTP, header, request&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4a3f1d70b8b9b0b0b2078e01df161361858e14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compatibility, Firefox, Firefox 4, Gecko, Gecko 2.0, Guide&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a086bb6758e931e884cf81a4cb526322c359c61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compression&lt;/strong&gt; is an important way to increase the performance of a Web site. For some documents, size reduction of up to 70% lowers the bandwidth capacity needs. Over the years, algorithms also got more efficient, and new ones are supported by clients and servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6dc6d3284b2e987d01db1d7d6dc48b74946ff5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Conditional Requests, HTTP, HTTP Header, Reference, Request header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174fd1f0b4c3ac6271fbff2890b8be69583a3d9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Condtional Requests, HTTP, HTTP Header, Range Requests, Reference, Request header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5346b7bf3f902e9cb177c633967e9e051251313" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Content Negotiation, HTTP, HTTP Header, Reference, Request header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9194b73c96a2aecebba42bbb3fc83b55450591a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Content Security Policy&lt;/strong&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSP&quot;&gt;CSP&lt;/a&gt;) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XSS&quot;&gt;XSS&lt;/a&gt;) and data injection attacks. These attacks are used for everything from data theft to site defacement to distribution of malware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c4020b74a0a40fc07f5c36e0f13c44b46538fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Content-Type, HTTP, Reference, Request header, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2929c70917881823dc8ab4654b1b47c437ea52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cookies, HTTP, Obsolete, Reference, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1f900989ca0263a1c078c9aa817e8008924aae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cookies, HTTP, Reference, Response, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c65ef3135ca22c1e575fe72a6c4a569fdece58" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cookies, HTTP, Reference, header, request&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570f5c9de0709c5f0d219b9502aa28c30b215c6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cross-site HTTP requests&lt;/strong&gt; are HTTP requests for resources from a &lt;strong&gt;different domain&lt;/strong&gt; than the domain of the resource making the request. For instance, an HTML page from Domain A (&lt;code&gt;http://domaina.example/&lt;/code&gt;) makes a request for an image on Domain B (&lt;code&gt;http://domainb.foo/image.jpg&lt;/code&gt;) via the &lt;code&gt;img&lt;/code&gt; element. Web pages today very commonly load cross-site resources, including CSS stylesheets, images, scripts, and other resources. CORS allows web developers to control how their site reacts to cross-site requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bc20fc151a5e3b1b3af40cdcb517a1d9f771e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Currently, the patterns are&lt;em&gt; shell expressions&lt;/em&gt;, not regular expressions.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0646838071c65e0df157e52dc3603000fcaea2a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DNS, HTTP, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bccc73a4321e926a37bf11b288781a96de3c657" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DNT, HTTP, Reference, Response, header, tracking&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4ff5d2bdc64ccf70a6e1dc7a8799959ce94bb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DNT, HTTP, Reference, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bca6d21b8186a73a92e6c962e1360f4571de744" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Data URLs&lt;/strong&gt;, URLs prefixed with the &lt;code&gt;data:&lt;/code&gt; scheme, allow content creators to embed small files inline in documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080d1687587afa9da8035ce72275fc62454c49f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Digest&lt;/strong&gt; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7616&quot;&gt;RFC 7616&lt;/a&gt;, only md5 hashing is supported in Firefox, see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=472823&quot;&gt;bug 472823&lt;/a&gt; for SHA encryption support),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a201d486d2fbfc5bee1086f516853a8a925d4455" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Draft, HTTP, HTTP Header, NeedsContent, Reference&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da78bdbff09e97bab87bdc906f9d0d91f67a71e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Draft, HTTP, NeedsCompatTable, NeedsContent, Reference, Sec-WebSocket-Accept, WebSockets, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4820d4d089613850c19a46265c5f03e759e9db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Draft&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8206b8f71010313ab581b58752dc71053e30af8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Entity header, HTTP, HTTP Header, Reference, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc7d76ed7e267b051aceffd4e2b7fe90a0a4e93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Experimental, Feature Policy, Feature-Policy, HTTP, Reference, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e49f198e414c1041d303eb64c475cc32ebbb305" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Feature Policy, Feature-Policy, Geolocation, HTTP, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c88d451a8735464dba106c80cdf9527a395ec7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Feature Policy, Feature-Policy, HTTP, fullscreen, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfccefa5c04d7f94b095892e5756c88fda2cc6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Feature Policy, Feature-Policy, HTTP, header, microphone&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9601767fb23990dfbadccad5f163c8c89b21f1da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Firefox TV version&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe62cdcb3585b92133c1ee9c6f150629b36e70f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Firefox for Echo Show version&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72eb6ca40b10e18a4a57bfbe679befba179a91c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Found 115 pages:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f007c82d3bcfc1da2003070c01efca50ae1a811" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Gecko, HAProxy, HTTP, Response Header, Security, nginx&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851b9a7a901faa3dabf665067a7c02d17ea96957" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;General Header, HTTP, HTTP Header, Reference&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991dbe0d8bcfda678f447f452af8bc792d0b7b59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;General Header, HTTP, Reference, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3a0f409652de71a2ba76bc426b5736f9d2f231" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HOBA&lt;/strong&gt; (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7486&quot;&gt;RFC 7486&lt;/a&gt; (draft), &lt;strong&gt;H&lt;/strong&gt;TTP &lt;strong&gt;O&lt;/strong&gt;rigin-&lt;strong&gt;B&lt;/strong&gt;ound &lt;strong&gt;A&lt;/strong&gt;uthentication, digital-signature-based),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1656ca717c2f237d6d3fd91d66939e372fbdec7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HPKP, HTTP, Reference, Security, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78febffacc627dfd97f8729c044f8beafa05c08d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HPKP, HTTP, Security, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd28df8ce6ee289fb997378b3afd623e0361f892" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HSTS, HTTP, HTTPS, Security, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3181a1498edd6cbe28f18879621cee35a87959" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP Public Key Pinning&lt;/strong&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HPKP&quot;&gt;HPKP&lt;/a&gt;) is a security feature that tells a web client to associate a specific cryptographic public key with a certain web server to decrease the risk of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/MITM&quot;&gt;MITM&lt;/a&gt; attacks with forged certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674c671043f662865127b563a91825c0543d9613" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Index&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7eb970d6457c175fa0cee0b8a48fe110d79741a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Networking, Overview, Reference&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb5ae77eb292e02d6dda16e08a25f7989735630" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Non-standard, Reference, Request header, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283a46f3eed863b259086bde484365bf2cd4dc32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Non-standard, Reference, Response Header, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6daac13377e4c1375bf9bdd9e00e4390e951d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Proxy, Reference, Response Header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9f2a1216ca535d46133f0065f7b8189fb20bca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Range Requests, Reference, Request header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480a0ee12b2122f341a386e1693d782fe5aa204e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Range Requests, Reference, Response Header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e521f9a30e99fa515d4a3cb1aa8658519d1787" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Reference, Request header, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0a281f867a81b6e723386bbb18d14ffbf376a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Reference, Request header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f5fbaf69ec96c35f39f27921fee7f0eede7a72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Reference, Response Header, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067500d7711501ec6fc36518b70df792c82c8b2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Reference, Response Header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3da87e4f7ba8ee4f7e1b88bd2481615f0ecf5e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTP Header, Reference, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bfbd3aeda8b41462db581bcb8c7d86f4feb1bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, HTTPS, Security, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4586e1093bbddbe56be4c151dd614de5f2e1fd4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, Headers, Reference, Web&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeffd81f035b4cf09723277311bedfcbf878724b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, Headers, Reference&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5776b2d457ca6d6c859d363f04c99620576ac77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, Obsolete, Reference, header, request&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9615dbbfa82e6ba03b05245a0512c284f98be81b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, Performance, Reference, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d8d80c35ba6eabecbf8a37eb91b4c2811f4e3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, Privacy, Response, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b8a268b9cb5fb6b2ee51c838a7599d9872244f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, Reference, Response, Response Header, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49561460ab8d964be2ef99b01a4e9af1e99276ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, Reference, Response, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda2f5fb2c1b3a075764b5a43eaf1592d5bf55ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, Reference, Security, XSS, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072df181503ed20ab79cdf03ab2285003bc0fd21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, Reference, header, referer, referrer&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44bb2c60d3ea63c7612f6991c7664d9ec249346" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP, Reference, header&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e72941fc395a0f1225c3331647a4b007668049" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP&lt;/strong&gt; (HyperText Transfer Protocol) is the underlying protocol of the World Wide Web. Developed by Tim Berners-Lee and his team between 1989-1991, HTTP has seen many changes, keeping most of the simplicity and further shaping its flexibility. HTTP has evolved from an early protocol to exchange files in a semi-trusted laboratory environment, to the modern maze of the Internet, now carrying images, videos in high resolution and 3D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec539803d5cac5f72e08d2d439bed4d09cd1ef1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP&lt;/strong&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/protocol&quot;&gt;protocol&lt;/a&gt; which allows the fetching of resources, such as HTML documents. It is the foundation of any data exchange on the Web and a client-server protocol, which means requests are initiated by the recipient, usually the Web browser. A complete document is reconstructed from the different sub-documents fetched, for instance text, layout description, images, videos, scripts, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860a67b0fdb5f3a2ffe35c144f6be1cfa2e1aa89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IEMobile/xyz&lt;/strong&gt; token in the comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153a7461a3ac7a8263328a53b141091b46055310" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If&lt;/strong&gt; the request uses any of the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534ebb92f03761340bd9d7c33ff6b68debad62dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: Although this header has many innocent uses it can have undesirable consequences for user security and privacy. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Referer_header:_privacy_and_security_concerns&quot;&gt;Referer header: privacy and security concerns&lt;/a&gt; for more information and mitigations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46ad8420459337c6973849d1633407c5c3aaa63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: The client should not repeat this request without modification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f2b838484fd592b5c2a92180354a605b14261d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mozilla/5.0 (&lt;em&gt;platform&lt;/em&gt;; rv:&lt;em&gt;geckoversion&lt;/em&gt;) Gecko/&lt;em&gt;geckotrail&lt;/em&gt; Firefox/&lt;em&gt;firefoxversion&lt;/em&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f30f669ed4105d1268601c55ed30bbad06220b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mutual&lt;/strong&gt; (see &lt;a href=&quot;https://tools.ietf.org/html/draft-ietf-httpauth-mutual-11&quot;&gt;draft-ietf-httpauth-mutual&lt;/a&gt;),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b75dc360155d11b63c7517670a6efd8da6a4ad3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: &lt;/strong&gt;A 410 response is cacheable by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d974e3b9efeec71101a45121b41305e56234b71f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: &lt;/strong&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Gateway_(telecommunications)&quot;&gt;Gateway&lt;/a&gt; might refer to different things in networking and a 502 error is usually not something you can fix, but requires a fix by the web server or the proxies you are trying to get access through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4df0e48f32c7df1f77f13e13428704bb7534fa0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: &lt;/strong&gt;Some Web applications may use the &lt;code&gt;308 Permanent Redirect&lt;/code&gt; in a non-standard way and for other purposes. For example, Google Drive uses a &lt;code&gt;308 Resume Incomplete&lt;/code&gt; response to indicate to the client when an incomplete upload stalled.&lt;sup&gt;&lt;a href=&quot;https://developers.google.com/drive/v3/web/manage-uploads#resumable&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bb592e9c156e9439a37d2cf27675589a41ebbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: &lt;/strong&gt;by specification, when sending data in a series of chunks, the &lt;code&gt;Content-Length&lt;/code&gt; header is omitted and at the beginning of each chunk you need to add the length of the current chunk in hexadecimal format. See &lt;a href=&quot;../headers/transfer-encoding&quot;&gt;&lt;code&gt;Transfer-Encoding&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd469545c185ecbd388735fc63db2b4eaef4851" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: &lt;/strong&gt;some servers merely shut down the connection without sending this message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b316619bdbd38e5eb09b72d3590ee1f38d38423" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; (Before Firefox 49) day1 must be less than day2, month1 must be less than month2, and year1 must be less than year2 if you want the function to evaluate these parameters as a range. See the warning below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda34147dff2822c526f0b3fd2765a2a1c87aa47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; (Before Firefox 49) the category hour1, min1, sec1 must be less than the category hour2, min2, sec2 if you want the function to evaluate these parameters as a range. See the warning below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f212eaf13d457df83503062dead709db68c15700" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; (Before Firefox 49) wd1 must be less than wd2 if you want the function to evaluate these parameters as a range. See the warning below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00e33b0edd45c16ffe94474e60639dbd537c503" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Disallowing inline styles and inline scripts is one of the biggest security wins CSP provides. However, if you absolutely have to use it, there are a few mechanisms that will allow them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c3a9bd5d98ee01b5816110bdb51c7a7466707d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For security reasons, specifics about what went wrong with a CORS request &lt;em&gt;are not available to JavaScript code&lt;/em&gt;. All the code knows is that an error occurred. The only way to determine what specifically went wrong is to look at the browser's console for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87ce244834f2e978b1ef4eb4804766ecc310bcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Here's how to use the &lt;code&gt;Set-Cookie&lt;/code&gt; header in various server-side applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c8fdf37399e43cdcce887c3118f11901566053" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If the server includes any unrecognized or undefined method names in its &lt;code&gt;Access-Control-Allow-methods&lt;/code&gt; header, a different error occurs: &lt;code&gt;&lt;a href=&quot;corsinvalidallowmethod&quot;&gt;Reason: invalid token &amp;lsquo;xyz' in CORS header &amp;lsquo;Access-Control-Allow-Methods&amp;rsquo;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4621630c09107cdaf411c83848004605b1515d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Insecure sites (&lt;code&gt;http:&lt;/code&gt;) can't set cookies with the &quot;secure&quot; directive anymore (new in Chrome 52+ and Firefox 52+).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e819e5d3f4dffa70275ab91b9b1440175ac684f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Language tags are formaly defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5646&quot;&gt;RFC 5646&lt;/a&gt;, which rely on the &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_639&quot;&gt;ISO 639&lt;/a&gt; standard (quite often the &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes&quot;&gt;ISO 639-1 code list&lt;/a&gt;) for &lt;a href=&quot;https://en.wikipedia.org/wiki/Language_code&quot;&gt;language codes&lt;/a&gt; to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7ac2cff780823daedbdf88676603fb6369278b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Presto is no longer used in Opera browser builds &amp;gt;= version 15 (see 'Blink')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34168924f6fcec6a00727715bf8617c1c54b9b26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Setting the meta tag is useless! For instance, &lt;code&gt;&amp;lt;meta http-equiv=&quot;X-Frame-Options&quot; content=&quot;deny&quot;&amp;gt;&lt;/code&gt; has no effect. Do not use it! Only by setting through the HTTP header like the examples below, &lt;code&gt;X-Frame-Options&lt;/code&gt; will work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8be2d5eddcbdd016056f349c9e4408d499d89d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Since all of the examples that follow are very specific, they have not been tested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b2f861e751b5855999518eb261980580bf4672" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header is &lt;strong&gt;ignored&lt;/strong&gt; by the browser when your site is accessed using HTTP; this is because an attacker may intercept HTTP connections and inject the header or remove it. When your site is accessed over HTTPS with no certificate errors, the browser knows your site is HTTPS capable and will honor the &lt;code&gt;Strict-Transport-Security&lt;/code&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c4f12d8d302ba215c870b1843b73b9f536c495" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;origin&lt;/code&gt; can be the empty string; this is useful, for example, if the source is a &lt;code&gt;data&lt;/code&gt; URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304088294bf506a870bb4e437437af28205c3397" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The client-server model does not allow the server to send data to the client without an explicit request for it. To work around this problem, web developers use several techniques: ping the server periodically via the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHTTPRequest&quot;&gt;&lt;code&gt;XMLHTTPRequest&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch&quot;&gt;&lt;code&gt;Fetch&lt;/code&gt;&lt;/a&gt; APIs, using the &lt;a href=&quot;https://developer.mozilla.org/en/WebSockets&quot;&gt;WebSockets API&lt;/a&gt;, or similar protocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83be53a888351de284dfe5bd879c3bdb2534e7b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The same can be accomplished using the shExpMatch() function described earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec77e4ddcbd16e5ca9d0939b6fa9dbe6f545e14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; These are the same kinds of cross-site requests that web content can already issue, and no response data is released to the requester unless the server sends an appropriate header. Therefore, sites that prevent cross-site request forgery have nothing new to fear from HTTP access control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9b1a98d6cab34726c041cc80293dc0f66dc4b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; These examples use a max-age of two months and include all subdomains. It is advised to verify that this setup will work for your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ba62c536df9b1377a7afb02bfe34e7832c2512" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is the simplest and most efficient autoconfig file for cases where there's only one proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7054a0b4150d999f9ed6b30470546ce31b0302a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This requires the &lt;code&gt;mod_setenv&lt;/code&gt; server.module loaded which can be included by the following if not already loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443779c9bd540eaecf56ac5c3810be8635da0087" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Use &lt;code&gt;application/xml&lt;/code&gt; or &lt;code&gt;application/xhtml+xml&lt;/code&gt; if you want XML&amp;rsquo;s strict parsing rules, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CDATASection&quot;&gt;&amp;lt;![CDATA[&amp;hellip;]]&amp;gt;&lt;/a&gt;&lt;/code&gt; sections, or elements that aren't from HTML/SVG/MathML namespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c24a29b2470440a8e9a35d6d056b16bf2fe51a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; WebKit Nightly and Safari Technology Preview place additional restrictions on the values allowed in the &lt;a href=&quot;headers/accept&quot;&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/accept-language&quot;&gt;&lt;code&gt;Accept-Language&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;headers/content-language&quot;&gt;&lt;code&gt;Content-Language&lt;/code&gt;&lt;/a&gt; headers. If any of those headers have &amp;rdquo;non-standard&amp;rdquo; values, WebKit/Safari does not consider the request to meet the conditions for a &amp;ldquo;simple request&amp;rdquo;. What WebKit/Safari considers &amp;ldquo;non-standard&amp;rdquo; values for those headers is not documented except in the following WebKit bugs: &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=165178&quot;&gt;Require preflight for non-standard CORS-safelisted request headers Accept, Accept-Language, and Content-Language&lt;/a&gt;, &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=165566&quot;&gt;Allow commas in Accept, Accept-Language, and Content-Language request headers for simple CORS&lt;/a&gt;, and &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=166363&quot;&gt;Switch to a blacklist model for restricted Accept headers in simple CORS requests&lt;/a&gt;. No other browsers implement those extra restrictions, because they&amp;rsquo;re not part of the spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5aaebf7e068a59330c3c40df3c9d8ede599b6e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; WebKit Nightly and Safari Technology Preview place additional restrictions on the values allowed in the &lt;a href=&quot;headers/accept&quot;&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/accept-language&quot;&gt;&lt;code&gt;Accept-Language&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;headers/content-language&quot;&gt;&lt;code&gt;Content-Language&lt;/code&gt;&lt;/a&gt; headers. If any of those headers have &amp;rdquo;non-standard&amp;rdquo; values, WebKit/Safari preflights the request. What WebKit/Safari considers &amp;ldquo;non-standard&amp;rdquo; values for those headers is not documented except in the following WebKit bugs: &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=165178&quot;&gt;Require preflight for non-standard CORS-safelisted request headers Accept, Accept-Language, and Content-Language&lt;/a&gt;, &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=165566&quot;&gt;Allow commas in Accept, Accept-Language, and Content-Language request headers for simple CORS&lt;/a&gt;, and &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=166363&quot;&gt;Switch to a blacklist model for restricted Accept headers in simple CORS requests&lt;/a&gt;. No other browsers implement those extra restrictions, because they&amp;rsquo;re not part of the spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d04de14bb8a226235663eac4ed72f253dd0c29d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; While the example below shows how to set a pin on a server certificate, it is recommended to place the pin on the intermediate certificate of the CA that issued the server certificate, to ease certificates renewals and rotations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c179b3299241d4b9d5aa16912c80cfbd5de89f88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; pactester (part of the &lt;a href=&quot;https://github.com/pacparser/pacparser&quot;&gt;pacparser &lt;/a&gt;package) was used to test the following syntax examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efebd84814fd2e11f8f150251d303eb1d835290" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link&quot;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt; header might also contain a &lt;code&gt;rel=&quot;blocked-by&quot;&lt;/code&gt; relation identifying the entity and implementing blockage, not any other entity mandating it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af80df95e73218497cf2f00036ef58070386410c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; together with this response, a user-friendly page explaining the problem should be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30e030cdd4ca983ae4b4c93eb68ae504e4f12eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; the order of the above exceptions for efficiency: localHostOrDomainIs() functions only get executed for URLs that are in local domain, not for every URL. Be careful to note the parentheses around the&lt;em&gt; or&lt;/em&gt; expression before the &lt;em&gt;and&lt;/em&gt; expression to achieve the above-mentioned efficient behaviour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd92687b99044b4eddf773d671c4667439b4622" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1843e2030a6aeca337799403819b835be226cf12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;Pragma&lt;/code&gt; is not specified for HTTP responses and is therefore not a reliable replacement for the general HTTP/1.1 &lt;code&gt;Cache-Control&lt;/code&gt; header, although it does behave the same as &lt;code&gt;Cache-Control: no-cache&lt;/code&gt;, if the &lt;code&gt;Cache-Control&lt;/code&gt; header field is omitted in a request. Use &lt;code&gt;Pragma&lt;/code&gt; only for backwards compatibility with HTTP/1.0 clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1110bc125165be0f62b6eafc81ca2de14f0330" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: A &lt;a href=&quot;https://en.wikipedia.org/wiki/Gateway_(telecommunications)&quot;&gt;Gateway&lt;/a&gt; might refer to different things in networking and a 504 error is usually not something you can fix, but requires a fix by the web server or the proxies you are trying to get access through.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc772bb4625bd43daac6f9d96be41aad106991cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Base64 encoding does not mean encryption or hashing! This method is equally secure as sending the credentials in clear text (base64 is a reversible encoding). Prefer to use HTTPS in conjunction with Basic Authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d3ed0faf2fad98b3675efd558957bafa8c53a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Data URLs are treated as unique opaque origins by modern browsers, rather than inheriting the origin of the settings object responsible for the navigation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bfc3609d7e1f772c66f537fe1a144c16d7c6fe9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: It is recommended that web and extension developers don&amp;rsquo;t try to use resource URLs anymore. Their usage was hacky at best, and most usage won&amp;rsquo;t work any more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f1b5644289ec394893dd23cb2b10f2196ab5da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The current specification requires including a second pin for a backup key which isn't yet used in production. This allows for changing the server's public key without breaking accessibility for clients that have already noted the pins. This is important for example when the former key gets compromised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24eda01459df40153e0327438339557346d3ffaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: When an expiry date is set, the time and date set is relative to the client the cookie is being set on, not the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771d0fe6879445f40d35f37483caadd9126789d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes: &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef937726101d6bbf1ea792d981c362dd127505c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc88397f7c19759528e3b9fa83992339b47160a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Or if&lt;/strong&gt; a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; object is used in the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f13104933552c19f103996afe844c493179e037" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Or if&lt;/strong&gt; one or more event listeners are registered on an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestUpload&quot;&gt;&lt;code&gt;XMLHttpRequestUpload&lt;/code&gt;&lt;/a&gt; object used in the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c677eaf2741c5e4df5b29046f236b52b8298066" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Or if&lt;/strong&gt; the &lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; header has a value &lt;strong&gt;OTHER THAN&lt;/strong&gt; the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61738e62e12d0ff8b71b5d2e79c4053cba89876d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Or if&lt;/strong&gt;, apart from the headers set automatically by the user agent (for example, &lt;a href=&quot;headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;headers/user-agent&quot;&gt;&lt;code&gt;User-Agent&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://fetch.spec.whatwg.org/#forbidden-header-name&quot;&gt;any of the &lt;strong&gt;OTHER&lt;/strong&gt; header with a name defined in the Fetch spec as a &amp;ldquo;forbidden header name&amp;rdquo;&lt;/a&gt;), the request includes any headers other than &lt;a href=&quot;https://fetch.spec.whatwg.org/#cors-safelisted-request-header&quot;&gt;those which the Fetch spec defines as being a &amp;ldquo;CORS-safelisted request-header&amp;rdquo;&lt;/a&gt;, which are the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea6b235a3ba6666911859a109d4fc8fc91b64d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The order of the days matter&lt;/strong&gt;; Before Firefox 49, &lt;code&gt;weekdayRange(&quot;&lt;em&gt;SUN&quot;, &quot;SAT&quot;&lt;/em&gt;)&lt;/code&gt; will always evaluate to true. Now &lt;code&gt;weekdayRange(&quot;&lt;em&gt;WED&quot;, &quot;SUN&quot;&lt;/em&gt;)&lt;/code&gt; will only evaluate true if the current day is Wednesday or Sunday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b6ace2fed6933c454cf30f37e2de99d4be7a0e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The order of the days, months, and years matter&lt;/strong&gt;; Before Firefox 49, &lt;code&gt;dateRange(&quot;&lt;em&gt;JAN&quot;, &quot;DEC&quot;&lt;/em&gt;)&lt;/code&gt; will always evaluate to &lt;code&gt;true&lt;/code&gt;. Now &lt;code&gt;dateRange(&quot;&lt;em&gt;DEC&quot;, &quot;JAN&quot;&lt;/em&gt;)&lt;/code&gt; will only evaluate true if the current month is December or January.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02340d698dd0ec6717eea68e0cd7d2f69adbc33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The order of the hour, minute, second matter&lt;/strong&gt;; Before Firefox 49, &lt;code&gt;timeRange(&lt;em&gt;0, 23&lt;/em&gt;)&lt;/code&gt; will always evaluate to true. Now &lt;code&gt;timeRange(&lt;em&gt;23, 0&lt;/em&gt;)&lt;/code&gt; will only evaluate true if the current hour is 23:00 or midnight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e4aaed0fd3b9cd2ba2b9eaa0a19580faf40229" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The use of these URLs is deprecated&lt;/strong&gt;. In Chrome, the &lt;code&gt;username:password@&lt;/code&gt; part in URLs is even&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=82250#c7&quot;&gt; stripped out&lt;/a&gt; for security reasons. In Firefox, it is checked if the site actually requires authentication and if not, Firefox will warn the user with a prompt &quot;You are about to log in to the site &amp;ldquo;www.example.com&amp;rdquo; with the username &amp;ldquo;username&amp;rdquo;, but the website does not require authentication. This may be an attempt to trick you.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9833331fd9a6aef6d0b22322f7e75ecf6f7892ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental&quot;&gt;experimental technology&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f1537491321a13d13a856be988bf8c727d07c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User Agent string&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313da95c6a7f125319d0d24ebcea286d90590479" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User agent string&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1718b8dc0752c466a1315d6fe85d05c49bd75c42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Using the wildcard to allow all sites to access a private API is a bad idea for what should be obvious reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8d65b0a070be6fe59297772cc486baf706fdc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;http&lt;/strong&gt;://example.com/page.html</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5173145791c5741797f81a70f078fc4128f6a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;http&lt;/strong&gt;://example.org</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0170edac58b7aeedfed4391dbbe002a9e92625f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rv:&lt;em&gt;geckoversion&lt;/em&gt;&lt;/strong&gt; indicates the release version of Gecko (such as &lt;em&gt;&quot;17.0&quot;&lt;/em&gt;). In recent browsers, &lt;strong&gt;&lt;em&gt;geckoversion&lt;/em&gt;&lt;/strong&gt; is the same as &lt;strong&gt;&lt;em&gt;firefoxversion&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7a49ba9ba8b5538aada64ad63ad4c8ee12b482" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[1]&lt;/sup&gt; Opera 15+ (Blink-based engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c1c5c5fb343904dc84131506b66e256ab025c7" translate="yes" xml:space="preserve">
          <source>&lt;sup&gt;[2]&lt;/sup&gt; Opera 12- (Presto-based engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8ea947b8d5c6a913834a2be1ccf7d915e28c37" translate="yes" xml:space="preserve">
          <source>&lt;u&gt;No&lt;/u&gt;, you can have two. What is important is that you are coherent and consistent with which one is the official domain. &lt;strong&gt;This official domain is called the &lt;em&gt;canonical&lt;/em&gt; name. &lt;/strong&gt;All your absolute links should use it. But even so, you can still have the other domain working: HTTP allows two techniques so that it is clear for your users, or search engines, which domain is the canonical one, while still allowing the non-canonical domain to work and provide the expected pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004367efc569b9c997a262547e9df3edd50f02b5" translate="yes" xml:space="preserve">
          <source>&lt;u&gt;Yes&lt;/u&gt;, you need to choose one and stick with it. The choice of which one to have as your canonical location is yours, but if you choose one, stick with it. It will make your website appear more consistent to your users and to search engines. This includes always linking to the chosen domain (which shouldn't be hard if you're using relative URLs in your website) and always sharing links (by email/social networks, etc.) to the same domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bab61eb53176449e25c2c82f172b82cb13ffb9d" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5da73fbf96f3f1fc98686e72eb30aa5535d6ebf" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 43</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3895142b75b5fd9554d11e7748d79a37da384ce" translate="yes" xml:space="preserve">
          <source>A &quot;cache&quot; is a local store of previous response messages and the
   subsystem that controls its message storage, retrieval, and deletion.
   A cache stores cacheable responses in order to reduce the response
   time and network bandwidth consumption on future, equivalent
   requests.  Any client or server MAY employ a cache, though a cache
   cannot be used by a server while it is acting as a tunnel.

   The effect of a cache is that the request/response chain is shortened
   if one of the participants along the chain has a cached response
   applicable to that request.  The following illustrates the resulting
   chain if B has a cached copy of an earlier response from O (via C)
   for a request that has not been cached by UA or A.

               &amp;gt;             &amp;gt;
          UA =========== A =========== B - - - - - - C - - - - - - O
                     &amp;lt;             &amp;lt; 

   A response is &quot;cacheable&quot; if a cache is allowed to store a copy of
   the response message for use in answering subsequent requests.  Even
   when a response is cacheable, there might be additional constraints
   placed by the client or by the origin server on when that cached
   response can be used for a particular request.  HTTP requirements for
   cache behavior and cacheable responses are defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-2&quot;&gt;Section&amp;nbsp;2 of
   [RFC7234]&lt;/a&gt;.

   There is a wide variety of architectures and configurations of caches
   deployed across the World Wide Web and inside large organizations.
   These include national hierarchies of proxy caches to save
   transoceanic bandwidth, collaborative systems that broadcast or
   multicast cache entries, archives of pre-fetched cache entries for
   use in off-line or high-latency environments, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a632ecb11116e619160ccdc8cd1799071dbb82" translate="yes" xml:space="preserve">
          <source>A &quot;stale&quot; response is one that either has explicit expiry information
   or is allowed to have heuristic expiry calculated, but is not fresh
   according to the calculations in &lt;a href=&quot;#section-4.2&quot;&gt;Section 4.2&lt;/a&gt;.

   A cache MUST NOT generate a stale response if it is prohibited by an
   explicit in-protocol directive (e.g., by a &quot;no-store&quot; or &quot;no-cache&quot;
   cache directive, a &quot;must-revalidate&quot; cache-response-directive, or an
   applicable &quot;s-maxage&quot; or &quot;proxy-revalidate&quot; cache-response-directive;
   see &lt;a href=&quot;#section-5.2.2&quot;&gt;Section 5.2.2&lt;/a&gt;).

   A cache MUST NOT send stale responses unless it is disconnected
   (i.e., it cannot contact the origin server or otherwise find a
   forward path) or doing so is explicitly allowed (e.g., by the
   max-stale request directive; see &lt;a href=&quot;#section-5.2.1&quot;&gt;Section 5.2.1&lt;/a&gt;).

   A cache SHOULD generate a Warning header field with the 110 warn-code
   (see &lt;a href=&quot;#section-5.5.1&quot;&gt;Section 5.5.1&lt;/a&gt;) in stale responses.  Likewise, a cache SHOULD
   generate a 112 warn-code (see &lt;a href=&quot;#section-5.5.3&quot;&gt;Section 5.5.3&lt;/a&gt;) in stale responses if
   the cache is disconnected.

   A cache SHOULD NOT generate a new Warning header field when
   forwarding a response that does not have an Age header field, even if
   the response is already stale.  A cache need not validate a response
   that merely became stale in transit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e871943e1cc68faeca91915e9eeb818f063080a9" translate="yes" xml:space="preserve">
          <source>A #rule extension to the ABNF rules of [&lt;a href=&quot;https://tools.ietf.org/html/rfc5234&quot;&gt;RFC5234&lt;/a&gt;] is used to improve
   readability in the definitions of some header field values.

   A construct &quot;#&quot; is defined, similar to &quot;*&quot;, for defining
   comma-delimited lists of elements.  The full form is &quot;&amp;lt;n&amp;gt;#&amp;lt;m&amp;gt;element&quot;
   indicating at least &amp;lt;n&amp;gt; and at most &amp;lt;m&amp;gt; elements, each separated by a
   single comma (&quot;,&quot;) and optional whitespace (OWS). 

   In any production that uses the list construct, a sender MUST NOT
   generate empty list elements.  In other words, a sender MUST generate
   lists that satisfy the following syntax:

     1#element =&amp;gt; element *( OWS &quot;,&quot; OWS element )

   and:

     #element =&amp;gt; [ 1#element ]

   and for n &amp;gt;= 1 and m &amp;gt; 1:

     &amp;lt;n&amp;gt;#&amp;lt;m&amp;gt;element =&amp;gt; element &amp;lt;n-1&amp;gt;*&amp;lt;m-1&amp;gt;( OWS &quot;,&quot; OWS element )

   For compatibility with legacy list rules, a recipient MUST parse and
   ignore a reasonable number of empty list elements: enough to handle
   common mistakes by senders that merge values, but not so much that
   they could be used as a denial-of-service mechanism.  In other words,
   a recipient MUST accept lists that satisfy the following syntax:

     #element =&amp;gt; [ ( &quot;,&quot; / element ) *( OWS &quot;,&quot; [ OWS element ] ) ]

     1#element =&amp;gt; *( &quot;,&quot; OWS ) element *( OWS &quot;,&quot; [ OWS element ] )

   Empty elements do not contribute to the count of elements present.
   For example, given these ABNF productions:

     example-list      = 1#example-list-elmt
     example-list-elmt = token ; see &lt;a href=&quot;#section-3.2.6&quot;&gt;Section 3.2.6&lt;/a&gt;

   Then the following are valid values for example-list (not including
   the double quotes, which are present for delimitation only):

     &quot;foo,bar&quot;
     &quot;foo ,bar,&quot;
     &quot;foo , ,bar,charlie   &quot;

   In contrast, the following values would be invalid, since at least
   one non-empty element is required by the example-list production:

     &quot;&quot;
     &quot;,&quot;
     &quot;,   ,&quot;

   &lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt; shows the collected ABNF for recipients after the list
   constructs have been expanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bbedc8a725a8d13ad21a57492003ab62453b31" translate="yes" xml:space="preserve">
          <source>A 404 status code does not indicate whether the resource is temporarily or permanently missing. But if a resource is permanently removed, a &lt;a href=&quot;410&quot;&gt;&lt;code&gt;410&lt;/code&gt;&lt;/a&gt; (Gone) should be used instead of a 404 status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3dfa49a4057c630e7d3a3a0ca86d8c3494a2c9" translate="yes" xml:space="preserve">
          <source>A 501 error is not something you can fix, but requires a fix by the web server you are trying to access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fba8d56851811aee1b2cf1061bdc5821fd3f19" translate="yes" xml:space="preserve">
          <source>A 501 response is cacheable by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c5a975aa1f2d3eaf3bfffb4a43538f233328e1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../headers/retry-after&quot;&gt;&lt;code&gt;Retry-After&lt;/code&gt;&lt;/a&gt; header might be included to this response indicating how long to wait before making a new request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf79e4783e239756003653f749b33f97a3ed3b37" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;OK&lt;/code&gt;) status code if the action has been enacted and the response message includes a representation describing the status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bfae9c9125fc9c0feac0b8309f780dbe3c0fe4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../status/202&quot;&gt;&lt;code&gt;202&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;Accepted&lt;/code&gt;) status code if the action will likely succeed but has not yet been enacted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ca48ecdfb875a23c490b520d1e1eda1309e24f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../status/204&quot;&gt;&lt;code&gt;204&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;No Content&lt;/code&gt;) status code if the action has been enacted and no further information is to be supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d7787c5f033796e7a91077d28bc19d3e83d2b1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_URL#Examples_of_relative_URLs&quot;&gt;relative&lt;/a&gt; (to the request URL) or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;absolute&lt;/a&gt; URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb40d40d6f97b01c5306cfbfa886f3aadbda18d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Necko/Proxy_Auto-Configuration_(PAC)_file&quot;&gt;Proxy Auto-Configuration (PAC)&lt;/a&gt; file is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt; function that determines whether web browser requests (HTTP, HTTPS, and FTP) go directly to the destination or are forwarded to a web proxy server. The JavaScript function contained in the PAC file defines the function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2005d2841a969b28ad96354a53f000e168faac6" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;status&quot;&gt;status code&lt;/a&gt;, indicating if the request has been successful, or not, and why.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11aa6a5c87384b9b02b818a33283f7442aea7d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;cookie-name&amp;gt;&lt;/code&gt; can be any US-ASCII characters except control characters (CTLs), spaces, or tabs. It also must not contain a separator character like the following: &lt;code&gt;( ) &amp;lt; &amp;gt; @ , ; : \ &quot; /&amp;nbsp; [ ] ? = { }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b2a81bf240653adf4ae5646645097e3700e614" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&amp;lt;cookie-value&amp;gt;&lt;/code&gt; can optionally be set in double quotes and any US-ASCII characters excluding CTLs, whitespace, double quotes, comma, semicolon, and backslash are allowed. &lt;strong&gt;Encoding&lt;/strong&gt;: Many implementations perform URL encoding on cookie values, however it is not required per the RFC specification. It does help satisfying the requirements about which characters are allowed for &amp;lt;cookie-value&amp;gt; though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f819db31cf5179b914aa0bbc4b051d20a15499c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-ruellan-http-accept-push-policy-00#section-3.2&quot;&gt;Push-Policy&lt;/a&gt;&lt;/code&gt; defines the server behaviour regarding push when processing a request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd38adbfb297f98e4845f58ef168d327990960e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Host&lt;/code&gt; header field must be sent in all HTTP/1.1 request messages. A &lt;a href=&quot;../status/400&quot;&gt;&lt;code&gt;400&lt;/code&gt;&lt;/a&gt; (Bad Request) status code will be sent to any HTTP/1.1 request message that lacks a &lt;code&gt;Host&lt;/code&gt; header field or contains more than one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d493f4b34b837ecbf516ab3be315bb7e5800bd7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Large-Allocation&lt;/code&gt; header was ignored due to the document not being loaded out of process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52f033ccd0a61255fd618ddae3d133b3a87b36a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Large-Allocation&lt;/code&gt; header was ignored due to the load being triggered by a non-GET request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b66ecc22d4701e215c7c43a0496c165504db343" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Large-Allocation&lt;/code&gt; header was ignored due to the presence of windows which have a reference to this browsing context through the frame hierarchy or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/opener&quot;&gt;&lt;code&gt;window.opener&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148adc34b3c03dd4552c4ce02841588fbe7d2b17" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;POST&lt;/code&gt; request is typically sent via an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTML form&lt;/a&gt; and results in a change on the server. In this case, the content type is selected by putting the adequate string in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#attr-enctype&quot;&gt;enctype&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; element or the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-formenctype&quot;&gt;formenctype&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a09061e55ef0722388221ef70fbf98831901fc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Referer&lt;/code&gt; header is not sent by browsers if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7de4dc33844cb3c83cd7c6ece8fd1f67d772660" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tk&lt;/code&gt; header for a resource that claims not to be tracking would look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a39de192b8c94e0bdb22f2bcb149d7e553934cb" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;data&lt;/code&gt; URL provides a file within a file, which can potentially be very wide relative to the width of the enclosing document. As a URL, the &lt;code&gt;data&lt;/code&gt; should be formatable with whitespace (linefeed, tab, or spaces), but there are practical issues that arise &lt;a href=&quot;http://bugzilla.mozilla.org/show_bug.cgi?id=73026#c12&quot;&gt;when using base64 encoding&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ef0cbe7ad55aa4468b6292a11f980a072c57e1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;name&lt;/code&gt; with a value of &lt;code&gt;'_charset_'&lt;/code&gt; indicates that the part is not an HTML field, but the default charset to use for parts without explicit charset information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ca7e4cfdb62ea74f42d6c168a3d1427f68fc26" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;product token&lt;/em&gt; is a name followed by a '&lt;code&gt;/&lt;/code&gt;' and a version number, like &lt;code&gt;Firefox/4.0.1&lt;/code&gt;. There may be as many of them as the user-agent wants. A &lt;em&gt;comment&lt;/em&gt; is a free string delimited by parentheses. Obviously parentheses cannot be used in that string. The inner format of a comment is not defined by the standard, though several browser put several tokens in it, separated by '&lt;code&gt;;&lt;/code&gt;'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7807903fa1b0b7939213e9e4f5b3217c04d49395" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;start-line&lt;/em&gt; describing the requests to be implemented, or its status of whether successful or a failure. This start-line is always a single line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93859c81ff65c5134b0dd141e4cbca2ab3420924" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;status code&lt;/em&gt;, indicating success or failure of the request. Common status codes are &lt;a href=&quot;status/200&quot;&gt;&lt;code&gt;200&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;status/404&quot;&gt;&lt;code&gt;404&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;status/302&quot;&gt;&lt;code&gt;302&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c2a47356f2a849271ea7cc25822c2941eeef27" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;status text&lt;/em&gt;. A brief, purely informational, textual description of the status code to help a human understand the HTTP message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0559ada531b9179dd1b1f6a65154a22a437ad6c4" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;Multipurpose Internet Mail Extensions (MIME) type&lt;/strong&gt; is a standard that indicates the nature and format of a document, file, or assortment of bytes. It is defined and standardized in &lt;a href=&quot;https://tools.ietf.org/html/rfc6838&quot;&gt;IETF RFC 6838&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fe2028c6d41d5f963c85bb23a2f9582052e0be" translate="yes" xml:space="preserve">
          <source>A &lt;strong&gt;Proxy Auto-Configuration (PAC)&lt;/strong&gt; file is a JavaScript function that determines whether web browser requests (HTTP, HTTPS, and FTP) go directly to the destination or are forwarded to a web proxy server. The JavaScript function contained in the PAC file defines the function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32908568fcbbdd8ea0e3d262e49fd8c59b6cf1c5" translate="yes" xml:space="preserve">
          <source>A COPY method invocation MUST NOT duplicate any write locks active on
   the source.  However, as previously noted, if the COPY copies the
   resource into a collection that is locked with a depth-infinity lock,
   then the resource will be added to the lock.

   A successful MOVE request on a write locked resource MUST NOT move
   the write lock with the resource.  However, if there is an existing
   lock at the destination, the server MUST add the moved resource to
   the destination lock scope.  For example, if the MOVE makes the
   resource a child of a collection that has a depth-infinity lock, then
   the resource will be added to that collection's lock.  Additionally,
   if a resource with a depth-infinity lock is moved to a destination
   that is within the scope of the same lock (e.g., within the URL
   namespace tree covered by the lock), the moved resource will again be
   added to the lock.  In both these examples, as specified in
   &lt;a href=&quot;#section-7.5&quot;&gt;Section 7.5&lt;/a&gt;, an If header must be submitted containing a lock token
   for both the source and destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ccf84b84ef6409cbbed9c34674f05d1e7198a6" translate="yes" xml:space="preserve">
          <source>A Condition that consists of a single entity-tag or state-token
   evaluates to true if the resource matches the described state (where
   the individual matching functions are defined below in
   &lt;a href=&quot;#section-10.4.4&quot;&gt;Section 10.4.4&lt;/a&gt;).  Prefixing it with &quot;Not&quot; reverses the result of the
   evaluation (thus, the &quot;Not&quot; applies only to the subsequent entity-tag
   or state-token).

   Each List production describes a series of conditions.  The whole
   list evaluates to true if and only if each condition evaluates to
   true (that is, the list represents a logical conjunction of
   Conditions).

   Each No-tag-list and Tagged-list production may contain one or more
   Lists.  They evaluate to true if and only if any of the contained
   lists evaluates to true (that is, if there's more than one List, that
   List sequence represents a logical disjunction of the Lists). 

   Finally, the whole If header evaluates to true if and only if at
   least one of the No-tag-list or Tagged-list productions evaluates to
   true.  If the header evaluates to false, the server MUST reject the
   request with a 412 (Precondition Failed) status.  Otherwise,
   execution of the request can proceed as if the header wasn't present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca49fbd841006f7b8c4f68cfeb745b6f799b83d" translate="yes" xml:space="preserve">
          <source>A DAV-compliant resource can advertise several classes of compliance.
   A client can discover the compliance classes of a resource by
   executing OPTIONS on the resource and examining the &quot;DAV&quot; header
   which is returned.  Note particularly that resources, rather than
   servers, are spoken of as being compliant.  That is because
   theoretically some resources on a server could support different
   feature sets.  For example, a server could have a sub-repository
   where an advanced feature like versioning was supported, even if that
   feature was not supported on all sub-repositories.

   Since this document describes extensions to the HTTP/1.1 protocol,
   minimally all DAV-compliant resources, clients, and proxies MUST be
   compliant with [&lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC2616&lt;/a&gt;].

   A resource that is class 2 or class 3 compliant must also be class 1
   compliant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86021a073cb3d0361968791f30494aec6a11bf5" translate="yes" xml:space="preserve">
          <source>A LOCK request to an existing resource will create a lock on the
   resource identified by the Request-URI, provided the resource is not
   already locked with a conflicting lock.  The resource identified in
   the Request-URI becomes the root of the lock.  LOCK method requests
   to create a new lock MUST have an XML request body.  The server MUST
   preserve the information provided by the client in the 'owner'
   element in the LOCK request.  The LOCK request MAY have a Timeout
   header.

   When a new lock is created, the LOCK response:

   o  MUST contain a body with the value of the DAV:lockdiscovery
      property in a prop XML element.  This MUST contain the full
      information about the lock just granted, while information about
      other (shared) locks is OPTIONAL.

   o  MUST include the Lock-Token response header with the token
      associated with the new lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ec04e796ad556a9a01172c14afcf29870510e8" translate="yes" xml:space="preserve">
          <source>A Last-Modified time, when used as a validator in a request, is
   implicitly weak unless it is possible to deduce that it is strong,
   using the following rules:

   o  The validator is being compared by an origin server to the actual
      current validator for the representation and,

   o  That origin server reliably knows that the associated
      representation did not change twice during the second covered by
      the presented validator.

   or

   o  The validator is about to be used by a client in an
      If-Modified-Since, If-Unmodified-Since, or If-Range header field,
      because the client has a cache entry for the associated
      representation, and

   o  That cache entry includes a Date value, which gives the time when
      the origin server sent the original response, and

   o  The presented Last-Modified time is at least 60 seconds before the
      Date value.

   or

   o  The validator is being compared by an intermediate cache to the
      validator stored in its cache entry for the representation, and

   o  That cache entry includes a Date value, which gives the time when
      the origin server sent the original response, and

   o  The presented Last-Modified time is at least 60 seconds before the
      Date value. 

   This method relies on the fact that if two different responses were
   sent by the origin server during the same second, but both had the
   same Last-Modified time, then at least one of those responses would
   have a Date value equal to its Last-Modified time.  The arbitrary
   60-second limit guards against the possibility that the Date and
   Last-Modified values are generated from different clocks or at
   somewhat different times during the preparation of the response.  An
   implementation MAY use a value larger than 60 seconds, if it is
   believed that 60 seconds is too short.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3ff774d817ff6a5f8200f28c0299ad729f7f1f" translate="yes" xml:space="preserve">
          <source>A MIME type consists of a &lt;strong&gt;type&lt;/strong&gt; and a &lt;strong&gt;subtype&lt;/strong&gt; &amp;mdash; two strings separated by &lt;code&gt;/&lt;/code&gt;. No whitespace is allowed. The &lt;em&gt;type&lt;/em&gt; represents the category and can be a &lt;em&gt;discrete&lt;/em&gt; or a &lt;em&gt;multipart&lt;/em&gt; type. The &lt;em&gt;subtype&lt;/em&gt; is specific to each type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3b4fd9f2c9a070d38b528649b2abf469edffda" translate="yes" xml:space="preserve">
          <source>A MIME type, but without any subtype. &lt;code&gt;image/*&lt;/code&gt; will match &lt;code&gt;image/png&lt;/code&gt;, &lt;code&gt;image/svg&lt;/code&gt;, &lt;code&gt;image/gif&lt;/code&gt; and any other image types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad212a1da928bdf764389014591f982a86a3c0f" translate="yes" xml:space="preserve">
          <source>A MOVE with &quot;Depth: infinity&quot; instructs that the collection
   identified by the Request-URI be moved to the address specified in
   the Destination header, and all resources identified by its internal
   member URLs are to be moved to locations relative to it, recursively
   through all levels of the collection hierarchy.

   The MOVE method on a collection MUST act as if a &quot;Depth: infinity&quot;
   header was used on it.  A client MUST NOT submit a Depth header on a
   MOVE on a collection with any value but &quot;infinity&quot;. 

   Any headers included with MOVE MUST be applied in processing every
   resource to be moved with the exception of the Destination header.
   The behavior of the Destination header is the same as given for COPY
   on collections.

   When the MOVE method has completed processing, it MUST have created a
   consistent URL namespace at both the source and destination (see
   &lt;a href=&quot;#section-5.1&quot;&gt;Section 5.1&lt;/a&gt; for the definition of namespace consistency).  However,
   if an error occurs while moving an internal collection, the server
   MUST NOT move any resources identified by members of the failed
   collection (i.e., the server must skip the error-causing subtree), as
   this would create an inconsistent namespace.  In this case, after
   detecting the error, the move operation SHOULD try to finish as much
   of the original move as possible (i.e., the server should still
   attempt to move other subtrees and the resources identified by their
   members that are not descendants of an error-causing collection).
   So, for example, if an infinite-depth move is performed on collection
   /a/, which contains collections /a/b/ and /a/c/, and an error occurs
   moving /a/b/, an attempt should still be made to try moving /a/c/.
   Similarly, after encountering an error moving a non-collection
   resource as part of an infinite-depth move, the server SHOULD try to
   finish as much of the original move operation as possible.

   If an error occurs with a resource other than the resource identified
   in the Request-URI, then the response MUST be a 207 (Multi-Status),
   and the errored resource's URL MUST appear with the specific error.

   The 424 (Failed Dependency) status code SHOULD NOT be returned in the
   207 (Multi-Status) response from a MOVE method.  These errors can be
   safely omitted because the client will know that the progeny of a
   resource could not be moved when the client receives an error for the
   parent.  Additionally, 201 (Created)/204 (No Content) responses
   SHOULD NOT be returned as values in 207 (Multi-Status) responses from
   a MOVE.  These responses can be safely omitted because they are the
   default success codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e669f83c371fcfc2d6309646e47cad96a8d6939b" translate="yes" xml:space="preserve">
          <source>A Multi-Status response conveys information about multiple resources
   in situations where multiple status codes might be appropriate.  The
   default Multi-Status response body is a text/xml or application/xml
   HTTP entity with a 'multistatus' root element.  Further elements
   contain 200, 300, 400, and 500 series status codes generated during
   the method invocation. 100 series status codes SHOULD NOT be recorded
   in a 'response' XML element.

   Although '207' is used as the overall response status code, the
   recipient needs to consult the contents of the multistatus response
   body for further information about the success or failure of the
   method execution.  The response MAY be used in success, partial
   success and also in failure situations.

   The 'multistatus' root element holds zero or more 'response' elements
   in any order, each with information about an individual resource.
   Each 'response' element MUST have an 'href' element to identify the
   resource.

   A Multi-Status response uses one out of two distinct formats for
   representing the status:

   1.  A 'status' element as child of the 'response' element indicates
       the status of the message execution for the identified resource
       as a whole (for instance, see &lt;a href=&quot;#section-9.6.2&quot;&gt;Section 9.6.2&lt;/a&gt;).  Some method
       definitions provide information about specific status codes
       clients should be prepared to see in a response.  However,
       clients MUST be able to handle other status codes, using the
       generic rules defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-10&quot;&gt;Section&amp;nbsp;10 of [RFC2616]&lt;/a&gt;.

   2.  For PROPFIND and PROPPATCH, the format has been extended using
       the 'propstat' element instead of 'status', providing information
       about individual properties of a resource.  This format is
       specific to PROPFIND and PROPPATCH, and is described in detail in
       Sections &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt; and &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da18d217768d6c1e8762bf2a3c6c1f21f00b13c4" translate="yes" xml:space="preserve">
          <source>A Multi-Status response conveys information about multiple resources in situations where multiple status codes might be appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c63e0905725bb2dacb2b7404ab31605abb7f60" translate="yes" xml:space="preserve">
          <source>A PUT performed on an existing resource replaces the GET response
   entity of the resource.  Properties defined on the resource may be
   recomputed during PUT processing but are not otherwise affected.  For
   example, if a server recognizes the content type of the request body,
   it may be able to automatically extract information that could be
   profitably exposed as properties.

   A PUT that would result in the creation of a resource without an
   appropriately scoped parent collection MUST fail with a 409
   (Conflict).

   A PUT request allows a client to indicate what media type an entity
   body has, and whether it should change if overwritten.  Thus, a
   client SHOULD provide a Content-Type for a new resource if any is
   known.  If the client does not provide a Content-Type for a new
   resource, the server MAY create a resource with no Content-Type
   assigned, or it MAY attempt to assign a Content-Type. 

   Note that although a recipient ought generally to treat metadata
   supplied with an HTTP request as authoritative, in practice there's
   no guarantee that a server will accept client-supplied metadata
   (e.g., any request header beginning with &quot;Content-&quot;).  Many servers
   do not allow configuring the Content-Type on a per-resource basis in
   the first place.  Thus, clients can't always rely on the ability to
   directly influence the content type by including a Content-Type
   request header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3416af5b6f6d84eb8e002dbdbec4d7e1feccd161" translate="yes" xml:space="preserve">
          <source>A Resource whose IRI is listed in a Collection is called a Member
   Resource.  The protocol defines two kinds of Member Resources --
   Entry Resources and Media Resources.  Entry Resources are represented
   as Atom Entry Documents [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;].  Media Resources can have
   representations in any media type.  A Media Resource is described
   within a Collection using an Entry called a Media Link Entry.  This
   diagram shows the classification of Resources within the Atom
   Protocol:

                Member Resources
                       |
                -----------------
               |                 |
         Entry Resources     Media Resources
               |
         Media Link Entry

   The Atom Protocol defines Collection Resources for managing and
   organizing both kinds of Member Resource.  A Collection is
   represented by an Atom Feed Document.  A Collection Feed's Entries
   contain the IRIs of, and metadata about, the Collection's Member
   Resources.  A Collection Feed can contain any number of Entries,
   which might represent all the Members of the Collection, or an
   ordered subset of them (see &lt;a href=&quot;#section-10.1&quot;&gt;Section 10.1&lt;/a&gt;).  In the diagram of a
   Collection below, there are two Entries.  The first contains the IRI
   of an Entry Resource.  The second contains the IRIs of both a Media
   Resource and a Media Link Entry, which contains the metadata for that
   Media Resource:

     Collection
        |
        o- Entry
        |    |
        |    o- Member Entry IRI (Entry Resource)
        |
        o- Entry
             |
             o- Member Entry IRI (Media Link Entry)
             |
             o- Media IRI        (Media Resource)

   The Atom Protocol does not make a distinction between Feeds used for
   Collections and other Atom Feeds.  The only mechanism that this
   specification supplies for indicating that a Feed is a Collection
   Feed is the presence of the Feed's IRI in a Service Document. 

   Service Documents represent server-defined groups of Collections, and
   are used to initialize the process of creating and editing Resources.
   These groups of Collections are called Workspaces.  Workspaces have
   names, but no IRIs, and no specified processing model.  The Service
   Document can indicate which media types, and which categories, a
   Collection will accept.  In the diagram below, there are two
   Workspaces each describing the IRIs, acceptable media types, and
   categories for a Collection:

     Service
        o- Workspace
        |    |
        |    o- Collection
        |         |
        |         o- IRI, categories, media types
        |
        o- Workspace
             |
             o- Collection
                  |
                  o- IRI, categories, media types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b9ab54a0a93ba0ced7c4af3c76df8322f7ce52" translate="yes" xml:space="preserve">
          <source>A Service Document groups Collections into Workspaces.  Operations on
   Workspaces, such as creation or deletion, are not defined by this
   specification.  This specification assigns no meaning to Workspaces;
   that is, a Workspace does not imply any specific processing
   assumptions.

   There is no requirement that a server support multiple Workspaces.
   In addition, a Collection MAY appear in more than one Workspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c9ff77a6964659200d811cbcc28e7831aa3441" translate="yes" xml:space="preserve">
          <source>A URI where to POST the report to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9a4a4099f798612139543cae66aebb996fc259" translate="yes" xml:space="preserve">
          <source>A URL is composed of different parts, some mandatory and others are optional. A more complex example might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17235672157ab3c954238f5bafa108a22cb04819" translate="yes" xml:space="preserve">
          <source>A Uniform Resource Name (URN) is a URI that identifies a resource by name in a particular namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48650afe5c259c1528667a4e36bcfbef464815b" translate="yes" xml:space="preserve">
          <source>A Web page is a hypertext document. This means some parts of displayed text are links which can be activated (usually by a click of the mouse) to fetch a new Web page, allowing the user to direct their user-agent and navigate through the Web. The browser translates these directions in HTTP requests, and further interprets the HTTP responses to present the user with a clear response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4801f2494f1bfe7a2312cfcf44cb6aeb3133107d" translate="yes" xml:space="preserve">
          <source>A WebDAV client implemented to this specification might find servers
   that create lock-null resources (implemented before this
   specification using [&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;]) as well as servers that create locked
   empty resources.  The response to the LOCK request will not indicate
   what kind of resource was created.  There are a few techniques that
   help the client deal with either type.

      If the client wishes to avoid accidentally creating either lock-
      null or empty locked resources, an &quot;If-Match: *&quot; header can be
      included with LOCK requests to prevent the server from creating a
      new resource.

      If a LOCK request creates a resource and the client subsequently
      wants to overwrite that resource using a COPY or MOVE request, the
      client should include an &quot;Overwrite: T&quot; header.

      If a LOCK request creates a resource and the client then decides
      to get rid of that resource, a DELETE request is supposed to fail
      on a lock-null resource and UNLOCK should be used instead.  But
      with a locked empty resource, UNLOCK doesn't make the resource
      disappear.  Therefore, the client might have to try both requests
      and ignore an error in one of the two requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c050a4669d26963f30fbcabf737a5a269d8088" translate="yes" xml:space="preserve">
          <source>A WebDAV-compliant resource is not required to support locking in any
   form.  If the resource does support locking, it may choose to support
   any combination of exclusive and shared locks for any access types.

   The reason for this flexibility is that locking policy strikes to the
   very heart of the resource management and versioning systems employed
   by various storage repositories.  These repositories require control
   over what sort of locking will be made available.  For example, some
   repositories only support shared write locks, while others only
   provide support for exclusive write locks, while yet others use no
   locking at all.  As each system is sufficiently different to merit
   exclusion of certain locking features, this specification leaves
   locking as the sole axis of negotiation within WebDAV.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffa4d2573a0c29a3cf6a916b1ae983e76a72cd2" translate="yes" xml:space="preserve">
          <source>A blank line indicating all meta-information for the request have been sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f5fbf27da59695f3ff9b3365893efeb5c2ea49" translate="yes" xml:space="preserve">
          <source>A brief description of the changes between the early versions of HTTP, to the modern HTTP/2 and beyond.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6e33516e3b56de33ea030077bb00ea0ddc4642" translate="yes" xml:space="preserve">
          <source>A brief introduction of the notion of resources, identifiers, and locations on the Web.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b11a72f1dd5ff054b32769e00fdf5e574c1d4a" translate="yes" xml:space="preserve">
          <source>A cache MUST NOT store a response to any request, unless:

   o  The request method is understood by the cache and defined as being
      cacheable, and

   o  the response status code is understood by the cache, and

   o  the &quot;no-store&quot; cache directive (see &lt;a href=&quot;#section-5.2&quot;&gt;Section 5.2&lt;/a&gt;) does not appear
      in request or response header fields, and

   o  the &quot;private&quot; response directive (see &lt;a href=&quot;#section-5.2.2.6&quot;&gt;Section 5.2.2.6&lt;/a&gt;) does not
      appear in the response, if the cache is shared, and

   o  the Authorization header field (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.2&quot;&gt;Section&amp;nbsp;4.2 of [RFC7235]&lt;/a&gt;) does
      not appear in the request, if the cache is shared, unless the
      response explicitly allows it (see &lt;a href=&quot;#section-3.2&quot;&gt;Section 3.2&lt;/a&gt;), and

   o  the response either:

      *  contains an Expires header field (see &lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;), or

      *  contains a max-age response directive (see &lt;a href=&quot;#section-5.2.2.8&quot;&gt;Section 5.2.2.8&lt;/a&gt;), or

      *  contains a s-maxage response directive (see &lt;a href=&quot;#section-5.2.2.9&quot;&gt;Section 5.2.2.9&lt;/a&gt;)
         and the cache is shared, or

      *  contains a Cache Control Extension (see &lt;a href=&quot;#section-5.2.3&quot;&gt;Section 5.2.3&lt;/a&gt;) that
         allows it to be cached, or

      *  has a status code that is defined as cacheable by default (see
         &lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt;), or 

      *  contains a public response directive (see &lt;a href=&quot;#section-5.2.2.5&quot;&gt;Section 5.2.2.5&lt;/a&gt;).

   Note that any of the requirements listed above can be overridden by a
   cache-control extension; see &lt;a href=&quot;#section-5.2.3&quot;&gt;Section 5.2.3&lt;/a&gt;.

   In this context, a cache has &quot;understood&quot; a request method or a
   response status code if it recognizes it and implements all specified
   caching-related behavior.

   Note that, in normal operation, some caches will not store a response
   that has neither a cache validator nor an explicit expiration time,
   as such responses are not usually useful to store.  However, caches
   are not prohibited from storing such responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcd457e5449ea96b9730d7945fa792f97c22645" translate="yes" xml:space="preserve">
          <source>A cache SHOULD generate this if it heuristically chose a freshness
   lifetime greater than 24 hours and the response's age is greater than
   24 hours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6168c09c8c7fd95195aaf7adbff37d6acd9b77a" translate="yes" xml:space="preserve">
          <source>A cache SHOULD generate this if it is intentionally disconnected from
   the rest of the network for a period of time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d58c7fee0ffec3747d196ae22d87f92a88b3159" translate="yes" xml:space="preserve">
          <source>A cache SHOULD generate this when sending a stale response because an
   attempt to validate the response failed, due to an inability to reach
   the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dedbe9ca421577a1ae13ea9af987a4dc03874f1" translate="yes" xml:space="preserve">
          <source>A cache SHOULD generate this whenever the sent response is stale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d66f1b37c3af5067fb436a94514119f41081f5c" translate="yes" xml:space="preserve">
          <source>A cache can calculate the freshness lifetime (denoted as
   freshness_lifetime) of a response by using the first match of the
   following:

   o  If the cache is shared and the s-maxage response directive
      (&lt;a href=&quot;#section-5.2.2.9&quot;&gt;Section 5.2.2.9&lt;/a&gt;) is present, use its value, or

   o  If the max-age response directive (&lt;a href=&quot;#section-5.2.2.8&quot;&gt;Section 5.2.2.8&lt;/a&gt;) is present,
      use its value, or

   o  If the Expires response header field (&lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;) is present, use
      its value minus the value of the Date response header field, or

   o  Otherwise, no explicit expiration time is present in the response.
      A heuristic freshness lifetime might be applicable; see
      &lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt;.

   Note that this calculation is not vulnerable to clock skew, since all
   of the information comes from the origin server. 

   When there is more than one value present for a given directive
   (e.g., two Expires header fields, multiple Cache-Control: max-age
   directives), the directive's value is considered invalid.  Caches are
   encouraged to consider responses that have invalid freshness
   information to be stale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb1f6da1ee8afd1a7b46e415ab53e9563e80045" translate="yes" xml:space="preserve">
          <source>A cache entry might also consist of multiple stored responses differentiated by a secondary key, if the request is target of content negotiation. For more details see the information about the &lt;a href=&quot;headers/vary&quot;&gt;&lt;code&gt;Vary&lt;/code&gt;&lt;/a&gt; header &lt;a href=&quot;#Varying_responses&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5972d7cea05a00533e908dec31b26470e29e3357" translate="yes" xml:space="preserve">
          <source>A cache that receives an incomplete response (for example, with fewer
   bytes of data than specified in a Content-Length header) MAY store
   the response. However, the cache MUST treat this as a partial
   response. Partial responses MAY be combined as described in &lt;a href=&quot;#section-13.5.4&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-13.5.4&quot;&gt;13.5.4&lt;/a&gt;; the result might be a full response or might still be
   partial. A cache MUST NOT return a partial response to a client
   without explicitly marking it as such, using the 206 (Partial
   Content) status code. A cache MUST NOT return a partial response
   using a status code of 200 (OK).

   If a cache receives a 5xx response while attempting to revalidate an
   entry, it MAY either forward this response to the requesting client,
   or act as if the server failed to respond. In the latter case, it MAY
   return a previously received response unless the cached entry
   includes the &quot;must-revalidate&quot; cache-control directive (see &lt;a href=&quot;#section-14.9&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-14.9&quot;&gt;14.9&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72a187927140b084c50b2a86bb3cae9c1129d9d" translate="yes" xml:space="preserve">
          <source>A cache will send the request to the origin server for validation before releasing a cached copy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7762a0337a8349674180425bb13270b132201a" translate="yes" xml:space="preserve">
          <source>A character set like &lt;code&gt;utf-8&lt;/code&gt; or &lt;code&gt;iso-8859-15.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46fba5aafbe140d23668fd13707246dc167e60e" translate="yes" xml:space="preserve">
          <source>A class 1 compliant resource MUST meet all &quot;MUST&quot; requirements in all
   sections of this document.

   Class 1 compliant resources MUST return, at minimum, the value &quot;1&quot; in
   the DAV header on all responses to the OPTIONS method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09ae974e30d6d65603cbcb265f3f767e63d4b38" translate="yes" xml:space="preserve">
          <source>A class 2 compliant resource MUST meet all class 1 requirements and
   support the LOCK method, the DAV:supportedlock property, the DAV:
   lockdiscovery property, the Time-Out response header and the Lock-
   Token request header.  A class 2 compliant resource SHOULD also
   support the Timeout request header and the 'owner' XML element.

   Class 2 compliant resources MUST return, at minimum, the values &quot;1&quot;
   and &quot;2&quot; in the DAV header on all responses to the OPTIONS method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a24609de1da03e233355a5b214ad825afc020e" translate="yes" xml:space="preserve">
          <source>A client MUST NOT submit the same write lock request twice.  Note
   that a client is always aware it is resubmitting the same lock
   request because it must include the lock token in the If header in
   order to make the request for a resource that is already locked.

   However, a client may submit a LOCK request with an If header but
   without a body.  A server receiving a LOCK request with no body MUST
   NOT create a new lock -- this form of the LOCK request is only to be
   used to &quot;refresh&quot; an existing lock (meaning, at minimum, that any
   timers associated with the lock MUST be reset).

   Clients may submit Timeout headers of arbitrary value with their lock
   refresh requests.  Servers, as always, may ignore Timeout headers
   submitted by the client, and a server MAY refresh a lock with a
   timeout period that is different than the previous timeout period
   used for the lock, provided it advertises the new value in the LOCK
   refresh response.

   If an error is received in response to a refresh LOCK request, the
   client MUST NOT assume that the lock was refreshed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d982f3df26faad33edb44e7ec5819638eb4f0b9" translate="yes" xml:space="preserve">
          <source>A client can POST Media Resources as well as Entry Resources to a
   Collection.  If a server accepts such a request, then it MUST create
   two new Resources -- one that corresponds to the entity sent in the
   request, called the Media Resource, and an associated Member Entry,
   called the Media Link Entry.  Media Link Entries are represented as
   Atom Entries, and appear in the Collection.

   The Media Link Entry contains the metadata and IRI of the (perhaps
   non-textual) Media Resource.  The Media Link Entry thus makes the
   metadata about the Media Resource separately available for retrieval
   and alteration.

   The server can signal the media types it will accept using the app:
   accept element in the Service Document, as specified in &lt;a href=&quot;#section-8.3.4&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;#section-8.3.4&quot;&gt;8.3.4&lt;/a&gt;.

   Successful responses to creation requests MUST include the URI of the
   Media Link Entry in the Location header.  The Media Link Entry SHOULD
   contain an atom:link element with a link relation of &quot;edit-media&quot;
   that contains the Media Resource IRI.  The Media Link Entry MUST have
   an atom:content element with a &quot;src&quot; attribute.  The value of the
   &quot;src&quot; attribute is an IRI for the newly created Media Resource.  It
   is OPTIONAL that the IRI of the &quot;src&quot; attribute on the atom:content
   element be the same as the Media Resource IRI.  For example, the
   &quot;src&quot; attribute value might instead be a link into a static cache or
   content distribution network and not the Media Resource IRI.

   Implementers are asked to note that [&lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;RFC4287&lt;/a&gt;] specifies that Atom
   Entries MUST contain an atom:summary element.  Thus, upon successful
   creation of a Media Link Entry, a server MAY choose to populate the
   atom:summary element (as well as any other mandatory elements such as
   atom:id, atom:author, and atom:title) with content derived from the
   POSTed entity or from any other source.  A server might not allow a
   client to modify the server-selected values for these elements.

   For Resource creation, this specification only defines cases where
   the POST body has an Atom Entry entity declared as an Atom media type
   (&quot;application/atom+xml&quot;), or a non-Atom entity declared as a non-Atom
   media type.  When a client is POSTing an Atom Entry to a Collection,
   it may use a media type of either &quot;application/atom+xml&quot; or
   &quot;application/atom +xml;type=entry&quot;.  This specification does not
   specify any request semantics or server behavior in the case where
   the POSTed media type is &quot;application/atom+xml&quot; but the body is
   something other than an Atom Entry.  In particular, what happens on
   POSTing an Atom Feed Document to a Collection using the &quot;application/
   atom+xml&quot; media type is undefined. 

   The Atom Protocol does not specify a means to create multiple
   representations of the same Resource (for example, a PNG and a JPG of
   the same image) either on creation or editing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b701e8884cdcbec201923a5462b4446bf15619" translate="yes" xml:space="preserve">
          <source>A client can express the desired push policy for a request by sending an &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/draft-ruellan-http-accept-push-policy-00#section-3.1&quot;&gt;Accept-Push-Policy&lt;/a&gt;&lt;/code&gt; header field in the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf460d7009baa0cf38dad3c06caeb746522b55c" translate="yes" xml:space="preserve">
          <source>A client can send the &lt;code&gt;&lt;a href=&quot;https://wicg.github.io/webpackage/draft-yasskin-http-origin-signed-responses.html#rfc.section.3.7&quot;&gt;Accept-Signature&lt;/a&gt;&lt;/code&gt; header field to indicate intention to take advantage of any available signatures and to indicate what kinds of signatures it supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a4adc81ca6f443765ed44b189dadef0d1bac96" translate="yes" xml:space="preserve">
          <source>A client ought to limit the number of simultaneous open connections
   that it maintains to a given server.

   Previous revisions of HTTP gave a specific number of connections as a
   ceiling, but this was found to be impractical for many applications.
   As a result, this specification does not mandate a particular maximum
   number of connections but, instead, encourages clients to be
   conservative when opening multiple connections.

   Multiple connections are typically used to avoid the &quot;head-of-line
   blocking&quot; problem, wherein a request that takes significant
   server-side processing and/or has a large payload blocks subsequent
   requests on the same connection.  However, each connection consumes
   server resources.  Furthermore, using multiple connections can cause
   undesirable side effects in congested networks.

   Note that a server might reject traffic that it deems abusive or
   characteristic of a denial-of-service attack, such as an excessive
   number of open connections from a single client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4361d2d7548ea6bc70d98eca9d420ed02557e9" translate="yes" xml:space="preserve">
          <source>A client requests signals to the server that it supports the upgrade mechanisms of &lt;a href=&quot;content-security-policy/upgrade-insecure-requests&quot;&gt;&lt;code&gt;upgrade-insecure-requests&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5dc81872963bb2874b6966923a2cab55617f3ce" translate="yes" xml:space="preserve">
          <source>A client sends a request with a Expect header and waits for the server to respond before sending the message body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637640a6ac566c746cfe3512f687ebb242d9b708" translate="yes" xml:space="preserve">
          <source>A client sends request header fields to provide more information
   about the request context, make the request conditional based on the
   target resource state, suggest preferred formats for the response,
   supply authentication credentials, or modify the expected request
   processing.  These fields act as request modifiers, similar to the
   parameters on a programming language method invocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed66d390cb72517711831274a3a7d112673c59ff" translate="yes" xml:space="preserve">
          <source>A client that supports persistent connections MAY &quot;pipeline&quot; its
   requests (i.e., send multiple requests without waiting for each
   response).  A server MAY process a sequence of pipelined requests in
   parallel if they all have safe methods (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.1&quot;&gt;Section&amp;nbsp;4.2.1 of [RFC7231]&lt;/a&gt;),
   but it MUST send the corresponding responses in the same order that
   the requests were received.

   A client that pipelines requests SHOULD retry unanswered requests if
   the connection closes before it receives all of the corresponding
   responses.  When retrying pipelined requests after a failed
   connection (a connection not explicitly closed by the server in its
   last complete response), a client MUST NOT pipeline immediately after
   connection establishment, since the first remaining request in the
   prior pipeline might have caused an error response that can be lost
   again if multiple requests are sent on a prematurely closed
   connection (see the TCP reset problem described in &lt;a href=&quot;#section-6.6&quot;&gt;Section 6.6&lt;/a&gt;).

   Idempotent methods (&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.2.2&quot;&gt;Section&amp;nbsp;4.2.2 of [RFC7231]&lt;/a&gt;) are significant to
   pipelining because they can be automatically retried after a
   connection failure.  A user agent SHOULD NOT pipeline requests after
   a non-idempotent method, until the final response status code for
   that method has been received, unless the user agent has a means to
   detect and recover from partial failure conditions involving the
   pipelined sequence. 

   An intermediary that receives pipelined requests MAY pipeline those
   requests when forwarding them inbound, since it can rely on the
   outbound user agent(s) to determine what requests can be safely
   pipelined.  If the inbound connection fails before receiving a
   response, the pipelining intermediary MAY attempt to retry a sequence
   of requests that have yet to receive a response if the requests all
   have idempotent methods; otherwise, the pipelining intermediary
   SHOULD forward any received responses and then close the
   corresponding outbound connection(s) so that the outbound user
   agent(s) can recover accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e95576fba358e044ab16ce38c0a6a7604b1900" translate="yes" xml:space="preserve">
          <source>A client that supports persistent connections MAY &quot;pipeline&quot; its
   requests (i.e., send multiple requests without waiting for each
   response). A server MUST send its responses to those requests in the
   same order that the requests were received.

   Clients which assume persistent connections and pipeline immediately
   after connection establishment SHOULD be prepared to retry their
   connection if the first pipelined attempt fails. If a client does
   such a retry, it MUST NOT pipeline before it knows the connection is
   persistent. Clients MUST also be prepared to resend their requests if
   the server closes the connection before sending all of the
   corresponding responses.

   Clients SHOULD NOT pipeline requests using non-idempotent methods or
   non-idempotent sequences of methods (see &lt;a href=&quot;#section-9.1.2&quot;&gt;section 9.1.2&lt;/a&gt;). Otherwise, a
   premature termination of the transport connection could lead to
   indeterminate results. A client wishing to send a non-idempotent
   request SHOULD wait to send that request until it has received the
   response status for the previous request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4673d2cf5f078d0e80766af3fc18ef334aaf9ad" translate="yes" xml:space="preserve">
          <source>A client to display (and accidentally edit) these documents, the first Web browser called &lt;em&gt;WorldWideWeb&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf22c128590a11ccd015eab613d6d6178d3986e" translate="yes" xml:space="preserve">
          <source>A collection of tips to help operational teams with creating secure web applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545d7ecd63391cf84687a091c329dea2e48ff465" translate="yes" xml:space="preserve">
          <source>A comma-delimited list of &lt;a href=&quot;../headers&quot;&gt;HTTP headers&lt;/a&gt; that are included in the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7070eb1fb6568ed5750e765e691507dcbb9e26" translate="yes" xml:space="preserve">
          <source>A comma-delineated list of the WebSocket protocol versions supported by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0dcb0efcb7d9566b65a09f6272f43ad4054b47" translate="yes" xml:space="preserve">
          <source>A comma-separated list of extensions to request (or agree to support). These should be selected from the &lt;a href=&quot;https://www.iana.org/assignments/websocket/websocket.xml#extension-name&quot;&gt;IANA WebSocket Extension Name Registry&lt;/a&gt;. Extensions which take parameters do so by using semicolon delineation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9b0d38fc7576edfbc87bdb5049a93e906cc613" translate="yes" xml:space="preserve">
          <source>A comma-separated list of header names to take into account when deciding whether or not a cached response can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3351f8daef225cdddd1d659a4e4c2bff164ed208" translate="yes" xml:space="preserve">
          <source>A comma-separated list of parameters, each consisting of an identifier and a value separated by the equal sign (&lt;code&gt;'='&lt;/code&gt;). The following identifiers are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64dd752a990983ce318fbd34f3017c824c11259" translate="yes" xml:space="preserve">
          <source>A comma-separated list of subprotocol names, in the order of preference. The subprotocols may be selected from the &lt;a href=&quot;https://www.iana.org/assignments/websocket/websocket.xml#subprotocol-name&quot;&gt;IANA WebSocket Subprotocol Name Registry&lt;/a&gt; or may be a custom name jointly understood by the client and the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765a1ca65f0ae709d5083d956638fa8d4f371723" translate="yes" xml:space="preserve">
          <source>A common operation in Web applications is to &lt;em&gt;update&lt;/em&gt; a remote document. This is very common in any file system or source control applications, but any application that allows to store remote resources needs such a mechanism. Common Web sites, like wikis and other CMS, have such a need.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fb8e2fb85d7e564f3d29ea311fff6ca481b845" translate="yes" xml:space="preserve">
          <source>A complete URL, known as the &lt;em&gt;absolute form&lt;/em&gt;, is mostly used with &lt;code&gt;GET&lt;/code&gt; when connected to a proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1809df44023e8e001ce74fe56c8e7ccf0d8591" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Ziv coding&lt;/a&gt; (LZ77), with a 32-bit CRC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c6e3712615587b61d1ea467fde1e10f59e37c9" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt; (LZW) algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4d9ed7204457ec6cc9721d89f040474b7a652b" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/Zlib&quot;&gt;zlib&lt;/a&gt; structure, with the &lt;a href=&quot;http://en.wikipedia.org/wiki/DEFLATE&quot;&gt;&lt;em&gt;deflate&lt;/em&gt;&lt;/a&gt; compression algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05595aa3b6a0abccc227abaf6c71dbce8636585f" translate="yes" xml:space="preserve">
          <source>A compression format using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot;&gt;Brotli&lt;/a&gt; algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bb2d2d512282eb3e9b2963af2987738e151227" translate="yes" xml:space="preserve">
          <source>A connection can be reused, saving the time to reopen it numerous times to display the resources embedded into the single original document retrieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a3a1fcd6e5f64af49a78c0978fa2905e70fbdc" translate="yes" xml:space="preserve">
          <source>A connection is controlled at the transport layer, and therefore fundamentally out of scope for HTTP. Though HTTP doesn't require the underlying transport protocol to be connection-based; only requiring it to be &lt;em&gt;reliable&lt;/em&gt;, or not lose messages (so at minimum presenting an error). Among the two most common transport protocols on the Internet, TCP is reliable and UDP isn't. HTTP subsequently relies on the TCP standard, which is connection-based, even though a connection is not always required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da45e542a4ecf477e31105fbfb530cf280b696ac" translate="yes" xml:space="preserve">
          <source>A cookie begins with a name-value pair:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c987d7297ad42a4f63e657b6a26ef82f6c58c39b" translate="yes" xml:space="preserve">
          <source>A cookie belonging to a domain that does not include the origin server &lt;a href=&quot;https://tools.ietf.org/html/rfc6265#section-4.1.2.3&quot;&gt;should be rejected by the user agent&lt;/a&gt;. The following cookie will be rejected if it was set by a server hosted on originalcompany.com.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2001d70e25e20b433ea2e7fdbd02e6058831b1c9" translate="yes" xml:space="preserve">
          <source>A correct cache MUST respond to a request with the most up-to-date
   response held by the cache that is appropriate to the request (see
   sections &lt;a href=&quot;#section-13.2.5&quot;&gt;13.2.5&lt;/a&gt;, &lt;a href=&quot;#section-13.2.6&quot;&gt;13.2.6&lt;/a&gt;, and &lt;a href=&quot;#section-13.12&quot;&gt;13.12&lt;/a&gt;) which meets one of the following
   conditions:

      1. It has been checked for equivalence with what the origin server
         would have returned by revalidating the response with the
         origin server (&lt;a href=&quot;#section-13.3&quot;&gt;section 13.3&lt;/a&gt;); 

      2. It is &quot;fresh enough&quot; (see &lt;a href=&quot;#section-13.2&quot;&gt;section 13.2&lt;/a&gt;). In the default case,
         this means it meets the least restrictive freshness requirement
         of the client, origin server, and cache (see &lt;a href=&quot;#section-14.9&quot;&gt;section 14.9&lt;/a&gt;); if
         the origin server so specifies, it is the freshness requirement
         of the origin server alone.

         If a stored response is not &quot;fresh enough&quot; by the most
         restrictive freshness requirement of both the client and the
         origin server, in carefully considered circumstances the cache
         MAY still return the response with the appropriate Warning
         header (see &lt;a href=&quot;#section-13.1.5&quot;&gt;section 13.1.5&lt;/a&gt; and 14.46), unless such a response
         is prohibited (e.g., by a &quot;no-store&quot; cache-directive, or by a
         &quot;no-cache&quot; cache-request-directive; see &lt;a href=&quot;#section-14.9&quot;&gt;section 14.9&lt;/a&gt;).

      3. It is an appropriate 304 (Not Modified), 305 (Proxy Redirect),
         or error (4xx or 5xx) response message.

   If the cache can not communicate with the origin server, then a
   correct cache SHOULD respond as above if the response can be
   correctly served from the cache; if not it MUST return an error or
   warning indicating that there was a communication failure.

   If a cache receives a response (either an entire response, or a 304
   (Not Modified) response) that it would normally forward to the
   requesting client, and the received response is no longer fresh, the
   cache SHOULD forward it to the requesting client without adding a new
   Warning (but without removing any existing Warning headers). A cache
   SHOULD NOT attempt to revalidate a response simply because that
   response became stale in transit; this might lead to an infinite
   loop. A user agent that receives a stale response without a Warning
   MAY display a warning indication to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89577e07030bd40f6712d10194b453cf2d440e98" translate="yes" xml:space="preserve">
          <source>A cross-site request has previously been performed that already did a preflight, and doing the preflight again is not permitted. Make sure your code only preflights once per connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a811a3a9985b454708fdc8eb33814dd46cc41295" translate="yes" xml:space="preserve">
          <source>A custom header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2fa58bd2284006bceccd7cb755ebd723f2c6f7" translate="yes" xml:space="preserve">
          <source>A custom header (such as &lt;code&gt;X-PINGARUNER&lt;/code&gt;) is sent with the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503ad6dab740192f7df55700acaa852749538c30" translate="yes" xml:space="preserve">
          <source>A date after which to retry. See the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; header for more details on the HTTP date format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2cf3c99c4d72849ee4efd8ac6882b05e9d3a1a1" translate="yes" xml:space="preserve">
          <source>A description of the protected area, the realm. If no realm is specified, clients often display a formatted host name instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9d729c23cc7169e172ea196579970b84e7e284" translate="yes" xml:space="preserve">
          <source>A description of the protected area. If no realm is specified, clients often display a formatted hostname instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a8720daf81911489f27aaafe4bd0ccd798eb06" translate="yes" xml:space="preserve">
          <source>A discussion of Cross-Origin Resource Sharing from a server perspective (including PHP code snippets) can be found in the &lt;a href=&quot;server-side_access_control&quot;&gt;Server-Side Access Control (CORS)&lt;/a&gt; article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3fc6fb939e0085074cefc8e6d65d3381d91750" translate="yes" xml:space="preserve">
          <source>A few examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27d2c2e1b4290f0ba6c37cc3712ff739648e303" translate="yes" xml:space="preserve">
          <source>A form using the &lt;code&gt;multipart/form-data&lt;/code&gt; content type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614f75732c39c44f099d446998fd31224f828fd2" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Ziv coding&lt;/a&gt; (LZ77), with a 32-bit CRC is accepted as a transfer coding name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22748d9ab36c5f67b399f36a38ad2543edae63ac" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Ziv coding&lt;/a&gt; (LZ77), with a 32-bit CRC. This is originally the format of the UNIX &lt;em&gt;gzip&lt;/em&gt; program. The HTTP/1.1 standard also recommends that the servers supporting this content-encoding should recognize &lt;code&gt;x-gzip&lt;/code&gt; as an alias, for compatibility purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef17edcb9fdca11383c92d9963d7bf24f22d1a7d" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77&quot;&gt;Lempel-Ziv coding&lt;/a&gt; (LZ77), with a 32-bit CRC. This is the original format of the UNIX &lt;em&gt;gzip&lt;/em&gt; program. The HTTP/1.1 standard also recommends that the servers supporting this content-encoding should recognize &lt;code&gt;x-gzip&lt;/code&gt; as an alias, for compatibility purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f47b4033a24779dd1d3b91694a7e0c751de3c5" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt; (LZW) algorithm is accepted as a transfer coding name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6501d8ed3cac8df2af44cead1b7ab4b7e10774" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt; (LZW) algorithm. The value name was taken from the UNIX &lt;em&gt;compress&lt;/em&gt; program, which implemented this algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474b27ae1efc1cf4c0259d41c022937667b49d1f" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;http://en.wikipedia.org/wiki/LZW&quot;&gt;Lempel-Ziv-Welch&lt;/a&gt; (LZW) algorithm. The value name was taken from the UNIX &lt;em&gt;compress&lt;/em&gt; program, which implemented this algorithm. Like the compress program, which has disappeared from most UNIX distributions, this content-encoding is not used by many browsers today, partly because of a patent issue (it expired in 2003).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61675e08319d9261f19703357a0adf44d98c5d90" translate="yes" xml:space="preserve">
          <source>A format using the &lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot;&gt;Brotli&lt;/a&gt; algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ddbd90fc923592bb2b8a99325a9ed24ae5ba5a" translate="yes" xml:space="preserve">
          <source>A forward proxy, or gateway, or just &quot;proxy&quot; provides proxy services to a client or a group of clients. There are likely hundreds of thousands of open forward proxies on the Internet. They store and forward Internet services (like the DNS, or web pages) to reduce and control the bandwidth used by the group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910536150ef5b9e104120b70b03cb221a8cac548" translate="yes" xml:space="preserve">
          <source>A fresh response is one whose age has not yet exceeded its freshness
   lifetime.  Conversely, a stale response is one where it has.

   A response's freshness lifetime is the length of time between its
   generation by the origin server and its expiration time.  An explicit
   expiration time is the time at which the origin server intends that a
   stored response can no longer be used by a cache without further
   validation, whereas a heuristic expiration time is assigned by a
   cache when no explicit expiration time is available.

   A response's age is the time that has passed since it was generated
   by, or successfully validated with, the origin server.

   When a response is &quot;fresh&quot; in the cache, it can be used to satisfy
   subsequent requests without contacting the origin server, thereby
   improving efficiency.

   The primary mechanism for determining freshness is for an origin
   server to provide an explicit expiration time in the future, using
   either the Expires header field (&lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;) or the max-age response
   directive (&lt;a href=&quot;#section-5.2.2.8&quot;&gt;Section 5.2.2.8&lt;/a&gt;).  Generally, origin servers will assign
   future explicit expiration times to responses in the belief that the
   representation is not likely to change in a semantically significant
   way before the expiration time is reached.

   If an origin server wishes to force a cache to validate every
   request, it can assign an explicit expiration time in the past to
   indicate that the response is already stale.  Compliant caches will
   normally validate a stale cached response before reusing it for
   subsequent requests (see &lt;a href=&quot;#section-4.2.4&quot;&gt;Section 4.2.4&lt;/a&gt;).

   Since origin servers do not always provide explicit expiration times,
   caches are also allowed to use a heuristic to determine an expiration
   time under certain circumstances (see &lt;a href=&quot;#section-4.2.2&quot;&gt;Section 4.2.2&lt;/a&gt;).

   The calculation to determine if a response is fresh is:

      response_is_fresh = (freshness_lifetime &amp;gt; current_age)

   freshness_lifetime is defined in &lt;a href=&quot;#section-4.2.1&quot;&gt;Section 4.2.1&lt;/a&gt;; current_age is
   defined in &lt;a href=&quot;#section-4.2.3&quot;&gt;Section 4.2.3&lt;/a&gt;.

   Clients can send the max-age or min-fresh cache directives in a
   request to constrain or relax freshness calculations for the
   corresponding response (&lt;a href=&quot;#section-5.2.1&quot;&gt;Section 5.2.1&lt;/a&gt;). 

   When calculating freshness, to avoid common problems in date parsing:

   o  Although all date formats are specified to be case-sensitive, a
      cache recipient SHOULD match day, week, and time-zone names
      case-insensitively.

   o  If a cache recipient's internal implementation of time has less
      resolution than the value of an HTTP-date, the recipient MUST
      internally represent a parsed Expires date as the nearest time
      equal to or earlier than the received value.

   o  A cache recipient MUST NOT allow local time zones to influence the
      calculation or comparison of an age or expiration time.

   o  A cache recipient SHOULD consider a date with a zone abbreviation
      other than GMT or UTC to be invalid for calculating expiration.

   Note that freshness applies only to cache operation; it cannot be
   used to force a user agent to refresh its display or reload a
   resource.  See &lt;a href=&quot;#section-6&quot;&gt;Section 6&lt;/a&gt; for an explanation of the difference between
   caches and history mechanisms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3a4e1f8c0ddeb70da974b4f25090860679d57c" translate="yes" xml:space="preserve">
          <source>A full language tag. In addition to the language itself, it may contain additional information after a &lt;code&gt;'-'&lt;/code&gt;. The most common extra information is the country variant (like &lt;code&gt;'en-US'&lt;/code&gt;) or the type of alphabet to use (like &lt;code&gt;'sr-Lat'&lt;/code&gt;). Other variants like the type of orthography (&lt;code&gt;'de-DE-1996'&lt;/code&gt;) are usually not used in the context of this header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f898e90d14bf75f1a87a64bdb376f6dbabf567d" translate="yes" xml:space="preserve">
          <source>A general warning field containing information about possible problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3e8915e8c75e5f7d73ca07d7035d1049a05c98" translate="yes" xml:space="preserve">
          <source>A language expressed as a 2 or 3-character string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492fb7060c509851f8ee1f0684fc115667c9e3f7" translate="yes" xml:space="preserve">
          <source>A language tag identifies a natural language spoken, written, or
   otherwise conveyed by human beings for communication of information
   to other human beings. Computer languages are explicitly excluded.
   HTTP uses language tags within the Accept-Language and Content-
   Language fields.

   The syntax and registry of HTTP language tags is the same as that
   defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc1766&quot;&gt;RFC 1766&lt;/a&gt; [&lt;a href=&quot;#ref-1&quot;&gt;1&lt;/a&gt;]. In summary, a language tag is composed of 1
   or more parts: A primary language tag and a possibly empty series of
   subtags:

        language-tag  = primary-tag *( &quot;-&quot; subtag )
        primary-tag   = 1*8ALPHA
        subtag        = 1*8ALPHA

   White space is not allowed within the tag and all tags are case-
   insensitive. The name space of language tags is administered by the
   IANA. Example tags include:

       en, en-US, en-cockney, i-cherokee, x-pig-latin 

   where any two-letter primary-tag is an ISO-639 language abbreviation
   and any two-letter initial subtag is an ISO-3166 country code. (The
   last three tags above are not registered tags; all but the last are
   examples of tags which could be registered in future.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94092a3bb36b69c98b3f284dcd812139e3cd4535" translate="yes" xml:space="preserve">
          <source>A language tag, as defined in [&lt;a href=&quot;https://tools.ietf.org/html/rfc5646&quot;&gt;RFC5646&lt;/a&gt;], identifies a natural
   language spoken, written, or otherwise conveyed by human beings for
   communication of information to other human beings.  Computer
   languages are explicitly excluded.

   HTTP uses language tags within the Accept-Language and
   Content-Language header fields.  Accept-Language uses the broader
   language-range production defined in &lt;a href=&quot;#section-5.3.5&quot;&gt;Section 5.3.5&lt;/a&gt;, whereas
   Content-Language uses the language-tag production defined below.

     language-tag = &amp;lt;Language-Tag, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5646#section-2.1&quot;&gt;[RFC5646], Section&amp;nbsp;2.1&lt;/a&gt;&amp;gt;

   A language tag is a sequence of one or more case-insensitive subtags,
   each separated by a hyphen character (&quot;-&quot;, %x2D).  In most cases, a
   language tag consists of a primary language subtag that identifies a
   broad family of related languages (e.g., &quot;en&quot; = English), which is
   optionally followed by a series of subtags that refine or narrow that
   language's range (e.g., &quot;en-CA&quot; = the variety of English as
   communicated in Canada).  Whitespace is not allowed within a language
   tag.  Example tags include:

     fr, en-US, es-419, az-Arab, x-pig-latin, man-Nkoo-GN

   See [&lt;a href=&quot;https://tools.ietf.org/html/rfc5646&quot;&gt;RFC5646&lt;/a&gt;] for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401eed78acd05f98cd45899dd71bdbf7ded19951" translate="yes" xml:space="preserve">
          <source>A list of exposed headers consisting of zero or more &lt;a href=&quot;../headers&quot;&gt;header names&lt;/a&gt; other than the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Simple_response_header&quot;&gt;simple response headers&lt;/a&gt; that the resource might use and can be exposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a086a61548ed72dd4794fb8ac5f997765cb5cd7d" translate="yes" xml:space="preserve">
          <source>A list of name-value pairs in the form of &lt;code&gt;&amp;lt;cookie-name&amp;gt;=&amp;lt;cookie-value&amp;gt;&lt;/code&gt;. Pairs in the list are separated by a semicolon and a space (&lt;code&gt;'; '&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201228fcd5cdd61ee1713b535c51e93b617c9561" translate="yes" xml:space="preserve">
          <source>A lock MAY have a limited lifetime.  The lifetime is suggested by the
   client when creating or refreshing the lock, but the server
   ultimately chooses the timeout value.  Timeout is measured in seconds
   remaining until lock expiration.

   The timeout counter MUST be restarted if a refresh lock request is
   successful (see &lt;a href=&quot;#section-9.10.2&quot;&gt;Section 9.10.2&lt;/a&gt;).  The timeout counter SHOULD NOT be
   restarted at any other time.

   If the timeout expires, then the lock SHOULD be removed.  In this
   case the server SHOULD act as if an UNLOCK method was executed by the 

   server on the resource using the lock token of the timed-out lock,
   performed with its override authority.

   Servers are advised to pay close attention to the values submitted by
   clients, as they will be indicative of the type of activity the
   client intends to perform.  For example, an applet running in a
   browser may need to lock a resource, but because of the instability
   of the environment within which the applet is running, the applet may
   be turned off without warning.  As a result, the applet is likely to
   ask for a relatively small timeout value so that if the applet dies,
   the lock can be quickly harvested.  However, a document management
   system is likely to ask for an extremely long timeout because its
   user may be planning on going offline.

   A client MUST NOT assume that just because the timeout has expired,
   the lock has immediately been removed.

   Likewise, a client MUST NOT assume that just because the timeout has
   not expired, the lock still exists.  Clients MUST assume that locks
   can arbitrarily disappear at any time, regardless of the value given
   in the Timeout header.  The Timeout header only indicates the
   behavior of the server if extraordinary circumstances do not occur.
   For example, a sufficiently privileged user may remove a lock at any
   time, or the system may crash in such a way that it loses the record
   of the lock's existence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65767371978fb7907be1bc9f3cea569719dbaa4" translate="yes" xml:space="preserve">
          <source>A lock is refreshed by sending a LOCK request to the URL of a
   resource within the scope of the lock.  This request MUST NOT have a
   body and it MUST specify which lock to refresh by using the 'If'
   header with a single lock token (only one lock may be refreshed at a
   time).  The request MAY contain a Timeout header, which a server MAY
   accept to change the duration remaining on the lock to the new value.
   A server MUST ignore the Depth header on a LOCK refresh.

   If the resource has other (shared) locks, those locks are unaffected
   by a lock refresh.  Additionally, those locks do not prevent the
   named lock from being refreshed.

   The Lock-Token header is not returned in the response for a
   successful refresh LOCK request, but the LOCK response body MUST
   contain the new value for the DAV:lockdiscovery property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d1c6621f1a90b5ee7c672cc60c74be33fafb4aa" translate="yes" xml:space="preserve">
          <source>A lock token is a type of state token that identifies a particular
   lock.  Each lock has exactly one unique lock token generated by the
   server.  Clients MUST NOT attempt to interpret lock tokens in any
   way.

   Lock token URIs MUST be unique across all resources for all time.
   This uniqueness constraint allows lock tokens to be submitted across
   resources and servers without fear of confusion.  Since lock tokens
   are unique, a client MAY submit a lock token in an If header on a
   resource other than the one that returned it.

   When a LOCK operation creates a new lock, the new lock token is
   returned in the Lock-Token response header defined in &lt;a href=&quot;#section-10.5&quot;&gt;Section 10.5&lt;/a&gt;,
   and also in the body of the response.

   Servers MAY make lock tokens publicly readable (e.g., in the DAV:
   lockdiscovery property).  One use case for making lock tokens
   readable is so that a long-lived lock can be removed by the resource
   owner (the client that obtained the lock might have crashed or
   disconnected before cleaning up the lock).  Except for the case of
   using UNLOCK under user guidance, a client SHOULD NOT use a lock
   token created by another client instance.

   This specification encourages servers to create Universally Unique
   Identifiers (UUIDs) for lock tokens, and to use the URI form defined
   by &quot;A Universally Unique Identifier (UUID) URN Namespace&quot;
   ([&lt;a href=&quot;https://tools.ietf.org/html/rfc4122&quot;&gt;RFC4122&lt;/a&gt;]).  However, servers are free to use any URI (e.g., from
   another scheme) so long as it meets the uniqueness requirements.  For
   example, a valid lock token might be constructed using the
   &quot;opaquelocktoken&quot; scheme defined in &lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;.

   Example: &quot;urn:uuid:f81d4fae-7dec-11d0-a765-00a0c91e6bf6&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e28447330e8077fc8cab54715d0f561c86ebbf" translate="yes" xml:space="preserve">
          <source>A machine-usable email address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e534d830d6d1a4baaca41c124f70dc5dd2676c60" translate="yes" xml:space="preserve">
          <source>A method other than &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; is used, or if &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; is used with a &lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;other than&lt;/strong&gt; one of &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, or &lt;code&gt;text/plain&lt;/code&gt;. For instance, if the &lt;code&gt;Content-Type&lt;/code&gt; of the &lt;code&gt;POST&lt;/code&gt; body is &lt;code&gt;application/xml&lt;/code&gt;, a request is preflighted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed855bd7233b72a834c1273c05aff7651b0d47d" translate="yes" xml:space="preserve">
          <source>A more radical approach to cookies are zombie cookies or &quot;Evercookies&quot; which are recreated after their deletion and are intentionally hard to delete forever. They are using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API&quot;&gt;Web storage API&lt;/a&gt;, Flash Local Shared Objects and other techniques to recreate themselves whenever the cookie's absence is detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cbf91c7a233e2d92640564b32c98fc24c39369" translate="yes" xml:space="preserve">
          <source>A non-negative decimal integer indicating the seconds to delay after the response is received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6619a7d6c651e30a9c93d75a3aae971cdd6730a9" translate="yes" xml:space="preserve">
          <source>A non-negative integer, representing time in seconds the object has been in a proxy cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5cdae960d879dbf9f2c82fb00f32d958dffa0f" translate="yes" xml:space="preserve">
          <source>A number of security issues (e.g. phishing) have been associated with data URLs, and navigating to them in the browser's top level. To mitigate such issues, top-level navigation to &lt;code&gt;data://&lt;/code&gt; URIs has been blocked in Firefox 59+ (release version, Nightly/Beta from 58), and we hope to see other browsers follow suit soon. &lt;a href=&quot;https://blog.mozilla.org/security/2017/11/27/blocking-top-level-navigations-data-urls-firefox-58/&quot;&gt;See Blocking Top-Level Navigations to data URLs for Firefox 58&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4c8ac9e916c2f51a9f789cc3213dedde33771f" translate="yes" xml:space="preserve">
          <source>A persistent connection is one which remains open for a period of time, and can be reused for several requests, saving the need for a new TCP handshake, and utilizing TCP's performance enhancing capabilities. This connection will not stay open forever: idle connections are closed after some time (a server may use the &lt;a href=&quot;headers/keep-alive&quot;&gt;&lt;code&gt;Keep-Alive&lt;/code&gt;&lt;/a&gt; header to specify a minimum time the connection should be kept open).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5964b3fdbddffba630fc173f336fc4d53d9c2d" translate="yes" xml:space="preserve">
          <source>A policy is described using a series of policy directives, each of which describes the policy for a certain resource type or policy area. Your policy should include a &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; policy directive, which is a fallback for other resource types when they don't have policies of their own (for a complete list, see the description of the &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; directive). A policy needs to include a &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;headers/content-security-policy/script-src&quot;&gt;&lt;code&gt;script-src&lt;/code&gt;&lt;/a&gt; directive to prevent inline scripts from running, as well as blocking the use of &lt;code&gt;eval()&lt;/code&gt;. A policy needs to include a &lt;a href=&quot;headers/content-security-policy/default-src&quot;&gt;&lt;code&gt;default-src&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;headers/content-security-policy/style-src&quot;&gt;&lt;code&gt;style-src&lt;/code&gt;&lt;/a&gt; directive to restrict inline styles from being applied from a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; element or a &lt;code&gt;style&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3f38c5e6f98017e27ccd823e11fb4f53638759" translate="yes" xml:space="preserve">
          <source>A policy is described using a set of individual policy directives. A policy directive is a combination of a defined feature name, and an allowlist of origins that can use the feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1e2a64ac8cc70397584ab85d7a956880edca58" translate="yes" xml:space="preserve">
          <source>A potential security hole that has recently been fixed by browsers is authentication of cross-site images. From &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/59&quot;&gt;Firefox 59&lt;/a&gt; onwards, image resources loaded from different origins to the current document are no longer able to trigger HTTP authentication dialogs (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1423146&quot;&gt;bug 1423146&lt;/a&gt;), preventing user credentials being stolen if attackers were able to embed an arbitrary image into a third-party page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6365c5dff77a5f8170fa70a3b4adb72b11fd2b61" translate="yes" xml:space="preserve">
          <source>A primary goal of CSP is to mitigate and report XSS attacks. XSS attacks exploit the browser's trust of the content received from the server. Malicious scripts are executed by the victim's browser because the browser trusts the source of the content, even when it's not coming from where it seems to be coming from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439d68646c04f15f6a1847145b2f1608413870b0" translate="yes" xml:space="preserve">
          <source>A private cache is dedicated to a single user. You might have seen &quot;caching&quot; in your browser's settings already. A browser cache holds all documents downloaded via &lt;a href=&quot;index&quot;&gt;HTTP&lt;/a&gt; by the user. This cache is used to make visited documents available for back/forward navigation, saving, viewing-as-source, etc. without requiring an additional trip to the server. It likewise improves offline browsing of cached content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82d2b7fb1e238df861eebe638d87bc4cf317285" translate="yes" xml:space="preserve">
          <source>A process for decoding the chunked transfer coding can be represented
   in pseudo-code as:

     length := 0
     read chunk-size, chunk-ext (if any), and CRLF
     while (chunk-size &amp;gt; 0) {
        read chunk-data and CRLF
        append chunk-data to decoded-body
        length := length + chunk-size
        read chunk-size, chunk-ext (if any), and CRLF
     }
     read trailer field
     while (trailer field is not empty) {
        if (trailer field is allowed to be sent in a trailer) {
            append trailer field to existing header fields
        }
        read trailer-field
     }
     Content-Length := length
     Remove &quot;chunked&quot; from Transfer-Encoding
     Remove Trailer from existing header fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3433ae2d101b2c7bcd4c2dc4e1a13455c8f60c5d" translate="yes" xml:space="preserve">
          <source>A product identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0885b17418737dcc207d3d7f9c2773976ecc3fe7" translate="yes" xml:space="preserve">
          <source>A project designed to help developers, system administrators, and security professionals configure their sites safely and securely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812c8d56ede89e043cd0d76837494a71cd36e6fd" translate="yes" xml:space="preserve">
          <source>A property name is a universally unique identifier that is associated
   with a schema that provides information about the syntax and
   semantics of the property.

   Because a property's name is universally unique, clients can depend
   upon consistent behavior for a particular property across multiple
   resources, on the same and across different servers, so long as that
   property is &quot;live&quot; on the resources in question, and the
   implementation of the live property is faithful to its definition.

   The XML namespace mechanism, which is based on URIs ([&lt;a href=&quot;https://tools.ietf.org/html/rfc3986&quot;&gt;RFC3986&lt;/a&gt;]), is
   used to name properties because it prevents namespace collisions and
   provides for varying degrees of administrative control.

   The property namespace is flat; that is, no hierarchy of properties
   is explicitly recognized.  Thus, if a property A and a property A/B
   exist on a resource, there is no recognition of any relationship
   between the two properties.  It is expected that a separate
   specification will eventually be produced that will address issues
   relating to hierarchical properties.

   Finally, it is not possible to define the same property twice on a
   single resource, as this would cause a collision in the resource's
   property namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacdba23a65a183495b790ee68fdf2145281249c" translate="yes" xml:space="preserve">
          <source>A recurring question among website owners is whether to choose non-www or www URLs. This page provides some advice on what's best.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfa1a7fc8e90c654961e3cd92ce898d60b0c079" translate="yes" xml:space="preserve">
          <source>A referrer will be sent for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-site origins&lt;/a&gt;, but cross-origin requests will contain no referrer information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae243fc787eed5f661f7ca1eba239db78ab53cd" translate="yes" xml:space="preserve">
          <source>A registration MUST include the following fields:

   o  Cache Directive Name 

   o  Pointer to specification text

   Values to be added to this namespace require IETF Review (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226], Section&amp;nbsp;4.1&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53f7f5a3cccd3a8eb1b60f9e389fc08f9663236" translate="yes" xml:space="preserve">
          <source>A registration MUST include the following fields:

   o  Status Code (3 digits)

   o  Short Description

   o  Pointer to specification text

   Values to be added to the HTTP status code namespace require IETF
   Review (see &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226], Section&amp;nbsp;4.1&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a86ff2e17ce76a1f3b579485c7312a875e5283" translate="yes" xml:space="preserve">
          <source>A registration MUST include the following fields:

   o  Warn Code (3 digits)

   o  Short Description

   o  Pointer to specification text

   Values to be added to this namespace require IETF Review (see
   &lt;a href=&quot;https://tools.ietf.org/html/rfc5226#section-4.1&quot;&gt;[RFC5226], Section&amp;nbsp;4.1&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d235161b5c7adbe95acaa5e39a723e244ff106" translate="yes" xml:space="preserve">
          <source>A related topic is the concept of HTTP connection upgrades, wherein an HTTP/1.1 connection is upgraded to a different protocol, such as TLS/1.0, WebSocket, or even HTTP/2 in cleartext. This &lt;a href=&quot;protocol_upgrade_mechanism&quot;&gt;protocol upgrade mechanism&lt;/a&gt; is documented in more detail elsewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d792622b2930c487cb661d9dfa70764d9bdce6" translate="yes" xml:space="preserve">
          <source>A relative (to the request URL) or absolute URL pointing to a source map file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b17c6c33bdd43b6f562d0d41e6eb0e2aa2ab77" translate="yes" xml:space="preserve">
          <source>A relative (to the request URL) or absolute URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2268a2e42421e9d441dc85b7260cf9456fb7200" translate="yes" xml:space="preserve">
          <source>A representation can be partitioned into subranges according to
   various structural units, depending on the structure inherent in the
   representation's media type.  This &quot;range unit&quot; is used in the
   Accept-Ranges (&lt;a href=&quot;#section-2.3&quot;&gt;Section 2.3&lt;/a&gt;) response header field to advertise
   support for range requests, the Range (&lt;a href=&quot;#section-3.1&quot;&gt;Section 3.1&lt;/a&gt;) request header
   field to delineate the parts of a representation that are requested,
   and the Content-Range (&lt;a href=&quot;#section-4.2&quot;&gt;Section 4.2&lt;/a&gt;) payload header field to describe
   which part of a representation is being transferred.

     range-unit       = bytes-unit / other-range-unit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71b4bd9a10e17cd95bbfd491a4aa1f6dbc4d2f2" translate="yes" xml:space="preserve">
          <source>A request message from a client to a server includes, within the
   first line of that message, the method to be applied to the resource,
   the identifier of the resource, and the protocol version in use.

        Request       = Request-Line              ; &lt;a href=&quot;#section-5.1&quot;&gt;Section 5.1&lt;/a&gt;
                        *(( general-header        ; &lt;a href=&quot;#section-4.5&quot;&gt;Section 4.5&lt;/a&gt;
                         | request-header         ; &lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;
                         | entity-header ) CRLF)  ; &lt;a href=&quot;#section-7.1&quot;&gt;Section 7.1&lt;/a&gt;
                        CRLF
                        [ message-body ]          ; &lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9fa92bb2a5449449d61328cb82bf9e89b926d4" translate="yes" xml:space="preserve">
          <source>A request method is considered &quot;idempotent&quot; if the intended effect on
   the server of multiple identical requests with that method is the
   same as the effect for a single such request.  Of the request methods
   defined by this specification, PUT, DELETE, and safe request methods
   are idempotent. 

   Like the definition of safe, the idempotent property only applies to
   what has been requested by the user; a server is free to log each
   request separately, retain a revision control history, or implement
   other non-idempotent side effects for each idempotent request.

   Idempotent methods are distinguished because the request can be
   repeated automatically if a communication failure occurs before the
   client is able to read the server's response.  For example, if a
   client sends a PUT request and the underlying connection is closed
   before any response is received, then the client can establish a new
   connection and retry the idempotent request.  It knows that repeating
   the request will have the same intended effect, even if the original
   request succeeded, though the response might differ.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546384726031738c999ae47dc3029524e1da7c86" translate="yes" xml:space="preserve">
          <source>A request that needs to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CORS&quot;&gt;CORS&lt;/a&gt; was attempted, but CORS is disabled in the user's browser. When this happens, the user needs to turn CORS back on in their browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4fecdc1b419060578658673f7841f56391ef3c" translate="yes" xml:space="preserve">
          <source>A request-line begins with a method token, followed by a single space
   (SP), the request-target, another single space (SP), the protocol
   version, and ends with CRLF.

     request-line   = method SP request-target SP HTTP-version CRLF

   The method token indicates the request method to be performed on the
   target resource.  The request method is case-sensitive.

     method         = token

   The request methods defined by this specification can be found in
   &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4&quot;&gt;Section&amp;nbsp;4 of [RFC7231]&lt;/a&gt;, along with information regarding the HTTP
   method registry and considerations for defining new methods.

   The request-target identifies the target resource upon which to apply
   the request, as defined in &lt;a href=&quot;#section-5.3&quot;&gt;Section 5.3&lt;/a&gt;.

   Recipients typically parse the request-line into its component parts
   by splitting on whitespace (see &lt;a href=&quot;#section-3.5&quot;&gt;Section 3.5&lt;/a&gt;), since no whitespace is
   allowed in the three components.  Unfortunately, some user agents
   fail to properly encode or exclude whitespace found in hypertext
   references, resulting in those disallowed characters being sent in a
   request-target.

   Recipients of an invalid request-line SHOULD respond with either a
   400 (Bad Request) error or a 301 (Moved Permanently) redirect with
   the request-target properly encoded.  A recipient SHOULD NOT attempt
   to autocorrect and then process the request without a redirect, since
   the invalid request-line might be deliberately crafted to bypass
   security filters along the request chain.

   HTTP does not place a predefined limit on the length of a
   request-line, as described in &lt;a href=&quot;#section-2.5&quot;&gt;Section 2.5&lt;/a&gt;.  A server that receives a
   method longer than any that it implements SHOULD respond with a 501
   (Not Implemented) status code.  A server that receives a 

   request-target longer than any URI it wishes to parse MUST respond
   with a 414 (URI Too Long) status code (see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-6.5.12&quot;&gt;Section&amp;nbsp;6.5.12 of
   [RFC7231]&lt;/a&gt;).

   Various ad hoc limitations on request-line length are found in
   practice.  It is RECOMMENDED that all HTTP senders and recipients
   support, at a minimum, request-line lengths of 8000 octets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7980e0e9f0bf2020cb5e958089632996a1336213" translate="yes" xml:space="preserve">
          <source>A resource can explicitly advertise its support for the revisions to
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC2518&lt;/a&gt;] made in this document.  Class 1 MUST be supported as well.
   Class 2 MAY be supported.  Advertising class 3 support in addition to
   class 1 and 2 means that the server supports all the requirements in
   this specification.  Advertising class 3 and class 1 support, but not
   class 2, means that the server supports all the requirements in this
   specification except possibly those that involve locking support. 

   Example:

            DAV: 1, 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0b02bd6becb7e138339ca8cbce88e5c8dc9860" translate="yes" xml:space="preserve">
          <source>A response containing a &lt;code&gt;Keep-Alive&lt;/code&gt; header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3589c5d5733be22e8a4c793501192c7aeaaf910" translate="yes" xml:space="preserve">
          <source>A response containing one single range:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d288a5da8b4ec025b38438ed09fb0060c6a676e8" translate="yes" xml:space="preserve">
          <source>A response containing several ranges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ee67e224ae11e90845c87f77f2fe7ec059fb94" translate="yes" xml:space="preserve">
          <source>A response message is considered complete when all of the octets
   indicated by the message framing ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot;&gt;RFC7230&lt;/a&gt;]) are received prior to
   the connection being closed.  If the request method is GET, the
   response status code is 200 (OK), and the entire response header
   section has been received, a cache MAY store an incomplete response
   message body if the cache entry is recorded as incomplete.  Likewise,
   a 206 (Partial Content) response MAY be stored as if it were an
   incomplete 200 (OK) cache entry.  However, a cache MUST NOT store
   incomplete or partial-content responses if it does not support the
   Range and Content-Range header fields or if it does not understand
   the range units used in those fields.

   A cache MAY complete a stored incomplete response by making a
   subsequent range request ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;]) and combining the successful
   response with the stored entry, as defined in &lt;a href=&quot;#section-3.3&quot;&gt;Section 3.3&lt;/a&gt;.  A cache
   MUST NOT use an incomplete response to answer requests unless the
   response has been made complete or the request is partial and
   specifies a range that is wholly within the incomplete response.  A
   cache MUST NOT send a partial response to a client without explicitly
   marking it as such using the 206 (Partial Content) status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999a0c8fd82d7b5d2242dddbeb3edd70fcd18975" translate="yes" xml:space="preserve">
          <source>A response might transfer only a partial representation if the
   connection closed prematurely or if the request used one or more
   Range specifiers ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot;&gt;RFC7233&lt;/a&gt;]).  After several such transfers, a cache
   might have received several ranges of the same representation.  A
   cache MAY combine these ranges into a single stored response, and
   reuse that response to satisfy later requests, if they all share the
   same strong validator and the cache complies with the client
   requirements in &lt;a href=&quot;https://tools.ietf.org/html/rfc7233#section-4.3&quot;&gt;Section&amp;nbsp;4.3 of [RFC7233]&lt;/a&gt;.

   When combining the new response with one or more stored responses, a
   cache MUST:

   o  delete any Warning header fields in the stored response with
      warn-code 1xx (see &lt;a href=&quot;#section-5.5&quot;&gt;Section 5.5&lt;/a&gt;);

   o  retain any Warning header fields in the stored response with
      warn-code 2xx; and,

   o  use other header fields provided in the new response, aside from
      Content-Range, to replace all instances of the corresponding
      header fields in the stored response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70c6ad8d852190de6c159770119532624c086ed" translate="yes" xml:space="preserve">
          <source>A response might transfer only a subrange of a representation if the
   connection closed prematurely or if the request used one or more
   Range specifications.  After several such transfers, a client might
   have received several ranges of the same representation.  These
   ranges can only be safely combined if they all have in common the
   same strong validator (&lt;a href=&quot;https://tools.ietf.org/html/rfc7232#section-2.1&quot;&gt;Section&amp;nbsp;2.1 of [RFC7232]&lt;/a&gt;).

   A client that has received multiple partial responses to GET requests
   on a target resource MAY combine those responses into a larger
   continuous range if they share the same strong validator.

   If the most recent response is an incomplete 200 (OK) response, then
   the header fields of that response are used for any combined response
   and replace those of the matching stored responses.

   If the most recent response is a 206 (Partial Content) response and
   at least one of the matching stored responses is a 200 (OK), then the
   combined response header fields consist of the most recent 200
   response's header fields.  If all of the matching stored responses
   are 206 responses, then the stored response with the most recent
   header fields is used as the source of header fields for the combined
   response, except that the client MUST use other header fields
   provided in the new response, aside from Content-Range, to replace
   all instances of the corresponding header fields in the stored
   response. 

   The combined response message body consists of the union of partial
   content ranges in the new response and each of the selected
   responses.  If the union consists of the entire range of the
   representation, then the client MUST process the combined response as
   if it were a complete 200 (OK) response, including a Content-Length
   header field that reflects the complete length.  Otherwise, the
   client MUST process the set of continuous ranges as one of the
   following: an incomplete 200 (OK) response if the combined response
   is a prefix of the representation, a single 206 (Partial Content)
   response containing a multipart/byteranges body, or multiple 206
   (Partial Content) responses, each with one continuous range that is
   indicated by a Content-Range header field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13df76672f8936d6bfa4c75fdd9352b5d89d02a9" translate="yes" xml:space="preserve">
          <source>A response might transfer only a subrange of the bytes of an entity-
   body, either because the request included one or more Range
   specifications, or because a connection was broken prematurely. After
   several such transfers, a cache might have received several ranges of
   the same entity-body.

   If a cache has a stored non-empty set of subranges for an entity, and
   an incoming response transfers another subrange, the cache MAY
   combine the new subrange with the existing set if both the following
   conditions are met:

      - Both the incoming response and the cache entry have a cache
        validator.

      - The two cache validators match using the strong comparison
        function (see &lt;a href=&quot;#section-13.3.3&quot;&gt;section 13.3.3&lt;/a&gt;).

   If either requirement is not met, the cache MUST use only the most
   recent partial response (based on the Date values transmitted with
   every response, and using the incoming response if these values are
   equal or missing), and MUST discard the other partial information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3c0d3780d4efb8123ce73b8830668addce6c7f" translate="yes" xml:space="preserve">
          <source>A response provided by a cache is stale (the expiration time set for it has passed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0f87926e811ddf23f0d196ca75fb63d5c3ead6" translate="yes" xml:space="preserve">
          <source>A response that tells the browser to allow code from any origin to access a resource will include the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c3c1296edc54a60a8b59b30b92efe26a36cd5c" translate="yes" xml:space="preserve">
          <source>A response that tells the browser to allow requesting code from the origin &lt;code&gt;https://developer.mozilla.org&lt;/code&gt; to access a resource will include the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a9acb9401a41dff46ebd4d7c24d2a3d9111ef3" translate="yes" xml:space="preserve">
          <source>A response to a &lt;code&gt;HEAD&lt;/code&gt; method should not have a body. If so, it must be ignored. Even so, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Entity_header&quot;&gt;entity headers&lt;/a&gt; describing the content of the body, like &lt;a href=&quot;../headers/content-length&quot;&gt;&lt;code&gt;Content-Length&lt;/code&gt;&lt;/a&gt; may be included in the response. They don't relate to the body of the &lt;code&gt;HEAD&lt;/code&gt; response, which should be empty, but to the body of similar request using the &lt;a href=&quot;get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; method would have returned as a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a4eab8fbc63e64d63cfaa4c539160dcfdafd03" translate="yes" xml:space="preserve">
          <source>A response to the HEAD method is identical to what an equivalent
   request made with a GET would have been, except it lacks a body.
   This property of HEAD responses can be used to invalidate or update a
   cached GET response if the more efficient conditional GET request
   mechanism is not available (due to no validators being present in the
   stored response) or if transmission of the representation body is not
   desired even if it has changed.

   When a cache makes an inbound HEAD request for a given request target
   and receives a 200 (OK) response, the cache SHOULD update or
   invalidate each of its stored GET responses that could have been
   selected for that request (see &lt;a href=&quot;#section-4.1&quot;&gt;Section 4.1&lt;/a&gt;).

   For each of the stored responses that could have been selected, if
   the stored response and HEAD response have matching values for any
   received validator fields (ETag and Last-Modified) and, if the HEAD
   response has a Content-Length header field, the value of
   Content-Length matches that of the stored response, the cache SHOULD
   update the stored response as described below; otherwise, the cache
   SHOULD consider the stored response to be stale. 

   If a cache updates a stored response with the metadata provided in a
   HEAD response, the cache MUST:

   o  delete any Warning header fields in the stored response with
      warn-code 1xx (see &lt;a href=&quot;#section-5.5&quot;&gt;Section 5.5&lt;/a&gt;);

   o  retain any Warning header fields in the stored response with
      warn-code 2xx; and,

   o  use other header fields provided in the HEAD response to replace
      all instances of the corresponding header fields in the stored
      response and append new header fields to the stored response's
      header section unless otherwise restricted by the Cache-Control
      header field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669f6d87675fe454e2d369ba30faa8e2cfffabb9" translate="yes" xml:space="preserve">
          <source>A response triggering the &quot;Save As&quot; dialog:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e19c47b651e8243cff78fe0138bde2241237d7" translate="yes" xml:space="preserve">
          <source>A returned resource may have one &lt;a href=&quot;headers/access-control-allow-origin&quot;&gt;&lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt;&lt;/a&gt; header, with the following syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95815d7a3c95d6951515bf50a9472dbd82e8e267" translate="yes" xml:space="preserve">
          <source>A schema such as 'http:' or 'https:'. &lt;strong&gt;The colon is required, single quotes shouldn't be used&lt;/strong&gt;. You can also specify data schemas (not recommended).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe7c636e6af2d87ce371a4de3a942151e1fda04" translate="yes" xml:space="preserve">
          <source>A schema such as 'http:' or 'https:'. The colon is required. You can also specify data schemas (not recommended).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cd5842c9a4632e241e41e95dbacd3ae50ac805" translate="yes" xml:space="preserve">
          <source>A secure cookie is only sent to the server with an encrypted request over the HTTPS protocol. Even with &lt;code&gt;Secure&lt;/code&gt;, sensitive information should &lt;em&gt;never&lt;/em&gt; be stored in cookies, as they are inherently insecure and this flag can't offer real protection. Starting with Chrome 52 and Firefox 52, insecure sites (&lt;code&gt;http:&lt;/code&gt;) can't set cookies with the &lt;code&gt;Secure&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7af3cd8d402a8e9beb152653018d719dd4ad9d78" translate="yes" xml:space="preserve">
          <source>A secure cookie will only be sent to the server when a request is made using SSL and the HTTPS protocol. However, confidential or sensitive information should never be stored or transmitted in HTTP Cookies as the entire mechanism is inherently insecure and this doesn't mean that any information is encrypted, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1953290f4d197b8408a6748e64b125663c28443d" translate="yes" xml:space="preserve">
          <source>A server SHOULD return a response with this status code if a request
   included a Range request-header field (&lt;a href=&quot;#section-14.35&quot;&gt;section 14.35&lt;/a&gt;), and none of
   the range-specifier values in this field overlap the current extent
   of the selected resource, and the request did not include an If-Range
   request-header field. (For byte-ranges, this means that the first-
   byte-pos of all of the byte-range-spec values were greater than the
   current length of the selected resource.)

   When this status code is returned for a byte-range request, the
   response SHOULD include a Content-Range entity-header field
   specifying the current length of the selected resource (see &lt;a href=&quot;#section-14.16&quot;&gt;section&lt;/a&gt;&lt;a href=&quot;#section-14.16&quot;&gt;14.16&lt;/a&gt;). This response MUST NOT use the multipart/byteranges content-
   type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f49674d51f115dc57ea58b6c6057d6e1f1f18a" translate="yes" xml:space="preserve">
          <source>A server is in the position to save personal data about a user's
   requests over time, which might identify their reading patterns or
   subjects of interest.  In particular, log information gathered at an
   intermediary often contains a history of user agent interaction,
   across a multitude of sites, that can be traced to individual users.

   HTTP log information is confidential in nature; its handling is often
   constrained by laws and regulations.  Log information needs to be
   securely stored and appropriate guidelines followed for its analysis.
   Anonymization of personal information within individual entries
   helps, but it is generally not sufficient to prevent real log traces
   from being re-identified based on correlation with other access
   characteristics.  As such, access traces that are keyed to a specific
   client are unsafe to publish even if the key is pseudonymous. 

   To minimize the risk of theft or accidental publication, log
   information ought to be purged of personally identifiable
   information, including user identifiers, IP addresses, and
   user-provided query parameters, as soon as that information is no
   longer necessary to support operational needs for security, auditing,
   or fraud control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bccdb2c6a511f29817abf1fc56652b7723e836" translate="yes" xml:space="preserve">
          <source>A server is in the position to save personal data about a user's
   requests which might identify their reading patterns or subjects of
   interest. This information is clearly confidential in nature and its
   handling can be constrained by law in certain countries. People using
   the HTTP protocol to provide data are responsible for ensuring that
   such material is not distributed without the permission of any
   individuals that are identifiable by the published results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d019112f6091b0eed2debdbb713a8f052cf5222e" translate="yes" xml:space="preserve">
          <source>A server is not necessarily a single machine, but several servers can be hosted on the same machine. With HTTP/1.1 and the &lt;a href=&quot;headers/host&quot;&gt;&lt;code&gt;Host&lt;/code&gt;&lt;/a&gt; header, they may even share the same IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79873bcb71a9cedddcc30f39182301545811028" translate="yes" xml:space="preserve">
          <source>A server isn't necessarily a physical machine: several servers can reside on the same physical machine. Or, one server can be handled by several machines, cooperating to produce the answer or balancing the load of the requests between them. The key point is that semantically &lt;em&gt;one domain name represents one single server&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfac30184b9556e9ef555e2af061b31b9e243352" translate="yes" xml:space="preserve">
          <source>A server receives a request for &lt;code&gt;http://www.example.org/whaddup&lt;/code&gt; (when the canonical domain is example.org)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ffc5be989c3040f832f85d28f183c24d1ebfbb" translate="yes" xml:space="preserve">
          <source>A server should send the &quot;close&quot; &lt;a href=&quot;../headers/connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; header field in the response, since &lt;code&gt;408&lt;/code&gt; implies that the server has decided to close the connection rather than continue waiting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fcc0e82756bfddc3111906b38afc8f67f763c0" translate="yes" xml:space="preserve">
          <source>A server supporting partial downloads broadcasts this by sending the &lt;a href=&quot;headers/accept-ranges&quot;&gt;&lt;code&gt;Accept-Ranges&lt;/code&gt;&lt;/a&gt; header. Once this happens, the client can resume a download by sending a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Ranges&quot;&gt;&lt;code&gt;Ranges&lt;/code&gt;&lt;/a&gt; header with the missing ranges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9b03e6063cc4b5ce8870c57b5b3f1fefcf329b" translate="yes" xml:space="preserve">
          <source>A server that receives an incomplete request message, usually due to
   a canceled request or a triggered timeout exception, MAY send an
   error response prior to closing the connection.

   A client that receives an incomplete response message, which can
   occur when a connection is closed prematurely or when decoding a
   supposedly chunked transfer coding fails, MUST record the message as
   incomplete.  Cache requirements for incomplete responses are defined
   in &lt;a href=&quot;https://tools.ietf.org/html/rfc7234#section-3&quot;&gt;Section&amp;nbsp;3 of [RFC7234]&lt;/a&gt;.

   If a response terminates in the middle of the header section (before
   the empty line is received) and the status code might rely on header
   fields to convey the full meaning of the response, then the client
   cannot assume that meaning has been conveyed; the client might need
   to repeat the request in order to determine what action to take next.

   A message body that uses the chunked transfer coding is incomplete if
   the zero-sized chunk that terminates the encoding has not been
   received.  A message that uses a valid Content-Length is incomplete
   if the size of the message body received (in octets) is less than the
   value given by Content-Length.  A response that has neither chunked
   transfer coding nor Content-Length is terminated by closure of the
   connection and, thus, is considered complete regardless of the number
   of message body octets received, provided that the header section was
   received intact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a058fcef10ecb10e40930fc393c822b8da706b5f" translate="yes" xml:space="preserve">
          <source>A server to give access to the document, an early version of &lt;em&gt;httpd&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5428d9f2d224f7b0136e57c085942bc52a277388" translate="yes" xml:space="preserve">
          <source>A sha256, sha384 or sha512 hash of scripts or styles. The use of this source consists of two portions separated by a dash: the encryption algorithm used to create the hash and the base64-encoded hash of the script or style. When generating the hash, don't include the &amp;lt;script&amp;gt; or &amp;lt;style&amp;gt; tags and note that capitalization and whitespace matter, including leading or trailing whitespace. See &lt;a href=&quot;script-src#Unsafe_inline_script&quot;&gt;unsafe inline script&lt;/a&gt; for an example. In CSP 2.0 this applied only to inline scripts. CSP 3.0 allows it in the case of &lt;code&gt;script-src&lt;/code&gt; for external scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effe3f436253f2fb4b93f88cfbc11ed917fb2ccb" translate="yes" xml:space="preserve">
          <source>A shared cache MUST NOT use a cached response to a request with an
   Authorization header field (&lt;a href=&quot;https://tools.ietf.org/html/rfc7235#section-4.2&quot;&gt;Section&amp;nbsp;4.2 of [RFC7235]&lt;/a&gt;) to satisfy any
   subsequent request unless a cache directive that allows such
   responses to be stored is present in the response.

   In this specification, the following Cache-Control response
   directives (&lt;a href=&quot;#section-5.2.2&quot;&gt;Section 5.2.2&lt;/a&gt;) have such an effect: must-revalidate,
   public, and s-maxage. 

   Note that cached responses that contain the &quot;must-revalidate&quot; and/or
   &quot;s-maxage&quot; response directives are not allowed to be served stale
   (&lt;a href=&quot;#section-4.2.4&quot;&gt;Section 4.2.4&lt;/a&gt;) by shared caches.  In particular, a response with
   either &quot;max-age=0, must-revalidate&quot; or &quot;s-maxage=0&quot; cannot be used to
   satisfy a subsequent request without revalidating it on the origin
   server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6723cf8edd03849b4cdc5d908be434852f344b77" translate="yes" xml:space="preserve">
          <source>A shared cache is a cache that stores responses to be reused by more than one user. For example, an ISP or your company might have set up a web proxy as part of its local network infrastructure to serve many users so that popular resources are reused a number of times, reducing network traffic and latency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b2979df34c75249acdcbaead32af4206e98c1f" translate="yes" xml:space="preserve">
          <source>A significant difference between HTTP/1.1 and earlier versions of
   HTTP is that persistent connections are the default behavior of any
   HTTP connection. That is, unless otherwise indicated, the client
   SHOULD assume that the server will maintain a persistent connection,
   even after error responses from the server.

   Persistent connections provide a mechanism by which a client and a
   server can signal the close of a TCP connection. This signaling takes
   place using the Connection header field (&lt;a href=&quot;#section-14.10&quot;&gt;section 14.10&lt;/a&gt;). Once a close
   has been signaled, the client MUST NOT send any more requests on that
   connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc833fea6c576628123c7be8083a40beb8ce29b5" translate="yes" xml:space="preserve">
          <source>A simple form using the default &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; content type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b39b34d060373154765396af385c3d062ca369" translate="yes" xml:space="preserve">
          <source>A simple protocol to exchange these documents, the &lt;em&gt;HypertText Transfer Protocol &lt;/em&gt;(HTTP).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6b8df10d2d0221c0d8b10a29444ba2522da8aa" translate="yes" xml:space="preserve">
          <source>A single, precise &lt;a href=&quot;../basics_of_http/mime_types&quot;&gt;MIME type&lt;/a&gt;, like &lt;code&gt;text/html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b779f5a10d17e9e595f84888aae03e305b6d164d" translate="yes" xml:space="preserve">
          <source>A specific document is called a &lt;em&gt;resource&lt;/em&gt;. When a client wants to obtain it, it requests it using its URL. The server uses this URL to choose one of the variants it provides &amp;ndash; each variant being called a &lt;em&gt;representation&lt;/em&gt; &amp;ndash; and returns this specific representation to the client. The overall resource, as well as each of the representations, have a specific URL. How a specific representation is chosen when the resource is called is determined by &lt;em&gt;content negotiation&lt;/em&gt; and there are several ways of negotiating between the client and the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceace1a8903945561dd351633e2b54bd5662380b" translate="yes" xml:space="preserve">
          <source>A specific incompatibility exists in some versions of the Safari web browser, whereby if a Content Security Policy header is set, but not a Same Origin header, the browser will block self-hosted content and off-site content, and incorrectly report that this is due to a the Content Security Policy not allowing the content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a8fdf6c2788b6b9978669c875fa2c7ee77f30d" translate="yes" xml:space="preserve">
          <source>A specific kind of URIs that directly embeds the resource it represents. Data URIs are very convenient, but have some caveats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6717e7d4b911da2b4b4a18d74011b1145e1b78df" translate="yes" xml:space="preserve">
          <source>A specific kind of URIs, data URIs, embed the resource itself inside the identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9c947ce55668387be7bc6267a41295eae128cc" translate="yes" xml:space="preserve">
          <source>A specification such as this thrives on piercing critical review and
   withers from apathetic neglect.  The authors gratefully acknowledge
   the contributions of the following people, whose insights were so
   valuable at every stage of our work.

   Contributors to &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt;

   Terry Allen, Harald Alvestrand, Jim Amsden, Becky Anderson, Alan
   Babich, Sanford Barr, Dylan Barrell, Bernard Chester, Tim Berners-
   Lee, Dan Connolly, Jim Cunningham, Ron Daniel, Jr., Jim Davis, Keith
   Dawson, Mark Day, Brian Deen, Martin Duerst, David Durand, Lee
   Farrell, Chuck Fay, Wesley Felter, Roy Fielding, Mark Fisher, Alan
   Freier, George Florentine, Jim Gettys, Phill Hallam-Baker, Dennis
   Hamilton, Steve Henning, Mead Himelstein, Alex Hopmann, Andre van der
   Hoek, Ben Laurie, Paul Leach, Ora Lassila, Karen MacArthur, Steven
   Martin, Larry Masinter, Michael Mealling, Keith Moore, Thomas Narten,
   Henrik Nielsen, Kenji Ota, Bob Parker, Glenn Peterson, Jon Radoff,
   Saveen Reddy, Henry Sanders, Christopher Seiwald, Judith Slein, Mike
   Spreitzer, Einar Stefferud, Greg Stein, Ralph Swick, Kenji Takahashi,
   Richard N. Taylor, Robert Thau, John Turner, Sankar Virdhagriswaran,
   Fabio Vitali, Gregory Woodhouse, and Lauren Wood.

   Two from this list deserve special mention.  The contributions by
   Larry Masinter have been invaluable; he both helped the formation of
   the working group and patiently coached the authors along the way.
   In so many ways he has set high standards that we have toiled to
   meet.  The contributions of Judith Slein were also invaluable; by
   clarifying the requirements and in patiently reviewing version after
   version, she both improved this specification and expanded our minds
   on document management.

   We would also like to thank John Turner for developing the XML DTD.

   The authors of &lt;a href=&quot;https://tools.ietf.org/html/rfc2518&quot;&gt;RFC 2518&lt;/a&gt; were Yaron Goland, Jim Whitehead, A. Faizi,
   Steve Carter, and D. Jensen.  Although their names had to be removed
   due to IETF author count restrictions, they can take credit for the
   majority of the design of WebDAV.

   Additional Acknowledgements for This Specification

   Significant contributors of text for this specification are listed as
   contributors in the section below.  We must also gratefully
   acknowledge Geoff Clemm, Joel Soderberg, and Dan Brotsky for hashing
   out specific text on the list or in meetings.  Joe Hildebrand and
   Cullen Jennings helped close many issues.  Barry Lind described an
   additional security consideration and Cullen Jennings provided text 

   for that consideration.  Jason Crawford tracked issue status for this
   document for a period of years, followed by Elias Sinderson.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243ac7b5d0c4b7135957ced81f079042072b4147" translate="yes" xml:space="preserve">
          <source>A standardized version of this header is the HTTP &lt;a href=&quot;forwarded&quot;&gt;&lt;code&gt;Forwarded&lt;/code&gt;&lt;/a&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5732080026806544aacb362bb381344fc069b68" translate="yes" xml:space="preserve">
          <source>A status code line is also sent at the beginning of the response, allowing the browser itself to understand the success or failure of the request and to adapt its behavior in consequence (like in updating or using its local cache in a specific way)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e08ba45f9595801714cdefafd3faea76d549c5" translate="yes" xml:space="preserve">
          <source>A status message, a non-authoritative short description of the status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08604bc21c1691f9b1f625192cc47697f42035b" translate="yes" xml:space="preserve">
          <source>A successful LOCK method MUST result in the creation of an empty
   resource that is locked (and that is not a collection) when a
   resource did not previously exist at that URL.  Later on, the lock
   may go away but the empty resource remains.  Empty resources MUST
   then appear in PROPFIND responses including that URL in the response
   scope.  A server MUST respond successfully to a GET request to an
   empty resource, either by using a 204 No Content response, or by
   using 200 OK with a Content-Length header indicating zero length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34367556fdd895f927c5302a93e55ce713fb9f94" translate="yes" xml:space="preserve">
          <source>A successful response is indicated with a &lt;a href=&quot;../status/204&quot;&gt;&lt;code&gt;204&lt;/code&gt;&lt;/a&gt; response code, because the response in the example does not carry a message body. (which a response with the 200 code would have). Note that other success codes could be used as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e103fc95ad4823358a2845eae9f826cfeffda4c5" translate="yes" xml:space="preserve">
          <source>A textual format to represent hypertext documents, the &lt;em&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HyperText Markup Language&lt;/a&gt;&lt;/em&gt; (HTML).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce1aa0486be881fd62b04d40f7f043b63b1c037" translate="yes" xml:space="preserve">
          <source>A three-digit warning number. The first digit indicates whether the &lt;code&gt;Warning&lt;/code&gt; is required to be deleted from a stored response after validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7d752bda74832f7282cbd7c03d86206cc0cd43" translate="yes" xml:space="preserve">
          <source>A trailer allows the sender to include additional fields at the end
   of a chunked message in order to supply metadata that might be
   dynamically generated while the message body is sent, such as a
   message integrity check, digital signature, or post-processing
   status.  The trailer fields are identical to header fields, except
   they are sent in a chunked trailer instead of the message's header
   section.

     trailer-part   = *( header-field CRLF )

   A sender MUST NOT generate a trailer that contains a field necessary
   for message framing (e.g., Transfer-Encoding and Content-Length),
   routing (e.g., Host), request modifiers (e.g., controls and
   conditionals in &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-5&quot;&gt;Section&amp;nbsp;5 of [RFC7231]&lt;/a&gt;), authentication (e.g., see
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot;&gt;RFC7235&lt;/a&gt;] and [&lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC6265&lt;/a&gt;]), response control data (e.g., see &lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1&quot;&gt;Section&lt;/a&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-7.1&quot;&gt;7.1 of [RFC7231]&lt;/a&gt;), or determining how to process the payload (e.g.,
   Content-Encoding, Content-Type, Content-Range, and Trailer).

   When a chunked message containing a non-empty trailer is received,
   the recipient MAY process the fields (aside from those forbidden
   above) as if they were appended to the message's header section.  A
   recipient MUST ignore (or consider as an error) any fields that are
   forbidden to be sent in a trailer, since processing them as if they
   were present in the header section might bypass external security
   filters.

   Unless the request includes a TE header field indicating &quot;trailers&quot;
   is acceptable, as described in &lt;a href=&quot;#section-4.3&quot;&gt;Section 4.3&lt;/a&gt;, a server SHOULD NOT
   generate trailer fields that it believes are necessary for the user
   agent to receive.  Without a TE containing &quot;trailers&quot;, the server
   ought to assume that the trailer fields might be silently discarded
   along the path to the user agent.  This requirement allows
   intermediaries to forward a de-chunked message to an HTTP/1.0
   recipient without buffering the entire response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66dee6b11e93736d953af429c12c61621b0b237" translate="yes" xml:space="preserve">
          <source>A typical HTTP session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ee2f8f3bbbe21e292a7b8dac9501fca154c6f0" translate="yes" xml:space="preserve">
          <source>A typical flow of requests, all through one single connection is now looking like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccbdc0f9453daa1ff4757f0c1283a456c445232" translate="yes" xml:space="preserve">
          <source>A typical status line looks like: &lt;code&gt;HTTP/1.1 404 Not Found.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae78cbf97ee4cff3a5f3f02f099427e133082c03" translate="yes" xml:space="preserve">
          <source>A user agent has to demonstrate knowledge of a lock when requesting
   an operation on a locked resource.  Otherwise, the following scenario
   might occur.  In the scenario, program A, run by User A, takes out a
   write lock on a resource.  Program B, also run by User A, has no
   knowledge of the lock taken out by program A, yet performs a PUT to
   the locked resource.  In this scenario, the PUT succeeds because
   locks are associated with a principal, not a program, and thus
   program B, because it is acting with principal A's credential, is
   allowed to perform the PUT.  However, had program B known about the
   lock, it would not have overwritten the resource, preferring instead
   to present a dialog box describing the conflict to the user.  Due to
   this scenario, a mechanism is needed to prevent different programs
   from accidentally ignoring locks taken out by other programs with the
   same authorization.

   In order to prevent these collisions, a lock token MUST be submitted
   by an authorized principal for all locked resources that a method may
   change or the method MUST fail.  A lock token is submitted when it
   appears in an If header.  For example, if a resource is to be moved
   and both the source and destination are locked, then two lock tokens
   must be submitted in the If header, one for the source and the other
   for the destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1665264fcfc3dbf5c0a1ff63ea9c76cb5daa217f" translate="yes" xml:space="preserve">
          <source>A user agent that wishes to authenticate itself with a server--
      usually, but not necessarily, after receiving a 401 response--does
      so by including an Authorization request-header field with the
      request.  The Authorization field value consists of credentials
      containing the authentication information of the user agent for
      the realm of the resource being requested.

          Authorization  = &quot;Authorization&quot; &quot;:&quot; credentials

      HTTP access authentication is described in &quot;HTTP Authentication:
      Basic and Digest Access Authentication&quot; [&lt;a href=&quot;#ref-43&quot;&gt;43&lt;/a&gt;]. If a request is
      authenticated and a realm specified, the same credentials SHOULD
      be valid for all other requests within this realm (assuming that
      the authentication scheme itself does not require otherwise, such
      as credentials that vary according to a challenge value or using
      synchronized clocks).

      When a shared cache (see &lt;a href=&quot;#section-13.7&quot;&gt;section 13.7&lt;/a&gt;) receives a request
      containing an Authorization field, it MUST NOT return the
      corresponding response as a reply to any other request, unless one
      of the following specific exceptions holds:

      1. If the response includes the &quot;s-maxage&quot; cache-control
         directive, the cache MAY use that response in replying to a
         subsequent request. But (if the specified maximum age has
         passed) a proxy cache MUST first revalidate it with the origin
         server, using the request-headers from the new request to allow
         the origin server to authenticate the new request. (This is the
         defined behavior for s-maxage.) If the response includes &quot;s-
         maxage=0&quot;, the proxy MUST always revalidate it before re-using
         it.

      2. If the response includes the &quot;must-revalidate&quot; cache-control
         directive, the cache MAY use that response in replying to a
         subsequent request. But if the response is stale, all caches
         MUST first revalidate it with the origin server, using the
         request-headers from the new request to allow the origin server
         to authenticate the new request.

      3. If the response includes the &quot;public&quot; cache-control directive,
         it MAY be returned in reply to any subsequent request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb38217a0a68009475024a823a8a9c28117955a" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;../../basics_of_http/mime_types/complete_list_of_mime_types&quot;&gt;MIME type&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e6db7c902ddf3358740b6f48b9c66a1329f13a" translate="yes" xml:space="preserve">
          <source>A value of &lt;strong&gt;-1&lt;/strong&gt; will disable caching, requiring a preflight OPTIONS check for all calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5889b8a74eb0576ba107584be5617ae14bc061f0" translate="yes" xml:space="preserve">
          <source>A version number of the product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e076002695264f7b92b71f90d2a5b52b89009a69" translate="yes" xml:space="preserve">
          <source>A very comprehensive article on browser internals and request flow through HTTP protocol. A MUST-READ for any web developer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa040618dd780f3a0aef82d86f3446592dbd355" translate="yes" xml:space="preserve">
          <source>A video file, possibly with audio, in the OGG container format. Theora is the usual video codec used within it; Vorbis is the usual audio codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa979d0019d43f2c9b25ac426f79d9a5706a185" translate="yes" xml:space="preserve">
          <source>A video file, possibly with audio, in the WebM container format. VP8 and VP9 are the most common video codecs; Vorbis and Opus the most common audio codecs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a189a3656c45672cb9f6d2aac0bf5a253e8d427" translate="yes" xml:space="preserve">
          <source>A web site administrator for an online banking site wants to ensure that all its content is loaded using SSL, in order to prevent attackers from eavesdropping on requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a6cf5a14fccb26323ff827be190ed35fcc6e26" translate="yes" xml:space="preserve">
          <source>A web site administrator of a web mail site wants to allow HTML in email, as well as images loaded from anywhere, but not JavaScript or other potentially dangerous content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7426821d25f9d1be7cdc0dee42a0c8e03a96be3c" translate="yes" xml:space="preserve">
          <source>A web site administrator wants all content to come from the site's own origin (this excludes subdomains.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094a073a77d4ea29e21e0f0aa48a85ef6fc064f6" translate="yes" xml:space="preserve">
          <source>A web site administrator wants to allow content from a trusted domain and all its subdomains (it doesn't have to be the same domain that the CSP is set on.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81c7277d68cf8c04b37b98fb5f5a7cea290054e" translate="yes" xml:space="preserve">
          <source>A web site administrator wants to allow users of a web application to include images from any origin in their own content, but to restrict audio or video media to trusted providers, and all scripts only to a specific server that hosts trusted code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9498f184ab4111b05c76c6fbfcfb1b645e8241e1" translate="yes" xml:space="preserve">
          <source>A whitelist for specific inline scripts using a cryptographic nonce (number used once). The server must generate a unique nonce value each time it transmits a policy. It is critical to provide an unguessable nonce, as bypassing a resource&amp;rsquo;s policy is otherwise trivial. See &lt;a href=&quot;script-src#Unsafe_inline_script&quot;&gt;unsafe inline script&lt;/a&gt; for an example. Specifying nonce makes a modern browser ignore &lt;code&gt;'unsafe-inline'&lt;/code&gt; which could still be set for older browsers without nonce support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607dbcd9743fda8a80dc6941bb1406560915ac51" translate="yes" xml:space="preserve">
          <source>A.1.  Changes from HTTP/1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e7c2181bcefe9076dade6180831af529a35160" translate="yes" xml:space="preserve">
          <source>A.1.  MIME-Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934d78a07914cb136497f33678b675d378c9c1c3" translate="yes" xml:space="preserve">
          <source>A.1.  Notes on Empty XML Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1cd245606e42807b94c9f374a34eccc7961ec0" translate="yes" xml:space="preserve">
          <source>A.1.1.  Multihomed Web Servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ff08eb30576725916a16c707537cd82a7aa072" translate="yes" xml:space="preserve">
          <source>A.1.2.  Keep-Alive Connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be274cc414e041aa285536fd1d9abea04688061" translate="yes" xml:space="preserve">
          <source>A.1.3.  Introduction of Transfer-Encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b625deb328c263df8d663f465330058cd2f6a3db" translate="yes" xml:space="preserve">
          <source>A.2.  Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c37ee894c4d97db6e012967c60c8ae1646c47d2" translate="yes" xml:space="preserve">
          <source>A.2.  Conversion to Canonical Form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a5586a515762626176f0ba79e73a11ee5d37bc" translate="yes" xml:space="preserve">
          <source>A.2.  Notes on Illegal XML Processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c000b068248fb6a64403618c2b71c2ec3faa5ef" translate="yes" xml:space="preserve">
          <source>A.3.  Conversion of Date Formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb60af0705f2ed7e764e5c836e357c9a4588554" translate="yes" xml:space="preserve">
          <source>A.3.  Example - XML Syntax Error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26036cb9e7529396282952036d022db566e885e" translate="yes" xml:space="preserve">
          <source>A.4.  Conversion of Content-Encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea2c416d6e0ef6e9a66400fec7ff2af31243cc5" translate="yes" xml:space="preserve">
          <source>A.4.  Example - Unexpected XML Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a266ccc4168540071853c8f0598387442256e895" translate="yes" xml:space="preserve">
          <source>A.5.  Conversion of Content-Transfer-Encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206ee8943d80ea391322bf6e9311cef2b5532423" translate="yes" xml:space="preserve">
          <source>A.6.  MHTML and Line Length Limitations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b463080c85b05823aaddc6fc68a219f5680ee32b" translate="yes" xml:space="preserve">
          <source>AAC audio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed3e9ef5eed89882da580130970d5049696337c" translate="yes" xml:space="preserve">
          <source>ABNF List Extension: #rule (RFC 7230)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1588a2512f762c137bb4684cdcc818aa63d0393" translate="yes" xml:space="preserve">
          <source>ALLOW-FROM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5766cf5be7954090e3b573bc2ac357eb125cb979" translate="yes" xml:space="preserve">
          <source>APIs based on HTTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491f27fea75b26dbfefa2ee1bed63b09db887b09" translate="yes" xml:space="preserve">
          <source>AVI: Audio Video Interleave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24750e2e16dfc2b89dc7f623971f1a084bde0d9a" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypermedia information
   systems.  This document defines the HTTP Authentication framework.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7235&quot;&gt;http://www.rfc-editor.org/info/rfc7235&lt;/a&gt;.

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this 

   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English.

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Access Authentication Framework 
      &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;. Challenge and Response 
      &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;. Protection Space (Realm) 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Status Code Definitions 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. 401 Unauthorized 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. 407 Proxy Authentication Required 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Header Field Definitions 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. WWW-Authenticate 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Authorization 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Proxy-Authenticate 
      &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;. Proxy-Authorization 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Authentication Scheme Registry 
           &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;. Considerations for New Authentication Schemes 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Status Code Registration 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Header Field Registration 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. Confidentiality of Credentials 
      &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;. Authentication Credentials and Idle Clients 
      &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;. Protection Spaces 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. References 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Changes from RFCs 2616 and 2617 
   &lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Imported ABNF 
   &lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5cf0df594932a60c94f36c291eebcfe03889d61" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypertext information
   systems.  This document defines HTTP caches and the associated header
   fields that control cache behavior or indicate cacheable response
   messages.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7234&quot;&gt;http://www.rfc-editor.org/info/rfc7234&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English.

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
           &lt;a href=&quot;#section-1.2.1&quot;&gt;1.2.1&lt;/a&gt;. Delta Seconds 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Overview of Cache Operation 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Storing Responses in Caches 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. Storing Incomplete Responses 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. Storing Responses to Authenticated Requests 
      &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;. Combining Partial Content 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Constructing Responses from Caches 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. Calculating Secondary Keys with Vary 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Freshness 
           &lt;a href=&quot;#section-4.2.1&quot;&gt;4.2.1&lt;/a&gt;. Calculating Freshness Lifetime 
           &lt;a href=&quot;#section-4.2.2&quot;&gt;4.2.2&lt;/a&gt;. Calculating Heuristic Freshness 
           &lt;a href=&quot;#section-4.2.3&quot;&gt;4.2.3&lt;/a&gt;. Calculating Age 
           &lt;a href=&quot;#section-4.2.4&quot;&gt;4.2.4&lt;/a&gt;. Serving Stale Responses 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Validation 
           &lt;a href=&quot;#section-4.3.1&quot;&gt;4.3.1&lt;/a&gt;. Sending a Validation Request 
           &lt;a href=&quot;#section-4.3.2&quot;&gt;4.3.2&lt;/a&gt;. Handling a Received Validation Request ............. 

           &lt;a href=&quot;#section-4.3.3&quot;&gt;4.3.3&lt;/a&gt;. Handling a Validation Response 
           &lt;a href=&quot;#section-4.3.4&quot;&gt;4.3.4&lt;/a&gt;. Freshening Stored Responses upon Validation 
           &lt;a href=&quot;#section-4.3.5&quot;&gt;4.3.5&lt;/a&gt;. Freshening Responses via HEAD 
      &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;. Invalidation 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Header Field Definitions 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Age 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Cache-Control 
           &lt;a href=&quot;#section-5.2.1&quot;&gt;5.2.1&lt;/a&gt;. Request Cache-Control Directives 
           &lt;a href=&quot;#section-5.2.2&quot;&gt;5.2.2&lt;/a&gt;. Response Cache-Control Directives 
           &lt;a href=&quot;#section-5.2.3&quot;&gt;5.2.3&lt;/a&gt;. Cache Control Extensions 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Expires 
      &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;. Pragma 
      &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;. Warning 
           &lt;a href=&quot;#section-5.5.1&quot;&gt;5.5.1&lt;/a&gt;. Warning: 110 - &quot;Response is Stale&quot; 
           &lt;a href=&quot;#section-5.5.2&quot;&gt;5.5.2&lt;/a&gt;. Warning: 111 - &quot;Revalidation Failed&quot; 
           &lt;a href=&quot;#section-5.5.3&quot;&gt;5.5.3&lt;/a&gt;. Warning: 112 - &quot;Disconnected Operation&quot; 
           &lt;a href=&quot;#section-5.5.4&quot;&gt;5.5.4&lt;/a&gt;. Warning: 113 - &quot;Heuristic Expiration&quot; 
           &lt;a href=&quot;#section-5.5.5&quot;&gt;5.5.5&lt;/a&gt;. Warning: 199 - &quot;Miscellaneous Warning&quot; 
           &lt;a href=&quot;#section-5.5.6&quot;&gt;5.5.6&lt;/a&gt;. Warning: 214 - &quot;Transformation Applied&quot; 
           &lt;a href=&quot;#section-5.5.7&quot;&gt;5.5.7&lt;/a&gt;. Warning: 299 - &quot;Miscellaneous Persistent Warning&quot; ..32
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. History Lists 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;. Cache Directive Registry 
           &lt;a href=&quot;#section-7.1.1&quot;&gt;7.1.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-7.1.2&quot;&gt;7.1.2&lt;/a&gt;. Considerations for New Cache Control Directives 
           &lt;a href=&quot;#section-7.1.3&quot;&gt;7.1.3&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;. Warn Code Registry 
           &lt;a href=&quot;#section-7.2.1&quot;&gt;7.2.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-7.2.2&quot;&gt;7.2.2&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-7.3&quot;&gt;7.3&lt;/a&gt;. Header Field Registration 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. Security Considerations 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. References 
      &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;&lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Imported ABNF 
   &lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfa8b0f43222ebcd97d708793fc8cc336ca94f7" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypertext information
   systems.  This document defines HTTP/1.1 conditional requests,
   including metadata header fields for indicating state changes,
   request header fields for making preconditions on such state, and
   rules for constructing the responses to a conditional request when
   one or more preconditions evaluate to false.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7232&quot;&gt;http://www.rfc-editor.org/info/rfc7232&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English. 

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Validators 
      &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;. Weak versus Strong 
      &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;. Last-Modified 
           &lt;a href=&quot;#section-2.2.1&quot;&gt;2.2.1&lt;/a&gt;. Generation 
           &lt;a href=&quot;#section-2.2.2&quot;&gt;2.2.2&lt;/a&gt;. Comparison 
      &lt;a href=&quot;#section-2.3&quot;&gt;2.3&lt;/a&gt;. ETag 
           &lt;a href=&quot;#section-2.3.1&quot;&gt;2.3.1&lt;/a&gt;. Generation 
           &lt;a href=&quot;#section-2.3.2&quot;&gt;2.3.2&lt;/a&gt;. Comparison 
           2.3.3. Example: Entity-Tags Varying on
                  Content-Negotiated Resources 
      &lt;a href=&quot;#section-2.4&quot;&gt;2.4&lt;/a&gt;. When to Use Entity-Tags and Last-Modified Dates 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Precondition Header Fields 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. If-Match 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. If-None-Match 
      &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;. If-Modified-Since 
      &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;. If-Unmodified-Since 
      &lt;a href=&quot;#section-3.5&quot;&gt;3.5&lt;/a&gt;. If-Range 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Status Code Definitions 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. 304 Not Modified 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. 412 Precondition Failed 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Evaluation 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Precedence 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;. Status Code Registration 
      &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;. Header Field Registration 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. Security Considerations 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. References 
      &lt;a href=&quot;#section-10.1&quot;&gt;10.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-10.2&quot;&gt;10.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;&lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Imported ABNF 
   &lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab940ed5bb0ef7e467d0859d7a9acd1d3a04f4b" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypertext information
   systems.  This document defines range requests and the rules for
   constructing and combining responses to those requests.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7233&quot;&gt;http://www.rfc-editor.org/info/rfc7233&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English. 

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Range Units 
      &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;. Byte Ranges 
      &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;. Other Range Units 
      &lt;a href=&quot;#section-2.3&quot;&gt;2.3&lt;/a&gt;. Accept-Ranges 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Range Requests 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. Range 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. If-Range 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Responses to a Range Request 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. 206 Partial Content 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Content-Range 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Combining Ranges 
      &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;. 416 Range Not Satisfiable 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Range Unit Registry 
           &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Status Code Registration 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Header Field Registration 
      &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;. Internet Media Type Registration 
           &lt;a href=&quot;#section-5.4.1&quot;&gt;5.4.1&lt;/a&gt;. Internet Media Type multipart/byteranges 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. Denial-of-Service Attacks Using Range 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. References 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Internet Media Type multipart/byteranges 
   &lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;&lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. Imported ABNF 
   &lt;a href=&quot;#appendix-D&quot;&gt;Appendix D&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175c5b30db7132745dd409dfe5b4fe160db2ec2b" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypertext information
   systems.  This document defines the semantics of HTTP/1.1 messages,
   as expressed by request methods, request header fields, response
   status codes, and response header fields, along with the payload of
   messages (metadata and body content) and mechanisms for content
   negotiation.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7231&quot;&gt;http://www.rfc-editor.org/info/rfc7231&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English. 

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Resources 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Representations 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. Representation Metadata 
           &lt;a href=&quot;#section-3.1.1&quot;&gt;3.1.1&lt;/a&gt;. Processing Representation Data 
           &lt;a href=&quot;#section-3.1.2&quot;&gt;3.1.2&lt;/a&gt;. Encoding for Compression or Integrity 
           &lt;a href=&quot;#section-3.1.3&quot;&gt;3.1.3&lt;/a&gt;. Audience Language 
           &lt;a href=&quot;#section-3.1.4&quot;&gt;3.1.4&lt;/a&gt;. Identification 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. Representation Data 
      &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;. Payload Semantics 
      &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;. Content Negotiation 
           &lt;a href=&quot;#section-3.4.1&quot;&gt;3.4.1&lt;/a&gt;. Proactive Negotiation 
           &lt;a href=&quot;#section-3.4.2&quot;&gt;3.4.2&lt;/a&gt;. Reactive Negotiation 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Request Methods 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. Overview 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Common Method Properties 
           &lt;a href=&quot;#section-4.2.1&quot;&gt;4.2.1&lt;/a&gt;. Safe Methods 
           &lt;a href=&quot;#section-4.2.2&quot;&gt;4.2.2&lt;/a&gt;. Idempotent Methods 
           &lt;a href=&quot;#section-4.2.3&quot;&gt;4.2.3&lt;/a&gt;. Cacheable Methods 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. Method Definitions 
           &lt;a href=&quot;#section-4.3.1&quot;&gt;4.3.1&lt;/a&gt;. GET 
           &lt;a href=&quot;#section-4.3.2&quot;&gt;4.3.2&lt;/a&gt;. HEAD 
           &lt;a href=&quot;#section-4.3.3&quot;&gt;4.3.3&lt;/a&gt;. POST 
           &lt;a href=&quot;#section-4.3.4&quot;&gt;4.3.4&lt;/a&gt;. PUT 
           &lt;a href=&quot;#section-4.3.5&quot;&gt;4.3.5&lt;/a&gt;. DELETE 
           &lt;a href=&quot;#section-4.3.6&quot;&gt;4.3.6&lt;/a&gt;. CONNECT 
           &lt;a href=&quot;#section-4.3.7&quot;&gt;4.3.7&lt;/a&gt;. OPTIONS 
           &lt;a href=&quot;#section-4.3.8&quot;&gt;4.3.8&lt;/a&gt;. TRACE 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Request Header Fields 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Controls 
           &lt;a href=&quot;#section-5.1.1&quot;&gt;5.1.1&lt;/a&gt;. Expect 
           &lt;a href=&quot;#section-5.1.2&quot;&gt;5.1.2&lt;/a&gt;. Max-Forwards 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Conditionals 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Content Negotiation 
           &lt;a href=&quot;#section-5.3.1&quot;&gt;5.3.1&lt;/a&gt;. Quality Values 
           &lt;a href=&quot;#section-5.3.2&quot;&gt;5.3.2&lt;/a&gt;. Accept 
           &lt;a href=&quot;#section-5.3.3&quot;&gt;5.3.3&lt;/a&gt;. Accept-Charset 
           &lt;a href=&quot;#section-5.3.4&quot;&gt;5.3.4&lt;/a&gt;. Accept-Encoding 
           &lt;a href=&quot;#section-5.3.5&quot;&gt;5.3.5&lt;/a&gt;. Accept-Language 
      &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;. Authentication Credentials 
      &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;. Request Context 
           &lt;a href=&quot;#section-5.5.1&quot;&gt;5.5.1&lt;/a&gt;. From 
           &lt;a href=&quot;#section-5.5.2&quot;&gt;5.5.2&lt;/a&gt;. Referer 
           &lt;a href=&quot;#section-5.5.3&quot;&gt;5.5.3&lt;/a&gt;. User-Agent ......................................... 

   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Response Status Codes 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. Overview of Status Codes 
      &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;. Informational 1xx 
           &lt;a href=&quot;#section-6.2.1&quot;&gt;6.2.1&lt;/a&gt;. 100 Continue 
           &lt;a href=&quot;#section-6.2.2&quot;&gt;6.2.2&lt;/a&gt;. 101 Switching Protocols 
      &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;. Successful 2xx 
           &lt;a href=&quot;#section-6.3.1&quot;&gt;6.3.1&lt;/a&gt;. 200 OK 
           &lt;a href=&quot;#section-6.3.2&quot;&gt;6.3.2&lt;/a&gt;. 201 Created 
           &lt;a href=&quot;#section-6.3.3&quot;&gt;6.3.3&lt;/a&gt;. 202 Accepted 
           &lt;a href=&quot;#section-6.3.4&quot;&gt;6.3.4&lt;/a&gt;. 203 Non-Authoritative Information 
           &lt;a href=&quot;#section-6.3.5&quot;&gt;6.3.5&lt;/a&gt;. 204 No Content 
           &lt;a href=&quot;#section-6.3.6&quot;&gt;6.3.6&lt;/a&gt;. 205 Reset Content 
      &lt;a href=&quot;#section-6.4&quot;&gt;6.4&lt;/a&gt;. Redirection 3xx 
           &lt;a href=&quot;#section-6.4.1&quot;&gt;6.4.1&lt;/a&gt;. 300 Multiple Choices 
           &lt;a href=&quot;#section-6.4.2&quot;&gt;6.4.2&lt;/a&gt;. 301 Moved Permanently 
           &lt;a href=&quot;#section-6.4.3&quot;&gt;6.4.3&lt;/a&gt;. 302 Found 
           &lt;a href=&quot;#section-6.4.4&quot;&gt;6.4.4&lt;/a&gt;. 303 See Other 
           &lt;a href=&quot;#section-6.4.5&quot;&gt;6.4.5&lt;/a&gt;. 305 Use Proxy 
           &lt;a href=&quot;#section-6.4.6&quot;&gt;6.4.6&lt;/a&gt;. 306 (Unused) 
           &lt;a href=&quot;#section-6.4.7&quot;&gt;6.4.7&lt;/a&gt;. 307 Temporary Redirect 
      &lt;a href=&quot;#section-6.5&quot;&gt;6.5&lt;/a&gt;. Client Error 4xx 
           &lt;a href=&quot;#section-6.5.1&quot;&gt;6.5.1&lt;/a&gt;. 400 Bad Request 
           &lt;a href=&quot;#section-6.5.2&quot;&gt;6.5.2&lt;/a&gt;. 402 Payment Required 
           &lt;a href=&quot;#section-6.5.3&quot;&gt;6.5.3&lt;/a&gt;. 403 Forbidden 
           &lt;a href=&quot;#section-6.5.4&quot;&gt;6.5.4&lt;/a&gt;. 404 Not Found 
           &lt;a href=&quot;#section-6.5.5&quot;&gt;6.5.5&lt;/a&gt;. 405 Method Not Allowed 
           &lt;a href=&quot;#section-6.5.6&quot;&gt;6.5.6&lt;/a&gt;. 406 Not Acceptable 
           &lt;a href=&quot;#section-6.5.7&quot;&gt;6.5.7&lt;/a&gt;. 408 Request Timeout 
           &lt;a href=&quot;#section-6.5.8&quot;&gt;6.5.8&lt;/a&gt;. 409 Conflict 
           &lt;a href=&quot;#section-6.5.9&quot;&gt;6.5.9&lt;/a&gt;. 410 Gone 
           &lt;a href=&quot;#section-6.5.10&quot;&gt;6.5.10&lt;/a&gt;. 411 Length Required 
           &lt;a href=&quot;#section-6.5.11&quot;&gt;6.5.11&lt;/a&gt;. 413 Payload Too Large 
           &lt;a href=&quot;#section-6.5.12&quot;&gt;6.5.12&lt;/a&gt;. 414 URI Too Long 
           &lt;a href=&quot;#section-6.5.13&quot;&gt;6.5.13&lt;/a&gt;. 415 Unsupported Media Type 
           &lt;a href=&quot;#section-6.5.14&quot;&gt;6.5.14&lt;/a&gt;. 417 Expectation Failed 
           &lt;a href=&quot;#section-6.5.15&quot;&gt;6.5.15&lt;/a&gt;. 426 Upgrade Required 
      &lt;a href=&quot;#section-6.6&quot;&gt;6.6&lt;/a&gt;. Server Error 5xx 
           &lt;a href=&quot;#section-6.6.1&quot;&gt;6.6.1&lt;/a&gt;. 500 Internal Server Error 
           &lt;a href=&quot;#section-6.6.2&quot;&gt;6.6.2&lt;/a&gt;. 501 Not Implemented 
           &lt;a href=&quot;#section-6.6.3&quot;&gt;6.6.3&lt;/a&gt;. 502 Bad Gateway 
           &lt;a href=&quot;#section-6.6.4&quot;&gt;6.6.4&lt;/a&gt;. 503 Service Unavailable 
           &lt;a href=&quot;#section-6.6.5&quot;&gt;6.6.5&lt;/a&gt;. 504 Gateway Timeout 
           &lt;a href=&quot;#section-6.6.6&quot;&gt;6.6.6&lt;/a&gt;. 505 HTTP Version Not Supported 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. Response Header Fields 
      &lt;a href=&quot;#section-7.1&quot;&gt;7.1&lt;/a&gt;. Control Data 
ed            7.1.1. Origination Date 
           &lt;a href=&quot;#section-7.1.2&quot;&gt;7.1.2&lt;/a&gt;. Location 
           &lt;a href=&quot;#section-7.1.3&quot;&gt;7.1.3&lt;/a&gt;. Retry-After ........................................ 

           &lt;a href=&quot;#section-7.1.4&quot;&gt;7.1.4&lt;/a&gt;. Vary 
      &lt;a href=&quot;#section-7.2&quot;&gt;7.2&lt;/a&gt;. Validator Header Fields 
      &lt;a href=&quot;#section-7.3&quot;&gt;7.3&lt;/a&gt;. Authentication Challenges 
      &lt;a href=&quot;#section-7.4&quot;&gt;7.4&lt;/a&gt;. Response Context 
           &lt;a href=&quot;#section-7.4.1&quot;&gt;7.4.1&lt;/a&gt;. Allow 
           &lt;a href=&quot;#section-7.4.2&quot;&gt;7.4.2&lt;/a&gt;. Server 
   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. Method Registry 
           &lt;a href=&quot;#section-8.1.1&quot;&gt;8.1.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-8.1.2&quot;&gt;8.1.2&lt;/a&gt;. Considerations for New Methods 
           &lt;a href=&quot;#section-8.1.3&quot;&gt;8.1.3&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. Status Code Registry 
           &lt;a href=&quot;#section-8.2.1&quot;&gt;8.2.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-8.2.2&quot;&gt;8.2.2&lt;/a&gt;. Considerations for New Status Codes 
           &lt;a href=&quot;#section-8.2.3&quot;&gt;8.2.3&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;. Header Field Registry 
           &lt;a href=&quot;#section-8.3.1&quot;&gt;8.3.1&lt;/a&gt;. Considerations for New Header Fields 
           &lt;a href=&quot;#section-8.3.2&quot;&gt;8.3.2&lt;/a&gt;. Registrations 
      &lt;a href=&quot;#section-8.4&quot;&gt;8.4&lt;/a&gt;. Content Coding Registry 
           &lt;a href=&quot;#section-8.4.1&quot;&gt;8.4.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-8.4.2&quot;&gt;8.4.2&lt;/a&gt;. Registrations 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;. Attacks Based on File and Path Names 
      &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;. Attacks Based on Command, Code, or Query Injection 
      &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt;. Disclosure of Personal Information 
      &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt;. Disclosure of Sensitive Information in URIs 
      &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt;. Disclosure of Fragment after Redirects 
      &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt;. Disclosure of Product Information 
      &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt;. Browser Fingerprinting 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;. References 
      &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. Differences between HTTP and MIME 
      &lt;a href=&quot;#appendix-A.1&quot;&gt;A.1&lt;/a&gt;. MIME-Version 
      &lt;a href=&quot;#appendix-A.2&quot;&gt;A.2&lt;/a&gt;. Conversion to Canonical Form 
      &lt;a href=&quot;#appendix-A.3&quot;&gt;A.3&lt;/a&gt;. Conversion of Date Formats 
      &lt;a href=&quot;#appendix-A.4&quot;&gt;A.4&lt;/a&gt;. Conversion of Content-Encoding 
      &lt;a href=&quot;#appendix-A.5&quot;&gt;A.5&lt;/a&gt;. Conversion of Content-Transfer-Encoding 
      &lt;a href=&quot;#appendix-A.6&quot;&gt;A.6&lt;/a&gt;. MHTML and Line Length Limitations 
   &lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;&lt;a href=&quot;#appendix-C&quot;&gt;Appendix C&lt;/a&gt;. Imported ABNF 
   &lt;a href=&quot;#appendix-D&quot;&gt;Appendix D&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40af3a9e68d967dfc1ebb5c1482c0bb1ee2a2de4" translate="yes" xml:space="preserve">
          <source>Abstract

   The Hypertext Transfer Protocol (HTTP) is a stateless application-
   level protocol for distributed, collaborative, hypertext information
   systems.  This document provides an overview of HTTP architecture and
   its associated terminology, defines the &quot;http&quot; and &quot;https&quot; Uniform
   Resource Identifier (URI) schemes, defines the HTTP/1.1 message
   syntax and parsing requirements, and describes related security
   concerns for implementations.

Status of This Memo

   This is an Internet Standards Track document.

   This document is a product of the Internet Engineering Task Force
   (IETF).  It represents the consensus of the IETF community.  It has
   received public review and has been approved for publication by the
   Internet Engineering Steering Group (IESG).  Further information on
   Internet Standards is available in &lt;a href=&quot;https://tools.ietf.org/html/rfc5741#section-2&quot;&gt;Section&amp;nbsp;2 of RFC 5741&lt;/a&gt;.

   Information about the current status of this document, any errata,
   and how to provide feedback on it may be obtained at
   &lt;a href=&quot;http://www.rfc-editor.org/info/rfc7230&quot;&gt;http://www.rfc-editor.org/info/rfc7230&lt;/a&gt;. 

Copyright Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to &lt;a href=&quot;https://tools.ietf.org/html/bcp78&quot;&gt;BCP 78&lt;/a&gt; and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (&lt;a href=&quot;http://trustee.ietf.org/license-info&quot;&gt;http://trustee.ietf.org/license-info&lt;/a&gt;) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

   This document may contain material from IETF Documents or IETF
   Contributions published or made publicly available before November
   10, 2008.  The person(s) controlling the copyright in some of this
   material may not have granted the IETF Trust the right to allow
   modifications of such material outside the IETF Standards Process.
   Without obtaining an adequate license from the person(s) controlling
   the copyright in such materials, this document may not be modified
   outside the IETF Standards Process, and derivative works of it may
   not be created outside the IETF Standards Process, except to format
   it for publication as an RFC or to translate it into languages other
   than English.

Table of Contents

   &lt;a href=&quot;#section-1&quot;&gt;1&lt;/a&gt;. Introduction 
      &lt;a href=&quot;#section-1.1&quot;&gt;1.1&lt;/a&gt;. Requirements Notation 
      &lt;a href=&quot;#section-1.2&quot;&gt;1.2&lt;/a&gt;. Syntax Notation 
   &lt;a href=&quot;#section-2&quot;&gt;2&lt;/a&gt;. Architecture 
      &lt;a href=&quot;#section-2.1&quot;&gt;2.1&lt;/a&gt;. Client/Server Messaging 
      &lt;a href=&quot;#section-2.2&quot;&gt;2.2&lt;/a&gt;. Implementation Diversity 
      &lt;a href=&quot;#section-2.3&quot;&gt;2.3&lt;/a&gt;. Intermediaries 
      &lt;a href=&quot;#section-2.4&quot;&gt;2.4&lt;/a&gt;. Caches 
      &lt;a href=&quot;#section-2.5&quot;&gt;2.5&lt;/a&gt;. Conformance and Error Handling 
      &lt;a href=&quot;#section-2.6&quot;&gt;2.6&lt;/a&gt;. Protocol Versioning 
      &lt;a href=&quot;#section-2.7&quot;&gt;2.7&lt;/a&gt;. Uniform Resource Identifiers 
           &lt;a href=&quot;#section-2.7.1&quot;&gt;2.7.1&lt;/a&gt;. http URI Scheme 
           &lt;a href=&quot;#section-2.7.2&quot;&gt;2.7.2&lt;/a&gt;. https URI Scheme 
           &lt;a href=&quot;#section-2.7.3&quot;&gt;2.7.3&lt;/a&gt;. http and https URI Normalization and Comparison 
   &lt;a href=&quot;#section-3&quot;&gt;3&lt;/a&gt;. Message Format 
      &lt;a href=&quot;#section-3.1&quot;&gt;3.1&lt;/a&gt;. Start Line 
           &lt;a href=&quot;#section-3.1.1&quot;&gt;3.1.1&lt;/a&gt;. Request Line 
           &lt;a href=&quot;#section-3.1.2&quot;&gt;3.1.2&lt;/a&gt;. Status Line 
      &lt;a href=&quot;#section-3.2&quot;&gt;3.2&lt;/a&gt;. Header Fields ............................................. 

           &lt;a href=&quot;#section-3.2.1&quot;&gt;3.2.1&lt;/a&gt;. Field Extensibility 
           &lt;a href=&quot;#section-3.2.2&quot;&gt;3.2.2&lt;/a&gt;. Field Order 
           &lt;a href=&quot;#section-3.2.3&quot;&gt;3.2.3&lt;/a&gt;. Whitespace 
           &lt;a href=&quot;#section-3.2.4&quot;&gt;3.2.4&lt;/a&gt;. Field Parsing 
           &lt;a href=&quot;#section-3.2.5&quot;&gt;3.2.5&lt;/a&gt;. Field Limits 
           &lt;a href=&quot;#section-3.2.6&quot;&gt;3.2.6&lt;/a&gt;. Field Value Components 
      &lt;a href=&quot;#section-3.3&quot;&gt;3.3&lt;/a&gt;. Message Body 
           &lt;a href=&quot;#section-3.3.1&quot;&gt;3.3.1&lt;/a&gt;. Transfer-Encoding 
           &lt;a href=&quot;#section-3.3.2&quot;&gt;3.3.2&lt;/a&gt;. Content-Length 
           &lt;a href=&quot;#section-3.3.3&quot;&gt;3.3.3&lt;/a&gt;. Message Body Length 
      &lt;a href=&quot;#section-3.4&quot;&gt;3.4&lt;/a&gt;. Handling Incomplete Messages 
      &lt;a href=&quot;#section-3.5&quot;&gt;3.5&lt;/a&gt;. Message Parsing Robustness 
   &lt;a href=&quot;#section-4&quot;&gt;4&lt;/a&gt;. Transfer Codings 
      &lt;a href=&quot;#section-4.1&quot;&gt;4.1&lt;/a&gt;. Chunked Transfer Coding 
           &lt;a href=&quot;#section-4.1.1&quot;&gt;4.1.1&lt;/a&gt;. Chunk Extensions 
           &lt;a href=&quot;#section-4.1.2&quot;&gt;4.1.2&lt;/a&gt;. Chunked Trailer Part 
           &lt;a href=&quot;#section-4.1.3&quot;&gt;4.1.3&lt;/a&gt;. Decoding Chunked 
      &lt;a href=&quot;#section-4.2&quot;&gt;4.2&lt;/a&gt;. Compression Codings 
           &lt;a href=&quot;#section-4.2.1&quot;&gt;4.2.1&lt;/a&gt;. Compress Coding 
           &lt;a href=&quot;#section-4.2.2&quot;&gt;4.2.2&lt;/a&gt;. Deflate Coding 
           &lt;a href=&quot;#section-4.2.3&quot;&gt;4.2.3&lt;/a&gt;. Gzip Coding 
      &lt;a href=&quot;#section-4.3&quot;&gt;4.3&lt;/a&gt;. TE 
      &lt;a href=&quot;#section-4.4&quot;&gt;4.4&lt;/a&gt;. Trailer 
   &lt;a href=&quot;#section-5&quot;&gt;5&lt;/a&gt;. Message Routing 
      &lt;a href=&quot;#section-5.1&quot;&gt;5.1&lt;/a&gt;. Identifying a Target Resource 
      &lt;a href=&quot;#section-5.2&quot;&gt;5.2&lt;/a&gt;. Connecting Inbound 
      &lt;a href=&quot;#section-5.3&quot;&gt;5.3&lt;/a&gt;. Request Target 
           &lt;a href=&quot;#section-5.3.1&quot;&gt;5.3.1&lt;/a&gt;. origin-form 
           &lt;a href=&quot;#section-5.3.2&quot;&gt;5.3.2&lt;/a&gt;. absolute-form 
           &lt;a href=&quot;#section-5.3.3&quot;&gt;5.3.3&lt;/a&gt;. authority-form 
           &lt;a href=&quot;#section-5.3.4&quot;&gt;5.3.4&lt;/a&gt;. asterisk-form 
      &lt;a href=&quot;#section-5.4&quot;&gt;5.4&lt;/a&gt;. Host 
      &lt;a href=&quot;#section-5.5&quot;&gt;5.5&lt;/a&gt;. Effective Request URI 
      &lt;a href=&quot;#section-5.6&quot;&gt;5.6&lt;/a&gt;. Associating a Response to a Request 
      &lt;a href=&quot;#section-5.7&quot;&gt;5.7&lt;/a&gt;. Message Forwarding 
           &lt;a href=&quot;#section-5.7.1&quot;&gt;5.7.1&lt;/a&gt;. Via 
           &lt;a href=&quot;#section-5.7.2&quot;&gt;5.7.2&lt;/a&gt;. Transformations 
   &lt;a href=&quot;#section-6&quot;&gt;6&lt;/a&gt;. Connection Management 
      &lt;a href=&quot;#section-6.1&quot;&gt;6.1&lt;/a&gt;. Connection 
      &lt;a href=&quot;#section-6.2&quot;&gt;6.2&lt;/a&gt;. Establishment 
      &lt;a href=&quot;#section-6.3&quot;&gt;6.3&lt;/a&gt;. Persistence 
           &lt;a href=&quot;#section-6.3.1&quot;&gt;6.3.1&lt;/a&gt;. Retrying Requests 
           &lt;a href=&quot;#section-6.3.2&quot;&gt;6.3.2&lt;/a&gt;. Pipelining 
      &lt;a href=&quot;#section-6.4&quot;&gt;6.4&lt;/a&gt;. Concurrency 
      &lt;a href=&quot;#section-6.5&quot;&gt;6.5&lt;/a&gt;. Failures and Timeouts 
      &lt;a href=&quot;#section-6.6&quot;&gt;6.6&lt;/a&gt;. Tear-down 
      &lt;a href=&quot;#section-6.7&quot;&gt;6.7&lt;/a&gt;. Upgrade 
   &lt;a href=&quot;#section-7&quot;&gt;7&lt;/a&gt;. ABNF List Extension: #rule ..................................... 

   &lt;a href=&quot;#section-8&quot;&gt;8&lt;/a&gt;. IANA Considerations 
      &lt;a href=&quot;#section-8.1&quot;&gt;8.1&lt;/a&gt;. Header Field Registration 
      &lt;a href=&quot;#section-8.2&quot;&gt;8.2&lt;/a&gt;. URI Scheme Registration 
      &lt;a href=&quot;#section-8.3&quot;&gt;8.3&lt;/a&gt;. Internet Media Type Registration 
           &lt;a href=&quot;#section-8.3.1&quot;&gt;8.3.1&lt;/a&gt;. Internet Media Type message/http 
           &lt;a href=&quot;#section-8.3.2&quot;&gt;8.3.2&lt;/a&gt;. Internet Media Type application/http 
      &lt;a href=&quot;#section-8.4&quot;&gt;8.4&lt;/a&gt;. Transfer Coding Registry 
           &lt;a href=&quot;#section-8.4.1&quot;&gt;8.4.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-8.4.2&quot;&gt;8.4.2&lt;/a&gt;. Registration 
      &lt;a href=&quot;#section-8.5&quot;&gt;8.5&lt;/a&gt;. Content Coding Registration 
      &lt;a href=&quot;#section-8.6&quot;&gt;8.6&lt;/a&gt;. Upgrade Token Registry 
           &lt;a href=&quot;#section-8.6.1&quot;&gt;8.6.1&lt;/a&gt;. Procedure 
           &lt;a href=&quot;#section-8.6.2&quot;&gt;8.6.2&lt;/a&gt;. Upgrade Token Registration 
   &lt;a href=&quot;#section-9&quot;&gt;9&lt;/a&gt;. Security Considerations 
      &lt;a href=&quot;#section-9.1&quot;&gt;9.1&lt;/a&gt;. Establishing Authority 
      &lt;a href=&quot;#section-9.2&quot;&gt;9.2&lt;/a&gt;. Risks of Intermediaries 
      &lt;a href=&quot;#section-9.3&quot;&gt;9.3&lt;/a&gt;. Attacks via Protocol Element Length 
      &lt;a href=&quot;#section-9.4&quot;&gt;9.4&lt;/a&gt;. Response Splitting 
      &lt;a href=&quot;#section-9.5&quot;&gt;9.5&lt;/a&gt;. Request Smuggling 
      &lt;a href=&quot;#section-9.6&quot;&gt;9.6&lt;/a&gt;. Message Integrity 
      &lt;a href=&quot;#section-9.7&quot;&gt;9.7&lt;/a&gt;. Message Confidentiality 
      &lt;a href=&quot;#section-9.8&quot;&gt;9.8&lt;/a&gt;. Privacy of Server Log Information 
   &lt;a href=&quot;#section-10&quot;&gt;10&lt;/a&gt;. Acknowledgments 
   &lt;a href=&quot;#section-11&quot;&gt;11&lt;/a&gt;. References 
      &lt;a href=&quot;#section-11.1&quot;&gt;11.1&lt;/a&gt;. Normative References 
      &lt;a href=&quot;#section-11.2&quot;&gt;11.2&lt;/a&gt;. Informative References 
   &lt;a href=&quot;#appendix-A&quot;&gt;Appendix A&lt;/a&gt;. HTTP Version History 
      &lt;a href=&quot;#appendix-A.1&quot;&gt;A.1&lt;/a&gt;. Changes from HTTP/1.0  
           &lt;a href=&quot;#appendix-A.1.1&quot;&gt;A.1.1&lt;/a&gt;.  Multihomed Web Servers 
           &lt;a href=&quot;#appendix-A.1.2&quot;&gt;A.1.2&lt;/a&gt;.  Keep-Alive Connections 
           &lt;a href=&quot;#appendix-A.1.3&quot;&gt;A.1.3&lt;/a&gt;.  Introduction of Transfer-Encoding 
      &lt;a href=&quot;#appendix-A.2&quot;&gt;A.2&lt;/a&gt;.  Changes from &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot;&gt;RFC 2616&lt;/a&gt;&lt;a href=&quot;#appendix-B&quot;&gt;Appendix B&lt;/a&gt;. Collected ABNF 
   Index .............................................................</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088fbdf0be09f2b57f797db06f694f1729caf35d" translate="yes" xml:space="preserve">
          <source>Accelerometer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb54db510a92908a5a4df79fc1ad1eae8df50ec3" translate="yes" xml:space="preserve">
          <source>Accept</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fbce3fda446208ef2acea7678d689afb9f87e9" translate="yes" xml:space="preserve">
          <source>Accept (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcc20ef513587031d3a72165f89c3586e57c7de" translate="yes" xml:space="preserve">
          <source>Accept (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7eb8a9e22a94e3c88a689612ab6a2a6f4c8e4f" translate="yes" xml:space="preserve">
          <source>Accept request-headers can reveal information about the user to all
   servers which are accessed. The Accept-Language header in particular
   can reveal information the user would consider to be of a private
   nature, because the understanding of particular languages is often 

   strongly correlated to the membership of a particular ethnic group.
   User agents which offer the option to configure the contents of an
   Accept-Language header to be sent in every request are strongly
   encouraged to let the configuration process include a message which
   makes the user aware of the loss of privacy involved.

   An approach that limits the loss of privacy would be for a user agent
   to omit the sending of Accept-Language headers by default, and to ask
   the user whether or not to start sending Accept-Language headers to a
   server if it detects, by looking for any Vary response-header fields
   generated by the server, that such sending could improve the quality
   of service.

   Elaborate user-customized accept header fields sent in every request,
   in particular if these include quality values, can be used by servers
   as relatively reliable and long-lived user identifiers. Such user
   identifiers would allow content providers to do click-trail tracking,
   and would allow collaborating content providers to match cross-server
   click-trails or form submissions of individual users. Note that for
   many users not behind a proxy, the network address of the host
   running the user agent will also serve as a long-lived user
   identifier. In environments where proxies are used to enhance
   privacy, user agents ought to be conservative in offering accept
   header configuration options to end users. As an extreme privacy
   measure, proxies could filter the accept headers in relayed requests.
   General purpose user agents which provide a high degree of header
   configurability SHOULD warn users about the loss of privacy which can
   be involved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf67685a1d81108695f45293bf84f12a0c9cb46" translate="yes" xml:space="preserve">
          <source>Accept-Charset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb70f6fb0b92415ec54f2514f66fef0477c9d03" translate="yes" xml:space="preserve">
          <source>Accept-Charset (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46e62b664d44c5c0ad50b6fbfcf9b7ffd34c78f" translate="yes" xml:space="preserve">
          <source>Accept-Charset (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177429157553dbb71c8bab30aac57a62d268cc1c" translate="yes" xml:space="preserve">
          <source>Accept-Encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80413a74e8c6a5ee7628707c28264f5fc57f11c" translate="yes" xml:space="preserve">
          <source>Accept-Encoding (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76f042c2a36b8346c52df9cd05152e174c68474" translate="yes" xml:space="preserve">
          <source>Accept-Encoding (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58385b3fba0471cb7c233041f9d15c4b6ccf18fe" translate="yes" xml:space="preserve">
          <source>Accept-Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a194a37a0fab016d1dac628a2d4a8bdc2847fc0" translate="yes" xml:space="preserve">
          <source>Accept-Language (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5d4a129ec209d245a79d6c3f2edfdd87668589" translate="yes" xml:space="preserve">
          <source>Accept-Language (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02910fe72aef1e79d1ce552b0125fe9d6e734463" translate="yes" xml:space="preserve">
          <source>Accept-Ranges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e716e0e0b978d47436d93b491a16aeaac22f9e5" translate="yes" xml:space="preserve">
          <source>Accept-Ranges (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764a440a698a17aa1dc774708163b405c87ff4bd" translate="yes" xml:space="preserve">
          <source>Accept-Ranges (RFC 7233)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc19e40eb87eca9ddb4a92e3a97c67ee6143d7d5" translate="yes" xml:space="preserve">
          <source>Access Authentication (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a77d7667269bf6db4712e4162088af68dbec9fc" translate="yes" xml:space="preserve">
          <source>Access Authentication Framework (RFC 7235)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22573ef8df23292ff057255b9a28b1bea0f5bec" translate="yes" xml:space="preserve">
          <source>Access control is a security technique that can be used to regulate who or what can view or use resources in a computing environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81413e1c5136d3c3d54929c9e2b0c8e7144bc04" translate="yes" xml:space="preserve">
          <source>Access control systems perform &lt;a href=&quot;http://searchsoftwarequality.techtarget.com/definition/authorization&quot;&gt;authorization&lt;/a&gt; identification, &lt;a href=&quot;http://searchsecurity.techtarget.com/definition/authentication&quot;&gt;authentication&lt;/a&gt;, access approval, and accountability of entities through login credentials including &lt;a href=&quot;http://searchsecurity.techtarget.com/definition/password&quot;&gt;passwords&lt;/a&gt;, personal identification numbers (PINs), &lt;a href=&quot;http://searchsecurity.techtarget.com/definition/biometrics&quot;&gt;biometric&lt;/a&gt; scans, and physical or electronic keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d810350110ab0e795aa4da0b30363f0a9f966603" translate="yes" xml:space="preserve">
          <source>Access forbidden</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c707124192246c159bfaa608d8114812340fa4" translate="yes" xml:space="preserve">
          <source>Access using credentials in the URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fbec75ee860af401feca052767eb8d2119fc55" translate="yes" xml:space="preserve">
          <source>Access-Control-Allow-Credentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d66b46792a018ad2020282cc416e9ee8f06f861" translate="yes" xml:space="preserve">
          <source>Access-Control-Allow-Headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2a0c7e0ef78c7c6bd13f7ae4ec973cd75d4f40" translate="yes" xml:space="preserve">
          <source>Access-Control-Allow-Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f2dafa374f61f543d5c6c14d4bdbb5b6456db0" translate="yes" xml:space="preserve">
          <source>Access-Control-Allow-Origin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313ef5554833c1d023f8841fd3ca07c129f4dabb" translate="yes" xml:space="preserve">
          <source>Access-Control-Expose-Headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4196525184a54a54617a46e60664f7d0e4576b20" translate="yes" xml:space="preserve">
          <source>Access-Control-Max-Age</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e900248599e307979b6e63f1848ccf43a39cde" translate="yes" xml:space="preserve">
          <source>Access-Control-Request-Headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95705e26c9fe99470c7ef1269a9e4c14d288b849" translate="yes" xml:space="preserve">
          <source>Access-Control-Request-Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e4b36adfd07ceb756a5d56381f00df21670fde" translate="yes" xml:space="preserve">
          <source>Add Android version to Fennec UA String (bug 1169772)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3858ee0b1cf51a7d707eae259a28585eabdbec88" translate="yes" xml:space="preserve">
          <source>Add the following line to the Web.config file to send the &lt;code&gt;Public-Key-Pins&lt;/code&gt; header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87343a4ec44d6166bd6139504ce40cd88c57d49d" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;frame-src&lt;/code&gt;, &lt;code&gt;manifest-src&lt;/code&gt; and &lt;code&gt;worker-src&lt;/code&gt; as defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760223db38df00fd781c0887ee7e1f480b28b1c4" translate="yes" xml:space="preserve">
          <source>Added by a proxy if it applies any transformation to the representation, such as changing the content-coding, media-type or the like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6aba7e1c260b1e97306b61055dc5586e639243" translate="yes" xml:space="preserve">
          <source>Added by proxies, both forward and reverse proxies, and can appear in the request headers and the response headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b68b9b3bb4cdd89081228b70979f9dc4741b29" translate="yes" xml:space="preserve">
          <source>Adding a line similar to the following to your webserver's config will enable HPKP on your Apache. This requires &lt;code&gt;mod_headers&lt;/code&gt; enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd6d658aa94b5d065ce37a8745178e4946d3138" translate="yes" xml:space="preserve">
          <source>Adding a new user through a signup modal;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b33cfd7eec93815656866755a3c74843234ba55" translate="yes" xml:space="preserve">
          <source>Adding the following line and inserting the appropriate &lt;code&gt;pin-sha256=&quot;...&quot;&lt;/code&gt; values will enable HPKP on your nginx. This requires the &lt;code&gt;ngx_http_headers_module.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4beeace5c1da3ea1621f1d80ef923b85ae8c3d" translate="yes" xml:space="preserve">
          <source>Additional HTTP Status Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1967bb490854e6f28ca3226c89aac1f8fefbf865" translate="yes" xml:space="preserve">
          <source>Additional cache control mechanisms have been introduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca7b9663ad28e00bad95a214ec91b0b6850abe7" translate="yes" xml:space="preserve">
          <source>Addresses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995ce128c900d1dd4799f4d03800bc30f8a436b1" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;base-uri&lt;/code&gt;, &lt;code&gt;child-src&lt;/code&gt;, &lt;code&gt;form-action&lt;/code&gt;, &lt;code&gt;frame-ancestors&lt;/code&gt;, &lt;code&gt;plugin-types&lt;/code&gt;, &lt;code&gt;referrer&lt;/code&gt;, and &lt;code&gt;report-uri&lt;/code&gt;. Deprecates &lt;code&gt;frame-src&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdd0faf0766b83c157ed1bedec26ec4f6e1bf8e" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;block-all-mixed-content&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698c1f11ceb6668338bb9d2d17bb8f430c4a92aa" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;disown-opener&lt;/code&gt;, &lt;code&gt;manifest-src&lt;/code&gt;, &lt;code&gt;navigate-to&lt;/code&gt;, &lt;code&gt;report-to&lt;/code&gt;, &lt;code&gt;strict-dynamic&lt;/code&gt;, &lt;code&gt;worker-src&lt;/code&gt;. Undeprecates &lt;code&gt;frame-src&lt;/code&gt;. Deprecates &lt;code&gt;report-uri&lt;/code&gt; in favor if &lt;code&gt;report-to&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3f4d3e4268a9bb85346c045c680766b2c7af4b" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;require-sri-for&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc23a4d8adf978e596103328ec8522255dce7f76" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;upgrade-insecure-requests&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455a3de4efcb11c6f35e14a41277f553dccf6ef8" translate="yes" xml:space="preserve">
          <source>Adobe &lt;a href=&quot;https://acrobat.adobe.com/us/en/why-adobe/about-adobe-pdf.html&quot;&gt;Portable Document Format&lt;/a&gt; (PDF)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705cc20005888890de14a5894736ddb464edf2fe" translate="yes" xml:space="preserve">
          <source>Advice on using a www-prefixed domain or not, this article explains the consequences of the choice as well as how to make it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733cfd6083d3dd3e2cb74c180509e4b0f99a5baa" translate="yes" xml:space="preserve">
          <source>Advisory text describing the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bf82aa792195fb9abd5a33a491d7ed6007e8d4" translate="yes" xml:space="preserve">
          <source>After a successful COPY invocation, all dead properties on the source
   resource SHOULD be duplicated on the destination resource.  Live
   properties described in this document SHOULD be duplicated as
   identically behaving live properties at the destination resource, but
   not necessarily with the same values.  Servers SHOULD NOT convert
   live properties into dead properties on the destination resource,
   because clients may then draw incorrect conclusions about the state
   or functionality of a resource.  Note that some live properties are
   defined such that the absence of the property has a specific meaning
   (e.g., a flag with one meaning if present, and the opposite if
   absent), and in these cases, a successful COPY might result in the
   property being reported as &quot;Not Found&quot; in subsequent requests.

   When the destination is an unmapped URL, a COPY operation creates a
   new resource much like a PUT operation does.  Live properties that
   are related to resource creation (such as DAV:creationdate) should
   have their values set accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14481714e36484442aceaedae4c2cd14105aca4" translate="yes" xml:space="preserve">
          <source>After receiving and interpreting a request message, a server responds
   with an HTTP response message.

       Response      = Status-Line               ; &lt;a href=&quot;#section-6.1&quot;&gt;Section 6.1&lt;/a&gt;
                       *(( general-header        ; &lt;a href=&quot;#section-4.5&quot;&gt;Section 4.5&lt;/a&gt;
                        | response-header        ; &lt;a href=&quot;#section-6.2&quot;&gt;Section 6.2&lt;/a&gt;
                        | entity-header ) CRLF)  ; &lt;a href=&quot;#section-7.1&quot;&gt;Section 7.1&lt;/a&gt;
                       CRLF
                       [ message-body ]          ; &lt;a href=&quot;#section-7.2&quot;&gt;Section 7.2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef923924b84276758cd6220f7c2e0df0c688265" translate="yes" xml:space="preserve">
          <source>After the HTTP/1.1 header and the blank line that indicates the end of the header, the server will immediately include the server connection preface, starting with a &lt;code&gt;SETTINGS&lt;/code&gt; frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6a047137bbfac123a894e86187dc3649969994" translate="yes" xml:space="preserve">
          <source>After the connected agent has sent its request, the web server processes it, and ultimately returns a response. Similar to a client request, a server response is formed of text directives, separated by CRLF, though divided into three blocks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b7ae2775e7780938b8a0d7dbb2cdbf0eb3bc68" translate="yes" xml:space="preserve">
          <source>Again, use of the DNS server in the above can be minimized by adding redundant rules in the beginning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9f1ff32120d8b893c1ded522d49590353b29a6" translate="yes" xml:space="preserve">
          <source>Age</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c793215f8562190a36c5bf36bf9466ad683e17" translate="yes" xml:space="preserve">
          <source>Age (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b4c54419afac8726deafd7435dab4615c9a68e" translate="yes" xml:space="preserve">
          <source>Age (RFC 7234)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f86c4884cf6979487407f1bfb260fe6dc008d2" translate="yes" xml:space="preserve">
          <source>Agent-driven negotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e63706ff054e31f88909b903c540eb9fab7bf0" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content&quot;&gt;mixed content&lt;/a&gt; resource requests are blocked, including both active and passive mixed content. This also applies to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; documents, ensuring the entire page is mixed content free.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a928697259543059b585ea4af2c89236a67a72" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;text&lt;/code&gt; JavaScript types have been deprecated by &lt;a href=&quot;https://tools.ietf.org/html/rfc4329&quot;&gt;RFC 4329&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f2895fb52823cefc3e500436bf5266b5f12474" translate="yes" xml:space="preserve">
          <source>All DAV headers follow the same basic formatting rules as HTTP
   headers.  This includes rules like line continuation and how to
   combine (or separate) multiple instances of the same header using
   commas.

   WebDAV adds two new conditional headers to the set defined in HTTP:
   the If and Overwrite headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb7c13dc794c86beb6b5eb454b43a1af1effca0" translate="yes" xml:space="preserve">
          <source>All HTML content should be served with this type. Alternative MIME types for XHTML (like &lt;code&gt;application/xhtml+xml&lt;/code&gt;) are mostly useless nowadays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02d32fb5d5640d2efd7ae1d94e1efc7987916ea" translate="yes" xml:space="preserve">
          <source>All HTTP/1.1 messages consist of a start-line followed by a sequence
   of octets in a format similar to the Internet Message Format
   [&lt;a href=&quot;https://tools.ietf.org/html/rfc5322&quot;&gt;RFC5322&lt;/a&gt;]: zero or more header fields (collectively referred to as
   the &quot;headers&quot; or the &quot;header section&quot;), an empty line indicating the
   end of the header section, and an optional message body.

     HTTP-message   = start-line
                      *( header-field CRLF )
                      CRLF
                      [ message-body ] 

   The normal procedure for parsing an HTTP message is to read the
   start-line into a structure, read each header field into a hash table
   by field name until the empty line, and then use the parsed data to
   determine if a message body is expected.  If a message body has been
   indicated, then it is read as a stream until an amount of octets
   equal to the message body length is read or the connection is closed.

   A recipient MUST parse an HTTP message as a sequence of octets in an
   encoding that is a superset of US-ASCII [&lt;a href=&quot;#ref-USASCII&quot;&gt;USASCII&lt;/a&gt;].  Parsing an HTTP
   message as a stream of Unicode characters, without regard for the
   specific encoding, creates security vulnerabilities due to the
   varying ways that string processing libraries handle invalid
   multibyte character sequences that contain the octet LF (%x0A).
   String-based parsers can only be safely used within protocol elements
   after the element has been extracted from the message, such as within
   a header field-value after message parsing has delineated the
   individual fields.

   An HTTP message can be parsed as a stream for incremental processing
   or forwarding downstream.  However, recipients cannot rely on
   incremental delivery of partial messages, since some implementations
   will buffer or delay message forwarding for the sake of network
   efficiency, security checks, or payload transformations.

   A sender MUST NOT send whitespace between the start-line and the
   first header field.  A recipient that receives whitespace between the
   start-line and the first header field MUST either reject the message
   as invalid or consume each whitespace-preceded line without further
   processing of it (i.e., ignore the entire line, along with any
   subsequent lines preceded by whitespace, until a properly formed
   header field is received or the header section is terminated).

   The presence of such whitespace in a request might be an attempt to
   trick a server into ignoring that field or processing the line after
   it as a new request, either of which might result in a security
   vulnerability if other implementations within the request chain
   interpret the same message differently.  Likewise, the presence of
   such whitespace in a response might be ignored by some clients or
   cause others to cease parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6d70014fb3882dcf60f571eb265b4ead440816" translate="yes" xml:space="preserve">
          <source>All conditional headers try to check if the resource stored on the server matches a specific version. To achieve this, the conditional requests need to indicate the version of the resource. As comparing the whole resource byte to byte is impracticable, and not always what is wanted, the request transmits a value describing the version. Such values are called &lt;em&gt;validators&lt;/em&gt;, and are of two kinds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86032829f23613e0e2c883c0ed233cfc98f34429" translate="yes" xml:space="preserve">
          <source>All documents in the &lt;code&gt;images/&lt;/code&gt; folder will be redirected to a different domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2556a3f65b2016a6f4465c2cba6687d885b96f50" translate="yes" xml:space="preserve">
          <source>All hosts which aren't fully qualified, or the ones that are in local domain, will be connected to directly. Everything else will go through w3proxy:8080. If the proxy goes down, connections become direct automatically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7d8118d9f750540c3d405da3bd825af374930a" translate="yes" xml:space="preserve">
          <source>All iframes inherit the policy of their parent page. If the iframe has an &lt;code&gt;allow&lt;/code&gt; attribute, the policies of the parent page and the &lt;code&gt;allow&lt;/code&gt; attribute are combined, using the most restrictive subset. For an iframe to have a feature enabled, the origin must be in the allowlist for both the parent page and the allow attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f1bc03c603d449cb2f82a18478f537735beda9" translate="yes" xml:space="preserve">
          <source>All local accesses are desired to be direct. All proxy servers run on the port 8080 (they don't need to). Note how strings can be concatenated with the &lt;strong&gt;+&lt;/strong&gt; operator in JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f43d7619bd14afa48b80f4f69322e3d75a1bed" translate="yes" xml:space="preserve">
          <source>All methods that might be expected to cause modifications to the
   origin server's resources MUST be written through to the origin
   server. This currently includes all methods except for GET and HEAD.
   A cache MUST NOT reply to such a request from a client before having
   transmitted the request to the inbound server, and having received a
   corresponding response from the inbound server. This does not prevent
   a proxy cache from sending a 100 (Continue) response before the
   inbound server has sent its final reply.

   The alternative (known as &quot;write-back&quot; or &quot;copy-back&quot; caching) is not
   allowed in HTTP/1.1, due to the difficulty of providing consistent
   updates and the problems arising from server, cache, or network
   failure prior to write-back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a76bce8ed4b24dc82bafad92dd9740f7195e9c" translate="yes" xml:space="preserve">
          <source>All modern browsers and servers do support it and the only thing to negotiate is the compression algorithm to use. These algorithm are optimized for text. In the 1990s, compression technology was advancing at a rapid pace and numerous successive algorithms have been added to the set of possible choices. Nowadays, only two are relevant: &lt;code&gt;gzip&lt;/code&gt;, the most common one, and &lt;code&gt;br&lt;/code&gt; the new challenger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efabba7ae41c2653d1f20ea222b6e6ae7445249" translate="yes" xml:space="preserve">
          <source>All of the mechanisms specified in this document are described in
   both prose and an augmented Backus-Naur Form (BNF) similar to that
   used by &lt;a href=&quot;https://tools.ietf.org/html/rfc822&quot;&gt;RFC 822&lt;/a&gt; [&lt;a href=&quot;#ref-9&quot;&gt;9&lt;/a&gt;]. Implementors will need to be familiar with the
   notation in order to understand this specification. The augmented BNF
   includes the following constructs:

   name = definition
      The name of a rule is simply the name itself (without any
      enclosing &quot;&amp;lt;&quot; and &quot;&amp;gt;&quot;) and is separated from its definition by the
      equal &quot;=&quot; character. White space is only significant in that
      indentation of continuation lines is used to indicate a rule
      definition that spans more than one line. Certain basic rules are
      in uppercase, such as SP, LWS, HT, CRLF, DIGIT, ALPHA, etc. Angle
      brackets are used within definitions whenever their presence will
      facilitate discerning the use of rule names.

   &quot;literal&quot;
      Quotation marks surround literal text. Unless stated otherwise,
      the text is case-insensitive.

   rule1 | rule2
      Elements separated by a bar (&quot;|&quot;) are alternatives, e.g., &quot;yes |
      no&quot; will accept yes or no.

   (rule1 rule2)
      Elements enclosed in parentheses are treated as a single element.
      Thus, &quot;(elem (foo | bar) elem)&quot; allows the token sequences &quot;elem
      foo elem&quot; and &quot;elem bar elem&quot;.

   *rule
      The character &quot;*&quot; preceding an element indicates repetition. The
      full form is &quot;&amp;lt;n&amp;gt;*&amp;lt;m&amp;gt;element&quot; indicating at least &amp;lt;n&amp;gt; and at most
      &amp;lt;m&amp;gt; occurrences of element. Default values are 0 and infinity so
      that &quot;*(element)&quot; allows any number, including zero; &quot;1*element&quot;
      requires at least one; and &quot;1*2element&quot; allows one or two.

   [&lt;a id=&quot;ref-rule&quot; name=&quot;ref-rule&quot;&gt;rule&lt;/a&gt;]
      Square brackets enclose optional elements; &quot;[foo bar]&quot; is
      equivalent to &quot;*1(foo bar)&quot;. 

   N rule
      Specific repetition: &quot;&amp;lt;n&amp;gt;(element)&quot; is equivalent to
      &quot;&amp;lt;n&amp;gt;*&amp;lt;n&amp;gt;(element)&quot;; that is, exactly &amp;lt;n&amp;gt; occurrences of (element).
      Thus 2DIGIT is a 2-digit number, and 3ALPHA is a string of three
      alphabetic characters.

   #rule
      A construct &quot;#&quot; is defined, similar to &quot;*&quot;, for defining lists of
      elements. The full form is &quot;&amp;lt;n&amp;gt;#&amp;lt;m&amp;gt;element&quot; indicating at least
      &amp;lt;n&amp;gt; and at most &amp;lt;m&amp;gt; elements, each separated by one or more commas
      (&quot;,&quot;) and OPTIONAL linear white space (LWS). This makes the usual
      form of lists very easy; a rule such as
         ( *LWS element *( *LWS &quot;,&quot; *LWS element ))
      can be shown as
         1#element
      Wherever this construct is used, null elements are allowed, but do
      not contribute to the count of elements present. That is,
      &quot;(element), , (element) &quot; is permitted, but counts as only two
      elements. Therefore, where at least one element is required, at
      least one non-null element MUST be present. Default values are 0
      and infinity so that &quot;#element&quot; allows any number, including zero;
      &quot;1#element&quot; requires at least one; and &quot;1#2element&quot; allows one or
      two.

   ; comment
      A semi-colon, set off some distance to the right of rule text,
      starts a comment that continues to the end of line. This is a
      simple way of including useful notes in parallel with the
      specifications.

   implied *LWS
      The grammar described by this specification is word-based. Except
      where noted otherwise, linear white space (LWS) can be included
      between any two adjacent words (token or quoted-string), and
      between adjacent words and separators, without changing the
      interpretation of a field. At least one delimiter (LWS and/or

      separators) MUST exist between any two tokens (for the definition
      of &quot;token&quot; below), since they would otherwise be interpreted as a
      single token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9826d3b0aadb4c0d991f77ab80bce5d93271a5e" translate="yes" xml:space="preserve">
          <source>All present and future subdomains will be HTTPS for a max-age of 1 year. This blocks access to pages or sub domains that can only be served over HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb3018ed7ba81bc986a32dff4c272b1fc5af94f" translate="yes" xml:space="preserve">
          <source>All responses with one of these status codes send a &lt;code&gt;Location&lt;/code&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31998230cdc3b967cea6c7d6edfed8e8ab8ab57f" translate="yes" xml:space="preserve">
          <source>All you need to do is combine multiple &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; headers into a single one, with commas separating the origins gathered from each copy of the header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad0e3698278f45b2af94445396e9865f213f617" translate="yes" xml:space="preserve">
          <source>Allow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3431f3358696a8f688eedd078d377a2bef938b" translate="yes" xml:space="preserve">
          <source>Allow (RFC 2616)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a254a8dafebfc7a8b81cab0f55d1468af9cf5e7" translate="yes" xml:space="preserve">
          <source>Allow (RFC 7231)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7700064d34b89eae4fcb61ae4f9c3f1965adc23" translate="yes" xml:space="preserve">
          <source>Allow credentials:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464b3413d2c92ce5d1cdddc36fca2e60307a278a" translate="yes" xml:space="preserve">
          <source>Allow iframes to use the fullscreen API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de76bcbe1f2fb18c478a0f6fa30885454a59cea6" translate="yes" xml:space="preserve">
          <source>Allowed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTML forms&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fda3a8172ffd809fcbe4f6321f7fa38cb061525" translate="yes" xml:space="preserve">
          <source>Allowed in HTML forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c74e599caf074409d91e89aa90f8b48ef77e84" translate="yes" xml:space="preserve">
          <source>Allowing Flash content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cb5b34df4d8b6d0f67236dd55dc2d559fc1e85" translate="yes" xml:space="preserve">
          <source>Allowing Java applets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6534d14b65c6f01882f09b9bc7625ec45018e6" translate="yes" xml:space="preserve">
          <source>Allows a sandboxed document to open new windows without forcing the sandboxing flags upon them. This will allow, for example, a third-party advertisement to be safely sandboxed without forcing the same restrictions upon a landing page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9b4234b2a3be8eb41cdf957e42821c7296b4df" translate="yes" xml:space="preserve">
          <source>Allows embedders to have control over whether an iframe can start a presentation session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a9b362468a49f0fc591066164c814185eb3f1f" translate="yes" xml:space="preserve">
          <source>Allows popups (like from &lt;code&gt;window.open&lt;/code&gt;, &lt;code&gt;target=&quot;_blank&quot;&lt;/code&gt;, &lt;code&gt;showModalDialog&lt;/code&gt;). If this keyword is not used, that functionality will silently fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772ca43b3ac605b73ba1b10b87801c9eb255da4d" translate="yes" xml:space="preserve">
          <source>Allows servers to assert that a cookie ought not to be sent along with cross-site requests, which provides some protection against cross-site request forgery attacks (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSRF&quot;&gt;CSRF&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8884a66b5c1071e7a925fac5c26c615146d4a1b8" translate="yes" xml:space="preserve">
          <source>Allows sites to opt in to reporting and/or enforcement of Certificate Transparency requirements, which prevents the use of misissued certificates for that site from going unnoticed. When a site enables the Expect-CT header, they are requesting that Chrome check that any certificate for that site appears in public CT logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0410e69274a5c7230756b0a2cd3597d21bf3033b" translate="yes" xml:space="preserve">
          <source>Allows sites to opt in to reporting and/or enforcement of Certificate Transparency requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5d66c72c2c3237333bd488a07baf5da98b6794" translate="yes" xml:space="preserve">
          <source>Allows the content to be treated as being from its normal origin. If this keyword is not used, the embedded content is treated as being from a unique origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741605ef4e45ee0618904121cc3fd5f417c8880d" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to disable the ability to lock the screen orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01ecc6028bdc4a32cc774eaf65dc48562b4acc1" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to navigate (load) content to the top-level browsing context. If this keyword is not used, this operation is not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9916914f8c66adba9d7f2f9c9a589c27a1dda4" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to open modal windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f95216587dc88511ecf6c58e7bdf8112265979" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to run scripts (but not create pop-up windows). If this keyword is not used, this operation is not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0419c62683b1201e44580c6c185018bb2fc4aa4a" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to submit forms. If this keyword is not used, this operation is not allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c89b61af6c6f17a8c09714a97165e2cf23d19e" translate="yes" xml:space="preserve">
          <source>Allows the embedded browsing context to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAPI/Pointer_Lock&quot;&gt;Pointer Lock API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa9af97868bcd3e0e5abf7dded6f81f5e4562003" translate="yes" xml:space="preserve">
          <source>Allows the sender to include additional fields at the end of chunked message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a8ebd4fc62c0a4cb8521f9866243f0e1c6ea8b" translate="yes" xml:space="preserve">
          <source>Allows the use of &lt;code&gt;eval()&lt;/code&gt; and similar methods for creating code from strings. You must include the single quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd1bd87864a04cf3add283dce271e5f814f1e28" translate="yes" xml:space="preserve">
          <source>Allows the use of inline resources, such as inline &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, &lt;code&gt;javascript:&lt;/code&gt; URLs, inline event handlers, and inline &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; elements. You must include the single quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e3ac5152db55dda9ebbbe8483aa28291ace912" translate="yes" xml:space="preserve">
          <source>Allows web developers to experiment with policies by monitoring (but not enforcing) their effects. These violation reports consist of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; documents sent via an HTTP &lt;code&gt;POST&lt;/code&gt; request to the specified URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197ef715f3c646e6b397719edb24cab181a5e5e8" translate="yes" xml:space="preserve">
          <source>Also, by default, prefetching of embedded link hostnames is not performed on documents loaded over &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTPS&quot;&gt;HTTPS&lt;/a&gt;. On Firefox, this can be changed by setting the &lt;code&gt;network.dns.disablePrefetchFromHTTPS&lt;/code&gt; preference to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2786b01f7fddba1a4761b75f4be96f18c612dfea" translate="yes" xml:space="preserve">
          <source>Also, pay attention not to use a simple regular expression on the BrowserName, user agents also contain strings outside the Keyword/Value syntax. Safari &amp;amp; Chrome contain the string 'like Gecko', for instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39f383ce421cfb82712ee700637b63b224f71b2" translate="yes" xml:space="preserve">
          <source>Alt-Svc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969f9938b9e9ad46cc407e83f40599f28ad451b1" translate="yes" xml:space="preserve">
          <source>Alternative way of specifying redirections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d99eac48e2150a7854ebf5ed41a547fcb7ff26" translate="yes" xml:space="preserve">
          <source>Alternatively, a &lt;code&gt;noreferrer&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types&quot;&gt;link relation&lt;/a&gt; on an a, area, or link element can be set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bb9cbc60c02f0889f6ac3194244c3ea1b935e7" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/a&gt; element can be used to configure a policy, for example: &lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Security-Policy&quot; content=&quot;default-src 'self'; img-src https://*; child-src 'none';&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb21b29ffd21c7c82658bce444d0d375ea5eb7ac" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create hashes from your inline scripts. CSP supports sha256, sha384 and sha512.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96489cbf1e84a29d50323c0d62b764cf352a52a" translate="yes" xml:space="preserve">
          <source>Alternatively, you can create hashes from your inline styles. CSP supports sha256, sha384 and sha512.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1557091a03ff09f7dee02267939f1e7e6affdd2" translate="yes" xml:space="preserve">
          <source>Although Firefox supports &lt;code&gt;data&lt;/code&gt; URLs of essentially unlimited length, browsers are not required to support any particular maximum length of data. For example, the Opera 11 browser limited URLs to 65535 characters long which limits &lt;code&gt;data&lt;/code&gt; URLs to 65529 characters (65529 characters being the length of the encoded data, not the source, if you use the plain &lt;code&gt;data:&lt;/code&gt;, without specifying a MIME type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95896d4301d000a02f900c6b86de14488ddbcde0" translate="yes" xml:space="preserve">
          <source>Although fragment identifiers used within URI references are not sent
   in requests, implementers ought to be aware that they will be visible
   to the user agent and any extensions or scripts running as a result
   of the response.  In particular, when a redirect occurs and the
   original request's fragment identifier is inherited by the new
   reference in Location (&lt;a href=&quot;#section-7.1.2&quot;&gt;Section 7.1.2&lt;/a&gt;), this might have the effect of
   disclosing one site's fragment to another site.  If the first site
   uses personal information in fragments, it ought to ensure that
   redirects to other sites include a (possibly empty) fragment
   component in order to block that inheritance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31287a55ab92ee46df59edd609b16221b3daba2a" translate="yes" xml:space="preserve">
          <source>Although it is &lt;strong&gt;strongly discouraged&lt;/strong&gt; by Mozilla, some handset manufacturers unfortunately include a token in their device's UA string that represents their device id. If this is the case, the Firefox OS UA string will look like the device-specific string in the table above, where &lt;em&gt;&lt;strong&gt;nnnn;&lt;/strong&gt;&lt;/em&gt; is the manufacturer's code for the device (see &lt;a href=&quot;https://wiki.mozilla.org/B2G/User_Agent/Device_Model_Inclusion_Requirements&quot;&gt;Guidelines&lt;/a&gt;). Some of them we have noticed are of the form &quot;&lt;strong&gt;NexusOne;&lt;/strong&gt;&quot;, &quot;&lt;strong&gt;ZTEOpen;&lt;/strong&gt;&quot;, or &quot;&lt;strong&gt;Open C;&lt;/strong&gt;&quot; (note that putting space is also discouraged). We provide this information to assist with your UA detection logic, but Mozilla discourages the detection of a device id in UA strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e784d0202a94833f035a84e2685a288c242330e" translate="yes" xml:space="preserve">
          <source>Although line 11 contains the Cookie destined for the content on &lt;code&gt;http://bar.other&lt;/code&gt;, if bar.other did not respond with an &lt;a href=&quot;headers/access-control-allow-credentials&quot;&gt;&lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt;&lt;/a&gt;&lt;code&gt;: true&lt;/code&gt; (line 19) the response would be ignored and not made available to web content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a72e7d1df557890c548f429dfcfe446b549d89" translate="yes" xml:space="preserve">
          <source>Although the HTTP standard specifies &quot;unauthorized&quot;, semantically this response means &quot;unauthenticated&quot;. That is, the client must authenticate itself to get the requested response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772d6209abf255884251d1e63fc5494b4017ee80" translate="yes" xml:space="preserve">
          <source>Although the write locks provide some help in preventing lost
   updates, they cannot guarantee that updates will never be lost.
   Consider the following scenario:

   Two clients A and B are interested in editing the resource
   'index.html'.  Client A is an HTTP client rather than a WebDAV
   client, and so does not know how to perform locking.

   Client A doesn't lock the document, but does a GET, and begins
   editing.

   Client B does LOCK, performs a GET and begins editing.

   Client B finishes editing, performs a PUT, then an UNLOCK.

   Client A performs a PUT, overwriting and losing all of B's changes.

   There are several reasons why the WebDAV protocol itself cannot
   prevent this situation.  First, it cannot force all clients to use
   locking because it must be compatible with HTTP clients that do not
   comprehend locking.  Second, it cannot require servers to support
   locking because of the variety of repository implementations, some of
   which rely on reservations and merging rather than on locking.
   Finally, being stateless, it cannot enforce a sequence of operations
   like LOCK / GET / PUT / UNLOCK.

   WebDAV servers that support locking can reduce the likelihood that
   clients will accidentally overwrite each other's changes by requiring
   clients to lock resources before modifying them.  Such servers would
   effectively prevent HTTP 1.0 and HTTP 1.1 clients from modifying
   resources.

   WebDAV clients can be good citizens by using a lock / retrieve /
   write /unlock sequence of operations (at least by default) whenever
   they interact with a WebDAV server that supports locking. 

   HTTP 1.1 clients can be good citizens, avoiding overwriting other
   clients' changes, by using entity tags in If-Match headers with any
   requests that would modify resources.

   Information managers may attempt to prevent overwrites by
   implementing client-side procedures requiring locking before
   modifying WebDAV resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6fcea0d3527546dbc2efecb9c0488c56577892" translate="yes" xml:space="preserve">
          <source>Although this document specifies the requirements for the generation
   of HTTP/1.1 messages, not all applications will be correct in their
   implementation. We therefore recommend that operational applications
   be tolerant of deviations whenever those deviations can be
   interpreted unambiguously.

   Clients SHOULD be tolerant in parsing the Status-Line and servers
   tolerant when parsing the Request-Line. In particular, they SHOULD
   accept any amount of SP or HT characters between fields, even though
   only a single SP is required.

   The line terminator for message-header fields is the sequence CRLF.
   However, we recommend that applications, when parsing such headers,
   recognize a single LF as a line terminator and ignore the leading CR.

   The character set of an entity-body SHOULD be labeled as the lowest
   common denominator of the character codes used within that body, with
   the exception that not labeling the entity is preferred over labeling
   the entity with the labels US-ASCII or ISO-8859-1. See &lt;a href=&quot;#section-3.7.1&quot;&gt;section 3.7.1&lt;/a&gt;
   and 3.4.1.

   Additional rules for requirements on parsing and encoding of dates
   and other potential problems with date encodings include:

      - HTTP/1.1 clients and caches SHOULD assume that an &lt;a href=&quot;https://tools.ietf.org/html/rfc850&quot;&gt;RFC-850&lt;/a&gt; date
        which appears to be more than 50 years in the future is in fact
        in the past (this helps solve the &quot;year 2000&quot; problem).

      - An HTTP/1.1 implementation MAY internally represent a parsed
        Expires date as earlier than the proper value, but MUST NOT
        internally represent a parsed Expires date as later than the
        proper value.

      - All expiration-related calculations MUST be done in GMT. The
        local time zone MUST NOT influence the calculation or comparison
        of an age or expiration time. 

      - If an HTTP header incorrectly carries a date value with a time
        zone other than GMT, it MUST be converted into GMT using the
        most conservative possible conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7059fa05c2bada2fecf12f49096ca50d8fbd471" translate="yes" xml:space="preserve">
          <source>Although this status code is intended to describe a response with no body, servers may erroneously include data following the headers. The protocol allows user agents to vary in how they process such responses (&lt;a href=&quot;https://github.com/httpwg/http11bis/issues/26&quot;&gt;discussion regarding this specification text can be found here&lt;/a&gt;). This is observable in persistent connections, where the invalid body may include a distinct response to a subsequent request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf07a548d7dfec43b202a1786fb9188645f2387" translate="yes" xml:space="preserve">
          <source>Amazon Kindle eBook format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7c29965f74dbcaf148b9acaea604efc27c6cbf" translate="yes" xml:space="preserve">
          <source>Ambient light sensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99690d58d4abd10cd0938a7adcb56ded08ef66ad" translate="yes" xml:space="preserve">
          <source>An</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4e8bf14b8c6f1d264a99cfc4165e21e00334c4" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;&lt;a href=&quot;methods&quot;&gt;HTTP method&lt;/a&gt;&lt;/em&gt;, a verb (like &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;methods/put&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt;) or a noun (like &lt;a href=&quot;methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;), that describes the action to be performed. For example, &lt;code&gt;GET&lt;/code&gt; indicates that a resource should be fetched or &lt;code&gt;POST&lt;/code&gt; means that data is pushed to the server (creating or modifying a resource, or generating a temporary document to send back).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86440ab578a3769337d5800e98b7fd98176177d7" translate="yes" xml:space="preserve">
          <source>An Atom Publishing Protocol Category Document, when serialized as XML
   1.0, can be identified with the following media type:

   MIME media type name:  application

   MIME subtype name:  atomcat+xml

   Required parameters:  None.

   Optional parameters:

      &quot;charset&quot;:  This parameter has identical semantics to the charset
         parameter of the &quot;application/xml&quot; media type as specified in
         [&lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt;].

   Encoding considerations:  Identical to those of &quot;application/xml&quot; as
      described in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023], Section&amp;nbsp;3.2&lt;/a&gt;. 

   Security considerations:  As defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;.

      In addition, as this media type uses the &quot;+xml&quot; convention, it
      shares the same security considerations as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-10&quot;&gt;[RFC3023],
      Section&amp;nbsp;10&lt;/a&gt;.

   Interoperability considerations:  There are no known interoperability
      issues.

   Published specification:  &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;.

   Applications that use this media type:  No known applications
      currently use this media type.

   Additional information:

   Magic number(s):  As specified for &quot;application/xml&quot; in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023],
      Section&amp;nbsp;3.2&lt;/a&gt;.

   File extension:  .atomcat

   Fragment identifiers:  As specified for &quot;application/xml&quot; in
      &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-5&quot;&gt;[RFC3023], Section&amp;nbsp;5&lt;/a&gt;.

   Base URI:  As specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-6&quot;&gt;[RFC3023], Section&amp;nbsp;6&lt;/a&gt;.

   Macintosh file type code:  TEXT

   Person &amp;amp; email address to contact for further information:
      Joe Gregorio &amp;lt;joe@bitworking.org&amp;gt;

   Intended usage:  COMMON

   Author/Change controller:  IETF (iesg@ietf.org) Internet Engineering
      Task Force</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6c4aedb53226da5214a23ca75c1a0eb3cafdc2" translate="yes" xml:space="preserve">
          <source>An Atom Publishing Protocol Service Document, when serialized as XML
   1.0, can be identified with the following media type:

   MIME media type name:  application

   MIME subtype name:  atomsvc+xml

   Required parameters:  None. 

   Optional parameters:

      &quot;charset&quot;:  This parameter has identical semantics to the charset
         parameter of the &quot;application/xml&quot; media type as specified in
         [&lt;a href=&quot;https://tools.ietf.org/html/rfc3023&quot;&gt;RFC3023&lt;/a&gt;].

   Encoding considerations:  Identical to those of &quot;application/xml&quot; as
      described in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023], Section&amp;nbsp;3.2&lt;/a&gt;.

   Security considerations:  As defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;.

      In addition, as this media type uses the &quot;+xml&quot; convention, it
      shares the same security considerations as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-10&quot;&gt;[RFC3023],
      Section&amp;nbsp;10&lt;/a&gt;.

   Interoperability considerations:  There are no known interoperability
      issues.

   Published specification:  &lt;a href=&quot;https://tools.ietf.org/html/rfc5023&quot;&gt;RFC 5023&lt;/a&gt;.

   Applications that use this media type:  No known applications
      currently use this media type.

   Additional information:

   Magic number(s):  As specified for &quot;application/xml&quot; in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-3.2&quot;&gt;[RFC3023],
      Section&amp;nbsp;3.2&lt;/a&gt;.

   File extension:  .atomsvc

   Fragment identifiers:  As specified for &quot;application/xml&quot; in
      &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-5&quot;&gt;[RFC3023], Section&amp;nbsp;5&lt;/a&gt;.

   Base URI:  As specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc3023#section-6&quot;&gt;[RFC3023], Section&amp;nbsp;6&lt;/a&gt;.

   Macintosh file type code:  TEXT

   Person and email address to contact for further information:  Joe
      Gregorio &amp;lt;joe@bitworking.org&amp;gt;

   Intended usage:  COMMON

   Author/Change controller:  IETF (iesg@ietf.org) Internet Engineering
      Task Force</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7254bd871c63a8e62a9d5239377ac0b3fc259331" translate="yes" xml:space="preserve">
          <source>An HTML document that executes a JavaScript alert. Note that the closing script tag is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303f58f13dce71a0e7fad3c11eac5eff7ef589df" translate="yes" xml:space="preserve">
          <source>An HTML document with &lt;code&gt;&amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f190ae58e3762585b81fc8fc127a43daf1651695" translate="yes" xml:space="preserve">
          <source>An HTTP &lt;a href=&quot;methods&quot;&gt;method&lt;/a&gt;, usually a verb like &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; or a noun like &lt;a href=&quot;methods/options&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methods/head&quot;&gt;&lt;code&gt;HEAD&lt;/code&gt;&lt;/a&gt; that defines the operation the client wants to perform. Typically, a client wants to fetch a resource (using &lt;code&gt;GET&lt;/code&gt;) or post the value of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms&quot;&gt;HTML form&lt;/a&gt; (using &lt;code&gt;POST&lt;/code&gt;), though more operations may be needed in other cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224b4c4e69b1e3dc55d55f1ba353682c6c99e28c" translate="yes" xml:space="preserve">
          <source>An HTTP Status Code to Report Legal Obstacles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606a7f78aa2b9bb237bbb97da4be73cfcfdc8923" translate="yes" xml:space="preserve">
          <source>An HTTP message can be either a request from client to server or a
   response from server to client.  Syntactically, the two types of
   message differ only in the start-line, which is either a request-line
   (for requests) or a status-line (for responses), and in the algorithm
   for determining the length of the message body (&lt;a href=&quot;#section-3.3&quot;&gt;Section 3.3&lt;/a&gt;). 

   In theory, a client could receive requests and a server could receive
   responses, distinguishing them by their different start-line formats,
   but, in practice, servers are implemented to only expect a request (a
   response is interpreted as an unknown or invalid request method) and
   clients are implemented to only expect a response.

     start-line     = request-line / status-line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaec2180aef0e0c15dca19ff80c20ef6a2edd19" translate="yes" xml:space="preserve">
          <source>An HTTP-date timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda182a3078d6fee0f6ff4a7deb6d570e58ba8a3" translate="yes" xml:space="preserve">
          <source>An HTTP/1.1 (or later) client sending a message-body SHOULD monitor
   the network connection for an error status while it is transmitting
   the request. If the client sees an error status, it SHOULD
   immediately cease transmitting the body. If the body is being sent
   using a &quot;chunked&quot; encoding (&lt;a href=&quot;#section-3.6&quot;&gt;section 3.6&lt;/a&gt;), a zero length chunk and
   empty trailer MAY be used to prematurely mark the end of the message.
   If the body was preceded by a Content-Length header, the client MUST
   close the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287c4eeafec6189b6edc5e8b172c0314056ae7c7" translate="yes" xml:space="preserve">
          <source>An HTTP/1.1 &lt;a href=&quot;methods/get&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;methods/post&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; is used as request method. In the case of a POST, the &lt;a href=&quot;headers/content-type&quot;&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; of the request body is one of &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt;, &lt;code&gt;multipart/form-data&lt;/code&gt;, or &lt;code&gt;text/plain.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43150375aa6dfc8cbdc9d2576d9ab158a71ecc43" translate="yes" xml:space="preserve">
          <source>An HTTP/1.1 server MAY assume that a HTTP/1.1 client intends to
   maintain a persistent connection unless a Connection header including
   the connection-token &quot;close&quot; was sent in the request. If the server
   chooses to close the connection immediately after sending the
   response, it SHOULD send a Connection header including the
   connection-token close.

   An HTTP/1.1 client MAY expect a connection to remain open, but would
   decide to keep it open based on whether the response from a server
   contains a Connection header with the connection-token close. In case
   the client does not want to maintain a connection for more than that
   request, it SHOULD send a Connection header including the
   connection-token close.

   If either the client or the server sends the close token in the
   Connection header, that request becomes the last one for the
   connection.

   Clients and servers SHOULD NOT assume that a persistent connection is
   maintained for HTTP versions less than 1.1 unless it is explicitly
   signaled. See &lt;a href=&quot;#section-19.6.2&quot;&gt;section 19.6.2&lt;/a&gt; for more information on backward
   compatibility with HTTP/1.0 clients.

   In order to remain persistent, all messages on the connection MUST
   have a self-defined message length (i.e., one not defined by closure
   of the connection), as described in &lt;a href=&quot;#section-4.4&quot;&gt;section 4.4&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e198b1f69badcd0d294bae2afb6df6ba9df42c" translate="yes" xml:space="preserve">
          <source>An IANA registry maintains &lt;a href=&quot;http://www.iana.org/assignments/http-parameters/http-parameters.xml#http-parameters-1&quot;&gt;a complete list of official content encodings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3cd64d927c27e2c875db1e4f0241b2d475f24e" translate="yes" xml:space="preserve">
          <source>An absolute or partial address of the previous web page from which a link to the currently requested page was followed. URL fragments (i.e. &quot;#section&quot;) and userinfo (i.e. &quot;username:password&quot; in &quot;https://username:password@example.com/foo/bar/&quot;) are not included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d7d1ee9799639ae7a725a7df1453133be8aff7" translate="yes" xml:space="preserve">
          <source>An absolute path, ultimately followed by a &lt;code&gt;'?'&lt;/code&gt; and query string. This is the most common form, known as the &lt;em&gt;origin form&lt;/em&gt;, and is used with &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt;, and &lt;code&gt;OPTIONS&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7612f8d608c3f6e8f180ad8653c5d57a276d94" translate="yes" xml:space="preserve">
          <source>An allowlist is a list of origins that takes one or more of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb11d5976a64d2ae62179eb46982158c56bbed3" translate="yes" xml:space="preserve">
          <source>An attempt to validate the response failed, due to an inability to reach the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5712cd588fbe7cbcb4437f68372abb9b405a060c" translate="yes" xml:space="preserve">
          <source>An audio file in the OGG container format. Vorbis is the most common audio codec used in such a container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275274da827a5e3fea5040e1aba9e600308dbbfb" translate="yes" xml:space="preserve">
          <source>An audio file in the WAVE container format. The PCM audio codec (WAVE codec &quot;1&quot;) is often supported, but other codecs have limited support (if any).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f3d314e777f96d5cb8022250e30f26ec18d095" translate="yes" xml:space="preserve">
          <source>An audio file in the WebM container format. Vorbis and Opus are the most common audio codecs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9bc7bf062074940f71cffe41ac4324eaa5605c" translate="yes" xml:space="preserve">
          <source>An audio or video file using the OGG container format. Theora is the usual video codec used within it; Vorbis is the usual audio codec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bab7fe5b73a7d6c377d59fdf9559bcf2ea5f6e5" translate="yes" xml:space="preserve">
          <source>An entity tag uniquely representing the requested resource. It is a string of ASCII characters placed between double quotes (Like &lt;code&gt;&quot;675af34563dc-tr34&quot;&lt;/code&gt;) and may be prefixed by &lt;code&gt;W/&lt;/code&gt; to indicate that the weak comparison algorithm should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8351e98570f813491d441d5ddd55a80b35cfdc7d" translate="yes" xml:space="preserve">
          <source>An example HTTP request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937401682bbf56d33e1065700936f4be12544c64" translate="yes" xml:space="preserve">
          <source>An example of a &lt;a href=&quot;#Preflighted_requests&quot;&gt;preflight request is given above&lt;/a&gt;, including an example which sends this header to the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c03540d76fb7a3ce87da945d5bbdc9444de704" translate="yes" xml:space="preserve">
          <source>An example of a cross-origin request: The frontend JavaScript code for a web application served from &lt;code&gt;http://domain-a.com&lt;/code&gt; uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; to make a request for &lt;code&gt;http://api.domain-b.com/data.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa1717cd1d978e6cae9d3ef7affa2c14bef3a08" translate="yes" xml:space="preserve">
          <source>An example of an HTML form posted using the &lt;code&gt;multipart/form-data&lt;/code&gt; format that makes use of the &lt;code&gt;Content-Disposition&lt;/code&gt; header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb7d8b63d836dc8b48fea64e497eee88c8fc37a" translate="yes" xml:space="preserve">
          <source>An example response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06bdca7c09b88f2f4a910e920b7d53770584980" translate="yes" xml:space="preserve">
          <source>An example scenario</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f481ad49809e7c27b79d2e6d830283b22c04c1f7" translate="yes" xml:space="preserve">
          <source>An example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524d76d400d5cb73fc54737fb4d856fc9ec10a9a" translate="yes" xml:space="preserve">
          <source>An identifier disclosing the information that is altered or lost when using a proxy. This can be either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6172d2a45cf37f2f2799154f23922f58940acb" translate="yes" xml:space="preserve">
          <source>An integer in the given unit indicating the beginning of the request range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f15168b132abe2a60f0170a67ead71d262beaa6" translate="yes" xml:space="preserve">
          <source>An integer in the given unit indicating the end of the requested range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3aa033dddb2a858401595eeaf3ab8db26849c4" translate="yes" xml:space="preserve">
          <source>An integer in the given unit indicating the end of the requested range. This value is optional and, if omitted, the end of the document is taken as the end of the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978df3d581d5f2123e6d6e2fbfff4d060ccce54e" translate="yes" xml:space="preserve">
          <source>An optional &lt;em&gt;body&lt;/em&gt; containing data associated with the request (like content of an HTML form), or the document associated with a response. The presence of the body and its size is specified by the start-line and HTTP headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258eb51f5d78b7afb24633c632b091d4e2519fd6" translate="yes" xml:space="preserve">
          <source>An optional set of &lt;em&gt;HTTP headers&lt;/em&gt; specifying the request, or describing the body included in the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6a0c0ce21b968ca2bae147ce0e590ec11226ee" translate="yes" xml:space="preserve">
          <source>An origin server SHOULD send Last-Modified for any selected
   representation for which a last modification date can be reasonably
   and consistently determined, since its use in conditional requests
   and evaluating cache freshness ([&lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot;&gt;RFC7234&lt;/a&gt;]) results in a substantial
   reduction of HTTP traffic on the Internet and can be a significant
   factor in improving service scalability and reliability.

   A representation is typically the sum of many parts behind the
   resource interface.  The last-modified time would usually be the most
   recent time that any of those parts were changed.  How that value is
   determined for any given resource is an implementation detail beyond
   the scope of this specification.  What matters to HTTP is how
   recipients of the Last-Modified header field can use its value to
   make conditional requests and test the validity of locally cached
   responses.

   An origin server SHOULD obtain the Last-Modified value of the
   representation as close as possible to the time that it generates the
   Date field value for its response.  This allows a recipient to make
   an accurate assessment of the representation's modification time,
   especially if the representation changes near the time that the
   response is generated.

   An origin server with a clock MUST NOT send a Last-Modified date that
   is later than the server's time of message origination (Date).  If
   the last modification time is derived from implementation-specific 

   metadata that evaluates to some time in the future, according to the
   origin server's clock, then the origin server MUST replace that value
   with the message origination date.  This prevents a future
   modification date from having an adverse impact on cache validation.

   An origin server without a clock MUST NOT assign Last-Modified values
   to a response unless these values were associated with the resource
   by some other system or user with a reliable clock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6110e3591ac90aa132e8d09ccc7a10f3c9f89c" translate="yes" xml:space="preserve">
          <source>And the MIME type set to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d93a0e0e6b94c85ab246f096bdfe11ac7c7be5" translate="yes" xml:space="preserve">
          <source>Android (version 40 and below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d181bb566f9337c1f23f7fa7129fbabf5cee58d" translate="yes" xml:space="preserve">
          <source>Android (version 41 and above)</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
