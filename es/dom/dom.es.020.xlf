<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="628708d448a72a707d97ed3bac1c24fff1e1e49c" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.crossOrigin' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92be149020ce640307aba02241522c5b7ef000de" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.currentSrc' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0085c126a818b8d865fa7cfbce5d5c95f702a1" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.currentTime' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd456f5586931cc1b5050ac9fbfd0a47faead228" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.defaultMuted' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d746b75aba6203d3153dde5bbc244ee003e6717c" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.defaultPlaybackRate' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b68e9103ed7aa58a5c74bddca03537627435b98" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.duration' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0681414ed39b7c38e8c8c05cd5c78656f401104c" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.ended' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40db8fd3817a9797cda6baf7accdc6d6d690c7d" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.error' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e122c39ddce77be390acfa624b98281b0ca626d6" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.load()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07ef6eae80333e8eb666b69dc01b7040fe45ae7" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.loop' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18a668c126399033c8a2bdb866d9c9e241e2f4f" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.mediaGroup' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ebbce77c2a39786e221e15a05c3dc1215cf11f" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.muted' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663b58ac995d4a3a71a102173f9d7cd26d6223b7" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.networkState' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b3a2434d059dabd715026a1255234864e8118b" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.paused' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a329c529cd67b4eadc3a609f90c5189ed756d42" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.playbackRate' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9451e101d385df16e631b0d63e4a55aa22a599" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.readyState' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c209336ed943ed372808f1cfa4f3bf6f80c721" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfcea0ba73beb2b507e55aa7f26afda637b52ff" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMediaElement.volume' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de7f6f5ca8c2a765bd911bdf90d82df419b89fd" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMetaElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18adc7d1c903e685117d64713cff2427180385ea" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLMeterElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb991d613cd016420005f8415e9c65d3be56f84" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLOListElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50655a031c5d42ec1a15410650380b589940fbb5" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLObjectElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fa23cce9bbe7bfbf06b60b5be97e29717b87d7" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLOptGroupElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77503b9968e9ee1836c95310e2d4e9c1abaa4b0" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLOptionElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4163faa09884d63a9fc126d9c721c07d144c2e10" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLOutputElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521444dd261aea84d6ee75c8b8fc1a613d446785" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLParagraphElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ce71ffc22cedfc097761b7b7f48e77d33cdfe8" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLParamElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e105115973156d75697a7334e5feb84b529c48c0" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLProgressElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d1c1429c5a45845feb5f37a928e1496773e143" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLQuoteElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd216138e068ef5511486b031908a881d9873f7" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLScriptElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb882375b4067bb13d19468370e7ca042227282c" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSelectElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e91c0394cd815108377a8cdf6e73e873bb80e1" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSelectElement.add()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03dd81d20c4e6997aef744b9ed767cf7cc44c3ce" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSelectElement.checkValidity()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a767ff505f75008b2215214d24fd7d52ca3bd7" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSelectElement.item()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180d9e5e4f882ea4a620594389fff03c68838a2c" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSelectElement.namedItem()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1254f183c8f790423a8a20ea82c7024e417824cc" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSelectElement.remove()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4fb28c8e672c3b5bf3c9618fcf95615b030f39" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSelectElement.selectedOptions' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9e30f6528d2830839e89f24daf3c9fb4d5d40a" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSelectElement.setCustomValidity()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde8e7209b04a9d1204700d13a457a78d779bcd8" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSourceElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb52da5e3c3f0faf760a0e81b3878933934e767" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLSpanElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c02c9eccc562834fb230b6b51cb03364662d686" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLStyleElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da616fecd926b67bf60d33bee192fdd84ca16c5" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTableCaptionElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516415f086163601fcc0597f608bad6c891ab4f6" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTableCellElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad9cd2ce8cb1b4323bce395ef6519628cd7f066" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTableColElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde20b00dbc3cff664d84430d55fc8c10bd75a31" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTableElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e969c213c6750b28e7a8fdb28d427a0ca22c4221" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTableElement.caption' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1a69f00d858e0522118e4705cbe26e2dc7d347" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTableElement.tFoot' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07571a44f87184b1bf452103d7af26bcb9385714" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTableElement.tHead' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b8a65e9495c2350bf4e42ff34970576788ed91" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTableRowElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bef46b3fb90d297169789efa52b4fc3ccb119d7" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTableSectionElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed939b1eb36ee40d4da05d8d20987db892d83f6" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTemplateElement interface' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67205f36d304c809c735c7492eb571deda5fe84" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTextAreaElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115b500b64000f4a3e164716d1e927776ce68e02" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTimeElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1803f64fdc29bb00adc85518edb1cedf0b774d0" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTitleElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc324fb056e80bb741832455675c4b929045d4c" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTrackElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b31ecd65c0cdcf20cc95741056de8a012c93cd" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLTrackElement.src' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1928ee4c2950526a78622d8be0aec7d38799364" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLUListElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1fc2a8d2a8385ac04de1bd08c62ed9e5858782d" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'HTMLUnknownElement' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5609f0da8cd548674aeb9d1439cb23fe582083" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'History' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c860167ee94ebb9863cabe1ef4c42d8dd7d85cf" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'History.length' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce66d89a231f675db8da3425b6e0515c729d19e" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Location' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ea17e947ff04b29eb19fb1c5338c204e3fabeb" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Location.assign()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c43e25c4784684cd516e3eed2878e100abbc969" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Location.reload()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd98cd317877ae4e5b8bce06ab10dbe16c0f8504" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Location.replace()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5bdf9fdba855b81e4cd6a731b0ad0191f9ebc0" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'NavigatorID' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6bd99cf6146eb60cf2361e42af97d27031bea3" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'NavigatorLanguage' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df4b756a7c9d70b3e1293d953471cef020b395e" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'NavigatorOnLine' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c5e951f9ce0c71cbec0bd7d9a389d20bc5aa22" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'TextTrackCue' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49330e095ebcd975239815eaa08a52688b066db0" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'The History interface' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f4a06bc3c25e16c8e4f5e9a9be0e8540ea81fd" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'TrackEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0f1d39ab574169a69e3ba8e2e592e60374dfd0" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'TrackEvent()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b28a5477d5746079aa681a84dc91e8042f58a6d" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'TrackEvent.track' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040979f62f0605eee2f5d5ccf408bd88a70adf37" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Transferable' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b71cd8ce1c9cf1c440e29d8c1e2ba621a95c57" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'ValidityState' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9993f1ee55d131d76cd7c3aafa81eb57a0e2fffd" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'ValidityState.badInput' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d909b2b779ff72ee78f8f7714cab0040d86bfe5a" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'ValidityState.tooLong' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88df323d97abc17d0c2aa82f90d1da673bb5cf12" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Window.close()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a832a2d614b32e788cb1ca4c94118b5588ad8f10" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Window.document' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b248e3968b47387f83e9075f887ec7473b6d7044" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Window.frames' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b8dc41c366a03c6981cb895570d262027bab91" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Window.length' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac240aed4d195ad6326c86fd2dd0170a16800c6" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Window.location' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccff90a4999dc48a470fa632302941045c680f5" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Window.name' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fec9308a39c06943c936b8443693c84db7000d0" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Window.self' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5293b2691e89beb0b070fbde9ae5cd5764d73f49" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Window.stop' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d804365bb68b3603d5517e879ce8a02d3fe35c07" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'Window.window' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486d21a7126ffa53bb9906c9660ffa60b182a54b" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'WindowBase64.atob()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac076aeade7d49a4219b7000728d1e9a5468af9" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'WindowBase64.btoa()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f539950044ad769db80e34f68a45b03c3e70b7" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'autofocus' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebed606a9d0786844cfc44912a8dac13876fe1ce" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'blur' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83f12a2c3e48380b86e44c448000f5a900084a8" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'focus' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d19aebdb2c7f534c87853074c2eb7d7874939e0" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'labels' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375e60c95ea7fc5800821211ca1157d071ab076b" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'pause()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483028034d1d89e9e5d14ba1dd6520afe9b44a5e" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'play()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dd41dec4b058d4c80c33939e0fd8d31d6aaf6b" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'value' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c831bc5f590c7586b8c51476d102cb6812236191" translate="yes" xml:space="preserve">
          <source>HTML5&lt;br/&gt;&lt;small&gt;The definition of 'window.top' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51279aec5f61a1855b970a000ddc2ddf8b4e0e5" translate="yes" xml:space="preserve">
          <source>HTML5CanvasTutorials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795b5fbc7bc35a9d7caba1fe1b06ef9fec95f5b6" translate="yes" xml:space="preserve">
          <source>HTML5Rocks article</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11dc542c0ffeed8b41bad901e2044f438e4ab0e5" translate="yes" xml:space="preserve">
          <source>HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa59ba80a6b326636c0049faff3921fbfad9ce1f" translate="yes" xml:space="preserve">
          <source>HTMLAnchorElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e50904f879099abe83824e214dd8fc81308b01d" translate="yes" xml:space="preserve">
          <source>HTMLAnchorElement.download</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037e2f0d7298a7c3017dfb0692f9e406be740268" translate="yes" xml:space="preserve">
          <source>HTMLAnchorElement.referrerPolicy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a04b3be05348dfe9c6e16a2b2e7665543725e56" translate="yes" xml:space="preserve">
          <source>HTMLAnchorElement.rel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7804e7c6d02196e3b5b991263f195dfcf95cde" translate="yes" xml:space="preserve">
          <source>HTMLAnchorElement.relList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2a45bf7abdbfb833736376a24d496854438013" translate="yes" xml:space="preserve">
          <source>HTMLAreaElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e46e56c64984c7a3654aa1e5f0bbbfd8b949c17" translate="yes" xml:space="preserve">
          <source>HTMLAreaElement.referrerPolicy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6deb6476d89c3681350a8b141ddc75400f02c008" translate="yes" xml:space="preserve">
          <source>HTMLAreaElement.rel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a984bd24660edef0b1c99efd1c0496d3cd004c2" translate="yes" xml:space="preserve">
          <source>HTMLAreaElement.relList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad9160340669de46e0cbbea6f65806cb99231a8" translate="yes" xml:space="preserve">
          <source>HTMLAudioElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903e440c574f54f3e1a32ce8ef0463c4df36de62" translate="yes" xml:space="preserve">
          <source>HTMLBRElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3431583f069f09493af0d99956525fce1285fa4" translate="yes" xml:space="preserve">
          <source>HTMLBaseElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff17cd5875898e69a5c7099c1aef9b0c6c1998e7" translate="yes" xml:space="preserve">
          <source>HTMLBaseFontElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6185dc89bf4b82e3fc09f406e34692d3ab701ce6" translate="yes" xml:space="preserve">
          <source>HTMLBodyElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d7530b37a2675e6c9f0524cc03059d41e8c938" translate="yes" xml:space="preserve">
          <source>HTMLButtonElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b153927a445e04b518a3324b1994c10a972b54c1" translate="yes" xml:space="preserve">
          <source>HTMLButtonElement.labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb2e7dc34f30c491263d5d8b5c77953473aa4b0" translate="yes" xml:space="preserve">
          <source>HTMLCanvasElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822e7d3df50d0d549f4eea8f12ce60c4417f3ea6" translate="yes" xml:space="preserve">
          <source>HTMLCanvasElement.captureStream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3234baaee64112b50bb0db67fcd76e52886cbe59" translate="yes" xml:space="preserve">
          <source>HTMLCanvasElement.getContext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df11ba0c76fa5d71cc30151c784196b7ce027c82" translate="yes" xml:space="preserve">
          <source>HTMLCanvasElement.height</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fee89b42c2faa6a512519317734d6d790cc0f23" translate="yes" xml:space="preserve">
          <source>HTMLCanvasElement.toBlob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16be8fab0819c7c1eae239ea12d6506af5ef664" translate="yes" xml:space="preserve">
          <source>HTMLCanvasElement.toDataURL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4462a36640f75bde30f87f37eec2a2c20a3aeed" translate="yes" xml:space="preserve">
          <source>HTMLCanvasElement.transferControlToOffscreen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078ac56be2186f09a6c6fcda490989238fcffca0" translate="yes" xml:space="preserve">
          <source>HTMLCanvasElement.width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c52783da612b22fe54d1b6ac95e715dd9c1b742" translate="yes" xml:space="preserve">
          <source>HTMLCollection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dc7ab624729341f5582c43987b3756793b0f62" translate="yes" xml:space="preserve">
          <source>HTMLCollection.item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbf28a959e5326257a2e8c4a8a310f4ee1f6828" translate="yes" xml:space="preserve">
          <source>HTMLDListElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712ce8634ba5d4a5b7bea707a3661ae04e86c645" translate="yes" xml:space="preserve">
          <source>HTMLDataElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9b0210a0a183eae04a08f8c16c6922a9c24156" translate="yes" xml:space="preserve">
          <source>HTMLDataElement.value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d6d2d9c89170c36e1601be0b295ee89931a319" translate="yes" xml:space="preserve">
          <source>HTMLDataListElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa45733d35b90ea4462331aa813666b124c80e1" translate="yes" xml:space="preserve">
          <source>HTMLDetailsElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43f55410afa0397c5e17debce62de37ea73b88b" translate="yes" xml:space="preserve">
          <source>HTMLDialogElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1a0d989723fd8ec5464cf22c6a355b78d42ff5" translate="yes" xml:space="preserve">
          <source>HTMLDialogElement.close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3e00cf57928be0c28dbf7f467f4d771fdb6302" translate="yes" xml:space="preserve">
          <source>HTMLDialogElement.open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feea1ac525501559013f4c5744f98ee5e70ebb7d" translate="yes" xml:space="preserve">
          <source>HTMLDialogElement.returnValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889005a06b07a60da1eb3548449489487f46ad7e" translate="yes" xml:space="preserve">
          <source>HTMLDialogElement.show</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e86ab465b35af45a3cb56f332c14716bf491d46" translate="yes" xml:space="preserve">
          <source>HTMLDialogElement.showModal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12a1425f098d4fc6f67896d596d2c676c92189f" translate="yes" xml:space="preserve">
          <source>HTMLDivElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b295c9c06f7b9dd38ea939f5f9b28c2c4d0f7eb8" translate="yes" xml:space="preserve">
          <source>HTMLDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a724fb98d76adb78446cbc05489db84ed8cddbc9" translate="yes" xml:space="preserve">
          <source>HTMLElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b4e86da66ffef966431d884316d08ff8644b52" translate="yes" xml:space="preserve">
          <source>HTMLElement.accessKeyLabel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8b86b110a7005d8dc547c1c9bad1f5f0a543bb" translate="yes" xml:space="preserve">
          <source>HTMLElement.blur</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae58dbd01980f880afae725a9039f04351e6317e" translate="yes" xml:space="preserve">
          <source>HTMLElement.click</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5081386bc25d3b24c5369188fbede2577564a9c5" translate="yes" xml:space="preserve">
          <source>HTMLElement.contentEditable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b0dc6988c8d3da36d905a28e52834ae60bc1b0" translate="yes" xml:space="preserve">
          <source>HTMLElement.dataset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b99a536db48a39b5efa10efc7e56d69c1ef8f1" translate="yes" xml:space="preserve">
          <source>HTMLElement.dir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905781e833fc5a161c900935b28a763bddb6c49d" translate="yes" xml:space="preserve">
          <source>HTMLElement.focus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24e4b5dae19f96dd4c7e8e7c20b336295ed53e2" translate="yes" xml:space="preserve">
          <source>HTMLElement.forceSpellCheck</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0285a0134a6a561e7121f8cc4ddcfc63f995c2a2" translate="yes" xml:space="preserve">
          <source>HTMLElement.hidden</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4c571aafd312600cb18555c96d82dd537bad61" translate="yes" xml:space="preserve">
          <source>HTMLElement.innerText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe41bf4eaa7b2d30920a989debed2a57396b2c5f" translate="yes" xml:space="preserve">
          <source>HTMLElement.isContentEditable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7481276ff50999e72cd29266c6421b1547534a4b" translate="yes" xml:space="preserve">
          <source>HTMLElement.lang</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7256610ff85d3da3de379d010a9946f69990868d" translate="yes" xml:space="preserve">
          <source>HTMLElement.nonce</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1819658485d38624f8a1be035d05d80089c79470" translate="yes" xml:space="preserve">
          <source>HTMLElement.offsetHeight</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1647426c98736993762f167c40762ebe6e5a1c7f" translate="yes" xml:space="preserve">
          <source>HTMLElement.offsetLeft</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f1845136d422f5a62c13c018dc190d7eeed883" translate="yes" xml:space="preserve">
          <source>HTMLElement.offsetParent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728907e88d12a56a6f24bb57110009f4f85f9d89" translate="yes" xml:space="preserve">
          <source>HTMLElement.offsetTop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96cf26b654c4b486137fcb3a8f6f299d62e7645" translate="yes" xml:space="preserve">
          <source>HTMLElement.offsetWidth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91f3a0495f36413d3b83eda7a879292933aa5f7" translate="yes" xml:space="preserve">
          <source>HTMLElement.style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e774ca42c5e7a347744e82d0b12932f8aa3af071" translate="yes" xml:space="preserve">
          <source>HTMLElement.tabIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216cc23010e58afe5a16ab057343b5dd5d2d7b05" translate="yes" xml:space="preserve">
          <source>HTMLElement.title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc90fcda8c27b224282998883cbbec4709d69137" translate="yes" xml:space="preserve">
          <source>HTMLEmbedElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4039398484d147eb786e874395478ec1a3273f19" translate="yes" xml:space="preserve">
          <source>HTMLFieldSetElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0af7a75db25a0940469fec9193f529cfcc825df" translate="yes" xml:space="preserve">
          <source>HTMLFontElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044510625fc1ad2b66cf98637f39e99a9fdccd3b" translate="yes" xml:space="preserve">
          <source>HTMLFontElement.color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe5170557c7a35eb781a67cf1f798682ca601fb" translate="yes" xml:space="preserve">
          <source>HTMLFontElement.face</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be71d31c3c8eed0e1615b51f02f7e4d915a27cc7" translate="yes" xml:space="preserve">
          <source>HTMLFontElement.size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37105b3dce71e88253b347714c64748f532ed45d" translate="yes" xml:space="preserve">
          <source>HTMLFormControlsCollection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6236231be81cf2b03b8e563da327a9ee0e2e52" translate="yes" xml:space="preserve">
          <source>HTMLFormControlsCollection.namedItem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa44b5d5474bf452fd3e7eb7d729d42640f1aa6" translate="yes" xml:space="preserve">
          <source>HTMLFormElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f78e4c52e3abfc7a98610d9786f742399a0870" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.acceptCharset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3df3cacdb198cf64cad5c7d073ef9e59f1da593" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132ee9e89d07797a8c1fa89b97081e77244871a2" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98b4d4b974f4dda4675437799b7242a9dd2ff6c" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.encoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b57b4894bec07ade5b92bb7791ff1bb314a4267" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.enctype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cf6cb3b479f5b5feb4a749d11589b1c8b5d86f" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dff07e3aec16c435836971e3d1c1fb357d442a" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379822d36d067d92a626128fec240e6dbe1424d8" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc6fab2e4aa81c706b6ba4a531f164ca0b75f77" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.reportValidity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5746338a4689f61ea77a714a4dede16fc999c4" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.reset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4c36e1ef1a23eecde718a783d835b9e7db2287" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.submit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c2b52e59021fb99c0871e8a3c182a60d15b0ed" translate="yes" xml:space="preserve">
          <source>HTMLFormElement.target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c658f1ce9ef393443f39c53a7d9542448468d3" translate="yes" xml:space="preserve">
          <source>HTMLFrameSetElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9537af6dfaecb540a0aa73cdf4a0189b428bab2" translate="yes" xml:space="preserve">
          <source>HTMLHRElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977f0d09e04aff24b086ef397869f7005e971e36" translate="yes" xml:space="preserve">
          <source>HTMLHeadElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893cc9bd162e47b89d3c99a914e33a9c56cb5f07" translate="yes" xml:space="preserve">
          <source>HTMLHeadingElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc63a97bb06802acad7f8d52ab0daf0b9c95a96b" translate="yes" xml:space="preserve">
          <source>HTMLHtmlElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6219e587ad3e42ddab784402731212a19959ba2a" translate="yes" xml:space="preserve">
          <source>HTMLHtmlElement.version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4160c6e1a844a0e46d0b25c230278933561d83be" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8e602f9982b8e74fd31036b2c02099cabaa233" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7f51b8a0fc95be269ea1b6ac845e72d853cb85" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7818d178a14d526d2a689031b5cd0d5e32dfee57" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.hostname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e698e1072814fd6c67e03fb4f989c3db665399e" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.href</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bf5fa67cb0d9fd10df3fb3ee800ff85f798bc1" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.origin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a262fb68efdd731e4fa47a17d6485cb15f7541" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.password</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1a2f950fc0616a80b061089379b545fc0cfac2" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.pathname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577f7acc3e16639823f57aabcc3b75191c0da5fa" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803c609f592fdb3f8a7643d450fb61c1365401d1" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b77c945098c3d90cc72e43a5cb53e5b10c6043" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.search</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020badeaa03c9c31757e5ec18037c2387aaf7af2" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.toString</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a59c2979d8a43993c11a2631cc4ab24e3c07b3e" translate="yes" xml:space="preserve">
          <source>HTMLHyperlinkElementUtils.username</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0ee364b8ae35d688a0d1f48f9aa52c416d8d8b" translate="yes" xml:space="preserve">
          <source>HTMLIFrameElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a99ad4a4d59f4d0a6fe9eb5169488fecfceff71" translate="yes" xml:space="preserve">
          <source>HTMLIFrameElement.allowPaymentRequest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222e9aa07498ee6dfc8d857e95a0b43eaf638d5d" translate="yes" xml:space="preserve">
          <source>HTMLIFrameElement.contentDocument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d93ca5fbf677974638a3ffccbcfe94044d4bcb" translate="yes" xml:space="preserve">
          <source>HTMLIFrameElement.contentWindow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5302f7a526d5837041b8b951e2f4ccb4ab3ccc" translate="yes" xml:space="preserve">
          <source>HTMLIFrameElement.csp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f044cc76291a94931791f4133add3eedc838ea00" translate="yes" xml:space="preserve">
          <source>HTMLIFrameElement.policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e937ab940bd3e4a45249bcc2b6fb961e6ea018da" translate="yes" xml:space="preserve">
          <source>HTMLIFrameElement.referrerPolicy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fd0389199788e0184c4dd1ecfe26d9d8143a4b" translate="yes" xml:space="preserve">
          <source>HTMLImageElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca4152bb4b2b64bec1a90d4bfe049276ef8a911" translate="yes" xml:space="preserve">
          <source>HTMLImageElement.Image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019c140e5b13b01a71dc5e83101aac7536c7ee20" translate="yes" xml:space="preserve">
          <source>HTMLImageElement.decoding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15903fc74cf4becf567e0f5f1da397244ad58ca" translate="yes" xml:space="preserve">
          <source>HTMLImageElement.referrerPolicy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea7428962b4eab77b6a9c79b10e14f93ef48af5" translate="yes" xml:space="preserve">
          <source>HTMLInputElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd003024f03ce4e7ad82e488ab9975b91a410ecf" translate="yes" xml:space="preserve">
          <source>HTMLInputElement.labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71eba33fd3b81727af97903a6fa6452229b0c4dd" translate="yes" xml:space="preserve">
          <source>HTMLInputElement.multiple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b233c47b86be0eedfd3615d71e6efe0def0b50e0" translate="yes" xml:space="preserve">
          <source>HTMLInputElement.select</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7d55b53d87e5e4610d6374f2140737f4acdfca" translate="yes" xml:space="preserve">
          <source>HTMLInputElement.setSelectionRange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3369c5b08487d4638d5dc6658d6f8bea0d5c4bc0" translate="yes" xml:space="preserve">
          <source>HTMLIsIndexElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7573714df808d29e45a8a6550293bf593dfce530" translate="yes" xml:space="preserve">
          <source>HTMLLIElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605c113f4223fec1c4a48abd1b68cb3490c38169" translate="yes" xml:space="preserve">
          <source>HTMLLabelElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfd38827e7f8b638021b877924d2bbcf162448e" translate="yes" xml:space="preserve">
          <source>HTMLLabelElement.control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b54a9f96e971a0e525d96fb40a7eadcd70d959" translate="yes" xml:space="preserve">
          <source>HTMLLabelElement.form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8645f81b4b1b64ea78b26da65311d62ffc53b608" translate="yes" xml:space="preserve">
          <source>HTMLLabelElement.htmlFor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15097cedb561ff44c181b2c5d7673ab50647524" translate="yes" xml:space="preserve">
          <source>HTMLLegendElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79d5efedeaaa82b1c768a81239ba0d71cb9ef79" translate="yes" xml:space="preserve">
          <source>HTMLLinkElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9927d6f1311436a2d5a64f09199f5ad0e62f647" translate="yes" xml:space="preserve">
          <source>HTMLLinkElement.as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d634bb4395926bee75744e074e1ce603ca327d8" translate="yes" xml:space="preserve">
          <source>HTMLLinkElement.referrerPolicy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a3254e10c963dcca79cb8ee501b2d92019984b" translate="yes" xml:space="preserve">
          <source>HTMLLinkElement.rel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d0ea93bae95bf26ee025cf7a3f10f8e0f8bca9" translate="yes" xml:space="preserve">
          <source>HTMLLinkElement.relList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68eadd32365fb4c5a8c5ca0b24dba2fe8b1d8c6" translate="yes" xml:space="preserve">
          <source>HTMLMapElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d934dabe14fcbf6159af39c7d4986f83daa4679" translate="yes" xml:space="preserve">
          <source>HTMLMarqueeElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d701d2f377ac4879ee88d39b7d81ddc45777b358" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983fe2ddfdee558d4502c5117528b189e8e07663" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement is active and has selected a resource, but is not using the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df27f2ac58cfc9629e95f8b2bfdd7171d936443f" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.audioTracks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353b373a92009d5526a4450639ca2a49d0a19b1e" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.autoplay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51596f2284741b96a0ec6b8a5fefd012433a4671" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.buffered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45befb85563af45a629f063afea7624134714e3a" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.canPlayType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed70cd8733c5f927b12f7dc6acf1516d61a9b4b" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.captureStream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f642400d48022b7d60fe9cfdbfb375df8bf433bf" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.controller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2224357a5d29ad01ef34b6394ce9b4b49b55cc" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec2feb911957a901f9375ed242adaade7ec0350" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.controlsList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183d721f821442216eee42e8122ff4a8968309e7" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.crossOrigin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e40138b0ca5c0c7f444b1abb7b1af1665e7f4b" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.currentSrc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d872d3d0901ec53522adad230823658426feaa2" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.currentTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaa59b321dce4d3c22425b2250dea28f7007d12" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.defaultMuted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdd3c562ce3e9b3b48ce70c110d6a8dbe3537e3" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.defaultPlaybackRate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef33c262783c3e0e7854432b6c0deb2d840ace1" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.disableRemotePlayback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b342865f14f2fab1222b3c3ef4fff5b663b0fe" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f07c1fb52d90ceecd60fbddfd8ffb317e830dd" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.ended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fc4d206381cd888943bbb6cd65a7ae6d9c58ac" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8292d96debae4e5186f79f08052eb52ceaefd5e" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.fastSeek</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9554aca130b017deeaab4f5a277e5462064555b" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.initialTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c468b19975a891713c82fc01188604dc0309f1ae" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac20f54aec9411fa4d18140dfcea28a3db90a8e5" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53c510c158cbcc87d7c8abc1214da0858efe0ea" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.mediaGroup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b6a505c865d4df47d487894bbc1d105f227969" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.muted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f13162aefd1a6804efac3218631d348a1a54849" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.networkState</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dafcb1c9a8f24361afd6db3cb5264eff6ed0314" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.onencrypted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7559200446ee2ee487b1807060a62a7f7ca986c" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.onerror</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de8707862c2fccb2dd30c05e017c57f99302565" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.onwaitingforkey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187e5f8a9d83b44fd7bea4c9612a00c5c7e7515a" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.pause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfdfe28a9cacea9795bd9d59a32263e40f3a0e7" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.paused</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c703f6dd108f5e51996f17143927b23898d6bd67" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.play</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8eddf12af1d82e3126fe37d76019a76631a31f" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.playbackRate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c880dd2f2724af086789faac6c5ee6a46db5aa" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.readyState</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da2520398af00a7f9d63ab1d465231e0ce95d66" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.seekable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2d244459299e7a0d216dcbbd01ca83ef1903bf" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.setMediaKeys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044aead2f1ec2a92d0a5e8a625776064f71809d8" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.setSinkId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744c1da01fb4d06c250502c7160c6bf80d059e33" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.sinkId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f461063737ebecc2c6395ed53aa0f72fc57133" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb97dacfe9b9bf11a7b804ddf95251322e61971e" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.srcObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04910cff778b79de57875965fc836fdf35cd9b43" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.videoTracks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbef30c185c5bd4c5bbdb8b3031c768475966f1" translate="yes" xml:space="preserve">
          <source>HTMLMediaElement.volume</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da95dd564f0f914c2c95887be551d697247e5a0" translate="yes" xml:space="preserve">
          <source>HTMLMetaElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224a522d747da48851c269311c32d304028f8eef" translate="yes" xml:space="preserve">
          <source>HTMLMeterElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbf747b31f8e5258a5cc64ed336880cb186c0fb" translate="yes" xml:space="preserve">
          <source>HTMLMeterElement.labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5969bc82017d139f5b69e364a6a1a36bba1916a" translate="yes" xml:space="preserve">
          <source>HTMLModElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704a734a84f99c587ef8d1f74bf77a6b79cc5fd5" translate="yes" xml:space="preserve">
          <source>HTMLOListElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd753b22f712b34b20a87c86f6e3ec3f137bdc37" translate="yes" xml:space="preserve">
          <source>HTMLObjectElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c56d9ebf02e5efbd18420ab1ec313996914acd" translate="yes" xml:space="preserve">
          <source>HTMLObjectElement.typeMustMatch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370413c9713178daeb963264c10f07bcbe110230" translate="yes" xml:space="preserve">
          <source>HTMLOptGroupElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e4f058b4d08ba44ebc46a2c02321be4db522a8" translate="yes" xml:space="preserve">
          <source>HTMLOptionElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2500a23c2956d0579fbfda3d9657ef1bc5b45580" translate="yes" xml:space="preserve">
          <source>HTMLOptionElement.Option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0616337b817cc0940657dd669485ff93de8248" translate="yes" xml:space="preserve">
          <source>HTMLOptionsCollection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05fe4638b01060fe102bea850023fc7bc992dc0" translate="yes" xml:space="preserve">
          <source>HTMLOutputElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cb90b1d66c7639d7e8836d8dd1f9323c653ea6" translate="yes" xml:space="preserve">
          <source>HTMLOutputElement.labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9197fc5c5ff5d247e0e6b55301a5cd234a4f6d1" translate="yes" xml:space="preserve">
          <source>HTMLParagraphElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b967794c7978525bf0a25d0a40bf95f02730b1f1" translate="yes" xml:space="preserve">
          <source>HTMLParamElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3868c13f99d5832af3f88d4dd9dc1b644b1491" translate="yes" xml:space="preserve">
          <source>HTMLPictureElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a23902f89dd0de192f98a70dfa3e36e1037691" translate="yes" xml:space="preserve">
          <source>HTMLPreElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033ef616c7b62ca2ebf710e246c887ee0ce6dbda" translate="yes" xml:space="preserve">
          <source>HTMLProgressElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f9cdcf094c713531b7ec315e2dc9bd91a0ef5b" translate="yes" xml:space="preserve">
          <source>HTMLProgressElement.labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb0d8d61c9d0428b92ba4bc19744959c3d39ef9" translate="yes" xml:space="preserve">
          <source>HTMLQuoteElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf11be5fdf421f7c9e8aa8b2dbf09c4ba061d2c" translate="yes" xml:space="preserve">
          <source>HTMLScriptElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fb48599d8395b529dfa1afcd9ada423e6bb5b1" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4326bdf718d65a32003d87e2b4eb1ba229e4f642" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d351d38cc39eb105079fa1916cb7346c032fee04" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.autofocus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a21202131939bcf1251c6154dc99f376b99f5e" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.checkValidity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057187c3914182ff1c7e340f9b22853a82a2d25b" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.disabled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faef4c40704d0522c8255994cfa81e9a720a21dd" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a661b6f9e40460b86bfc0b1e220aed6dcfa26af9" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80038613f9552382fa60bcdacb825f074f0f06ad" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f1de715029f613cbfcd0a1188f428e3d4a2675" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.namedItem</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9750f16a4f824460e2d70dad5a3d4793f8915acb" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8835ee4dbcb318c5344d9259d816e619c07842" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.selectedIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1dac7bbcf61e4bd05425ece3b361f1574fd27a" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.selectedOptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc0a0de70c71b9265103684c5276f5bd2dfe3e7" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.setCustomValidity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bf75cb71a6fce80f08704f64ae98f4c426503a" translate="yes" xml:space="preserve">
          <source>HTMLSelectElement.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046b9127868ebc55f138e609df910ee21876f5cb" translate="yes" xml:space="preserve">
          <source>HTMLSlotElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69274558605e1db266c5bc3a1b7ed27274f4852" translate="yes" xml:space="preserve">
          <source>HTMLSlotElement.assignedNodes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d74b7116aeecc4051507ff2f042eb1d4bec4ff" translate="yes" xml:space="preserve">
          <source>HTMLSlotElement.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84fc04af9dbadcce1c0dd9a5d37043b9aec0505" translate="yes" xml:space="preserve">
          <source>HTMLSourceElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74aca71d875e2c7ac4fc73111185a916e70037f5" translate="yes" xml:space="preserve">
          <source>HTMLSpanElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034f48c922c4f168504384647b5fc2b3ad7fd43b" translate="yes" xml:space="preserve">
          <source>HTMLStyleElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9636af6fd7c4363dc6d952c1b811fa77facbe9" translate="yes" xml:space="preserve">
          <source>HTMLStyleElement.media</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba05b8ce03c711fb3ec4197aef828a5eb8d80e2" translate="yes" xml:space="preserve">
          <source>HTMLStyleElement.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c803980ca5c6855fc823f5d7702304a9b5b852ca" translate="yes" xml:space="preserve">
          <source>HTMLTableCaptionElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffe772beb7aca34714a8b63efbfbd3d5058c376" translate="yes" xml:space="preserve">
          <source>HTMLTableCellElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e552bfea8b141635b7a8efb608ce386a9c6aa03" translate="yes" xml:space="preserve">
          <source>HTMLTableColElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0099945b67457b130c79fe7804b204cde656e3" translate="yes" xml:space="preserve">
          <source>HTMLTableElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a19640ea9c15f5144d9e948090697ea94b81561" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.align</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0711ec0cb35baa4d447f9cef8ef3f5124cc6741" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.bgColor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0b721c79da8b69b739792ecdc6aaed5e4b5f0c" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.caption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082c598684e6e18601d9a49da2554765c3d779ca" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.cellPadding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a117e50c97a291c8eec5288f61fdfd427c0512" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.cellSpacing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e7e9599282f26c0c22ea491f73679ed2f902af" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.createCaption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725a32c90afb468f814e5f52816bbfb2e20d122c" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.createTFoot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7b7f570c2811d0d4cf37e914648479ae51ac73" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.createTHead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e5abbb2394d9b2125f8e11410184e0941205a4" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.deleteCaption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5449f891301b315676c4473312b98fd4bd8cf6d3" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.deleteRow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e38744945602770f9cc4da0c5e9059a581afe49" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.deleteTFoot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5a0e8ce18264e3ff34ea8d186f0d695f997cd5" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.deleteTHead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b8421ed32c6da0611b22b211ff324871ba4d5a" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.frame</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69bc6aad0e5d20bbc06a7aedab6834d4aaea3e1" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.insertRow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f81181120e1e27abe2516166012ed4b1627edc" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008b4a2a4496bb22d14a92e95b0827b14a2cfe5e" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec939d4711ef1427743da78cf18849d619a4cf7" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.summary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5e937d4f9e9bf2d32d7950868752b8943d5202" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.tBodies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c087831b815ddf3a31c6cb8e639b7d6f71af3894" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.tFoot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2172b191f8af1eecd7519a958ce78928817f8c86" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.tHead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e75155d095fd811ffda76145628f242d7c3a488" translate="yes" xml:space="preserve">
          <source>HTMLTableElement.width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f149358838d3fb3dec4e32e51d7d064a5b34a73" translate="yes" xml:space="preserve">
          <source>HTMLTableRowElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ba3aa849bc4f11144a7763fb5c30b7d3e1df82" translate="yes" xml:space="preserve">
          <source>HTMLTableRowElement.insertCell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fcc1e80436a2cb450a0fe49ffc3563a96b2adf" translate="yes" xml:space="preserve">
          <source>HTMLTableRowElement.rowIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c105749aa18b5099ce5e19dc3ecaf296ca7ca947" translate="yes" xml:space="preserve">
          <source>HTMLTableSectionElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d9ee5dce9653f42e6b3b0233aa8788c7811f40" translate="yes" xml:space="preserve">
          <source>HTMLTemplateElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2973e6f69f5651526d68d54dbec9a648637161d4" translate="yes" xml:space="preserve">
          <source>HTMLTextAreaElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a532e3923f90ca4a1becc0f715a8ca3c1e9860" translate="yes" xml:space="preserve">
          <source>HTMLTextAreaElement.labels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaaede35a7bcbfda340674ae6ac2fd1b18ba112e" translate="yes" xml:space="preserve">
          <source>HTMLTimeElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00096a6b916f5b015b9a13656e5a9791dddd8955" translate="yes" xml:space="preserve">
          <source>HTMLTimeElement.dateTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3297feec2c1f2173a6695dd3e76814c010e056f" translate="yes" xml:space="preserve">
          <source>HTMLTitleElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8726d35b8ceef45b63a787e0b9183f07dedfcb6" translate="yes" xml:space="preserve">
          <source>HTMLTrackElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3709e51c17b000f9f46ebf417941826f4cbe9dad" translate="yes" xml:space="preserve">
          <source>HTMLTrackElement.src</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ce626196a10ce1ebf2f061a203804262bedb0d" translate="yes" xml:space="preserve">
          <source>HTMLUListElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4879a015812fc6b3a8340300e20f32f078b752" translate="yes" xml:space="preserve">
          <source>HTMLUnknownElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c840a5cf4d4a56e86a012a99a11d3c40d511c9c0" translate="yes" xml:space="preserve">
          <source>HTMLVideoElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ea68733385e2717e9d88867dc37f97972ce8d9" translate="yes" xml:space="preserve">
          <source>HTMLVideoElement.getVideoPlaybackQuality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae64317bee5c7a4e591e3e53ed4cb3206a34661" translate="yes" xml:space="preserve">
          <source>HTTP Link Header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3011c4648149010aa06cb7cf6e2ab15d1d7ec22c" translate="yes" xml:space="preserve">
          <source>HTTP access control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72415c440e213c6d004ac91dca8ca159f78b804a" translate="yes" xml:space="preserve">
          <source>HTTP access control (CORS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d913ef28f4b5c9d1334d825b1c91fdfabe426299" translate="yes" xml:space="preserve">
          <source>HTTP cookies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c912176e43d8a0154d256f51f9843aa238a595f" translate="yes" xml:space="preserve">
          <source>HTTP header &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy&quot;&gt;&lt;code&gt;Referrer-Policy&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee53c95b1d46b2119a03c49e611077033b4d0b3" translate="yes" xml:space="preserve">
          <source>HTTP headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a39743a081af181e417b03770a2a6272b69c6e2" translate="yes" xml:space="preserve">
          <source>Hacks blog post - Using the Battery API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873a00e52cfb71274bf3dfff5f992a8d3097b826" translate="yes" xml:space="preserve">
          <source>Had we been querying the decodability of an audio file, we would create an audio configuration including the number of channels and sample rate, and excluding the dimensions and framerate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8370b0a249d25961bd0c819e2446d9b81f5c4b33" translate="yes" xml:space="preserve">
          <source>Had we been testing encoding capabilities, we would have created a &lt;a href=&quot;../mediaencodingconfiguration&quot;&gt;&lt;code&gt;MediaEncodingConfiguration&lt;/code&gt;&lt;/a&gt;, which requires the type of media being tested &amp;mdash; either &lt;code&gt;record&lt;/code&gt; (for recording media, i.e. a &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; object) or &lt;code&gt;transmission&lt;/code&gt; (for media transmitted over electronic means like &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;) &amp;mdash; plus either an audio or video configuration as described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb6191f6a174dcad718aef347479a9d46713273" translate="yes" xml:space="preserve">
          <source>Half floating-point color buffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78d3278125ea172c47db3b6f80e33dc5790aabd" translate="yes" xml:space="preserve">
          <source>Half floating-point type (16-bit).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d74ee49c5173835d2339b4703e957368034697d" translate="yes" xml:space="preserve">
          <source>Han/Yeong</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa6496c17c7577394af25f4703ebad7bf3256f0" translate="yes" xml:space="preserve">
          <source>Handle clicks on the button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5478d033297fefd5973842d09cd52c15adad56a3" translate="yes" xml:space="preserve">
          <source>Handle keyboard events in a game</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2db559c2497f969311f440c265d4a5e6db35022" translate="yes" xml:space="preserve">
          <source>Handle the drop &lt;em&gt;effect&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2d67fd740d7ec7df3d8674c33679652ab92712" translate="yes" xml:space="preserve">
          <source>Handling Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63da677239ef90b636e6f02afe47cd19d5e1565c" translate="yes" xml:space="preserve">
          <source>Handling HTML on older browsers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d79e9955ddfb04b1d562478351dc4c93e550193" translate="yes" xml:space="preserve">
          <source>Handling address changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273b419523744252d2064b7de4557062d9731c29" translate="yes" xml:space="preserve">
          <source>Handling binary data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab05242f72f592d7a174e285b18daf98a1da37ec" translate="yes" xml:space="preserve">
          <source>Handling canceled touches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc3733e0969d0af31ef9a6f1ec7d5ab953ce73e" translate="yes" xml:space="preserve">
          <source>Handling channel status changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35cd44e84c56aa370ad628bb3149018ec3d72fc9" translate="yes" xml:space="preserve">
          <source>Handling clicks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1db8c36ed7a437e4c40d8653893a0ab8470b5f" translate="yes" xml:space="preserve">
          <source>Handling device list changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194f18c531e99aa0099173b47fca9138d9439424" translate="yes" xml:space="preserve">
          <source>Handling document visibility changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff95a68349ac5719cbe822be8e2a9ba9e81d9c0" translate="yes" xml:space="preserve">
          <source>Handling errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d59c3498489118b2f4c1a1f8bbd6a74c61e78a" translate="yes" xml:space="preserve">
          <source>Handling errors and unrecognised speech</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bbfe84f593aacd88c231dd9c437aa8c4977013" translate="yes" xml:space="preserve">
          <source>Handling getUserMedia() errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da209902c806ee4bb6700e6feb38e1d437fb04b" translate="yes" xml:space="preserve">
          <source>Handling input for virtual reality applications is an interesting topic &amp;mdash; it's a totally new experience for which dedicated user interfaces have to be designed. There are various approaches right now from classic keyboard and mouse, to new ones like Leap Motion and the VIVE controllers. It's a matter of trial and error to see what works in given situations and what inputs fit best for your type of game.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5408c2fa102345a712ed75e11e4a46467ea7ac" translate="yes" xml:space="preserve">
          <source>Handling intersection changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5577cd665df13ee95602e70d9d804026840113" translate="yes" xml:space="preserve">
          <source>Handling periodic actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c35a63579a3a2dc14d3a335080caeef797223ca" translate="yes" xml:space="preserve">
          <source>Handling responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d36146607aa67680ef06e9db53c3520202bec10" translate="yes" xml:space="preserve">
          <source>Handling successful peer connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa12ac6399a0be8624ed311aa5ee04062259e55" translate="yes" xml:space="preserve">
          <source>Handling the end of a touch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191f26385be90f6d5d33e68579c3dbdab8479e9e" translate="yes" xml:space="preserve">
          <source>Handling the invitation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaadd728d805cdf654121b526b1cf7a0ca1fda50" translate="yes" xml:space="preserve">
          <source>Handling the removal of tracks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0291e226f2fc8867ad6e7d9dd86d7a204320974" translate="yes" xml:space="preserve">
          <source>Handling the response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a5279d91a11ccb4cf61b6b3f14b7d69ef11542" translate="yes" xml:space="preserve">
          <source>Handling the stop button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411d1b40fd8b8533b79f39de29249ff4347a133d" translate="yes" xml:space="preserve">
          <source>Handling the upload process for a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a9ecde0b1a56aa31d06046e89ed32b5871b88c" translate="yes" xml:space="preserve">
          <source>Handshaking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3cbc3e18aebd2cc4de7cb3a52bdca1860cf27c" translate="yes" xml:space="preserve">
          <source>Hanging up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1aedd4137d09335846e86384b9e2b7b4866f2b8" translate="yes" xml:space="preserve">
          <source>Hanja</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bada9947805c4658927c5d1ce99fe27c699b18e9" translate="yes" xml:space="preserve">
          <source>HashChangeEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20407232d5219057ee0dee76f64661f9f738f9a" translate="yes" xml:space="preserve">
          <source>HashChangeEvent.newURL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc3d0dc5dfc515f7dac6db1b4691f21dc4680ff" translate="yes" xml:space="preserve">
          <source>HashChangeEvent.oldURL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83f27459e45ac0c37c7c1be210b6a25d145a2bd" translate="yes" xml:space="preserve">
          <source>Have a look at our &lt;a href=&quot;https://mdn.github.io/dom-examples/insert-adjacent/insertAdjacentElement.html&quot;&gt;insertAdjacentElement.html&lt;/a&gt; demo on Github (see the &lt;a href=&quot;https://github.com/mdn/dom-examples/blob/master/insert-adjacent/insertAdjacentElement.html&quot;&gt;source code&lt;/a&gt; too.) Here we have a sequence of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; elements inside a container. When one is clicked, it becomes selected and you can then press the &lt;em&gt;Insert before&lt;/em&gt; and &lt;em&gt;Insert after&lt;/em&gt; buttons to insert new divs before or after the selected element using &lt;code&gt;insertAdjacentElement()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1ce271327194ecc208f549884369400994fc15" translate="yes" xml:space="preserve">
          <source>Have a look at our &lt;a href=&quot;https://mdn.github.io/dom-examples/insert-adjacent/insertAdjacentText.html&quot;&gt;insertAdjacentText.html&lt;/a&gt; demo on GitHub (see the &lt;a href=&quot;https://github.com/mdn/dom-examples/blob/master/insert-adjacent/insertAdjacentText.html&quot;&gt;source code&lt;/a&gt; too.) Here we have a simple paragraph. You can enter some text into the form element, then press the &lt;em&gt;Insert before&lt;/em&gt; and &lt;em&gt;Insert after&lt;/em&gt; buttons to insert it before or after the existing paragraph text using &lt;code&gt;insertAdjacentText()&lt;/code&gt;. Note that the existing text node is not added to &amp;mdash; further text nodes are created containing the new additions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247384a749a8c07663e77901632fd31cb1e8deb9" translate="yes" xml:space="preserve">
          <source>Having a properly fragmented MP4 file is all you need to get started. If you wish to employ adaptive bitrate streaming, you'll have to create encodings at multiple resolutions. While MSE is flexible enough to allow you to make your implementation, it's highly recommended to use an existing DASH client as DASH is a well-specified application protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e9a3bb3e400996f46e2c59fd84c27fb4d53739" translate="yes" xml:space="preserve">
          <source>Having created a square plane in the &lt;a href=&quot;adding_2d_content_to_a_webgl_context&quot;&gt;previous demonstration&lt;/a&gt;, the next obvious step is to add a splash of color to it. We can do this by revising the shaders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11738a4726b7a1b8048b52111d0cd68dea353e30" translate="yes" xml:space="preserve">
          <source>Having done this, the next time the shading functions are called, their own variables named &lt;code&gt;uScalingFactor&lt;/code&gt;, &lt;code&gt;uGlobalColor&lt;/code&gt;, and &lt;code&gt;uRotationVector&lt;/code&gt; will all have the values provided by the JavaScript code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78abd63ace03e91f284d7d06b97a4a6d9382691e" translate="yes" xml:space="preserve">
          <source>Having set up the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt;, we can now schedule some updates to its Y-axis rotation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff279884789f11ce46eb3f0dd9ca22e8a713cd3a" translate="yes" xml:space="preserve">
          <source>Head tracking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8917747bfce9880f54c28beead8663e17a4a5c7" translate="yes" xml:space="preserve">
          <source>Headers.append</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32e2c3b03a6fd96dd39f4b9d9a842779f33e757" translate="yes" xml:space="preserve">
          <source>Headers.constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28ad95af527e367d6d29611dc7623a5fb9522b6" translate="yes" xml:space="preserve">
          <source>Headers.delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c682df9f62ec6f68e2ed17417b1d404888da9715" translate="yes" xml:space="preserve">
          <source>Headers.entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c605dff09452c7700b7698638e89cdcda28e877" translate="yes" xml:space="preserve">
          <source>Headers.get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b418b5d1b449d35665a6062ffabfd6346d3da2a9" translate="yes" xml:space="preserve">
          <source>Headers.getAll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b0220ff7e78a598fefef60245a38c2ca5f01e0" translate="yes" xml:space="preserve">
          <source>Headers.has</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfec0e5b6102e747fc24ac6bcc82818d6ee058b1" translate="yes" xml:space="preserve">
          <source>Headers.keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df4fd92e6768a3ffd59d25b179a7c980b048bed" translate="yes" xml:space="preserve">
          <source>Headers.set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661910ccb4306eb93fe64646791b38bc63cd147a" translate="yes" xml:space="preserve">
          <source>Headers.values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c3d2c729cba6c322d38f730672201e44d3fcb0" translate="yes" xml:space="preserve">
          <source>Height (in pixels) of the browser window viewport including, if rendered, the horizontal scrollbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04629d3d65a39a53bbc1c27899d2ff4f9746aab" translate="yes" xml:space="preserve">
          <source>Height of the rectangle to be painted. Defaults to the height of the image data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a512c2226af6eaf6ff9afe1f701c3204ed25c4da" translate="yes" xml:space="preserve">
          <source>Hello GLSL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f11cc4340f165fbc79faee635e0463984738c2" translate="yes" xml:space="preserve">
          <source>Hello vertex attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bc08d4c80c30f2be3165cac73104d43bcbd96a" translate="yes" xml:space="preserve">
          <source>Here are a few examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bf193b4d1b984533fee35dc30ba1a384220351" translate="yes" xml:space="preserve">
          <source>Here are a set of functions that return the rotation matrices. One big note is that there is no perspective applied, so it might not feel very 3D yet. The flatness is equivalent to when a camera zooms in really close onto an object in the distance &amp;mdash; the sense of perspective disappears.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ca3372288721217ea3ab062a600741436144ce" translate="yes" xml:space="preserve">
          <source>Here are some &lt;em&gt;best practices&lt;/em&gt; to consider when using pointer events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce01cf32e3158bcd2614cb94fecb3a3dbc67ee6d" translate="yes" xml:space="preserve">
          <source>Here are some &lt;em&gt;best practices&lt;/em&gt; to consider when using touch events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5bfd5fef35c21c6dddb11535f3dd16a840a700" translate="yes" xml:space="preserve">
          <source>Here are the full implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf84d652ddcbc31ea3dc7b302c126e0758d172f" translate="yes" xml:space="preserve">
          <source>Here are the functions used to perform these steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33fe80703decd751f7ef50cc9780e7171dafba0" translate="yes" xml:space="preserve">
          <source>Here is a code snippet of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; event handler calling &lt;code&gt;preventDefault()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e4bb8601ae3c0cfaa323eee197f529b20667e9" translate="yes" xml:space="preserve">
          <source>Here is a complete example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a712042b425c9fafc6449d2ff7ebee63b35e87" translate="yes" xml:space="preserve">
          <source>Here is a function that detects whether localStorage is both supported and available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6588cdd2444b060d3131c077828e75de9d2b02" translate="yes" xml:space="preserve">
          <source>Here is a live demo of the code above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f6eb22b986d641cf51c9cad41d6a31a6f7c93c" translate="yes" xml:space="preserve">
          <source>Here is a minimalistic template, which we'll be using as a starting point for later examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845cd957b5ab805a10981d76584f0390da31b788" translate="yes" xml:space="preserve">
          <source>Here is a segment of code taken from the code that goes with the article &lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt;. This code comes from the handler for the message sent to carry an offer to another peer across the signaling channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3402770d651df72e674b63fe325732d483e9a2c9" translate="yes" xml:space="preserve">
          <source>Here is a simple usage of rect interface. (Changing the color of the rect interface on every click)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488464ca7ae190019450473e23c7777c756f8857" translate="yes" xml:space="preserve">
          <source>Here is an example of using &lt;code&gt;pointerLockElement&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f6dee090670387c6ed09f51e5771cf427aefe3" translate="yes" xml:space="preserve">
          <source>Here is an example which allows a section of content to be dragged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18862d263bdbcacfe65579a808a13f7cc086bab" translate="yes" xml:space="preserve">
          <source>Here is how a template would look in action. As shown here, it is initially blank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db868bc30bcdb7d6ff938cec948c013a8b58657" translate="yes" xml:space="preserve">
          <source>Here is the prefered method along with two other &quot;possible&quot; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5dacdee009cef8ed076477a119e69f9eef09daa" translate="yes" xml:space="preserve">
          <source>Here is the result of the preceding code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f2f54a9faafe137b5e5c6dafed84cac88fc7c4" translate="yes" xml:space="preserve">
          <source>Here our loop handling the user-selected files looks at each file's &lt;code&gt;type&lt;/code&gt; attribute to see if its MIME type begins with the string &quot;&lt;code&gt;image/&lt;/code&gt;&quot;). For each file that is an image, we create a new &lt;code&gt;img&lt;/code&gt; element. CSS can be used to establish any pretty borders or shadows and to specify the size of the image, so that doesn't need to be done here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306695f9eb1b05aecd7ead9d47f7c2ef23c74aff" translate="yes" xml:space="preserve">
          <source>Here our values range from -1 (far left) and 1 (far right). Again let's use a range type input to vary this parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e72787feec2c11e2aad600dc6bc39fb22785918" translate="yes" xml:space="preserve">
          <source>Here we access a &lt;code&gt;Storage&lt;/code&gt; object by calling &lt;code&gt;localStorage&lt;/code&gt;. We first test whether the local storage contains data items using &lt;code&gt;!localStorage.getItem('bgcolor')&lt;/code&gt;. If it does, we run a function called &lt;code&gt;setStyles()&lt;/code&gt; that grabs the data items using &lt;a href=&quot;storage/getitem&quot;&gt;&lt;code&gt;Storage.getItem()&lt;/code&gt;&lt;/a&gt; and uses those values to update page styles. If it doesn't, we run another function, &lt;code&gt;populateStorage()&lt;/code&gt;, which uses &lt;a href=&quot;storage/setitem&quot;&gt;&lt;code&gt;Storage.setItem()&lt;/code&gt;&lt;/a&gt; to set the item values, then runs &lt;code&gt;setStyles()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99fb80da1d289ba358922b34b7af17caeed205a1" translate="yes" xml:space="preserve">
          <source>Here we add an &lt;code&gt;install&lt;/code&gt; event listener to the service worker (hence &lt;code&gt;self&lt;/code&gt;), and then chain a &lt;a href=&quot;../extendableevent/waituntil&quot;&gt;&lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt;&lt;/a&gt; method onto the event &amp;mdash; this ensures that the service worker will not install until the code inside &lt;code&gt;waitUntil()&lt;/code&gt; has successfully occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4707b2b75de1a55618703bf702807cace6f9086" translate="yes" xml:space="preserve">
          <source>Here we add an event listener to the &lt;code&gt;window&lt;/code&gt; object that fires when the &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object associated with the current origin is changed. As you can see above, the event object associated with this event has a number of properties containing useful information &amp;mdash; the key of the data that changed, the old value before the change, the new value after that change, the URL of the document that changed the storage, and the storage object itself (which we've stringified so you can see its content).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d57829157fe5e886052e0084ddd914e8073a06" translate="yes" xml:space="preserve">
          <source>Here we alter the position of the cube on the screen according to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GamepadPose/position&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GamepadPose/orientation&quot;&gt;&lt;code&gt;orientation&lt;/code&gt;&lt;/a&gt; data received from the connected controller. These values (stored in &lt;code&gt;curPos&lt;/code&gt; and &lt;code&gt;curOrient&lt;/code&gt;) are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt;s containing the X, Y, and Z values (here we are just using [0] which is X, and [1] which is Y).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b12178a9bfdb3b36730d3587eedf9438d7108e" translate="yes" xml:space="preserve">
          <source>Here we are fetching a JSON file across the network and print it to the console. The simplest use of &lt;code&gt;fetch()&lt;/code&gt; takes one argument &amp;mdash; the path to the resource you want to fetch &amp;mdash; and returns a promise containing the response (a &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bbc4dafbc47ebd5e5f60855db661fb388427c3" translate="yes" xml:space="preserve">
          <source>Here we are grabbing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState&quot;&gt;&lt;code&gt;VRPositionState&lt;/code&gt;&lt;/a&gt; object using &lt;a href=&quot;positionsensorvrdevice/getstate&quot;&gt;&lt;code&gt;PositionSensorVRDevice.getState()&lt;/code&gt;&lt;/a&gt; and storing it in &lt;code&gt;posState&lt;/code&gt;. We then check to make sure that position and orientation info is present in the current frame using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState/hasPosition&quot;&gt;&lt;code&gt;VRPositionState.hasPosition&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState/hasOrientation&quot;&gt;&lt;code&gt;VRPositionState.hasOrientation&lt;/code&gt;&lt;/a&gt; (these return &lt;code&gt;null&lt;/code&gt; if, for example the head mounted display is turned off or not pointing at the position sensor, which would cause an error.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebce40046068a2a362dc09ec8695a169b9d563c" translate="yes" xml:space="preserve">
          <source>Here we are grabbing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState&quot;&gt;&lt;code&gt;VRPositionState&lt;/code&gt;&lt;/a&gt; object using &lt;code&gt;getImmediateState()&lt;/code&gt; and storing it in &lt;code&gt;posState&lt;/code&gt; (the actual live demo uses &lt;code&gt;getState()&lt;/code&gt;, but both seem to do the same thing currently.) We then check to make sure that position and orientation info is present in the current frame using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState/hasPosition&quot;&gt;&lt;code&gt;VRPositionState.hasPosition&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState/hasOrientation&quot;&gt;&lt;code&gt;VRPositionState.hasOrientation&lt;/code&gt;&lt;/a&gt; (these return &lt;code&gt;null&lt;/code&gt; if, for example the head mounted display is turned off or not pointing at the position sensor, which would cause an error.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbd48f917f06d92a2da2839617ade74aea22b0a" translate="yes" xml:space="preserve">
          <source>Here we are grabbing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState&quot;&gt;&lt;code&gt;VRPositionState&lt;/code&gt;&lt;/a&gt; object using &lt;code&gt;getState()&lt;/code&gt; and storing it in &lt;code&gt;posState&lt;/code&gt;. We then check to make sure that position and orientation info is present in the current frame using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState/hasPosition&quot;&gt;&lt;code&gt;VRPositionState.hasPosition&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState/hasOrientation&quot;&gt;&lt;code&gt;VRPositionState.hasOrientation&lt;/code&gt;&lt;/a&gt; (these return &lt;code&gt;null&lt;/code&gt; if, for example the head mounted display is turned off or not pointing at the position sensor, which would cause an error.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b33a67c8a5829a2d33960f721ee9e4516a8ea30" translate="yes" xml:space="preserve">
          <source>Here we fetch the color of the texel, just like we did in the previous example, but before setting the color of the fragment, we multiply the texel's color by the lighting value to adjust the texel's color to take into account the effect of our light sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1362cb37e641ae91fd13d3076a41e9b615b957be" translate="yes" xml:space="preserve">
          <source>Here we first use a tracking variable, &lt;code&gt;initialRun&lt;/code&gt;, to note that this is the first time we have loaded the page. You'll find out more about this later on. Next, we detect to see if the WebVR and Gamepad APIs are supported by cheking for the existence of the &lt;a href=&quot;../navigator/getvrdisplays&quot;&gt;&lt;code&gt;Navigator.getVRDisplays()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getGamepads&quot;&gt;&lt;code&gt;Navigator.getGamepads()&lt;/code&gt;&lt;/a&gt; methods. If so, we run our &lt;code&gt;reportDisplays()&lt;/code&gt; custom function to start the process off. This function looks like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a4689b20be4b1295ae45f78602a374509e4802" translate="yes" xml:space="preserve">
          <source>Here we get the connected gamepads with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getGamepads&quot;&gt;&lt;code&gt;Navigator.getGamepads&lt;/code&gt;&lt;/a&gt;, then store the first gamepad detected in the &lt;code&gt;gp&lt;/code&gt; variable. As we only need one gamepad for this demo, we'll just ignore the others.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cfdb754916178960a6b34d5033e07f3a67ade1" translate="yes" xml:space="preserve">
          <source>Here we grab references to all the slots, then add a slotchange event listener to the 2nd slot in the template &amp;mdash; which is the one that keeps having its contents changed in the example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794f48582a8ec7a2ec78bd53200a319e426da6fd" translate="yes" xml:space="preserve">
          <source>Here we grab the message event data and set it as the &lt;code&gt;textContent&lt;/code&gt; of the result paragraph, so the user can see the result of the calculation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee4300ebf1f2bc4136e819ca324f7f6e314e282" translate="yes" xml:space="preserve">
          <source>Here we let the worker handle two simple operations for illustration: getting the difference of two numbers and making an alert after three seconds. In order to achieve that we first implement a sendQuery method which queries if the worker actually has the corresponding methods to do what we want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee8c62b5d937a0cd8afb229525cc7048b90ce7c" translate="yes" xml:space="preserve">
          <source>Here we look at the current time and compare it to the time for the next note; when the two match it will call the previous two functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35768edda69fb4ba81361267523e3465e5b48c70" translate="yes" xml:space="preserve">
          <source>Here we return the default network request with &lt;code&gt;return fetch(event.request)&lt;/code&gt;, which returns a promise. When this promise is resolved, we respond by running a function that grabs our cache using &lt;code&gt;caches.open('v1')&lt;/code&gt;; this also returns a promise. When that promise resolves, &lt;code&gt;cache.put()&lt;/code&gt; is used to add the resource to the cache. The resource is grabbed from &lt;code&gt;event.request&lt;/code&gt;, and the response is then cloned with &lt;code&gt;response.clone()&lt;/code&gt; and added to the cache. The clone is put in the cache, and the original response is returned to the browser to be given to the page that called it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae3c692671833aa967ccefec95e992023479546" translate="yes" xml:space="preserve">
          <source>Here we see a function which handles an offer received from the remote peer. This code is derived from the example and tutorial in the article &lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt;; take a look at that for more details and a more in-depth explanation of what's going on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a2b1d489ed76d2d06ed2a505d00ec3a46fbe21" translate="yes" xml:space="preserve">
          <source>Here we see a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; event which creates the offer and sends it to the remote system over a signaling channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d340e431be63bf68f18685ba729f228585152f38" translate="yes" xml:space="preserve">
          <source>Here we see an event handler for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Click&quot;&gt;&lt;code&gt;click&lt;/code&gt;&lt;/a&gt; event which calls &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;, specifying a set of audio constraints requesting that echo cancellation be enabled and that, if possible, the sample rate be 8 bits per sample instead of the more common 16 bits (possibly as a bandwidth saving measure). As long as an audio input device is available and the user allows it to be used, an audio track will be included in the resulting stream, and it will match the specified constraints as well as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4691da9e30ada34f0877d3e2e66a5e6c680986e" translate="yes" xml:space="preserve">
          <source>Here we see an event handler for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Click&quot;&gt;&lt;code&gt;click&lt;/code&gt;&lt;/a&gt; event which calls &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;, specifying a set of video constraints that indicate a preference for a video track whose dimensions are as close as possible to 160x120 pixels, and whose frame rate is as close to 15 frames per second as possible. As long as a video input device is available and the user allows it to be used, a video track will be included in the resulting stream, and it will match the specified constraints as well as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd31a33dab90c3d2edb4a76ab0c9ee14348614d9" translate="yes" xml:space="preserve">
          <source>Here we see an event handler for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Click&quot;&gt;&lt;code&gt;click&lt;/code&gt;&lt;/a&gt; event which uses &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; to obtain a video-only stream with no specific constraints, then attaches the resulting stream to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element once the stream is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbcc964a7fdee852e160772e9d27e8af0a85bf0" translate="yes" xml:space="preserve">
          <source>Here we see an event handler for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Click&quot;&gt;&lt;code&gt;click&lt;/code&gt;&lt;/a&gt; event which uses &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt; to obtain an audio-only stream with no specific constraints, then attaches the resulting stream to an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element once the stream is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8f3ba078fb82652c566f831d19d9d815e12028" translate="yes" xml:space="preserve">
          <source>Here we set the animation's timeline to be the same as the document's timeline (this is the default timeline for all animations, by the way):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e79b6e804fba76ed5359ab2301e75a79ab6969" translate="yes" xml:space="preserve">
          <source>Here we set the callbacks for the cake, bottle, and Alice to fire the &lt;code&gt;endGame&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e5d452b042ac97212cb13ebec63b8ad08f0bda" translate="yes" xml:space="preserve">
          <source>Here we specify that the animation should take 2000 milliseconds (2 seconds) to complete, should only run once, and that the fill mode should be &lt;code&gt;&quot;none&quot;&lt;/code&gt;. As defined above, the &lt;code&gt;&quot;none&quot;&lt;/code&gt; fill mode means that the element will be rendered in its natural, unaltered condition anytime the animation isn't actively running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b097769b18a3921454e14afd99234095a28b3a0a" translate="yes" xml:space="preserve">
          <source>Here we use &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/a&gt; to convert the JSON object back into the original object, then examine and act upon its contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cedf194d1893d18647e2fbdf05469ac76277f1" translate="yes" xml:space="preserve">
          <source>Here we&amp;rsquo;re using an array containing multiple objects. Each object represents a key from the original CSS. However, unlike CSS, the Web Animations API doesn&amp;rsquo;t need to explicitly be told the percentages along the animation for each key to appear at. It will automatically divide the animation into equal parts based on the number of keys you give it. This means that a Keyframe Object with three keys will play the middle key 50% of the way through each loop of the animation unless told otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046ffc92f6855a8c0dbb7215e407f4055d422e2e" translate="yes" xml:space="preserve">
          <source>Here we'll concentrate on the differences between dedicated and shared workers. Note that in this example we have two HTML pages, each with JavaScript applied that uses the same single worker file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980a807ad912f079187a1432d2db62139c70342c" translate="yes" xml:space="preserve">
          <source>Here we'll see a complete, working version of the example above (except of course that it's not connected to an actual payment handler, so no payments are actually processed). In the example, we're handling a donation to an organization that will be sending a &quot;thank you&quot; gift to the donor, so it requests shipping information along with allowing the donation payment itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a90076402f6f25e4471d76bf40214b835dec760" translate="yes" xml:space="preserve">
          <source>Here we're adding a listener for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseup&quot;&gt;mouseup&lt;/a&gt;&lt;/code&gt; event on the element &lt;code&gt;someElement&lt;/code&gt;. For the third parameter, if &lt;code&gt;passiveSupported&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, we're specifying an &lt;code&gt;options&lt;/code&gt; object with &lt;code&gt;passive&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;; otherwise, we know that we need to pass a Boolean, and we pass &lt;code&gt;false&lt;/code&gt; as the value of the &lt;code&gt;useCapture&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975f12d33cd0cbf7ed61bb04b242df7109114867" translate="yes" xml:space="preserve">
          <source>Here you can see the complete example in action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5fd30ca679bd6173bb2670af69a9b2e7535163" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a tumbling animation written in CSS showing Alice falling down the rabbit hole that leads to Wonderland (see the full &lt;a href=&quot;http://codepen.io/rachelnabors/pen/QyOqqW&quot;&gt;code on Codepen&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3742ee012111d1ea56ce10233b4ee0922a8a7469" translate="yes" xml:space="preserve">
          <source>Here's a barebones server implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfdf321799fe98c1743d4be7ea6d0cf55623026" translate="yes" xml:space="preserve">
          <source>Here's a couple of simple trivial examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b7c97964d486bde430e38689546c098e847283" translate="yes" xml:space="preserve">
          <source>Here's a little demo in which you can set &lt;code&gt;miterLimit&lt;/code&gt; dynamically and see how this effects the shapes on the canvas. The blue lines show where the start and endpoints for each of the lines in the zig-zag pattern are.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42f67d2dce7e283578d3e707d19ccbfa00e47fc" translate="yes" xml:space="preserve">
          <source>Here's an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; attribute line (a-line) describing an ICE candidate discovered by the STUN server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891db25ddbb1ddbc9d610701e510e56ec1bcdbad" translate="yes" xml:space="preserve">
          <source>Here's an example candidate a-line from an ICE transaction:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5ff90af8b284805f9f714f3f849dd75badc490" translate="yes" xml:space="preserve">
          <source>Here's an example of using &lt;code&gt;enumerateDevices()&lt;/code&gt;. It simply outputs a list of the &lt;a href=&quot;../mediadeviceinfo/deviceid&quot;&gt;device IDs&lt;/a&gt;, with their labels if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02320769f767a41f81980a4ec2f481a5c996b4e" translate="yes" xml:space="preserve">
          <source>Here's an example of using &lt;code&gt;navigator.mediaDevices.getUserMedia()&lt;/code&gt;, with a polyfill to cope with older browsers. Note that this polyfill does not correct for legacy differences in constraints syntax, which means constraints won't work well across browsers. It is recommended to use the &lt;a href=&quot;https://github.com/webrtc/adapter&quot;&gt;adapter.js&lt;/a&gt; polyfill instead, which does handle constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13345a499f0e2ff4ca825dec35b231b3a82f7cee" translate="yes" xml:space="preserve">
          <source>Here's an example showing how to use &lt;strong&gt;deriveKey()&lt;/strong&gt; to create a &lt;strong&gt;Secure Remote Password&lt;/strong&gt; (also known as &lt;strong&gt;Proof of Secret&lt;/strong&gt;) from a user's password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7febf83903709ff3b18cb9161a75753cd23146" translate="yes" xml:space="preserve">
          <source>Here's an example that computes the sha256 of a string and display its hex digest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3af8dc49958397b350cdfe838086a05ffb7314c" translate="yes" xml:space="preserve">
          <source>Here's an example that uses &lt;a href=&quot;mediadevices/enumeratedevices&quot;&gt;&lt;code&gt;enumerateDevices()&lt;/code&gt;&lt;/a&gt; to get a list of devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbbe17d97734234e96885b337471a0bb63ab0fb" translate="yes" xml:space="preserve">
          <source>Here's an example where a hidden block is used to contain a thank you message that is displayed after a user agrees to an unusual request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124605e146b60933d586b5e4185b567647865fd4" translate="yes" xml:space="preserve">
          <source>Here's how to implement what we have learnt:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091d336967828e718d1b113ea46e2a0f3f46043e" translate="yes" xml:space="preserve">
          <source>Here's the DOM object tree generated by the code for the TABLE element and its child elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dc544b804d380c2ae2b452a0f88dc39f825c26" translate="yes" xml:space="preserve">
          <source>Here's the HTML for this example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43081292d5a1976e8077bdbbc872fde75f0a185" translate="yes" xml:space="preserve">
          <source>Here's the HTML markup generated by the JavaScript code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396f50328094bd3c06eeafac79058571325423e3" translate="yes" xml:space="preserve">
          <source>Here's the JavaScript part:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181f1eab1926fcddbe7ed4aaf89ddd9bee2369f3" translate="yes" xml:space="preserve">
          <source>Here's the entire &lt;code&gt;playNoise()&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8e9a298a28abcbb1d42cf8fe1c9889e2a3c4e6" translate="yes" xml:space="preserve">
          <source>Here's the entire &lt;code&gt;playPulse()&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf9b839d55478400b0830cd7150f61672682cc2" translate="yes" xml:space="preserve">
          <source>Here's the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4886885afff94cb9225c22e2c8f361d372049098" translate="yes" xml:space="preserve">
          <source>Here's the live result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a894a7e3054e4d26f12288772e83dd2e128836" translate="yes" xml:space="preserve">
          <source>Here's the simple HTML for this example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d00547a6334feadbab6bb3b846844bbb4361fb3" translate="yes" xml:space="preserve">
          <source>Here's what the &lt;code&gt;updateTexture()&lt;/code&gt; function looks like; this is where the real work is done:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c428046b550a48eb8bb02e18fa724e17e197382" translate="yes" xml:space="preserve">
          <source>Here, a custom function called &lt;code&gt;checkAllValues()&lt;/code&gt; looks at each value in the &lt;code&gt;response&lt;/code&gt; and ensures that they're valid, returning &lt;code&gt;true&lt;/code&gt; if every field is valid or &lt;code&gt;false&lt;/code&gt; if any are not. If and only if every field is valid, the &lt;a href=&quot;../paymentresponse/complete&quot;&gt;&lt;code&gt;complete()&lt;/code&gt;&lt;/a&gt; method is called on the response with the string &lt;code&gt;&quot;success&quot;&lt;/code&gt;, which indicates that everything is valid and that the payment can complete accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e3689d536f3f94e7bae7886c825d02b52e2451" translate="yes" xml:space="preserve">
          <source>Here, after ensuring that the constrainable properties for which matches must be found are supported (&lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;frameRate&lt;/code&gt;, and &lt;code&gt;facingMode&lt;/code&gt;), we set up constraints which request a width no smaller than 640 and no larger than 1920 (but preferably 1920), a height no smaller than 400 (but ideally 1080), an aspect ratio of 16:9 (1.777777778), and a frame rate no greater than 30 frames per second. In addition, the only acceptable input device is a camera facing the user (a &quot;selfie cam&quot;). If the &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;frameRate&lt;/code&gt;, or &lt;code&gt;facingMode&lt;/code&gt; constraints can't be met, the promise returned by &lt;code&gt;applyConstraints()&lt;/code&gt; will be rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e320519879b6fd7a65b83410de3e5659a4121052" translate="yes" xml:space="preserve">
          <source>Here, all video elements are styled to use a gray linear gradient as their backgrounds, with a foreground color of &lt;code&gt;&quot;papayawhip&quot;&lt;/code&gt;. In addition, text boldfaced using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt;&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;&lt;/a&gt; element are colored &lt;code&gt;&quot;peachpuff&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e6963dfa87391e1d180b8b2ac66af9c1f9a015" translate="yes" xml:space="preserve">
          <source>Here, an attribute selector is used to return a list of the list items contained within a list whose ID is &lt;code&gt;&quot;userlist&quot;&lt;/code&gt; which have a &lt;code&gt;&quot;data-active&quot;&lt;/code&gt; attribute whose value is &lt;code&gt;&quot;1&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbff149e946c92cc37b81edf29b48ccbaf48230" translate="yes" xml:space="preserve">
          <source>Here, data is added in three different types. The first type 'application/x-bookmark' is a custom type. Other applications won't support this type, but you can use a custom type for drags between areas of the same site or application. By providing data in other types as well, we can also support drags to other applications in less specific forms. The 'application/x-bookmark' type can provide data with more details for use within the application whereas the other types can include just a single URL or text version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e885960fdc1c07e4b7d50d3218c79ba61e8b7d" translate="yes" xml:space="preserve">
          <source>Here, the first three lines grab the values from local storage. Next, we set the values displayed in the form elements to those values, so that they keep in sync when you reload the page. Finally, we update the styles/decorative image on the page, so your customization options come up again on reload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fc3bc0e455a7259c27bd4c21059a8dad694411" translate="yes" xml:space="preserve">
          <source>Here, the time at which the request was initiated (&lt;a href=&quot;performancetiming/requeststart&quot;&gt;&lt;code&gt;requestStart&lt;/code&gt;&lt;/a&gt;). from the time at which the response was finished being received (&lt;a href=&quot;performancetiming/responseend&quot;&gt;&lt;code&gt;responseEnd&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4674f85fc18def751559887e7f9c30cfca9c26" translate="yes" xml:space="preserve">
          <source>Here, we apply our &lt;code&gt;closeVideoCall()&lt;/code&gt; function when the ICE connection state changes to &lt;code&gt;&quot;closed&quot;&lt;/code&gt;, &lt;code&gt;&quot;failed&quot;&lt;/code&gt;, or &lt;code&gt;&quot;disconnected&quot;&lt;/code&gt;. This handles shutting down our end of the connection so that we're ready start or accept a call once again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ab4235680d3955fbf79e19a4e816cd64fa732a" translate="yes" xml:space="preserve">
          <source>Here, we create a &lt;a href=&quot;../periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; with two values. The first value is the DC offset, which is the value at which the oscillator starts. 0 is good here, because we want to start the curve at the middle of the [-1.0; 1.0] range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e391d7bf5b4ab84fdcd8f6e8641b1b6e58128cea" translate="yes" xml:space="preserve">
          <source>Here, we create a &lt;code&gt;PeriodicWave&lt;/code&gt; with two values. The first value is the DC offset, which is the value at which the oscillator starts. 0 is good here, because we want to start the curve at the middle of the [-1.0; 1.0] range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f692b77d1e4a45a6bf5d3c8660d4bb2a35f87567" translate="yes" xml:space="preserve">
          <source>Here, we get a list of &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements whose immediate parent element is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Div&quot;&gt;&lt;code&gt;div&lt;/code&gt;&lt;/a&gt; with the class &lt;code&gt;&quot;highlighted&quot;&lt;/code&gt; and which are located inside a container whose ID is &lt;code&gt;&quot;test&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c03eed446792a32b430615abe29c73ad6c4d918" translate="yes" xml:space="preserve">
          <source>Here, we get a list of the document's &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; elements whose immediate parent element is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Div&quot;&gt;&lt;code&gt;div&lt;/code&gt;&lt;/a&gt; with the class &lt;code&gt;&quot;highlighted&quot;&lt;/code&gt; and which are located inside a container whose ID is &lt;code&gt;&quot;test&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320d0929e62d4e66d305811062b13c9f8342d531" translate="yes" xml:space="preserve">
          <source>Here, we retrieve the &lt;code&gt;dataTransfer&lt;/code&gt; field from the event, pull the file list out of it, and then pass that to &lt;code&gt;handleFiles()&lt;/code&gt;. From this point on, handling the files is the same whether the user used the &lt;code&gt;input&lt;/code&gt; element or drag and drop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743e3e2754eba0066c8ab9f5b9d0b8043a994e2a" translate="yes" xml:space="preserve">
          <source>Here, we see that the &lt;code&gt;create&lt;/code&gt; property is provided, with a value of &lt;code&gt;true&lt;/code&gt;, indicating that the directory should be created if it's not already there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663e98d6918f04ff51bebc9429311ca82dae95a7" translate="yes" xml:space="preserve">
          <source>Here, we specify an &lt;code&gt;options&lt;/code&gt; object in which &lt;code&gt;passive&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, while the other options are left to the default value of &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dabb64c46f5330d8bdade5b02125a55ce5903d" translate="yes" xml:space="preserve">
          <source>Here, we'll take a look at how to use an anonymous function to pass parameters into the event listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8330bb6c853f0d3ca388e1940f837fbd6c6b1117" translate="yes" xml:space="preserve">
          <source>Here, we're calling &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt; and requesting a video stream (without audio). It returns a promise which we attach success and failure callbacks to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82678e28bfe063c07a9027b6a36ea7dbcd8fc3bc" translate="yes" xml:space="preserve">
          <source>Here, we're specifying a timeout of 2000 ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca41012cc75937bbc53afcb37b3b489cd45055b7" translate="yes" xml:space="preserve">
          <source>Hiding a column by changing style properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0010a29ad39ad234e066900c8d3c781f9078f2" translate="yes" xml:space="preserve">
          <source>Hiding content in one presentation while intending it to be visible in others</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f60644b370ee02b97936bea7eeb7e3ddd435420" translate="yes" xml:space="preserve">
          <source>Hiding panels in a tabbed dialog box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6674c137d260d9630d25a2f4d17e1afaa452b935" translate="yes" xml:space="preserve">
          <source>High Resolution Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92dd20303be3a74821b6214608d2dd08683cdec" translate="yes" xml:space="preserve">
          <source>High Resolution Time Level 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b67773faf089d6c09f73ca6cca7baebca0614ac" translate="yes" xml:space="preserve">
          <source>High Resolution Time Level 2&lt;br/&gt;&lt;small&gt;The definition of 'DOMHighResTimeStamp' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301df4d0bfd0ba624c1413be6853b9405c500bc2" translate="yes" xml:space="preserve">
          <source>High Resolution Time Level 2&lt;br/&gt;&lt;small&gt;The definition of 'performance' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ea90177202744ee74035033e354aeb69221d5a" translate="yes" xml:space="preserve">
          <source>High Resolution Time Level 2&lt;br/&gt;&lt;small&gt;The definition of 'performance.now()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7714f5882670503a64af045302bd5e32b8f599" translate="yes" xml:space="preserve">
          <source>High Resolution Time Level 2&lt;br/&gt;&lt;small&gt;The definition of 'toJSON() serializer' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d93bfd417b5aed448674910035f437aca1c5e65" translate="yes" xml:space="preserve">
          <source>High Resolution Time Level 2&lt;br/&gt;&lt;small&gt;The definition of 'toJSON()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf688dba4f2327010a1fc3da3a72ff2f4bcd0cb" translate="yes" xml:space="preserve">
          <source>High Resolution Time Level 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a985b41e0d327231ad10ccad3ade35e99b2b2d55" translate="yes" xml:space="preserve">
          <source>High Resolution Time Level 3&lt;br/&gt;&lt;small&gt;The definition of 'timeOrigin' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663e675042d5a8fb8497c692515fba7c2c4d0423" translate="yes" xml:space="preserve">
          <source>High Resolution Time&lt;br/&gt;&lt;small&gt;The definition of 'DOMHighResTimeStamp' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddd9d447600dd321a537803c5e45e5204301556" translate="yes" xml:space="preserve">
          <source>High Resolution Time&lt;br/&gt;&lt;small&gt;The definition of 'Performance' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0f785a03eabaa1a962abf57383a3a809cc6f60" translate="yes" xml:space="preserve">
          <source>High Resolution Time&lt;br/&gt;&lt;small&gt;The definition of 'performance.now()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75112b51ba38b2af6288ce0c05bd1f6d647580a5" translate="yes" xml:space="preserve">
          <source>High Resolution Time&lt;br/&gt;&lt;small&gt;The definition of 'window.performance' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1281ce8ed24454f3f70dfcb38b651ab8bbbd0367" translate="yes" xml:space="preserve">
          <source>High precision timing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05471ccf733fd7b759445e935f296a4d277f7daa" translate="yes" xml:space="preserve">
          <source>High-resolution time stamps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b327d4cef027b9dcb4400a4217c3fc0e9f24d8d0" translate="yes" xml:space="preserve">
          <source>HighResTimeStamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bc47d7ae94eec14f73467cb39b1533601f9164" translate="yes" xml:space="preserve">
          <source>Hint for the quality of filtering when generating mipmap images with &lt;a href=&quot;../webglrenderingcontext/generatemipmap&quot;&gt;&lt;code&gt;WebGLRenderingContext.generateMipmap()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef8e89aeb708a408921fec1b9e87c4d04faaced" translate="yes" xml:space="preserve">
          <source>Hints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464a3fb1bd9f79e4cd06bc42addb2b6c045e2327" translate="yes" xml:space="preserve">
          <source>Historically, detecting visibility of an element, or the relative visibility of two elements in relation to each other, has been a difficult task for which solutions have been unreliable and prone to causing the browser and the sites the user is accessing to become sluggish. Unfortunately, as the web has matured, the need for this kind of information has grown. Intersection information is needed for many reasons, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a6c29406c74ce2f1163175437119a97b36771d" translate="yes" xml:space="preserve">
          <source>Historically, writing scripts for the Web that work intimately with Web APIs has had a well-known challenge: often, your code needs to know whether or not an API exists and if so, what its limitations are on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; it's running on. Figuring this out has often been difficult, and has usually involved looking at some combination of which &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; (or browser) you're running on, which version it is, looking to see if certain objects exist, trying to see whether various things work or not and determining what errors occur, and so forth. The result has been a lot of very fragile code, or a reliance on libraries which figure this stuff out for you, then implement &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/polyfill&quot;&gt;polyfills&lt;/a&gt; to patch the holes in the implementation on your behalf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7a6712594151ce602108ab94ca943b7122a7c9" translate="yes" xml:space="preserve">
          <source>History API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841b7c1c1eb2e3c4f8668104ac620afef70aba63" translate="yes" xml:space="preserve">
          <source>History state information saved using &lt;a href=&quot;history_api&quot;&gt;&lt;code&gt;History.pushState()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28048693f9e6c743a457d6450ac220d9ac177643" translate="yes" xml:space="preserve">
          <source>Hit regions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c654b5f7c60d366172d2b2c79ce887bc75256c" translate="yes" xml:space="preserve">
          <source>Hit regions and accessibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136917b14112ddf945adfd21959d30b5505231fa" translate="yes" xml:space="preserve">
          <source>Holds a list of the format types of the data that is stored for an item at the specified index. If the index is not in the range from 0 to the number of items minus one, an empty string list is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4dc7d9ca8fbb02f1e25a322b25dcc83f2b109f7" translate="yes" xml:space="preserve">
          <source>Homogeneous Coordinates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2441810bf665f03557e1fe6d611bee77fc5589ed" translate="yes" xml:space="preserve">
          <source>Hooks for background services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedc64f8e0e6745af7e02db8dbf7103d6c2168a9" translate="yes" xml:space="preserve">
          <source>Hopefully, this article has given you an insight into how Web Audio spatialization works, and what each of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; properties do (there are quite a few of them). The values can be hard to manipulate sometimes and depending on your use case it can take some time to get them right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ed3e1a04d68e8189b6dfd34e2f5d0ea1f9cd2f" translate="yes" xml:space="preserve">
          <source>Horizontal distance the shadow will be offset. Default 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1821ae53343b2e3f3e43e0083637967ab4df7cc" translate="yes" xml:space="preserve">
          <source>Horizontal moving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129b951a0e9a0e68803ab500db6fca24a40f8300" translate="yes" xml:space="preserve">
          <source>Horizontal position (x coordinate) at which to place the image data in the destination canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628db765ce334be01338d855413bcf5a2f2f62b0" translate="yes" xml:space="preserve">
          <source>Horizontal position (x coordinate) of the top-left corner from which the image data will be extracted. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e395462f0dea2a119c454d51ef8bb947795778" translate="yes" xml:space="preserve">
          <source>Horizontal scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e60cfcb2d11c679ab3cbe7b9f22e79d97ac80e" translate="yes" xml:space="preserve">
          <source>Horizontal skewing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ece6431b7ac63403fd80db83601bdb73a0c73a6" translate="yes" xml:space="preserve">
          <source>Hours can be greater than two digits (e.g. 9999:00:00.000)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f19f5d9310a4f62e37112f874ac1375aa666cd" translate="yes" xml:space="preserve">
          <source>Hovering pointers (e.g. a mouse with no buttons pressed) cannot have their mouse events prevented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7be5a69b030ffa58ccd40249733eb974e5f345" translate="yes" xml:space="preserve">
          <source>How Do I Access the DOM?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcff591320ddb6b8c14294c3f6353abe203bed69" translate="yes" xml:space="preserve">
          <source>How arcTo works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed0ab04809bb536074a629aff476f613964bbd9" translate="yes" xml:space="preserve">
          <source>How bezierCurveTo works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771ea58875a0a04b137c15089d293650d1d7b170" translate="yes" xml:space="preserve">
          <source>How big is the content?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbe3e6bf7b61d98fc70fdd6cf01055df26acd2c" translate="yes" xml:space="preserve">
          <source>How can I bring back the window if it is minimized or behind another window?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea960064a30533cf6ff0cd39af2ccd282f8aa3c" translate="yes" xml:space="preserve">
          <source>How can I learn more?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c54ccae879469d003026f352ea10dab9ad0356f" translate="yes" xml:space="preserve">
          <source>How can I prevent the confirmation message asking the user whether they want to close the window?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894a11a43d84dac48eea95cd4002489178ed5420" translate="yes" xml:space="preserve">
          <source>How can I tell when my window was blocked by a popup blocker?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e46534c065c32a83920a9487df2f0cf02c708a" translate="yes" xml:space="preserve">
          <source>How constraints are defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c5dc742c11129eb0f69528919839c31272e47a" translate="yes" xml:space="preserve">
          <source>How do I create a link that opens a new window?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a5e36ffc9632c126eacac44408edc60d78e9de" translate="yes" xml:space="preserve">
          <source>How do I force a maximized window?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9769cb4685ed4ae0e8d856b6b9825b24686812a" translate="yes" xml:space="preserve">
          <source>How do I know whether a window I opened is still open?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6247555ddd094fcdeb181a4ce4342fefb3e60359" translate="yes" xml:space="preserve">
          <source>How do I open a referenced resource of a link in a new tab? or in a specific tab?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eebb939c02fd135c1d8954876072e72be1f89ca" translate="yes" xml:space="preserve">
          <source>How do I resize a window to fit its content?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c4c934137a8e21ac318630580543d2a7e9ac52" translate="yes" xml:space="preserve">
          <source>How do I turn off window resizability or remove toolbars?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe82a2a69bf1fc8e251b3e2e4d33caa87bc8f4f5" translate="yes" xml:space="preserve">
          <source>How intersection is calculated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6949ffa9b71a38fd85638efffb4b5a4d47ae1972" translate="yes" xml:space="preserve">
          <source>How many (if any) redirects were required in order to complete the navigation?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee71381b65363d12222dc8fff89d5f7f41ae0fa4" translate="yes" xml:space="preserve">
          <source>How much room does it use up?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0daa81e75667f636d20d3d9c2222af8e3616ee0" translate="yes" xml:space="preserve">
          <source>How quadraticCurveTo works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241fdc9ae3e37faeff19b110b44910a7549dc672" translate="yes" xml:space="preserve">
          <source>How to catch JavaScript Errors with window.onerror (even on Chrome and Firefox) (danlimerick.wordpress.com, 2014)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf1742f5722244075685748e9a148b8530564fd" translate="yes" xml:space="preserve">
          <source>How to check the security state of an XMLHTTPRequest over SSL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7adea8f7f1e8dc52d4533a859e2f9a6a96819d" translate="yes" xml:space="preserve">
          <source>How to clear the rendering context with a solid color.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6204fc260402879926e6f666c5ca9ed30739b837" translate="yes" xml:space="preserve">
          <source>How to combine user interaction with graphics operations. Clearing the rendering context with a random color when the user clicks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4b3719cd00f4227420bc4bd0f09efa3de1c6d2" translate="yes" xml:space="preserve">
          <source>How to draw DOM content, such as HTML elements, into a canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b50a20350406d9245fcbb8a50e9e4ff0533f95" translate="yes" xml:space="preserve">
          <source>How to draw simple rectangles and squares with scissoring operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cfecc91642c460f559cac57b859a83416b66a7" translate="yes" xml:space="preserve">
          <source>How to render simple flat shapes using WebGL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228110ec9fa99cdb53aaee81ba0133d10c624f82" translate="yes" xml:space="preserve">
          <source>How to set up a WebGL context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfae7838293dfabb46cb4bfbd0c885f69949f4f" translate="yes" xml:space="preserve">
          <source>How to simulate lighting effects in your WebGL context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3ee6b03446765988bf6371ba5acff4def2e2ad" translate="yes" xml:space="preserve">
          <source>How to use &lt;a href=&quot;imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt; to directly examine and alter pixels in the canvas's bitmap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5f980d3c9ecf30e9cca950db3550d2432e85f5" translate="yes" xml:space="preserve">
          <source>How writable streams work</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a592ebd85a69060d7634d9886b10816e9eb5584f" translate="yes" xml:space="preserve">
          <source>How?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8f3372ad83f763d254cf864240e342fc43d521" translate="yes" xml:space="preserve">
          <source>However in the last example we performed &lt;code&gt;(z + 1) * scaleFactor&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1e4d4c37f3f5d4136c70fdec96608a085bef09" translate="yes" xml:space="preserve">
          <source>However not symbols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4188c7a876e984c9ee08552dc22aa4c440746a" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;captureStream()&lt;/code&gt; is still prefixed as &lt;code&gt;mozCaptureStream()&lt;/code&gt; on Firefox for good reason: there are some quirks in the present implementation which are worth noting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fe6788db8d52adc9aea04876850ce34ef53d58" translate="yes" xml:space="preserve">
          <source>However, a limitation of the macOS event model causes Caps Lock to dispatch only the &lt;code&gt;keydown&lt;/code&gt; event. Num Lock was supported on some older laptop models (2007 models and older), but since then, macOS hasn't supported Num Lock even on external keyboards. On older MacBooks with a Num Lock key, that key doesn't generate any key events. Gecko does support the Scroll Lock key if an external keyboard which has an F14 key is connected. In certain older versions of Firefox, this key generated a &lt;code&gt;keypress&lt;/code&gt; event; this inconsistent behavior was &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=602812&quot;&gt;bug 602812&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fb1c8409dd06c71afa974f2ce67631ab2f3375" translate="yes" xml:space="preserve">
          <source>However, for inline-level elements (such as &lt;strong&gt;span&lt;/strong&gt;) that can wrap from one line to the next, &lt;code&gt;offsetTop&lt;/code&gt; and &lt;code&gt;offsetLeft&lt;/code&gt; describe the positions of the &lt;em&gt;first&lt;/em&gt; border box (use &lt;a href=&quot;../element/getclientrects&quot;&gt;&lt;code&gt;Element.getClientRects()&lt;/code&gt;&lt;/a&gt; to get its width and height), while &lt;code&gt;offsetWidth&lt;/code&gt; and &lt;code&gt;offsetHeight&lt;/code&gt; describe the dimensions of the &lt;em&gt;bounding&lt;/em&gt; border box (use &lt;a href=&quot;../element/getboundingclientrect&quot;&gt;&lt;code&gt;Element.getBoundingClientRect()&lt;/code&gt;&lt;/a&gt; to get its position). Therefore, a box with the left, top, width and height of &lt;code&gt;offsetLeft, offsetTop, offsetWidth&lt;/code&gt; and &lt;code&gt;offsetHeight&lt;/code&gt; will not be a bounding box for a span with wrapped text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1967e4f2d72a9dc7edf7c3aec879d272f38ec0fc" translate="yes" xml:space="preserve">
          <source>However, for requests created other than by the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request&lt;/code&gt;&lt;/a&gt; constructor, &lt;code&gt;no-cors&lt;/code&gt; is typically used as the mode; for example, for embedded resources where the request is initiated from markup, unless the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_settings_attributes&quot;&gt;crossorigin&lt;/a&gt;&lt;/code&gt; attribute is present, the request is in most cases made using the &lt;code&gt;no-cors&lt;/code&gt; mode &amp;mdash; that is, for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements (except when used with modules), or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f25a49bc70caf7a94310716ac678eb5e9b5b91b" translate="yes" xml:space="preserve">
          <source>However, given the practicality of supporting older browsers, the following should suffice for most (if not all) practical cases (i.e. IE9+ support).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1d4aae1f11a55c7b44ae68ae2dfed75bc9bc2d" translate="yes" xml:space="preserve">
          <source>However, if you are using the &lt;code&gt;GET&lt;/code&gt; method, a string like the following will be simply added to the URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3bfd054f1d62a9bcd9f2dca27aef3c45a84de7" translate="yes" xml:space="preserve">
          <source>However, if you need to create an odd-ordered IIR filter, you'll need to use &lt;code&gt;IIRFilterNode&lt;/code&gt;. You may also find this interface useful if you don't need automation, or for other reasons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137b32e7dbcdb15d7829b64bffb7b94d08daad20" translate="yes" xml:space="preserve">
          <source>However, if you really do require IE 8 support, then the following polyfill will do the job very slowly, but eventually. However, it will only support CSS 2.1 selectors in IE 8, and it can cause severe lag spikes in production websites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c80fd33781357306acd9ab5a50fb393828b6ca5" translate="yes" xml:space="preserve">
          <source>However, in this article we will mainly be concentrating on some of the new features provided by the &lt;a href=&quot;https://w3c.github.io/gamepad/extensions.html&quot;&gt;Gamepad Extensions&lt;/a&gt; API, which allows access to advanced controller information such as position and orientation data, control over haptic actuators (e.g. vibration hardware), and more. This API is very new, and currently is only supported and enabled by default in Firefox 55+ Beta/Nightly channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a922888d1d561096cc2dbbc87486fcbf1ca90e68" translate="yes" xml:space="preserve">
          <source>However, it is usually shortened to something like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d922ee27bd496b5fe1856ad24f2102f635ab8553" translate="yes" xml:space="preserve">
          <source>However, it should work just fine in IE9. A major discrepancy between the polyfilled version of &lt;code&gt;classList&lt;/code&gt; and the W3 specs is that for IE6-8, there is no way to create an immutable object (an object whose properties cannot be directly modified). In IE9, however, it is possible through extending the prototype, freezing the visible object, and overwritting native property methods. However, such actions would not work in IE6-IE8 and, in IE9, slow the performance of the entire webpage to a snail's crawl, making these modifications completely impractical for this polyfill.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6158b8345ac3707960b06f5b1fe93902670500" translate="yes" xml:space="preserve">
          <source>However, locking the orientation can fire an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/orientationchange&quot;&gt;orientationchange&lt;/a&gt;&lt;/code&gt; event if the orientation had to be changed to satisfy the lock requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff262f14c9689fb09617346c75d96e432308de6" translate="yes" xml:space="preserve">
          <source>However, more modern techniques are available, since the &lt;a href=&quot;responsetype&quot;&gt;&lt;code&gt;responseType&lt;/code&gt;&lt;/a&gt; attribute now supports a number of additional content types, which makes sending and receiving binary data much easier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37487b7a022c31beb01ffb3f932937cac516b045" translate="yes" xml:space="preserve">
          <source>However, nowadays even mobile devices possess powerful GPUs that are capable of running even relatively complex shader programs. Moreover, because shaders are compiled, the eventual machine code that actually runs on the hardware may be highly optimized. What may seem like an expensive function call may in fact compile into only few (or even a single) machine instructions. This is particularly true for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/GLSL&quot;&gt;GLSL&lt;/a&gt; functions that typically operate on vectors, such as &lt;code&gt;normalize()&lt;/code&gt;, &lt;code&gt;dot()&lt;/code&gt; and &lt;code&gt;mix()&lt;/code&gt;. The best advice in that regard is to use the built-in functions, rather than try to implement, for example, one's own version of a dot-product or linear interpolation, which may in fact compile to larger and less optimized machine code. Finally, it is important to keep in mind that GPUs are constructed to do complex mathematical calculations in hardware, and therefore, may support math functions, such as &lt;code&gt;sin()&lt;/code&gt;, &lt;code&gt;cos()&lt;/code&gt; and other, through dedicated machine instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0019ba8604665100c43481dd7b41e4460712ecea" translate="yes" xml:space="preserve">
          <source>However, since web workers have carefully controlled communication points with other threads, it's actually very hard to cause concurrency problems. There's no access to non-threadsafe components or the DOM. And you have to pass specific data in and out of a thread through serialized objects. So you have to work really hard to cause problems in your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a0ed9cf2649e9ff741cc86e4156f6be4393768" translate="yes" xml:space="preserve">
          <source>However, some older browsers have not implemented &lt;code&gt;NodeList.forEach()&lt;/code&gt; nor &lt;code&gt;Array.from()&lt;/code&gt;. This can be circumvented by using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;Array.prototype.forEach()&lt;/code&gt;&lt;/a&gt; &amp;mdash; see this document's &lt;a href=&quot;#Example&quot;&gt;Example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="917b33eb5acbe725bb7768943f15c24ccd136f80" translate="yes" xml:space="preserve">
          <source>However, stopEvent also calls an event object method, &lt;a href=&quot;../event/stoppropagation&quot;&gt;&lt;code&gt;event.stopPropagation&lt;/code&gt;&lt;/a&gt;, which keeps the event from bubbling any further up into the DOM. Note that the table itself has an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/onclick&quot;&gt;&lt;code&gt;onclick&lt;/code&gt;&lt;/a&gt; event handler that ought to display a message when the table is clicked. But the stopEvent method has stopped propagation, and so after the data in the table is updated, the event phase is effectively ended, and an alert box is displayed to confirm this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543a2e6f0f81630191938b84ea4aab5306429e44" translate="yes" xml:space="preserve">
          <source>However, the special index &lt;code&gt;-1&lt;/code&gt; can be used to remove the very last row of a table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65170d06543c8e0867ef820908bf9f1286ea61b3" translate="yes" xml:space="preserve">
          <source>However, the value of the &lt;code&gt;groupId&lt;/code&gt; is determined by the source of the track's content, and there's no particular format mandated by the specification (although some kind of GUID is recommended). That means that a given track will only return one value for the &lt;code&gt;groupId&lt;/code&gt; when you call &lt;a href=&quot;../mediastreamtrack/getcapabilities&quot;&gt;&lt;code&gt;getCapabilities()&lt;/code&gt;&lt;/a&gt;, and keep in mind that this value will change for each browsing session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab75153396c84d84629a47fa5e540331964c7c3b" translate="yes" xml:space="preserve">
          <source>However, there are ways to execute JavaScript without using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, so there is still a security risk whenever you use &lt;code&gt;innerHTML&lt;/code&gt; to set strings over which you have no control. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4acaf9f9934a1111a903c2615d39aebfea53bdd" translate="yes" xml:space="preserve">
          <source>However, this is slow and error-prone, due to the need for multiple conversions (especially if the binary data is not actually byte-format data, but, for example, 32-bit integers or floats).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8335b6fe94be06447abbd2b2abc3aedc61479232" translate="yes" xml:space="preserve">
          <source>However, use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozGetDataAt&quot;&gt;&lt;code&gt;mozGetDataAt()&lt;/code&gt;&lt;/a&gt; method to retrieve a specific item from the data transfer. The following example retrieves a set of files being dragged and adds them to an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fcf820c2d4b6a04edf87cfa0024be34dc3efd3" translate="yes" xml:space="preserve">
          <source>However, we wanted to make the third area (which contains the recorded samples you can play back) take up whatever space is left, regardless of the device height. Flexbox could be the answer here, but it's a bit overkill for such a simple layout. Instead, the problem was solved by making the third container's height equal to 100% of the parent height, minus the heights and padding of the other two:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3abf61a7833a72c544f725140cae2be0d696f85" translate="yes" xml:space="preserve">
          <source>However, you can also update the user interface with an insertion point or highlight as needed. For simple highlighting, you can use the &lt;code&gt;-moz-drag-over&lt;/code&gt; CSS pseudoclass on a drop target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfbded5930b78b226b1a1ad922d2f649f770cd4" translate="yes" xml:space="preserve">
          <source>Hyper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca73ab65568cd125c2d27a22bbd9e863c10b675d" translate="yes" xml:space="preserve">
          <source>I</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afb3b1b6031baefcc32d82db21e471fd32bc387" translate="yes" xml:space="preserve">
          <source>I can not access the properties of the new secondary window. I always get an error in the javascript console saying &quot;Error: uncaught exception: Permission denied to get property &amp;lt;property_name or method_name&amp;gt;. Why is that?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fa5b7d073ff41c20e9def0a2e25bd11f88b86a" translate="yes" xml:space="preserve">
          <source>I can take 128 because the first bit is always 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaaf4ac168b0a8e33d3d99365e39e1a0edbb8d6d" translate="yes" xml:space="preserve">
          <source>I/O error (actual failure to write to disk, e.g. disk detached, or other OS/hardware failure)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e6907b70a51197746c7a59244053494e95092c" translate="yes" xml:space="preserve">
          <source>ICE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44f4959b2f3ec5843c05da5397b5795a5b8393e" translate="yes" xml:space="preserve">
          <source>ICE allows candidates to represent connections over either &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TCP&quot;&gt;TCP&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/UDP&quot;&gt;UDP&lt;/a&gt;, with UDP generally being preferred (and being more widely supported). Each protocol supports a few types of candidate, with the candidate types defining how the data makes its way from peer to peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1507a1be086d81ab7f74d65ee5082d4782135524" translate="yes" xml:space="preserve">
          <source>ICE candidate exchange process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feafaec6a71e29fec4dcbb5e4182ad21fa913a84" translate="yes" xml:space="preserve">
          <source>ICE candidates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89985fbf2742f8068cfdafc9c60a208f35a45f0c" translate="yes" xml:space="preserve">
          <source>ICE connection state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4c59a101258e9be7e249051fdd65df67fc3f79" translate="yes" xml:space="preserve">
          <source>ICE gathering state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d114f63fe8a763519bba21410fd8aca56724daf" translate="yes" xml:space="preserve">
          <source>ICE restart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c33ba0f4cdb00ae28ae4ea43d4288bba215173" translate="yes" xml:space="preserve">
          <source>ICE signaling state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47b819b157f22808c05cafb87a47fc5c2caafa8" translate="yes" xml:space="preserve">
          <source>ICE uses the &lt;code&gt;ufrag&lt;/code&gt; and password to ensure message integrity. This avoids crosstalk among multiple ongoing ICE sessions, but, more importantly, helps secure ICE transactions (and all of WebRTC by extension) against attacks that might try to inject themselves into an ICE exchange.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315309b4cbe40ce726dccb95d24dc0693231bd32" translate="yes" xml:space="preserve">
          <source>IDBCursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5b3b52d7dae3b1ba475768381348a4102bbd3c" translate="yes" xml:space="preserve">
          <source>IDBCursor.advance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed4bdde2dacf06fd12f2222b82d62ceb8ff1b77" translate="yes" xml:space="preserve">
          <source>IDBCursor.continue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0630d77dbd74e844e184bb8fc0d063d4c232e044" translate="yes" xml:space="preserve">
          <source>IDBCursor.continuePrimaryKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5df44b8341bc59cac1afbdbb38737b324a3fe47" translate="yes" xml:space="preserve">
          <source>IDBCursor.delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d364570f851394db5e6ccfce83c0347eaa2390" translate="yes" xml:space="preserve">
          <source>IDBCursor.direction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5bf34d45294d80ee80d4ee05632e9ecb02fa93" translate="yes" xml:space="preserve">
          <source>IDBCursor.key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bced209d03d86fc183a16322c06796c66fc8e67" translate="yes" xml:space="preserve">
          <source>IDBCursor.primaryKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed261bbfafeaba4424b0d6963a6a716bcef71a3c" translate="yes" xml:space="preserve">
          <source>IDBCursor.source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afd8acc8159d17aa310ef7ed6e3dc259ae96db4" translate="yes" xml:space="preserve">
          <source>IDBCursor.update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce77acb852c941025dd0335126f4975837e459f6" translate="yes" xml:space="preserve">
          <source>IDBCursorSync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2b8fb76f8deede83b30d95a01a9cd4bef7f719" translate="yes" xml:space="preserve">
          <source>IDBCursorWithValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32728d0325aa3e8fb99939b44ad341c9cdeb9686" translate="yes" xml:space="preserve">
          <source>IDBCursorWithValue.value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6890b39bc3b8bed1cef4178ad9ce671690c2a9" translate="yes" xml:space="preserve">
          <source>IDBDatabase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780835acf3aeeb0390293db84798a625917b13fa" translate="yes" xml:space="preserve">
          <source>IDBDatabase.close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4efac0f5fa24f685c071ec118028b86196daa6" translate="yes" xml:space="preserve">
          <source>IDBDatabase.createObjectStore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7e4990023677535db4eb3a8861923f16ba138a" translate="yes" xml:space="preserve">
          <source>IDBDatabase.deleteObjectStore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dfee0fc5a0fdb57d04842366154fb90da393b6" translate="yes" xml:space="preserve">
          <source>IDBDatabase.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3e42ed2637e6ffa5a794bf200e54df25082740" translate="yes" xml:space="preserve">
          <source>IDBDatabase.objectStoreNames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4cc4fa2f18493b0ff8dd1824a95d2d41f32716" translate="yes" xml:space="preserve">
          <source>IDBDatabase.onabort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01992080b10662cc0a9922720fc2a2595b1daabe" translate="yes" xml:space="preserve">
          <source>IDBDatabase.onclose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7722acbfb4fa12eaa06d59ebbbb48e2af13fdaf" translate="yes" xml:space="preserve">
          <source>IDBDatabase.onerror</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc92b56c44f12ddd00ff67dd2c800f0801d5be4" translate="yes" xml:space="preserve">
          <source>IDBDatabase.onversionchange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10693994106ff54c86ff076e2f32ca1704396321" translate="yes" xml:space="preserve">
          <source>IDBDatabase.transaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3edb52e9193c3c32f950eef724a5c909cff5fd7" translate="yes" xml:space="preserve">
          <source>IDBDatabase.version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d631e28ca171389acae98e4fb8b0a8fd6944e9" translate="yes" xml:space="preserve">
          <source>IDBDatabaseSync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2aa1869ec4d6693f259ee49ecc5ad01721a137" translate="yes" xml:space="preserve">
          <source>IDBEnvironment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49dfde6fcae8aeff216cf1ae101d898914abe771" translate="yes" xml:space="preserve">
          <source>IDBEnvironmentSync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a439a7e162c2ee10d9c235c11d8528d29d0ede0" translate="yes" xml:space="preserve">
          <source>IDBFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04e98fc64495a807179d7ca6e7ba9518cbd27cc" translate="yes" xml:space="preserve">
          <source>IDBFactory.cmp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5882a44213a42203bdf20ea62a5c09882a96bd93" translate="yes" xml:space="preserve">
          <source>IDBFactory.deleteDatabase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c99d65a7056afce3fa28e9e173deafe2cf28e4" translate="yes" xml:space="preserve">
          <source>IDBFactory.open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e4459d2f73412053e71296aa616c93a159bf96" translate="yes" xml:space="preserve">
          <source>IDBFactorySync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3135a259fac9801ae755a2964bf3b80f43e57c6c" translate="yes" xml:space="preserve">
          <source>IDBIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753e3576cf3d0d2e90125eeddfb46f96b03a9c04" translate="yes" xml:space="preserve">
          <source>IDBIndex.count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f785a4cfa02dbd65bc699437dcf70d623ff2397" translate="yes" xml:space="preserve">
          <source>IDBIndex.get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5361e95f23872a2a4a0553eca0a345a85e17026" translate="yes" xml:space="preserve">
          <source>IDBIndex.getAll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28aee9bf16b649c35ddea76f02a97cf6da9b2e2d" translate="yes" xml:space="preserve">
          <source>IDBIndex.getAllKeys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21ebb2065eca21041d3dc6760d756e12fd32c6b" translate="yes" xml:space="preserve">
          <source>IDBIndex.getKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08622ebe96f4fd0ae32693320731d51e7a794593" translate="yes" xml:space="preserve">
          <source>IDBIndex.isAutoLocale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c02e1d7e14cdb6e7c8c6cfab34f56fbb976923" translate="yes" xml:space="preserve">
          <source>IDBIndex.keyPath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67845f311bdebd4c6354560c894fd374913919ec" translate="yes" xml:space="preserve">
          <source>IDBIndex.locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ee052af85b6c54871c68a2c48601f0fc2cb769" translate="yes" xml:space="preserve">
          <source>IDBIndex.multiEntry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b5e0d804dff23f90195e0394acb11e4950e819" translate="yes" xml:space="preserve">
          <source>IDBIndex.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de9072d669480e2cca2e23bfe349d58050689e7" translate="yes" xml:space="preserve">
          <source>IDBIndex.objectStore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2133069703b1fd3ba77f2d230d5f13f3514d6c" translate="yes" xml:space="preserve">
          <source>IDBIndex.openCursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d61c2418423b18ee13499283784daaca23e2b4" translate="yes" xml:space="preserve">
          <source>IDBIndex.openKeyCursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1478fcf1919174d86d5b63cc37e6a0e7bf580a47" translate="yes" xml:space="preserve">
          <source>IDBIndex.unique</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55e0c579c116f0c41684757c05b9c976339b70f" translate="yes" xml:space="preserve">
          <source>IDBIndexSync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d559ff64e9d3ef8a93a8a4f00b27edffdd5418" translate="yes" xml:space="preserve">
          <source>IDBKeyRange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab876e397efe1b6d5b9d43f9785158825f7239e3" translate="yes" xml:space="preserve">
          <source>IDBKeyRange.bound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d82962e19ca253b7f74f0228d647d3f5bab60b9" translate="yes" xml:space="preserve">
          <source>IDBKeyRange.includes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbe290fc0b537c1edc06a7c3dfc64723cb43208" translate="yes" xml:space="preserve">
          <source>IDBKeyRange.lower</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf358445bda20ce30cb709c391ac50dc09908963" translate="yes" xml:space="preserve">
          <source>IDBKeyRange.lowerBound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f6249a574036e6cc2a9a4d5a9cdb9411b015f7" translate="yes" xml:space="preserve">
          <source>IDBKeyRange.lowerOpen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d6eb4cdc7b9dfd307409ff2ea0bcc7b57e7ea3" translate="yes" xml:space="preserve">
          <source>IDBKeyRange.only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cede795ecbe8d23fc436d092a545ea072006bd70" translate="yes" xml:space="preserve">
          <source>IDBKeyRange.upper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4490985b77ecc926ad1da112c682a6cc649ba673" translate="yes" xml:space="preserve">
          <source>IDBKeyRange.upperBound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ea848232dfcdbe7a60804aad1f74e85bbbe624" translate="yes" xml:space="preserve">
          <source>IDBKeyRange.upperOpen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3860184a7bb514e0c3500a04eb6a2162ff2f377" translate="yes" xml:space="preserve">
          <source>IDBLocaleAwareKeyRange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62954c42f6413de0ea48dddba0a1dee37fd91dea" translate="yes" xml:space="preserve">
          <source>IDBObjectStore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441a9f50c159b8941efd6af3c64bf16317984457" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793f599c41a3ec35237170d3dd1b2e18f91893ae" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.autoIncrement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09fae502ea966b0757e8fcdce397ce1bcc3f2bc" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.clear</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c5703f35801b3b446cf21152fe61c1688782ca" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9950f4a2e301ba1873e96fd49260942a936f62c8" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.createIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dba1a360298d194f4dd1f745c9d3b0d4c6fde0" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b9d0875db07233af3bfec49cff5a9c5ed25cd9" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.deleteIndex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6716c27a3183820758ecaa3066754e0f523cd09b" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197d94828819aa21dc8c3e0fc5fb503568af5461" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.getAll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7a038f4b5d33fddc5243089a78436a4dae24fe" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.getAllKeys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561b808189ad3a4a5e2ed469c6d999316e6b69f7" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.getKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b08cde48baa0b65a259eb7390467c59fddc71a" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55a51c809bb5d3738b1b6ad499e8c2bdec49712" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.indexNames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bba48c9912ca0768d9e0e4940a116aa164ae85" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.keyPath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efa3b8a193db025751b82c4a37e9015cd2343fe" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5c565037d2192b8d34560c10e9ccfb9052b520" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.openCursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70e9f980a1748b431019c1ca8d2b92c12878064" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.openKeyCursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ca300c37102a1a838277d4a7d10eb5990cddcd" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.put</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b355ecc569953912196c63dd0a94f5a9881fc4b" translate="yes" xml:space="preserve">
          <source>IDBObjectStore.transaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fdd868b080c3b9af23c10b2963f78346158284" translate="yes" xml:space="preserve">
          <source>IDBObjectStoreSync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a178bf9e821972d913cfb9513f12c047c02af521" translate="yes" xml:space="preserve">
          <source>IDBOpenDBRequest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d09253cf63ca325b5244dd62bd3079dbdbedb2" translate="yes" xml:space="preserve">
          <source>IDBOpenDBRequest.onblocked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e2be8122622e99de1154d9849ae02ed790e7d2" translate="yes" xml:space="preserve">
          <source>IDBOpenDBRequest.onupgradeneeded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c38254393142d9798aef7a60e9e083b58817ace" translate="yes" xml:space="preserve">
          <source>IDBRequest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4507dbd2e552ab5cd1348597c0c9e790580f03" translate="yes" xml:space="preserve">
          <source>IDBRequest.error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2838082a323256b81c324e702b1325e3ea159d7b" translate="yes" xml:space="preserve">
          <source>IDBRequest.onerror</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2948ed7eb30839e88b30c7cab22a11b9c8d996e5" translate="yes" xml:space="preserve">
          <source>IDBRequest.onsuccess</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94dcb560f438261ab02636f06151a1b3200b1202" translate="yes" xml:space="preserve">
          <source>IDBRequest.readyState</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0d3323b189f93a43fb9edd1ed9a0bf74695477" translate="yes" xml:space="preserve">
          <source>IDBRequest.result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e7a0608585ef681f0f7d37b6bc5cd87f631f2a" translate="yes" xml:space="preserve">
          <source>IDBRequest.source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd0c2beb98858bc25e64d648cb737646a595dea" translate="yes" xml:space="preserve">
          <source>IDBRequest.transaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2968a928cb95908d3fddc0b373b33fec5b6899" translate="yes" xml:space="preserve">
          <source>IDBTransaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcae77b840e059eb38cd3625fe949f66667611d2" translate="yes" xml:space="preserve">
          <source>IDBTransaction.ObjectStoreNames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e22eabd8cf54bc8edced4b0911f34b5fa37689" translate="yes" xml:space="preserve">
          <source>IDBTransaction.abort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c34f6976ece52ec2cc2bc37129c52febb6820fc" translate="yes" xml:space="preserve">
          <source>IDBTransaction.db</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3f047a6328e1925a3135d60270fafe19761e0b" translate="yes" xml:space="preserve">
          <source>IDBTransaction.error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd4b2cbfe148ebb003f64634a8053150baf1a82" translate="yes" xml:space="preserve">
          <source>IDBTransaction.mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b941aa51411cc848d3f04953aa919aa6b7615bd5" translate="yes" xml:space="preserve">
          <source>IDBTransaction.objectStore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e30176ced5977a3fad2ac8a1fc3de2c108fa890" translate="yes" xml:space="preserve">
          <source>IDBTransaction.onabort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb941d74b04dd9f67e40fe4c4dfc7c75319e6e5d" translate="yes" xml:space="preserve">
          <source>IDBTransaction.oncomplete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adb8daca4625c2274ddfd6ad5b7d57f0e056e8b" translate="yes" xml:space="preserve">
          <source>IDBTransaction.onerror</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5d09c2f4ce18ba3b9fd969f637f8ef7103339a" translate="yes" xml:space="preserve">
          <source>IDBTransactionSync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f41c38856a6ab3c9fe2451b93069b19d5c2c8ca" translate="yes" xml:space="preserve">
          <source>IDBVersionChangeEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf806dfdc3f19183d2a98245a965ee5a8b0f138" translate="yes" xml:space="preserve">
          <source>IDBVersionChangeEvent.newVersion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9eac37e223ad295fa208834f713cc75d786e8c3" translate="yes" xml:space="preserve">
          <source>IDBVersionChangeEvent.oldVersion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16dacda4ebb76e0f6522393f530114222c7a5d05" translate="yes" xml:space="preserve">
          <source>IDBVersionChangeEvent.version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a2b07bff3eb1b1932c52ae9cf8b0d8ef40b0b2" translate="yes" xml:space="preserve">
          <source>IDBVersionChangeRequest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58dec0e97ee503376b37e038337e1df9d598814" translate="yes" xml:space="preserve">
          <source>IDBVersionChangeRequest.setVersion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ba58e7a9032318e90a9426c477e1f33a9b3b56" translate="yes" xml:space="preserve">
          <source>IE 11 and &amp;lt; is not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7d126d16997b97355174dcda4c6bb9cf8e2b48" translate="yes" xml:space="preserve">
          <source>IE Mobile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae48cabc865f579cd257943f14d598abe89f944b" translate="yes" xml:space="preserve">
          <source>IE Phone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01afc94256fe510814a29835a2c09d6db9f631bb" translate="yes" xml:space="preserve">
          <source>IE only fix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9538330c1d379224d54fe7a4e3a5936feffc03f8" translate="yes" xml:space="preserve">
          <source>IE only trims whitespace &amp;mdash; it doesn't remove duplicates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24d25b34bfac2783c64d2d26bd14156cfa39860" translate="yes" xml:space="preserve">
          <source>IE reports &lt;code&gt;false&lt;/code&gt; for broken images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45ded0e56c24e614482f606d5863abbe3233d19" translate="yes" xml:space="preserve">
          <source>IE's impementation does not completely match the current spec because it is based on an older version of the spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b648afe410c8a4ddcee5751161a1c20ebef9ad" translate="yes" xml:space="preserve">
          <source>IE/Edge Phone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fea79657f0fe5c8901b5cb65de6793531ddbbb" translate="yes" xml:space="preserve">
          <source>IE10 had an important limitation: see this &lt;a href=&quot;https://stackoverflow.com/questions/16226924/is-cross-origin-postmessage-broken-in-ie10&quot;&gt;article&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb64f5aabba380d97e943a23a8a88e3419c2ae8c" translate="yes" xml:space="preserve">
          <source>IE9 supports an old draft of the spec where this value was a &lt;code&gt;long&lt;/code&gt; instead of a &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4efbe829bfadd103e609d3d8a82da83f529fd21" translate="yes" xml:space="preserve">
          <source>IE9 uses &lt;code&gt;&quot;Scroll&quot;&lt;/code&gt; for &lt;code&gt;&quot;ScrollLock&quot;&lt;/code&gt; and &lt;code&gt;&quot;Win&quot;&lt;/code&gt; for &lt;code&gt;&quot;OS&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b8f34e362e4deaf2ea311d80aa21d8be296b0e" translate="yes" xml:space="preserve">
          <source>IIFE &lt;a href=&quot;https://en.wikipedia.org/wiki/Immediately-invoked_function_expression&quot;&gt;Immediately-invoked function expression&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5455d70c9235916c684ee6077ecda1cab83e4b10" translate="yes" xml:space="preserve">
          <source>IIRFilterNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2ee21ea01a08954ea08468c4f0844b3d7073b9" translate="yes" xml:space="preserve">
          <source>IIRFilterNode.constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a78351c2f2732f2dc6bd51dd4d250c82fa9e5d" translate="yes" xml:space="preserve">
          <source>IIRFilterNode.getFrequencyResponse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df468a56bd56aa9e8d6bfc9d798c95363105d88" translate="yes" xml:space="preserve">
          <source>INDEX_SIZE_ERR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511cb4aa9025bfe51faa8b7722b23973974608e3" translate="yes" xml:space="preserve">
          <source>Ideally, a touch-based application does not need to explicitly address mouse input. However, because the browser must emulate mouse events, there may be some interaction issues that need to be handled. Below are some details about the interaction and the ramifications for application developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fccf9f640cf27bc349051fa7a0e251ec95cb6d65" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57f1ef5570f3346086d7e451166416fac3c6651" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats.codecId' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8f03a2578d9ce8eba2137c0f00b3c4db523be4" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats.firCount' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b793648cc5b282c54db6ea5debb77bf55c11a3b" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats.kind' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c7897848b0234960100701322be05bc96071be" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats.nackCount' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f2f53ecdc3d4623666c25e1782a6a6cf1e375c" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats.pliCount' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6383fd0303e5d52fd5da36089e81cca64a160271" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats.qpSum' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacd41d29f3d197d26a605166c1c57873d87e4c2" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats.sliCount' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc8f5a5721e3f334a273898c7445722d8d706a6" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats.ssrc' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8637c5f5c86047e21ec1d6de9403267d17df2d4" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats.trackId' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fdbe75176922d08a71397592f02f7407ed9d79" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCRtpStreamStats.transportId' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afa6a3bb8607fdcc5f4a655604b38c91e499d91" translate="yes" xml:space="preserve">
          <source>Identifiers for WebRTC's Statistics API&lt;br/&gt;&lt;small&gt;The definition of 'RTCStatsType' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38983aaa5bde4228875380f22bb1e3d39036987a" translate="yes" xml:space="preserve">
          <source>Identifies an ICE transport being used for RTCP, which is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3550#section-6&quot;&gt;RFC 3550, section 6&lt;/a&gt;. This value of &lt;code&gt;RTCIceComponent&lt;/code&gt; corresponds to the component ID 2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8aff558bd3f55283f6c5461fbf74c4f04e93f93" translate="yes" xml:space="preserve">
          <source>Identifies an ICE transport which is being used for the &lt;a href=&quot;../webrtc_api/intro_to_rtp&quot;&gt;Real-time Transport Protocol&lt;/a&gt; (RTP), or for RTP multiplexed with the RTP Control Protocol (RTCP). RTP is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3550&quot;&gt;RFC 3550&lt;/a&gt;. An &lt;code&gt;RTCIceComponent&lt;/code&gt; of this value corresponds to the component ID field in the &lt;code&gt;candidate&lt;/code&gt; a-line with the value 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df8b6df28c318f0f0fcf3e9dbf6c11cfae0ace1" translate="yes" xml:space="preserve">
          <source>Identifies an ICE transport which is being used for the &lt;a href=&quot;webrtc_api/intro_to_rtp&quot;&gt;Real-time Transport Protocol&lt;/a&gt; (RTP), or for RTP multiplexed with the RTP Control Protocol (RTCP). RTP is defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3550&quot;&gt;RFC 3550&lt;/a&gt;. An &lt;code&gt;RTCIceComponent&lt;/code&gt; of this value corresponds to the component ID field in the &lt;code&gt;candidate&lt;/code&gt; a-line with the value 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910964d2b23b8f77a221b2a7350c312e17f3dfe1" translate="yes" xml:space="preserve">
          <source>Identifies the current target for the event, as the event traverses the DOM. It always refers to the element to which the event handler has been attached, as opposed to &lt;code&gt;event.target&lt;/code&gt; which identifies the element on which the event occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3da988b4394a9fa63cd694895832ff8f99f884" translate="yes" xml:space="preserve">
          <source>Identify links that will open new windows in a way that helps navigation for users by coding the title attribute of the link, by adding an icon at the end of the link or by coding the cursor accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfde00c1f9f2b752f5814110e4eaa9b619c920c" translate="yes" xml:space="preserve">
          <source>Identify what is &lt;em&gt;draggable&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5a975b6add84fd53e3710a9ceac15eb06663b7" translate="yes" xml:space="preserve">
          <source>Identity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b9e8dba97a0044f619d444d511752300039346" translate="yes" xml:space="preserve">
          <source>Identity and security</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d6d10006c10e14e615a3b38043f2c1ae14054d" translate="yes" xml:space="preserve">
          <source>Idle API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa58f61fd8586d6d96c16f03af1d01466490fc8b" translate="yes" xml:space="preserve">
          <source>Idle callbacks support the concept of a timeout in order to ensure that whatever task they're meant to perform actually happens, even if the user agent never has enough idle time available. Your callback will typically check the value of &lt;code&gt;didTimeout&lt;/code&gt; if it needs to perform an action even if the browser is too busy to grant you the time; you should react by performing the needed task or, ideally, a minimal amount of work that can be done to keep things moving along, then schedule a new callback to try again to get the rest of the work done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51dc4bdc04ce7e2b0b2cf581bb6e983ccb6cf972" translate="yes" xml:space="preserve">
          <source>IdleDeadline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80366f1bf93e0d981287a5b5d1b4ec3e0ca75465" translate="yes" xml:space="preserve">
          <source>IdleDeadline.didTimeout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c448c4ba59840c1de022c1032d13d51d3f30ff0" translate="yes" xml:space="preserve">
          <source>IdleDeadline.timeRemaining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4953ef5b7e2ac5664cfe8eb4aebe9ab0584d94" translate="yes" xml:space="preserve">
          <source>If 0 is set, there is no averaging done, whereas a value of 1 means &quot;overlap the previous and current buffer quite a lot while computing the value&quot;, which essentially smoothes the changes across &lt;a href=&quot;getfloatfrequencydata&quot;&gt;&lt;code&gt;AnalyserNode.getFloatFrequencyData&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;getbytefrequencydata&quot;&gt;&lt;code&gt;AnalyserNode.getByteFrequencyData&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194cd2dc82a79849c7091748941891c75819f22f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d25d1a5256c7ad812ad98b4c8853c696e3a957" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../vrdisplaycapabilities/canpresent&quot;&gt;&lt;code&gt;VRDisplayCapabilities.canPresent&lt;/code&gt;&lt;/a&gt; is false, or if the VRLayer array contains more than &lt;a href=&quot;../vrdisplaycapabilities/maxlayers&quot;&gt;&lt;code&gt;VRDisplayCapabilities.maxLayers&lt;/code&gt;&lt;/a&gt; layers, the promise will be rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dc4a4fb10f1f61723fdf55431190d64938edbc" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil()&lt;/code&gt;&lt;/a&gt; is called outside of the &lt;code&gt;ExtendableEvent&lt;/code&gt; handler, the browser should throw an &lt;code&gt;InvalidStateError&lt;/code&gt;; note also that multiple calls will stack up, and the resulting promises will be added to the list of &lt;a href=&quot;https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#dfn-extend-lifetime-promises&quot;&gt;extend lifetime promises&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dba7e89d5836ca50d987dd68517ed5beaf2426" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;http://www.w3.org/TR/speech-synthesis/&quot;&gt;SSML&lt;/a&gt; is used, this value will be overridden by &lt;a href=&quot;http://www.w3.org/TR/speech-synthesis/#S3.2.4&quot;&gt;prosody tags&lt;/a&gt; in the markup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac69a8112cff94fa97efcd7f62c0ae8aab25cb3a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; objects are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962276add2cf5f0be1398f765961b114ca91fbb7" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; is &quot;inactive&quot;, raise a DOM &lt;code&gt;InvalidState&lt;/code&gt; error and terminate these steps. If &lt;a href=&quot;state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; is not &quot;inactive&quot;, continue to the next step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c664bd48efaa9f2c2469beaf645ee89189767410" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; is &quot;inactive&quot;, raise a DOM &lt;code&gt;InvalidState&lt;/code&gt; error and terminate these steps. If not, continue to the next step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f4d623cf054368c9aafcb0ad3fa9923a467f0b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; is &quot;inactive&quot;, raise a DOM &lt;code&gt;InvalidState&lt;/code&gt; error and terminate these steps. If the &lt;a href=&quot;state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; is not &quot;inactive&quot;, continue on to the next step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80566667c748a9b6d9e4b271a47ba912081b983b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; is not &quot;recording&quot;, raise a DOM &lt;code&gt;InvalidState&lt;/code&gt; error and terminate these steps. If &lt;a href=&quot;state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; is &quot;recording&quot;, continue to the next step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54cb2babf9cc8510bfed384bf87e1c787cfd4e8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;window/requestidlecallback&quot;&gt;&lt;code&gt;window.requestIdleCallback&lt;/code&gt;&lt;/a&gt; is undefined, we create it here. The function begins by recording the time at which our implementation was called. We'll be using that to compute the value returned by our shim for &lt;a href=&quot;idledeadline/timeremaining&quot;&gt;&lt;code&gt;timeRemaining()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2152b665d31b1a1767a631242f524008d4521980" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;var&gt;referenceNode&lt;/var&gt;&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the &lt;code&gt;&lt;var&gt;newNode&lt;/var&gt;&lt;/code&gt; is inserted at the end of the list of child nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca358edb2ce8578a4f3d84ce40e3d8a4e279b28" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ChannelMergerNode&lt;/code&gt; has one single output, but as many inputs as there are channels to merge; the number of inputs is defined as a parameter of its constructor and the call to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createChannelMerger&quot;&gt;&lt;code&gt;AudioContext.createChannelMerger&lt;/code&gt;&lt;/a&gt;. In the case that no value is given, it will default to &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03796eaf1577412b684a75aad63d411692bba383" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;addTrack()&lt;/code&gt; is supported, we set up the receiver's &lt;code&gt;ontrack&lt;/code&gt; event handler; otherwise, we set up &lt;code&gt;onaddstream&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; events are sent when media is added to the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0429e54537b130ff9163610ca8ec07a9fc61af27" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;anchorOffset&lt;/code&gt; is larger than the number of child nodes inside &lt;code&gt;anchorNode&lt;/code&gt;, or if &lt;code&gt;focusOffset&lt;/code&gt; is larger than the number of child nodes inside &lt;code&gt;focusNode&lt;/code&gt;, an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexSizeError&quot;&gt;&lt;code&gt;IndexSizeError&lt;/code&gt;&lt;/a&gt; exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93692835a2fc6b5ad992fadd674d3f6f351b9b12" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;autoIncrement&lt;/code&gt; is set to true and &lt;code&gt;keyPath&lt;/code&gt; is either an empty string or an array containing an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517bc0835dc685dd52a5be3572eaa70a5c38d988" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;buffers&lt;/code&gt; contains not one of the accepted values, a &lt;code&gt;gl.INVALID_ENUM&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d592fa6bab3f132cb0fffb565ee29624d672ad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is omitted, the function returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; instead, which contains &lt;code&gt;rootNode&lt;/code&gt; and all nodes contained therein.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c0a87fdf97568d70918d35ccdfab7303456a72" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is provided, and it returns &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;&lt;code&gt;false&lt;/code&gt; when called, the current recursion level is aborted, and the function resumes execution at the last parent's level. This can be used to abort loops once a node has been found (such as searching for a text node that contains a certain string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510bc1824994a98d6c17bdbdcd4ba7468440fdc2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cancelIdleCallback()&lt;/code&gt; isn't defined, this creates one which simply passes the specified callback ID through to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/clearTimeout&quot;&gt;&lt;code&gt;clearTimeout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3ad4527ad0634c7973428a6a4ac9cbad655dd2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;candidateInfo&lt;/code&gt; is provided, the new &lt;code&gt;RTCIceCandidate&lt;/code&gt; is initialized as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e7a0ea8d9106d53844b0fb4d132459b688a7a7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;child&lt;/code&gt; is actually not a child of the &lt;code&gt;element&lt;/code&gt; node, the method throws an exception. This will also happen if &lt;code&gt;child&lt;/code&gt; was in fact a child of &lt;code&gt;element&lt;/code&gt; at the time of the call, but was removed by an event handler invoked in the course of trying to remove the element (eg, blur.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0a2855355a44b6d2c456594b340aaaa3b49731" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;childList&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (the default), adding or removing new nodes does not trigger mutation callbacks. By setting &lt;code&gt;childList&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, your callback will be invoked any time nodes are added to or removed from the DOM node or nodes being watched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd52fbc6ede9205cf2c03bae143617224e18b9e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;count&lt;/code&gt; is negative, a &lt;code&gt;gl.INVALID_VALUE&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c957c54a4dd06b8e931450a5756c66562ab45b06" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;count&lt;/code&gt; or &lt;code&gt;instanceCount&lt;/code&gt; are negative, a &lt;code&gt;gl.INVALID_VALUE&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacc906259a8064c2f02aff1820e79307ee7f558" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;count&lt;/code&gt; or &lt;code&gt;primcount&lt;/code&gt; are negative, a &lt;code&gt;gl.INVALID_VALUE&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39a4f7186c440b7cc284ca8831fcf3eb97f7a62" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;deep&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;, the whole subtree (including text that may be in child &lt;a href=&quot;../text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes) is copied too. For empty nodes (e.g. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; elements) it doesn't matter whether &lt;code&gt;deep&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7471640a5dda21f90bac4cff17201865066376fa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;deep&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, child nodes are not cloned. Any text that the node contains is not cloned either, as it is contained in one or more child &lt;a href=&quot;../text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfe7b250d277042830d0c823fdffb1151b7ff09" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;didTimeout&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;IdleDeadline&lt;/code&gt; object's &lt;a href=&quot;timeremaining&quot;&gt;&lt;code&gt;timeRemaining()&lt;/code&gt;&lt;/a&gt; method will return approximately 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc4ef75c66989b005705fa3f6325ec07b601a7f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;done&lt;/code&gt; is not true, we process the new chunk we&amp;rsquo;ve read (contained in the &lt;code&gt;value&lt;/code&gt; property of the results object) and then call the &lt;code&gt;pump()&lt;/code&gt; function again to read the next chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8b3afb5d63328c28778f432ef07b7b994c3ad5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;event.candidate&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, that indicates that there are no more candidates available, and we log that information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab398f8326e7d35546910abc714a16315fd0081c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt;, the bottom of the element will be aligned to the bottom of the visible area of the scrollable ancestor. Corresponds to &lt;code&gt;scrollIntoViewOptions: {block: &quot;end&quot;, inline: &quot;nearest&quot;}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88835e5e53000689b9dc483e391103c0b2744bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt;, the method will scroll the element into the visible area of the browser window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231d6931e4332a70116ab7f7c9d3abc715de66ce" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;first&lt;/code&gt; or &lt;code&gt;count&lt;/code&gt; are negative, a &lt;code&gt;gl.INVALID_VALUE&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01a910113b2ce214e93f5fa0cbd7f241852bfd7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;first&lt;/code&gt;, &lt;code&gt;count&lt;/code&gt; or &lt;code&gt;primcount&lt;/code&gt; are negative, a &lt;code&gt;gl.INVALID_VALUE&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3fdfe6187e60c054b8021062b050658a5af4c2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fullscreenElement&lt;/code&gt; isn't &lt;code&gt;null&lt;/code&gt;, this returns &lt;code&gt;true&lt;/code&gt;, indicating that full-screen mode is in effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae243b8dd2b6dac71efad0b587e68e9cb0a2214b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;getSenders()&lt;/code&gt; isn't available, we instead call &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createDTMFSender&quot;&gt;&lt;code&gt;RTCPeerConnection.createDTMFSender()&lt;/code&gt;&lt;/a&gt; to get the &lt;code&gt;RTCDTMFSender&lt;/code&gt; object. Although this method is obsolete, this example supports it as a fallback to let older browsers (and those not yet updated to support the current WebRTC DTMF API) run the example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88308eefcb6fc8eeabcb061902cbaa2cc8b268e9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;index&lt;/code&gt; is -1 or equal to the number of cells, the cell is appended as the last cell in the row. If &lt;code&gt;index&lt;/code&gt; is greater than the number of cells, an IndexSizeError exception will result. If index is omitted it defaults to -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abb4477bcb72edea6940bbd20384d169fcb506f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;index&lt;/code&gt; is -1 or equal to the number of rows, the row is appended as the last row. If &lt;code&gt;index&lt;/code&gt; is greater than the number of rows, an IndexSizeError exception will result. If index is omitted it defaults to -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1594bf63967d155fd497b90d95305274669219b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;label&lt;/code&gt; is not supplied and &lt;code&gt;count()&lt;/code&gt; has not been callsed, &lt;code&gt;countReset&lt;/code&gt; returns the warning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4d2b9e8feb7304bfd170f19dbbc8e4870a1b06" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;label&lt;/code&gt; is omitted, the function logs the number of times &lt;code&gt;count()&lt;/code&gt; has been called at this particular line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea659331d62f170f90c96b4486e7706da0c0552" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;label&lt;/code&gt; is omitted, the function resets the default counter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f798a32b5ab491129759b8b91c841e9511c31c1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;label&lt;/code&gt; is supplied and does not exist, &lt;code&gt;countReset&lt;/code&gt; returns the warning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="accac9d075d1e1bf94c9490a3d4d36df4822367a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;label&lt;/code&gt; is supplied, this function logs the number of times &lt;code&gt;count()&lt;/code&gt; has been called with that particular label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68003bf759fb146f11411688e986000508aaf226" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;label&lt;/code&gt; is supplied, this function resets the count associated with that particular label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82779d0989d6503f7541e4b788e08f386685893" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;lastStarted&lt;/code&gt; is non-zero&amp;mdash;meaning the timer is currently running, we compute the difference between the current time and the start time to determine the number of milliseconds the timer has been visible since the last time it became visible. This is added to the current value of the ad's &lt;code&gt;totalViewTime&lt;/code&gt; to bring the total up to date. Note the use of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/parseFloat()&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; here; because these values are strings, JavaScript tries to do a string concatenation instead of addition without it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4c209744344de13fe9d4ad6b91fe433f27e72f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;latencyHint&lt;/code&gt; isn't valid, Chrome throws a &lt;code&gt;TypeError&lt;/code&gt; exception. See &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/AudioContext/AudioContext#Non-standard_exceptions_in_Chrome&quot;&gt;Non-standard exceptions in Chrome&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c774e600f1c5140302f0d5133e43e6066ed5fa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;leftBounds&lt;/code&gt; is not specified in the dictionary, the default value used is &lt;code&gt;[0.0, 0.0, 0.5, 1.0]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ce8d7f2aca80fad9db4425a060606565ae0400" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;leftBounds&lt;/code&gt; is not specified in the dictionary, the default value used is &lt;code&gt;[0.5, 0.0, 0.5, 1.0]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e11b542ff2df2ee43be83d681231d5397326f63" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is not one of the accepted values, a &lt;code&gt;gl.INVALID_ENUM&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9669b712b08df69872f873d2e96c1383d97752" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newTrack&lt;/code&gt; was omitted or was &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;replaceTrack()&lt;/code&gt; simply stops the sender. No negotiation is required in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c823032e34c49969ad963a50afdcc296c1e5a01b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;offset&lt;/code&gt; is a valid multiple of the size of the given type, a &lt;code&gt;gl.INVALID_OPERATION&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c523069e20e1f6d9bdf9d7596063e854e23ee2c8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;offset&lt;/code&gt; is not a valid multiple of the size of the given type, a &lt;code&gt;gl.INVALID_OPERATION&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcaf097a41c0203bf8a7105577947f6ca33520d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;playbackRate&lt;/code&gt; is negative, the media is played backwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26459a153354a62b1514faf14dff5e99005e33e5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;playing&lt;/code&gt; is false, indicating that we're currently paused, we change the play button's content to be the Unicode character &quot;pause symbol&quot; (⏸) and call &lt;code&gt;startOscillators()&lt;/code&gt; to start the oscillators playing their tones. That code is covered under &lt;a href=&quot;#Starting_the_oscillators&quot;&gt;Starting the oscillators&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749c6d98afc1617916d12db9235497f308fc35e9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pname&lt;/code&gt; is &lt;code&gt;ext.CURRENT_QUERY_EXT&lt;/code&gt;: A &lt;a href=&quot;../webglquery&quot;&gt;&lt;code&gt;WebGLQuery&lt;/code&gt;&lt;/a&gt; object, which is the currently active query for the given target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899492946b686f21dae38a852ea0fd00eef551a3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pname&lt;/code&gt; is &lt;code&gt;ext.QUERY_COUNTER_BITS_EXT&lt;/code&gt;: A &lt;a href=&quot;../webgl_api/types&quot;&gt;&lt;code&gt;GLint&lt;/code&gt;&lt;/a&gt; indicating the number of bits used to hold the query result for the given target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1e6f9584725df8939d9e08acd99f1acd6d72c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pname&lt;/code&gt; is &lt;code&gt;ext.QUERY_RESULT_AVAILABLE_EXT&lt;/code&gt;: A &lt;a href=&quot;../webgl_api/types&quot;&gt;&lt;code&gt;GLboolean&lt;/code&gt;&lt;/a&gt; indicating whether or not a query result is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a69a03e308e56ef7bcdd7cf1990e03aea9beda" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pname&lt;/code&gt; is &lt;code&gt;ext.QUERY_RESULT_EXT&lt;/code&gt;: A &lt;a href=&quot;../webgl_api/types&quot;&gt;&lt;code&gt;GLuint64EXT&lt;/code&gt;&lt;/a&gt; containing the query result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8448e54c6430d6be30dd45e03abbf1f843db4eef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pointerId&lt;/code&gt; does not match any the active pointers, this method returns &lt;code&gt;void&lt;/code&gt; and throws a &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with the name &lt;code&gt;InvalidPointerId&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ec484450ee2d4196db45b7d252dcfe91e4a089" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;protocol&lt;/code&gt; is &lt;code&gt;&quot;tcp&quot;&lt;/code&gt;, &lt;code&gt;tcpType&lt;/code&gt; represents the type of TCP candidate. Otherwise, &lt;code&gt;tcpType&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f3fc25cf73f2e340e5b8e7df8ba2a03fc21100" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;repetition&lt;/code&gt; is specified as an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; (but not &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;), a value of &lt;code&gt;&quot;repeat&quot;&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690e9c1a42a4580a77481ec21f1a33a878f3e9a6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;requestPresent()&lt;/code&gt; is called outside of an engagement gesture the promise will be rejected unless the &lt;code&gt;VRDisplay&lt;/code&gt; was already presenting. This engagement gesture is also sufficient to allow &lt;code&gt;&lt;a href=&quot;../element/requestpointerlock&quot;&gt;requestPointerLock()&lt;/a&gt;&lt;/code&gt; calls until presentation has ended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031c7e3220100c67279ec266ac0de0f169dafe08" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;root&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the bounds of the document's viewport (that is, the visible area of the document) are used as the root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59f4fe542398ac6cb379643073f7696ca9cb73d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;rootMargin&lt;/code&gt; isn't specified when the object was instantiated, it defaults to the string &lt;code&gt;&quot;0px 0px 0px 0px&quot;&lt;/code&gt;, meaning that the intersection will be computed between the root element's unmodified bounds rectangle and the target's bounds. &lt;a href=&quot;../intersection_observer_api#The_root_element_and_root_margin&quot;&gt;The root element and root margin&lt;/a&gt; in &lt;a href=&quot;../intersection_observer_api&quot;&gt;Intersection Observer API&lt;/a&gt; describes how the &lt;code&gt;rootMargin&lt;/code&gt; is used in more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619ab9ea44525ee8dcf52a7d50413d0a1b432514" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;setLocalDescription()&lt;/code&gt; is called while a connection is already in place, it means renegotiation is underway (possibly to adapt to changing network conditions). Because descriptions will be exchanged until the two peers agree on a configuration, the description submitted by calling &lt;code&gt;setLocalDescription()&lt;/code&gt; does not immediately take effect. Instead, the current connection configuration remains in place until negotiation is complete. Only then does the agreed-upon configuration take effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0574b01f9a40a917b1f878c702013821b25b3da0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;show()&lt;/code&gt; is rejected,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2640c519dcd75433c83a8e1431428a0d54af1d91" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;show()&lt;/code&gt; resolves, the returned &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; describes the completed payment; the process is complete, and no further steps are taken</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccda96ba9d8bfe6022999fc58845a7b6bf673d0d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sp2&lt;/code&gt; does not have a next sibling, then it must be the last child &amp;mdash; &lt;code&gt;sp2.nextSibling&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;, and &lt;code&gt;sp1&lt;/code&gt; is inserted at the end of the child node list (immediately after &lt;code&gt;sp2&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1dc2311cbb9ba69224b3dcd35fbde62be11c3b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;streams&lt;/code&gt; is not specified, its default value is an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd85ac1d22a17665b5620a2aae23511843145da2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;title &lt;/code&gt;is subsequently used by browsers, this data can be utilized (independent of, say, the hash).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb381434f6ecd77f3c611b1075eca14911a4dfef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt; is specified for a media type, the resulting stream is &lt;em&gt;required&lt;/em&gt; to have that type of track in it. If one cannot be included for any reason, the call to &lt;code&gt;getUserMedia()&lt;/code&gt; will result in an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323ccad2981c9a503bdbaab489b1a3a4a816bc81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, all events are targeted directly to this element; if &lt;code&gt;false&lt;/code&gt;, events can also fire at descendants of this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eeaa82d160473fc80e3984ed108fd43fc05b239" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, and the &lt;code&gt;create&lt;/code&gt; option is also &lt;code&gt;true&lt;/code&gt;, the file must not exist prior to issuing the call. Instead, it must be possible for it to be created newly at call time. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030287fa2ebc6a5b32c6e3b7170beb1ea7dbc186" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the callback specified when &lt;a href=&quot;../mutationobserver/observe&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt; was used to start observing the node or subtree is called any time the contents of a text node are changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e86a953251309275581bd391c0ab426b49cd6bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the callback specified when &lt;a href=&quot;../mutationobserver/observe&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt; was used to start observing the node or subtree will be called any time one or more attributes have changed on observed nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3949329ce22654d07c141b16be6f464ea427c484" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the described encoding is currently actively being used. That is, for RTP senders, the encoding is currently being used to send data, while for receivers, the encoding is being used to decode received data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620e722b6cece264ab47d4a666b434a2750aa758" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the index will add an entry in the index for each array element when the &lt;em&gt;keyPath&lt;/em&gt; resolves to an Array. If &lt;code&gt;false&lt;/code&gt;, it will add one single entry containing the Array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a2134fd94f46bc5971b26ea4b1c7c8b9cc70b8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the method will NOT scroll the element into the visible area of the browser window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12237538304f0d2fe560307a7fd525c46d8f5085" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the object store has a &lt;a href=&quot;../indexeddb_api/basic_concepts_behind_indexeddb#gloss_keygenerator&quot;&gt;key generator&lt;/a&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67da9b6545223735447d508544ac1e6bb6113b95" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the top of the element will be aligned to the top of the visible area of the scrollable ancestor. Corresponds to &lt;code&gt;scrollIntoViewOptions: {block: &quot;start&quot;, inline: &quot;nearest&quot;}&lt;/code&gt;. This is the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4daf271d73024d14728e121cd2e46cb9c5210b9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, this index does not allow duplicate values for a key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e55cd771f53a166415de2ad37e204ac955a2da" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, that information was missing from the &lt;a href=&quot;candidate&quot;&gt;&lt;code&gt;candidate&lt;/code&gt;&lt;/a&gt;'s a-line, which will cause &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;RTCPeerConnection.addIceCandidate()&lt;/code&gt;&lt;/a&gt; to throw an &lt;code&gt;OperationError&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29d0173832f4ab64998ac0fc875cd414720b789" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mask&lt;/em&gt; is not one of the listed possible values, a &lt;code&gt;gl.INVALID_ENUM&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47c153808708a603d0aac2104ecbbbc9fa6e12a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mode&lt;/em&gt; is not one of the three possible values, a &lt;code&gt;gl.INVALID_ENUM&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2328691dc81492a15ce48383e64d4736f3c2a77" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;sfactor&lt;/em&gt; or &lt;em&gt;dfactor&lt;/em&gt; is not one of the listed possible values, a &lt;code&gt;gl.INVALID_ENUM&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ef2630e818c779e0727166b60342e68373ab0a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;srcRGB&lt;/em&gt;, &lt;em&gt;dstRGB&lt;/em&gt;, &lt;em&gt;srcAlpha&lt;/em&gt;, or &lt;em&gt;dstAlpha&lt;/em&gt; is not one of the listed possible values, a &lt;code&gt;gl.INVALID_ENUM&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6573054ce7df047e6f31e998d5d90ebfcb0d932a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;texture&lt;/em&gt; is not one of &lt;code&gt;gl.TEXTURE&lt;em&gt;I&lt;/em&gt;&lt;/code&gt;, where &lt;em&gt;I&lt;/em&gt; is within the range from 0 to &lt;code&gt;gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1&lt;/code&gt;, a &lt;code&gt;gl.INVALID_ENUM&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46704ff9d32d009d9171f83894d11bf5cfff3f4" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;deep&lt;/var&gt; is set to &lt;code&gt;false&lt;/code&gt;, then only &lt;var&gt;externalNode&lt;/var&gt; is imported &amp;mdash; the new node has no children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a23a99747d647f68fc6673f941f5a0ebd15fc8" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;deep&lt;/var&gt; is set to &lt;code&gt;true&lt;/code&gt;, then &lt;var&gt;externalNode&lt;/var&gt; and all of its descendants are copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdb0c99c41ffa8d7949cbef7df25ccff62be34a" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;index&lt;/var&gt; &amp;gt; &lt;code&gt;&lt;a href=&quot;../cssrulelist&quot;&gt;CSSRuleList&lt;/a&gt;.length&lt;/code&gt;, then aborts with &lt;code&gt;IndexSizeError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb26d4edfeb8aad895285f4c47dfddb2ecb93eb" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;rule&lt;/var&gt; cannot be inserted at &lt;var&gt;index&lt;/var&gt;&lt;code&gt;0&lt;/code&gt; due to some CSS constraint, then aborts with &lt;code&gt;HierarchyRequestError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d1b2b1bcef5e841fc0e47c05ab3e7447c08833" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;rule&lt;/var&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/@namespace&quot;&gt;&lt;code&gt;@namespace&lt;/code&gt;&lt;/a&gt; and the rule-list has more than just &lt;code&gt;@import&lt;/code&gt; at-rules and/or &lt;code&gt;@namespace&lt;/code&gt; at-rules, then aborts with &lt;code&gt;InvalidStateError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8ab914a90d346b2df8e2bf8b1351e2d92a9e74" translate="yes" xml:space="preserve">
          <source>If Animation objects are DVD players, we can think of Animation Effects, or Keyframe Effects, as DVDs. Keyframe Effects are a bundle of information including at the bare minimum a set of keys and the duration they need to be animated over. The Animation Object takes this information and, using the Timeline Object, assembles a playable animation we can view and reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27918b73cb393a6c6efd68b86ebf4eb41d23f3fe" translate="yes" xml:space="preserve">
          <source>If DOM Core methods &lt;a href=&quot;../document/createelement&quot;&gt;&lt;code&gt;document.createElement&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../node/appendchild&quot;&gt;&lt;code&gt;Node.appendChild&lt;/code&gt;&lt;/a&gt; are used to create rows and cells, IE requires that they are appended to a tbody element, whereas other browsers will allow appending to a table element (the rows will be added to the last tbody element).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982ce78bfe0899d6561a3fe72af587dd0f2498a8" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../web_workers_api&quot;&gt;worker&lt;/a&gt; script is intercepted, then the final URL is used to set &lt;code&gt;&lt;a href=&quot;../workerglobalscope/location&quot;&gt;self.location&lt;/a&gt;&lt;/code&gt; and used as the base URL for relative URLs in the worker script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95e360da094d856a9382e51d48169789229380c" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt; is intercepted, then you can observe the final URL on the result's &lt;a href=&quot;../response/url&quot;&gt;&lt;code&gt;Response.url&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32be54722731c696647c08bffaf12fd4217f608c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;timeslice&lt;/code&gt; property was passed into the &lt;a href=&quot;start&quot;&gt;&lt;code&gt;MediaRecorder.start()&lt;/code&gt;&lt;/a&gt; method that started media capture, a &lt;code&gt;dataavailable&lt;/code&gt; event is fired every &lt;code&gt;timeslice&lt;/code&gt; milliseconds. That means that each blob will have a specific time duration (except the last blob, which might be shorter, since it would be whatever is left over since the last event). So if the method call looked like this &amp;mdash; &lt;code&gt;recorder.start(1000);&lt;/code&gt; &amp;mdash; the &lt;code&gt;dataavailable&lt;/code&gt; event would fire after each second of media capture, and our event handler would be called every second with a blob of media data that's one second long. You can use &lt;code&gt;timeslice&lt;/code&gt; alongside &lt;a href=&quot;stop&quot;&gt;&lt;code&gt;MediaRecorder.stop()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;requestdata&quot;&gt;&lt;code&gt;MediaRecorder.requestData()&lt;/code&gt;&lt;/a&gt; to produce multiple same-length blobs plus other shorter blobs as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a338065f04250efee03c03c4ea6c30db4da545d7" translate="yes" xml:space="preserve">
          <source>If a Boolean value is specified, it simply indicates whether or not a video track should be included in the returned stream; if it's &lt;code&gt;true&lt;/code&gt;, a video track is included; if no video source is available or if permission is not given to use the video source, the call to &lt;code&gt;getUserMedia()&lt;/code&gt; will fail. If &lt;code&gt;false&lt;/code&gt;, no video track is included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a03a23e0f6e7105a5cd3193a4c020aaa8216e23" translate="yes" xml:space="preserve">
          <source>If a Boolean value is specified, it simply indicates whether or not an audio track should be included in the returned stream; if it's &lt;code&gt;true&lt;/code&gt;, an audio track is included; if no audio source is available or if permission is not given to use the audio source, the call to &lt;code&gt;getUserMedia()&lt;/code&gt; will fail. If &lt;code&gt;false&lt;/code&gt;, no audio track is included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25a0067b078195f8f052491cae614cc8ea9c795" translate="yes" xml:space="preserve">
          <source>If a File is created dynamically, the last modified time can be supplied in the &lt;a href=&quot;file&quot;&gt;&lt;code&gt;new File()&lt;/code&gt;&lt;/a&gt; constructor function. If it is missing, lastModified inherits the current time from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/now&quot;&gt;&lt;code&gt;Date.now()&lt;/code&gt;&lt;/a&gt; at the moment the File object gets created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb41e8199d22e48d4484ef8af1147394b4e5e62" translate="yes" xml:space="preserve">
          <source>If a XUL document attempts to load an overlay without the compile flag, an error will be thrown (see &lt;a href=&quot;https://bugzil.la/1448162&quot;&gt;bug 1448162&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb19c7d75aa645e165925d5ff6ac4b21483f3c0b" translate="yes" xml:space="preserve">
          <source>If a box is marked as &lt;code&gt;&quot;persistent&quot;&lt;/code&gt;, the contents won't be cleared by the user agent without either the data's origin itself or the user specifically doing so. This includes scenarios such as the user selecting a &quot;Clear Caches&quot; or &quot;Clear Recent History&quot; option. The user will be asked specifically for permission to remove persistent site storage units.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc3fc75f834ef09b53255ba948f8925b96411a0" translate="yes" xml:space="preserve">
          <source>If a call to &lt;code&gt;requestPresent()&lt;/code&gt; is rejected while the &lt;code&gt;VRDisplay&lt;/code&gt; is already presenting it will end its presentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47393085ec511cf05e3aafbed2fb2dc1e4ca83cf" translate="yes" xml:space="preserve">
          <source>If a candidate represents both RTP and RTCP multiplexed together, it is reported as an RTP candidate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d6c6cc82461d4e6732071f55c9baa8203e19a3" translate="yes" xml:space="preserve">
          <source>If a chunk is available to read, the promise will be fulfilled with an object of the form { value: theChunk, done: false }.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c08a4574859b0619f4ac04b2a04d52d712fd90b" translate="yes" xml:space="preserve">
          <source>If a chunk is available, the promise will be fulfilled with an object of the form &lt;code&gt;{ value: theChunk, done: false }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd92ddfa9888bf15ea0a1943ec3976d554244691" translate="yes" xml:space="preserve">
          <source>If a constant color and a constant alpha value are used together as source (&lt;code&gt;srcRGB&lt;/code&gt;) and destination (&lt;code&gt;dstRGB&lt;/code&gt;) factors, a &lt;code&gt;gl.INVALID_ENUM&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c97ef50b8abc54958b8f39424c4c9472377271" translate="yes" xml:space="preserve">
          <source>If a constant color and a constant alpha value are used together as source and destination factors, a &lt;code&gt;gl.INVALID_ENUM&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcab3a30a0556573efb7728a702e6dfbeb15c8bf" translate="yes" xml:space="preserve">
          <source>If a document exists in the target, this method clears it (see the example above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d94ccab02f834a241495ce16ab920998cdc7ab9" translate="yes" xml:space="preserve">
          <source>If a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy&quot;&gt;&lt;code&gt;Feature-Policy&lt;/code&gt;&lt;/a&gt; for implementation insfructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531daa9f2cad8b276e8d1984f784422e9e556294" translate="yes" xml:space="preserve">
          <source>If a feature policy blocks use of a feature it is because your code is inconsistent with the policies set on your server. This is not something that would ever be shown to a user. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy&quot;&gt;&lt;code&gt;Feature-Policy&lt;/code&gt;&lt;/a&gt; for implementation instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="045d8b99cfeabcedaa5f82361f1397c1fd2da253" translate="yes" xml:space="preserve">
          <source>If a form control (such as a reset button) has a name or id of &lt;var&gt;reset&lt;/var&gt; it will mask the form's reset method. It does not reset other attributes in the input, such as &lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c8c2203b848f172fb3b2fe8ec8624ba04ed4c6" translate="yes" xml:space="preserve">
          <source>If a form control (such as a submit button) has a name or id of &lt;code&gt;submit&lt;/code&gt; it will mask the form's submit method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbfc0592d01898c78e3ed24a71e652230dc13c6" translate="yes" xml:space="preserve">
          <source>If a given element is focused, this method draws a focus ring around the current path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38067eb88d8cbb01bf7c7595e2f1c24068fbb727" translate="yes" xml:space="preserve">
          <source>If a key is found it is set as the &lt;code&gt;result&lt;/code&gt; of the request object: this returns the primary key of the record the key is associated with, not the whole record as &lt;a href=&quot;get&quot;&gt;&lt;code&gt;IDBIndex.get&lt;/code&gt;&lt;/a&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7e10e1b5b1af78672c01707c913e094d01a89c" translate="yes" xml:space="preserve">
          <source>If a key is successfully found, then a structured clone of it is created and set as the result of the request object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2e8c45d23f78c59ef0551de55fe102c1f55772" translate="yes" xml:space="preserve">
          <source>If a label parameter is include but there is not corresponding timer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43feae56e6d8d73d6e3d20126e2219f77e447bb6" translate="yes" xml:space="preserve">
          <source>If a label parameter was supplied:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8433738f1725873ab18ca2b40c64bba6c156327" translate="yes" xml:space="preserve">
          <source>If a listener is registered twice, one with capture and one without, remove each one separately. Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232e543bbc8e8a4c6503baa871b9917cbc6c85a8" translate="yes" xml:space="preserve">
          <source>If a local description change is in progress, this is an &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; describing the proposed configuration. Otherwise, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c777d1a2d5bdab0f42a0574151bd7f51a19602" translate="yes" xml:space="preserve">
          <source>If a match wasn&amp;rsquo;t found in the cache, and the network isn&amp;rsquo;t available, you could just match the request with some kind of default fallback page as a response using &lt;a href=&quot;../cachestorage/match&quot;&gt;&lt;code&gt;match()&lt;/code&gt;&lt;/a&gt;, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b00a72365df9d305c470d0b7e57ff7446c0a7c" translate="yes" xml:space="preserve">
          <source>If a match wasn&amp;rsquo;t found in the cache, you could tell the browser to simply &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt; the default network request for that resource, to get the new resource from the network if it is available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c9af16de2ff36fb33cf94ce5eb5f4db7d6a1aa" translate="yes" xml:space="preserve">
          <source>If a node does not have a &lt;code&gt;title&lt;/code&gt; attribute, then the default action is to inherit it from its parent node, which in turn may inherit it from its parent node, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28cb48aae091d84f5c975667b92fa57db3e9d09" translate="yes" xml:space="preserve">
          <source>If a page from top-level origin &lt;code&gt;foo.example&lt;/code&gt; embeds more than one &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;tracker.example&lt;/code&gt;, and one of those &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;s uses the Storage Access API in order to obtain storage access successfully, all other iframes from &lt;code&gt;tracker.example&lt;/code&gt; on &lt;code&gt;foo.example&lt;/code&gt; top-level origins will immediately gain storage access as well, without needing to call &lt;code&gt;requestStorageAccess()&lt;/code&gt; separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440b16bf2ed718ff5d3b5a84d923702caaf987de" translate="yes" xml:space="preserve">
          <source>If a record does not exist in this index with the given key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ec3c2c8b028b5cd3ab0896315663ed96c7efb3" translate="yes" xml:space="preserve">
          <source>If a record exists in this index with a key corresponding to the &lt;em&gt;key&lt;/em&gt; parameter or the index is auto-populated, or if no record exists with a key corresponding to the &lt;em&gt;value&lt;/em&gt; parameter in the index's referenced object store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae284122168952edf6bbd6eef275b8131bf0650" translate="yes" xml:space="preserve">
          <source>If a remote description change is in progress, this is an &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; describing the proposed configuration. Otherwise, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f45210c113c05971fd45e465b3afdcecebe7f34" translate="yes" xml:space="preserve">
          <source>If a shared worker has an AppCache associated with it, you can return a reference to the cache using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15be1dc4b11fdf27bac5533f63d64106ca417ec7" translate="yes" xml:space="preserve">
          <source>If a shared worker is created using a constructor with a &lt;code&gt;name&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93252acf2302dad6ee77c505ba7aeaff5797716a" translate="yes" xml:space="preserve">
          <source>If a stylesheet is intercepted, then the final URL is used as the base URL for resolving relative &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@import&quot;&gt;&lt;code&gt;@import&lt;/code&gt;&lt;/a&gt; loads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab3aafe3f9bbad01f2c8217c606de450e9e060a" translate="yes" xml:space="preserve">
          <source>If a table has multiple &lt;code&gt;tbody&lt;/code&gt; elements, by default, the new row is inserted into the last &lt;code&gt;tbody&lt;/code&gt;. To insert the row into a specific &lt;code&gt;tbody&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f97a2103da4574de90e019eb8606082b9e4458b" translate="yes" xml:space="preserve">
          <source>If a track is found for which &lt;a href=&quot;../mediastreamtrack/id&quot;&gt;&lt;code&gt;MediaStreamTrack.id&lt;/code&gt;&lt;/a&gt; matches the specified &lt;code&gt;id&lt;/code&gt; string, that &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; object is returned. Otherwise, the returned value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63de5e2faecd9d90222041ae3bec3d96c6952ef4" translate="yes" xml:space="preserve">
          <source>If a user has exited pointer lock via the &lt;a href=&quot;https://w3c.github.io/pointerlock/#dfn-default-unlock-gesture&quot;&gt;default unlock gesture&lt;/a&gt;, or pointer lock has not previously been entered for this document, an event generated as a result of an &lt;a href=&quot;https://w3c.github.io/pointerlock/#dfn-engagement-gesture&quot;&gt;engagement gesture&lt;/a&gt; must be received by the document before &lt;a href=&quot;https://w3c.github.io/pointerlock/#dom-element-requestpointerlock&quot;&gt;&lt;code&gt;requestPointerLock&lt;/code&gt;&lt;/a&gt; will succeed. (from &lt;a href=&quot;https://w3c.github.io/pointerlock/#extensions-to-the-element-interface&quot;&gt;https://w3c.github.io/pointerlock/#extensions-to-the-element-interface&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf4750de1c589d2f1bf08c10f2467af405eca2c" translate="yes" xml:space="preserve">
          <source>If a value is found, then a structured clone of it is created and set as the &lt;code&gt;result&lt;/code&gt; of the request object: this returns the record the key is associated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4aab7b47cb3cb7cc6597fb47ac726e08cc8e21" translate="yes" xml:space="preserve">
          <source>If a value is specified for &lt;code&gt;replaceBox&lt;/code&gt;, we use that as the ad element. To do so, we begin by ending observation of the element by calling &lt;a href=&quot;../intersectionobserver/unobserve&quot;&gt;&lt;code&gt;IntersectionObserver.unobserve()&lt;/code&gt;&lt;/a&gt;. Then the local variables for each of the elements that comprise an ad: the ad box itself, the title, the body, and the timer box, are all set to the corresponding elements in the existing ad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8151a517ab3e2c19724f5d68f6d46f1e2525e4" translate="yes" xml:space="preserve">
          <source>If a value is successfully found, then a structured clone of it is created and set as the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/IDBRequest#attr_result&quot;&gt;result&lt;/a&gt;&lt;/code&gt; of the request object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef373f2bee128cde8e75950bdb483d0d5195276" translate="yes" xml:space="preserve">
          <source>If a value is successfully found, then a structured clone of it is created and set as the result of the request object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881d69f80e5f9873a5471e74da8265da215117e8" translate="yes" xml:space="preserve">
          <source>If a window does not have a parent, its &lt;code&gt;parent&lt;/code&gt; property is a reference to itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ee24b48b6b4517756128c057710885058b42bc" translate="yes" xml:space="preserve">
          <source>If a window with the name already exists, then &lt;code&gt;strUrl&lt;/code&gt; is loaded into the &lt;em&gt;existing&lt;/em&gt; window. In this case the return value of the method is the existing window and &lt;code&gt;strWindowFeatures&lt;/code&gt; is ignored. Providing an empty string for &lt;code&gt;strUrl&lt;/code&gt; is a way to get a reference to an open window by its name without changing the window's location. To open a &lt;em&gt;new&lt;/em&gt; window on every call of &lt;code&gt;window.open()&lt;/code&gt;, use the special value &lt;code&gt;_blank&lt;/code&gt; for &lt;code&gt;strWindowName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a8ad7aa846d02d0ccc3ebd9d39f2732f024e03" translate="yes" xml:space="preserve">
          <source>If a worker is created using a constructor with a &lt;code&gt;name&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de886198e413744dc3d8078f2504f28882c08467" translate="yes" xml:space="preserve">
          <source>If all of those criteria are met, the sender gets reused, which results in these changes occurring to the existing &lt;code&gt;RTCRtpSender&lt;/code&gt; and its &lt;code&gt;RTCRtpTransceiver&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf105a4add2085d509d44fd04c0ff6500ac783d" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt; is added to an &lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt; while it is processing an event, that event does not trigger the listener. However, that same listener may be triggered during a later stage of event flow, such as the bubbling phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d568cec191ed55ecdf25ac74bbdc68f2026bc5f6" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt; is removed from an &lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt; while it is processing an event, it will not be triggered by the current actions. An &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt; will not be invoked for the event it was registered for after being removed. However, it can be reattached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79af4bf1dd8420f9d4a2b8d6313b22e749eba117" translate="yes" xml:space="preserve">
          <source>If an ICE restart occurs, the candidate gathering and connectivity check process is started over again; this will cause a transition from the &lt;code&gt;&quot;connected&quot;&lt;/code&gt; state if the restart occurred while the state was &lt;code&gt;&quot;completed&quot;&lt;/code&gt;. If the restart occured during a transient &lt;code&gt;&quot;disconnected&quot;&lt;/code&gt; state, the state transitions to &lt;code&gt;&quot;checking&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd980b9e7e68f9d48fa76ff885874d15023e1c5c" translate="yes" xml:space="preserve">
          <source>If an embedded page from &lt;code&gt;tracker.example&lt;/code&gt; has previously successfully obtained storage access on top-level origin &lt;code&gt;foo.example&lt;/code&gt;, all embedded subresources from &lt;code&gt;tracker.example&lt;/code&gt; on &lt;code&gt;foo.example&lt;/code&gt; (e.g. scripts, images, stylesheets, etc.) will load with access to their first-party storage, which means they may send Cookie headers and honor incoming &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie&quot;&gt;&lt;code&gt;Set-Cookie&lt;/code&gt;&lt;/a&gt; headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1290b656015a72ad07c042ef1db5710342acce93" translate="yes" xml:space="preserve">
          <source>If an error occurred during validation of the address due to one of the strings in the &lt;a href=&quot;../paymentaddress/addressline&quot;&gt;&lt;code&gt;addressLine&lt;/code&gt;&lt;/a&gt; array having an invalid value, this property is set to a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; providing a human-readable error message explaining the validation error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a30e6c2bb858b0ac174494736876cbb303d297" translate="yes" xml:space="preserve">
          <source>If an error occurred during validation of the address due to the &lt;a href=&quot;../paymentaddress/country&quot;&gt;&lt;code&gt;country&lt;/code&gt;&lt;/a&gt; property having an invalid value, this property is set to a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; providing a human-readable error message explaining the validation error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7b71151ee058af28466e4ab4dc23388e9776ea" translate="yes" xml:space="preserve">
          <source>If an error occurrs while linking the program, the error message is logged to console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96540e62b548dc1db4816f09f8595f90862ad8f" translate="yes" xml:space="preserve">
          <source>If an error occurs and an &lt;code&gt;errorCallback&lt;/code&gt; was specified, it gets called with a single parameter: a &lt;a href=&quot;../fileerror&quot;&gt;&lt;code&gt;FileError&lt;/code&gt;&lt;/a&gt; object describing the error. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileError/code&quot;&gt;&lt;code&gt;FileError.code&lt;/code&gt;&lt;/a&gt; specifies what type of error occurred, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b28eb4cdebd812492a6f1fd881ffe7a23d4633" translate="yes" xml:space="preserve">
          <source>If an error occurs and an &lt;code&gt;errorCallback&lt;/code&gt; was specified, it gets called with a single parameter: a &lt;a href=&quot;../fileerror&quot;&gt;&lt;code&gt;FileError&lt;/code&gt;&lt;/a&gt; object describing the error. The {domxref(&quot;FileError.code&quot;)}} specifies what type of error occurred, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4659067ca76494236966690445389425ca202f73" translate="yes" xml:space="preserve">
          <source>If an error occurs applying either set of constraints, &lt;code&gt;handleError()&lt;/code&gt; is used to output a message into the log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8b40b25c33011a3b7e143faa3188863270860a" translate="yes" xml:space="preserve">
          <source>If an error occurs while attempting to connect, first a simple event with the name &quot;error&quot; is sent to the &lt;a href=&quot;https://developer.mozilla.org/en/WebSockets/WebSockets_reference/WebSocket&quot;&gt;&lt;code&gt;WebSocket&lt;/code&gt;&lt;/a&gt; object (thereby invoking its &lt;code&gt;onerror&lt;/code&gt; handler), and then the &lt;a href=&quot;https://developer.mozilla.org/en/WebSockets/WebSockets_reference/CloseEvent&quot;&gt;&lt;code&gt;CloseEvent&lt;/code&gt;&lt;/a&gt; is sent to the &lt;a href=&quot;https://developer.mozilla.org/en/WebSockets/WebSockets_reference/WebSocket&quot;&gt;&lt;code&gt;WebSocket&lt;/code&gt;&lt;/a&gt; object (thereby invoking its &lt;code&gt;onclose&lt;/code&gt; handler) to indicate the reason for the connection's closing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5c2e04425bffc6eb58258f3c78e68ddcaaeaed" translate="yes" xml:space="preserve">
          <source>If an error occurs while the database connection is being opened, then an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBErrorEvent&quot;&gt;error event&lt;/a&gt; is fired on the request object returned from this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67599ff1de482377fdc062a700472fa22dc3b685" translate="yes" xml:space="preserve">
          <source>If an error occurs while the database is being opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875e81f77a2d133e2dc61fc42cb8538261664834" translate="yes" xml:space="preserve">
          <source>If an error occurs while trying to get the local media stream, our catch clause calls &lt;code&gt;handleGetUserMediaError()&lt;/code&gt;, which displays an appropriate error to the user as required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855ffb9bcbf55fc7ef46e5c27c441747fb92763d" translate="yes" xml:space="preserve">
          <source>If an error occurs while trying to load or render the image, and an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-onerror&quot;&gt;onerror&lt;/a&gt;&lt;/code&gt; event handler has been configured to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event, that event handler will get called. This can happen in a number of situations, including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fcc340acb8aaece12a5ff40fbfd8465a1a28ee7" translate="yes" xml:space="preserve">
          <source>If an error occurs, either in the initial &lt;code&gt;createOffer()&lt;/code&gt; or in any of the fulfillment handlers that follow, an error is reported by invoking our &lt;code&gt;reportError()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3e504b556796f3cbbdc2086b0290296a408b21" translate="yes" xml:space="preserve">
          <source>If an error occurs, we log it using the &lt;code&gt;handleError()&lt;/code&gt; method that we'll look at farther down in this article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2381f8994adc2771874267a0083ffc85357e6c30" translate="yes" xml:space="preserve">
          <source>If an event handler (for example, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/onclick&quot;&gt;&lt;code&gt;onclick&lt;/code&gt;&lt;/a&gt;) is specified on an element in the HTML source, the JavaScript code in the attribute value is effectively wrapped in a handler function which binds the value of &lt;code&gt;this&lt;/code&gt; in a manner consistent with the &lt;code&gt;addEventListener()&lt;/code&gt;; an occurrence of &lt;code&gt;this&lt;/code&gt; within the code represents a reference to the element. Note that the value of &lt;code&gt;this&lt;/code&gt; inside a function, &lt;em&gt;called by &lt;/em&gt;the code in the attribute value, behaves as per &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;standard rules&lt;/a&gt;. This is shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d1d1b33016e0318be85aa878b723d5afa342b3" translate="yes" xml:space="preserve">
          <source>If an existing &lt;code&gt;label&lt;/code&gt; is included:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477f900fd3e39c48beaa1aacaaaef39d194e68c8" translate="yes" xml:space="preserve">
          <source>If an extension defines specific symbols or functions that are not available in the core specification of WebGL, they will be available on the extension object returned by the call to &lt;code&gt;gl.getExtension()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91087f7dcb32c09392086582058d0e890410286a" translate="yes" xml:space="preserve">
          <source>If an index with the given name does not exist in the connected database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f973af49f47dfdfdc725c2fff9299ccd04fb99" translate="yes" xml:space="preserve">
          <source>If an integrity has not been specified, the property returns &lt;code&gt;''&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b650234382ae2d2455dc1f1f9a068a10ed011976" translate="yes" xml:space="preserve">
          <source>If an object store with the given name (based on case-sensitive comparison) already exists in the connected database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75ce30571d3763514181fdfd5e231da8a2d8d78" translate="yes" xml:space="preserve">
          <source>If an object store with the same name (based on case-sensitive comparison) already exists in the connected database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8426cf8be2e73d5ada3db1be21c0ee7fdddbbdfe" translate="yes" xml:space="preserve">
          <source>If an utterance is currently being spoken, speaking will stop immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817edd2d0502a7cfb45b326d088ecb5e31aefb0a" translate="yes" xml:space="preserve">
          <source>If any extensions were requested, this method will return the results of processing those extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcd1c7e649d3157cf693e43646943c0ee964a29" translate="yes" xml:space="preserve">
          <source>If any fields have unacceptable values, or if an exception is thrown by the previous code, &lt;code&gt;complete()&lt;/code&gt; is called with the string &lt;code&gt;&quot;fail&quot;&lt;/code&gt;, which indicates that the payment process is complete and failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d9e9252f160c6306e412967af9d9175ae55c8c" translate="yes" xml:space="preserve">
          <source>If any header is not understood or has an incorrect value , the server should send a &quot;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTTP/Response_codes#400&quot;&gt;400 Bad Request&lt;/a&gt;&quot; and immediately close the socket. As usual, it may also give the reason why the handshake failed in the HTTP response body, but the message may never be displayed (browsers do not display it). If the server doesn't understand that version of WebSockets, it should send a &lt;code&gt;Sec-WebSocket-Version&lt;/code&gt; header back that contains the version(s) it does understand. (This guide explains v13, the newest). Now, let's move on to the most curious header, &lt;code&gt;Sec-WebSocket-Key&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359fb477670f39db7db736a78110b68cb94f5039" translate="yes" xml:space="preserve">
          <source>If any of the arguments are &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;Infinity&lt;/a&gt;&lt;/code&gt; the transformation matrix must be marked as infinite instead of the method throwing an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2dabf511101d242d3f1a01d50dd86d5912cf831" translate="yes" xml:space="preserve">
          <source>If any other type is encountered, a &lt;code&gt;TypeError&lt;/code&gt; exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11207ff5b3d64a56953939c1245a5082af7ab939" translate="yes" xml:space="preserve">
          <source>If anything goes wrong during recording, an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event is sent to the &lt;code&gt;MediaRecorder&lt;/code&gt;. You can listen for &lt;code&gt;error&lt;/code&gt; events by setting up a &lt;a href=&quot;mediarecorder/onerror&quot;&gt;&lt;code&gt;onerror&lt;/code&gt;&lt;/a&gt; event handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ce5fa395f56f1c300fc68e6023e4a1d53d88ab" translate="yes" xml:space="preserve">
          <source>If at any time an error occurs, the &lt;code&gt;catch()&lt;/code&gt; clause outputs an error message to the log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054cb02ae830d5f2f1d7754d2ef3309d81c37cf6" translate="yes" xml:space="preserve">
          <source>If at any time you need to fetch the set of constraints that are currently applied to the media, you can get that information by calling &lt;a href=&quot;../mediastreamtrack/getconstraints&quot;&gt;&lt;code&gt;MediaStreamTrack.getConstraints()&lt;/code&gt;&lt;/a&gt;, as shown in the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfc39f5a239fa715e8d71a0071c5e4f62a9fd75" translate="yes" xml:space="preserve">
          <source>If at least one key matches the key range, then a success event is fired on the result object, with its &lt;code&gt;result&lt;/code&gt; set to the new &lt;a href=&quot;../idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt; object; the &lt;code&gt;value&lt;/code&gt; of the cursor object is set to the value of the found record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f445358cce5609a7ab746ae0f6eaae57518a30" translate="yes" xml:space="preserve">
          <source>If at least one record matches the key range then the &lt;code&gt;result&lt;/code&gt; property of the event is set to the new &lt;a href=&quot;../idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt; object; the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/IDBCursor#attr_value&quot;&gt;value&lt;/a&gt;&lt;/code&gt; of the cursor object is set to a structured clone of the referenced value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c9e5e33fe16375714cb05fafb3ae5c78f1fb4a" translate="yes" xml:space="preserve">
          <source>If attaching a handler function to an element using &lt;code&gt;addEventListener()&lt;/code&gt;, the value of &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; inside the handler is a reference to the element. It is the same as the value of the &lt;code&gt;currentTarget&lt;/code&gt; property of the event argument that is passed to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202c001778d48f20e14e0b0a32bb9a1e291a57a1" translate="yes" xml:space="preserve">
          <source>If bits per second values are not specified for video and/or audio, the default adopted for video is 2.5Mbps, while the audio default is adaptive, depending upon the sample rate and the number of channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c094ea13edd929acf11f55779fe9307debea2420" translate="yes" xml:space="preserve">
          <source>If conditions change&amp;mdash;for example the network connection deteriorates&amp;mdash;one or both peers might suggest switching to a lower-bandwidth media resolution, or to an alternative codec. This triggers a new exchange of candidates, after which a another media format and/or codec change may take place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5fd1aa3f623692d981de0ba984c0cf9f806578" translate="yes" xml:space="preserve">
          <source>If developers do not take utmost care, VR apps can actually cause their users to feel sick. This effect is produced when the stimuli their eyes are receiving is not what the body expects to receive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873979489af7e647739add6393487d31e1ea974e" translate="yes" xml:space="preserve">
          <source>If during the process of unloading the previous document which was loaded in the window, a confirmation dialog was displayed to let the user confirm whether or not to leave the previous page, the time origin is the time at which the user confirmed that navigating to the new page was acceptable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e091931b426bf2530dec99ac8a0fb3602eba857d" translate="yes" xml:space="preserve">
          <source>If either &lt;em&gt;width&lt;/em&gt; or &lt;em&gt;height&lt;/em&gt; is a negative value, a &lt;code&gt;gl.INVALID_VALUE&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e2d164f3a21c75cfe470c32858bed9ec7f69bf" translate="yes" xml:space="preserve">
          <source>If enumeration fails, the promise is rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712979225c3663eba71bfa3fb77879e4bdabf688" translate="yes" xml:space="preserve">
          <source>If fallback content is not needed, a simple &lt;code&gt;&amp;lt;canvas id=&quot;foo&quot; ...&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/code&gt; is fully compatible with all browsers that support canvas at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c948ee571dc549fe8b8ba90c77c395242c707b2a" translate="yes" xml:space="preserve">
          <source>If full-screen mode is already active (&lt;code&gt;fullscreenElement&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;), we call &lt;a href=&quot;document/exitfullscreen&quot;&gt;&lt;code&gt;exitFullscreen()&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;document&lt;/code&gt; to shut off full-screen mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb57fa3e9106ef1da18e90e3c1e6abe84b9a180" translate="yes" xml:space="preserve">
          <source>If fullscreen mode is already active (&lt;code&gt;fullscreenElement&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;), we call &lt;a href=&quot;../document/exitfullscreen&quot;&gt;&lt;code&gt;document.exitFullscreen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7734319f2e0377fc2c1b9321da02a07856661f" translate="yes" xml:space="preserve">
          <source>If given a set of coordinates (X and Y), you may end up doing something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7185e195039c601992f956b086312fe6503e48" translate="yes" xml:space="preserve">
          <source>If however, you create the context outside of a user gesture, its state will be set to &lt;code&gt;suspended&lt;/code&gt; and it will need to be started after user interaction. We can use the same click event example here, test for the state of the context and start it, if it is suspended, using the &lt;a href=&quot;../baseaudiocontext/resume&quot;&gt;&lt;code&gt;resume()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2075a7b2350e709d0641cf8fc67ca10d5cb84535" translate="yes" xml:space="preserve">
          <source>If it is set without first setting the &lt;code&gt;&lt;a href=&quot;username&quot;&gt;username&lt;/a&gt;&lt;/code&gt; property, it silently fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae56ee982e25d6ef68d960a6d87461071918de39" translate="yes" xml:space="preserve">
          <source>If it's determined that there are no certificates in place, &lt;a href=&quot;generatecertificate&quot;&gt;&lt;code&gt;RTCPeerConnection.generateCertificate()&lt;/code&gt;&lt;/a&gt; is called to create a new certificate; we provide a fulfillment handler which adds a new array containing the one newly-created certificate to the current configuration and passes it to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnect/setConfiguration&quot;&gt;&lt;code&gt;setConfiguration()&lt;/code&gt;&lt;/a&gt; to add the certificate to the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20dff166c73cf66b0ae89691be032f6d13d9d07b" translate="yes" xml:space="preserve">
          <source>If javascript support is disabled or non-existent, then the user agent will create a secondary window accordingly or will render the referenced resource according to its handling of the target attribute: e.g. some user agents which can not create new windows, like MS Web TV, will fetch the referenced resource and append it at the end of the current document. The goal and the idea is to try to provide - &lt;strong&gt;not impose&lt;/strong&gt; - to the user a way to open the referenced resource, a mode of opening the link. Your code should not interfere with the features of the browser at the disposal of the user and your code should not interfere with the final decision resting with the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa40b46240711340463e9b88227b1054e3e3ee0" translate="yes" xml:space="preserve">
          <source>If later on the consumer again wants to receive data, we can use the pull method in the stream creation to tell our underlying source to feed our stream with data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8200b743dbb856f3d978e4e856e647c4986d085c" translate="yes" xml:space="preserve">
          <source>If left is set but top has no value and screenY has a value, then left and screenY will be the coordinate positioning values of the secondary window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65846e6a6b7c1a11a2d8f6ce3dd14728963afb3a" translate="yes" xml:space="preserve">
          <source>If more than one rule is given in the &lt;var&gt;rule&lt;/var&gt; parameter, then aborts with &lt;code&gt;SyntaxError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70098544d6343a3422fb46f59c23ecc1f790b820" translate="yes" xml:space="preserve">
          <source>If multiple identical &lt;code&gt;EventListener&lt;/code&gt;s are registered on the same &lt;code&gt;EventTarget&lt;/code&gt; with the same parameters, the duplicate instances are discarded. They do not cause the &lt;code&gt;EventListener&lt;/code&gt; to be called twice, and they do not need to be removed manually with the &lt;a href=&quot;removeeventlistener&quot;&gt;&lt;code&gt;removeEventListener()&lt;/code&gt;&lt;/a&gt; method. Note however that when using an anonymous function as the handler, such listeners will NOT be identical since anonymous functions are not identical even if defined using the SAME unchanging source-code simply called repeatedly, even if in a loop. However, repeatedly defining the same named function in such cases can be more problematic. (see &lt;a href=&quot;#Memory_issues&quot;&gt;Memory issues&lt;/a&gt; below.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4705a32d02a2ce316bc8d18e2f5ad83bbe3abba8" translate="yes" xml:space="preserve">
          <source>If necessary, intermediate values of the distortion curve are linearly interpolated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef313102c16ff62587bcb996c7febe6f3f59e817" translate="yes" xml:space="preserve">
          <source>If needed, call &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt; to get the list of &lt;strong&gt;supported constraints&lt;/strong&gt;, which tells you what constrainable properties the browser knows about. This isn't always necessary, since any that aren't known will simply be ignored when you specify them&amp;mdash;but if you have any that you can't get by without, you can start by checking to be sure they're on the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d65d2418d3050d83b8a636322ded652c7fed44" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/aspectratio&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.aspectRatio&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3564bd0fda24bcf3524057b242e9961565e3db7d" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/autogaincontrol&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.autoGainControl&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c722c0521abc63a7a29b37c4ffb3daad5dcc4ed" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/channelcount&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.channelCount&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276062ccb6992511f4ee81f849b353cb727ba80b" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/deviceid&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.deviceId&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600df1cf766b86e12ad16f15e54e0e079075b94a" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/echocancellation&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.echoCancellation&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57124218453a502a8269e47fad7fbf3edd70af0" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/facingmode&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.facingMode&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebef1fb2cbd84fad5264eb1646cf0b29cc5402e4" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/framerate&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.frameRate&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a209c12d21e10e6b82a55089c568c3b5c975d1" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/groupid&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.groupId&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e226009e06372371b86007ebcd5a4bd6644556c3" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/height&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.height&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1229dd1db5c67002b9741043efed67fd2d60ea9" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/latency&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.latency&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131bcab73cea0cc82084f9b47cf073b86ab5041d" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/noisesuppression&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.noiseSuppression&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9861484ecbc0a90b171c543544d8b59ee5057164" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/samplerate&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.sampleRate&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c819a7ef74fa994c27e2b4ac2f8ed415009f434d" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/samplesize&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.sampleSize&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f643b83370d8c9d62bbe06950848362f8207f85" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/volume&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.volume&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aaeb14a88f9f188f6b36462c1a1b59cbb3eeedc" translate="yes" xml:space="preserve">
          <source>If needed, you can determine whether or not this constraint is supported by checking the value of &lt;a href=&quot;../mediatracksupportedconstraints/width&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints.width&lt;/code&gt;&lt;/a&gt; as returned by a call to &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;&lt;code&gt;MediaDevices.getSupportedConstraints()&lt;/code&gt;&lt;/a&gt;. However, typically this is unnecessary since browsers will simply ignore any constraints they're unfamiliar with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3ece1a8726bccec16874fbe9016bdeeeba2215" translate="yes" xml:space="preserve">
          <source>If neither attribute is present, then the script is fetched and executed immediately, blocking further parsing of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb949cb239110e47a3bbf8f9e29d01caf0b7009" translate="yes" xml:space="preserve">
          <source>If neither of the above determines the time origin, then the time origin is the time at which the navigation responsible for creating the window's current &lt;code&gt;Document&lt;/code&gt; took place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906892a97f07be03e629176c17451464be33e72a" translate="yes" xml:space="preserve">
          <source>If no &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept&quot;&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt; header has been set using the &lt;a href=&quot;setrequestheader&quot;&gt;&lt;code&gt;setRequestHeader()&lt;/code&gt;&lt;/a&gt;, an &lt;code&gt;Accept&lt;/code&gt; header with the type &lt;code&gt;&quot;*/*&quot;&lt;/code&gt; (any type) is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2370c145a9bdfbbd7040f7d93a5689c7debedb0d" translate="yes" xml:space="preserve">
          <source>If no &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept&quot;&gt;&lt;code&gt;Accept&lt;/code&gt;&lt;/a&gt; header has been set using this, an &lt;code&gt;Accept&lt;/code&gt; header with the type &lt;code&gt;&quot;*/*&quot;&lt;/code&gt; is sent with the request when &lt;a href=&quot;send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a91c3fccfedacc6cc0827c61875788c8014bc2" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;threshold&lt;/code&gt; option was included when &lt;code&gt;IntersectionObserver()&lt;/code&gt; was used to instantiate the observer, the value of &lt;code&gt;thresholds&lt;/code&gt; is simply &lt;code&gt;[0]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7b34aa42944a2fda0c6d5b17c9d4e8865b9570" translate="yes" xml:space="preserve">
          <source>If no camera exists with this resolution or higher, then the returned promise will be rejected with &lt;code&gt;OverconstrainedError&lt;/code&gt;, and the user will not be prompted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be269263bd1e7c60123eac69167ace026c72cd78" translate="yes" xml:space="preserve">
          <source>If no existing sender exists that can be reused, a new one is created. This also results in the creation of the associated objects that must exist. The process of creating a new sender results in these changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f65f6636b4c46f09d9856ebf09398aa922a42b" translate="yes" xml:space="preserve">
          <source>If no keys ranges match the key range specified, then then an error event is fired on the request object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56076b98ec47d851e61a676e6399118ca9ea58d" translate="yes" xml:space="preserve">
          <source>If no label parameter included:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3707c351878f2656f52e8fd678f097414a32a3c" translate="yes" xml:space="preserve">
          <source>If no label was supplied:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
