<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="tcl_tk">
    <body>
      <group id="tcl_tk">
        <trans-unit id="fe7d1b3daa0647473cb0a306693fa0e565ea1fe9" translate="yes" xml:space="preserve">
          <source>SrcPath</source>
          <target state="translated">SrcPath</target>
        </trans-unit>
        <trans-unit id="368e1eeda8cd0f6424a9a896c9d93690ab664b8f" translate="yes" xml:space="preserve">
          <source>Stacking order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88dba4f9c16c7472b687cdd6e5ec4e0b290058a1" translate="yes" xml:space="preserve">
          <source>Standard channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa02b826946f53b28c34c58999a4166d0215159" translate="yes" xml:space="preserve">
          <source>Standard command for horizontal scrolling; see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efe727f25608b4cf3728c8e9f6ec95eb5358bd4" translate="yes" xml:space="preserve">
          <source>Standard command for vertical scrolling; see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba775a5672f248525af853c71b4621152d436aa" translate="yes" xml:space="preserve">
          <source>Standard error from all commands in the pipeline is redirected to the command result. This operator is only valid at the end of the command pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9de9c485348e65eab434f70aa6a294d1e64c5ae" translate="yes" xml:space="preserve">
          <source>Standard error from all commands in the pipeline is redirected to the file named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08260bac326b50441894843683c710f2f76cf0b2" translate="yes" xml:space="preserve">
          <source>Standard fonts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e2cb5944b6837c42a7fec45c57a35bdaaa298e" translate="yes" xml:space="preserve">
          <source>Standard item types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda79acc1dc68b5b1ac8b0a2bc63fabc8d5c68ab" translate="yes" xml:space="preserve">
          <source>Standard options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f26cebc7340cbc15a3909f94c734fe24fbfce0" translate="yes" xml:space="preserve">
          <source>Standard output from the last command is redirected to the file named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f503471dae2889b725a4abeb55d9b44bc01a399c" translate="yes" xml:space="preserve">
          <source>Standard styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85232571e8c5e5cb57a0f597b7d14db4824fbfe" translate="yes" xml:space="preserve">
          <source>Starting with the Tcl 8.5 release, the variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72502067518684f9deeec70cf119fd26326cd33" translate="yes" xml:space="preserve">
          <source>State</source>
          <target state="translated">State</target>
        </trans-unit>
        <trans-unit id="a8af44825b65c604d3f2c75b3a97a82c474ada3f" translate="yes" xml:space="preserve">
          <source>State array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6e273354db1c9e9ca557efbaaa635241f30add" translate="yes" xml:space="preserve">
          <source>State map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6975211c2ec5df87eca6f10522b61408628c47" translate="yes" xml:space="preserve">
          <source>States</source>
          <target state="translated">States</target>
        </trans-unit>
        <trans-unit id="42f9091fb21ef07a74735c4b6c2ec2e866e5db3d" translate="yes" xml:space="preserve">
          <source>SteelBlue</source>
          <target state="translated">SteelBlue</target>
        </trans-unit>
        <trans-unit id="8b9da7466f1ed81f9bfa32c889a67a4aa4210c8a" translate="yes" xml:space="preserve">
          <source>SteelBlue1</source>
          <target state="translated">SteelBlue1</target>
        </trans-unit>
        <trans-unit id="b078637d55933dfa2ab85ecd2b4fcd384d5c298c" translate="yes" xml:space="preserve">
          <source>SteelBlue2</source>
          <target state="translated">SteelBlue2</target>
        </trans-unit>
        <trans-unit id="3863c3d251f3e2dde27143289b01f553b0d93b3b" translate="yes" xml:space="preserve">
          <source>SteelBlue3</source>
          <target state="translated">SteelBlue3</target>
        </trans-unit>
        <trans-unit id="151dccc1b9372eea1e2ab716091ca50c03bfe78d" translate="yes" xml:space="preserve">
          <source>SteelBlue4</source>
          <target state="translated">SteelBlue4</target>
        </trans-unit>
        <trans-unit id="18165dd4303dad7018b0daceb9b1215cfabf6454" translate="yes" xml:space="preserve">
          <source>Stop autoincrement mode: cancels any recurring timer event initiated by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786dbafc5116933be88f907413cb1703f0320d13" translate="yes" xml:space="preserve">
          <source>Stops the &lt;b&gt;exec&lt;/b&gt; command from treating the output of messages to the pipeline's standard error channel as an error case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e113a5802023a3aa442bace18cd1ad8bde2c4d" translate="yes" xml:space="preserve">
          <source>Store a random number in the variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d240c88ffd7ee97f63122d0753892aab19270a" translate="yes" xml:space="preserve">
          <source>Store a short message in an array element specified by a variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd7dca9d61aebd2c2043e9c8abe366a8e88fbfc" translate="yes" xml:space="preserve">
          <source>Store a short message in an array element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983fd7bc323e2dee1f0042e9a93e162ae8403859" translate="yes" xml:space="preserve">
          <source>Stores</source>
          <target state="translated">Stores</target>
        </trans-unit>
        <trans-unit id="9cb48a7645060b517e33304405ed0301caa5e376" translate="yes" xml:space="preserve">
          <source>Stores a byte string of length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f43688c79a92fb46c253a888c3210fb974ed9db" translate="yes" xml:space="preserve">
          <source>Stores a string of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa539b33620de26ec2917733e0473929f88d76e7" translate="yes" xml:space="preserve">
          <source>Stores one or more 8-bit integer values in the output string. If no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b778d2006fd890682f5b918d428b35d40d691323" translate="yes" xml:space="preserve">
          <source>Streaming compression instance commands are produced by the &lt;b&gt;zlib stream&lt;/b&gt; command. They are used by calling their &lt;b&gt;put&lt;/b&gt; subcommand one or more times to load data in, and their &lt;b&gt;get&lt;/b&gt; subcommand one or more times to extract the transformed data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b50fb8c1cb71cc45c375fe68e18ae689fa459f6" translate="yes" xml:space="preserve">
          <source>Streaming instance command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e79ae8b6cc3eb30ad1e5aa591af6a21e667db1d" translate="yes" xml:space="preserve">
          <source>Streaming subcommand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7808d25db89e08bd4cc59d4aefd65cc599971252" translate="yes" xml:space="preserve">
          <source>Stretch the slave both horizontally and vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df16e93e61256c332373290f3f2dff2634e63b20" translate="yes" xml:space="preserve">
          <source>Stretch the slave horizontally to fill the entire width of its parcel (except leave external padding as specified by &lt;b&gt;-padx&lt;/b&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daabb3c76a8a4005fbd27b0a3892a9fe8bb7cc3c" translate="yes" xml:space="preserve">
          <source>Stretch the slave vertically to fill the entire height of its parcel (except leave external padding as specified by &lt;b&gt;-pady&lt;/b&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="f5030faa282d0b646e60e4453a7be74b11a70c98" translate="yes" xml:space="preserve">
          <source>String indices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766f45c1227c8c7d13e31b3c8218c7c441dc99b1" translate="yes" xml:space="preserve">
          <source>String operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a2cdf3c901c4abf04a8de803125f3640bcd4ef" translate="yes" xml:space="preserve">
          <source>String values may be used as operands of the comparison operators, although the expression evaluator tries to do comparisons as integer or floating-point when it can, i.e., when all arguments to the operator allow numeric interpretations, except in the case of the &lt;b&gt;eq&lt;/b&gt; and &lt;b&gt;ne&lt;/b&gt; operators. If one of the operands of a comparison is a string and the other has a numeric value, a canonical string representation of the numeric operand value is generated to compare with the string operand. Canonical string representation for integer values is a decimal string format. Canonical string representation for floating-point values is that produced by the &lt;b&gt;%g&lt;/b&gt; format specifier of Tcl's &lt;b&gt;&lt;a href=&quot;format.htm&quot;&gt;format&lt;/a&gt;&lt;/b&gt; command. For example, the commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fa2501330bf4e451d2e9624757364717d8b75c" translate="yes" xml:space="preserve">
          <source>Strings in Tcl are logically a sequence of 16-bit Unicode characters. These strings are represented in memory as a sequence of bytes that may be in one of several encodings: modified UTF-8 (which uses 1 to 3 bytes per character), 16-bit &amp;ldquo;Unicode&amp;rdquo; (which uses 2 bytes per character, with an endianness that is dependent on the host architecture), and binary (which uses a single byte per character but only handles a restricted range of characters). Tcl does not guarantee to always use the same encoding for the same string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ce9c5e783856c6a1dfd5733286cc787a42b2c5" translate="yes" xml:space="preserve">
          <source>Strings stored in the message catalog are stored relative to the namespace from which they were added. This allows multiple packages to use the same strings without fear of collisions with other packages. It also allows the source string to be shorter and less prone to typographical error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3325068f58445bf8e42dbea9891bb0159b5d4cff" translate="yes" xml:space="preserve">
          <source>Stripping duplicate values using sorting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a0efc6cfd85d8ff2732a6718140f822cb90472" translate="yes" xml:space="preserve">
          <source>Style</source>
          <target state="translated">Style</target>
        </trans-unit>
        <trans-unit id="52db564b0ad83b57f6f43fd2a22822492d585a15" translate="yes" xml:space="preserve">
          <source>Styles</source>
          <target state="translated">Styles</target>
        </trans-unit>
        <trans-unit id="1746930baf8ef4516f12972bc2a6ab4978228297" translate="yes" xml:space="preserve">
          <source>Subcommand</source>
          <target state="translated">Subcommand</target>
        </trans-unit>
        <trans-unit id="7c8cf84261f17414d41a19324152deb0638ecb13" translate="yes" xml:space="preserve">
          <source>Subcommands</source>
          <target state="translated">Subcommands</target>
        </trans-unit>
        <trans-unit id="eb8c6a54ba898459e77c4b1dec95a11e065708ce" translate="yes" xml:space="preserve">
          <source>Subject to the constraints imposed by the rules for matching the whole RE, subexpressions also match the longest or shortest possible substrings, based on their preferences, with subexpressions starting earlier in the RE taking priority over ones starting later. Note that outer subexpressions thus take priority over their component subexpressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8541b1ba489a5c4fd145547ab18f8a780d9c0208" translate="yes" xml:space="preserve">
          <source>Subject to the restrictions that indices must refer to locations inside the list and that the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ce055ecd2aa42dcd4759e5200371e54ae77b7e" translate="yes" xml:space="preserve">
          <source>Substitutes the UNICODE character corresponding to the event, or the empty string if the event does not correspond to a UNICODE character (e.g. the shift key was pressed). &lt;b&gt;XmbLookupString&lt;/b&gt; (or &lt;b&gt;XLookupString&lt;/b&gt; when input method support is turned off) does all the work of translating from the event to a UNICODE character. Valid only for &lt;b&gt;KeyPress&lt;/b&gt; and &lt;b&gt;KeyRelease&lt;/b&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7713799bbe36aba0fd92dbe254c0c806bbbd1f90" translate="yes" xml:space="preserve">
          <source>Substitutions do not affect the word boundaries of a command, except for argument expansion as specified in rule [5]. For example, during variable substitution the entire value of the variable becomes part of a single word, even if the variable's value contains spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4a76e8d50eae8a87b00df7712d95c30b03f0ae" translate="yes" xml:space="preserve">
          <source>Substitutions take place from left to right, and each substitution is evaluated completely before attempting to evaluate the next. Thus, a sequence like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d311af2029ca59853a3393f4dfb8f5727d85fbc" translate="yes" xml:space="preserve">
          <source>Substitutions:</source>
          <target state="translated">Substitutions:</target>
        </trans-unit>
        <trans-unit id="8c2b43092a39e0aba491eebb43b3dacb1cba3369" translate="yes" xml:space="preserve">
          <source>Summary of Tcl language syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bc78739e62d61b45bad352891a1830a599ba70" translate="yes" xml:space="preserve">
          <source>Support commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904fd145daa9304ffaedbc2dbd9776c044e3debe" translate="yes" xml:space="preserve">
          <source>Support for IPv6 was added in Tcl 8.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9794d24ec85271049a86498f820c37d015564882" translate="yes" xml:space="preserve">
          <source>Supported types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cdaa935863de497d999d5fff7ff2541d28113ac" translate="yes" xml:space="preserve">
          <source>Supports the standard &lt;b&gt;configure&lt;/b&gt;, &lt;b&gt;cget&lt;/b&gt;, &lt;b&gt;state&lt;/b&gt;, and &lt;b&gt;instate&lt;/b&gt; commands; see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a46c03affaa214583ab996a9effdcff3ee51b72" translate="yes" xml:space="preserve">
          <source>Supports the standard widget commands &lt;b&gt;configure&lt;/b&gt;, &lt;b&gt;cget&lt;/b&gt;, &lt;b&gt;identify&lt;/b&gt;, &lt;b&gt;instate&lt;/b&gt;, and &lt;b&gt;state&lt;/b&gt;; see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbed0654f616bf46693ccdd80fbb6a9b73ac87c3" translate="yes" xml:space="preserve">
          <source>Suppresses all error messages. If this switch is given, &lt;b&gt;unload&lt;/b&gt; will never report an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d2c9ea026bc2275ed27cff3d6ee5b47d4db1ff" translate="yes" xml:space="preserve">
          <source>Surprising results may be obtained when crossing a point at which a leap second is inserted or removed; the &lt;b&gt;clock add&lt;/b&gt; command simply ignores leap seconds and therefore assumes that times come in sequence, 23:59:58, 23:59:59, 00:00:00. (This assumption is handled by the fact that Tcl's model of time reacts to leap seconds by speeding or slowing the clock by a minuscule amount until Tcl's time is back in step with the world.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbd35afb81dbb4f8f8267b62a7a54ba32ebaf52" translate="yes" xml:space="preserve">
          <source>Suspends processing work on this queue . All pool workers are paused but additional work can be added to the pool . Note that adding the additional work will not increase the number of workers dynamically as the pool processing is suspended . Number of workers is maintained to the count that was found prior suspending worker activity . If you need to assure certain number of worker threads, use the &lt;b&gt;minworkers&lt;/b&gt; option of the &lt;b&gt;tpool::create&lt;/b&gt; command .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d63bec0b509cd67eacd800f6961c19eaa88457e" translate="yes" xml:space="preserve">
          <source>Symbolic names are established by registering procedures via &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/ItclLib/RegisterC.htm&quot;&gt;Itcl_RegisterC()&lt;/a&gt;&lt;/b&gt;. This is usually done in the &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/AppInit.htm&quot;&gt;Tcl_AppInit()&lt;/a&gt;&lt;/b&gt; procedure, which is automatically called when the interpreter starts up. In the following example, the procedure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e935169894d4cbe039ffac243535464f38d33b" translate="yes" xml:space="preserve">
          <source>Symbolic names for C procedures are established by registering procedures via &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/ItclLib/RegisterC.htm&quot;&gt;Itcl_RegisterC()&lt;/a&gt;&lt;/b&gt;. This is usually done in the &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/AppInit.htm&quot;&gt;Tcl_AppInit()&lt;/a&gt;&lt;/b&gt; procedure, which is automatically called when the interpreter starts up. In the following example, the procedure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59dbd62aa02fd2b150c2f88b3e1428ab6eea8f1" translate="yes" xml:space="preserve">
          <source>Synonymous with &amp;ldquo;&lt;b&gt;%a %b %e %H:%M:%S %Z %Y&lt;/b&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cd269927215b7c23176f5d22e233661c005c4c" translate="yes" xml:space="preserve">
          <source>Synonymous with &lt;b&gt;%H:%M:%S&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="1b1430441b7b7dd5a90d83f42f914deacc5fd0e5" translate="yes" xml:space="preserve">
          <source>System configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f54b08474622b085f2960997cb65ad2fc542156" translate="yes" xml:space="preserve">
          <source>System specific paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f804e31fe84933d4ff3744b8dd75f38558a9478a" translate="yes" xml:space="preserve">
          <source>TAB IDENTIFIERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8632f7b39e71c4bd77a1fb3dea820f9ebd00098a" translate="yes" xml:space="preserve">
          <source>TAB OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0458ec3dc324bb09145e668f83f10a1d3a98c13b" translate="yes" xml:space="preserve">
          <source>TAG OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f584cf46364ca0f4afeea4aca9bc448b1e98488" translate="yes" xml:space="preserve">
          <source>TAGS</source>
          <target state="translated">TAGS</target>
        </trans-unit>
        <trans-unit id="44e6c0a9f4b54c658d2a15c40c988354b8e16bd1" translate="yes" xml:space="preserve">
          <source>TDBC</source>
          <target state="translated">TDBC</target>
        </trans-unit>
        <trans-unit id="6db82f608cc6bb4d4d2c33fc980f0d6e1c8e4866" translate="yes" xml:space="preserve">
          <source>TDBC Package C API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7f1fafa9f1cf7e80daad51b9d6593764ec355ba" translate="yes" xml:space="preserve">
          <source>TDBC Package Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca32c6836f3c8c768ad55bfa4c1cca96e0b065e6" translate="yes" xml:space="preserve">
          <source>TEAR-OFF ENTRIES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df54da9ad2dd62e071556759d9dbe1c488af32b" translate="yes" xml:space="preserve">
          <source>TEST CONSTRAINTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a48f4ff3b57bcd488e04ed1cb10151bb53e2bba" translate="yes" xml:space="preserve">
          <source>TESTS</source>
          <target state="translated">TESTS</target>
        </trans-unit>
        <trans-unit id="2ec64fd4381cc022557ae518bf66165ceb67f94d" translate="yes" xml:space="preserve">
          <source>TEXT ITEMS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d5a1676b7b8bc4de05c05ce08edaef985c73b9" translate="yes" xml:space="preserve">
          <source>THE GRID ALGORITHM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88853364ae98a579609ec95e1f014893eec569ab" translate="yes" xml:space="preserve">
          <source>THE INSERTION CURSOR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d43213af395b6f5e7e78f06ab6a1012d7ff1b1" translate="yes" xml:space="preserve">
          <source>THE INTERP COMMAND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0082defa802cb06048ff1aa4c7a9d481e7112cd6" translate="yes" xml:space="preserve">
          <source>THE METHOD CHAIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a23b09e7c5745bab288676198a0c9bae19c6b2" translate="yes" xml:space="preserve">
          <source>THE MODIFIED FLAG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba2f0ea689a45e7a358496be8ebd4f49d3d3bf6" translate="yes" xml:space="preserve">
          <source>THE PACKER ALGORITHM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906c23ec8c115a11f0730631a12d63a3dad56bd9" translate="yes" xml:space="preserve">
          <source>THE SELECTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8a0ea2a4b8e65df99723eedc8430a36cafa279" translate="yes" xml:space="preserve">
          <source>THE UNDO MECHANISM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4cf1b671a495173f4a986491732aeec06f69cb" translate="yes" xml:space="preserve">
          <source>TILDE SUBSTITUTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0476f5c2520c1f542ab7ab0ed279fc05890886d4" translate="yes" xml:space="preserve">
          <source>TIME ZONES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52a54dc355f7b66deafafa75a4b005204d6cf0c" translate="yes" xml:space="preserve">
          <source>TRANSACTION ISOLATION LEVELS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17002e80a633bf522dd439526a9ab1d9bae645c" translate="yes" xml:space="preserve">
          <source>TRANSFORMATIONS</source>
          <target state="translated">TRANSFORMATIONS</target>
        </trans-unit>
        <trans-unit id="fef3473f385d76c3ea37fc8a3ae240a0ab40b551" translate="yes" xml:space="preserve">
          <source>TUI &amp;mdash; Textmode User Interface, any application that accesses the console API for doing such things as cursor movement, setting text color, detecting key presses and mouse movement, etc. An example would be &lt;b&gt;telnet.exe&lt;/b&gt; from Windows 2000. These types of applications are not common in a windows environment, but do exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbad531d0915491c5932c8ed10a84879b52d2cc2" translate="yes" xml:space="preserve">
          <source>TYPES OF ENTRIES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b281c9287f23e8d4a452e30fdf35da4c268b198" translate="yes" xml:space="preserve">
          <source>TYPES, OVERFLOW, AND PRECISION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37770a8dcc109084f3bd29427d37c5b9995fbf10" translate="yes" xml:space="preserve">
          <source>Tab (Unicode U+000009).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4d39f98c208c5829e2586981fcef9f1e518fed" translate="yes" xml:space="preserve">
          <source>Tab identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee04a96c1142d7a64ac8d6cb5628bf73d6c613f4" translate="yes" xml:space="preserve">
          <source>Tab options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a881cfe350e0cf7d41583e0bddaca64e48c2f761" translate="yes" xml:space="preserve">
          <source>TabList</source>
          <target state="translated">TabList</target>
        </trans-unit>
        <trans-unit id="95015717923b76308f73206cf607fceb642a7749" translate="yes" xml:space="preserve">
          <source>Table name of the primary table (the one to which the foreign key refers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12c6e4f3eedc3e930e1e1b99d10a48319981b91" translate="yes" xml:space="preserve">
          <source>Tabs do not work very well with text that is centered or right-justified. The most common result is that the line is justified wrong.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07d96bbe8b1bfa925af95e90a77a8f8a9388a5d" translate="yes" xml:space="preserve">
          <source>Tag options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722b43771e9b80ba251405354fe525d67a903788" translate="yes" xml:space="preserve">
          <source>TagList</source>
          <target state="translated">TagList</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="327eb00d8b1deda95eba96962afef8e11066da77" translate="yes" xml:space="preserve">
          <source>Tags serve three purposes in text widgets. First, they control the way information is displayed on the screen. By default, characters are displayed as determined by the &lt;b&gt;-background&lt;/b&gt;, &lt;b&gt;-font&lt;/b&gt;, and &lt;b&gt;-foreground&lt;/b&gt; options for the text widget. However, display options may be associated with individual tags using the &amp;ldquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1be454bd8b623efcbe5274e3f19fffec367cd73" translate="yes" xml:space="preserve">
          <source>Take a prefix from a list based on the contents of the list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e084563af0b30db48887a81e777668dcb87fa8bb" translate="yes" xml:space="preserve">
          <source>Takes one or more file names and combines them, using the correct path separator for the current platform. If a particular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be83097b57e0f0c14c12c483bb95d3af33cc024f" translate="yes" xml:space="preserve">
          <source>TargetCmd</source>
          <target state="translated">TargetCmd</target>
        </trans-unit>
        <trans-unit id="d6baea46d20279f60cb07f46441d9a402915765d" translate="yes" xml:space="preserve">
          <source>TargetPath</source>
          <target state="translated">TargetPath</target>
        </trans-unit>
        <trans-unit id="e442568be0d6c7fe6ff6eca628e35564ff67ab86" translate="yes" xml:space="preserve">
          <source>Tcl</source>
          <target state="translated">Tcl</target>
        </trans-unit>
        <trans-unit id="70b8285affaf8ec11ca682768013912e079d62f4" translate="yes" xml:space="preserve">
          <source>Tcl &amp;mdash; Tool Command Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d24ec9bc27b781d05396ab75a2719d3e72ec29" translate="yes" xml:space="preserve">
          <source>Tcl C API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd528add93f7d6414fea0c470b95f93345c83f17" translate="yes" xml:space="preserve">
          <source>Tcl Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a5d16154099c69ffb31bce783ed9b682f44d2b" translate="yes" xml:space="preserve">
          <source>Tcl Database Connectivity (TDBC) is a common interface for Tcl programs to access SQL databases. It is implemented by a series of database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f996b6afbece11fff299378cfd37d17e73ea2835" translate="yes" xml:space="preserve">
          <source>Tcl Modules are searched for in all directories listed in the result of the command &lt;b&gt;::tcl::tm::path list&lt;/b&gt;. This is called the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba935cdad4bce652c2b995cecaaa6507f62ba6c7" translate="yes" xml:space="preserve">
          <source>Tcl buffers output internally, so characters written with &lt;b&gt;chan puts&lt;/b&gt; may not appear immediately on the output file or device; Tcl will normally delay output until the buffer is full or the channel is closed. You can force output to appear immediately with the &lt;b&gt;chan flush&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ac4e0026130b307a1014898f1a34dc831b7a2d" translate="yes" xml:space="preserve">
          <source>Tcl buffers output internally, so characters written with &lt;b&gt;puts&lt;/b&gt; may not appear immediately on the output file or device; Tcl will normally delay output until the buffer is full or the channel is closed. You can force output to appear immediately with the &lt;b&gt;&lt;a href=&quot;flush.htm&quot;&gt;flush&lt;/a&gt;&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94019f36d2099c619d3cf2fc696db16bba3d412f" translate="yes" xml:space="preserve">
          <source>Tcl can load encoding data files from the file system that describe additional encodings for it to work with. This command sets the search path for &lt;b&gt;*.enc&lt;/b&gt; encoding data files to the list of directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94da8ad6af725a139dcdf5c521b2084c82821504" translate="yes" xml:space="preserve">
          <source>Tcl guarantees that it will be working with UNICODE characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0062f51f21ee632317a91c7d7f9d5a2ede82bf" translate="yes" xml:space="preserve">
          <source>Tcl has no access control to limit what variables, commands, or namespaces you can reference. If you provide a qualified name that resolves to an element by the name resolution rule above, you can access the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ae40527f1cb6b41523381dbbf5ee135c3d3df2" translate="yes" xml:space="preserve">
          <source>Tcl has no multi-character collating elements. This information is only for illustration.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e71a02358f7f36559d2f5293698c999bdab8a77" translate="yes" xml:space="preserve">
          <source>Tcl implements only the Unicode locale. It does not define any equivalence classes. The examples above are just illustrations.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebcb20941465d420759c0a1f769bad60d1c1a02" translate="yes" xml:space="preserve">
          <source>Tcl includes a library of Tcl procedures for commonly-needed functions. The procedures defined in the Tcl library are generic ones suitable for use by many different applications. The location of the Tcl library is returned by the &lt;b&gt;&lt;a href=&quot;info.htm&quot;&gt;info library&lt;/a&gt;&lt;/b&gt; command. In addition to the Tcl library, each application will normally have its own library of support procedures as well; the location of this library is normally given by the value of the &lt;b&gt;$&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fa8780ffc3789d3f5024bc076de6c9d6f0a444" translate="yes" xml:space="preserve">
          <source>Tcl list of arguments to &lt;b&gt;&lt;a href=&quot;../usercmd/tclsh.htm&quot;&gt;tclsh&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;../usercmd/wish.htm&quot;&gt;wish&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08a61cab5cc8538794f986772893a1ea4bdb9d3" translate="yes" xml:space="preserve">
          <source>Tcl looks for &lt;b&gt;traceLevel&lt;/b&gt; in the namespace &lt;b&gt;Debug&lt;/b&gt; and then in the global namespace. It looks up the command &lt;b&gt;printTrace&lt;/b&gt; in the same way. If a variable or command name is not found in either context, the name is undefined. To make this point absolutely clear, consider the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf819b766fe45a100e4d3aefeb3610724586fe29" translate="yes" xml:space="preserve">
          <source>Tcl packages may provide commands that set other entries in the dictionary of return options, and the &lt;b&gt;&lt;a href=&quot;return.htm&quot;&gt;return&lt;/a&gt;&lt;/b&gt; command may be used by scripts to set return options in addition to those defined above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6575aa43dde378103ef63c605ab28559165f7b" translate="yes" xml:space="preserve">
          <source>Tcl regular expressions are implemented using the package written by Henry Spencer, based on the 1003.2 spec and some (not quite all) of the Perl5 extensions (thanks, Henry!). Much of the description of regular expressions below is copied verbatim from his manual entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a66694c3b223f9b410e5f6508bd2befd4e6326e" translate="yes" xml:space="preserve">
          <source>Tcl supports the following mathematical functions in expressions, all of which work solely with floating-point numbers unless otherwise noted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af09a9df8b522110a27e27b2b669c612fde832bb" translate="yes" xml:space="preserve">
          <source>Tcl/Tk</source>
          <target state="translated">Tcl/Tk</target>
        </trans-unit>
        <trans-unit id="a63fcd31ec655cad3f27ce2d0d5b781aebfcb8f4" translate="yes" xml:space="preserve">
          <source>Tcl/Tk Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d139140bebec035b4aa82cb752edc39ed433f296" translate="yes" xml:space="preserve">
          <source>Tcl/Tk Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e62b3908c1d482c405aaa53e62ca30a1e556ae" translate="yes" xml:space="preserve">
          <source>TclCmd</source>
          <target state="translated">TclCmd</target>
        </trans-unit>
        <trans-unit id="9a559b3f605696ef937608e23086b40522c44cf5" translate="yes" xml:space="preserve">
          <source>Tcl_WideInt</source>
          <target state="translated">Tcl_WideInt</target>
        </trans-unit>
        <trans-unit id="9be410fe8ace1126c826fb274c6591422ad7d5b2" translate="yes" xml:space="preserve">
          <source>TdbcCmd</source>
          <target state="translated">TdbcCmd</target>
        </trans-unit>
        <trans-unit id="50ef810980bcd06ea25fb5404d18e77ece5f8d51" translate="yes" xml:space="preserve">
          <source>TdbcmysqlCmd</source>
          <target state="translated">TdbcmysqlCmd</target>
        </trans-unit>
        <trans-unit id="56115b8e670560975956c5810112b4352ff11784" translate="yes" xml:space="preserve">
          <source>TdbcodbcCmd</source>
          <target state="translated">TdbcodbcCmd</target>
        </trans-unit>
        <trans-unit id="6f8001f56f33650353ca1bf13e9e5a9570ed201b" translate="yes" xml:space="preserve">
          <source>TdbcpostgresCmd</source>
          <target state="translated">TdbcpostgresCmd</target>
        </trans-unit>
        <trans-unit id="a4113c4507a71e583941b8fcfaad6bda02ea3773" translate="yes" xml:space="preserve">
          <source>TdbcsqliteCmd</source>
          <target state="translated">TdbcsqliteCmd</target>
        </trans-unit>
        <trans-unit id="9a940199d30f655a8b0cc460ca5a8ed598d98196" translate="yes" xml:space="preserve">
          <source>Tear-off entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12abb9ddaf52fda56e37f74af9a0fc6d4d657e69" translate="yes" xml:space="preserve">
          <source>Temporarily sets the current theme to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c91e98c8f8ece96172e092ecc93ecc91d062d95" translate="yes" xml:space="preserve">
          <source>Terminate the process, returning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041a4753ee9c666dc8c143e4b80916dc841a78fc" translate="yes" xml:space="preserve">
          <source>Test constraints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4b054a1c4273a5ddbf6ed3167fd7500a110741" translate="yes" xml:space="preserve">
          <source>Test files to be evaluated are sought in the directory &lt;b&gt;configure -testdir&lt;/b&gt;. The list of files in that directory that match any of the patterns in &lt;b&gt;configure -file&lt;/b&gt; and match none of the patterns in &lt;b&gt;configure -notfile&lt;/b&gt; is generated and sorted. Then each file will be evaluated in turn. If &lt;b&gt;configure -singleproc&lt;/b&gt; is true, then each file will be &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt;d in the caller's context. If it is false, then a copy of &lt;b&gt;interpreter&lt;/b&gt; will be &lt;b&gt;&lt;a href=&quot;exec.htm&quot;&gt;exec&lt;/a&gt;&lt;/b&gt;'d to evaluate each file. The multi-process operation is useful when testing can cause errors so severe that a process terminates. Although such an error may terminate a child process evaluating one file, the master process can continue with the rest of the test suite. In multi-process operation, the configuration of &lt;b&gt;tcltest&lt;/b&gt; in the master process is passed to the child processes as command line arguments, with the exception of &lt;b&gt;configure -outfile&lt;/b&gt;. The &lt;b&gt;runAllTests&lt;/b&gt; command in the master process collects all output from the child processes and collates their results into one master report. Any reports of individual test failures, or messages requested by a &lt;b&gt;configure -verbose&lt;/b&gt; setting are passed directly on to &lt;b&gt;outputChannel&lt;/b&gt; by the master process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b12059355233fc8a273ad8f97c7c5de57263823" translate="yes" xml:space="preserve">
          <source>Test if the string in the variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08b0b88e6b07df4c6dab9d34ac147e5c3628371" translate="yes" xml:space="preserve">
          <source>Test of a script that raises an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552b57ebd95a6e64f8e93124946db52b03d7c3c5" translate="yes" xml:space="preserve">
          <source>Test of a script that requires context setup and cleanup. Note the bracing and indenting style that avoids any need for line continuation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945b16f1b5f918175ebb85fa1978ff769748caa5" translate="yes" xml:space="preserve">
          <source>Test of a script that returns normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbfdd31d0b50e287d9d7ee964db07681a85d8d6" translate="yes" xml:space="preserve">
          <source>Test the widget state; see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c27081aed23d12ffda9a7f7b29e6aafb9462ba" translate="yes" xml:space="preserve">
          <source>Test the widget's state. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fb22bba7a3b15e566037489faf1c6a6bfa0e39" translate="yes" xml:space="preserve">
          <source>Test whether the last input operation on the channel called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5192206bc5f02690a64b68c59192dc2bc69287e" translate="yes" xml:space="preserve">
          <source>Test with a constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500d01d178b9900a232c13f80dc5616d9d9fc90a" translate="yes" xml:space="preserve">
          <source>Testing for the end of file condition should be done after any attempts read the channel data. The eof flag is set once an attempt to read the end of data has occurred and testing before this read will require an additional event to be fired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="d566d1a8e2bf6367f4c0cd2bbd429a2c0f1b6c84" translate="yes" xml:space="preserve">
          <source>Text items</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753d255193827f2e670e47c3ad6291f9bf341169" translate="yes" xml:space="preserve">
          <source>Text items support the notion of an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00170dc19f663e72f88aa102dc0647bb8d712d1a" translate="yes" xml:space="preserve">
          <source>Text to appear in the window manager's title bar for the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47e795e10d6f39ccc825bfa49271d193b1a9542" translate="yes" xml:space="preserve">
          <source>Text widgets should run efficiently under a variety of conditions. The text widget uses about 2-3 bytes of main memory for each byte of text, so texts containing a megabyte or more should be practical on most workstations. Text is represented internally with a modified B-tree structure that makes operations relatively efficient even with large texts. Tags are included in the B-tree structure in a way that allows tags to span large ranges or have many disjoint smaller ranges without loss of efficiency. Marks are also implemented in a way that allows large numbers of marks. In most cases it is fine to have large numbers of unique tags, or a tag that has many distinct ranges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9eff1be578db197757a9a18ee72ff0fb754e74" translate="yes" xml:space="preserve">
          <source>That is very similar to -cgetmethod, the only difference is, one can define a variable, where to find the cgetmethod during runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6943cd455950b5a7751ea4f65c0362e4f8c36683" translate="yes" xml:space="preserve">
          <source>That is very similar to -configuremethod, the only difference is, one can define a variable, where to find the configuremethod during runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d90a856e431e2f2ba121b74e935ef5acf4b5f32" translate="yes" xml:space="preserve">
          <source>That is very similar to -validatemethod, the only difference is, one can define a variable, where to find the validatemethod during runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="9d5504f5b4866ec4e33eca52f09ebba35a4f54ad" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;b&gt;&lt;a href=&quot;../tkcmd/winfo.htm&quot;&gt;winfo command&lt;/a&gt;&lt;/b&gt;&quot; command can be used to query the fully-qualified access command for any widget, so one can write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff7a5252a29c3ebfbb731b33fd5cf2ef147e77b" translate="yes" xml:space="preserve">
          <source>The &quot;public&quot; elements within a class define its interface to the external world. Public methods define the operations that can be used to manipulate an object. Public variables are recognized as configuration options by the &quot;configure&quot; and &quot;cget&quot; methods that are built into each class. The public interface says</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ca201b0706cb2a74f296e2de4050da8db9173e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&amp;amp;&amp;amp;&lt;/b&gt;, &lt;b&gt;||&lt;/b&gt;, and &lt;b&gt;?:&lt;/b&gt; operators have &amp;ldquo;lazy evaluation&amp;rdquo;, just as in C, which means that operands are not evaluated if they are not needed to determine the outcome. For example, in the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1849dc8ec6e53e2a880d35dd8d1211fd11a8203c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&amp;lt;&amp;lt;UndoStack&amp;gt;&amp;gt;&lt;/b&gt; virtual event is generated every time the undo stack or the redo stack becomes empty or unempty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5037457d30e75201528053aa8a08254b9f1f26b0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&amp;lt;&amp;lt;WidgetViewSync&amp;gt;&amp;gt;&lt;/b&gt; virtual event fires when the line heights of the text widget become obsolete (due to some editing command or configuration change), and again when the internal data of the text widget are back in sync with the widget view. The detail field (%d substitution) is either true (when the widget is in sync) or false (when it is not).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2ce12e0a3248ad5b38e7fb499be27da1b4e33e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-blocking&lt;/b&gt; option determines whether I/O operations on the channel can cause the process to block indefinitely. The value of the option must be a proper boolean value. Channels are normally in blocking mode; if a channel is placed into non-blocking mode it will affect the operation of the &lt;b&gt;chan gets&lt;/b&gt;, &lt;b&gt;chan read&lt;/b&gt;, &lt;b&gt;chan puts&lt;/b&gt;, &lt;b&gt;chan flush&lt;/b&gt;, and &lt;b&gt;chan close&lt;/b&gt; commands; see the documentation for those commands for details. For non-blocking mode to work correctly, the application must be using the Tcl event loop (e.g. by calling &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/DoOneEvent.htm&quot;&gt;Tcl_DoOneEvent&lt;/a&gt;&lt;/b&gt; or invoking the &lt;b&gt;&lt;a href=&quot;vwait.htm&quot;&gt;vwait&lt;/a&gt;&lt;/b&gt; command).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9919f4c039b1a6861e0f743f018df3347c03e2ac" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-blocking&lt;/b&gt; option determines whether I/O operations on the channel can cause the process to block indefinitely. The value of the option must be a proper boolean value. Channels are normally in blocking mode; if a channel is placed into nonblocking mode it will affect the operation of the &lt;b&gt;&lt;a href=&quot;gets.htm&quot;&gt;gets&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;read.htm&quot;&gt;read&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;puts.htm&quot;&gt;puts&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;flush.htm&quot;&gt;flush&lt;/a&gt;&lt;/b&gt;, and &lt;b&gt;&lt;a href=&quot;close.htm&quot;&gt;close&lt;/a&gt;&lt;/b&gt; commands by allowing them to operate asynchronously; see the documentation for those commands for details. For nonblocking mode to work correctly, the application must be using the Tcl event loop (e.g. by calling &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/DoOneEvent.htm&quot;&gt;Tcl_DoOneEvent&lt;/a&gt;&lt;/b&gt; or invoking the &lt;b&gt;&lt;a href=&quot;vwait.htm&quot;&gt;vwait&lt;/a&gt;&lt;/b&gt; command).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2759cd1bcefbc501689d7dc53d037b97f21dd08" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-body&lt;/b&gt; attribute indicates the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617a723fe07858f117e0fd29a881e0e7192545ad" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-command&lt;/b&gt; argument makes &lt;b&gt;chan copy&lt;/b&gt; work in the background. In this case it returns immediately and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94cf45afd1a0f729ed1991d23dcaff8a6edb48f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-command&lt;/b&gt; argument makes &lt;b&gt;fcopy&lt;/b&gt; work in the background. In this case it returns immediately and the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d660aaa11fa57e710a31efc30c3403ed4ba0e9f5" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-cursor&lt;/b&gt; widget option allows a Tk programmer to change the mouse cursor for a particular widget. The cursor names recognized by Tk on all platforms are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab5137b0e9f4208436e2ae86114934c4b564c09" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-encoding&lt;/b&gt; option is used to specify the encoding of the data stored in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb570ec9e70ddd5c6348917e1c1ff9481de38f6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-errorOutput&lt;/b&gt; attribute supplies the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c92c5f9f4662324bf3f8a67bc59a150ea2f6ad" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-errorcode&lt;/b&gt; option receives special treatment only when the value of the &lt;b&gt;-code&lt;/b&gt; option is &lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_ERROR&lt;/a&gt;&lt;/b&gt;. Then the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3993fff83a967cee60a26ad3008876dd927da05" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-errorinfo&lt;/b&gt; option receives special treatment only when the value of the &lt;b&gt;-code&lt;/b&gt; option is &lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_ERROR&lt;/a&gt;&lt;/b&gt;. Then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a51bb819edf5bcec775bd0c8cf404de2948ad60" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-errorinfo&lt;/b&gt; return option of an interpreter is used to accumulate a stack trace of what was in progress when an error occurred; as nested commands unwind, the Tcl interpreter adds information to the &lt;b&gt;-errorinfo&lt;/b&gt; return option. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974a5db066a57cb14e5270ad574b01803a7af5ab" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-errorstack&lt;/b&gt; option receives special treatment only when the value of the &lt;b&gt;-code&lt;/b&gt; option is &lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_ERROR&lt;/a&gt;&lt;/b&gt;. Then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3965f58cff4c87f903a19cc069afd11bd94e31" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-eventmark&lt;/b&gt; option, when set, limits the number of asynchronously posted scripts to the thread event loop . The &lt;b&gt;thread::send -async&lt;/b&gt; command will block until the number of pending scripts in the event loop does not drop below the value configured with &lt;b&gt;-eventmark&lt;/b&gt; . Default value for the &lt;b&gt;-eventmark&lt;/b&gt; is 0 (zero) which effectively disables the checking, i .e . allows for unlimited number of posted scripts .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1535048509c7d10e8cf18162a836d7c6efcea875" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-handler&lt;/b&gt; option specifies a Tcl procedure that will be called to process calls to the dde server. If the package has been loaded into a safe interpreter then a &lt;b&gt;-handler&lt;/b&gt; procedure must be defined. The procedure is called with all the arguments provided by the remote call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d7007469b890e254da483c257a75ebe3ff387a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-invalidcommand&lt;/b&gt; is evaluated whenever the &lt;b&gt;-validatecommand&lt;/b&gt; returns a false value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0b2f7ea0b8df5f12d2792ff0ce195a61d14f52" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-level&lt;/b&gt; and &lt;b&gt;-code&lt;/b&gt; options work together to set the return code to be returned by one of the commands currently being evaluated. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f6c47b17e2b378c502a75f5ab5d86846572379" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-match&lt;/b&gt; attribute determines how expected answers supplied by &lt;b&gt;-result&lt;/b&gt;, &lt;b&gt;-output&lt;/b&gt;, and &lt;b&gt;-errorOutput&lt;/b&gt; are compared. Valid values for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8caeb11c1af44e24e3ee3658e62964830a03fbf2" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-output&lt;/b&gt; attribute supplies the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e63f615a68eed930a224148c3637397ec87bba" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-pickplace&lt;/b&gt; option has been obsoleted by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e3228296127c8b6a6ebbcf4c1f9866d64e03c4" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-readonly&lt;/b&gt; flag is not implemented. &lt;b&gt;-readonly 0&lt;/b&gt; is accepted silently, while &lt;b&gt;-readonly 1&lt;/b&gt; reports an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa209c99c240535fb83bd4474ba6d3bd2f020fe" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-result&lt;/b&gt; attribute supplies the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e83200e9650dc1e2010cc74f8d56e3c2f780f0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-unwindonerror&lt;/b&gt; option, when set, causes the target thread to unwind if the result of the script processing resulted in error . Default value for the &lt;b&gt;-unwindonerror&lt;/b&gt; is 0 (false), i .e . thread continues to process scripts after one of the posted scripts fails .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49beb5b3c8f793704aeb1fe6892acbfeb184d677" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-validate&lt;/b&gt; option determines when validation occurs; it may be set to any of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336980dfcb4517c04f1c42e5e2b1d76fe33daf55" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-validate&lt;/b&gt;, &lt;b&gt;-validatecommand&lt;/b&gt;, and &lt;b&gt;-invalidcommand&lt;/b&gt; options are used to enable entry widget validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df83d66cbc1c3003b1644bde9eb5f8d2e8c52ac" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-validatecommand&lt;/b&gt; and &lt;b&gt;-invalidcommand&lt;/b&gt; may modify the entry widget's value via the widget &lt;b&gt;insert&lt;/b&gt; or &lt;b&gt;delete&lt;/b&gt; commands, or by setting the linked &lt;b&gt;-textvariable&lt;/b&gt;. If either does so during prevalidation, then the edit is rejected regardless of the value returned by the &lt;b&gt;-validatecommand&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d451f5ed4d4a41ffd556b13defca4b21ae912a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-validatecommand&lt;/b&gt; will be called for all above conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbd246b38c004f4f98cbf12fa6ebaec49438efc" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-validatecommand&lt;/b&gt; will be called when the spinbox is edited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e439d07eb0a5237acd3ccdcb1aaaa42b221d1e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-validatecommand&lt;/b&gt; will be called when the spinbox loses focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de329075a657a8e74ca4748ff18ebf1f2909bde1" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-validatecommand&lt;/b&gt; will be called when the spinbox receives focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d1ba202fe25f34171be906d0484c3ee27e26aa" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;-validatecommand&lt;/b&gt; will be called when the spinbox receives or loses focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34035f96b8e9a8bc9e1b812a44e35b614b39c0a2" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;::http::config&lt;/b&gt; command is used to set and query the name of the proxy server and port, and the User-Agent name used in the HTTP requests. If no options are specified, then the current configuration is returned. If a single argument is specified, then it should be one of the flags described below. In this case the current value of that setting is returned. Otherwise, the options should be a set of flags and values that define the configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187f0ceff43b6247c72eb5468b89fda68b6488e9" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;::http::geturl&lt;/b&gt; command is the main procedure in the package. The &lt;b&gt;-query&lt;/b&gt; option causes a POST operation and the &lt;b&gt;-validate&lt;/b&gt; option causes a HEAD operation; otherwise, a GET operation is performed. The &lt;b&gt;::http::geturl&lt;/b&gt; command returns a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c039e14c97a230a7a8e07d352c2c6a388956bc" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;::http::geturl&lt;/b&gt; procedure does a HTTP transaction. Its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce93821b9ef0e689e13ba167fd3f1fb985ac52d8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;::http::geturl&lt;/b&gt; procedure returns a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac50a6736c13e5656f44a47721f9e93b059360b5" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;::http::geturl&lt;/b&gt; procedure will raise errors in the following cases: invalid command line options, an invalid URL, a URL on a non-existent host, or a URL at a bad port on an existing host. These errors mean that it cannot even start the network transaction. It will also raise an error if it gets an I/O error while writing out the HTTP request header. For synchronous &lt;b&gt;::http::geturl&lt;/b&gt; calls (where &lt;b&gt;-command&lt;/b&gt; is not specified), it will raise an error if it gets an I/O error while reading the HTTP reply headers or data. Because &lt;b&gt;::http::geturl&lt;/b&gt; does not return a token in these cases, it does all the required cleanup and there is no issue of your app having to call &lt;b&gt;::http::cleanup&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47794e57976793cf479095fa2b04b2b5c54a3cd" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;../tclcmd/close.htm&quot;&gt;close&lt;/a&gt;&lt;/b&gt; object command deletes the result set and frees any associated system resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51b84246e4c3bded185d1a0c3f682659eb04615" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;../tclcmd/close.htm&quot;&gt;close&lt;/a&gt;&lt;/b&gt; object command on a database connection closes the connection. All active statements and result sets on the connection are closed. Any uncommitted transaction is rolled back. The object command is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a316ab9823199fc799abb5376d9564bda08a3e76" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;../tclcmd/close.htm&quot;&gt;close&lt;/a&gt;&lt;/b&gt; object command removes a statement and any result sets that it has created. All system resources associated with the objects are freed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05eca27580074d15197da0b0eb11394f694073fe" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;../tclcmd/continue.htm&quot;&gt;continue&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;../tclcmd/break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt; commands may be used inside a binding script to control the processing of matching scripts. If &lt;b&gt;&lt;a href=&quot;../tclcmd/continue.htm&quot;&gt;continue&lt;/a&gt;&lt;/b&gt; is invoked, then the current binding script is terminated but Tk will continue processing binding scripts associated with other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b39ba53b02e21dcefd899070d076a00c4c2d46" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;../tclcmd/foreach.htm&quot;&gt;foreach&lt;/a&gt;&lt;/b&gt; object command executes the statement as with the &lt;b&gt;execute&lt;/b&gt; object command, accepting an optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fcd0d8b18aabbc4ffe99d4215fba2185bc4666" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;../tclcmd/foreach.htm&quot;&gt;foreach&lt;/a&gt;&lt;/b&gt; object command prepares a SQL statement (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc94d8591a64f816702f7bf1202658e27971452" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;../tclcmd/foreach.htm&quot;&gt;foreach&lt;/a&gt;&lt;/b&gt; object command sets the variable designated by the &lt;b&gt;-columnsvariable&lt;/b&gt; option (if present) to the result of the &lt;b&gt;columns&lt;/b&gt; object command. It then executes the &lt;b&gt;nextrow&lt;/b&gt; object command repeatedly until the end of the result set is reached, storing the successive rows in the variable designated by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1efb3f39ab177878a47652f89a50e84e4230da" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;../tclcmd/library.htm&quot;&gt;auto_mkindex&lt;/a&gt;&lt;/b&gt; command is used to automatically generate &quot;tclIndex&quot; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3771061ee8008dc3bb2cd24da43420ec63b452fa" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;../tkcmd/option.htm&quot;&gt;option&lt;/a&gt;&lt;/b&gt; command is used inside an &lt;b&gt;[incr Tcl]&lt;/b&gt; extendedclass/widget/widgetadaptor definition to define options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9643d9d2acea1fbb34429065b8c3177c0b4776" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;continue.htm&quot;&gt;continue&lt;/a&gt;&lt;/b&gt; statements may be invoked inside</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39575553eab6cd2e23895815f62d77bdaa8cea3b" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan configure&lt;/a&gt;&lt;/b&gt; command can be used to query several readonly configuration options for socket channels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2689cfd9e0780bdaedc42d9a67ecf05d845922b3" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan configure&lt;/a&gt;&lt;/b&gt; option &lt;b&gt;-connecting&lt;/b&gt; may be used to check if the connect is still running. To verify a successful connect, the option &lt;b&gt;-error&lt;/b&gt; may be checked when &lt;b&gt;-connecting&lt;/b&gt; returned 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19fd2cb2122dd008dbcd43d08b62d7b1429eabf" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;clock.htm&quot;&gt;clock&lt;/a&gt;&lt;/b&gt; command implementation uses &lt;b&gt;msgcat&lt;/b&gt; with a package locale to implement the command line parameter &lt;b&gt;-locale&lt;/b&gt;. Here are some sketches of the implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6155208d39aff48cc191044740fed60f2bb55d19" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;encoding.htm&quot;&gt;encoding&lt;/a&gt;&lt;/b&gt; alias provides access to a safe subset of the subcommands of the &lt;b&gt;&lt;a href=&quot;encoding.htm&quot;&gt;encoding&lt;/a&gt;&lt;/b&gt; command; it disallows setting of the system encoding, but allows all other subcommands including &lt;b&gt;system&lt;/b&gt; to check the current encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6542cf48ffb178b2d642ab8309965e883fdadf" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;expr.htm&quot;&gt;expr&lt;/a&gt;&lt;/b&gt; command handles mathematical functions of the form &lt;b&gt;sin($x)&lt;/b&gt; or &lt;b&gt;atan2($y,$x)&lt;/b&gt; by converting them to calls of the form &lt;b&gt;[tcl::mathfunc::sin [expr {$x}]]&lt;/b&gt; or &lt;b&gt;[tcl::mathfunc::atan2 [expr {$y}] [expr {$x}]]&lt;/b&gt;. A number of math functions are available by default within the namespace &lt;b&gt;::tcl::mathfunc&lt;/b&gt;; these functions are also available for code apart from &lt;b&gt;&lt;a href=&quot;expr.htm&quot;&gt;expr&lt;/a&gt;&lt;/b&gt;, by invoking the given commands directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bddc4da97b194c5d29a267d0f4dae9e4a111689" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;fconfigure.htm&quot;&gt;fconfigure&lt;/a&gt;&lt;/b&gt; command can be used to query and set additional configuration options specific to serial ports (where supported):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f06c9de13c62d81e0f4a2724b35a7205ea12852" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;file.htm&quot;&gt;file&lt;/a&gt;&lt;/b&gt; alias provides access to a safe subset of the subcommands of the &lt;b&gt;&lt;a href=&quot;file.htm&quot;&gt;file&lt;/a&gt;&lt;/b&gt; command; it allows only &lt;b&gt;dirname&lt;/b&gt;, &lt;b&gt;join&lt;/b&gt;, &lt;b&gt;extension&lt;/b&gt;, &lt;b&gt;root&lt;/b&gt;, &lt;b&gt;tail&lt;/b&gt;, &lt;b&gt;pathname&lt;/b&gt; and &lt;b&gt;split&lt;/b&gt; subcommands. For more details on what these subcommands do see the manual page for the &lt;b&gt;&lt;a href=&quot;file.htm&quot;&gt;file&lt;/a&gt;&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bffe8cda6c7e867444fe0cff0ecca19132e0aa" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;focus.htm&quot;&gt;focus&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;selection.htm&quot;&gt;selection&lt;/a&gt;&lt;/b&gt; widget commands can be used to determine the affected item or items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a2d451f34e6a3e2d2fc501a62dc7d1526b5442" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;load.htm&quot;&gt;load&lt;/a&gt;&lt;/b&gt; command is not directly used. This restriction is not an actual limitation, as some may believe. Ever since 8.4 the Tcl &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; command reads only until the first ^Z character. This allows us to combine an arbitrary Tcl script with arbitrary binary data into one file, where the script processes the attached data in any it chooses to fully import and activate the package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d95aaa3c02ae0a1dbb59c6ac0d10b681bfa892" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;namespace.htm&quot;&gt;namespace eval&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;apply.htm&quot;&gt;apply&lt;/a&gt;&lt;/b&gt; commands offer other ways (besides procedure calls) that the Tcl naming context can change. They add a call frame to the stack to represent the namespace context. This means each &lt;b&gt;&lt;a href=&quot;namespace.htm&quot;&gt;namespace eval&lt;/a&gt;&lt;/b&gt; command counts as another call level for &lt;b&gt;uplevel&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;upvar.htm&quot;&gt;upvar&lt;/a&gt;&lt;/b&gt; commands. For example, &lt;b&gt;info level 1&lt;/b&gt; will return a list describing a command that is either the outermost procedure call or the outermost &lt;b&gt;&lt;a href=&quot;namespace.htm&quot;&gt;namespace eval&lt;/a&gt;&lt;/b&gt; command. Also, &lt;b&gt;uplevel #0&lt;/b&gt; evaluates a script at top-level in the outermost namespace (the global namespace).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6ae2f5bffc6bf91d54a2046d7a01851ec2fed8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;tk.htm&quot;&gt;tk fontchooser&lt;/a&gt;&lt;/b&gt; command can have one of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48979e6d79920fb52b92c3c132c8ebbdc016cae2" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;tk.htm&quot;&gt;tk fontchooser&lt;/a&gt;&lt;/b&gt; command controls the Tk font selection dialog. It uses the native platform font selection dialog where available, or a dialog implemented in Tcl otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6da20d3f19114d7e7dddd615fe920eb1809104" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;ButtonPress&lt;/b&gt; and &lt;b&gt;ButtonRelease&lt;/b&gt; events are generated when the user presses or releases a mouse button. &lt;b&gt;Motion&lt;/b&gt; events are generated whenever the pointer is moved. &lt;b&gt;ButtonPress&lt;/b&gt;, &lt;b&gt;ButtonRelease&lt;/b&gt;, and &lt;b&gt;Motion&lt;/b&gt; events are normally sent to the window containing the pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7941748cc8f719e004019b5da7a6e6ce18598267" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Command&lt;/b&gt; and &lt;b&gt;Option&lt;/b&gt; modifiers are equivalents of &lt;b&gt;Mod1&lt;/b&gt; resp. &lt;b&gt;Mod2&lt;/b&gt;, they correspond to Macintosh-specific modifier keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4ee6fba38203451199a5755e473074910ddab7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Double&lt;/b&gt;, &lt;b&gt;Triple&lt;/b&gt; and &lt;b&gt;Quadruple&lt;/b&gt; modifiers are a convenience for specifying double mouse clicks and other repeated events. They cause a particular event pattern to be repeated 2, 3 or 4 times, and also place a time and space requirement on the sequence: for a sequence of events to match a &lt;b&gt;Double&lt;/b&gt;, &lt;b&gt;Triple&lt;/b&gt; or &lt;b&gt;Quadruple&lt;/b&gt; pattern, all of the events must occur close together in time and without substantial mouse motion in between. For example, &lt;b&gt;&amp;lt;Double-Button-1&amp;gt;&lt;/b&gt; is equivalent to &lt;b&gt;&amp;lt;Button-1&amp;gt;&amp;lt;Button-1&amp;gt;&lt;/b&gt; with the extra time and space requirement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0e244490ee20490e50d9fb4f97cd61e9c36360" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Extended&lt;/b&gt; modifier is, at present, specific to Windows. It appears on events that are associated with the keys on the &amp;ldquo;extended keyboard&amp;rdquo;. On a US keyboard, the extended keys include the &lt;b&gt;Alt&lt;/b&gt; and &lt;b&gt;Control&lt;/b&gt; keys at the right of the keyboard, the cursor keys in the cluster to the left of the numeric pad, the &lt;b&gt;NumLock&lt;/b&gt; key, the &lt;b&gt;&lt;a href=&quot;../tclcmd/break.htm&quot;&gt;Break&lt;/a&gt;&lt;/b&gt; key, the &lt;b&gt;PrintScreen&lt;/b&gt; key, and the &lt;b&gt;/&lt;/b&gt; and &lt;b&gt;Enter&lt;/b&gt; keys in the numeric keypad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df361840b75f635ac9b15012c4c54644970964f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;FocusIn&lt;/b&gt; and &lt;b&gt;FocusOut&lt;/b&gt; events are generated whenever the keyboard focus changes. A &lt;b&gt;FocusOut&lt;/b&gt; event is sent to the old focus window, and a &lt;b&gt;FocusIn&lt;/b&gt; event is sent to the new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9176f3d00c43b1b46fbe6bef27b7d054bf9c753a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;KeyPress&lt;/b&gt; and &lt;b&gt;KeyRelease&lt;/b&gt; events are generated whenever a key is pressed or released. &lt;b&gt;KeyPress&lt;/b&gt; and &lt;b&gt;KeyRelease&lt;/b&gt; events are sent to the window which currently has the keyboard focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc0fd61093f8114757a17746a417a5e0e300cbe" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;Map&lt;/b&gt; and &lt;b&gt;Unmap&lt;/b&gt; events are generated whenever the mapping state of a window changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c651d33d928f87127107d346f1b85d0757d1b26" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;after &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b89fbeb5751412619c8cfa16f271b9a87ab719d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;allrows&lt;/b&gt; object command executes the statement as with the &lt;b&gt;execute&lt;/b&gt; object command, accepting an optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62fabf0dd56c08c6f47f8da42861fdc865e07f1" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;allrows&lt;/b&gt; object command prepares a SQL statement (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2699e8c51372a322108e1d13a4e807749cbf879" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;allrows&lt;/b&gt; object command sets the variable designated by the &lt;b&gt;-columnsvariable&lt;/b&gt; option (if present) to the result of the &lt;b&gt;columns&lt;/b&gt; object command. It then executes the &lt;b&gt;nextrow&lt;/b&gt; object command repeatedly until the end of the result set is reached. If &lt;b&gt;nextresults&lt;/b&gt; returns a nonzero value, it executes the above two steps (&lt;b&gt;columns&lt;/b&gt; followed by iterated &lt;b&gt;nextrow&lt;/b&gt; calls) as long as further results are available. The rows returned by &lt;b&gt;nextrow&lt;/b&gt; are assembled into a Tcl list and become the return value of the &lt;b&gt;allrows&lt;/b&gt; command; the last value returned from &lt;b&gt;columns&lt;/b&gt; is what the application will see in &lt;b&gt;-columnsvariable&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ae8ede55bf852cb816e7cad2757c51cc0e71b1" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;apply&lt;/b&gt; command is also useful for defining callbacks for use in the &lt;b&gt;&lt;a href=&quot;trace.htm&quot;&gt;trace&lt;/a&gt;&lt;/b&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cc45e4018392aa0cbd99eaab501715380816b0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;argv0&lt;/b&gt; global variable can be used (in conjunction with the &lt;b&gt;&lt;a href=&quot;info.htm&quot;&gt;info script&lt;/a&gt;&lt;/b&gt; command) to determine whether the current script is being executed as the main script or loaded as a library. This is useful because it allows a single script to be used as both a library and a demonstration of that library:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e137af8d29d0d2a5740ea731c2c0be03551a6c5f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;base64&lt;/b&gt; binary encoding is commonly used in mail messages and XML documents, and uses mostly upper and lower case letters and digits. It has the distinction of being able to be rewrapped arbitrarily without losing information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed2853452dd738c695f47a34781e1c40d31ff56" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;begintransaction&lt;/b&gt; object command on a database connection begins a transaction on the database. If the underlying database does not support atomic, consistent, isolated, durable transactions, the &lt;b&gt;begintransaction&lt;/b&gt; object command returns an error reporting the fact. Similarly, if multiple &lt;b&gt;begintransaction&lt;/b&gt; commands are executed withough an intervening &lt;b&gt;commit&lt;/b&gt; or &lt;b&gt;rollback&lt;/b&gt; command, an error is returned unless the underlying database supports nested transactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199708629b1b1eafb55be1dc1c1d40166dd7936f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;bgerror&lt;/b&gt; command does not exist as built-in part of Tcl. Instead, individual applications or users can define a &lt;b&gt;bgerror&lt;/b&gt; command (e.g. as a Tcl procedure) if they wish to handle background errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb313c49824ea6752b9aae5e11331b9568e542a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;binary format&lt;/b&gt; command generates a binary string whose layout is specified by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc735f70adcbe9d5590ac871da9f61494c33847" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;binary scan&lt;/b&gt; command parses fields from a binary string, returning the number of conversions performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dac983f104a13f842de920e00b51b052047de07" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;bind&lt;/b&gt; command associates Tcl scripts with X events. If all three arguments are specified, &lt;b&gt;bind&lt;/b&gt; will arrange for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc60fc95fb59d759daa54e8d4686b724ab87077" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;bindtags&lt;/b&gt; command may be used to introduce arbitrary additional binding tags for a window, or to remove standard tags. For example, the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530566cd19c8f845a98f5a6cf0498070e7d5d96b" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;body&lt;/b&gt; command is used outside of an &lt;b&gt;[incr Tcl]&lt;/b&gt; class definition to define or redefine the body of a class method or proc. This facility allows a class definition to have separate &quot;interface&quot; and &quot;implementation&quot; parts. The &quot;interface&quot; part is a &lt;b&gt;class&lt;/b&gt; command with declarations for methods, procs, instance variables and common variables. The &quot;implementation&quot; part is a series of &lt;b&gt;body&lt;/b&gt; and &lt;b&gt;configbody&lt;/b&gt; commands. If the &quot;implementation&quot; part is kept in a separate file, it can be sourced again and again as bugs are fixed, to support interactive development. When using the &quot;tcl&quot; mode in the &lt;b&gt;emacs&lt;/b&gt; editor, the &quot;interface&quot; and &quot;implementation&quot; parts can be kept in the same file; as bugs are fixed, individual bodies can be highlighted and sent to the test application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20e99b0652bf9a3c7ae3e3d9b1f2dab16b80a73" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;button&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495ecb53bf9c58ee6c41696dbe49748d599779fc" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;button&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6000c4227d2df45d316a548bfc69f91f861b1c5a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;canvas&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637d08b8050403cebe79cde706997fd3b2bd44a2" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;canvas&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fff3490c30420df309d083cae54d84c164351ec" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;catch&lt;/b&gt; command may be used in an &lt;b&gt;&lt;a href=&quot;if.htm&quot;&gt;if&lt;/a&gt;&lt;/b&gt; to branch based on the success of a script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52d76e92776e24a222b00c57c9dee8800943b10" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;catch&lt;/b&gt; command may be used to prevent errors from aborting command interpretation. The &lt;b&gt;catch&lt;/b&gt; command calls the Tcl interpreter recursively to execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e72af65dbaf4b909bbddf62dbbe5e63cc111a4" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;chan copy&lt;/b&gt; command transfers data from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e799633707a8f510443b85033fe860f21927ead" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;checkbutton&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41066b35c7dd5f6d6159bf5fbcda44ff9775b3ce" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;checkbutton&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf80b4ae4836bf8458d3596dcf6602dee64704a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;clock add&lt;/b&gt; command performs clock arithmetic on a value (expressed as nominal seconds from the epoch time of 1 January 1970, 00:00 UTC) given as its first argument. The remaining arguments (other than the possible &lt;b&gt;-timezone&lt;/b&gt;, &lt;b&gt;-locale&lt;/b&gt; and &lt;b&gt;-gmt&lt;/b&gt; options) are integers and keywords in alternation, where the keywords are chosen from &lt;b&gt;seconds&lt;/b&gt;, &lt;b&gt;minutes&lt;/b&gt;, &lt;b&gt;hours&lt;/b&gt;, &lt;b&gt;days&lt;/b&gt;, &lt;b&gt;weeks&lt;/b&gt;, &lt;b&gt;months&lt;/b&gt;, or &lt;b&gt;years&lt;/b&gt;, or any unique prefix of such a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d65b31c690213d0c75cb4fb9dec351fea87c23" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;clock format&lt;/b&gt; command produces times for display to a user or writing to an external medium. The command accepts times that are expressed in seconds from the epoch time of 1 January 1970, 00:00 UTC, as returned by &lt;b&gt;clock seconds&lt;/b&gt;, &lt;b&gt;clock scan&lt;/b&gt;, &lt;b&gt;clock add&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;file.htm&quot;&gt;file atime&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;file.htm&quot;&gt;file mtime&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e089ed6ffdc58f52078d24fc7334448b2bcda2f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;clock scan&lt;/b&gt; command accepts times that are formatted as strings and converts them to counts of seconds from the epoch time of 1 January 1970, 00:00 UTC. It normally takes a &lt;b&gt;-format&lt;/b&gt; option that is followed by a string describing the expected format of the input. (See &lt;b&gt;&lt;a href=&quot;#M80&quot;&gt;FREE FORM SCAN&lt;/a&gt;&lt;/b&gt; for the effect of &lt;b&gt;clock scan&lt;/b&gt; without such an argument.) The string consists of any number of characters other than the per-cent sign (&amp;ldquo;&lt;b&gt;%&lt;/b&gt;&amp;rdquo;), interspersed with any number of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567dda6802c3b33acd9d1e483eb34c8156d6357a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;clock&lt;/b&gt; command performs several operations that obtain and manipulate values that represent times. The command supports several subcommands that determine what action is carried out by the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643177bd5f43a313a74a9b5e7876d969eb275765" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;columns&lt;/b&gt; obect command returns a list of the names of the columns in the result set. The columns will appear in the same order as they appeared in the SQL statement that performed the database query. If the SQL statement does not return a set of columns (for instance, if it is an INSERT, UPDATE, or DELETE statement), the &lt;b&gt;columns&lt;/b&gt; command will return an empty list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2b6a8297e0b8554fa88976d36b684e44e8384c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;columns&lt;/b&gt; object command allows the program to query the connection for the names of columns that exist in a given table. The optional &lt;b&gt;pattern&lt;/b&gt; parameter is a pattern to match the name of a column. It may contain the SQL wild-card characters '&lt;b&gt;%&lt;/b&gt;' and and whose values are dictionaries. Each of the subdictionaries will contain at least the following keys and values (and may contain others whose usage is determined by a specific database driver).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3054a1369a19c0037fdaf1a003bae0d6b861ef8d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;commit&lt;/b&gt; object command on a database connection ends the most recent transaction started by &lt;b&gt;begintransaction&lt;/b&gt; and commits changes to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be712f38e6049f3f8d8a642183aa6a8b43a1f640" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;component&lt;/b&gt; command is used inside an &lt;b&gt;[incr Tcl]&lt;/b&gt; extendedclass/widget/widgetadaptor definition to define components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7880eca783fc12bdd4bb343c0a653d7605ef7a7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;configbody&lt;/b&gt; command is used outside of an &lt;b&gt;[incr Tcl]&lt;/b&gt; class definition to define or redefine the configuration code associated with a public variable. Public variables act like configuration options for an object. They can be modified outside the class scope using the built-in &lt;b&gt;configure&lt;/b&gt; method. Each variable can have a bit of &quot;config&quot; code associate with it that is automatically executed when the variable is configured. The &lt;b&gt;configbody&lt;/b&gt; command can be used to define or redefine this body of code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73bb2132e03d498865e47ffec8286724ae8ae3fa" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;configure&lt;/b&gt; command is used to set and query the configurable options of &lt;b&gt;tcltest&lt;/b&gt;. The valid options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b339a4600df3433b081e473a4bae0672106bee" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;configure&lt;/b&gt; object command on a database connection, if presented with no arguments, returns a list of alternating keywords and values representing the connection's current configuration. If presented with a single argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b54d384971509774adec40bd874d93c0e8caf2a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;consoleinterp&lt;/b&gt; command in the console interpreter allows scripts to be evaluated in the main interpreter. It supports two subcommands: &lt;b&gt;eval&lt;/b&gt; and &lt;b&gt;record&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e85e953b22e9618533017e8f9403df442c5e28" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;coroutine&lt;/b&gt; command creates a new coroutine context (with associated command) named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865a5d959445046bf9ce50816707f98e64f9d0e5" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;delegate&lt;/b&gt; command is used inside an &lt;b&gt;[incr Tcl]&lt;/b&gt; extendedclass/widget/widgetadaptor definition to delegate methods/procs/options to other objects for handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a1a0d5ac91146a3eff10e9bae088abd84ca214" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;delete&lt;/b&gt; command is used to delete things in the interpreter. It is implemented as an ensemble, so extensions can add their own options and extend the behavior of this command. By default, the &lt;b&gt;delete&lt;/b&gt; command handles the destruction of namespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4559c77a02c23fdacf4cf3478803f98af4b56c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;ensemble&lt;/b&gt; command can be nested inside another &lt;b&gt;ensemble&lt;/b&gt; command to define a sub-ensemble.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112594c4cd919b0fcfc6c0b5949185ede8d6df0d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;ensemble&lt;/b&gt; command is used to create or modify a composite command. See the section &lt;b&gt;&lt;a href=&quot;#M5&quot;&gt;WHAT IS AN ENSEMBLE?&lt;/a&gt;&lt;/b&gt; below for a brief overview of ensembles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739baa733cf0b98c9c84c9aac90b2c445a44e8bd" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;entry&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed9a72b27589b420463216bced8367d39a7f2a7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;entry&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15898e816a278ea0782550747557f624b7f99d8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;event&lt;/b&gt; command provides several facilities for dealing with window system events, such as defining virtual events and synthesizing events. The command has several different forms, determined by the first argument. The following forms are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16940836ab5084ee24e6eb7a10305c9ed7061e17" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;exec&lt;/b&gt; command is fully functional and works as described.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073913eb27cfeeadae722e23301eb88a90d57786" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;execute&lt;/b&gt; object command executes the statement. Prior to executing the statement, values are provided for the bound variables that appear in it. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f4bb7cd3ae8e622b70d28821ef5388bbdd00dd" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;fblocked&lt;/b&gt; command is particularly useful when writing network servers, as it allows you to write your code in a line-by-line style without preventing the servicing of other connections. This can be seen in this simple echo-service:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff647173362aa77877c394d031c5c3ce28f261b5" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;fblocked&lt;/b&gt; command returns 1 if the most recent input operation on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9378ad9915f90d239a7fbb5841a6b8ca4015a0fd" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;fconfigure&lt;/b&gt; command sets and retrieves options for channels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9f798f1e090674137374887fcf27b3ccd54958" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;fcopy&lt;/b&gt; command copies data from one I/O channel,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fd7bda7eb089a0273b0fa6853b6e711563ca1a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;fcopy&lt;/b&gt; command transfers data from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbae481ce24f0b2bf396e0563d41f7e90ce2557d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;file owned&lt;/b&gt; subcommand uses the user identifier (SID) of the process token, not the thread token which may be impersonating some other user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a300cdbdcd5bb5eb88969fca3a67a8b552fd18d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;find&lt;/b&gt; command is used to find classes and objects that are available in the current interpreter. Classes and objects are reported first in the active namespace, then in all other namespaces in the interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b790c74149bcfbb5d3b2de118c168a7125b4ef8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;focus&lt;/b&gt; command can take any of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509492475fe9210ed714874f252d2342932295c8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;focus&lt;/b&gt; command is used to manage the Tk input focus. At any given time, one window on each display is designated as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fcc06df29e8e1f22b403a197e2be959603deb6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;font&lt;/b&gt; command provides several facilities for dealing with fonts, such as defining named fonts and inspecting the actual attributes of a font. The command has several different forms, determined by the first argument. The following forms are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d464239f5953b87ab1019b0bcef9d50ff67427ac" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;foreach&lt;/b&gt; command implements a loop where the loop variable(s) take on values from one or more lists. In the simplest case there is one loop variable,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fc794e5300ac4f87e930e7183cfcd11f41c128" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;foreignkeys&lt;/b&gt; object command allows the program to query the connection for foreign key relationships that apply to a particular table. The relationships may be constrained to the keys that appear in a particular table (&lt;b&gt;-foreign&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df578482b02c104c7be304541fbec976296cf86" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;frame&lt;/b&gt; command creates a new Tcl command whose name is the same as the path name of the frame's window. This command may be used to invoke various operations on the widget. It has the following general form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcf4e36481590a0fbdac51c7281f5dc115a5d6c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;frame&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992243f04d7e5ea62a8aad09d35a7eb05288b702" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;glob&lt;/b&gt; command differs from csh globbing in two ways. First, it does not sort its result list (use the &lt;b&gt;&lt;a href=&quot;lsort.htm&quot;&gt;lsort&lt;/a&gt;&lt;/b&gt; command if you want the list sorted). Second, &lt;b&gt;glob&lt;/b&gt; only returns the names of files that actually exist; in csh no check for existence is made unless a pattern contains a ?, *, or [] construct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c5a83612027976abcdb6243a271455f9c682178" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;grab&lt;/b&gt; command can take any of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51206aa8bd638391d7060159efb9c710e13d776f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;grid&lt;/b&gt; command contains a limited set of capabilities that permit layouts to be created without specifying the row and column information for each slave. This permits slaves to be rearranged, added, or removed without the need to explicitly specify row and column information. When no column or row information is specified for a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07e3d61e170cc6ed1c521a607e85fe428cb7fdf" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;grid&lt;/b&gt; command is based on ideas taken from the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b98e2fe44cfff560feeeedb50500b0e0d38e69c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;grid&lt;/b&gt; command is used to communicate with the grid geometry manager that arranges widgets in rows and columns inside of another window, called the geometry master (or master window). The &lt;b&gt;grid&lt;/b&gt; command can have any of several forms, depending on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023bba7570c51cec580538eddced18de19464058" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;h&lt;/b&gt; modifier is always ignored and the &lt;b&gt;l&lt;/b&gt; and &lt;b&gt;L&lt;/b&gt; modifiers are ignored when converting real values (i.e. type &lt;b&gt;double&lt;/b&gt; is used for the internal representation). The &lt;b&gt;ll&lt;/b&gt; modifier has no &lt;b&gt;sscanf&lt;/b&gt; counterpart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12201b98dae279f608016f0843621f2bb8dc983" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;hex&lt;/b&gt; binary encoding converts each byte to a pair of hexadecimal digits in big-endian form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5babeac7fa30878c46e59f376ec2965798d4be3b" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;history&lt;/b&gt; command can take any of the following forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f17658b5ca7a02e84ef1e4158016b0263192119" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;history&lt;/b&gt; command performs one of several operations related to recently-executed commands recorded in a history list. Each of these recorded commands is referred to as an &amp;ldquo;event&amp;rdquo;. When specifying an event to the &lt;b&gt;history&lt;/b&gt; command, the following forms may be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a69f7a4e17a1671ee29785dee7527db7b6a5c4" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;http&lt;/b&gt; package provides the client side of the HTTP/1.1 protocol, as defined in RFC 2616. The package implements the GET, POST, and HEAD operations of HTTP/1.1. It allows configuration of a proxy host to get through firewalls. The package is compatible with the &lt;b&gt;Safesock&lt;/b&gt; security policy, so it can be used by untrusted applets to do URL fetching from a restricted set of hosts. This package can be extended to support additional HTTP transport protocols, such as HTTPS, by providing a custom &lt;b&gt;&lt;a href=&quot;socket.htm&quot;&gt;socket&lt;/a&gt;&lt;/b&gt; command, via &lt;b&gt;::http::register&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af8dc1e683b7e9eb3bf448da37ed41d6276a65c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;image&lt;/b&gt; command is used to create, delete, and query images. It can take several different forms, depending on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f12ce960f82b0843c8a28da77ddf1e716e06a87" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;interp&lt;/b&gt; command also provides support for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41cf1cf8ba73e43791867bdcc2ba186d2b7c4a6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;interp&lt;/b&gt; command is used to create, delete, and manipulate slave interpreters, and to share or transfer channels between interpreters. It can have any of several forms, depending on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9243bb5257ec5634341cf1e293c533d25788ea63" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;interp&lt;/b&gt; command provides a solution to this problem in the form of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a3d0692b0e0245e6a8285a9c2848fc817efd5c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;interp&lt;/b&gt; command, described below, accepts qualified interpreter names as arguments; the interpreter in which the command is being evaluated can always be referred to as &lt;b&gt;{}&lt;/b&gt; (the empty list or string). Note that it is impossible to refer to a master (ancestor) interpreter by name in a slave interpreter except through aliases. Also, there is no global name by which one can refer to the first interpreter created in an application. Both restrictions are motivated by safety concerns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87275f3e89d0ac1fa27772e82ef6f70a5d626f7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;is&lt;/b&gt; command is used to check if the argument given is a class or an object; depending on the option given. If the argument if a class or object, then 1 is returned. Otherwise, 0 is returned. The &lt;b&gt;is&lt;/b&gt; command also recognizes the commands wrapped in the itcl &lt;b&gt;code&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165e35f80edfa1e907b804d0b0bc03dcd4616b2a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;itcl::purist&lt;/b&gt; variable controls a backward-compatibility mode. By default, this variable is &quot;0&quot;, and the window name can be used as an access command in any context. Whenever the &lt;b&gt;&lt;a href=&quot;../tclcmd/unknown.htm&quot;&gt;unknown&lt;/a&gt;&lt;/b&gt; procedure stumbles across a widget name, it simply uses &quot;&lt;b&gt;&lt;a href=&quot;../tkcmd/winfo.htm&quot;&gt;winfo command&lt;/a&gt;&lt;/b&gt;&quot; to determine the appropriate command name. If this variable is set to &quot;1&quot;, this backward-compatibility mode is disabled. This gives better encapsulation, but using the window name as the access command may lead to &quot;invalid command&quot; errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4610860e81a27321da212abb4d3f0632842cc0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;label&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b83241902a0f3b9e350cf4783e18e97bc32f215" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;label&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70154b7cf4ea560cf2a2128ae5951472bd4f9a28" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;labelframe&lt;/b&gt; command creates a new Tcl command whose name is the same as the path name of the labelframe's window. This command may be used to invoke various operations on the widget. It has the following general form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7325cbff1b485cc113637b3fcf5304cbdb34034e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;labelframe&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdec83a72ea03fc29553731f1705a07cf299f2f9" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;lassign&lt;/b&gt; command has other uses. It can be used to create the analogue of the &amp;ldquo;shift&amp;rdquo; command in many shell languages like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107577f97c7a6e9890ef45afcf7a58260f707149" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;lindex&lt;/b&gt; command accepts a parameter,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedc1a4804f5a0ea3383f1739ec4d81669dd5b2c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;listbox&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e42ee4f82b46e6a298a7d06f3fd177bc362305a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;listbox&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a32ffc9ecb434c99863475f5080ca31c0d5cf00" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;lmap&lt;/b&gt; command implements a loop where the loop variable(s) take on values from one or more lists, and the loop returns a list of results collected from each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf5747e70254ba185228ab172e7604a9dc63367" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;load&lt;/b&gt; command also supports packages that are statically linked with the application, if those packages have been registered by calling the &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/StaticPkg.htm&quot;&gt;Tcl_StaticPackage&lt;/a&gt;&lt;/b&gt; procedure. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613c5450a601c9e9f21e7788a9d908ad9bd04b09" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;local&lt;/b&gt; command creates an &lt;b&gt;[incr Tcl]&lt;/b&gt; object that is local to the current call frame. When the call frame goes away, the object is automatically deleted. This command is useful for creating objects that are local to a procedure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d8866533515f194c64b517fcd84ede196fe630" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;lrepeat&lt;/b&gt; command creates a list of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80882c4ed3b2c2c5fe3a6e64f6677048b4b98e49" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;lreverse&lt;/b&gt; command returns a list that has the same elements as its input list,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d42f4a0c618d783f04b231c35230175d691f7f7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;lset&lt;/b&gt; command accepts a parameter,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb91e9a5b71e63d5348017ecf4b1eb395491c0b3" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;lsort&lt;/b&gt; command is reentrant, meaning it is safe to use as part of the implementation of a command used in the &lt;b&gt;-command&lt;/b&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dce3850ce5a86853e226250fc80f49d828bcdb0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;memory&lt;/b&gt; command gives the Tcl developer control of Tcl's memory debugging capabilities. The memory command has several suboptions, which are described below. It is only available when Tcl has been compiled with memory debugging enabled (when &lt;b&gt;TCL_MEM_DEBUG&lt;/b&gt; is defined at compile time), and after &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/DumpActiveMemory.htm&quot;&gt;Tcl_InitMemory&lt;/a&gt;&lt;/b&gt; has been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578430570ebf14f896579193e932dfe67b2fd9cb" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;menu&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24051f56a2107af1e186138b623eac17e85447b" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;menu&lt;/b&gt; command creates a new top-level window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaeaf49d43d95357dede0c78292495dab30a4f1f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;menubutton&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696199f81ce5087eefe38d0d476a2acac8d731ea" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;menubutton&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69972bc0667faed590ce3b6dd792df4bd7361b7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;message&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae349a82aa6e8641a2a7ea3940669a0deedd6e9c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;message&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d589251521d01dcb7bf09a8996c5e05010a0858" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;ms&lt;/b&gt; command option, if given, must be an integer specifying time interval in milliseconds the command waits to be signalled . Otherwise the command waits on condition notify forever .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016ecba7783fd0684348c2082e170f02d08e874f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;msgcat&lt;/b&gt; package provides a set of functions that can be used to manage multi-lingual user interfaces. Text strings are defined in a &amp;ldquo;message catalog&amp;rdquo; which is independent from the application, and which can be edited or localized without modifying the application source code. New languages or locales may be provided by adding a new file to the message catalog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5855a085c39a36e3ddf39dc4985b9f2b84812739" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;my&lt;/b&gt; command is used to allow methods of objects to invoke any method of the object (or its class). In particular, the set of valid values for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc6adceeb73786ffd04c1b85fe11a6cda3ffcd9" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;namespace code&lt;/b&gt; command is the means by which a script may be packaged for evaluation in a namespace other than the one in which it was created. It is used most often to create event handlers, Tk bindings, and traces for evaluation in the global context. For instance, the following code indicates how to direct a variable &lt;b&gt;&lt;a href=&quot;trace.htm&quot;&gt;trace&lt;/a&gt;&lt;/b&gt; callback into the current namespace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb0748e45dd4e8f24bd16758f9f159d81c46448" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;namespace ensemble&lt;/b&gt; is used to create and manipulate ensemble commands, which are commands formed by grouping subcommands together. The commands typically come from the current namespace when the ensemble was created, though this is configurable. Note that there may be any number of ensembles associated with any namespace (including none, which is true of all namespaces by default), though all the ensembles associated with a namespace are deleted when that namespace is deleted. The link between an ensemble command and its namespace is maintained however the ensemble is renamed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abee27d7713a951b77f6a2f7e9a0afcdd2812d66" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;namespace import&lt;/b&gt; command only imports commands from a namespace that that namespace exported with a &lt;b&gt;namespace export&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb42f5b068d757359a623bf50a0788a331e1eb1" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;namespace import&lt;/b&gt; command only imports commands that were declared as exported by their namespace. The &lt;b&gt;namespace export&lt;/b&gt; command specifies what commands may be imported by other namespaces. If a &lt;b&gt;namespace import&lt;/b&gt; command specifies a command that is not exported, the command is not imported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5bb3f37cfa20e0ff01ce55022201ababc9eaca" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;namespace&lt;/b&gt; command lets you create, access, and destroy separate contexts for commands and variables. See the section &lt;b&gt;&lt;a href=&quot;#M24&quot;&gt;WHAT IS A NAMESPACE?&lt;/a&gt;&lt;/b&gt; below for a brief overview of namespaces. The legal values of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710eb4e244c54ed6b06058075b48aad0ec8f2c08" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;next&lt;/b&gt; command is used to call implementations of a method by a class, superclass or mixin that are overridden by the current method. It can only be used from within a method. It is also used within filters to indicate the point where a filter calls the actual implementation (the filter may decide to not go along the chain, and may process the results of going along the chain of methods as it chooses). The result of the &lt;b&gt;next&lt;/b&gt; command is the result of the next method in the method chain; if there are no further methods in the method chain, the result of &lt;b&gt;next&lt;/b&gt; will be an error. The arguments,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c665205c107549986ca4a20b206159cb32a00e47" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;nextdict&lt;/b&gt; object command sets the variable given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbcfb1b4ebee064421f53573c455eb164db1b4e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;nextlist&lt;/b&gt; object command sets the variable given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c2db7ec96e707791e67455c834b3e39a77e52f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;nextrow&lt;/b&gt; object command is precisely equivalent to the &lt;b&gt;nextdict&lt;/b&gt; or &lt;b&gt;nextlist&lt;/b&gt; object command, depending on whether &lt;b&gt;-as dicts&lt;/b&gt; (the default) or &lt;b&gt;-as lists&lt;/b&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea73c5d47a42e65acf7e88e34d46e202df29753" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;nextto&lt;/b&gt; command is the same as the &lt;b&gt;next&lt;/b&gt; command, except that it takes an additional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aed9d115b8537bc63db1ee1552147e43f837907" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;none&lt;/b&gt; cursor can be specified to eliminate the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a500e6bcbde88e490c425d774e878df672d22e75" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;oo::class&lt;/b&gt; class does not define an explicit destructor. However, when a class is destroyed, all its subclasses and instances are also destroyed, along with all objects that it has been mixed into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a05fb3924815bc7d125feba5553e5cf845877b" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;oo::class&lt;/b&gt; class is the class of all classes; every class is an instance of this class, which is consequently an instance of itself. This class is a subclass of &lt;b&gt;&lt;a href=&quot;object.htm&quot;&gt;oo::object&lt;/a&gt;&lt;/b&gt;, so every class is also an object. Additional metaclasses (i.e., classes of classes) can be defined if necessary by subclassing &lt;b&gt;oo::class&lt;/b&gt;. Note that the &lt;b&gt;oo::class&lt;/b&gt; object hides the &lt;b&gt;new&lt;/b&gt; method on itself, so new classes should always be made using the &lt;b&gt;create&lt;/b&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732665c720137b1fb8bbe7b7bb7f03d48a9d4f6d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;oo::class&lt;/b&gt; class supports the following non-exported methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0db33e183ac6520d48abac284da8ad7d128771" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;oo::copy&lt;/b&gt; command creates a copy of an object or class. It takes the name of the object or class to be copied,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac9da0f1f7858b7f097eb2d88c3eefed23284b0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;oo::define&lt;/b&gt; command is used to control the configuration of classes, and the &lt;b&gt;oo::objdefine&lt;/b&gt; command is used to control the configuration of objects (including classes as instance objects), with the configuration being applied to the entity named in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9de05e211207d6ed0f64b9d0a57e86bd8102961" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;oo::object&lt;/b&gt; class does not define an explicit constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf890b37c40771be5df31b72e56f9076f0f9e2a2" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;oo::object&lt;/b&gt; class does not define an explicit destructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63eb6ce69bd612e31f7a4b78ff051602620f6bd0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;oo::object&lt;/b&gt; class is the root class of the object hierarchy; every object is an instance of this class. Since classes are themselves objects, they are instances of this class too. Objects are always referred to by their name, and may be &lt;b&gt;&lt;a href=&quot;rename.htm&quot;&gt;rename&lt;/a&gt;&lt;/b&gt;d while maintaining their identity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609294f0f3c905e3197d916f4724470e3aa9b6ba" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;oo::object&lt;/b&gt; class supports the following exported methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb99859610393890307fb75cc89b9f492ac6abb" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;oo::object&lt;/b&gt; class supports the following non-exported methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0764c0138246ee3dccb2b9826d3aad4fcb5101" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;option clear&lt;/b&gt; command clears the option database. Default options (from the &lt;b&gt;RESOURCE_MANAGER&lt;/b&gt; property or the &lt;b&gt;.Xdefaults&lt;/b&gt; file) will be reloaded automatically the next time an option is added to the database or removed from it. This command always returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7cceee8af3a31abe02c68534d5886373748583" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;option get&lt;/b&gt; command returns the value of the option specified for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bb2246fa037fbf310661898df26437c9d5a388" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;option&lt;/b&gt; command allows you to add entries to the Tk option database or to retrieve options from the database. The &lt;b&gt;add&lt;/b&gt; form of the command adds a new option to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1430959db5d5f844febd76881e5d038703ee29c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;pack&lt;/b&gt; command is used to communicate with the packer, a geometry manager that arranges the children of a parent by packing them in order around the edges of the parent. The &lt;b&gt;pack&lt;/b&gt; command can have any of several forms, depending on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757d31c88759230c727a485b7480313bbee65564" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;panedwindow&lt;/b&gt; command creates a new Tcl command whose name is the same as the path name of the panedwindow's window. This command may be used to invoke various operations on the widget. It has the following general form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba79085fe0ceefc23c3e997691ae397e4b701fc" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;panedwindow&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c46b6e569761a82d47a315ae2d81bd44daf4f31" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;params&lt;/b&gt; method against a statement object enumerates the bound variables that appear in the statement. The result returned from the &lt;b&gt;params&lt;/b&gt; method is a dictionary whose keys are the names of bound variables (listed in the order in which the variables first appear in the statement), and whose values are dictionaries. The subdictionaries include at least the following keys (database drivers may add additional keys that are not in this list).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d8652b199fb07b2a7db5184f448e4418adcf1c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;paramtype&lt;/b&gt; object command allows the script to specify the type and direction of parameter transmission of a variable in a statement. (Some databases provide no method to determine this information automatically and place the burden on the caller to do so.) The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b394b438099acffc392f42d56cf4f9b213b59d28" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;part&lt;/b&gt; command defines a new part for the ensemble. Its syntax is identical to the usual &lt;b&gt;&lt;a href=&quot;../tclcmd/proc.htm&quot;&gt;proc&lt;/a&gt;&lt;/b&gt; command, but it defines a part within an ensemble, instead of a Tcl command. If a part called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e417d0a993736469ff27f4c98551eccd7c74e8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;platform::shell&lt;/b&gt; package provides several utility commands useful for the identification of the architecture of a specific Tcl shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a517faab21649c5d99e7277ba3c07c25f4a309b6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;platform&lt;/b&gt; package prevents such fragmentation - i.e., it establishes a standard naming convention for architectures running Tcl and makes it more convenient for developers to identify the current architecture a Tcl program is running on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309a22d6a9a4b43c8de767f76e27556a97d8bae8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;platform&lt;/b&gt; package provides several utility commands useful for the identification of the architecture of a machine running Tcl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e114f439c63efddaa2906055bbbc98cf7ad9ee" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;prepare&lt;/b&gt; object command against the connection accepts arbitrary SQL code to be executed against the database. The SQL code may contain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b61d3490fbf764c7ec337db136651495a65203c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;prepare&lt;/b&gt; object command on a database connection prepares a SQL statement for execution. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5034499cd137c87afca2faa6e835c16dc56b4250" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;preparecall&lt;/b&gt; object command against the connection accepts a stylized statement in the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d999abb563b55f02f78673a907fc9b60f066e3f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;primarykeys&lt;/b&gt; object command allows the program to query the connection for the primary keys belonging to a given table. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f198d15245092a0ecd03c356dbf9b71abf107e7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;proc&lt;/b&gt; command creates a new Tcl procedure named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb8b0d1c243fe1b9ad85fd72ff6e6fb32a2b57c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;proc&lt;/b&gt; command returns an empty string. When a procedure is invoked, the procedure's return value is the value specified in a &lt;b&gt;&lt;a href=&quot;return.htm&quot;&gt;return&lt;/a&gt;&lt;/b&gt; command. If the procedure does not execute an explicit &lt;b&gt;&lt;a href=&quot;return.htm&quot;&gt;return&lt;/a&gt;&lt;/b&gt;, then its return value is the value of the last command executed in the procedure's body. If an error occurs while executing the procedure body, then the procedure-as-a-whole will return that same error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0cc1a984fa1c30587548c50da4eb45e810ce41" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;r&lt;/b&gt;, &lt;b&gt;R&lt;/b&gt;, &lt;b&gt;q&lt;/b&gt; and &lt;b&gt;Q&lt;/b&gt; conversions will only work reliably for transferring data between computers which are all using IEEE floating point representations. This is very common, but not universal. To transfer floating-point numbers portably between all architectures, use their textual representation (as produced by &lt;b&gt;&lt;a href=&quot;format.htm&quot;&gt;format&lt;/a&gt;&lt;/b&gt;) instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671264eaad78112812a2dc65d56fbebcc34f40b5" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;radiobutton&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdae4e8e618d8d1f22ed1216277b01636e6a5311" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;radiobutton&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb37ea7a146df29a17eb09a54ad3d53349c57eac" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;readfile&lt;/b&gt; form of the command reads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033d760cc14967bfdec13ec5452580d5db37fc1e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;registry&lt;/b&gt; package provides a general set of operations for manipulating the Windows registry. The package implements the &lt;b&gt;registry&lt;/b&gt; Tcl command. This command is only supported on the Windows platform. Warning: this command should be used with caution as a corrupted registry can leave your system in an unusable state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6893681112404d600dc5c53c8ff478e5e5b2a784" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;rename&lt;/b&gt; command can be used to wrap the standard Tcl commands with your own monitoring machinery. For example, you might wish to count how often the &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; command is called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ccc55b2c7e52aafb37c19f8ebb4854578985d3" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;resultsets&lt;/b&gt; method returns a list of all the result sets that have been returned by executing the statement and have not yet been closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2906a683d81ea49b861f736b857f22c34b53f701" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;resultsets&lt;/b&gt; object command returns a list of result sets that have been obtained by executing statements prepared using the given connection and not yet closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8f3af8358727d994ccebe6ca93c68c5f331d43" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;return -code&lt;/b&gt; command acts similarly within script files that are evaluated by the &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; command. During the evaluation of the contents of a file as a script by &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt;, an invocation of the &lt;b&gt;return -code &lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2e3b74c2e9e7f569b1d8255e4b205df7651662" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;return&lt;/b&gt; command serves a similar function within script files that are evaluated by the &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; command. When &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; evaluates the contents of a file as a script, an invocation of the &lt;b&gt;return&lt;/b&gt; command will cause script evaluation to immediately cease, and the value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef36e1863de675bd32ef325e5c3a0c38930515a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;rollback&lt;/b&gt; object command on a database connection rolls back the most recent transaction started by &lt;b&gt;begintransaction&lt;/b&gt;. The state of the database is as if nothing happened during the transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc78ed2905873bd4dea6c22ffdff6d8ef8ad11f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;rowcount&lt;/b&gt; object command returns the number of rows in the database that were affected by the execution of an INSERT, UPDATE or DELETE statement. For a SELECT statement, the row count is unspecified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8423763da3ca6ffaaf8f89a8c5d94e74c7dcbe" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;safe::loadTk&lt;/b&gt; command initializes the required data structures in the named safe interpreter and then loads Tk into it. The interpreter must have been created with &lt;b&gt;safe::interpCreate&lt;/b&gt; or have been initialized with &lt;b&gt;safe::interpInit&lt;/b&gt;. The command returns the name of the safe interpreter. If &lt;b&gt;-use&lt;/b&gt; is specified, the window identified by the specified system dependent identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf1d54973fa0015d396ca6c0961e31f8d3920ec" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;scale&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ef1b53c79529bf6627f7b5bed39fce2a27b722" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;scale&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f023a5a8dacbacfe92e99cb7a0a108a0528fa63e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;scrollbar&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1291e1501796353a0eaa02afaecd543f21fbe075" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;scrollbar&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003ef0d20ac3df2db83d7c381a1975bd759f9816" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;sel&lt;/b&gt; tag is automatically defined when a text widget is created, and it may not be deleted with the &amp;ldquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a74668413ba42874da3f5cdb12f8757e1136502" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;self&lt;/b&gt; command, which should only be used from within the context of a call to a method (i.e. inside a method, constructor or destructor body) is used to allow the method to discover information about how it was called. It takes an argument,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74fc7e1f9c705ce3f01fb23286f062eed2465b8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;send&lt;/b&gt; command is potentially a serious security loophole. On Unix, any application that can connect to your X server can send scripts to your applications. These incoming scripts can use Tcl to read and write your files and invoke subprocesses under your name. Host-based access control such as that provided by &lt;b&gt;xhost&lt;/b&gt; is particularly insecure, since it allows anyone with an account on particular hosts to connect to your server, and if disabled it allows anyone anywhere to connect to your server. In order to provide at least a small amount of security, Tk checks the access control being used by the server and rejects incoming sends unless (a) &lt;b&gt;xhost&lt;/b&gt;-style access control is enabled (i.e. only certain hosts can establish connections) and (b) the list of enabled hosts is empty. This means that applications cannot connect to your server unless they use some other form of authorization such as that provide by &lt;b&gt;xauth&lt;/b&gt;. Under Windows, &lt;b&gt;send&lt;/b&gt; is currently disabled. Most of the functionality is provided by the &lt;b&gt;&lt;a href=&quot;../tclcmd/dde.htm&quot;&gt;dde&lt;/a&gt;&lt;/b&gt; command instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cfd9157e19ad55623cb6fe7959258ab22b65bc" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;spinbox&lt;/b&gt; command creates a new Tcl command whose name is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d038ae15d439e375ee097aa325668cbf5586434" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;spinbox&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d91dbe9093ddc3f99cb2703916e23848f4d0155" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;stackorder&lt;/b&gt; command returns a list of toplevel windows in stacking order, from lowest to highest. When a single toplevel window is passed, the returned list recursively includes all of the window's children that are toplevels. Only those toplevels that are currently mapped to the screen are returned. The &lt;b&gt;stackorder&lt;/b&gt; command can also be used to determine if one toplevel is positioned above or below a second toplevel. When two window arguments separated by either &lt;b&gt;isabove&lt;/b&gt; or &lt;b&gt;isbelow&lt;/b&gt; are passed, a boolean result indicates whether or not the first window is currently above or below the second window in the stacking order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd0d0617344b80618c439cb7d37a8c5386294d0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;statements&lt;/b&gt; object command returns a list of statements that have been created by &lt;b&gt;prepare&lt;/b&gt; and &lt;b&gt;preparecall&lt;/b&gt; statements against the given connection and have not yet been closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674e3c0b0046cfa48868396f74d102b750f4bc42" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;switch&lt;/b&gt; command can match against variables and not just literals, as shown here (the result is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ad72c8cc74997ba9ce7c50518221baed231c2c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;switch&lt;/b&gt; command matches its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2a845f34529fc8cd0cc4dc481d9a8ae7d938ab" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tables&lt;/b&gt; object command allows the program to query the connection for the names of tables that exist in the database. The optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a52bc564f005a79f496e45bd0a8d951ebe3b80a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tailcall&lt;/b&gt; command replaces the currently executing procedure, lambda application, or method with another command. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439324109a74da7cd02b01cb1e7b0a33d1488288" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tcltest&lt;/b&gt; package provides several utility commands useful in the construction of test suites for code instrumented to be run by evaluation of Tcl commands. Notably the built-in commands of the Tcl library itself are tested by a test suite using the tcltest package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c3245eed1964c2ac9133f0f2268f1f2100dcf6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::mapSqlState&lt;/b&gt; command accepts a string that is expected to be a five-character 'SQL state' as returned from a SQL database when an error occurs. It examines the first two characters of the string, and returns an error class as a human- and machine-readable name (for example, &lt;b&gt;FEATURE_NOT_SUPPORTED&lt;/b&gt;, &lt;b&gt;DATA_EXCEPTION&lt;/b&gt; or &lt;b&gt;INVALID_CURSOR_STATE&lt;/b&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e001215e62b360bd25f8814183e4028e81d2e50" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::mysql::connection create&lt;/b&gt; object command supports the &lt;b&gt;-encoding&lt;/b&gt;, &lt;b&gt;-isolation&lt;/b&gt;, &lt;b&gt;-readonly&lt;/b&gt; and &lt;b&gt;-timeout&lt;/b&gt; options common to all TDBC drivers. The &lt;b&gt;-encoding&lt;/b&gt; option will always fail unless the encoding is &lt;b&gt;utf-8&lt;/b&gt;; the database connection always uses UTF-8 encoding to be able to transfer arbitrary Unicode characters. The &lt;b&gt;-readonly&lt;/b&gt; option must be &lt;b&gt;0&lt;/b&gt;, because MySQL does not offer read-only connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7e4f3d1d5685572b45d405a8373ad0e1e4c0ff" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::mysql&lt;/b&gt; driver provides a database interface that conforms to Tcl DataBase Connectivity (TDBC) and allows a Tcl script to connect to a MySQL database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b038ce0c861e81fbf69ccbd67f5374841a890b59" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::odbc::connection create&lt;/b&gt; object command supports the &lt;b&gt;-encoding&lt;/b&gt;, &lt;b&gt;-isolation&lt;/b&gt;, &lt;b&gt;-readonly&lt;/b&gt; and &lt;b&gt;-timeout&lt;/b&gt; options common to all TDBC drivers. The &lt;b&gt;-encoding&lt;/b&gt; option will succeed only if the requested encoding is the same as the system encoding; &lt;b&gt;tdbc::odbc&lt;/b&gt; does not attempt to specify alternative encodings to an ODBC driver. (Some drivers accept encoding specifications in the connection string.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493148db7e3e3f64e117b9c228655fba910b1fc5" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::odbc::datasource&lt;/b&gt; command allows configuration of named data sources on those systems that support the ODBC Installer application programming interface. It accepts a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bbe2f593437cc77cbd6188ad0b36974a486205" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::odbc::drivers&lt;/b&gt; command returns a dictionary whose keys are the names of drivers available for the &lt;b&gt;DRIVER&lt;/b&gt; keyword in the connection string, and whose values are descriptions of the drivers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c0f4add1bc387256c0ad468393ba8658ae0d10" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::odbc&lt;/b&gt; driver provides a database interface that conforms to Tcl DataBase Connectivity (TDBC) and allows a Tcl script to connect to any SQL database presenting an ODBC interface. It is also provided as a worked example of how to write a database driver in C, so that driver authors have a starting point for further development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76141bd074f0e29d256ceac20f21b5a32b617226" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::postgres::connection create&lt;/b&gt; object command supports the &lt;b&gt;-encoding&lt;/b&gt;, &lt;b&gt;-isolation&lt;/b&gt;, &lt;b&gt;-readonly&lt;/b&gt; and &lt;b&gt;-timeout&lt;/b&gt; options common to all TDBC drivers. The &lt;b&gt;-timeout&lt;/b&gt; option will only affect connection process, once connected this value will be ignored and cannot be changed after connecting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a685437c5d5141a9c426713c7f02cdff8420dc14" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::postgres&lt;/b&gt; driver provides a database interface that conforms to Tcl DataBase Connectivity (TDBC) and allows a Tcl script to connect to a Postgres database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0ae39d3b3ed54de10749924a726b66869cbe15" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::sqlite3&lt;/b&gt; driver provides a database interface that conforms to Tcl DataBase Connectivity (TDBC) and allows a Tcl script to connect to a SQLite3 database. It is also provided as a worked example of how to write a database driver in Tcl, so that driver authors have a starting point for further development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571ade1e5d926bb01f31070ad1ca48b0ff63c7d1" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tdbc::tokenize&lt;/b&gt; command accepts as its parameter a string that is expected to contain one or more SQL statements. It returns a list of substrings; concatenating these substrings together will yield the original string. Each substring is one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bb148e92021d6ab4cfe2bc428cee1e56ab176e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;test&lt;/b&gt; command is the heart of the &lt;b&gt;tcltest&lt;/b&gt; package. Its essential function is to evaluate a Tcl script and compare the result with an expected result. The options of &lt;b&gt;test&lt;/b&gt; define the test script, the environment in which to evaluate it, the expected result, and how the compare the actual result to the expected result. Some configuration options of &lt;b&gt;tcltest&lt;/b&gt; also influence how &lt;b&gt;test&lt;/b&gt; operates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f846b78c23f478a5e0199fe56ea868da8a285e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;text&lt;/b&gt; command creates a new Tcl command whose name is the same as the path name of the text's window. This command may be used to invoke various operations on the widget. It has the following general form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e9919a8d3803e61548529b84546ab34be4682b" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;text&lt;/b&gt; command creates a new window (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7226466706c331dcb3c6f46a5d9be3b0dec197" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;thread::mutex&lt;/b&gt; command supports following subcommands and options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b3cb44cdcae2fee12f322b826d095fe04ea647" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;thread::rwmutex&lt;/b&gt; command supports following subcommands and options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4da913b2c47fa778f10c7dbbf2894e01f3e5d9" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;thread&lt;/b&gt; extension creates threads that contain Tcl interpreters, and it lets you send scripts to those threads for evaluation . Additionaly, it provides script-level access to basic thread synchronization primitives, like mutexes and condition variables .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c0c52f668dd523cc6c8722e05ef16059537f14" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tk busy&lt;/b&gt; command lets you make Tk widgets busy. This means that user interactions such as button clicks, moving the mouse, typing at the keyboard, etc. are ignored by the widget. You can set a special cursor (like a watch) that overrides the widget's normal cursor, providing feedback that the application (widget) is temporarily busy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51177ff1fd97c8585da7169f42889f9166a8e7ce" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tk busy&lt;/b&gt; command provides a simple means to block keyboard, button, and pointer events from Tk widgets, while overriding the widget's cursor with a configurable busy cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e024668c7278e105f6e7d5290de19502d9fc85e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tk&lt;/b&gt; command provides access to miscellaneous elements of Tk's internal state. Most of the information manipulated by this command pertains to the application as a whole, or to a screen or display, rather than to a particular window. The command can take any of a number of different forms depending on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad5e8a69eb179fdac7dd38e33b88bcdbd40482a" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tk_getSaveFile&lt;/b&gt; command is usually associated with the &lt;b&gt;Save as&lt;/b&gt; command in the &lt;b&gt;File&lt;/b&gt; menu. If the user enters a file that already exists, the dialog box prompts the user for confirmation whether the existing file should be overwritten or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291f440b30e8721d79c681ed74ce1dc4a08fb052" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tk_setPalette&lt;/b&gt; procedure changes the color scheme for Tk. It does this by modifying the colors of existing widgets and by changing the option database so that future widgets will use the new color scheme. If &lt;b&gt;tk_setPalette&lt;/b&gt; is invoked with a single argument, the argument is the name of a color to use as the normal background color; &lt;b&gt;tk_setPalette&lt;/b&gt; will compute a complete color palette from this background color. Alternatively, the arguments to &lt;b&gt;tk_setPalette&lt;/b&gt; may consist of any number of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf47b211dc488a29576233f2dd18029fabe7793" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;tkwait&lt;/b&gt; command waits for one of several things to happen, then it returns without taking any other actions. The return value is always an empty string. If the first argument is &lt;b&gt;variable&lt;/b&gt; (or any abbreviation of it) then the second argument is the name of a global variable and the command waits for that variable to be modified. If the first argument is &lt;b&gt;visibility&lt;/b&gt; (or any abbreviation of it) then the second argument is the name of a window and the &lt;b&gt;tkwait&lt;/b&gt; command waits for a change in its visibility state (as indicated by the arrival of a VisibilityNotify event). This form is typically used to wait for a newly-created window to appear on the screen before taking some action. If the first argument is &lt;b&gt;window&lt;/b&gt; (or any abbreviation of it) then the second argument is the name of a window and the &lt;b&gt;tkwait&lt;/b&gt; command waits for that window to be destroyed. This form is typically used to wait for a user to finish interacting with a dialog box before using the result of that interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5842193197d757d040819fc8e5c741df74b470a4" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;toplevel&lt;/b&gt; command creates a new Tcl command whose name is the same as the path name of the toplevel's window. This command may be used to invoke various operations on the widget. It has the following general form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8b80a4ea0e210995e240b8edbbfc1704f7002c" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;toplevel&lt;/b&gt; command creates a new toplevel widget (given by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf817e0e164c5a9956a35aa7fec3feee1df39e2" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;transaction&lt;/b&gt; object command on a database connection presents a simple way of bundling a database transaction. It begins a transaction, and evaluates the supplied</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded8d3a87b1a4dbf40bfedd9c121dd3d3b7e18c8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;ttk::style&lt;/b&gt; command takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e170a8e4f3cf6a91e165123ae8558553841326f7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;ttk::treeview&lt;/b&gt; widget displays a hierarchical collection of items. Each item has a textual label, an optional image, and an optional list of data values. The data values are displayed in successive columns after the tree label.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af3f54fa1964856d13b0d35dfd887c58c3b2a1f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;unload&lt;/b&gt; command cannot unload libraries that are statically linked with the application. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe8658a73d2b9b104c19442594d237c23620557" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;update idletasks&lt;/b&gt; command is useful in scripts where changes have been made to the application's state and you want those changes to appear on the display immediately, rather than waiting for the script to complete. Most display updates are performed as idle callbacks, so &lt;b&gt;update idletasks&lt;/b&gt; will cause them to run. However, there are some kinds of updates that only happen in response to events, such as those triggered by window size changes; these updates will not occur in &lt;b&gt;update idletasks&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1890ab1815a8afa612a41e7c3e862a3239549b" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;update&lt;/b&gt; command with no options is useful in scripts where you are performing a long-running computation but you still want the application to respond to events such as user interactions; if you occasionally call &lt;b&gt;update&lt;/b&gt; then user input will be processed during the next call to &lt;b&gt;update&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95be2eabf90c8f7a74e5aa454f0574163d272d1" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;uplevel&lt;/b&gt; command causes the invoking procedure to disappear from the procedure calling stack while the command is being executed. In the above example, suppose &lt;b&gt;c&lt;/b&gt; invokes the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f4d70fadf306864e1db591256d68a289023bab" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;upvar&lt;/b&gt; command simplifies the implementation of call-by-name procedure calling and also makes it easier to build new control constructs as Tcl procedures. For example, consider the following procedure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad106369369ba21b1af173df44de076e629a646" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;uuencode&lt;/b&gt; binary encoding used to be common for transfer of data between Unix systems and on USENET, but is less common these days, having been largely superseded by the &lt;b&gt;base64&lt;/b&gt; binary encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72214089c0da07d882592fd694815f585076bea6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;vsapi&lt;/b&gt; element factory creates a new element in the current theme whose visual appearance is drawn using the Microsoft Visual Styles API which is responsible for the themed styles on Windows XP and Vista. This factory permits any of the Visual Styles parts to be declared as Ttk elements that can then be included in a style layout to modify the appearance of Ttk widgets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082b212e428600a5a920cca32bd6f1106294ec36" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;while&lt;/b&gt; command evaluates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d410e1e7b5f3c016959dadf39ba8d12407836592" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;winfo&lt;/b&gt; command is used to retrieve information about windows managed by Tk. It can take any of a number of different forms, depending on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecb55ef007e580f3253523a97b3018c2779d40e" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;wm manage&lt;/b&gt; and &lt;b&gt;wm forget&lt;/b&gt; commands may be used to perform undocking and docking of windows. After a widget is managed by &lt;b&gt;wm manage&lt;/b&gt; command, all other &lt;b&gt;wm&lt;/b&gt; subcommands may be used with the widget. Only widgets created using the toplevel command may have an attached menu via the &lt;b&gt;-menu&lt;/b&gt; configure option. A toplevel widget may be used as a frame and managed with any of the other geometry managers after using the &lt;b&gt;wm forget&lt;/b&gt; command. Any menu associated with a toplevel widget will be hidden when managed by another geometry managers. The menus will reappear once the window is managed by &lt;b&gt;wm&lt;/b&gt;. All custom bindtags for widgets in a subtree that have their top-level widget changed via a &lt;b&gt;wm manage&lt;/b&gt; or &lt;b&gt;wm forget&lt;/b&gt; command, must be redone to adjust any top-level widget path in the bindtags. Bindtags that have not been customized do not have to be redone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc93d91e8ae7c8e233ff0eb19bbcb6ac1c91ffa0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;wm&lt;/b&gt; command is used to interact with window managers in order to control such things as the title for a window, its geometry, or the increments in terms of which it may be resized. The &lt;b&gt;wm&lt;/b&gt; command can take any of a number of different forms, depending on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460c8889d8b0ba427c56b619841ba5775c0276d0" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;zlib&lt;/b&gt; command provides access to the compression and check-summing facilities of the Zlib library by Jean-loup Gailly and Mark Adler. It has the following subcommands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824f1514e88fa304dfdaf54e33c245888c525c1d" translate="yes" xml:space="preserve">
          <source>The Accept header of the request. The default is */*, which means that all types of documents are accepted. Otherwise you can supply a comma-separated list of mime type patterns that you are willing to receive. For example, &amp;ldquo;image/gif, image/jpeg, text/*&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc97c9824e968d2f3c58df31a8caf9a9f98bbfab" translate="yes" xml:space="preserve">
          <source>The Aqua/Mac OS X application environment defines a number of additional events that applications should respond to. These events are mapped by Tk to calls to commands in the &lt;b&gt;::tk::mac&lt;/b&gt; namespace; unless otherwise noted, if the command is absent, no action will be taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8935def7f778f6d19d75bee4fdba8351c61c7d3" translate="yes" xml:space="preserve">
          <source>The Aqua/Mac OS X defines additional dialogs that applications should support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63927f93a81a7d3a051f26483a5087c6babe7fb" translate="yes" xml:space="preserve">
          <source>The BackSpace key and Control-h delete the selection, if there is one in the entry. If there is no selection, it deletes the character to the left of the insert cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48b503b55111fa5daae008395032e3fb454e33d" translate="yes" xml:space="preserve">
          <source>The BackSpace key and Control-h delete the selection, if there is one in the entry. If there is no selection, it deletes the character to the left of the insertion cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627c67c5489689d706f60582474fd0a17bb3c29a" translate="yes" xml:space="preserve">
          <source>The BackSpace key and Control-h delete the selection, if there is one in the spinbox. If there is no selection, it deletes the character to the left of the insertion cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72352933f4a438b1b6c11a019feab1100f6b5dfb" translate="yes" xml:space="preserve">
          <source>The C functions which a Tcl extended C program may use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c593091622abcd07fb7aed5689cc8c7030a891a4" translate="yes" xml:space="preserve">
          <source>The C library's idea of the local time zone, as defined by the &lt;b&gt;mktime&lt;/b&gt; and &lt;b&gt;localtime&lt;/b&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c81c942afa5cd97eb0425ef1e4993f48660f9b" translate="yes" xml:space="preserve">
          <source>The Delete key deletes the selection, if there is one in the entry. If there is no selection, it deletes the character to the right of the insert cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92d93df70753f2c152114b96931b025184b177a" translate="yes" xml:space="preserve">
          <source>The Delete key deletes the selection, if there is one in the entry. If there is no selection, it deletes the character to the right of the insertion cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cb697f0dd01328913428c1c13ba753e63dbe85" translate="yes" xml:space="preserve">
          <source>The Delete key deletes the selection, if there is one in the spinbox. If there is no selection, it deletes the character to the right of the insertion cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a854b2e725177f6bff03aa275410c1f2eed8bb1c" translate="yes" xml:space="preserve">
          <source>The Delete key deletes the selection, if there is one in the widget. If there is no selection, it deletes the character to the right of the insertion cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb946349bf5d898225008500a701903a39fa4303" translate="yes" xml:space="preserve">
          <source>The Down and Right keys move the slider down (right) by the value of the &lt;b&gt;-resolution&lt;/b&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47ee1ee757dcd762892f2eda39d7044a00df3c7" translate="yes" xml:space="preserve">
          <source>The End key adjusts the view to the bottom (right edge) of the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c165ebddd20a0c3dc8a174ad43facfb6e624f4" translate="yes" xml:space="preserve">
          <source>The End key and Control-e move the insert cursor to the end of the entry and clear any selection in the entry. Shift-End moves the cursor to the end and extends the selection to that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7941d0e72366377231baf3cd9b696ed52b682e6b" translate="yes" xml:space="preserve">
          <source>The End key, or Control-e, will move the insertion cursor to the end of the entry and clear any selection in the entry. Shift-End moves the cursor to the end and extends the selection to that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c2e1f4583a1d7be30f7cf228f90db7ab534638" translate="yes" xml:space="preserve">
          <source>The End key, or Control-e, will move the insertion cursor to the end of the spinbox and clear any selection in the spinbox. Shift-End moves the cursor to the end and extends the selection to that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3305ad91e1977d3ce965c2c5e3259941b13eb56c" translate="yes" xml:space="preserve">
          <source>The Escape key aborts a menu selection in progress without invoking any entry. It also unposts the menu unless it is a torn-off menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e24a64b952bbdad997d8fc3b8d0056c6783d2e0" translate="yes" xml:space="preserve">
          <source>The F10 key may be typed in any window to post the first menubutton under its toplevel window that is not disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c390246c78e18f919dfec82c92c2a1c5a19e1868" translate="yes" xml:space="preserve">
          <source>The F16 key (labelled Copy on many Sun workstations) or Meta-w copies the selection in the widget to the clipboard, if there is a selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d126527a2ec351f52e73bf6bd191d0bce7e7a7b3" translate="yes" xml:space="preserve">
          <source>The F16 key (labelled Copy on many Sun workstations) or Meta-w copies the selection in the widget to the clipboard, if there is a selection. This action is carried out by the command &lt;b&gt;tk_textCopy&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c8e2c51417f42a6085a447880bde543839e6b6" translate="yes" xml:space="preserve">
          <source>The F18 key (labelled Paste on many Sun workstations) or Control-y inserts the contents of the clipboard at the position of the insertion cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef913329f90f78ee91f29d552a564d9bbe3b024" translate="yes" xml:space="preserve">
          <source>The F18 key (labelled Paste on many Sun workstations) or Control-y inserts the contents of the clipboard at the position of the insertion cursor. This action is carried out by the command &lt;b&gt;tk_textPaste&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9854ce71bf72a19707cb2f53d6cde4e762aa2ddb" translate="yes" xml:space="preserve">
          <source>The F20 key (labelled Cut on many Sun workstations) or Control-w copies the selection in the widget to the clipboard and deletes the selection. If there is no selection in the widget then these keys have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7703e08713a8f9ada8a95bc2743ae948d1576f6b" translate="yes" xml:space="preserve">
          <source>The F20 key (labelled Cut on many Sun workstations) or Control-w copies the selection in the widget to the clipboard and deletes the selection. This action is carried out by the command &lt;b&gt;tk_textCut&lt;/b&gt;. If there is no selection in the widget then these keys have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ec88ab73c9dbde6d52d051dbfe94fd78503cb4" translate="yes" xml:space="preserve">
          <source>The HTTP protocol returns meta-data that describes the URL contents. The &lt;b&gt;meta&lt;/b&gt; element of the state array is a list of the keys and values of the meta-data. This is in a format useful for initializing an array that just contains the meta-data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2f46a911f65420c4ff36b94896939348032823" translate="yes" xml:space="preserve">
          <source>The HTTP status reply from the server. This value is returned by the &lt;b&gt;::http::code&lt;/b&gt; command. The format of this value is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc92d46e11974b7538d4b36b97b5e8bde32529d6" translate="yes" xml:space="preserve">
          <source>The Home and End keys scroll the listbox horizontally to the left and right edges, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759251038063104c17696d62bde92b6818d8f5b0" translate="yes" xml:space="preserve">
          <source>The Home key adjusts the view to the top (left edge) of the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3245b55cc6ef4159feb5785594bcabd4229cc158" translate="yes" xml:space="preserve">
          <source>The Home key and Control-a move the insert cursor to the beginning of the entry and clear any selection in the entry. Shift-Home moves the insert cursor to the beginning of the entry and extends the selection to that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76fdeb6a121ae97205ed29fc901e11e9df37a4ea" translate="yes" xml:space="preserve">
          <source>The Home key, or Control-a, will move the insertion cursor to the beginning of the entry and clear any selection in the entry. Shift-Home moves the insertion cursor to the beginning of the entry and also extends the selection to that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e35776e71ad0ebb382937651761790d1d58af7" translate="yes" xml:space="preserve">
          <source>The Home key, or Control-a, will move the insertion cursor to the beginning of the spinbox and clear any selection in the spinbox. Shift-Home moves the insertion cursor to the beginning of the spinbox and also extends the selection to that point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fca490959a0619d30c5717ad16f2d81008b0de" translate="yes" xml:space="preserve">
          <source>The Left and Right keys move the insert cursor one character to the left or right; they also clear any selection in the entry. If Left or Right is typed with the Shift key down, then the insertion cursor moves and the selection is extended to include the new character. Control-Left and Control-Right move the insert cursor by words, and Control-Shift-Left and Control-Shift-Right move the insert cursor by words and also extend the selection. Control-b and Control-f behave the same as Left and Right, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7e45f4b6bf8ba962eabe1da821c092b0a753ad" translate="yes" xml:space="preserve">
          <source>The Left and Right keys move the insertion cursor one character to the left or right; they also clear any selection in the entry and set the selection anchor. If Left or Right is typed with the Shift key down, then the insertion cursor moves and the selection is extended to include the new character. Control-Left and Control-Right move the insertion cursor by words, and Control-Shift-Left and Control-Shift-Right move the insertion cursor by words and also extend the selection. Control-b and Control-f behave the same as Left and Right, respectively. Meta-b and Meta-f behave the same as Control-Left and Control-Right, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9030309302001a63daeb16b1bd49b5905c4d95" translate="yes" xml:space="preserve">
          <source>The Left and Right keys move the insertion cursor one character to the left or right; they also clear any selection in the spinbox and set the selection anchor. If Left or Right is typed with the Shift key down, then the insertion cursor moves and the selection is extended to include the new character. Control-Left and Control-Right move the insertion cursor by words, and Control-Shift-Left and Control-Shift-Right move the insertion cursor by words and also extend the selection. Control-b and Control-f behave the same as Left and Right, respectively. Meta-b and Meta-f behave the same as Control-Left and Control-Right, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6f6d4e6ca9524c3e1cf949cb48b9f6b0474c0a" translate="yes" xml:space="preserve">
          <source>The Left and Right keys move the insertion cursor one character to the left or right; they also clear any selection in the text. If Left or Right is typed with the Shift key down, then the insertion cursor moves and the selection is extended to include the new character. Control-Left and Control-Right move the insertion cursor by words, and Control-Shift-Left and Control-Shift-Right move the insertion cursor by words and also extend the selection. Control-b and Control-f behave the same as Left and Right, respectively. Meta-b and Meta-f behave the same as Control-Left and Control-Right, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fa4bee06bce0cd2507f247915fe9607a0fc583" translate="yes" xml:space="preserve">
          <source>The Left and Right keys scroll the listbox view left and right by the width of the character &lt;b&gt;0&lt;/b&gt;. Control-Left and Control-Right scroll the listbox view left and right by the width of the window. Control-Prior and Control-Next also scroll left and right by the width of the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a4ba0966ef9f5b213378f95c0ed6b927e3f584" translate="yes" xml:space="preserve">
          <source>The Left key moves to the next menu to the left. If the current menu is a cascaded submenu, then the submenu is unposted and the current menu entry becomes the cascade entry in the parent. If the current menu is a top-level menu posted from a menubutton, then the current menubutton is unposted and the next menubutton to the left is posted. Otherwise the key has no effect. The left-right order of menubuttons is determined by their stacking order: Tk assumes that the lowest menubutton (which by default is the first one created) is on the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2611f5a60c69ca3f64d9b057d20c3b18a91afb6" translate="yes" xml:space="preserve">
          <source>The Next and Prior keys move the insertion cursor forward or backwards by one screenful and clear any selection in the text. If the Shift key is held down while Next or Prior is typed, then the selection is extended to include the new character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740977ddc457c78fa70105db7ebadaf20c28e02a" translate="yes" xml:space="preserve">
          <source>The PNG image loader allows the application of an additional alpha factor during loading, which is useful for generating images suitable for disabled buttons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2051099792f29dbb314e949657523741b323b1" translate="yes" xml:space="preserve">
          <source>The Prior and Next keys have the same behavior as mouse clicks over &lt;b&gt;trough1&lt;/b&gt; and &lt;b&gt;trough2&lt;/b&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdd5355fb20e2870ed4fa1c6c9b3401f1edbb00" translate="yes" xml:space="preserve">
          <source>The Prior and Next keys scroll the listbox view up and down by one page (the height of the window).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b862e5c491071e7169c6a0c9f0356148af3052dc" translate="yes" xml:space="preserve">
          <source>The Right key moves to the next menu to the right. If the current entry is a cascade entry, then the submenu is posted and the current menu entry becomes the first entry in the submenu. Otherwise, if the current menu was posted from a menubutton, then the current menubutton is unposted and the next menubutton to the right is posted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0fb2fb57bacb98fa81806f28355dd9c5d46349" translate="yes" xml:space="preserve">
          <source>The Select key and Control-Space set the selection anchor to the position of the insertion cursor. They do not affect the current selection. Shift-Select and Control-Shift-Space adjust the selection to the current position of the insertion cursor, selecting from the anchor to the insertion cursor if there was not any selection previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1554dbc74e1cad5d70ea0cb4e7ac8bfc505e9f3a" translate="yes" xml:space="preserve">
          <source>The Space and Return keys invoke the active entry and unpost the menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0d520e7ac2cdea260313ac0a891f1dead009bb" translate="yes" xml:space="preserve">
          <source>The TDBC specification requires database drivers to return a description of an error in the error code when an error occurs. The description is a string that has at least four elements: &quot;&lt;b&gt;&lt;a href=&quot;tdbc.htm&quot;&gt;TDBC&lt;/a&gt;&lt;/b&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b383b8d9365c981bea99fa71279fc89e7bac68f1" translate="yes" xml:space="preserve">
          <source>The Tcl event loop should be running while an asynchronous connection is in progress, because it may have to do several connection attempts in the background. Running the event loop also allows you to set up a writable channel event on the socket to get notified when the asynchronous connection has succeeded or failed. See the &lt;b&gt;&lt;a href=&quot;vwait.htm&quot;&gt;vwait&lt;/a&gt;&lt;/b&gt; and the &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan&lt;/a&gt;&lt;/b&gt; commands for more details on the event loop and channel events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f011ab155e858f6b2e31dc75cb573d705c8266" translate="yes" xml:space="preserve">
          <source>The Tcl package could define the following ensemble:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6854d05e20ff1ceb9d4b01407080f4b127708289" translate="yes" xml:space="preserve">
          <source>The Tcl procedure &lt;b&gt;tk_focusFollowsMouse&lt;/b&gt; may be invoked to create an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59733133bad892228967b498561d8ade530d5cc3" translate="yes" xml:space="preserve">
          <source>The Tcl standard channels (&lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stdin&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stdout&lt;/a&gt;&lt;/b&gt;, and &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TclLib/GetStdChan.htm&quot;&gt;stderr&lt;/a&gt;&lt;/b&gt;) can be configured through this command like every other channel opened by the Tcl library. Beyond the standard options described above they will also support any special option according to their current type. If, for example, a Tcl application is started by the &lt;b&gt;inet&lt;/b&gt; super-server common on Unix system its Tcl standard channels will be sockets and thus support the socket options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895a149b1e2772d2b0ef2c2263da6fdfb1d4fb8e" translate="yes" xml:space="preserve">
          <source>The Tcl-level handler for a channel transformation has to be a command with subcommands (termed an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5344617d25ece509ad3f04cb253d76e48a35314" translate="yes" xml:space="preserve">
          <source>The Tcl-level handler for a reflected channel has to be a command with subcommands (termed an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf4958e014228795a8313829794d0e5a43132c7" translate="yes" xml:space="preserve">
          <source>The Tk console text widget does not provide real standard IO capabilities. Under Tk, when redirecting from standard input, all applications will see an immediate end-of-file; information redirected to standard output or standard error will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf68f9c4af045814d32defcec2fafb6e5370213a" translate="yes" xml:space="preserve">
          <source>The Tk package could add some options to this ensemble, with a command like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371af2929b7d3bcaf3e9875736c49737daa12985" translate="yes" xml:space="preserve">
          <source>The Tk themed widget set is based on a revised and enhanced version of TIP #48 (&lt;a href=&quot;http://tip.tcl.tk/48&quot;&gt;http://tip.tcl.tk/48&lt;/a&gt;) specified style engine. The main concepts are described below. The basic idea is to separate, to the extent possible, the code implementing a widget's behavior from the code implementing its appearance. Widget class bindings are primarily responsible for maintaining the widget state and invoking callbacks; all aspects of the widget's appearance are controlled by the style of the widget (i.e. the style of the elements of the widget).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865d8edf14de3be726ca0e1ca7f9895dc0e1f652" translate="yes" xml:space="preserve">
          <source>The Up and Down keys activate the next higher or lower entry in the menu. When one end of the menu is reached, the active entry wraps around to the other end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c828203b58fbc91ac33c5db8e663b6c61bf6c33d" translate="yes" xml:space="preserve">
          <source>The Up and Down keys move the insertion cursor one line up or down and clear any selection in the text. If Up or Right is typed with the Shift key down, then the insertion cursor moves and the selection is extended to include the new character. Control-Up and Control-Down move the insertion cursor by paragraphs (groups of lines separated by blank lines), and Control-Shift-Up and Control-Shift-Down move the insertion cursor by paragraphs and also extend the selection. Control-p and Control-n behave the same as Up and Down, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0e36f1e53aea84e19d6ef1865b1e10ccfb24e0" translate="yes" xml:space="preserve">
          <source>The Up and Left keys move the slider up (left) by the value of the &lt;b&gt;-resolution&lt;/b&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e6fda909ad3b8c25616841de72ff49e8b0efb3" translate="yes" xml:space="preserve">
          <source>The Windows NT 16-bit system directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe3d1639f98f1fd7238609df39cf93c3c618087" translate="yes" xml:space="preserve">
          <source>The Windows NT 32-bit system directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b166ccf23fd3f94c1bbc410a214af7d01922c4b" translate="yes" xml:space="preserve">
          <source>The Windows NT home directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7e22d31f6e25e8497d68c26fdb64ff8d089de1" translate="yes" xml:space="preserve">
          <source>The above example moves the focus from .frame immediately after invoking the &lt;b&gt;hold&lt;/b&gt; so that no keyboard events will be sent to &lt;b&gt;.frame&lt;/b&gt; or any of its descendants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c41bacf3b8344724cd690668771d349ef2138bd" translate="yes" xml:space="preserve">
          <source>The acceptable values for the &lt;b&gt;-isolation&lt;/b&gt; configuration option are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64d5987c689429a62429ee16beeefa66be16467" translate="yes" xml:space="preserve">
          <source>The actual date is calculated according to the following steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89725f99a34acc61996b702cf72fecc901985209" translate="yes" xml:space="preserve">
          <source>The actual loading of a file will only be done once for each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2b03497a89c121c1e249ecb7614128b1333ec1" translate="yes" xml:space="preserve">
          <source>The additional C functions provided by the TDBC package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be67863abfb87a3bef58a77aae4586e8b0254e4e" translate="yes" xml:space="preserve">
          <source>The additional C functions provided by the [incr Tcl] package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf8a71334f7c914a73fa0975b3fe41e48813504" translate="yes" xml:space="preserve">
          <source>The additional C functions which a Tk extended C program may use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a914c38bf43aa84c7ebb2e51c350ac661293eb57" translate="yes" xml:space="preserve">
          <source>The additional commands provided by the SQLite3 package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f40585b6d15192e4c8bac42a0039eeb962f1628" translate="yes" xml:space="preserve">
          <source>The additional commands provided by the TDBC package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0fbf221f56414534fddd0d930f5e1851171b2ca" translate="yes" xml:space="preserve">
          <source>The additional commands provided by the Thread package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11db4ca85d20a72bbeb1f1067378aff4abc5aebd" translate="yes" xml:space="preserve">
          <source>The additional commands provided by the [incr Tcl] package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69db6e4db52984d0dd6272976df193a7860f6ea" translate="yes" xml:space="preserve">
          <source>The additional commands provided by the tdbc::mysql package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527f5a322d751708a6ca53d0b0ab8a56cbe45ff4" translate="yes" xml:space="preserve">
          <source>The additional commands provided by the tdbc::odbc package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdba630aa1649437978f69093ec3b0ef5f4d54d" translate="yes" xml:space="preserve">
          <source>The additional commands provided by the tdbc::postgres package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2d82bb017fb8447a255bf5786843b19830c6d3" translate="yes" xml:space="preserve">
          <source>The additional commands provided by the tdbc::sqlite3 package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883040bffe2c4b5866bf6b7135127ce71867b325" translate="yes" xml:space="preserve">
          <source>The additional commands which the &lt;b&gt;wish&lt;/b&gt; interpreter implements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e34f57d1aa4c5ff7f3007e28490480dccafcf62" translate="yes" xml:space="preserve">
          <source>The advertised size of the contents. The actual size obtained by &lt;b&gt;::http::geturl&lt;/b&gt; is available as &lt;b&gt;state(currentsize)&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9db401caca001c7bcec5c1bd21a35b6f24809e" translate="yes" xml:space="preserve">
          <source>The algorithm falls back to the previous unknown handler when none of the found module files satisfy the request. If the request was satisfied the fall-back is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f749e11c36040a5583ba734622e62b26de49159c" translate="yes" xml:space="preserve">
          <source>The alias mechanism has been carefully designed so that it can be used safely when an untrusted script is executing in a safe slave and the target of the alias is a trusted master. The most important thing in guaranteeing safety is to ensure that information passed from the slave to the master is never evaluated or substituted in the master; if this were to occur, it would enable an evil script in the slave to invoke arbitrary functions in the master, which would compromise security.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41994aeee8bb044272e8235888f60b26f753e440" translate="yes" xml:space="preserve">
          <source>The alternative mode of constraint control is enabled by setting &lt;b&gt;configure -limitconstraints&lt;/b&gt; to true. With that configuration setting, all existing constraints other than those in the constraint list returned by &lt;b&gt;configure -constraints&lt;/b&gt; are set to false. When the value of &lt;b&gt;configure -constraints&lt;/b&gt; is set, all those constraints are set to true. The effect is that when both options &lt;b&gt;configure -constraints&lt;/b&gt; and &lt;b&gt;configure -limitconstraints&lt;/b&gt; are in use, only those tests including only constraints from the &lt;b&gt;configure -constraints&lt;/b&gt; list are run; all others are skipped. For example, one might set up a configuration with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc852e630fc9ce70a52bfadbeb680f6982c49d7" translate="yes" xml:space="preserve">
          <source>The amount in pixels that the tallest letter sticks up above the baseline of the font, plus any extra blank space added by the designer of the font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4625e7c8766d04dbce0078c64d6c082bf5d68690" translate="yes" xml:space="preserve">
          <source>The amount the characters in the font are slanted away from the vertical. Valid values for slant are &lt;b&gt;roman&lt;/b&gt; and &lt;b&gt;italic&lt;/b&gt;. A roman font is the normal, upright appearance of a font, while an italic font is one that is tilted some number of degrees from upright. The closest available slant to the one specified will be chosen. The default slant is &lt;b&gt;roman&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f7b04c212a0fadf10c3124dc6c5e014862739b" translate="yes" xml:space="preserve">
          <source>The anchor value controls how to place the grid within the master when no row/column has any weight. See &lt;b&gt;&lt;a href=&quot;#M32&quot;&gt;THE GRID ALGORITHM&lt;/a&gt;&lt;/b&gt; below for further details. The default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca92b99392b2201548ac94076929186c2729bd5" translate="yes" xml:space="preserve">
          <source>The argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4624788df969d41bb7076420bbd44b887e70a5" translate="yes" xml:space="preserve">
          <source>The argument following &lt;b&gt;-count&lt;/b&gt; gives the name of a variable; if a match is found, the number of index positions between beginning and end of the matching range will be stored in the variable. If there are no embedded images or windows in the matching range (and there are no elided characters if &lt;b&gt;-elide&lt;/b&gt; is not given), this is equivalent to the number of characters matched. In either case, the range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b68b035fbade6a093e53cf45eb2a39e6425460d" translate="yes" xml:space="preserve">
          <source>The argument may be any non-negative numeric value. Returns a floating-point value that is the square root of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4be2265f9a11611e811b7992608ca2561b4893" translate="yes" xml:space="preserve">
          <source>The argument may be any numeric value, If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9009815416c17d63d6137af6f3d2700283799144" translate="yes" xml:space="preserve">
          <source>The argument may be any numeric value. The integer part of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d61b8b36e01219e1fd275a42844d956d215f5ac" translate="yes" xml:space="preserve">
          <source>The arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f458d319550466bb8b52a02de1acff27a3a0a1c" translate="yes" xml:space="preserve">
          <source>The arguments consist of the names of one or more slave windows followed by pairs of arguments that specify how to manage the slaves. See &lt;b&gt;&lt;a href=&quot;#M26&quot;&gt;THE PACKER ALGORITHM&lt;/a&gt;&lt;/b&gt; below for details on how the options are used by the packer. The following options are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cf67ba4f8486b27acaaece5df8428e86064975" translate="yes" xml:space="preserve">
          <source>The arguments consist of the names of one or more slave windows followed by pairs of arguments that specify how to manage the slaves. The characters &lt;b&gt;-&lt;/b&gt;, &lt;b&gt;x&lt;/b&gt; and &lt;b&gt;^&lt;/b&gt;, can be specified instead of a window name to alter the default location of a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9a7ac690d048c7f10fdcc9033d62d36e9283c2" translate="yes" xml:space="preserve">
          <source>The atom &amp;ldquo;&lt;b&gt;a&lt;/b&gt;&amp;rdquo; has no greediness preference, we explicitly give one for &amp;ldquo;&lt;b&gt;b&lt;/b&gt;&amp;rdquo;, and the remaining quantifiers are overridden to be non-greedy by the preceding non-greedy quantifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4fb3c7e6ea770624537a44f6a3fddfa858c049" translate="yes" xml:space="preserve">
          <source>The auto-loader must be made aware of this directory by appending the directory name to the &quot;auto_path&quot; variable. When this is in place, classes will be auto-loaded as needed when used in an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85e2216535d25c8910701161d8f9942b9f8de52" translate="yes" xml:space="preserve">
          <source>The auto-loader must be made aware of this directory by appending the directory name to the &quot;auto_path&quot; variable. When this is in place, extendedclasses will be auto-loaded as needed when used in an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df83128fba2c96d8efe1bc36b791bb2fc53bdff8" translate="yes" xml:space="preserve">
          <source>The auto-loader must be made aware of this directory by appending the directory name to the &quot;auto_path&quot; variable. When this is in place, widgets will be auto-loaded as needed when used in an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797cd7886da1b53523ad95d0ae03381e3639e704" translate="yes" xml:space="preserve">
          <source>The background color to be used for the spin buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332d41447e8617b63efcf7e01177d30048c6c9a5" translate="yes" xml:space="preserve">
          <source>The behavior of buttons can be changed by defining new bindings for individual widgets or by redefining the class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea1aba6706f81cb2f4369c05678b2fddb26ae82" translate="yes" xml:space="preserve">
          <source>The behavior of checkbuttons can be changed by defining new bindings for individual widgets or by redefining the class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f865fbbed41d80c38d4da65a10478b031e5d4cbf" translate="yes" xml:space="preserve">
          <source>The behavior of entries can be changed by defining new bindings for individual widgets or by redefining the class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92156f0e2e57561c5dd0cc80db50a376eebe2e89" translate="yes" xml:space="preserve">
          <source>The behavior of execution traces is currently undefined for a command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e5e302f44edb355d8be23a429ef424fc82e249" translate="yes" xml:space="preserve">
          <source>The behavior of listboxes can be changed by defining new bindings for individual widgets or by redefining the class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea9405b15c21bbbcfeab907fc6f6c20b587b0d5" translate="yes" xml:space="preserve">
          <source>The behavior of menubuttons can be changed by defining new bindings for individual widgets or by redefining the class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f2aaec6a0afc9246b6586ed7357815f380a1e1" translate="yes" xml:space="preserve">
          <source>The behavior of menus can be changed by defining new bindings for individual widgets or by redefining the class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c452d48ee22671bd2a7ef95c0b16b70a93faaa" translate="yes" xml:space="preserve">
          <source>The behavior of radiobuttons can be changed by defining new bindings for individual widgets or by redefining the class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c2c84b0fee7c7698c9e649ecc06450aa7c36cd" translate="yes" xml:space="preserve">
          <source>The behavior of scales can be changed by defining new bindings for individual widgets or by redefining the class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b72b359450ab27d333ec2aed4dd1f1c1959f65f" translate="yes" xml:space="preserve">
          <source>The behavior of spinboxes can be changed by defining new bindings for individual widgets or by redefining the class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8764db49e5ede79ddedd2d52586ddb4235c706" translate="yes" xml:space="preserve">
          <source>The behavior of texts can be changed by defining new bindings for individual widgets or by redefining the class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce1a7540a54b0e550db7fb69563e3da52215da3" translate="yes" xml:space="preserve">
          <source>The behavior of the &lt;b&gt;package&lt;/b&gt; command is determined by its first argument. The following forms are permitted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22d57ae0f432d8d9fd20346e8e51d039f9cd326" translate="yes" xml:space="preserve">
          <source>The behavior of the &lt;b&gt;scan&lt;/b&gt; command is the same as the behavior of the ANSI C &lt;b&gt;sscanf&lt;/b&gt; procedure except for the following differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f144c51d99fc7f0c3cad8e488fb3b6e7cb771e" translate="yes" xml:space="preserve">
          <source>The behavior of the format command is the same as the ANSI C &lt;b&gt;sprintf&lt;/b&gt; procedure except for the following differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="546600bd10ca244bf8b7f538e87ad59d1e101eb4" translate="yes" xml:space="preserve">
          <source>The behaviors of the bit-wise operator commands (all of which only operate on integral arguments) are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5225dc536453bd9edfb38fd4039cd8fee6de9ed1" translate="yes" xml:space="preserve">
          <source>The behaviors of the comparison operator commands (most of which operate preferentially on numeric arguments) are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d38c185d938ecdab838f45d83363ecaa343b7c" translate="yes" xml:space="preserve">
          <source>The behaviors of the list-oriented operator commands are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6af19ab8c706f0f626f047eb27d960263cd9c2" translate="yes" xml:space="preserve">
          <source>The behaviors of the mathematical operator commands are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b644fc6eb0cb29d10dbf19cb825897017a56e408" translate="yes" xml:space="preserve">
          <source>The binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4868751dd558ad12e44cf2806ccd9e4845ddff88" translate="yes" xml:space="preserve">
          <source>The block size used when posting query data to the URL. At most</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170302240663d93b066c137ebb76ae8d9f6a9876" translate="yes" xml:space="preserve">
          <source>The block size used when reading the URL. At most</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb24beb2fe3920a15678db0e8bb692cd1d090d02" translate="yes" xml:space="preserve">
          <source>The bottom or right arrow in the scrollbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de30842e7be49f74a869dd1de02a762988410997" translate="yes" xml:space="preserve">
          <source>The busy window has a configurable cursor. You can change the busy cursor using the &lt;b&gt;configure&lt;/b&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a776e21dfba5d57d7ab5493277b71450ed1b5e" translate="yes" xml:space="preserve">
          <source>The called procedure must return the formatted message which will finally be returned by msgcat::mc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f23e9caf10ecc33083fd890fde3845322a1688" translate="yes" xml:space="preserve">
          <source>The calling interpreter is deleted and its computation is stopped, but the Tcl process in which this interpreter exists is not terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea695bab591fd4463011f27044c4c8bf886854b" translate="yes" xml:space="preserve">
          <source>The calling package clears all its state within the &lt;b&gt;msgcat&lt;/b&gt; package including all settings and translations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9604c5cc692a609558b8958463f3c3d1c210c50f" translate="yes" xml:space="preserve">
          <source>The case-insensitive font family name. Tk guarantees to support the font families named &lt;b&gt;Courier&lt;/b&gt; (a monospaced &amp;ldquo;typewriter&amp;rdquo; font), &lt;b&gt;Times&lt;/b&gt; (a serifed &amp;ldquo;newspaper&amp;rdquo; font), and &lt;b&gt;Helvetica&lt;/b&gt; (a sans-serif &amp;ldquo;European&amp;rdquo; font). The most closely matching native font family will automatically be substituted when one of the above font families is used. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86d9ff9d9fde3ba786f3d21424f503d9f1f8bd9" translate="yes" xml:space="preserve">
          <source>The central command of &lt;b&gt;tcltest&lt;/b&gt; is &lt;b&gt;test&lt;/b&gt; that defines and runs a test. Testing with &lt;b&gt;test&lt;/b&gt; involves evaluation of a Tcl script and comparing the result to an expected result, as configured and controlled by a number of options. Several other commands provided by &lt;b&gt;tcltest&lt;/b&gt; govern the configuration of &lt;b&gt;test&lt;/b&gt; and the collection of many &lt;b&gt;test&lt;/b&gt; commands into test suites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2047f9cc61591d87e30d4f36fcf4ac9bf51075" translate="yes" xml:space="preserve">
          <source>The chain command searches through the class hierarchy for a slightly more generic (base class) implementation of a method or proc, and invokes it with the specified arguments. It starts at the current class context and searches through base classes in the order that they are reported by the &quot;info heritage&quot; command. If another implementation is not found, this command does nothing and returns the null string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4489385adce159582a3f6a7a6096a7b4f202623b" translate="yes" xml:space="preserve">
          <source>The chain command searches through the extendedclass hierarchy for a slightly more generic (base extendedclass) implementation of a method or proc, and invokes it with the specified arguments. It starts at the current extendedclass context and searches through base extendedclasses in the order that they are reported by the &quot;info heritage&quot; command. If another implementation is not found, this command does nothing and returns the null string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a4cc28c8e046c3e3b4e24f7af4f3fe8b2de1b0" translate="yes" xml:space="preserve">
          <source>The chain command searches through the widget hierarchy for a slightly more generic (base widget) implementation of a method or proc, and invokes it with the specified arguments. It starts at the current widget context and searches through base widgets in the order that they are reported by the &quot;info heritage&quot; command. If another implementation is not found, this command does nothing and returns the null string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0674fcb87ffacafac718be77a8ee9ff5aafa7d" translate="yes" xml:space="preserve">
          <source>The char specified at the integral index that is the difference of integer values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d297803915cfc3cfc350dc182eb93a3da9a6538a" translate="yes" xml:space="preserve">
          <source>The char specified at the integral index that is the sum of integer values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894d870a22b57124b57e0c2a24f800ea2ab72caf" translate="yes" xml:space="preserve">
          <source>The character that should be used to &lt;b&gt;&lt;a href=&quot;split.htm&quot;&gt;split&lt;/a&gt;&lt;/b&gt; PATH-like environment variables into their corresponding list of directory names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce2dd17f0ea5bc760a1d4e8631851e0e8944af0" translate="yes" xml:space="preserve">
          <source>The character-entry escapes are always taken as ordinary characters. For example, &lt;b&gt;\135&lt;/b&gt; is &lt;b&gt;]&lt;/b&gt; in Unicode, but &lt;b&gt;\135&lt;/b&gt; does not terminate a bracket expression. Beware, however, that some applications (e.g., C compilers and the Tcl interpreter if the regular expression is not quoted with braces) interpret such sequences themselves before the regular-expression package gets to see them, which may require doubling (quadrupling, etc.) the &amp;ldquo;&lt;b&gt;\&lt;/b&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859f0f396e9c7682c7ca88a3a1888b7ad377a1e0" translate="yes" xml:space="preserve">
          <source>The class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c499b6265b8882a66a4b6b1e8bc9cfe4e2e86778" translate="yes" xml:space="preserve">
          <source>The class of the application, which is used for purposes such as specifying options with a &lt;b&gt;RESOURCE_MANAGER&lt;/b&gt; property or .Xdefaults file, is the same as its name except that the first letter is capitalized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd7cfebdbbccd96553fc510545d04f011bb7d4f" translate="yes" xml:space="preserve">
          <source>The code fragment associated with button</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f27753057ccb7bf993da7994f850a9ccff04384" translate="yes" xml:space="preserve">
          <source>The column name. This is a read-only option. For example, [</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a997b1e8e0c6711c78fe0eaf780e7adb764a59d" translate="yes" xml:space="preserve">
          <source>The combobox widget also supports the following &lt;b&gt;&lt;a href=&quot;ttk_entry.htm&quot;&gt;ttk::entry&lt;/a&gt;&lt;/b&gt; widget subcommands (see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f22c1cab83bd3db55f5eb99e481e0e615c3b6e" translate="yes" xml:space="preserve">
          <source>The combobox widget also supports the following generic &lt;b&gt;&lt;a href=&quot;ttk_widget.htm&quot;&gt;ttk::widget&lt;/a&gt;&lt;/b&gt; widget subcommands (see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24656fa6ae2f415c118d2fab534e6cb580c0b896" translate="yes" xml:space="preserve">
          <source>The combobox widget generates a &lt;b&gt;&amp;lt;&amp;lt;ComboboxSelected&amp;gt;&amp;gt;&lt;/b&gt; virtual event when the user selects an element from the list of values. If the selection action unposts the listbox, this event is delivered after the listbox is unposted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062e4ea98a9662fe6dca5fb34a40a037aa606eb5" translate="yes" xml:space="preserve">
          <source>The command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8616600ea70a56deea52e301d6ecc8751eff1b" translate="yes" xml:space="preserve">
          <source>The command &lt;b&gt;apply&lt;/b&gt; applies the function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9296a23a45eae8366b9dcbb4c4891fabe47aa98e" translate="yes" xml:space="preserve">
          <source>The command enforces the restriction that no path may be an ancestor directory of any other path on the list. If any of the new paths violates this restriction an error will be raised, before any of the paths have been added. In other words, if only one path argument violates the restriction then none will be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf6f313a2559449b36b8ad3b9ee7f36b11776ac" translate="yes" xml:space="preserve">
          <source>The command flushes all buffered output for the channel before the command returns, even if the channel is in non-blocking mode. It also discards any buffered and unread input. This command returns an empty string. An error occurs if this command is applied to channels whose underlying file or device does not support seeking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f314189e220457e9d471267affeb97dfb7bd3e5" translate="yes" xml:space="preserve">
          <source>The command has been exposed to allow a build system to define additional root paths beyond those described by this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fc3bafcc1ee61b92a03a6d86663dced8d9efc9" translate="yes" xml:space="preserve">
          <source>The command is a callback that is made during &lt;b&gt;::http::geturl&lt;/b&gt; to determine if a proxy is required for a given host. One argument, a host name, is added to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49323dce61ca9380aab235e78e0d1f7884c995d6" translate="yes" xml:space="preserve">
          <source>The command operates by scanning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310ad8705e28acebef47eec39b56b9cbf0cde93c" translate="yes" xml:space="preserve">
          <source>The command prefix is executed in the global namespace, at the top of call stack, following the appending of arguments as described in the &lt;b&gt;&lt;a href=&quot;refchan.htm&quot;&gt;refchan&lt;/a&gt;&lt;/b&gt; manual page. Command resolution happens at the time of the call. Renaming the command, or destroying it means that the next call of a handler method may fail, causing the channel command invoking the handler to fail as well. Depending on the subcommand being invoked, the error message may not be able to explain the reason for that failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1eb7e201cca67d47edbc1a0cfcc95416458b185" translate="yes" xml:space="preserve">
          <source>The command returns a positive or negative integer corresponding to the number of items counted between the two indices. One such integer is returned for each counting option given, so a list is returned if more than one option was supplied. For example &amp;ldquo;.text count -xpixels -ypixels 1.3 4.5&amp;rdquo; is perfectly valid and will return a list of two elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e0fa74c55fd7ec17132367b091f47a4df6023e" translate="yes" xml:space="preserve">
          <source>The command returns an empty string, and may generate an error if an error occurs while flushing output. If a command in a command pipeline created with &lt;b&gt;&lt;a href=&quot;open.htm&quot;&gt;open&lt;/a&gt;&lt;/b&gt; returns an error, &lt;b&gt;chan close&lt;/b&gt; generates an error (similar to the &lt;b&gt;&lt;a href=&quot;exec.htm&quot;&gt;exec&lt;/a&gt;&lt;/b&gt; command.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5db0a1538aa256282d4f876c3da2f97e8e08c9" translate="yes" xml:space="preserve">
          <source>The command returns an empty string, and may generate an error if an error occurs while flushing output. If a command in a command pipeline created with &lt;b&gt;&lt;a href=&quot;open.htm&quot;&gt;open&lt;/a&gt;&lt;/b&gt; returns an error, &lt;b&gt;close&lt;/b&gt; generates an error (similar to the &lt;b&gt;&lt;a href=&quot;exec.htm&quot;&gt;exec&lt;/a&gt;&lt;/b&gt; command.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46be2dbceecd677a4f3c1155f78ccdb4530a262" translate="yes" xml:space="preserve">
          <source>The command returns the ID of the posted job . This ID is used for subsequent &lt;b&gt;tpool::wait&lt;/b&gt;, &lt;b&gt;tpool::get&lt;/b&gt; and &lt;b&gt;tpool::cancel&lt;/b&gt; commands to wait for and retrieve result of the posted script, or cancel the posted job respectively . If the optional ?-detached? argument is specified, the command will post a detached job . A detached job can not be cancelled or waited upon and is not identified by the job ID .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f0f17e5b2d3aae26de40e608a6ee981f8f03a9" translate="yes" xml:space="preserve">
          <source>The command returns the list of completed job IDs . If the optional variable ?varname? is given, it will be set to the list of jobs in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a4be1ce42a34a10a317c295b1847d4619dc3f7" translate="yes" xml:space="preserve">
          <source>The command sets the maximum size of the Tcl call stack only. It cannot by itself prevent stack overflows on the C stack being used by the application. If your machine has a limit on the size of the C stack, you may get stack overflows before reaching the limit set by the command. If this happens, see if there is a mechanism in your system for increasing the maximum size of the C stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a1ccd8259a00f2214fa30506da9ff594327f54" translate="yes" xml:space="preserve">
          <source>The command supports following subcommands and options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bd03b6354048ad164e284bd69d14967e4be9e6" translate="yes" xml:space="preserve">
          <source>The commands available in a safe interpreter, in addition to the safe set as defined in &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp&lt;/a&gt;&lt;/b&gt; manual page, are mediated aliases for &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;load.htm&quot;&gt;load&lt;/a&gt;&lt;/b&gt;, &lt;b&gt;&lt;a href=&quot;exit.htm&quot;&gt;exit&lt;/a&gt;&lt;/b&gt;, and safe subsets of &lt;b&gt;&lt;a href=&quot;file.htm&quot;&gt;file&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;encoding.htm&quot;&gt;encoding&lt;/a&gt;&lt;/b&gt;. The safe interpreter can also auto-load code and it can request that packages be loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862722843e52f34cafd7f2a188778481b5c99a05" translate="yes" xml:space="preserve">
          <source>The commands generated by scrollbars also have a different form when the old syntax is being used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b99fb897b020ec14d18033be6876cad3ea73942" translate="yes" xml:space="preserve">
          <source>The commands in the &lt;b&gt;::tcl::mathop&lt;/b&gt; namespace implement the same set of operations as supported by the &lt;b&gt;&lt;a href=&quot;expr.htm&quot;&gt;expr&lt;/a&gt;&lt;/b&gt; command. All are exported from the namespace, but are not imported into any other namespace by default. Note that renaming, reimplementing or deleting any of the commands in the namespace does</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9f377ff87a3991e02ef3fd023a9474683d7097" translate="yes" xml:space="preserve">
          <source>The commands which the &lt;b&gt;tclsh&lt;/b&gt; interpreter implements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df149bda9d399010150df42172e3a7d756ce95f4" translate="yes" xml:space="preserve">
          <source>The comment field from the header, if present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d6f96d27c5056142ee5d8a6d8087a14e7c1583" translate="yes" xml:space="preserve">
          <source>The compression operation from above can also be done with streams, which is especially helpful when you want to accumulate the data by stages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34d159e8065ecdf6f72c8c1f9b2f0225c36e20a" translate="yes" xml:space="preserve">
          <source>The configuration options accepted when the connection is created and on the connection's &lt;b&gt;configure&lt;/b&gt; object command include the following, and may include others specific to a database driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644715579fd488edd948fc28ba1620e4b5b28ba1" translate="yes" xml:space="preserve">
          <source>The connection string will include at least a &lt;b&gt;DRIVER&lt;/b&gt; or &lt;b&gt;DSN&lt;/b&gt; keyword, and may include others that are defined by a particular ODBC driver. (If the local ODBC system supports a graphical user interface, the &lt;b&gt;-parent&lt;/b&gt; option (see below) may allow calling &lt;b&gt;tdbc::odbc::connection create&lt;/b&gt; with an empty connection string.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04154efeb3dc683214bdd6a4e108bef43546df4f" translate="yes" xml:space="preserve">
          <source>The console window is a replacement for a real console to allow input and output on the standard I/O channels on platforms that do not have a real console. It is implemented as a separate interpreter with the Tk toolkit loaded, and control over this interpreter is given through the &lt;b&gt;console&lt;/b&gt; command. The behaviour of the console window is defined mainly through the contents of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90be53b405789fd11c71b0ef241843505d9a3569" translate="yes" xml:space="preserve">
          <source>The constructor of the &lt;b&gt;oo::class&lt;/b&gt; class takes an optional argument which, if present, is sent to the &lt;b&gt;&lt;a href=&quot;define.htm&quot;&gt;oo::define&lt;/a&gt;&lt;/b&gt; command (along with the name of the newly-created class) to allow the class to be conveniently configured at creation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1bcd22db8d42595344e419c5718473a7affea6" translate="yes" xml:space="preserve">
          <source>The contents of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa8e95b3b8b016667a7098bcd5923e50ab16694" translate="yes" xml:space="preserve">
          <source>The contents of the URL. This will be empty if the &lt;b&gt;-channel&lt;/b&gt; option has been specified. This value is returned by the &lt;b&gt;::http::data&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c9c4b387aceee776084dbc757742a455351cdd" translate="yes" xml:space="preserve">
          <source>The continue and break exceptions allow command substitutions to prevent substitution of the rest of the command substitution and the rest of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b6978742db3e2867da32d96500f7160bfccc84" translate="yes" xml:space="preserve">
          <source>The coroutine can also be deleted by destroying the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38992d34608abe8749270245c86a60414778bfa" translate="yes" xml:space="preserve">
          <source>The coroutine may also suspend its execution by use of the &lt;b&gt;yieldto&lt;/b&gt; command, which instead of returning, cedes execution to some command called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b323d0260d67b681398ccadd25bebd707369598" translate="yes" xml:space="preserve">
          <source>The current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7963d00818a3a3f0e96789ad1fc8b05c2d10730" translate="yes" xml:space="preserve">
          <source>The current implementation of thread shared variables allows for easy and convenient access to data shared between different threads . Internally, the data is stored in Tcl objects and all package commands operate on internal data representation, thus minimizing shimmering and improving performance . Special care has been taken to assure that all object data is properly locked and deep-copied when moving objects between threads .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc525b44932343a7effb16fc028ba28e447c0595" translate="yes" xml:space="preserve">
          <source>The current number of bytes fetched from the URL. This value is returned by the &lt;b&gt;::http::size&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb94a35b1a14534f18c6fa1a9b004ac6d49b56b" translate="yes" xml:space="preserve">
          <source>The current value of entry prior to editing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944d63657a1b6ebe1226954442d1ea7b46bc431d" translate="yes" xml:space="preserve">
          <source>The current value of spinbox before edition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c63dc1f48e4b661cd729c3234edba62807aef3" translate="yes" xml:space="preserve">
          <source>The current value of the &lt;b&gt;-validate&lt;/b&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc8bac2101c1cf88b1533f33669b06ec35fe6e8" translate="yes" xml:space="preserve">
          <source>The current value of the progress bar. In</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801600083db8ebc7457b9761841314e27739ee34" translate="yes" xml:space="preserve">
          <source>The cursor to be used when over the spin buttons. If this is empty (the default), a default cursor will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97285ad021b9a0238ede67869c70bbf665a3e23d" translate="yes" xml:space="preserve">
          <source>The data is a byte string of length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7708822b756e089ea30207401a606a2eb4ad8b4" translate="yes" xml:space="preserve">
          <source>The data is interpreted as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61856d21816bbf5b8e8824801aa843e16ad0d4d6" translate="yes" xml:space="preserve">
          <source>The data is turned into</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9397fdb69f834dd9a967ea3b4ad5f6e7436a5e" translate="yes" xml:space="preserve">
          <source>The data is turned into a string of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad233ff985c46f5445039540216ffa350114251" translate="yes" xml:space="preserve">
          <source>The date is determined according to the fields that are present in the preprocessed format string. In order of preference:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62c2884b3a2c982a7cdffbc61db2ad9e1810f3b" translate="yes" xml:space="preserve">
          <source>The default Apple Event handler for kAEShowPreferences, &amp;ldquo;pref&amp;rdquo;. The application menu &amp;ldquo;Preferences&amp;rdquo; menu item is only enabled when this proc is defined. Typically this command is used to wrap a specific own preferences command, which pops up a preferences window. Something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac779afb6e5e40797857bec4beb7adc284b9d6a" translate="yes" xml:space="preserve">
          <source>The default bindings support four different ways of using menus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a4287a3207cf646064516e2cb236cc47c60194" translate="yes" xml:space="preserve">
          <source>The default encoding for newly opened channels is the same platform- and locale-dependent system encoding used for interfacing with the operating system, as returned by &lt;b&gt;&lt;a href=&quot;encoding.htm&quot;&gt;encoding system&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cfe759456dc4f2423c827d7515c1828bd3b9aa" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;b&gt;unknown&lt;/b&gt; behaves as follows. It first calls the &lt;b&gt;&lt;a href=&quot;library.htm&quot;&gt;auto_load&lt;/a&gt;&lt;/b&gt; library procedure to load the command. If this succeeds, then it executes the original command with its original arguments. If the auto-load fails then &lt;b&gt;unknown&lt;/b&gt; calls &lt;b&gt;&lt;a href=&quot;library.htm&quot;&gt;auto_execok&lt;/a&gt;&lt;/b&gt; to see if there is an executable file by the name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbf1bbf652a8422bfdbcf8971b902a284e61066" translate="yes" xml:space="preserve">
          <source>The default is &lt;b&gt;tree headings&lt;/b&gt;, i.e., show all elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd55e6631d0f0860892d216d3b620de5954cdf5" translate="yes" xml:space="preserve">
          <source>The default list of paths on the module path is computed by a &lt;b&gt;&lt;a href=&quot;../usercmd/tclsh.htm&quot;&gt;tclsh&lt;/a&gt;&lt;/b&gt; as follows, where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e3a8d9cf21ae285f8173fd762e29259f6f4832" translate="yes" xml:space="preserve">
          <source>The default script creates a console window (implemented using a text widget) that has the following behaviour:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa35f062d19a0aff67d75e5a7bb872767922170" translate="yes" xml:space="preserve">
          <source>The default value of 0 is special, meaning that Tcl should convert numbers using as few digits as possible while still distinguishing any floating point number from its nearest neighbours. It differs from using an arbitrarily high value for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12145133a318d5f64af63e23422172e854ce4bfe" translate="yes" xml:space="preserve">
          <source>The default; display the image if present, otherwise the text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b455e40444a872e79e0ff958ce1ba9725ad12bdd" translate="yes" xml:space="preserve">
          <source>The definitions for &lt;b&gt;delegate proc&lt;/b&gt; ... are the same as for method, the only difference being, that this is for procs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123d9e8cf1b37a2de2730b8414e94d867d991ba6" translate="yes" xml:space="preserve">
          <source>The deletion and insertion are arranged so that no unnecessary scrolling of the window or movement of insertion cursor occurs. In addition the undo/redo stack are correctly modified, if undo operations are active in the text widget. The command returns an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75922607378f96c9c328cc734014a97d943b5c25" translate="yes" xml:space="preserve">
          <source>The desired size of the font. If the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6986c05624c487fb5505caf936f97cd6cc16675c" translate="yes" xml:space="preserve">
          <source>The desired width of the widget border. Defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c7705bfaadf1bb00eb746e0e676f65d1270ef3" translate="yes" xml:space="preserve">
          <source>The digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f5d1cccb80359da45e0239cec9d8872bacfffa" translate="yes" xml:space="preserve">
          <source>The directories listed in the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e354aacb0936d5aec153be2070473cede8077fe" translate="yes" xml:space="preserve">
          <source>The directory from which the Tcl executable was loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db45cbd59284f4198244d6efb359d890f2b6130" translate="yes" xml:space="preserve">
          <source>The directory tree for storing Tcl modules is separate from other parts of the filesystem and independent of &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;auto_path&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d147715f5e5786fee9ccae2ebbd8db43509f2933" translate="yes" xml:space="preserve">
          <source>The display line with the insert cursor is redrawn each time the cursor blinks, which causes a steady stream of graphics traffic. Set the &lt;b&gt;-insertofftime&lt;/b&gt; attribute to 0 avoid this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bc1acdb30b82b3c508da6ba594b475389b7337" translate="yes" xml:space="preserve">
          <source>The dithering algorithm used in displaying photo images propagates quantization errors from one pixel to its neighbors. If the image data for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63b2b23eb9eb3bf1aa160143df784a239232320" translate="yes" xml:space="preserve">
          <source>The double angle brackets are used to specify that a virtual event is being bound. If the user types Control-y or presses button 2, or if a &lt;b&gt;&amp;lt;&amp;lt;Paste&amp;gt;&amp;gt;&lt;/b&gt; virtual event is synthesized with &lt;b&gt;event generate&lt;/b&gt;, then the &lt;b&gt;&amp;lt;&amp;lt;Paste&amp;gt;&amp;gt;&lt;/b&gt; binding will be invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff1d7e60665391faf43f8c28ade536bc599b283" translate="yes" xml:space="preserve">
          <source>The effect of locale on scanning and formatting is discussed in the descriptions of the individual format groups under &lt;b&gt;&lt;a href=&quot;#M26&quot;&gt;FORMAT GROUPS&lt;/a&gt;&lt;/b&gt;. The effect of locale on clock arithmetic is discussed under &lt;b&gt;&lt;a href=&quot;#M22&quot;&gt;CLOCK ARITHMETIC&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef16d7f3413efb34f192c2b6f8f067b37753279" translate="yes" xml:space="preserve">
          <source>The element at position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ab014f7442c547574db7ed9687c30ef389421b" translate="yes" xml:space="preserve">
          <source>The embedded image's position on the screen will be updated as the text is modified or scrolled. Each embedded image occupies one unit's worth of index space in the text widget, and it may be referred to either by its position in the widget's index space, or the name it is assigned when the image is inserted into the text widget with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043580003e1b1a234c5bc7acc1002e35fe687abe" translate="yes" xml:space="preserve">
          <source>The embedded window's position on the screen will be updated as the text is modified or scrolled, and it will be mapped and unmapped as it moves into and out of the visible area of the text widget. Each embedded window occupies one unit's worth of index space in the text widget, and it may be referred to either by the name of its embedded window or by its position in the widget's index space. If the range of text containing the embedded window is deleted then the window is destroyed. Similarly if the text widget as a whole is deleted, then the window is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d27d4aca485cfa3b2756f6da8f592f0779c677" translate="yes" xml:space="preserve">
          <source>The end of a line in the underlying file or device is represented by a carriage return character followed by a linefeed character. As the input translation mode, &lt;b&gt;crlf&lt;/b&gt; mode converts carriage-return-linefeed sequences to newline characters. As the output translation mode, &lt;b&gt;crlf&lt;/b&gt; mode translates newline characters to carriage-return-linefeed sequences. This mode is typically used on Windows platforms and for network connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5122608d2ce04f4826cc53128637d93bc24afe" translate="yes" xml:space="preserve">
          <source>The end of a line in the underlying file or device is represented by a single carriage return character. As the input translation mode, &lt;b&gt;cr&lt;/b&gt; mode converts carriage returns to newline characters. As the output translation mode, &lt;b&gt;cr&lt;/b&gt; mode translates newline characters to carriage returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b35eb7f24edc5550fe9a6d14280f53ac241bad" translate="yes" xml:space="preserve">
          <source>The end of a line in the underlying file or device is represented by a single newline (linefeed) character. In this mode no translations occur during either input or output. This mode is typically used on UNIX platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d9f64a63a04f59b3077212eea619cdae322adb" translate="yes" xml:space="preserve">
          <source>The end of a script file may be marked either by the physical end of the medium, or by the character, &amp;ldquo;\032&amp;rdquo; (&amp;ldquo;\u001a&amp;rdquo;, control-Z). If this character is present in the file, the &lt;b&gt;wish&lt;/b&gt; application will read text up to but not including the character. An application that requires this character in the file may encode it as &amp;ldquo;\032&amp;rdquo;, &amp;ldquo;\x1a&amp;rdquo;, or &amp;ldquo;\u001a&amp;rdquo;; or may generate it by use of commands such as &lt;b&gt;&lt;a href=&quot;../tclcmd/format.htm&quot;&gt;format&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;../tclcmd/binary.htm&quot;&gt;binary&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86fa664b3880de6ad3b72af7462141db11a5d72" translate="yes" xml:space="preserve">
          <source>The end-of-file character for files is &amp;ldquo;\32&amp;rdquo; (^Z) for all platforms. The source command will read files up to this character. This restriction does not exist for the &lt;b&gt;&lt;a href=&quot;read.htm&quot;&gt;read&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;gets.htm&quot;&gt;gets&lt;/a&gt;&lt;/b&gt; commands, allowing for files containing code and data segments (scripted documents). If you require a &amp;ldquo;^Z&amp;rdquo; in code for string comparison, you can use &amp;ldquo;\032&amp;rdquo; or &amp;ldquo;\u001a&amp;rdquo;, which will be safely substituted by the Tcl interpreter into &amp;ldquo;^Z&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fb2232f9770222f776f716cde52c4caa772516" translate="yes" xml:space="preserve">
          <source>The ends of the selection can be adjusted by dragging with mouse button 1 while the Shift key is down. If the button is double-clicked before dragging then the selection will be adjusted in units of whole words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e316d2e67e4a1aa9ac8b45f65094bed5437d77" translate="yes" xml:space="preserve">
          <source>The ends of the selection can be adjusted by dragging with mouse button 1 while the Shift key is down; this will adjust the end of the selection that was nearest to the mouse cursor when button 1 was pressed. If the button is double-clicked before dragging then the selection will be adjusted in units of whole words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b11232dd5ea85226ae774ac0a184459b084ec5" translate="yes" xml:space="preserve">
          <source>The ends of the selection can be adjusted by dragging with mouse button 1 while the Shift key is down; this will adjust the end of the selection that was nearest to the mouse cursor when button 1 was pressed. If the button is double-clicked before dragging then the selection will be adjusted in units of whole words; if it is triple-clicked then the selection will be adjusted in units of whole lines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e859f606eae3f3876bb7b3d8034bc5ce7ed10d8c" translate="yes" xml:space="preserve">
          <source>The ensemble facility manages all of the part names and keeps track of unique abbreviations. Normally, you can abbreviate &lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info complete&lt;/a&gt;&lt;/b&gt; to &lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info comp&lt;/a&gt;&lt;/b&gt;. But if an extension adds the part &lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info complexity&lt;/a&gt;&lt;/b&gt;, the minimum abbreviation for &lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info complete&lt;/a&gt;&lt;/b&gt; becomes &lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info complet&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b67368094ea4e6fafb6025928555a2b86180da" translate="yes" xml:space="preserve">
          <source>The ensemble facility not only automates the construction of composite commands, but it automates the error handling as well. If you invoke an ensemble command without specifying a part name, you get an automatically generated error message that summarizes the usage information. For example, when the &lt;b&gt;&lt;a href=&quot;../tclcmd/info.htm&quot;&gt;info&lt;/a&gt;&lt;/b&gt; command is invoked without any arguments, it produces the following error message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66143cd9f78abeace8cc91a90c37b92a86dcb4fa" translate="yes" xml:space="preserve">
          <source>The entire event pattern is surrounded by angle brackets. Inside the angle brackets are zero or more modifiers, an event type, and an extra piece of information (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1ed9b21ba7e5cf0df88f43427ed81ca0b5221d" translate="yes" xml:space="preserve">
          <source>The entire virtual event pattern is surrounded by double angle brackets. Inside the angle brackets is the user-defined name of the virtual event. Modifiers, such as &lt;b&gt;Shift&lt;/b&gt; or &lt;b&gt;Control&lt;/b&gt;, may not be combined with a virtual event to modify it. Bindings on a virtual event may be created before the virtual event is defined, and if the definition of a virtual event changes dynamically, all windows bound to that virtual event will respond immediately to the new definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9618331fa0066be3ee8c2d20d290b79149f6d967" translate="yes" xml:space="preserve">
          <source>The entry is revalidated when the entry loses focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91aeda1c00fe4031b8611547c77b4b2e34a30b64" translate="yes" xml:space="preserve">
          <source>The entry is revalidated when the entry receives focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42be21f279ba840c97de4a903433288a47142f8b" translate="yes" xml:space="preserve">
          <source>The entry is revalidated when the entry receives or loses focus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786770868828397ad2b36a4e1c7e7be46a60933d" translate="yes" xml:space="preserve">
          <source>The entry widget also supports the following generic &lt;b&gt;&lt;a href=&quot;ttk_widget.htm&quot;&gt;ttk::widget&lt;/a&gt;&lt;/b&gt; widget subcommands (see</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4195742446bc06f52cae163fb02a4168df66961" translate="yes" xml:space="preserve">
          <source>The entry widget sets the &lt;b&gt;invalid&lt;/b&gt; state if revalidation fails, and clears it whenever validation succeeds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb929dd7a4d835b8b08fc388986761c8407a1f19" translate="yes" xml:space="preserve">
          <source>The entry widget's default bindings enable the following behavior. In the descriptions below, &amp;ldquo;word&amp;rdquo; refers to a contiguous group of letters, digits, or &amp;ldquo;_&amp;rdquo; characters, or any single character other than these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0b6a07afa7fe6e728f4133c094dab05428bbc7" translate="yes" xml:space="preserve">
          <source>The entry will be prevalidated prior to each edit (specifically, whenever the &lt;b&gt;insert&lt;/b&gt; or &lt;b&gt;delete&lt;/b&gt; widget commands are called). If prevalidation fails, the edit is rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aabfb41a9429a4c02d0069712f978f095b742ea" translate="yes" xml:space="preserve">
          <source>The error message will also be stored in the &lt;b&gt;&lt;a href=&quot;error.htm&quot;&gt;error&lt;/a&gt;&lt;/b&gt; status array element, accessible via &lt;b&gt;::http::error&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60af8c435fa4a0367940a0d0bb879c98e6c233e" translate="yes" xml:space="preserve">
          <source>The error, if any, that occurred while writing the post query data to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016f94cf34d12d98357c8c1c17801c1f8782900d" translate="yes" xml:space="preserve">
          <source>The event blocking feature is implemented by creating and mapping a transparent window that completely covers the widget. When the busy window is mapped, it invisibly shields the widget and its hierarchy from all events that may be sent. Like Tk widgets, busy windows have widget names in the Tk window hierarchy. This means that you can use the &lt;b&gt;&lt;a href=&quot;bind.htm&quot;&gt;bind&lt;/a&gt;&lt;/b&gt; command, to handle events in the busy window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ef3c9b06dad70e56b56d5ca3577be6dd74038d" translate="yes" xml:space="preserve">
          <source>The events &lt;b&gt;Gravity&lt;/b&gt; and &lt;b&gt;Reparent&lt;/b&gt; are not normally delivered to Tk applications. They are included for completeness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c440b243b6be1439148e9605ef8152e5ba7a023" translate="yes" xml:space="preserve">
          <source>The executor will search for &lt;b&gt;tcl::mathfunc::sin&lt;/b&gt; using the usual rules for resolving functions in namespaces. Either &lt;b&gt;::tcl::mathfunc::sin&lt;/b&gt; or &lt;b&gt;[namespace current]::tcl::mathfunc::sin&lt;/b&gt; will satisfy the request, and others may as well (depending on the current &lt;b&gt;&lt;a href=&quot;namespace.htm&quot;&gt;namespace path&lt;/a&gt;&lt;/b&gt; setting).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c19660710765f9c342cb662f0441132cc044cc" translate="yes" xml:space="preserve">
          <source>The extendedclass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab5d7481e6d95a55e5f78c4459d5fd32f2e6955" translate="yes" xml:space="preserve">
          <source>The fact that &lt;b&gt;[incr Tcl]&lt;/b&gt; objects look like Tk widgets is no accident. &lt;b&gt;[incr Tcl]&lt;/b&gt; was designed this way, to blend naturally into a Tcl/Tk application. But &lt;b&gt;[incr Tcl]&lt;/b&gt; extends the Tk paradigm from being merely object-based to being fully object-oriented. An object-oriented system supports inheritance, allowing classes to share common behaviors by inheriting them from an ancestor or base class. Having a base class as a common abstraction allows a programmer to treat related classes in a similar manner. For example, a toaster and a blender perform different (specialized) functions, but both share the abstraction of being appliances. By abstracting common behaviors into a base class, code can be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbeb7e8e0c9f6ee65b9ff650ef1ad27d83af90b" translate="yes" xml:space="preserve">
          <source>The fact that adding and subtracting hours is defined in terms of absolute time means that it will add fixed amounts of time in time zones that observe summer time (Daylight Saving Time). For example, the following code sets the value of &lt;b&gt;x&lt;/b&gt; to &lt;b&gt;04:00:00&lt;/b&gt; because the clock has changed in the interval in question.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49083e227db6089a1634d750a14b3ddee9de5683" translate="yes" xml:space="preserve">
          <source>The fifth part of a conversion specifier is a size modifier, which must be &lt;b&gt;ll&lt;/b&gt;, &lt;b&gt;h&lt;/b&gt;, or &lt;b&gt;l&lt;/b&gt;. If it is &lt;b&gt;ll&lt;/b&gt; it specifies that an integer value is taken without truncation for conversion to a formatted substring. If it is &lt;b&gt;h&lt;/b&gt; it specifies that an integer value is truncated to a 16-bit range before converting. This option is rarely useful. If it is &lt;b&gt;l&lt;/b&gt; it specifies that the integer value is truncated to the same range as that produced by the &lt;b&gt;&lt;a href=&quot;mathfunc.htm&quot;&gt;wide()&lt;/a&gt;&lt;/b&gt; function of the &lt;b&gt;&lt;a href=&quot;expr.htm&quot;&gt;expr&lt;/a&gt;&lt;/b&gt; command (at least a 64-bit range). If neither &lt;b&gt;h&lt;/b&gt; nor &lt;b&gt;l&lt;/b&gt; are present, the integer value is truncated to the same range as that produced by the &lt;b&gt;&lt;a href=&quot;mathfunc.htm&quot;&gt;int()&lt;/a&gt;&lt;/b&gt; function of the &lt;b&gt;&lt;a href=&quot;expr.htm&quot;&gt;expr&lt;/a&gt;&lt;/b&gt; command (at least a 32-bit range, but determined by the value of the &lt;b&gt;wordSize&lt;/b&gt; element of the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_platform&lt;/a&gt;&lt;/b&gt; array).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2113acabf5cc26a33a0ae885d242caa395b30813" translate="yes" xml:space="preserve">
          <source>The file contains a series of calls to &lt;b&gt;mcflset&lt;/b&gt; and &lt;b&gt;mcflmset&lt;/b&gt;, setting the necessary translation strings for the language, likely enclosed in a &lt;b&gt;&lt;a href=&quot;namespace.htm&quot;&gt;namespace eval&lt;/a&gt;&lt;/b&gt; so that all source strings are tied to the namespace of the package. For example, a short &lt;b&gt;es.msg&lt;/b&gt; might contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6875f2d20dd914fff5504310ade28d76faaea00" translate="yes" xml:space="preserve">
          <source>The file is read through a channel which is in &quot;utf-8&quot; encoding, invalid byte sequences are automatically converted to valid ones. This means that encodings like ISO 8859-1 or cp1252 with high probability will work as well, but this cannot be guaranteed. This cannot be changed, setting the [encoding system] has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2adc8ce74d308883b6fe5ec658e8fcf6d1156a42" translate="yes" xml:space="preserve">
          <source>The file named by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82ff891cbf0409a45ba002e9a6890060acf8880" translate="yes" xml:space="preserve">
          <source>The filename field from the header, if present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4af04ee790fd74c8274c3a646273f4b9720770c" translate="yes" xml:space="preserve">
          <source>The final form of annotation in text widgets is an embedded image. Each embedded image annotation causes an image to be displayed at a particular point in the text. There may be any number of embedded images in a text widget, and a particular image may be embedded in multiple places in the same text widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7817682aef00b4b7842e02869896fe241bd781" translate="yes" xml:space="preserve">
          <source>The first argument is a list of four numbers, but because of the count of 3 for the associated field specifier, only the first three will be used. The second argument is associated with the second field specifier. The resulting binary string contains the four numbers 1.0, 2.0, 3.0 and 0.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c93ed7e4b54f71a7ad6a85034e611d8f5d37dff" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;b&gt;clipboard&lt;/b&gt; determines the format of the rest of the arguments and the behavior of the command. The following forms are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d59ae9a97b77b500f913d167db6ee2c78f2e31" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;b&gt;selection&lt;/b&gt; determines the format of the rest of the arguments and the behavior of the command. The following forms are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd434d4c24e69523e0a30380c7343a13368d4635" translate="yes" xml:space="preserve">
          <source>The first capturing parentheses provides the name of the package, the second clause its version. In addition to matching the pattern, the extracted version number must not raise an error when used in the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0562db7c1fd99367a2dd6e19483a8b4833ce95de" translate="yes" xml:space="preserve">
          <source>The first example transfers the contents of one channel exactly to another. Note that when copying one file to another, it is better to use &lt;b&gt;&lt;a href=&quot;file.htm&quot;&gt;file copy&lt;/a&gt;&lt;/b&gt; which also copies file metadata (e.g. the file access permissions) where possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e11a9e99d855b7be584d1435a89406e6d36a620" translate="yes" xml:space="preserve">
          <source>The first form makes a copy of the file or directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b72f960053ba1b752a3c785b29e2a14bf350ff4" translate="yes" xml:space="preserve">
          <source>The first form of &lt;b&gt;selection own&lt;/b&gt; returns the path name of the window in this application that owns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc31a871fecf02ad3459898c542ced6f9bf4166c" translate="yes" xml:space="preserve">
          <source>The first form of annotation in text widgets is a tag. A tag is a textual string that is associated with some of the characters in a text. Tags may contain arbitrary characters, but it is probably best to avoid using the characters &amp;ldquo; &amp;rdquo; (space), &lt;b&gt;+&lt;/b&gt;, or &lt;b&gt;-&lt;/b&gt;: these characters have special meaning in indices, so tags containing them cannot be used as indices. There may be any number of tags associated with characters in a text. Each tag may refer to a single character, a range of characters, or several ranges of characters. An individual character may have any number of tags associated with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013aa96b5b54fd184ebf6b54c49f17357427d0f1" translate="yes" xml:space="preserve">
          <source>The first form takes the file or directory specified by pathname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbcc4edb483d29f8b3f121bba0210da5dd7ac53" translate="yes" xml:space="preserve">
          <source>The first method implementation on the chain is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84f6085cb2cb0e59069ae7e677128d5f1877d5c" translate="yes" xml:space="preserve">
          <source>The first possible syntax is a list of integers. Each element represents the number of pixels of a line segment. Only the odd segments are drawn using the &amp;ldquo;outline&amp;rdquo; color. The other segments are drawn transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e048f9b7d0ac3308f0346437b1dd2fa17687459" translate="yes" xml:space="preserve">
          <source>The first word in each command is taken as the command name; tilde-substitution is performed on it, and if the result contains no slashes then the directories in the PATH environment variable are searched for an executable by the given name. If the name contains a slash then it must refer to an executable reachable from the current directory. No &amp;ldquo;glob&amp;rdquo; expansion or other shell-like substitutions are performed on the arguments to commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2c9b05e5630a06e86a36a4fbe950b6561191c6" translate="yes" xml:space="preserve">
          <source>The following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82bb8b6d2156a32a89cfc9b32b4c204d5f756c4" translate="yes" xml:space="preserve">
          <source>The following Tcl variables are either set or used by Tk at various times in its execution:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12cdd6a9a1c220daf411614b3ac51d859e39d9d" translate="yes" xml:space="preserve">
          <source>The following additional option may also be specified before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd93427842b946de3874fa67779f91a08f0647c" translate="yes" xml:space="preserve">
          <source>The following aliases are provided in a safe interpreter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5cc1d2d1170e245a382a5402505cf67f178539" translate="yes" xml:space="preserve">
          <source>The following code would look up a telephone number in a directory, assuming an appropriate SQL schema:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c02a23f3f99dcf3302346bc96bdae30823a3c36" translate="yes" xml:space="preserve">
          <source>The following command can be used to do long-running calculations (as represented here by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47eb6cda00dc1e0ceb35d769b8b9103fdde4f243" translate="yes" xml:space="preserve">
          <source>The following commands are a subset of the full Dynamic Data Exchange set of commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2922746d1f38dd7cd59bd319b6cd097f2dd3703" translate="yes" xml:space="preserve">
          <source>The following commands are hidden by &lt;b&gt;interp create&lt;/b&gt; when it creates a safe interpreter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af082a7b8db4ccd1962fec6ec1df481ff9b4dbc" translate="yes" xml:space="preserve">
          <source>The following commands are possible for entry widgets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20657b634da8939684680727d33c4322002a2ce" translate="yes" xml:space="preserve">
          <source>The following commands are possible for photo images:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4192f60147bc7964de5652ceaa45da34a025f11e" translate="yes" xml:space="preserve">
          <source>The following commands are possible for spinbox widgets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84b69a9aa775ead268ce5b9a4607f4ffea8f390" translate="yes" xml:space="preserve">
          <source>The following commands are provided in the master interpreter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b60687f05bb5803641ebeb557d381f595d10bd9" translate="yes" xml:space="preserve">
          <source>The following commands are supported in the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f898969bfdca8e4605fe1c77a41f95ca1deb2f91" translate="yes" xml:space="preserve">
          <source>The following commands from Tcl's library of support procedures are not present in a safe interpreter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7f5e2f99b96baac1a3f4ac69acd1e7b0ba2c26" translate="yes" xml:space="preserve">
          <source>The following conversion characters are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787671796d9ae53d120f7e8cd24718adc804f1d7" translate="yes" xml:space="preserve">
          <source>The following elements of &lt;b&gt;env&lt;/b&gt; are special to Tcl:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561bda76e1596d6efdad8b008c71cd67a5a8967b" translate="yes" xml:space="preserve">
          <source>The following examples illustrate various forms of path names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be9a76055685fb08660621b8e9db850bc011916" translate="yes" xml:space="preserve">
          <source>The following extra option is allowed by &lt;b&gt;namespace ensemble configure&lt;/b&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4466920af0ba5d33b40b2ac9043b293b6ef9ad2" translate="yes" xml:space="preserve">
          <source>The following extra option is allowed by &lt;b&gt;namespace ensemble create&lt;/b&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dcd6abedc932151e227a4b2039cf06d5ea9bf7" translate="yes" xml:space="preserve">
          <source>The following extra options are supported for arcs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2dd99d03d847e7c7da3c935decdc9cfb23393d" translate="yes" xml:space="preserve">
          <source>The following extra options are supported for bitmaps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff2b301cbbb1597bf2fbece8a6f1ae12cd82645" translate="yes" xml:space="preserve">
          <source>The following extra options are supported for images:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb63a91e28cedf446f0dff5aad9c7bcc6e581b1" translate="yes" xml:space="preserve">
          <source>The following extra options are supported for lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e2573ecf4ede9e736ff38230b48f54433620c3" translate="yes" xml:space="preserve">
          <source>The following extra options are supported for polygons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fb0dc3b7547c5692823b03720a9ec315295279" translate="yes" xml:space="preserve">
          <source>The following extra options are supported for text items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f136f3d5f07efd35f71626841c1be052dc23ac4" translate="yes" xml:space="preserve">
          <source>The following extra options are supported for window items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0759acde89ef54e33607d42a2aeb786957f0f7ab" translate="yes" xml:space="preserve">
          <source>The following fonts are supported, and are mapped to the user's style defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad8208071a8a5539533dec7451fb525e808077d" translate="yes" xml:space="preserve">
          <source>The following format groups are recognized by the &lt;b&gt;clock scan&lt;/b&gt; and &lt;b&gt;clock format&lt;/b&gt; commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9237e7cd15c562f8bb413b9e5d062f9ef96723" translate="yes" xml:space="preserve">
          <source>The following formats are accepted as a font description anywhere</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfb940ad2ae61051aa98cc907398fe17a1c2213" translate="yes" xml:space="preserve">
          <source>The following global variables are created and managed automatically by the &lt;b&gt;[incr Tcl]&lt;/b&gt; library. Except where noted below, these variables should normally be treated as read-only by application-specific code and by users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9f0721f4924b73b08ac03cb073a4ad15a65981" translate="yes" xml:space="preserve">
          <source>The following global variables are created and managed automatically by the Tcl library. Except where noted below, these variables should normally be treated as read-only by application-specific code and by users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5516d996c28fcde93712c4e0e5a94dd0d3496989" translate="yes" xml:space="preserve">
          <source>The following global variables are defined or used by the procedures in the Tcl library. They fall into two broad classes, handling unknown commands and packages, and determining what are words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b263395de58f71583d2983e306b040bf8b277f" translate="yes" xml:space="preserve">
          <source>The following image types are defined by Tk so they will be available in any Tk application. Individual applications or extensions may define additional types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb5149de6069751bf7214329e380de23a37375a" translate="yes" xml:space="preserve">
          <source>The following is a list of constraints pre-defined by the &lt;b&gt;tcltest&lt;/b&gt; package itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0a60f02d76d652bf9838fc0abd000a8ee1593a" translate="yes" xml:space="preserve">
          <source>The following is a minimal extension:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8949be1c0a13f3cbbf19b1ed56bf440bfcd27bdd" translate="yes" xml:space="preserve">
          <source>The following item options may be specified for items in the &lt;b&gt;insert&lt;/b&gt; and &lt;b&gt;item&lt;/b&gt; widget commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30527f46001dbcc1b908f42879bb588e91637c14" translate="yes" xml:space="preserve">
          <source>The following loop uses i and j as loop variables to iterate over pairs of elements of a single list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682a874c18a9d8fbf59065c2f0296d5992d7b589" translate="yes" xml:space="preserve">
          <source>The following named fonts are supported on all systems, and default to values that match appropriate system defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156f476258bbb89093fa99672df4a9bf1f0679a5" translate="yes" xml:space="preserve">
          <source>The following operations are available for the &lt;b&gt;tk busy&lt;/b&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f8c7ad153481da656d89cdec34982edee6dec9" translate="yes" xml:space="preserve">
          <source>The following operator commands are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5408eb99f08670387967f1c21846500ef7e3196" translate="yes" xml:space="preserve">
          <source>The following option-value pairs are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e9b1bb75e3e2dbad94083b450ba6a15b864a7f" translate="yes" xml:space="preserve">
          <source>The following options are allowed on menu entries. Most options are not supported by all entry types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3f1c99e94b2a2d82daa9d7d2e18f73f39db046" translate="yes" xml:space="preserve">
          <source>The following options are common to &lt;b&gt;::safe::interpCreate&lt;/b&gt;, &lt;b&gt;::safe::interpInit&lt;/b&gt;, and &lt;b&gt;::safe::interpConfigure&lt;/b&gt;. Any option name can be abbreviated to its minimal non-ambiguous name. Option names are not case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91862d268c5ebcfa64003184b1f9d78d17ea1112" translate="yes" xml:space="preserve">
          <source>The following options are supported by all Tk themed widgets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80388ea0982b7c2bd047886f468d26304cfa025c" translate="yes" xml:space="preserve">
          <source>The following options are supported by labels, buttons, and other button-like widgets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250c7346217c2707d20d1be5a7621af8902af91a" translate="yes" xml:space="preserve">
          <source>The following options are supported by widgets that are controllable by a scrollbar. See</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8653419f0647e741a3e4b4c0546262913a3c0b4" translate="yes" xml:space="preserve">
          <source>The following options are supported for the &lt;b&gt;event generate&lt;/b&gt; command. These correspond to the &amp;ldquo;%&amp;rdquo; expansions allowed in binding scripts for the &lt;b&gt;&lt;a href=&quot;bind.htm&quot;&gt;bind&lt;/a&gt;&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2797a609bed1cc2c8edcb75b94f508d33b264a3" translate="yes" xml:space="preserve">
          <source>The following options are supported on all platforms, and are used when constructing a named font or when specifying a font using style [5] as above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824b78dda59b77f9931efc5c526a62600885a379" translate="yes" xml:space="preserve">
          <source>The following options are used by the &lt;b&gt;font metrics&lt;/b&gt; command to query font-specific data determined when the font was created. These properties are for the whole font itself and not for individual characters drawn in that font. In the following definitions, the &amp;ldquo;baseline&amp;rdquo; of a font is the horizontal line where the bottom of most letters line up; certain letters, such as lower-case &amp;ldquo;g&amp;rdquo; stick below the baseline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7390b79abecddf32e52b9f69dd20e33b2f042ab0" translate="yes" xml:space="preserve">
          <source>The following options may also be present before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c52f4d2833292287e53be143506a104df3bbad" translate="yes" xml:space="preserve">
          <source>The following options may be set when creating a transformation via the &amp;ldquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deea74d368e7f24c2aa8a206aa524fd4bc8b0b0b" translate="yes" xml:space="preserve">
          <source>The following options may be specified for each pane:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4a609ba87d9ca92e42ce256791d8e17ede1f1f" translate="yes" xml:space="preserve">
          <source>The following options may be specified for individual notebook panes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbfbf5d0e333982b3f3653064e4b24868989a0c" translate="yes" xml:space="preserve">
          <source>The following options may be specified on tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a7ee4c9c978e87c2e88b7e5f0664e5ef2454c3" translate="yes" xml:space="preserve">
          <source>The following options, supported by the &lt;b&gt;namespace ensemble create&lt;/b&gt; and &lt;b&gt;namespace ensemble configure&lt;/b&gt; commands, control how an ensemble command behaves:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b6eecc6cd594346f8c1a9e237c315dd52aa990" translate="yes" xml:space="preserve">
          <source>The following package options are available for each package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23908cad14e1fc792bce1e94ce6596d5facbbc77" translate="yes" xml:space="preserve">
          <source>The following procedures are provided in the Tcl library:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3308f0156c56e6935da129ebe618826eaf0439ff" translate="yes" xml:space="preserve">
          <source>The following produces an error that is identical to that produced by &lt;b&gt;&lt;a href=&quot;expr.htm&quot;&gt;expr&lt;/a&gt;&lt;/b&gt; when trying to divide a value by zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c0f5498a6b171e46a3a3fd375bc24eff9f6f53" translate="yes" xml:space="preserve">
          <source>The following rules define the syntax and semantics of the Tcl language:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71b3c5780dbf1d74c10f7c16e3f73d6319b745f" translate="yes" xml:space="preserve">
          <source>The following standard options are supported by arcs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6824012d8380b843da6284f1e92b3799ebcbb993" translate="yes" xml:space="preserve">
          <source>The following standard options are supported by bitmaps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bccdd6a06a56f68e7daf2add3a8c262e67a5b5c" translate="yes" xml:space="preserve">
          <source>The following standard options are supported by images:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288b882b649e0912e3775651cf159d2687eac749" translate="yes" xml:space="preserve">
          <source>The following standard options are supported by lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdeb1c4a7440d920faf354591cd5a282ff6e4bfb" translate="yes" xml:space="preserve">
          <source>The following standard options are supported by ovals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69c5a053d5a9b1572041c543193e9af43d6035d" translate="yes" xml:space="preserve">
          <source>The following standard options are supported by polygons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ca18955f788b852a6fcf5df7a6ff047ad5c7f1" translate="yes" xml:space="preserve">
          <source>The following standard options are supported by rectangles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1b477a8ccbee0c623e19a4c4d7da7dae30bc13" translate="yes" xml:space="preserve">
          <source>The following standard options are supported by text items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba84e29519ba92cf7fc321ea3ceada374ad78b9c" translate="yes" xml:space="preserve">
          <source>The following standard options are supported by window items:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f13800c10706413b53ae9b5e3be746bf752d86" translate="yes" xml:space="preserve">
          <source>The following subcommands are possible for combobox widgets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b53c26b5fb9bc8662bf67db59ffcf6ff825cf7f" translate="yes" xml:space="preserve">
          <source>The following subcommands are possible for entry widgets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c126dddaae2e2ce0995e63bf14af3b80685aa9" translate="yes" xml:space="preserve">
          <source>The following subcommands are possible for spinbox widgets in addition to the commands described for the &lt;b&gt;&lt;a href=&quot;ttk_entry.htm&quot;&gt;ttk::entry&lt;/a&gt;&lt;/b&gt; widget:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cfd74a7c95b1176ef33e3060de08bb189c3b89" translate="yes" xml:space="preserve">
          <source>The following subcommands are relevant to all types of channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95d177f8f54d586fc8dd1c8d69f45b465538dac" translate="yes" xml:space="preserve">
          <source>The following system fonts are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5989350d62357a3e9a67a84e329917eed74eea90" translate="yes" xml:space="preserve">
          <source>The following variables are only guaranteed to exist in &lt;b&gt;&lt;a href=&quot;../usercmd/tclsh.htm&quot;&gt;tclsh&lt;/a&gt;&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;../usercmd/wish.htm&quot;&gt;wish&lt;/a&gt;&lt;/b&gt; executables; the Tcl library does not define them itself but many Tcl environments do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04036aff16366a115b45fb579dd0b29d1c08a85" translate="yes" xml:space="preserve">
          <source>The following variables are only guaranteed to exist in &lt;b&gt;&lt;a href=&quot;../usercmd/wish.htm&quot;&gt;wish&lt;/a&gt;&lt;/b&gt; executables; the Tk library does not define them itself but many Tk environments do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9be06193855037b5b1ca0ca2bb0bc6aacbcd89e" translate="yes" xml:space="preserve">
          <source>The following widget commands are possible for menu widgets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92aa693fc8e431d4a9f31f1b76a3285b3e9e2ee7" translate="yes" xml:space="preserve">
          <source>The following widget commands are used internally by the TScrollbar widget class bindings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b259c3ddb3a08ced4639611459ed3d2036c696e9" translate="yes" xml:space="preserve">
          <source>The font dialog implementation may only store (and return) &lt;b&gt;&lt;a href=&quot;font.htm&quot;&gt;font&lt;/a&gt;&lt;/b&gt;&lt;b&gt;actual&lt;/b&gt; data as the value of the &lt;b&gt;-font&lt;/b&gt; configuration option. This can be an issue when &lt;b&gt;-font&lt;/b&gt; is set to a named font, if that font is subsequently changed, the font dialog &lt;b&gt;-font&lt;/b&gt; option needs to be set again to ensure its selected font matches the new value of the named font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066348bea6c2b3ccf359683fc3184bdbe2a7e1ca" translate="yes" xml:space="preserve">
          <source>The forms using &lt;b&gt;{&lt;/b&gt; and &lt;b&gt;}&lt;/b&gt; are known as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a315590244a6c079025748431a9b2f25f646fd" translate="yes" xml:space="preserve">
          <source>The fourth example starts an asynchronous, bidirectional fcopy between two sockets. Those could also be pipes from two [open &quot;|hal 9000&quot; r+] (though their conversation would remain secret to the script, since all four fileevent slots are busy).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923624b7275e4aaf27fdc806c0dec650e28edc76" translate="yes" xml:space="preserve">
          <source>The fourth form of annotation allows Tk images to be embedded in a text widget. See &lt;b&gt;&lt;a href=&quot;#M79&quot;&gt;EMBEDDED IMAGES&lt;/a&gt;&lt;/b&gt; below for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2aa453c6bd0589e96181d611c92ea366af07fb3" translate="yes" xml:space="preserve">
          <source>The fourth portion of a conversion specifier is a precision, which consists of a period followed by a number. The number is used in different ways for different conversions. For &lt;b&gt;e&lt;/b&gt;, &lt;b&gt;E&lt;/b&gt;, and &lt;b&gt;f&lt;/b&gt; conversions it specifies the number of digits to appear to the right of the decimal point. For &lt;b&gt;g&lt;/b&gt; and &lt;b&gt;G&lt;/b&gt; conversions it specifies the total number of digits to appear, including those on both sides of the decimal point (however, trailing zeroes after the decimal point will still be omitted unless the &lt;b&gt;#&lt;/b&gt; flag has been specified). For integer conversions, it specifies a minimum number of digits to print (leading zeroes will be added if necessary). For &lt;b&gt;s&lt;/b&gt; conversions it specifies the maximum number of characters to be printed; if the string is longer than this then the trailing characters will be dropped. If the precision is specified with &lt;b&gt;*&lt;/b&gt; rather than a number then the next argument to the &lt;b&gt;format&lt;/b&gt; command determines the precision; it must be a numeric string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5a80f0a181332fccb9f62e03c18d529f56f0e9" translate="yes" xml:space="preserve">
          <source>The full set of subcommands supported by a streaming instance command,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f5b41e6fc62a4b3b3b9725a83c07075267041a" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the class needs to be given as the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c7ff8a6b152356b1c3b87a4fa36cf4002b4367" translate="yes" xml:space="preserve">
          <source>The function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac974a38e3fd08c73a764fd6f6c9861c0ab24f7" translate="yes" xml:space="preserve">
          <source>The function &lt;b&gt;Tcl_DriverFlushProc&lt;/b&gt; is not supported. This is because the current generic I/O layer of Tcl does not use this function anywhere at all. Therefore support at the Tcl level makes no sense either. This may be altered in the future (through extending the API defined here and changing its version number) should the function be used at some time in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0fc022c61101f433ccdb0a9f45fd796948a316" translate="yes" xml:space="preserve">
          <source>The function &lt;b&gt;Tcl_DriverGetHandleProc&lt;/b&gt; is not supported; i.e., reflected channels do not have OS specific handles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8d03ebfb6b06d720cf63382af7db409cc2cfda" translate="yes" xml:space="preserve">
          <source>The function &lt;b&gt;Tcl_DriverHandlerProc&lt;/b&gt; is not supported. This driver function is relevant only for stacked channels, i.e., transformations. Reflected channels are always base channels, not transformations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc6acb331d00352a33576c7eb5610db19510611" translate="yes" xml:space="preserve">
          <source>The fundamental construct in &lt;b&gt;[incr Tcl]&lt;/b&gt; is the class definition. Each class acts as a template for actual objects that can be created. Each object has its own unique bundle of data, which contains instances of the &quot;variables&quot; defined in the class. Special procedures called &quot;methods&quot; are used to manipulate individual objects. Methods are just like the operations that are used to manipulate Tk widgets. The &quot;&lt;b&gt;&lt;a href=&quot;../tkcmd/button.htm&quot;&gt;button&lt;/a&gt;&lt;/b&gt;&quot; widget, for example, has methods such as &quot;flash&quot; and &quot;invoke&quot; that cause a particular button to blink and invoke its command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d46b53687e2e5f4b9f9c03445ecb091e0df2089" translate="yes" xml:space="preserve">
          <source>The fundamental construct in &lt;b&gt;[incr Tcl]&lt;/b&gt; is the class definition. Each class acts as a template for actual objects that can be created. The class itself is a namespace which contains things common to all objects. Each object has its own unique bundle of data which contains instances of the &quot;variables&quot; defined in the class definition. Each object also has a built-in variable named &quot;this&quot;, which contains the name of the object. Classes can also have &quot;common&quot; data members that are shared by all objects in a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeee7c6004fd1b21982f50ef243da047ff1d9e5c" translate="yes" xml:space="preserve">
          <source>The fundamental construct in &lt;b&gt;[incr Tcl]&lt;/b&gt; is the extendedclass definition. Each extendedclass acts as a template for actual objects that can be created. The extendedclass itself is a namespace which contains things common to all objects. Each object has its own unique bundle of data which contains instances of the &quot;variables&quot; defined in the extendedclass definition. Each object also has a built-in variable named &quot;this&quot;, which contains the name of the object. Extendedclasses can also have &quot;common&quot; data members that are shared by all objects in a extendedclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dad91162a3fc6fee90d69b7d4a7bd453501107d" translate="yes" xml:space="preserve">
          <source>The fundamental element of a test suite is the individual &lt;b&gt;test&lt;/b&gt; command. We begin with several examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052a05621a2be88e5cc5e9962fd37946fa03d648" translate="yes" xml:space="preserve">
          <source>The fundamental threading model in Tcl is that there can be one or more Tcl interpreters per thread, but each Tcl interpreter should only be used by a single thread which created it . A &quot;shared memory&quot; abstraction is awkward to provide in Tcl because Tcl makes assumptions about variable and data ownership . Therefore this extension supports a simple form of threading where the main thread can manage several background, or &quot;worker&quot; threads . For example, an event-driven server can pass requests to worker threads, and then await responses from worker threads or new client requests . Everything goes through the common Tcl event loop, so message passing between threads works naturally with event-driven I/O, &lt;b&gt;&lt;a href=&quot;../tclcmd/vwait.htm&quot;&gt;vwait&lt;/a&gt;&lt;/b&gt; on variables, and so forth . For the transfer of bulk information it is possible to move channels between the threads .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff7aee39bc6229749359abfcca251aa359dac2b" translate="yes" xml:space="preserve">
          <source>The generated index will implement direct loading of the package upon &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package require&lt;/a&gt;&lt;/b&gt;. This is the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a4fde90cc849d9615875d6fdc2508a73ef786e" translate="yes" xml:space="preserve">
          <source>The generated index will manage to delay loading the package until the use of one of the commands provided by the package, instead of loading it immediately upon &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package require&lt;/a&gt;&lt;/b&gt;. This is not compatible with the use of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab31357ec75c51698e249611eae0009bf2884b44" translate="yes" xml:space="preserve">
          <source>The global locale may be changed on demand, for example by a user initiated language change or within a multi user application like a web server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49bd1d716e043fe2401e7e3d72a6132b16ceba3" translate="yes" xml:space="preserve">
          <source>The global variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051164ba7283a71fd2727ae9c1c4e296d034fbf3" translate="yes" xml:space="preserve">
          <source>The grid algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b24276cd81e84b30e0373742dd2d5eb2b59ddc" translate="yes" xml:space="preserve">
          <source>The grid geometry manager lays out its slaves in three steps. In the first step, the minimum size needed to fit all of the slaves is computed, then (if propagation is turned on), a request is made of the master window to become that size. In the second step, the requested size is compared against the actual size of the master. If the sizes are different, then spaces is added to or taken away from the layout as needed. For the final step, each slave is positioned in its row(s) and column(s) based on the setting of its</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fa73733ba241f03ed14e36861ca0d16e547ba4" translate="yes" xml:space="preserve">
          <source>The grid geometry manager normally computes how large a master must be to just exactly meet the needs of its slaves, and it sets the requested width and height of the master to these dimensions. This causes geometry information to propagate up through a window hierarchy to a top-level window so that the entire sub-tree sizes itself to fit the needs of the leaf windows. However, the &lt;b&gt;grid propagate&lt;/b&gt; command may be used to turn off propagation for one or more masters. If propagation is disabled then grid will not set the requested width and height of the master window. This may be useful if, for example, you wish for a master window to have a fixed size that you specify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdddf5094358116d2a13b95e8d28461f6f7b118" translate="yes" xml:space="preserve">
          <source>The hexadecimal digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef467ae89133523bcae4563a5603095f7bce0c6" translate="yes" xml:space="preserve">
          <source>The history option &lt;b&gt;redo&lt;/b&gt; results in much simpler &amp;ldquo;history revision&amp;rdquo;. When this option is invoked then the most recent event is modified to eliminate the history command and replace it with the result of the history command. If you want to redo an event without modifying history, then use the &lt;b&gt;&lt;a href=&quot;../tkcmd/event.htm&quot;&gt;event&lt;/a&gt;&lt;/b&gt; operation to retrieve some event, and the &lt;b&gt;add&lt;/b&gt; operation to add it to history and execute it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e7472a8fb0593fe7a2347397d46f5e72ae049a" translate="yes" xml:space="preserve">
          <source>The idle worker thread is not servicing the event loop . If you, however, put the worker thread into the event loop, by evaluating the &lt;b&gt;&lt;a href=&quot;../tclcmd/vwait.htm&quot;&gt;vwait&lt;/a&gt;&lt;/b&gt; or other related Tcl commands, the worker thread will not be in the idle state, hence the idle timer will not be taken into account . Default value for this option is unspecified .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b3fd3cef0f27aff44c71d5c59bc7d1d335e724" translate="yes" xml:space="preserve">
          <source>The implementation of these methods is slot-dependent (and responsible for accessing the correct part of the class or object definition). Slots also have an unknown method handler to tie all these pieces together, and they hide their &lt;b&gt;&lt;a href=&quot;../tkcmd/destroy.htm&quot;&gt;destroy&lt;/a&gt;&lt;/b&gt; method so that it is not invoked inadvertently. It is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262cabb2b8ab948b51ec7fd4b430d9578f7a0610" translate="yes" xml:space="preserve">
          <source>The index process will pre-load any packages that exist in the current interpreter and match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2cd7bf05ff40d39ec532905c437c753f77b441" translate="yes" xml:space="preserve">
          <source>The indicated return value also becomes the new value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0948dbbe9315f29e087419804dd90f5e742fd9" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;b&gt;&lt;a href=&quot;../tclcmd/tclvars.htm&quot;&gt;tcl_library&lt;/a&gt;&lt;/b&gt; is set when Tk is added to an interpreter; this is done by searching several different directories until one is found that contains an appropriate Tk startup script. If the &lt;b&gt;TK_LIBRARY&lt;/b&gt; environment variable exists, then the directory it names is checked first. If &lt;b&gt;TK_LIBRARY&lt;/b&gt; is not set or does not refer to an appropriate directory, then Tk checks several other directories based on a compiled-in default location, the location of the Tcl library directory, the location of the binary containing the application, and the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ec924f51ce4a0ac0af78abd8ed639e64768b4f" translate="yes" xml:space="preserve">
          <source>The initialization procedure must match the following prototype:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2321e0f96906f672282cf1236c4e37a8474b1d5" translate="yes" xml:space="preserve">
          <source>The input substring consists of all the characters up to the next white-space character; the characters are copied to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1573823add00f1630e6e4c83da93bc183b71e19" translate="yes" xml:space="preserve">
          <source>The input substring consists of one or more characters in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b488ffd6675758289e971c21929783784e4ca08b" translate="yes" xml:space="preserve">
          <source>The input substring consists of one or more characters not in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d08c0e467869a98d5588d2ed1eeb8d64aff7ce" translate="yes" xml:space="preserve">
          <source>The input substring must be a binary integer. It is read in and the integer value is stored in the variable, truncated as required by the size modifier value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d6a23f40f2ab62963a320feb7490ad0ea4e796" translate="yes" xml:space="preserve">
          <source>The input substring must be a decimal integer. It is read in and the integer value is stored in the variable, truncated as required by the size modifier value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54565238d941d139f6e45c01f57bf97af43eca11" translate="yes" xml:space="preserve">
          <source>The input substring must be a decimal integer. The integer value is truncated as required by the size modifier value, and the corresponding unsigned value for that truncated range is computed and stored in the variable as a decimal string. The conversion makes no sense without reference to a truncation range, so the size modifier &lt;b&gt;ll&lt;/b&gt; is not permitted in combination with conversion character &lt;b&gt;u&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05086360255405265b835f3eef0207ab4eb7f1b" translate="yes" xml:space="preserve">
          <source>The input substring must be a floating-point number consisting of an optional sign, a string of decimal digits possibly containing a decimal point, and an optional exponent consisting of an &lt;b&gt;e&lt;/b&gt; or &lt;b&gt;E&lt;/b&gt; followed by an optional sign and a string of decimal digits. It is read in and stored in the variable as a floating-point value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c297f2debbfdc724aa12f6c6e1336d5d25c0e2e" translate="yes" xml:space="preserve">
          <source>The input substring must be a hexadecimal integer. It is read in and the integer value is stored in the variable, truncated as required by the size modifier value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b29f741ece014d362fa5642b1c4cb4c80e4fe9a" translate="yes" xml:space="preserve">
          <source>The input substring must be an integer. The base (i.e. decimal, binary, octal, or hexadecimal) is determined in the same fashion as described in &lt;b&gt;&lt;a href=&quot;expr.htm&quot;&gt;expr&lt;/a&gt;&lt;/b&gt;. The integer value is stored in the variable, truncated as required by the size modifier value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e3f26f3075ce1ebf4de3d0b6e224d800a12de8" translate="yes" xml:space="preserve">
          <source>The input substring must be an octal integer. It is read in and the integer value is stored in the variable, truncated as required by the size modifier value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7a933d07fa656111412ef70e90ca3a3763e8c7" translate="yes" xml:space="preserve">
          <source>The insertion cursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a0974e3b859a25b99b22dc97c06918e1bdcbd6" translate="yes" xml:space="preserve">
          <source>The instruction set executed by this machine, such as &lt;b&gt;intel&lt;/b&gt;, &lt;b&gt;PPC&lt;/b&gt;, &lt;b&gt;68k&lt;/b&gt;, or &lt;b&gt;sun4m&lt;/b&gt;. On UNIX machines, this is the value returned by &lt;b&gt;uname -m&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90e3ec02ee58fea5cdc850c10bbe7b98559972c" translate="yes" xml:space="preserve">
          <source>The integer appearing in each</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066f80868fb9b8070aeb54db9da43e8ee66f6bbd" translate="yes" xml:space="preserve">
          <source>The interp command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98bd18548fb734a339fb4683310200b90dbe500" translate="yes" xml:space="preserve">
          <source>The interpretation of each simple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31c99b0c5e20e853b79010aacb9085bd7df17a5" translate="yes" xml:space="preserve">
          <source>The interpreters which implement Tcl and Tk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5592951e1c035ff5abdc3488af428e20ac7228" translate="yes" xml:space="preserve">
          <source>The introspection capabilities can be used to discover what class implements a method and get how it is defined. This procedure illustrates how:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3931aaa8ff6b32a17ed204d637d2b08db2530392" translate="yes" xml:space="preserve">
          <source>The invocation of &lt;b&gt;apply&lt;/b&gt; adds a call frame to Tcl's evaluation stack (the stack of frames accessed via &lt;b&gt;&lt;a href=&quot;uplevel.htm&quot;&gt;uplevel&lt;/a&gt;&lt;/b&gt;). The execution of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e519a2f55554169959b38ec4ef1062b00a8cee0" translate="yes" xml:space="preserve">
          <source>The items in a canvas are ordered for purposes of display, with the first item in the display list being displayed first, followed by the next item in the list, and so on. Items later in the display list obscure those that are earlier in the display list and are sometimes referred to as being &amp;ldquo;on top&amp;rdquo; of earlier items. When a new item is created it is placed at the end of the display list, on top of everything else. Widget commands may be used to re-arrange the order of the display list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f8d0eb31c7a2bbb759d2e3acc51bad323a3f6c" translate="yes" xml:space="preserve">
          <source>The key rule only matches those key/value pairs whose keys match any of the given patterns (in the style of &lt;b&gt;&lt;a href=&quot;string.htm&quot;&gt;string match&lt;/a&gt;&lt;/b&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d40b4c5f6b70a85d139abf59bb01743ab7b3f69" translate="yes" xml:space="preserve">
          <source>The keyboard focus may be changed explicitly by a call to &lt;b&gt;&lt;a href=&quot;focus.htm&quot;&gt;focus&lt;/a&gt;&lt;/b&gt;, or implicitly by the window manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602c9f83be6e9392291a0887231cff569f24ce64" translate="yes" xml:space="preserve">
          <source>The keysym corresponding to the event, substituted as a decimal number. Valid only for &lt;b&gt;KeyPress&lt;/b&gt; and &lt;b&gt;KeyRelease&lt;/b&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddbb72f9d0395ef670d12ff0154951086fec287" translate="yes" xml:space="preserve">
          <source>The keysym corresponding to the event, substituted as a textual string. Valid only for &lt;b&gt;KeyPress&lt;/b&gt; and &lt;b&gt;KeyRelease&lt;/b&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd5371ae6d686fb9ab80feeae24f649e93d013d" translate="yes" xml:space="preserve">
          <source>The keywords from the Tcl/Tk man pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8019278ef06d7251bd79a6fec1e14767161f5e6f" translate="yes" xml:space="preserve">
          <source>The largest amount in pixels that any letter sticks down below the baseline of the font, plus any extra blank space added by the designer of the font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb14bf4cb6c17d1f437f605e56e3975e7f0bc6f8" translate="yes" xml:space="preserve">
          <source>The last char of the string (e.g., &lt;b&gt;end&lt;/b&gt; would refer to the &amp;ldquo;d&amp;rdquo; in &amp;ldquo;abcd&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b37e658af071ef75d6d19165f682065eff8eb1" translate="yes" xml:space="preserve">
          <source>The last char of the string minus the specified integer offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535a45a045b56fefe35b3cfad95ccf44a07ec266" translate="yes" xml:space="preserve">
          <source>The last char of the string plus the specified integer offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462ec5f31cb1dcaa5bff5e5f7075b02925fbcce8" translate="yes" xml:space="preserve">
          <source>The last part of a long event specification is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d024223c67d29239cf2824ce567ba8e953c90dd" translate="yes" xml:space="preserve">
          <source>The last thing in a conversion specifier is an alphabetic character that determines what kind of conversion to perform. The following conversion characters are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f8666498d75efb100546b78ec6f86905268cee" translate="yes" xml:space="preserve">
          <source>The legal forms for the &lt;b&gt;wm&lt;/b&gt; command are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b823d70cb5762dff6c3fb304bcb7d9d09f0167b" translate="yes" xml:space="preserve">
          <source>The list elements are in sorted order. If this option is specified, &lt;b&gt;lsearch&lt;/b&gt; will use a more efficient searching algorithm to search</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4f2f8cd9d67b6b2c7db027f7804c60758174ce" translate="yes" xml:space="preserve">
          <source>The list elements are sorted in decreasing order. This option is only meaningful when used with &lt;b&gt;-sorted&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043a76a795ddd7a8a79f4e887190ca9af1d3fbec" translate="yes" xml:space="preserve">
          <source>The list elements are sorted in increasing order. This option is only meaningful when used with &lt;b&gt;-sorted&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd0f5f32c85e6648c0dcbc5ed10669acdd0aac7" translate="yes" xml:space="preserve">
          <source>The list elements are to be compared as floating-point values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a8db10ace9238aec64c3a2e356d402b8c92a51" translate="yes" xml:space="preserve">
          <source>The list elements are to be compared as integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfe15503430f0be1f98909884809b10ecf1c890" translate="yes" xml:space="preserve">
          <source>The list elements are to be compared using dictionary-style comparisons (see &lt;b&gt;&lt;a href=&quot;lsort.htm&quot;&gt;lsort&lt;/a&gt;&lt;/b&gt; for a fuller description). Note that this only makes a meaningful difference from the &lt;b&gt;-ascii&lt;/b&gt; option when the &lt;b&gt;-sorted&lt;/b&gt; option is given, because values are only dictionary-equal when exactly equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10067309684c59f35266d0cfad1efcfedde89102" translate="yes" xml:space="preserve">
          <source>The list elements are to be examined as Unicode strings (the name is for backward-compatibility reasons.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aedbbfd6f6fba0ac3e1b5617a55eef69ffe7565" translate="yes" xml:space="preserve">
          <source>The list is searched starting at position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0405ff8e0cf838420075376f7a0fa6ae9d899660" translate="yes" xml:space="preserve">
          <source>The list length must be an integer multiple of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae7e452b330e7268c71ec096a019ddbaf030768" translate="yes" xml:space="preserve">
          <source>The list of values associated with the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83628be8945d28e8149e5a63bcc27365da3be0a3" translate="yes" xml:space="preserve">
          <source>The literal string &amp;ldquo;&lt;b&gt;current&lt;/b&gt;&amp;rdquo;, which identifies the currently-selected tab; or:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01aebc75868dcec055d75b52b5da66e8e22a65f9" translate="yes" xml:space="preserve">
          <source>The literal string &amp;ldquo;&lt;b&gt;end&lt;/b&gt;&amp;rdquo;, which returns the number of tabs (only valid for &amp;ldquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f3ebaf2ba1a4039a9b66044683daaaf8023755" translate="yes" xml:space="preserve">
          <source>The local time zone from the Control Panel on Windows systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c4165becf6402bf3c605d65b9e34977ac644ab" translate="yes" xml:space="preserve">
          <source>The locale is specified to &lt;b&gt;msgcat&lt;/b&gt; by a locale string passed to &lt;b&gt;::msgcat::mclocale&lt;/b&gt;. The locale string consists of a language code, an optional country code, and an optional system-specific code, each separated by &amp;ldquo;_&amp;rdquo;. The country and language codes are specified in standards ISO-639 and ISO-3166. For example, the locale &amp;ldquo;en&amp;rdquo; specifies English and &amp;ldquo;en_US&amp;rdquo; specifies U.S. English.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b3af6e02160f8156ac51f9a618d0c5bef13797" translate="yes" xml:space="preserve">
          <source>The lookahead constraints may not contain back references (see later), and all parentheses within them are considered non-capturing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1387140b4f0075c78eb1d94e872fd4f465ff8bd0" translate="yes" xml:space="preserve">
          <source>The main difference of this syntax with the previous is that it is shape-conserving. This means that all values in the dash list will be multiplied by the line width before display. This assures that &amp;ldquo;.&amp;rdquo; will always be displayed as a dot and &amp;ldquo;-&amp;rdquo; always as a dash regardless of the line width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1666daba643c6c9712e70345fec920657bdb86bc" translate="yes" xml:space="preserve">
          <source>The mark named &lt;b&gt;insert&lt;/b&gt; has special significance in text widgets. It is defined automatically when a text widget is created and it may not be unset with the &amp;ldquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379fed96ea958537c652d1e9ab903dc71010d3b5" translate="yes" xml:space="preserve">
          <source>The master for each slave must either be the slave's parent (the default) or a descendant of the slave's parent. This restriction is necessary to guarantee that the slave can be placed over any part of its master that is visible without danger of the slave being clipped by its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2c52a043eba170975bfefe6e43d0db522a4b87" translate="yes" xml:space="preserve">
          <source>The master for each slave must either be the slave's parent (the default) or a descendant of the slave's parent. This restriction is necessary to guarantee that the slave can be placed over any part of its master that is visible without danger of the slave being clipped by its parent. In addition, all slaves in one call to &lt;b&gt;grid&lt;/b&gt; must have the same master.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028929db7c445626a95d6954206f5cf6798320c3" translate="yes" xml:space="preserve">
          <source>The matching range may be within a single line of text, or run across multiple lines (if parts of the pattern can match a new-line). For regular expression matching one can use the various newline-matching features such as &lt;b&gt;$&lt;/b&gt; to match the end of a line, &lt;b&gt;^&lt;/b&gt; to match the beginning of a line, and to control whether &lt;b&gt;.&lt;/b&gt; is allowed to match a new-line. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feec11b1370a435165df25923d51191db3665c3c" translate="yes" xml:space="preserve">
          <source>The matching rules for REs containing both normal and non-greedy quantifiers have changed since early beta-test versions of this package. (The new rules are much simpler and cleaner, but do not work as hard at guessing the user's real intentions.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795f1a7c3d23e38d607b484483f994f3040558cb" translate="yes" xml:space="preserve">
          <source>The matching value is returned instead of its index (or an empty string if no value matches.) If &lt;b&gt;-all&lt;/b&gt; is also specified, then the result of the command is the list of all values that matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7302b53032aeef6f9785ff240a35ff421245d69" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes ahead to read when decompressing. This defaults to 1, which ensures that data is always decompressed correctly, but may be increased to improve performance. This is more useful when the channel is non-blocking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ef20a7cc47ed90f8ca0cddd4166ce0d44f400d" translate="yes" xml:space="preserve">
          <source>The message catalog code was developed by Mark Harrison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ee997b94abd71d090437ff579e8043f8e076ee" translate="yes" xml:space="preserve">
          <source>The message file for the root locale &amp;ldquo;&amp;rdquo; is called &amp;ldquo;&lt;b&gt;ROOT.msg&lt;/b&gt;&amp;rdquo;. This exception is made so as not to cause peculiar behavior, such as marking the message file as &amp;ldquo;hidden&amp;rdquo; on Unix file systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b587f4d7a394351baaaa2b0ffe1543581e162ddb" translate="yes" xml:space="preserve">
          <source>The message file name is a msgcat locale specifier (all lowercase) followed by &amp;ldquo;.msg&amp;rdquo;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe971b676b604be70f3b473c9e3f8cb22408ea73" translate="yes" xml:space="preserve">
          <source>The method chain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7897b0a36d2216f34145008f09e6bfb8527f26de" translate="yes" xml:space="preserve">
          <source>The method chain is cached for future use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76210a2e53dd3da9b21646783b0430e1d9753bc5" translate="yes" xml:space="preserve">
          <source>The minimum width of the column in pixels. The treeview widget will not make the column any smaller than &lt;b&gt;-minwidth&lt;/b&gt; when the widget is resized or the user drags a column separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57eb9d043f8fc5d499077a131cd91e3251823adb" translate="yes" xml:space="preserve">
          <source>The modified flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63835ee2c5ab94b7be3f5c38d5251a57ae012347" translate="yes" xml:space="preserve">
          <source>The most common kind of menu entry is a command entry, which behaves much like a button widget. When a command entry is invoked, a Tcl command is executed. The Tcl command is specified with the &lt;b&gt;-command&lt;/b&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b230a406996dfd7b0da920e5b469478e13e724" translate="yes" xml:space="preserve">
          <source>The most recent &lt;b&gt;set&lt;/b&gt; widget command determines whether or not to use the old syntax. If it is given two real arguments then the new syntax will be used in the future, and if it is given four integer arguments then the old syntax will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160d077b2106b747ce1f27bcaec7972272b8a8a1" translate="yes" xml:space="preserve">
          <source>The most restrictive (and most expensive) level of transaction isolation. Any query to the database, if repeated, will return precisely the same results for the life of the transaction, exactly as if the transaction is the only user of the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9964f9f64fe934b712ef6abac34df0521d76dba8" translate="yes" xml:space="preserve">
          <source>The mouse cursor is over the widget and pressing a mouse button will cause some action to occur. (aka &amp;ldquo;prelight&amp;rdquo; (Gnome), &amp;ldquo;hot&amp;rdquo; (Windows), &amp;ldquo;hover&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8ee16542ec332daac3c116bd8b42fd16674b28" translate="yes" xml:space="preserve">
          <source>The mouse cursor is within the widget. This is similar to the &lt;b&gt;active&lt;/b&gt; state; it is used in some themes for widgets that provide distinct visual feedback for the active widget in addition to the active element within the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe3410fa1e02da9787d7c75c9a7b2765baaec3c" translate="yes" xml:space="preserve">
          <source>The name &quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8a70c7ac096277726f58f9e8e349a187d57462" translate="yes" xml:space="preserve">
          <source>The name of a global Tcl variable which is linked to the &lt;b&gt;-value&lt;/b&gt;. If specified, the &lt;b&gt;-value&lt;/b&gt; of the progress bar is automatically set to the value of the variable whenever the latter is modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9144c6ac47530c05381c409feda7dbafddbb454" translate="yes" xml:space="preserve">
          <source>The name of a global variable whose value is linked to the widget. Default value is &lt;b&gt;::selectedButton&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e789d56f6188af41049f29d4b54348906af5c377" translate="yes" xml:space="preserve">
          <source>The name of a global variable whose value is linked to the widget. Defaults to the widget pathname if not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d037d88663a1ef1d36c785a4623bb16fe9e2d2" translate="yes" xml:space="preserve">
          <source>The name of a module file has to match the regular expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c82e4ed96aae94484004851e9fa505afe265b89" translate="yes" xml:space="preserve">
          <source>The name of a named font, created using the &lt;b&gt;font create&lt;/b&gt; command. When a widget uses a named font, it is guaranteed that this will never cause an error, as long as the named font exists, no matter what potentially invalid or meaningless set of attributes the named font has. If the named font cannot be displayed with exactly the specified attributes, some other close font will be substituted automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee09495b7c2328dd86ab8243b4840df9b24aa72" translate="yes" xml:space="preserve">
          <source>The name of a slave window;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0be9a013c5c56e3c867e423b59c404fa2bf0d2" translate="yes" xml:space="preserve">
          <source>The name of a widget to use for the label. If set, overrides the &lt;b&gt;-text&lt;/b&gt; option. The &lt;b&gt;-labelwidget&lt;/b&gt; must be a child of the &lt;b&gt;&lt;a href=&quot;labelframe.htm&quot;&gt;labelframe&lt;/a&gt;&lt;/b&gt; widget or one of the &lt;b&gt;&lt;a href=&quot;labelframe.htm&quot;&gt;labelframe&lt;/a&gt;&lt;/b&gt;'s ancestors, and must belong to the same top-level widget as the &lt;b&gt;&lt;a href=&quot;labelframe.htm&quot;&gt;labelframe&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b30b85c28c0b9507ddff770127a0755674ffa4c" translate="yes" xml:space="preserve">
          <source>The name of an application is set initially from the name of the program or script that created the application. You can query and change the name of an application with the &lt;b&gt;&lt;a href=&quot;tk.htm&quot;&gt;tk appname&lt;/a&gt;&lt;/b&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bdb75d10e0d616280ee480c553070523e4946a" translate="yes" xml:space="preserve">
          <source>The name of the Tcl language implementation. When the interpreter is first created, this is always set to the string &lt;b&gt;&lt;a href=&quot;tcl.htm&quot;&gt;Tcl&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2728bb6b8a592215de5536f6e4a2e3d692176321" translate="yes" xml:space="preserve">
          <source>The name of the application, which is used for purposes such as &lt;b&gt;&lt;a href=&quot;../tkcmd/send.htm&quot;&gt;send&lt;/a&gt;&lt;/b&gt; commands, is taken from the &lt;b&gt;-name&lt;/b&gt; option, if it is specified; otherwise it is taken from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a79f031f07d93decf49c580e068ce806f818940" translate="yes" xml:space="preserve">
          <source>The name of the entry widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf325c2fe71ac851aab2aaa9d9f1a1c03814cded" translate="yes" xml:space="preserve">
          <source>The name of the file that the data to be compressed came from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e424db91595d3788222b565bfcc13a803ab76ee" translate="yes" xml:space="preserve">
          <source>The name of the operating system running on this machine, such as &lt;b&gt;Windows NT&lt;/b&gt; or &lt;b&gt;SunOS&lt;/b&gt;. On UNIX machines, this is the value returned by &lt;b&gt;uname -s&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c376f4f5aac15e39f4a4721f0a92423a9ab5f5" translate="yes" xml:space="preserve">
          <source>The name of the property being updated or deleted (which may be converted to an XAtom using &lt;b&gt;&lt;a href=&quot;winfo.htm&quot;&gt;winfo atom&lt;/a&gt;&lt;/b&gt;.) Valid only for &lt;b&gt;Property&lt;/b&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ed2ab89a7e42521f4733ead05c143ef49a77d9" translate="yes" xml:space="preserve">
          <source>The name of the proxy host, if any. If this value is the empty string, the URL host is contacted directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2f29907fe60bfd6180152fdf653cc739339954" translate="yes" xml:space="preserve">
          <source>The name of the spinbox widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0828f6c1477c3ae6820ad80351369ffa76f96cc3" translate="yes" xml:space="preserve">
          <source>The name space for marks is different from that for tags: the same name may be used for both a mark and a tag, but they will refer to different things.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa659dd213386b8cf05238da8d71b5001fb7dcb" translate="yes" xml:space="preserve">
          <source>The named method must take one argument, the option name. For example, this code is equivalent to (though slower than) Itcl's default handling of cget:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd73502ded969da11de789055ef0c7366730034" translate="yes" xml:space="preserve">
          <source>The named method must take two arguments, the option name and its new value. For example, this code is equivalent to (though slower than) Itcl's default handling of configure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1024c2675e2e4e03cfe427f19eeaeb37c1430d23" translate="yes" xml:space="preserve">
          <source>The named method must take two arguments, the option name and its new value. For example, this code verifies that -flag's value is a valid Boolean value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5db4fac070c14e00f76039641273a26348120f" translate="yes" xml:space="preserve">
          <source>The native byte order of this machine: either &lt;b&gt;littleEndian&lt;/b&gt; or &lt;b&gt;bigEndian&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a0c6f6fcb37959ed4648ca0d238428f53faa79" translate="yes" xml:space="preserve">
          <source>The new access position will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5981b2e348b15f6b68d5205960294df13c7d2062" translate="yes" xml:space="preserve">
          <source>The next example demonstrates use of &lt;b&gt;&lt;a href=&quot;gets.htm&quot;&gt;gets&lt;/a&gt;&lt;/b&gt; to read line-oriented data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7621157f846682481b89a69aa0b10971172abd9" translate="yes" xml:space="preserve">
          <source>The next level of organization is a full test suite, made up of several test files. One script is used to control the entire suite. The basic function of this script is to call &lt;b&gt;runAllTests&lt;/b&gt; after doing any necessary setup. This script is usually named &lt;b&gt;all.tcl&lt;/b&gt; because that is the default name used by &lt;b&gt;runAllTests&lt;/b&gt; when combining multiple test suites into one testing run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73eefec609871d177f9205717b5873e2afe511bf" translate="yes" xml:space="preserve">
          <source>The next loop uses i and j to iterate over two lists in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c79ed1785c3aa70847a45853b70af6d8633bac8" translate="yes" xml:space="preserve">
          <source>The nominal thickness of the characters in the font. The value &lt;b&gt;normal&lt;/b&gt; specifies a normal weight font, while &lt;b&gt;bold&lt;/b&gt; specifies a bold font. The closest available weight to the one specified will be chosen. The default weight is &lt;b&gt;normal&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69856eff9820e5fe5fac195bad29370e6003bfc7" translate="yes" xml:space="preserve">
          <source>The notebook widget generates a &lt;b&gt;&amp;lt;&amp;lt;NotebookTabChanged&amp;gt;&amp;gt;&lt;/b&gt; virtual event after a new tab is selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bcce20d9581819b89d09ac19de002f6839f127" translate="yes" xml:space="preserve">
          <source>The number of arguments to &lt;b&gt;&lt;a href=&quot;../usercmd/tclsh.htm&quot;&gt;tclsh&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;../usercmd/wish.htm&quot;&gt;wish&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db29cd2a64c16dc0c05ae916a890fb4f482cb582" translate="yes" xml:space="preserve">
          <source>The number of characters read from the input for a conversion is the largest number that makes sense for that particular conversion (e.g. as many decimal digits as possible for &lt;b&gt;%d&lt;/b&gt;, as many octal digits as possible for &lt;b&gt;%o&lt;/b&gt;, and so on). The input substring for a given conversion terminates either when a white-space character is encountered or when the maximum substring width has been reached, whichever comes first. If a &lt;b&gt;*&lt;/b&gt; is present in the conversion specifier then no variable is assigned and the next scan argument is not consumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3c5965f591b2d691f22ba4682291698354a527" translate="yes" xml:space="preserve">
          <source>The number of script-based binding patterns matched so far for the event. Valid for all event types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c42e1ae7b718d57d339575f5092d1c05937c5bd" translate="yes" xml:space="preserve">
          <source>The number of the button that was pressed or released. Valid only for &lt;b&gt;ButtonPress&lt;/b&gt; and &lt;b&gt;ButtonRelease&lt;/b&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be28ef46c0cce2318773b830c7d9b41fb2a79f0" translate="yes" xml:space="preserve">
          <source>The number of the last client request processed by the server (the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca5df09674055789e57e396a9bc11fc1e135b59" translate="yes" xml:space="preserve">
          <source>The offset/base combination of 0/&lt;b&gt;current&lt;/b&gt; signals a &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan tell&lt;/a&gt;&lt;/b&gt; request, i.e., seek nothing relative to the current location, making the new location identical to the current one, which is then returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251837d921ca9d02b51234d931dedb7554bfe108" translate="yes" xml:space="preserve">
          <source>The only events for which bindings may be specified are those related to the mouse and keyboard (such as &lt;b&gt;Enter&lt;/b&gt;, &lt;b&gt;Leave&lt;/b&gt;, &lt;b&gt;ButtonPress&lt;/b&gt;, &lt;b&gt;Motion&lt;/b&gt;, and &lt;b&gt;KeyPress&lt;/b&gt;) or virtual events. Event bindings for a text widget use the &lt;b&gt;current&lt;/b&gt; mark described under &lt;b&gt;&lt;a href=&quot;#M71&quot;&gt;MARKS&lt;/a&gt;&lt;/b&gt; above. An &lt;b&gt;Enter&lt;/b&gt; event triggers for a tag when the tag first becomes present on the current character, and a &lt;b&gt;Leave&lt;/b&gt; event triggers for a tag when it ceases to be present on the current character. &lt;b&gt;Enter&lt;/b&gt; and &lt;b&gt;Leave&lt;/b&gt; events can happen either because the &lt;b&gt;current&lt;/b&gt; mark moved or because the character at that position changed. Note that these events are different than &lt;b&gt;Enter&lt;/b&gt; and &lt;b&gt;Leave&lt;/b&gt; events for windows. Mouse and keyboard events are directed to the current character. If a virtual event is used in a binding, that binding can trigger only if the virtual event is defined by an underlying mouse-related or keyboard-related event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c3d4f6b9bbdf8a450e1fbf19818dc67033add5" translate="yes" xml:space="preserve">
          <source>The only events for which bindings may be specified are those related to the mouse and keyboard (such as &lt;b&gt;Enter&lt;/b&gt;, &lt;b&gt;Leave&lt;/b&gt;, &lt;b&gt;ButtonPress&lt;/b&gt;, &lt;b&gt;Motion&lt;/b&gt;, and &lt;b&gt;KeyPress&lt;/b&gt;) or virtual events. The handling of events in canvases uses the current item defined in &lt;b&gt;&lt;a href=&quot;#M16&quot;&gt;ITEM IDS AND TAGS&lt;/a&gt;&lt;/b&gt; above. &lt;b&gt;Enter&lt;/b&gt; and &lt;b&gt;Leave&lt;/b&gt; events trigger for an item when it becomes the current item or ceases to be the current item; note that these events are different than &lt;b&gt;Enter&lt;/b&gt; and &lt;b&gt;Leave&lt;/b&gt; events for windows. Mouse-related events are directed to the current item, if any. Keyboard-related events are directed to the focus item, if any (see the &lt;b&gt;focus&lt;/b&gt; widget command below for more on this). If a virtual event is used in a binding, that binding can trigger only if the virtual event is defined by an underlying mouse-related or keyboard-related event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4d50de89352a453f454353121ef1351525ee38" translate="yes" xml:space="preserve">
          <source>The only feature of AREs that is actually incompatible with POSIX EREs is that &lt;b&gt;\&lt;/b&gt; does not lose its special significance inside bracket expressions. All other ARE features use syntax which is illegal or has undefined or unspecified effects in POSIX EREs; the &lt;b&gt;***&lt;/b&gt; syntax of directors likewise is outside the POSIX syntax for both BREs and EREs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b396bdb62bc60774cd2d770467a61ecc12d565" translate="yes" xml:space="preserve">
          <source>The operating system type code field from the header (if not the QW unknown value). See RFC 1952 for the meaning of these codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa926c526626dfd7410bed392347e36efa5c3529" translate="yes" xml:space="preserve">
          <source>The operating system type code, which should be one of the values described in RFC 1952.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490d111cb022303790acb95172067a465cdba817" translate="yes" xml:space="preserve">
          <source>The option is handled read-only -- it can only be set using configure at creation time, i.e., in the type's constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eac1ff0cc2f84ffadb8a37fb2ce88f492d4df3d" translate="yes" xml:space="preserve">
          <source>The option name must begin with a hyphen, and must not contain any upper case letters. The resource name and class name are optional; if not specified, the resource name defaults to the option name, minus the hyphen, and the class name defaults to the resource name with the first letter capitalized. Thus, the following statement is equivalent to the previous example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1012b515427707912cada10cd641e6af2a4b54" translate="yes" xml:space="preserve">
          <source>The option statement may include the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b9f1ce4c729b2ded7edcf5db48cd7ab36a842d" translate="yes" xml:space="preserve">
          <source>The optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b671a9411f7c76dcdff98adc758e5493299ba38a" translate="yes" xml:space="preserve">
          <source>The optional &lt;b&gt;-cleanup&lt;/b&gt; attribute indicates a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c2b8496598ded7f3691497c1fbae326b64b18a" translate="yes" xml:space="preserve">
          <source>The optional &lt;b&gt;-constraints&lt;/b&gt; attribute can be list of one or more keywords or an expression. If the &lt;b&gt;-constraints&lt;/b&gt; value is a list of keywords, each of these keywords should be the name of a constraint defined by a call to &lt;b&gt;testConstraint&lt;/b&gt;. If any of the listed constraints is false or does not exist, the test is skipped. If the &lt;b&gt;-constraints&lt;/b&gt; value is an expression, that expression is evaluated. If the expression evaluates to true, then the test is run. Note that the expression form of &lt;b&gt;-constraints&lt;/b&gt; may interfere with the operation of &lt;b&gt;configure -constraints&lt;/b&gt; and &lt;b&gt;configure -limitconstraints&lt;/b&gt;, and is not recommended. Appropriate constraints should be added to any tests that should not always be run. That is, conditional evaluation of a test should be accomplished by the &lt;b&gt;-constraints&lt;/b&gt; option, not by conditional evaluation of &lt;b&gt;test&lt;/b&gt;. In that way, the same number of tests are always reported by the test suite, though the number skipped may change based on the testing environment. The default value is an empty list. See &lt;b&gt;&lt;a href=&quot;#M59&quot;&gt;TEST CONSTRAINTS&lt;/a&gt;&lt;/b&gt; below for a list of built-in constraints and information on how to add your own constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7eadf03a5abd9c1f9739655def30154a0bec4f" translate="yes" xml:space="preserve">
          <source>The optional &lt;b&gt;-returnCodes&lt;/b&gt; attribute supplies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfcca187fb9ae2f0560759ba859e4373eec454c" translate="yes" xml:space="preserve">
          <source>The optional &lt;b&gt;-setup&lt;/b&gt; attribute indicates a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b558635b5f448b2244d948bd5427041d46780e" translate="yes" xml:space="preserve">
          <source>The optional &lt;b&gt;as&lt;/b&gt; clause allows you to specify the delegated method name and possibly add some arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5afbee8ecab6e444bcf1b43d0a4fd24b891ba1" translate="yes" xml:space="preserve">
          <source>The optional switches are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29752db8ab63faa275f2e0b546d487ac229cc4b4" translate="yes" xml:space="preserve">
          <source>The options described below are supported for all channels. In addition, each channel type may add options that only it supports. See the manual entry for the command that creates each type of channel for the options supported by that specific type of channel. For example, see the manual entry for the &lt;b&gt;&lt;a href=&quot;socket.htm&quot;&gt;socket&lt;/a&gt;&lt;/b&gt; command for additional options for sockets, and the &lt;b&gt;&lt;a href=&quot;open.htm&quot;&gt;open&lt;/a&gt;&lt;/b&gt; command for additional options for serial devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bc3efb3a403187e9bec68107abf8c6d757c752" translate="yes" xml:space="preserve">
          <source>The options described below are supported for all channels. In addition, each channel type may add options that only it supports. See the manual entry for the command that creates each type of channels for the options that that specific type of channel supports. For example, see the manual entry for the &lt;b&gt;&lt;a href=&quot;socket.htm&quot;&gt;socket&lt;/a&gt;&lt;/b&gt; command for additional options for sockets, and the &lt;b&gt;&lt;a href=&quot;open.htm&quot;&gt;open&lt;/a&gt;&lt;/b&gt; command for additional options for serial devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cafa52dfe11818eb150c23a783b5a6bfb1bb32b" translate="yes" xml:space="preserve">
          <source>The options to &lt;b&gt;lsort&lt;/b&gt; only control what sort of comparison is used, and do not necessarily constrain what the values themselves actually are. This distinction is only noticeable when the list to be sorted has fewer than two elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d7ade53f29221ed589bdb08c86fc2bed2f73e0" translate="yes" xml:space="preserve">
          <source>The order in which data values are displayed may be controlled by setting the &lt;b&gt;-displaycolumns&lt;/b&gt; widget option. The tree widget can also display column headings. Columns may be accessed by number or by symbolic names listed in the &lt;b&gt;-columns&lt;/b&gt; widget option; see &lt;b&gt;&lt;a href=&quot;#M80&quot;&gt;COLUMN IDENTIFIERS&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d2c63744b79faa57114ad969c89f77575d3f4b" translate="yes" xml:space="preserve">
          <source>The order of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0e9b2bdccb5bd674f778004c5222caf6e56ed3" translate="yes" xml:space="preserve">
          <source>The order of the windows in the property indicates a priority order: the window manager will attempt to install as many colormaps as possible from the head of this list when</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245ea95fbeed58f69c76ca11bb5ecc06c7e8e855" translate="yes" xml:space="preserve">
          <source>The package management facilities overlap somewhat with the auto-loader, in that both arrange for files to be loaded on-demand. However, package management is a higher-level mechanism that uses the auto-loader for the last step in the loading process. It is generally better to index a package with &lt;b&gt;pkg_mkIndex&lt;/b&gt; rather than &lt;b&gt;&lt;a href=&quot;library.htm&quot;&gt;auto_mkindex&lt;/a&gt;&lt;/b&gt; because the package mechanism provides version control: several versions of a package can be made available in the index files, with different applications using different versions based on &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package require&lt;/a&gt;&lt;/b&gt; commands. In contrast, &lt;b&gt;&lt;a href=&quot;library.htm&quot;&gt;auto_mkindex&lt;/a&gt;&lt;/b&gt; does not understand versions so it can only handle a single version of each package. It is probably not a good idea to index a given package with both &lt;b&gt;pkg_mkIndex&lt;/b&gt; and &lt;b&gt;&lt;a href=&quot;library.htm&quot;&gt;auto_mkindex&lt;/a&gt;&lt;/b&gt;. If you use &lt;b&gt;pkg_mkIndex&lt;/b&gt; to index a package, its commands cannot be invoked until &lt;b&gt;&lt;a href=&quot;package.htm&quot;&gt;package require&lt;/a&gt;&lt;/b&gt; has been used to select a version; in contrast, packages indexed with &lt;b&gt;&lt;a href=&quot;library.htm&quot;&gt;auto_mkindex&lt;/a&gt;&lt;/b&gt; can be used immediately since there is no version control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e205ff10cde25e5c3443b1a727c148df98fa205" translate="yes" xml:space="preserve">
          <source>The package requires Tcl threading extension but can be alternatively used stand-alone within the AOLserver, a scalable webserver from America Online .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540fc99644ffcf6ee4829a23c86af5ffe1580cf6" translate="yes" xml:space="preserve">
          <source>The packer algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2ac0cac75a28de814ef270156fe3f9b5747717" translate="yes" xml:space="preserve">
          <source>The packer allocates a rectangular</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3a55823f1013e0fa64278ca43a0e3814958618" translate="yes" xml:space="preserve">
          <source>The packer arranges the slaves for a master by scanning the packing list in order. At the time it processes each slave, a rectangular area within the master is still unallocated. This area is called the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cab32670d231c73089ce095da0b7e11739b426" translate="yes" xml:space="preserve">
          <source>The packer chooses the dimensions of the slave. The width will normally be the slave's requested width plus twice its &lt;b&gt;-ipadx&lt;/b&gt; option and the height will normally be the slave's requested height plus twice its &lt;b&gt;-ipady&lt;/b&gt; option. However, if the &lt;b&gt;-fill&lt;/b&gt; option is &lt;b&gt;x&lt;/b&gt; or &lt;b&gt;both&lt;/b&gt; then the width of the slave is expanded to fill the width of the parcel, minus twice the &lt;b&gt;-padx&lt;/b&gt; option. If the &lt;b&gt;-fill&lt;/b&gt; option is &lt;b&gt;y&lt;/b&gt; or &lt;b&gt;both&lt;/b&gt; then the height of the slave is expanded to fill the width of the parcel, minus twice the &lt;b&gt;-pady&lt;/b&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d075329e9f85aaaca74a46d1858d1fa6df63dd67" translate="yes" xml:space="preserve">
          <source>The packer normally computes how large a master must be to just exactly meet the needs of its slaves, and it sets the requested width and height of the master to these dimensions. This causes geometry information to propagate up through a window hierarchy to a top-level window so that the entire sub-tree sizes itself to fit the needs of the leaf windows. However, the &lt;b&gt;pack propagate&lt;/b&gt; command may be used to turn off propagation for one or more masters. If propagation is disabled then the packer will not set the requested width and height of the packer. This may be useful if, for example, you wish for a master window to have a fixed size that you specify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87c61da937c811b2695f7d5532ae339edcf7f0a" translate="yes" xml:space="preserve">
          <source>The packer positions the slave over its parcel. If the slave is smaller than the parcel then the &lt;b&gt;-anchor&lt;/b&gt; option determines where in the parcel the slave will be placed. If &lt;b&gt;-padx&lt;/b&gt; or &lt;b&gt;-pady&lt;/b&gt; is non-zero, then the given amount of external padding will always be left between the slave and the edges of the parcel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ac25c7ed172dddb2e5a8739cdba508d463a835" translate="yes" xml:space="preserve">
          <source>The panedwindow widget generates an &lt;b&gt;&amp;lt;&amp;lt;EnteredChild&amp;gt;&amp;gt;&lt;/b&gt; virtual event on LeaveNotify/NotifyInferior events, because Tk does not execute binding scripts for &amp;lt;Leave&amp;gt; events when the pointer crosses from a parent to a child. The panedwindow widget needs to know when that happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8e72127568f668a99c1e470e52835c695bc88d" translate="yes" xml:space="preserve">
          <source>The parameters supported are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769e2e81077afc1697d249f0f61360e98d960f3f" translate="yes" xml:space="preserve">
          <source>The path name of the window to which the event was reported (the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4cf07ea9505bbd9a11672ac654d45d3716df88" translate="yes" xml:space="preserve">
          <source>The paths are added at the head to the list of module paths, in order of appearance. This means that the last argument ends up as the new head of the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715abf3e2f347c7888afe75699cb2dcc5e54d807" translate="yes" xml:space="preserve">
          <source>The paths are added in the order as they are listed below, and for lists of paths defined by an environment variable in the order they are found in the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8a037428042e7b175dc0bc71306a5f081e4571" translate="yes" xml:space="preserve">
          <source>The photo image code is structured to allow handlers for additional image file formats to be added easily. The photo image code maintains a list of these handlers. Handlers are added to the list by registering them with a call to &lt;b&gt;&lt;a href=&quot;https://www.tcl.tk/man/tcl/TkLib/CrtPhImgFmt.htm&quot;&gt;Tk_CreatePhotoImageFormat&lt;/a&gt;&lt;/b&gt;. The standard Tk distribution comes with handlers for PPM/PGM, PNG and GIF formats, which are automatically registered on initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6ae8018deb2679257c3b450be9e75f3c275dd3" translate="yes" xml:space="preserve">
          <source>The photo image type was designed and implemented by Paul Mackerras, based on his earlier photo widget and some suggestions from John Ousterhout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d35a646b73d36e92557d00b66b8915f6646411" translate="yes" xml:space="preserve">
          <source>The placer is a geometry manager for Tk. It provides simple fixed placement of windows, where you specify the exact size and location of one window, called the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663fc583759d1b70d20ef51f250004971cda0cfa" translate="yes" xml:space="preserve">
          <source>The platform-specific name of a font, interpreted by the graphics server. This also includes, under X, an XLFD (see [4]) for which a single &amp;ldquo;&lt;b&gt;*&lt;/b&gt;&amp;rdquo; character was used to elide more than one field in the middle of the name. See &lt;b&gt;&lt;a href=&quot;#M41&quot;&gt;PLATFORM SPECIFIC FONTS&lt;/a&gt;&lt;/b&gt; for a list of the system fonts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c787f026aab8eb90f757d31a48568282078f69" translate="yes" xml:space="preserve">
          <source>The possible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667d9f8696a26ed191cca0a21a27ed0c72c5d65a" translate="yes" xml:space="preserve">
          <source>The procedure &lt;b&gt;tk_bisque&lt;/b&gt; is provided for backward compatibility: it restores the application's colors to the light brown (&amp;ldquo;bisque&amp;rdquo;) color scheme used in Tk 3.6 and earlier versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9f4d59dc6a2ef27f9d84e35cbc392304a2326b" translate="yes" xml:space="preserve">
          <source>The procedure &lt;b&gt;tk_chooseColor&lt;/b&gt; pops up a dialog box for the user to select a color. The following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46165829e6a777b42e8a809972e7479a0aa1ee9" translate="yes" xml:space="preserve">
          <source>The procedure &lt;b&gt;tk_chooseDirectory&lt;/b&gt; pops up a dialog box for the user to select a directory. The following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93fd3ac641e635315706a12f5022dd1061495d9" translate="yes" xml:space="preserve">
          <source>The procedures &lt;b&gt;bump&lt;/b&gt; and &lt;b&gt;reset&lt;/b&gt; are exported, so they are included when you import from the &lt;b&gt;Counter&lt;/b&gt; namespace, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa52e02ecec089c70efabe478585782f60240c0" translate="yes" xml:space="preserve">
          <source>The procedures &lt;b&gt;tk_getOpenFile&lt;/b&gt; and &lt;b&gt;tk_getSaveFile&lt;/b&gt; pop up a dialog box for the user to select a file to open or save. The &lt;b&gt;tk_getOpenFile&lt;/b&gt; command is usually associated with the &lt;b&gt;Open&lt;/b&gt; command in the &lt;b&gt;File&lt;/b&gt; menu. Its purpose is for the user to select an existing file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7a8d7c733418d1a60c3f1ad73514e6cb4f4a2d" translate="yes" xml:space="preserve">
          <source>The proxy port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfa04b902c3e115c45d5f07e5b86bece54b1c02" translate="yes" xml:space="preserve">
          <source>The quantifiers &lt;b&gt;{1,1}&lt;/b&gt; and &lt;b&gt;{1,1}?&lt;/b&gt; can be used to force longest and shortest preference, respectively, on a subexpression or a whole RE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe70794f5913d9affb77040cc2169ded86bb677" translate="yes" xml:space="preserve">
          <source>The range U+010000&amp;ndash;U+10FFFD is reserved for the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14b012defaad315e9f01a78232bdcc993418f16" translate="yes" xml:space="preserve">
          <source>The reason for the deprecation is that there are too many ambiguities. (Does the string &amp;ldquo;2000&amp;rdquo; represent a year, a time of day, or a quantity?) No set of rules for interpreting free-form dates and times has been found to give unsurprising results in all cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7dcdd25819eb71d81b9de9aa402ae29c6004b5" translate="yes" xml:space="preserve">
          <source>The recommended way of writing a version of &lt;b&gt;yield&lt;/b&gt; that allows resumption with multiple arguments is by using &lt;b&gt;yieldto&lt;/b&gt; and the &lt;b&gt;&lt;a href=&quot;return.htm&quot;&gt;return&lt;/a&gt;&lt;/b&gt; command, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08890e34c5196a0d1d6afbdbb2616c539a3809a5" translate="yes" xml:space="preserve">
          <source>The recommended way to use packages in Tcl is to invoke &lt;b&gt;package require&lt;/b&gt; and &lt;b&gt;package provide&lt;/b&gt; commands in scripts, and use the procedure &lt;b&gt;pkg_mkIndex&lt;/b&gt; to create package index files. Once you have done this, packages will be loaded automatically in response to &lt;b&gt;package require&lt;/b&gt; commands. See the documentation for &lt;b&gt;pkg_mkIndex&lt;/b&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3521286eccc18d6b43fe8e2376b13b6c7685443" translate="yes" xml:space="preserve">
          <source>The rectangle that indicates what is visible in the associated widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cdfd56ed8ef2d3753d7661d78594e3562617635" translate="yes" xml:space="preserve">
          <source>The region between the slider and &lt;b&gt;arrow1&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567a7d78acfcb526961539bd5642dce73e1329f8" translate="yes" xml:space="preserve">
          <source>The region between the slider and &lt;b&gt;arrow2&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a06e98d39b2e646bc26a436475f017afb31908" translate="yes" xml:space="preserve">
          <source>The registry command is only available on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7e86acfd9cac7c6b0376dc7d65ac7f5f76f03e" translate="yes" xml:space="preserve">
          <source>The registry value contains a big-endian 32-bit number. The data is represented in Tcl as a decimal string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c3562592e0867c0eef9f5d7707ef7a5654e9cd" translate="yes" xml:space="preserve">
          <source>The registry value contains a device-driver resource list. The data is represented exactly in Tcl, including any embedded nulls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6ca0f0bf1de29c339e95ece89ef9585f5d4c9b" translate="yes" xml:space="preserve">
          <source>The registry value contains a little-endian 32-bit number. The data is represented in Tcl as a decimal string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95da21b77e97685f45f510c69a721b9efdc9dc1e" translate="yes" xml:space="preserve">
          <source>The registry value contains a null-terminated string that contains unexpanded references to environment variables in the normal Windows style (for example, &amp;ldquo;%PATH%&amp;rdquo;). The data is represented in Tcl as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb97324752c6ae93cf8b6db9e3e78ae626d19f12" translate="yes" xml:space="preserve">
          <source>The registry value contains a null-terminated string. The data is represented in Tcl as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e8bb99f2590f43938fbb2f2b814c6fb93ef8a7" translate="yes" xml:space="preserve">
          <source>The registry value contains a symbolic link. The data is represented exactly in Tcl, including any embedded nulls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e63f6389a08f3da3d3454e63cb396cdb220a634" translate="yes" xml:space="preserve">
          <source>The registry value contains an array of null-terminated strings. The data is represented in Tcl as a list of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2709f34a6ca9f77ac667424b13c339b542dbc6f1" translate="yes" xml:space="preserve">
          <source>The registry value contains arbitrary binary data with no defined type. The data is represented exactly in Tcl, including any embedded nulls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c223936ea58861d6c38adb132e51deef3abdef3" translate="yes" xml:space="preserve">
          <source>The registry value contains arbitrary binary data. The data is represented exactly in Tcl, including any embedded nulls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b47ab3fb63b3cab42b9905e77ce6cbec2f439f" translate="yes" xml:space="preserve">
          <source>The relief to be used for the lower spin button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa934b1648fd2738ad9cf0d1036e77559858561" translate="yes" xml:space="preserve">
          <source>The relief to be used for the upper spin button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3e146f117811d527f44db795cba388dcfb1669" translate="yes" xml:space="preserve">
          <source>The remaining commands provided by &lt;b&gt;tcltest&lt;/b&gt; have better alternatives provided by &lt;b&gt;tcltest&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;tcl.htm&quot;&gt;Tcl&lt;/a&gt;&lt;/b&gt; itself. They are retained to support existing test suites, but should be avoided in new code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377a9f2c018fe6aea8f1febad82fa4030b787474" translate="yes" xml:space="preserve">
          <source>The remaining pattern arguments, after option processing, are treated as a single pattern obtained by joining the arguments with directory separators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ca96fe871424085a52f97f0ebdff2994d894ed" translate="yes" xml:space="preserve">
          <source>The replacement string for a %-replacement is formatted as a proper Tcl list element. This means that spaces or special characters such as &lt;b&gt;$&lt;/b&gt; and &lt;b&gt;{&lt;/b&gt; may be preceded by backslashes. This guarantees that the string will be passed through the Tcl parser when the binding script is evaluated. Most replacements are numbers or well-defined strings such as &lt;b&gt;Above&lt;/b&gt;; for these replacements no special formatting is ever necessary. The most common case where reformatting occurs is for the &lt;b&gt;%A&lt;/b&gt; substitution. For example, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780a876bc85aa4a29cf18e411cb35e5ac95c56de" translate="yes" xml:space="preserve">
          <source>The requested URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7a4ca25ed84e0705cd50f749c9c0db24a9fce1" translate="yes" xml:space="preserve">
          <source>The requested file, a Tcl source file, is sourced into the safe interpreter if it is found. The &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; alias can only source files from directories in the virtual path for the safe interpreter. The &lt;b&gt;&lt;a href=&quot;source.htm&quot;&gt;source&lt;/a&gt;&lt;/b&gt; alias requires the safe interpreter to use one of the token names in its virtual path to denote the directory in which the file to be sourced can be found. See the section on &lt;b&gt;&lt;a href=&quot;#M27&quot;&gt;SECURITY&lt;/a&gt;&lt;/b&gt; for more discussion of restrictions on valid filenames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e8fb084b14e4d1e1ec8309b3b74d08bf6f2549" translate="yes" xml:space="preserve">
          <source>The requested file, a shared object file, is dynamically loaded into the safe interpreter if it is found. The filename must contain a token name mentioned in the virtual path for the safe interpreter for it to be found successfully. Additionally, the shared object file must contain a safe entry point; see the manual page for the &lt;b&gt;&lt;a href=&quot;load.htm&quot;&gt;load&lt;/a&gt;&lt;/b&gt; command for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e17c3008ec98005dd1ba57c4e54f4a900a25cc" translate="yes" xml:space="preserve">
          <source>The requested package is &lt;b&gt;encoding::base64&lt;/b&gt;. The generated partial path is &amp;ldquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466b0e6d7ebcf90d877cf1d69976a59d5efd74dd" translate="yes" xml:space="preserve">
          <source>The result dictionary may contain the keys listed below, with the specified meanings for their values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651208e38ae3d9c78a3423506685290db8b51709" translate="yes" xml:space="preserve">
          <source>The result from the overall method call is the result from the outermost method implementation; inner method implementations return their results through &lt;b&gt;next&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f40f22a86af4b6b6038481982b21f97175fd8f" translate="yes" xml:space="preserve">
          <source>The result is the number of elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601b6387d6f9575dcab6d8d9e0385a8b866fc135" translate="yes" xml:space="preserve">
          <source>The result of the &lt;b&gt;oo::copy&lt;/b&gt; command will be the fully-qualified name of the new object or class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6700c5af901faaf0dbc28c09a917cdaf69ec87ed" translate="yes" xml:space="preserve">
          <source>The result of the unknown handler is expected to be a list (it is an error if it is not). If the list is an empty list, the ensemble command attempts to look up the original subcommand again and, if it is not found this time, an error will be generated just as if the &lt;b&gt;-unknown&lt;/b&gt; handler was not there (i.e. for any particular invocation of an ensemble, its unknown handler will be called at most once.) This makes it easy for the unknown handler to update the ensemble or its backing namespace so as to provide an implementation of the desired subcommand and reparse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab25223728177ede0601c41d0678feecd04591a" translate="yes" xml:space="preserve">
          <source>The result returned by the subcommand is taken as the binary data to write to the transformation below this transformation. This can be the base channel as well. Note that the result is allowed to be empty, or less than the data we got; the transformation is not required to transform everything which was written to it right now. It is allowed to store this data in internal buffers and to defer the actual transformation until it has more data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e16c08172c5693d4bbc98a3001adebe01f6014" translate="yes" xml:space="preserve">
          <source>The return code of the &lt;b&gt;return&lt;/b&gt; command itself triggers this special handling by procedure invocation. If &lt;b&gt;return&lt;/b&gt; is provided the option &lt;b&gt;-level 0&lt;/b&gt;, then the return code of the &lt;b&gt;return&lt;/b&gt; command itself will be the value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdb1f8e26ab12b367c0530ed6994c6f77ce9368" translate="yes" xml:space="preserve">
          <source>The return code of the procedure is 2 (&lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_RETURN&lt;/a&gt;&lt;/b&gt;). The procedure command behaves in its calling context as if it were the command &lt;b&gt;return&lt;/b&gt; (with no arguments).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcee4fe1bfd369bd14e26ab706ccf93ebd9b1377" translate="yes" xml:space="preserve">
          <source>The return code of the procedure is 3 (&lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_BREAK&lt;/a&gt;&lt;/b&gt;). The procedure command behaves in its calling context as if it were the command &lt;b&gt;&lt;a href=&quot;break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a3a3d12eb98cd472f82c278285b74932e7f512" translate="yes" xml:space="preserve">
          <source>The return code of the procedure is 4 (&lt;b&gt;&lt;a href=&quot;catch.htm&quot;&gt;TCL_CONTINUE&lt;/a&gt;&lt;/b&gt;). The procedure command behaves in its calling context as if it were the command &lt;b&gt;&lt;a href=&quot;continue.htm&quot;&gt;continue&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c2976902256f2ca2e632dc9e47ace08698a8a9" translate="yes" xml:space="preserve">
          <source>The return value from &lt;b&gt;tk_optionMenu&lt;/b&gt; is the name of the menu associated with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5297c11d1c4ec406a499e351a25cf273747fbc" translate="yes" xml:space="preserve">
          <source>The return value is a list of all the named fonts that are currently defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e85a35244bc6774c51eaec87079bae1b94fb5d" translate="yes" xml:space="preserve">
          <source>The return value is a list of the case-insensitive names of all font families that exist on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bca281bb4b04c150790e3d707b8c1819c8d24a" translate="yes" xml:space="preserve">
          <source>The return value is a newly-created Tcl command that represents the statement. See &lt;b&gt;&lt;a href=&quot;tdbc_statement.htm&quot;&gt;tdbc::statement&lt;/a&gt;&lt;/b&gt; for the interface accepted by a statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a337147f18d713a5640d4c910cb15220d56fb97" translate="yes" xml:space="preserve">
          <source>The return value of the method has to be a list containing the names of all subcommands supported by the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5759f65a12db17f0fa0a06cc36858c64f9a4b2" translate="yes" xml:space="preserve">
          <source>The return value of the subcommand is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a1da650ff099055686ebe31b1c0f1174cbdfb0" translate="yes" xml:space="preserve">
          <source>The return value of the subcommand is taken as the (new) location of the channel, counted from the start. This has to be an integer number greater than or equal to zero. If the subcommand throws an error the command which caused its invocation (usually &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan seek&lt;/a&gt;&lt;/b&gt;, or &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan tell&lt;/a&gt;&lt;/b&gt;) will appear to have thrown this error. Any exception beyond &lt;b&gt;&lt;a href=&quot;error.htm&quot;&gt;error&lt;/a&gt;&lt;/b&gt; (e.g., &lt;b&gt;&lt;a href=&quot;break.htm&quot;&gt;break&lt;/a&gt;&lt;/b&gt;, etc.) is treated as and converted to an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2a72618e0849265eca2a272ff182be98ea05b3" translate="yes" xml:space="preserve">
          <source>The return value of the subcommand is taken as the number of bytes written by the channel. Anything non-numeric will cause an error to be signaled and later thrown by the command which performed the write. A negative value implies that the write failed. Returning a value greater than the number of bytes given to the handler, or zero, is forbidden and will cause the Tcl core to throw an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ebf2cdb4ee94097ce9586a64a1f315f62565bd" translate="yes" xml:space="preserve">
          <source>The return value of the subcommand should be a list containing the names of all subcommands supported by this handler. Any error thrown by the subcommand will prevent the creation of the transformation. The thrown error will appear as error thrown by &lt;b&gt;&lt;a href=&quot;chan.htm&quot;&gt;chan push&lt;/a&gt;&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0537ab10f6c78386d59cd27b52e768062ae3d30e" translate="yes" xml:space="preserve">
          <source>The return value of this subcommand is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ecebdd6fafec2899b088457a82a56565355365" translate="yes" xml:space="preserve">
          <source>The return value of this subcommand is taken as the requested data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff4bab5a6e4e4bb3f0913f8a26e0afadd0ae69a" translate="yes" xml:space="preserve">
          <source>The rules for handling anomalies relating to summer time and to the Gregorian calendar are the same when adding/subtracting months and years as they are when adding/subtracting days and weeks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf877288969cc0357308fee9c3bf9ecffddacdd8" translate="yes" xml:space="preserve">
          <source>The rules for native names depend on the value reported in the Tcl &lt;b&gt;&lt;a href=&quot;platform.htm&quot;&gt;platform&lt;/a&gt;&lt;/b&gt; element of the &lt;b&gt;&lt;a href=&quot;tclvars.htm&quot;&gt;tcl_platform&lt;/a&gt;&lt;/b&gt; array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30c7d002329f54e032c608bcaa06a78d2fbaa14" translate="yes" xml:space="preserve">
          <source>The safe interpreter mechanism is based on the Safe-Tcl prototype implemented by Nathaniel Borenstein and Marshall Rose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b3cc8ec765d9b711692977f7fab066964d9dd2" translate="yes" xml:space="preserve">
          <source>The script for a file event is executed at global level (outside the context of any Tcl procedure) in the interpreter in which the &lt;b&gt;chan event&lt;/b&gt; command was invoked. If an error occurs while executing the script then the command registered with &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp bgerror&lt;/a&gt;&lt;/b&gt; is used to report the error. In addition, the file event handler is deleted if it ever returns an error; this is done in order to prevent infinite loops due to buggy handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5ab2306570eabb8f924aad4643b7486494c886" translate="yes" xml:space="preserve">
          <source>The script for a file event is executed at global level (outside the context of any Tcl procedure) in the interpreter in which the &lt;b&gt;fileevent&lt;/b&gt; command was invoked. If an error occurs while executing the script then the command registered with &lt;b&gt;&lt;a href=&quot;interp.htm&quot;&gt;interp bgerror&lt;/a&gt;&lt;/b&gt; is used to report the error. In addition, the file event handler is deleted if it ever returns an error; this is done in order to prevent infinite loops due to buggy handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072d12a157756c6f2b49461a1f8b8d3e998a5a6c" translate="yes" xml:space="preserve">
          <source>The script rule tests for matching by assigning the key to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b85d683d5ce387978cc42ed06548c3396c4302" translate="yes" xml:space="preserve">
          <source>The script that &lt;b&gt;&lt;a href=&quot;../usercmd/tclsh.htm&quot;&gt;tclsh&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;../usercmd/wish.htm&quot;&gt;wish&lt;/a&gt;&lt;/b&gt; started executing (if it was specified) or otherwise the name by which &lt;b&gt;&lt;a href=&quot;../usercmd/tclsh.htm&quot;&gt;tclsh&lt;/a&gt;&lt;/b&gt; or &lt;b&gt;&lt;a href=&quot;../usercmd/wish.htm&quot;&gt;wish&lt;/a&gt;&lt;/b&gt; was invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e73c7762e945bc85050f38804ce4e2d72f28426" translate="yes" xml:space="preserve">
          <source>The script will never print &amp;ldquo;a was set&amp;rdquo; until after it has printed &amp;ldquo;b was set&amp;rdquo; because of the nesting of &lt;b&gt;vwait&lt;/b&gt; commands, and yet</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
