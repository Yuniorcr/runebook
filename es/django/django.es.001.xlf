<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="1f8d4e1a99e90cb7533504f99cccf2e7d40e87ec" translate="yes" xml:space="preserve">
          <source>&amp;copy; Django Software Foundation and individual contributors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd0ab6a5f6978c20a6184f8720c46a2f48a34b5" translate="yes" xml:space="preserve">
          <source>&amp;hellip; and using the &lt;code&gt;assertIs()&lt;/code&gt; method, it discovered that its &lt;code&gt;was_published_recently()&lt;/code&gt; returns &lt;code&gt;True&lt;/code&gt;, though we wanted it to return &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc06759f0f60701fe2fbc7492bbd5ae6423ea53b" translate="yes" xml:space="preserve">
          <source>&amp;hellip; and will use the one it finds first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78bd2853e7081a9e30525a4644a2ac49ffef907" translate="yes" xml:space="preserve">
          <source>&amp;hellip; but not by a large degree (hence needing a large queryset for efficiency gains).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873cc19ca6eca331bff9be76107051b7ec245cd3" translate="yes" xml:space="preserve">
          <source>&amp;hellip; or enable localization for specific fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01c7a2c95bdc5d2b91a3e6e21bd73d8d438ecf5" translate="yes" xml:space="preserve">
          <source>&amp;hellip; roughly translates into the SQL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9601eb8879b4e0c81638f4b4b5a8eb20c90e00" translate="yes" xml:space="preserve">
          <source>&amp;hellip; the view handling this request could interrogate request.POST to retrieve the username and password, and could interrogate request.GET to determine if the user was a visitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc377e179c1d0548fcb8dd33a0036aefb7a8fa7" translate="yes" xml:space="preserve">
          <source>&amp;hellip; then a call to &lt;code&gt;Book.objects.select_related('author__hometown').get(id=4)&lt;/code&gt; will cache the related &lt;code&gt;Person&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; the related &lt;code&gt;City&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84979c7a67c053b2b392761c6108219d34615c81" translate="yes" xml:space="preserve">
          <source>&amp;hellip; would be a valid query, equivalent to the previous example; but:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee32bee08dc117f1cb8345f7706adb8cb7d12e3" translate="yes" xml:space="preserve">
          <source>&amp;hellip; would not be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11338d77fa5a3bfc29d542b3d7857d62eff03ba" translate="yes" xml:space="preserve">
          <source>&amp;hellip;And this one logs a member out, according to &lt;code&gt;login()&lt;/code&gt; above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb344546be992e168880e03eae5159a2d3c96c24" translate="yes" xml:space="preserve">
          <source>&amp;hellip;and the output will be something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5166debae2d90f2f91643f23560864fecf7b80ee" translate="yes" xml:space="preserve">
          <source>&amp;hellip;and use the dotted Python path to this class in the &lt;a href=&quot;../ref/settings#std:setting-CACHES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; portion of your &lt;a href=&quot;../ref/settings#std:setting-CACHES&quot;&gt;&lt;code&gt;CACHES&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5bfbc351a6637fa854f8dd50764c87832bd80c" translate="yes" xml:space="preserve">
          <source>&amp;hellip;and you&amp;rsquo;d like to display a hierarchical list that is ordered by country, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e20bd34be7a2ba0cba805603dcf6c61e112516" translate="yes" xml:space="preserve">
          <source>&amp;hellip;clearing any ordering in the query. You could also order by, say, &lt;code&gt;data&lt;/code&gt; without any harmful effects, since that is already playing a role in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b345785c69e3609cbc9deb966f0f034f0d5731f7" translate="yes" xml:space="preserve">
          <source>&amp;hellip;do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51f00dc73c49119b78e9a92ab2938df8a97dc73" translate="yes" xml:space="preserve">
          <source>&amp;hellip;if you only want the count, rather than doing &lt;code&gt;len(queryset)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f2350c5fdf5c73682e7a7740cc61674a780255" translate="yes" xml:space="preserve">
          <source>&amp;hellip;if you only want to find out if at least one result exists, rather than &lt;code&gt;if
queryset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fd4fcb9276eea0a421f0dbf28a4e5eb91588f7" translate="yes" xml:space="preserve">
          <source>&amp;hellip;including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158417d4c165aed52581ed1cae546f3fc138f459" translate="yes" xml:space="preserve">
          <source>&amp;hellip;is identical to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53551902248e091a428a62c2ff4d7b34ba6eadf3" translate="yes" xml:space="preserve">
          <source>&amp;hellip;is preferable to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212cfb2d493eecc9ed4014c6987c1dc118c4a4ca" translate="yes" xml:space="preserve">
          <source>&amp;hellip;or display an error message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b6f1448f165c63aaf29bb42b0bb3779a49065b" translate="yes" xml:space="preserve">
          <source>&amp;hellip;or:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fc70bca9af57b567622c312c30ac3b7715bb66" translate="yes" xml:space="preserve">
          <source>&amp;hellip;rather than:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3382d908084a0cdc74af797d49cc08b242eacf53" translate="yes" xml:space="preserve">
          <source>&amp;hellip;the statement &lt;code&gt;Book.objects.all()&lt;/code&gt; will return all books in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b94041f6d6afc67acd577aa144db92493b47667" translate="yes" xml:space="preserve">
          <source>&amp;hellip;then &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;django-admin makemessages&lt;/code&gt;&lt;/a&gt; will have created a &lt;code&gt;.po&lt;/code&gt; file containing the following snippet &amp;ndash; a message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3eeb5b8dc20cf80939748077b733b733421920" translate="yes" xml:space="preserve">
          <source>&amp;hellip;then &lt;code&gt;get_template('foo.html')&lt;/code&gt; will look for &lt;code&gt;foo.html&lt;/code&gt; in these directories, in this order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac8674cd53aabe8b3871f759c8b3cf7844dc678" translate="yes" xml:space="preserve">
          <source>&amp;hellip;then the fact that &lt;code&gt;pizza.toppings.all()&lt;/code&gt; has been prefetched will not help you. The &lt;code&gt;prefetch_related('toppings')&lt;/code&gt; implied &lt;code&gt;pizza.toppings.all()&lt;/code&gt;, but &lt;code&gt;pizza.toppings.filter()&lt;/code&gt; is a new and different query. The prefetched cache can&amp;rsquo;t help here; in fact it hurts performance, since you have done a database query that you haven&amp;rsquo;t used. So use this feature with caution!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197261882771c1f78685fbdc9724d1a4e801e1c6" translate="yes" xml:space="preserve">
          <source>&amp;hellip;then, in a template, you can create a link to this view like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952491151e6a6400a70d839da5a4efe804f09c94" translate="yes" xml:space="preserve">
          <source>&amp;hellip;translates (roughly) into the following SQL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219c95b34e0fd063aee0144597d26f2dc1665b81" translate="yes" xml:space="preserve">
          <source>&amp;hellip;when first creating the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d82b359a9a4a1acac33d6be2982b329b5d87e4" translate="yes" xml:space="preserve">
          <source>&amp;hellip;where &lt;code&gt;Bands&lt;/code&gt; and &lt;code&gt;Artists&lt;/code&gt; have a many-to-many relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17dd4f7fc46b4f239a0c72aab00ab11b9b7a1f0" translate="yes" xml:space="preserve">
          <source>&amp;hellip;where &lt;code&gt;Pizza&lt;/code&gt; and &lt;code&gt;Topping&lt;/code&gt; have a many-to-many relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344bc0992bb724fcd16b43b77ddb417e9d3cb1dc" translate="yes" xml:space="preserve">
          <source>&amp;hellip;where &lt;code&gt;Pizza&lt;/code&gt; and &lt;code&gt;Topping&lt;/code&gt; have a many-to-many relationship. Note that there are a number of &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.bulk_create&quot;&gt;&lt;code&gt;caveats to this method&lt;/code&gt;&lt;/a&gt;, so make sure it&amp;rsquo;s appropriate for your use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0113d42e09a3d0b2d9dc391a9f87fb40d7ccfd0" translate="yes" xml:space="preserve">
          <source>&amp;hellip;where &lt;code&gt;de&lt;/code&gt; is the &lt;a href=&quot;index#term-locale-name&quot;&gt;locale name&lt;/a&gt; for the message file you want to create. For example, &lt;code&gt;pt_BR&lt;/code&gt; for Brazilian Portuguese, &lt;code&gt;de_AT&lt;/code&gt; for Austrian German or &lt;code&gt;id&lt;/code&gt; for Indonesian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6daae2a6ffdf80576654ca73c8786a5654bb8c9f" translate="yes" xml:space="preserve">
          <source>&amp;hellip;which means the browser would pop-up a JavaScript alert box!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d41b83006898eca29c7f65eeff864f855b7f75a" translate="yes" xml:space="preserve">
          <source>&amp;hellip;which will group the &lt;code&gt;Item&lt;/code&gt; objects by their common &lt;code&gt;data&lt;/code&gt; values and then count the number of &lt;code&gt;id&lt;/code&gt; values in each group. Except that it won&amp;rsquo;t quite work. The default ordering by &lt;code&gt;name&lt;/code&gt; will also play a part in the grouping, so this query will group by distinct &lt;code&gt;(data, name)&lt;/code&gt; pairs, which isn&amp;rsquo;t what you want. Instead, you should construct this queryset:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a4ebcddd3d8478118630369281368de0608628" translate="yes" xml:space="preserve">
          <source>&amp;hellip;which, in turn, would result in the remainder of the Web page being bolded!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12b684503a92275251b117b38406a5481cce33b" translate="yes" xml:space="preserve">
          <source>&amp;hellip;will be interpreted as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda9e4d46a42de6ff6fd74267ed10511aabae38c" translate="yes" xml:space="preserve">
          <source>&amp;hellip;will match &lt;code&gt;/home/images/foo.png&lt;/code&gt; but not &lt;code&gt;/home/images/foo/bar.png&lt;/code&gt; because the &lt;a href=&quot;#django.db.models.FilePathField.match&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt; applies to the base filename (&lt;code&gt;foo.png&lt;/code&gt; and &lt;code&gt;bar.png&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19460c7f2e6c8cd6d05c2698aa6e7279c6066f5" translate="yes" xml:space="preserve">
          <source>&amp;hellip;will result in the evaluation of a GET request equivalent to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757d58dad45f1c57a3f2e4b4dd3a76cababc65d8" translate="yes" xml:space="preserve">
          <source>&amp;hellip;will result in the evaluation of a POST request to this URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499a10cf715ccdfce34adb5d79a1d9d60307d093" translate="yes" xml:space="preserve">
          <source>&amp;hellip;will result in the following HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d49d5d33f3265776efc808c2e76a88e4db8fdb" translate="yes" xml:space="preserve">
          <source>&amp;hellip;will send the HTTP header &lt;code&gt;HTTP_X_REQUESTED_WITH&lt;/code&gt; to the details view, which is a good way to test code paths that use the &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.is_ajax&quot;&gt;&lt;code&gt;django.http.HttpRequest.is_ajax()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36e902f3d8813df7913a72d5530b21e4f26e03d" translate="yes" xml:space="preserve">
          <source>&amp;hellip;with this POST data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8eb8c4db63116023e885e2cfbb3f8db366171fa" translate="yes" xml:space="preserve">
          <source>&amp;hellip;would perform the following steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c047aeffafdd881a099523b4e7b61707edcabb" translate="yes" xml:space="preserve">
          <source>&amp;hellip;wouldn&amp;rsquo;t work because the query would be ordered by &lt;code&gt;blog__name&lt;/code&gt; thus mismatching the &lt;code&gt;DISTINCT ON&lt;/code&gt; expression. You&amp;rsquo;d have to explicitly order by the relation &lt;code&gt;_id&lt;/code&gt; field (&lt;code&gt;blog_id&lt;/code&gt; in this case) or the referenced one (&lt;code&gt;blog__pk&lt;/code&gt;) to make sure both expressions match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c43e09c51c82bcd79b80776a623039aca3e8c5b" translate="yes" xml:space="preserve">
          <source>&amp;hellip;you can refer to &lt;code&gt;self.client&lt;/code&gt;, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6e10cd1358996c9dd3e58bfe3e29c73e8b86ea" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Common&amp;rdquo; middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba33ab731548e6783bf58e5a975bb1d3cae4727" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Daemon mode&amp;rdquo; is the recommended mode for running mod_wsgi (on non-Windows platforms). To create the required daemon process group and delegate the Django instance to run in it, you will need to add appropriate &lt;code&gt;WSGIDaemonProcess&lt;/code&gt; and &lt;code&gt;WSGIProcessGroup&lt;/code&gt; directives. A further change required to the above configuration if you use daemon mode is that you can&amp;rsquo;t use &lt;code&gt;WSGIPythonPath&lt;/code&gt;; instead you should use the &lt;code&gt;python-path&lt;/code&gt; option to &lt;code&gt;WSGIDaemonProcess&lt;/code&gt;, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42db9d1fe75d7bcd5a7b93765dbccb5f3d90e1db" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Database is locked&amp;rdquo; errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbc31c2119e75283f85eddf33bc216ba82af585" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;How-to&amp;rdquo; guides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0e60831de7ef29f36152219b246e37899e1594" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Minification&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78d038dadb875ac3c322ae8474b8887f92f0d9a" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;day&amp;rdquo;: 15</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fab3b6d2cc3adc1c24ed634b2d0519cf70a9fe" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;day&amp;rdquo;: 16</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb44fa161a83d4b19e0a0d6d6dbccb819615ab59" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;day&amp;rdquo;: 2015-06-15 00:00:00+00:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298dd776c336c5809e676c429b69b8c90768c243" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;day&amp;rdquo;: 2015-06-16 00:00:00+10:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1651da0d49e82b67f1ce0fedcf45798efa44748d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;hour&amp;rdquo;: 2015-06-15 14:00:00+00:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af84e06fe8dc8946435bd8a5962909a2227032cf" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;hour&amp;rdquo;: 2015-06-16 00:00:00+10:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b4fac5fb3f3ea9264f9baae9dbca9f144a6e60" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;hour&amp;rdquo;: 23</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde484ed81ee4e2a7266983bbba8487a5b1421e2" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;hour&amp;rdquo;: 9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f7fd39b3739bbf05c0c6098784824f8ba4cdd9" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;iso_year&amp;rdquo;: 2015</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3119d0477d32ef462fef043081cd62968cbfc5" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;minute&amp;rdquo;: 2015-06-15 14:30:00+00:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e28e883e6d058841553319a84c08eb90a9930c4" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;minute&amp;rdquo;: 2015-06-16 00:30:00+10:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e64c542c49a5a79200dce1be0672825c6d5c176" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;minute&amp;rdquo;: 30</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687b46b6e725ccc73e32ea04a5241eee2b02e605" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;month&amp;rdquo;: 2015-06-01 00:00:00+00:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59658bb209837071d1479f1b5eee3a45a7a9ddcc" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;month&amp;rdquo;: 2015-06-01 00:00:00+10:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a4db8dde7190a7e0652b552033fb0a89f8c99d" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;month&amp;rdquo;: 6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef9dbe8d9fbc738ed0c6d60e00d7a25fbce8751" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;pyformat&amp;rdquo; parameter style in raw queries not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6326ebd0e27012158355af8d6693dbf8e3897cb9" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;quarter&amp;rdquo;: 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99be337a15c743ae79901cfb92b39f40e52f343" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;quarter&amp;rdquo;: 2015-04-01 00:00:00+00:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298765a76d8f3b0b408312f29e18e2634c9f5379" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;quarter&amp;rdquo;: 2015-04-01 00:00:00+10:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d567cdb77a77a52beff05b74df80a01b28ab14" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;second&amp;rdquo;: 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5de1b111cf15875ecc5d03b7db45d09263b5c5" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;second&amp;rdquo;: 2015-06-15 14:30:50+00:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a0d5240206c53b0014eb3741d36fa6995c7c2a" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;second&amp;rdquo;: 2015-06-16 00:30:50+10:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79381f55595cb9c9391b00501d48266eb6a89b11" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;week&amp;rdquo;: 2015-06-15 00:00:00+00:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc58be533351e5013be4feab0d4c4909d2198dc" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;week&amp;rdquo;: 2015-06-16 00:00:00+10:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8e32347c2a52e1e274a8da0f1e0b4e2cf7b175" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;week&amp;rdquo;: 25</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e42775bf447bfa94dd24061988ba4c09102aa71" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;week_day&amp;rdquo;: 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc0215509459f2c9becc1259a93e90eee7f2a33" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;week_day&amp;rdquo;: 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512f7a1696cf2d65034ab95808ef167b36709e82" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;year&amp;rdquo;: 2015</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bf684c338ccec5c534d0414e245e0f799ead0c" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;year&amp;rdquo;: 2015-01-01 00:00:00+00:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f515978bfb9446b73881a51a0dd4179c8f18bd82" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;year&amp;rdquo;: 2015-01-01 00:00:00+11:00</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18d22abbf1ba13d1af4905a26294786c1b12460" translate="yes" xml:space="preserve">
          <source>(Behind the scenes, this functionality is implemented by Python &lt;a href=&quot;https://docs.python.org/howto/descriptor.html&quot;&gt;descriptors&lt;/a&gt;. This shouldn&amp;rsquo;t really matter to you, but we point it out here for the curious.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90992e038f1dd4915eacfe996f2a1f6839867bf7" translate="yes" xml:space="preserve">
          <source>(Every &lt;code&gt;Author&lt;/code&gt; in the resulting &lt;code&gt;QuerySet&lt;/code&gt; will have an extra attribute called &lt;code&gt;total_pages&lt;/code&gt;. If no such alias were specified, it would be the rather long &lt;code&gt;book__pages__sum&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1415b9a6ae68178667770e9f06ae19b2b780a67" translate="yes" xml:space="preserve">
          <source>(Every &lt;code&gt;Publisher&lt;/code&gt; in the resulting &lt;code&gt;QuerySet&lt;/code&gt; will have an extra attribute called &lt;code&gt;book__count&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7b5b7fc01ef30049e16786ae45281ffb276307" translate="yes" xml:space="preserve">
          <source>(For more on middleware, see the &lt;a href=&quot;../http/middleware&quot;&gt;middleware documentation&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2bb46ecd5b555496908be23fd65091238d2ce4" translate="yes" xml:space="preserve">
          <source>(If you &lt;em&gt;do&lt;/em&gt; use the caching middleware, it already sets the &lt;code&gt;max-age&lt;/code&gt; with the value of the &lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_SECONDS&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_SECONDS&lt;/code&gt;&lt;/a&gt; setting. In that case, the custom &lt;code&gt;max_age&lt;/code&gt; from the &lt;a href=&quot;http/decorators#django.views.decorators.cache.cache_control&quot;&gt;&lt;code&gt;cache_control()&lt;/code&gt;&lt;/a&gt; decorator will take precedence, and the header values will be merged correctly.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075e869a9cf5179e941f018a2de9f6ab334d31a4" translate="yes" xml:space="preserve">
          <source>(In this case, you&amp;rsquo;ll also need to use an authentication backend that allows inactive users, such as &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.backends.AllowAllUsersModelBackend&quot;&gt;&lt;code&gt;AllowAllUsersModelBackend&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20111d275866993c9fe105b0fbe116599ff630f0" translate="yes" xml:space="preserve">
          <source>(No equivalent SQL code fragment is included for this lookup because implementation of the relevant query varies among different database engines.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb9beb308f94383093c152b545f1690f9821f0c" translate="yes" xml:space="preserve">
          <source>(Note that these are regular expressions, so we put a backslash in front of periods to escape them.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a3f92f0d6d863835490801951372a38a751d1d" translate="yes" xml:space="preserve">
          <source>(Note that this example makes the view available at &lt;code&gt;/i18n/setlang/&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a420bc295c9ef8e4d1f4fe2644eef690372f735" translate="yes" xml:space="preserve">
          <source>(Note: The sitemap application doesn&amp;rsquo;t install any database tables. The only reason it needs to go into &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; is so that the &lt;a href=&quot;../templates/api#django.template.loaders.app_directories.Loader&quot;&gt;&lt;code&gt;Loader()&lt;/code&gt;&lt;/a&gt; template loader can find the default templates.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e9541aec5965dddd323245862891f6dde99329" translate="yes" xml:space="preserve">
          <source>(The above statements are equivalent. We include both of them to demonstrate that it doesn&amp;rsquo;t matter whether the options come before or after the fixture arguments.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949e1ae5548137947a502bf481ea2fc359c6d71c" translate="yes" xml:space="preserve">
          <source>(The caveat with using variables or computed values, as in the previous two examples, is that Django&amp;rsquo;s translation-string-detecting utility, &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;django-admin makemessages&lt;/code&gt;&lt;/a&gt;, won&amp;rsquo;t be able to find these strings. More on &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; later.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1383454950f13f85a9818288c0d802487f8d21f4" translate="yes" xml:space="preserve">
          <source>(The exact SQL syntax varies for each database engine.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad83036f7db72be3eaec81dd857cfac8b6a579c2" translate="yes" xml:space="preserve">
          <source>(The name &lt;code&gt;attachment&lt;/code&gt; here is not relevant; use whatever name your file-processing code expects.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff299dd93a9880c7e92b56628bcb66020b7ade1" translate="yes" xml:space="preserve">
          <source>(The resulting dictionary will have a key called &lt;code&gt;'average_rating'&lt;/code&gt;. If no such alias were specified, it would be the rather long &lt;code&gt;'book__rating__avg'&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d580e5fb3249f3d3598eae6ea6f8f3fbafdd31" translate="yes" xml:space="preserve">
          <source>(The resulting dictionary will have a key called &lt;code&gt;'oldest_pubdate'&lt;/code&gt;. If no such alias were specified, it would be the rather long &lt;code&gt;'book__pubdate__min'&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832b65e1876cf2202c991b7ab19ec2b00f11dec6" translate="yes" xml:space="preserve">
          <source>(This assumes you&amp;rsquo;ve added the admin at &lt;code&gt;admin/&lt;/code&gt; and requires that you put the URLs starting with &lt;code&gt;^admin/&lt;/code&gt; before the line that includes the admin app itself).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1772eccab109875eec3edb4ea0213d87621be2" translate="yes" xml:space="preserve">
          <source>(This assumes your &lt;code&gt;Entry&lt;/code&gt; model has fields &lt;code&gt;pub_date&lt;/code&gt; and &lt;code&gt;comments_on&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e3023f5fa297e7f4e0e14b03de8b9525631363" translate="yes" xml:space="preserve">
          <source>(This follows Python exactly). So, for example, the following complex &lt;a href=&quot;#std:templatetag-if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69216b34586afc31fa4056d722ccb2ea95f3fdf3" translate="yes" xml:space="preserve">
          <source>(To implement this function, you must decide whether 2012-02-29 minus one year is 2011-02-28 or 2011-03-01, which depends on your business requirements.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fce2f4f00a84f9dca3a0bcac537d541478adf8b" translate="yes" xml:space="preserve">
          <source>(Using &lt;a href=&quot;querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; instead of a slice would fail because the &lt;code&gt;OuterRef&lt;/code&gt; cannot be resolved until the queryset is used within a &lt;code&gt;Subquery&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c03556952826ad8ffbcbfb9ec767d4633433ef7" translate="yes" xml:space="preserve">
          <source>(if there was a related &lt;code&gt;Author&lt;/code&gt; model), if there was no &lt;code&gt;author&lt;/code&gt; associated with an entry, it would be treated as if there was also no &lt;code&gt;name&lt;/code&gt; attached, rather than raising an error because of the missing &lt;code&gt;author&lt;/code&gt;. Usually this is exactly what you want to have happen. The only case where it might be confusing is if you are using &lt;a href=&quot;../../ref/models/querysets#std:fieldlookup-isnull&quot;&gt;&lt;code&gt;isnull&lt;/code&gt;&lt;/a&gt;. Thus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f4cd8099c98580c6ae409bc8242dc1457236f2" translate="yes" xml:space="preserve">
          <source>.ABSOLUTE_URL_OVERRIDES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9669e9161762892328212786426d71916decb2" translate="yes" xml:space="preserve">
          <source>.ADMINS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52116270aac9afef3cf03ed803bd1397a8b751ec" translate="yes" xml:space="preserve">
          <source>.ALLOWED_HOSTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e42998b201052b55582b0b8f7027b793f8cc658" translate="yes" xml:space="preserve">
          <source>.APPEND_SLASH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570b6ceb1424fbc40ed719e128a7bc13ad9fc122" translate="yes" xml:space="preserve">
          <source>.AUTHENTICATION_BACKENDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2197f66d933d2d427d2c3c60972ae7ab6f9d48bd" translate="yes" xml:space="preserve">
          <source>.AUTH_PASSWORD_VALIDATORS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d435c8b9f37a9b3e2110576b2d342e383be4113e" translate="yes" xml:space="preserve">
          <source>.AUTH_USER_MODEL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2a522922c36624877ad20cc0d0635ff2924128" translate="yes" xml:space="preserve">
          <source>.CACHES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacf6fc3771333c6ba3020a024de144ab7e09f23" translate="yes" xml:space="preserve">
          <source>.CACHE_MIDDLEWARE_ALIAS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa710cfb38031c0d1cdeacb49ce945901cd9eab3" translate="yes" xml:space="preserve">
          <source>.CACHE_MIDDLEWARE_KEY_PREFIX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe3bf1dce8a337b78a68806231af0e72a434d6f" translate="yes" xml:space="preserve">
          <source>.CACHE_MIDDLEWARE_SECONDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babc3363355195685027aa5783524647528191c8" translate="yes" xml:space="preserve">
          <source>.CSRF_COOKIE_AGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fbe6594f837c25f34bffefe76b926e05699353" translate="yes" xml:space="preserve">
          <source>.CSRF_COOKIE_DOMAIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d321d6ffc67e09f9752b8be03cd816849696a2" translate="yes" xml:space="preserve">
          <source>.CSRF_COOKIE_HTTPONLY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ac8e34d65d8f205f8f1b41dce60cafd19b1773" translate="yes" xml:space="preserve">
          <source>.CSRF_COOKIE_NAME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4281edbf5cd3591efead327a5293c7d781a080d5" translate="yes" xml:space="preserve">
          <source>.CSRF_COOKIE_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddfbae12c85e387da329b5e809657de1290b9e9" translate="yes" xml:space="preserve">
          <source>.CSRF_COOKIE_SAMESITE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff468d72a4bdf209528d63603e61b4bc0f406c4c" translate="yes" xml:space="preserve">
          <source>.CSRF_COOKIE_SECURE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae931328b2f86f3cb526c3e39a721cdaedecdf0" translate="yes" xml:space="preserve">
          <source>.CSRF_FAILURE_VIEW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fad37d1c47ec8644aa7b745a09e33b112e9cc7" translate="yes" xml:space="preserve">
          <source>.CSRF_HEADER_NAME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1751b812f290a0028e3e1a1e4f6673915cb0b7d7" translate="yes" xml:space="preserve">
          <source>.CSRF_TRUSTED_ORIGINS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6bba336226afe1c7b1aa42b6168804aa607275f" translate="yes" xml:space="preserve">
          <source>.CSRF_USE_SESSIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a4b139f511e2d1307e02406a14732250f6db69" translate="yes" xml:space="preserve">
          <source>.DATABASES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b781668bb5b3cae54719bec170d350485caa173c" translate="yes" xml:space="preserve">
          <source>.DATABASE_ROUTERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b446fb3b9f9d38deb4de803164dd0d410338a5b0" translate="yes" xml:space="preserve">
          <source>.DATA_UPLOAD_MAX_MEMORY_SIZE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3d3a28762cae1ece6869e8e25309ff083feec1" translate="yes" xml:space="preserve">
          <source>.DATA_UPLOAD_MAX_NUMBER_FIELDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ca87ae83d2bb77e882744033c62b476112396c" translate="yes" xml:space="preserve">
          <source>.DATETIME_FORMAT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870abdf2215f3e643f1ce8610063bdf326b639a8" translate="yes" xml:space="preserve">
          <source>.DATETIME_INPUT_FORMATS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eeb2f09cc7e329654f3ee778003b44b8aabe594" translate="yes" xml:space="preserve">
          <source>.DATE_FORMAT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d6a8f1a7c245f834fb07fb14708f7b4ab9e632" translate="yes" xml:space="preserve">
          <source>.DATE_INPUT_FORMATS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b769243c5c2b893930dc2e2b0b835102fb9a4ce4" translate="yes" xml:space="preserve">
          <source>.DEBUG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bf204f737acfb3697ff67490392452325f986c" translate="yes" xml:space="preserve">
          <source>.DEBUG_PROPAGATE_EXCEPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e329d4f88058e98ad7471e866b7d4ade119cb4" translate="yes" xml:space="preserve">
          <source>.DECIMAL_SEPARATOR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fd106466d12e13006b2c552c8ff1830dae1377" translate="yes" xml:space="preserve">
          <source>.DEFAULT_CHARSET</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e030c8c29a38d5ab74aa9d9d67a86796646344" translate="yes" xml:space="preserve">
          <source>.DEFAULT_EXCEPTION_REPORTER_FILTER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f95de30a574b08c3a488cbbbfa46009c68f4af5" translate="yes" xml:space="preserve">
          <source>.DEFAULT_FILE_STORAGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74912d424d34b0328483bcf0f0a6f49b67ac5656" translate="yes" xml:space="preserve">
          <source>.DEFAULT_FROM_EMAIL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7591d8d64e5fcd32b5d839c7d3cfeaf076da1a7e" translate="yes" xml:space="preserve">
          <source>.DEFAULT_INDEX_TABLESPACE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adfa03e7ae7e3b2e6a4d7a66912d364c1236833d" translate="yes" xml:space="preserve">
          <source>.DEFAULT_TABLESPACE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf517ac8b0232eafec31f9eafa822312502bb5c" translate="yes" xml:space="preserve">
          <source>.DISALLOWED_USER_AGENTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9888361d7cb47595ef5de81418cc1caeecdf7ba" translate="yes" xml:space="preserve">
          <source>.EMAIL_BACKEND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c91bff3bf54ec4e296a83808349bfff35a13b3" translate="yes" xml:space="preserve">
          <source>.EMAIL_FILE_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55949907bb1ade4f7474cb29ec4beae77583222" translate="yes" xml:space="preserve">
          <source>.EMAIL_HOST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29d73a3bcca28a85fab8b957f486c05d9b4a939" translate="yes" xml:space="preserve">
          <source>.EMAIL_HOST_PASSWORD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18d10d7caeb832730053f0fad5efbb84f981846" translate="yes" xml:space="preserve">
          <source>.EMAIL_HOST_USER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc083029ec23933a70671b67c5126648465ba214" translate="yes" xml:space="preserve">
          <source>.EMAIL_PORT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7fa5594832d5df10236a2c25f22bf685b9875e" translate="yes" xml:space="preserve">
          <source>.EMAIL_SSL_CERTFILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed788ce3e219c52f6269ad923aa1b541fa1dc3be" translate="yes" xml:space="preserve">
          <source>.EMAIL_SSL_KEYFILE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291865d847e4fc250e7fbe19a49c42ffdbb3ccd6" translate="yes" xml:space="preserve">
          <source>.EMAIL_SUBJECT_PREFIX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1398e857deed39525174b3aa997faf1ad084442c" translate="yes" xml:space="preserve">
          <source>.EMAIL_TIMEOUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d164e823f1df81858d03833b739e9ce541c3cf" translate="yes" xml:space="preserve">
          <source>.EMAIL_USE_LOCALTIME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb3e6bff8124507a97ccb9f67f1a72260447817" translate="yes" xml:space="preserve">
          <source>.EMAIL_USE_SSL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4060e0a0390f90852e716a08dc17407555c9db" translate="yes" xml:space="preserve">
          <source>.EMAIL_USE_TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af63bef5034195f565248629435a96631443cff" translate="yes" xml:space="preserve">
          <source>.FILE_CHARSET</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e98070222f30dc07e6ebe2a15d9bfbbcb0fc2c" translate="yes" xml:space="preserve">
          <source>.FILE_UPLOAD_DIRECTORY_PERMISSIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d1254e5f92bf60e6d1b84860ed98be11758376" translate="yes" xml:space="preserve">
          <source>.FILE_UPLOAD_HANDLERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a582e09c4bb04d01f3bb3d380ed95063fe544be" translate="yes" xml:space="preserve">
          <source>.FILE_UPLOAD_MAX_MEMORY_SIZE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7e6a2b1efa638722cda91a659d244a50d5e74e" translate="yes" xml:space="preserve">
          <source>.FILE_UPLOAD_PERMISSIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c09cb52aa19573cc48fd14031d9351b70946f0c" translate="yes" xml:space="preserve">
          <source>.FILE_UPLOAD_TEMP_DIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7420e9d85766644979723f03c4bba8b2bffa7b" translate="yes" xml:space="preserve">
          <source>.FIRST_DAY_OF_WEEK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b0a3c0ff0192b8d7cc708acbf6db9a84e13a17" translate="yes" xml:space="preserve">
          <source>.FIXTURE_DIRS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edf1ac4882bc5cfdebc42748daca633c982c73e" translate="yes" xml:space="preserve">
          <source>.FORCE_SCRIPT_NAME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7bb804f4b0b97ad1b68a78efff3b08fd296b46" translate="yes" xml:space="preserve">
          <source>.FORMAT_MODULE_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a33b5dd437c36cb3b325cecccc192b55382b3d1" translate="yes" xml:space="preserve">
          <source>.FORM_RENDERER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c3fee8e54927ac75bdc0be81fc79e970b8b424" translate="yes" xml:space="preserve">
          <source>.GDAL_LIBRARY_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508e40638bbc381923b4ceedc3ba01c94694fd59" translate="yes" xml:space="preserve">
          <source>.GEOIP_CITY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145bf134b6078eddb3db76f3f6c5790c86e17b7b" translate="yes" xml:space="preserve">
          <source>.GEOIP_COUNTRY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b8d7f10f219eeae288436843f037e07d913cce" translate="yes" xml:space="preserve">
          <source>.GEOIP_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cec38c5e0f35e5e291783243e4a98d962e3a29e" translate="yes" xml:space="preserve">
          <source>.GEOS_LIBRARY_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29203d130240f12b058a7a83ba406b6e36e3e08a" translate="yes" xml:space="preserve">
          <source>.IGNORABLE_404_URLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f62eae62d48eb90a6386bf16108ea7979688a0" translate="yes" xml:space="preserve">
          <source>.INSTALLED_APPS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9beecf111db94730b50b208de1484b3c9e7b648c" translate="yes" xml:space="preserve">
          <source>.INTERNAL_IPS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248d01eb521ebc2cecee2bb71fd3acb8f16fe544" translate="yes" xml:space="preserve">
          <source>.LANGUAGES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef7ae6c94d0f9137f32c945197be3d508bb5c53" translate="yes" xml:space="preserve">
          <source>.LANGUAGES_BIDI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3c13c21e583b621e31f36a085076cd2d34995d" translate="yes" xml:space="preserve">
          <source>.LANGUAGE_CODE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ecd0bc3287039cc59cd4e3a94ebe529f8df931" translate="yes" xml:space="preserve">
          <source>.LANGUAGE_COOKIE_AGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7d7e7b12134f64104ef2fd2c997368811c2532" translate="yes" xml:space="preserve">
          <source>.LANGUAGE_COOKIE_DOMAIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f08cc25c4ee186517b4a1d4ff4657766699191f" translate="yes" xml:space="preserve">
          <source>.LANGUAGE_COOKIE_HTTPONLY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74d666f44bb5b23c6641497ca4fb5f068d87a33" translate="yes" xml:space="preserve">
          <source>.LANGUAGE_COOKIE_NAME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9adb28ad5e3d06f49ee13144329460ed7876a9" translate="yes" xml:space="preserve">
          <source>.LANGUAGE_COOKIE_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30091976b087163d94478ad60dc010be119e3fb7" translate="yes" xml:space="preserve">
          <source>.LANGUAGE_COOKIE_SAMESITE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1569f7dc2c6a3b02e12156212161386814c17f1c" translate="yes" xml:space="preserve">
          <source>.LANGUAGE_COOKIE_SECURE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a20f89d0ba2a150596c85478eeac47dcf95100" translate="yes" xml:space="preserve">
          <source>.LOCALE_PATHS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e3d4679d334807d6157a9901ac0cebd78be3c0" translate="yes" xml:space="preserve">
          <source>.LOGGING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d326bc410b3b85f96bb57ee8e944f9cd84804f9" translate="yes" xml:space="preserve">
          <source>.LOGGING_CONFIG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8027af4b1e910ee50f11199cc485456b4ad2d57" translate="yes" xml:space="preserve">
          <source>.LOGIN_REDIRECT_URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4420193dd7f3479ecd33692171d8da3f6891d0" translate="yes" xml:space="preserve">
          <source>.LOGIN_URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f424128c81e8d3ec00f619d0a2524c37c663fc" translate="yes" xml:space="preserve">
          <source>.LOGOUT_REDIRECT_URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb1f41bf11fa58e7bb7e1f600486d2dfbcf8f5d" translate="yes" xml:space="preserve">
          <source>.MANAGERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6a099b045f705db50536d73e9e390c926cbcd5" translate="yes" xml:space="preserve">
          <source>.MEDIA_ROOT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bd2ebd670343fc4c75f6f4ee30a068a2f371db" translate="yes" xml:space="preserve">
          <source>.MEDIA_URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0804c16a3571bf25b34409966effc00b40e24d52" translate="yes" xml:space="preserve">
          <source>.MESSAGE_LEVEL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f98b8eabb4ef7501c3173f8af9c61371277410" translate="yes" xml:space="preserve">
          <source>.MESSAGE_STORAGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebbe4103669bb2d79bc1fafd683700070777cef" translate="yes" xml:space="preserve">
          <source>.MESSAGE_TAGS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce8b7d29ccac913578a1665ae0f40c561be33f6" translate="yes" xml:space="preserve">
          <source>.MIDDLEWARE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8031de89d973bec9f5cf8d1e288830a6821a4224" translate="yes" xml:space="preserve">
          <source>.MIGRATION_MODULES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc5114f95da9f27b747a794bae7686e08b64f8d" translate="yes" xml:space="preserve">
          <source>.MONTH_DAY_FORMAT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f36a0b6288ea409b7bd87fd15132afdc711671" translate="yes" xml:space="preserve">
          <source>.NUMBER_GROUPING</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc05b4ed05d44d3225ec4eb3b1f3369580740df" translate="yes" xml:space="preserve">
          <source>.PASSWORD_HASHERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d56103a263cd416dadab7e5ee0e6e5f258b439" translate="yes" xml:space="preserve">
          <source>.PASSWORD_RESET_TIMEOUT_DAYS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15edf130ced53a157c36aa223600e102bb394fb" translate="yes" xml:space="preserve">
          <source>.PREPEND_WWW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5553443a8884a567e103af0001d053e237d00ac3" translate="yes" xml:space="preserve">
          <source>.ROOT_URLCONF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42c68a6beb505ebb1df63ae11fa5febcb35ffe0" translate="yes" xml:space="preserve">
          <source>.SECRET_KEY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5939a6a309612164a411d8fd43e8c9d5dff564ef" translate="yes" xml:space="preserve">
          <source>.SECURE_BROWSER_XSS_FILTER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b205804108aadc0a694c53d914103dc4aecf02cd" translate="yes" xml:space="preserve">
          <source>.SECURE_CONTENT_TYPE_NOSNIFF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfed85ee55515165879ac64a9db79359dd8c7f47" translate="yes" xml:space="preserve">
          <source>.SECURE_HSTS_INCLUDE_SUBDOMAINS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ff81b6d5c50102e5cc775f62fd03594a5dfb8f" translate="yes" xml:space="preserve">
          <source>.SECURE_HSTS_PRELOAD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c943edc8a346a403ac8672130c689e0b6ff2ab2b" translate="yes" xml:space="preserve">
          <source>.SECURE_HSTS_SECONDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d9b9aa1b1a6eacb95040cb52017d8e51ca2aa4" translate="yes" xml:space="preserve">
          <source>.SECURE_PROXY_SSL_HEADER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902be5148931af37f1a6bab5e781bb6ae2f73718" translate="yes" xml:space="preserve">
          <source>.SECURE_REDIRECT_EXEMPT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7237343380521ea6e0db0fb2fd6d45a2be79c0a0" translate="yes" xml:space="preserve">
          <source>.SECURE_REFERRER_POLICY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c84cbd4ad5c7fddce7071deb89ddbdd2c5f3aea" translate="yes" xml:space="preserve">
          <source>.SECURE_SSL_HOST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf90ec7f064c59fb18b024932a43864a1ec0132" translate="yes" xml:space="preserve">
          <source>.SECURE_SSL_REDIRECT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8466a7ae0da030e6bb0a6cac7852dba8d0774922" translate="yes" xml:space="preserve">
          <source>.SERIALIZATION_MODULES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5505c532a5058b8adc00ff532f2c4e960aefc0c5" translate="yes" xml:space="preserve">
          <source>.SERVER_EMAIL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a81f489f2817d03641ab7e6a80c873b4bdfdb3c" translate="yes" xml:space="preserve">
          <source>.SESSION_CACHE_ALIAS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd50804db28e81dd8a928530f01e4ac90d1ca393" translate="yes" xml:space="preserve">
          <source>.SESSION_COOKIE_AGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1792ff0794d3f4e0894730de3c8f7463f6263a11" translate="yes" xml:space="preserve">
          <source>.SESSION_COOKIE_DOMAIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7a015390ccca3acc9c5ccca66d90d8da969d24" translate="yes" xml:space="preserve">
          <source>.SESSION_COOKIE_HTTPONLY</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b3cb6e643fec24effc78730be4d44f3dbeb60c" translate="yes" xml:space="preserve">
          <source>.SESSION_COOKIE_NAME</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d9af0f10e51ab41fcfd3ebd5847c56bf048c8a" translate="yes" xml:space="preserve">
          <source>.SESSION_COOKIE_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc0967c092e17c7731e02a182803566842fb9dd" translate="yes" xml:space="preserve">
          <source>.SESSION_COOKIE_SAMESITE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fa8f0d1ac7b7cca7d9474c3bbd695c07639f1a" translate="yes" xml:space="preserve">
          <source>.SESSION_COOKIE_SECURE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc0a9eab0ce5c06b0adcb9021e042ddfaae4e3b" translate="yes" xml:space="preserve">
          <source>.SESSION_ENGINE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5644ce4f4ece59a9f5e361f018da37cbeba567" translate="yes" xml:space="preserve">
          <source>.SESSION_EXPIRE_AT_BROWSER_CLOSE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a062f3b0561f363cc493f4a59dba3842fee41f" translate="yes" xml:space="preserve">
          <source>.SESSION_FILE_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518f6fa0d6e4e1357e3a515f5434a52b3756c6a1" translate="yes" xml:space="preserve">
          <source>.SESSION_SAVE_EVERY_REQUEST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0950dc4cb460c98b5c232c78d326663dc82e100" translate="yes" xml:space="preserve">
          <source>.SESSION_SERIALIZER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc9e0d004256ab33732b4e3c90be38e9064a24f" translate="yes" xml:space="preserve">
          <source>.SHORT_DATETIME_FORMAT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cb74a259308e3532b3d44c0d9217bfa2a27f17" translate="yes" xml:space="preserve">
          <source>.SHORT_DATE_FORMAT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5fd6bcfd49e7f3c950fe3836f681581cfa4d38" translate="yes" xml:space="preserve">
          <source>.SIGNING_BACKEND</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6fcb56988deafa2b595504b415d0c88061dcec" translate="yes" xml:space="preserve">
          <source>.SILENCED_SYSTEM_CHECKS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dc6817803418730aeb5d310bc5f7cd328f7954" translate="yes" xml:space="preserve">
          <source>.SITE_ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc97afeb0ffd4361aba80aeca90a3650e7a43d32" translate="yes" xml:space="preserve">
          <source>.STATICFILES_DIRS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b2a15293f3a251afc90479ca102cd28a2b01fe" translate="yes" xml:space="preserve">
          <source>.STATICFILES_FINDERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47e2940b644f2288099e3eaaed3d523a730f982" translate="yes" xml:space="preserve">
          <source>.STATICFILES_STORAGE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3382211f69dad9a4cff681919f6a1334909829" translate="yes" xml:space="preserve">
          <source>.STATIC_ROOT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d01f4c59cce96fcd1eb8767221060e665c561a1" translate="yes" xml:space="preserve">
          <source>.STATIC_URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1662eda8557915ed983151a5afb53f51a849cea1" translate="yes" xml:space="preserve">
          <source>.TEMPLATES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d99e0c262f72e5d24091032c6d414e0f9d620f" translate="yes" xml:space="preserve">
          <source>.TEST_NON_SERIALIZED_APPS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227674446a8477135619a7fa3ebb8e9e63c54c96" translate="yes" xml:space="preserve">
          <source>.TEST_RUNNER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e05cc1b4c07000b19c220478857af81d85f9558" translate="yes" xml:space="preserve">
          <source>.THOUSAND_SEPARATOR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29fa79a8943241a240cd82c2981eaed8e4e1508" translate="yes" xml:space="preserve">
          <source>.TIME_FORMAT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8db88841890915d39832549f32d75ecc26f115" translate="yes" xml:space="preserve">
          <source>.TIME_INPUT_FORMATS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8378fb0eede76995e1383e663e9a35c1f6eda61" translate="yes" xml:space="preserve">
          <source>.USE_I18N</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca4d32a1ff711409e3de1cb6e5581341fcc544e" translate="yes" xml:space="preserve">
          <source>.USE_L10N</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28210a0b107c11a321c4f5c12c2c14442ec99af3" translate="yes" xml:space="preserve">
          <source>.USE_THOUSAND_SEPARATOR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52a3ea5b0567750273a96979ea2c55d1d1bd514" translate="yes" xml:space="preserve">
          <source>.USE_TZ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11306f68d999c2be4e32839aac0dbea3f284030" translate="yes" xml:space="preserve">
          <source>.USE_X_FORWARDED_HOST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cb191b94e7a139d446a2deb7115db3ea0af498" translate="yes" xml:space="preserve">
          <source>.USE_X_FORWARDED_PORT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d177c82e6f4f5d8b592f41f9d377120b19932f8" translate="yes" xml:space="preserve">
          <source>.WSGI_APPLICATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1568e907ae323d988563b98f38c5d1e33ee6ba" translate="yes" xml:space="preserve">
          <source>.X_FRAME_OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63454c6da3ab4e6fdac29ecbb78f7121eb84e1b7" translate="yes" xml:space="preserve">
          <source>.YEAR_MONTH_FORMAT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b25c3da5ad7dfa77375315e9c5faac32413307" translate="yes" xml:space="preserve">
          <source>.po files: Encoding and BOM usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa26196120bcb50574af563ee0d28842b54f0eb1" translate="yes" xml:space="preserve">
          <source>0004_add_uuid_field.py</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50365934ce4be9984598a6d6984d28fc548edfc" translate="yes" xml:space="preserve">
          <source>0005_populate_uuid_values.py</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04251fc1c7bea054f19bc30ab4e4e6c06cce4274" translate="yes" xml:space="preserve">
          <source>0006_remove_uuid_null.py</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5e8b32fee01a7718dcef99b332383da78fbdfb" translate="yes" xml:space="preserve">
          <source>1. For substring matching, all matches are done case-insensitively. That is a filter such as &lt;code&gt;filter(name__contains=&quot;aa&quot;)&lt;/code&gt; will match a name of &lt;code&gt;&quot;Aabb&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1113e50e8f123d15a71a48b4ebe42150593ad5e6" translate="yes" xml:space="preserve">
          <source>2. For strings containing characters outside the ASCII range, all exact string matches are performed case-sensitively, even when the case-insensitive options are passed into the query. So the &lt;a href=&quot;models/querysets#std:fieldlookup-iexact&quot;&gt;&lt;code&gt;iexact&lt;/code&gt;&lt;/a&gt; filter will behave exactly the same as the &lt;a href=&quot;models/querysets#std:fieldlookup-exact&quot;&gt;&lt;code&gt;exact&lt;/code&gt;&lt;/a&gt; filter in these cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df08ec041e6f889e72cfe0c0b5b1202847c53261" translate="yes" xml:space="preserve">
          <source>2.4, 2.3, 2.2, 2.1, 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad383062258b731b573d95c860c3e6fd930b660" translate="yes" xml:space="preserve">
          <source>2.5, 2.4, 2.3, 2.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535e8af4e70fd3c8242e463e66b5353893f35e85" translate="yes" xml:space="preserve">
          <source>3.7, 3.6, 3.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0540d96328a46b99dc9cddfb2d34ce7eed71373" translate="yes" xml:space="preserve">
          <source>404 errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1372a6f8ebabb8206bc5e52000f787af796915" translate="yes" xml:space="preserve">
          <source>404 errors are logged using the logging framework. By default, these log records are ignored, but you can use them for error reporting by writing a handler and &lt;a href=&quot;../topics/logging&quot;&gt;configuring logging&lt;/a&gt; appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67842fd8d95dcc6ef406d57810fc650381827204" translate="yes" xml:space="preserve">
          <source>5.2, 5.1, 5.0, 4.x</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2eae037c4f4a63116dcbdb3af688effd3b3ae6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#authentication-backends&quot;&gt;Authentication backends&lt;/a&gt; provide an extensible system for when a username and password stored with the user model need to be authenticated against a different service than Django&amp;rsquo;s default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac5313dc0e267097f9edf0554538e3d95a64a3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.conf.urls.i18n.i18n_patterns&quot;&gt;&lt;code&gt;i18n_patterns()&lt;/code&gt;&lt;/a&gt; is only allowed in a root URLconf. Using it within an included URLconf will throw an &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.ImproperlyConfigured&quot;&gt;&lt;code&gt;ImproperlyConfigured&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb216c81ce455b70a81eeb9e9142720a7689ba5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.admin.InlineModelAdmin.get_extra&quot;&gt;&lt;code&gt;InlineModelAdmin.get_extra()&lt;/code&gt;&lt;/a&gt; also allows you to customize the number of extra forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dd114093ad125a6bcc5e82384d77deb7717507" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.admin.InlineModelAdmin.get_max_num&quot;&gt;&lt;code&gt;InlineModelAdmin.get_max_num()&lt;/code&gt;&lt;/a&gt; also allows you to customize the maximum number of extra forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1776daf4fe57e177f9363279de2c7ab74f199acc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.admin.InlineModelAdmin.get_min_num&quot;&gt;&lt;code&gt;InlineModelAdmin.get_min_num()&lt;/code&gt;&lt;/a&gt; also allows you to customize the minimum number of displayed forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3745dac174687aca94e08a02d4c1a8d2433fc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.admin.InlineModelAdmin&quot;&gt;&lt;code&gt;InlineModelAdmin&lt;/code&gt;&lt;/a&gt; have a &lt;code&gt;media&lt;/code&gt; property that returns a list of &lt;code&gt;Media&lt;/code&gt; objects which store paths to the JavaScript files for the forms and/or formsets. If &lt;a href=&quot;../../settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt; it will return the uncompressed versions of the various JavaScript files, including &lt;code&gt;jquery.js&lt;/code&gt;; if not, it will return the &amp;lsquo;minified&amp;rsquo; versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c131c547c96bf4973b573b0b7f71f2fbd03bab5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.backends.ModelBackend.has_perm&quot;&gt;&lt;code&gt;has_perm()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.auth.backends.ModelBackend.get_all_permissions&quot;&gt;&lt;code&gt;get_all_permissions()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.auth.backends.ModelBackend.get_user_permissions&quot;&gt;&lt;code&gt;get_user_permissions()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.contrib.auth.backends.ModelBackend.get_group_permissions&quot;&gt;&lt;code&gt;get_group_permissions()&lt;/code&gt;&lt;/a&gt; allow an object to be passed as a parameter for object-specific permissions, but this backend does not implement them other than returning an empty set of permissions if &lt;code&gt;obj is not None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0261f8ed5cd3b400246bacc6e735ea75fe11d6aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.backends.ModelBackend.with_perm&quot;&gt;&lt;code&gt;with_perm()&lt;/code&gt;&lt;/a&gt; also allows an object to be passed as a parameter, but unlike others methods it returns an empty queryset if &lt;code&gt;obj is not None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a783dee15646b4dee0da243a8269ffda29eddd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; also takes an optional &lt;code&gt;login_url&lt;/code&gt; parameter. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96831447f3fdee898448dca47a2c10cc446f666" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.decorators.login_required&quot;&gt;&lt;code&gt;login_required()&lt;/code&gt;&lt;/a&gt; does the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df24ec3e66f8fb0a5999c018b10f32eb210e27c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.decorators.user_passes_test&quot;&gt;&lt;code&gt;user_passes_test()&lt;/code&gt;&lt;/a&gt; takes a required argument: a callable that takes a &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; object and returns &lt;code&gt;True&lt;/code&gt; if the user is allowed to view the page. Note that &lt;a href=&quot;#django.contrib.auth.decorators.user_passes_test&quot;&gt;&lt;code&gt;user_passes_test()&lt;/code&gt;&lt;/a&gt; does not automatically check that the &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; is not anonymous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41948d61354d89ac4b891b49421637c7d0e0e0e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.decorators.user_passes_test&quot;&gt;&lt;code&gt;user_passes_test()&lt;/code&gt;&lt;/a&gt; takes two optional arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0833c36d57ae7e4076629f3ad295154b2cec1d60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.AbstractUser&quot;&gt;&lt;code&gt;AbstractUser&lt;/code&gt;&lt;/a&gt; subclasses &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser&quot;&gt;&lt;code&gt;AbstractBaseUser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d56c374428d1c921c4f609a50a46113e2c0ac7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.AnonymousUser&quot;&gt;&lt;code&gt;django.contrib.auth.models.AnonymousUser&lt;/code&gt;&lt;/a&gt; is a class that implements the &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;django.contrib.auth.models.User&lt;/code&gt;&lt;/a&gt; interface, with these differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78345d177111858a35d6b5f6a3ee20a91910b2ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.BaseUserManager&quot;&gt;&lt;code&gt;BaseUserManager&lt;/code&gt;&lt;/a&gt; provides the following utility methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cc3713cfe544ca9ee0ec75ed19b4f22476d7d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.CustomUser.REQUIRED_FIELDS&quot;&gt;&lt;code&gt;REQUIRED_FIELDS&lt;/code&gt;&lt;/a&gt; now supports &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;s without a custom through model. Since there is no way to pass model instances during the &lt;a href=&quot;../../ref/django-admin#django-admin-createsuperuser&quot;&gt;&lt;code&gt;createsuperuser&lt;/code&gt;&lt;/a&gt; prompt, expect the user to enter IDs of existing instances of the class to which the model is related.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d729567687c2b999b5c5bf30070fc51340372a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; objects have the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a42d654c965f2a19f6e4fe8e9b14a9bc1b43923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; objects have the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d32f35a8f487dde048d1ac30f6ca0976935554c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt; objects have the standard data-access methods like any other &lt;a href=&quot;../models/instances&quot;&gt;Django model&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ae091b5680e7b76e43413c3e2e3ecf1501e133" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.PermissionsMixin&quot;&gt;&lt;code&gt;PermissionsMixin&lt;/code&gt;&lt;/a&gt; provides the following methods and attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a6282d6a069b299b9c3eb9b82304ecda8735c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; objects have the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b186ddef63aa2b7d3ad592c83cab0f8dfa8622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.User.get_username&quot;&gt;&lt;code&gt;get_username()&lt;/code&gt;&lt;/a&gt; always returns the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399b7741225d453f08b93fa79c6547c073b039fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.User.groups&quot;&gt;&lt;code&gt;groups&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.auth.models.User.user_permissions&quot;&gt;&lt;code&gt;user_permissions&lt;/code&gt;&lt;/a&gt; are always empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590ef1994dc1e8cd327635c54bdb4cc440e048b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.User.is_active&quot;&gt;&lt;code&gt;is_active&lt;/code&gt;&lt;/a&gt; is always &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a022b90ce8d2db5c0aac0500a7f6d0eb3415b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.User.is_anonymous&quot;&gt;&lt;code&gt;is_anonymous&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt; instead of &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4865e916d8770efbec551e7df34787aef2f2e064" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.User.is_authenticated&quot;&gt;&lt;code&gt;is_authenticated&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt; instead of &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c251d98f194bc4ab062d0ce6178e98dedc3db9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.User.is_staff&quot;&gt;&lt;code&gt;is_staff&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.auth.models.User.is_superuser&quot;&gt;&lt;code&gt;is_superuser&lt;/code&gt;&lt;/a&gt; are always &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc56ea4409851c5ad5cf50bfaee8ac8154f7ea8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.User.set_password&quot;&gt;&lt;code&gt;set_password()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.auth.models.User.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../models/instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;delete()&lt;/code&gt;&lt;/a&gt; raise &lt;a href=&quot;https://docs.python.org/3/library/exceptions.html#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e63dd2fa4dadbb5e5b6e9b11f866cb680a5de03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.auth.models.User.username&quot;&gt;&lt;code&gt;username&lt;/code&gt;&lt;/a&gt; is always the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75be684386062f4e8805315dfce3c99cc7cc94e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; also has a custom manager, &lt;a href=&quot;#django.contrib.contenttypes.models.ContentTypeManager&quot;&gt;&lt;code&gt;ContentTypeManager&lt;/code&gt;&lt;/a&gt;, which adds the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d469c2c25bff0271f96c046d8fc31480037a048" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType.app_label&quot;&gt;&lt;code&gt;app_label&lt;/code&gt;&lt;/a&gt; will be set to &lt;code&gt;'sites'&lt;/code&gt; (the last part of the Python path &lt;code&gt;django.contrib.sites&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e81add295f7d780147c37d62a54ec6d2dde1ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.contenttypes.models.ContentType.model&quot;&gt;&lt;code&gt;model&lt;/code&gt;&lt;/a&gt; will be set to &lt;code&gt;'site'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9118d1ce497ef0b2bafaef39076409dd5e18a6f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.gis.gdal.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; is a wrapper for the OGR data source object that supports reading data from a variety of OGR-supported geospatial file formats and data sources using a consistent interface. Each data source is represented by a &lt;a href=&quot;#django.contrib.gis.gdal.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; object which contains one or more layers of data. Each layer, represented by a &lt;a href=&quot;#django.contrib.gis.gdal.Layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt; object, contains some number of geographic features (&lt;a href=&quot;#django.contrib.gis.gdal.Feature&quot;&gt;&lt;code&gt;Feature&lt;/code&gt;&lt;/a&gt;), information about the type of features contained in that layer (e.g. points, polygons, etc.), as well as the names and types of any additional fields (&lt;a href=&quot;#django.contrib.gis.gdal.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt;) of data that may be associated with each feature in that layer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18816b5ed86f8370d03e750f0b7e78f0d8c77469" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; is a wrapper for the GDAL raster source object that supports reading data from a variety of GDAL-supported geospatial file formats and data sources using a consistent interface. Each data source is represented by a &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; object which contains one or more layers of data named bands. Each band, represented by a &lt;a href=&quot;#django.contrib.gis.gdal.GDALBand&quot;&gt;&lt;code&gt;GDALBand&lt;/code&gt;&lt;/a&gt; object, contains georeferenced image data. For example, an RGB image is represented as three bands: one for red, one for green, and one for blue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3f4588cb28c64f386b00cac17d36e805aab360" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; objects are created in the virtual filesystem when a &lt;code&gt;bytes&lt;/code&gt; object is provided as input, or when the file path starts with &lt;code&gt;/vsimem/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c455c26f1ff8c488d83eb278c3d2a637fb3441b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; objects share similar functionality with &lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects and are thin wrappers around OGR&amp;rsquo;s internal geometry representation. Thus, they allow for more efficient access to data when using &lt;a href=&quot;#django.contrib.gis.gdal.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt;. Unlike its GEOS counterpart, &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; supports spatial reference systems and coordinate transformation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b54e63fe736a8fad2e42f8ae1572419b2adc6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects are &amp;lsquo;Pythonic&amp;rsquo;, in other words components may be accessed, modified, and iterated over using standard Python conventions. For example, you can iterate over the coordinates in a &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4691857cb5c0c7682d3910bd795c8273eac1f561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects may be created in a few ways. The first is to simply instantiate the object on some spatial input &amp;ndash; the following are examples of creating the same geometry from WKT, HEX, WKB, and GeoJSON:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbf8947bea1d550cacca22926e8a6ca71bf6e8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.gis.measure.Area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; attributes are the same as &lt;a href=&quot;#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; attributes, except they are prefixed with &lt;code&gt;sq_&lt;/code&gt; (area units are square in nature). For example, &lt;code&gt;Area(sq_m=2)&lt;/code&gt; creates an &lt;a href=&quot;#django.contrib.gis.measure.Area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; object representing two square meters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87ed95a1f8fb7c32afda941da838663f7b569fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.gis.measure.Distance&quot;&gt;&lt;code&gt;Distance&lt;/code&gt;&lt;/a&gt; objects may be instantiated using a keyword argument indicating the context of the units. In the example below, two different distance objects are instantiated in units of kilometers (&lt;code&gt;km&lt;/code&gt;) and miles (&lt;code&gt;mi&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7c413ac580f04673732d5446fcf2fe0b16121c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.messages.get_messages&quot;&gt;&lt;code&gt;get_messages()&lt;/code&gt;&lt;/a&gt; will return an instance of the configured storage backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee15a389fa23217c6a635c635c582e40f05da46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.messages.storage.fallback.FallbackStorage&quot;&gt;&lt;code&gt;FallbackStorage&lt;/code&gt;&lt;/a&gt; is the default storage class. If it isn&amp;rsquo;t suitable to your needs, you can select another storage class by setting &lt;a href=&quot;../settings#std:setting-MESSAGE_STORAGE&quot;&gt;&lt;code&gt;MESSAGE_STORAGE&lt;/code&gt;&lt;/a&gt; to its full import path, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7a6a36b5dce6392115f1b2e7db7bf438600b7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.postgres.fields.JSONField&quot;&gt;&lt;code&gt;JSONField&lt;/code&gt;&lt;/a&gt; shares lookups relating to containment and keys with &lt;a href=&quot;#django.contrib.postgres.fields.HStoreField&quot;&gt;&lt;code&gt;HStoreField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027e47438e893cf2925317d95fa145eb69ec4bdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.postgres.forms.RangeWidget&quot;&gt;&lt;code&gt;RangeWidget&lt;/code&gt;&lt;/a&gt; has one required argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f7fb48a0fc0999cf62cab4254bc56354544734" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.sitemaps.Sitemap&quot;&gt;&lt;code&gt;Sitemap&lt;/code&gt;&lt;/a&gt; classes must subclass &lt;code&gt;django.contrib.sitemaps.Sitemap&lt;/code&gt;. They can live anywhere in your codebase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5413ace5adc04dd19332864ded73b4f7bfa4ff55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.changefreq&quot;&gt;&lt;code&gt;changefreq&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt; are class attributes corresponding to &lt;code&gt;&amp;lt;changefreq&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;priority&amp;gt;&lt;/code&gt; elements, respectively. They can be made callable as functions, as &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.lastmod&quot;&gt;&lt;code&gt;lastmod&lt;/code&gt;&lt;/a&gt; was in the example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885c366cf688d6cbec8e5eed94ed96e7ead1401b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.items&quot;&gt;&lt;code&gt;items()&lt;/code&gt;&lt;/a&gt; is a method that returns a &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-sequence&quot;&gt;sequence&lt;/a&gt; or &lt;code&gt;QuerySet&lt;/code&gt; of objects. The objects returned will get passed to any callable methods corresponding to a sitemap property (&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.location&quot;&gt;&lt;code&gt;location&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.lastmod&quot;&gt;&lt;code&gt;lastmod&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.changefreq&quot;&gt;&lt;code&gt;changefreq&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#django.contrib.sitemaps.Sitemap.priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d7a9a134b45e85afaa4940e2691f0c1dda517b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.sitemaps.Sitemap.lastmod&quot;&gt;&lt;code&gt;lastmod&lt;/code&gt;&lt;/a&gt; should return a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bca68580c1d7e19a3128a73d92b33d7d5170633" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.contrib.sitemaps.ping_google&quot;&gt;&lt;code&gt;ping_google()&lt;/code&gt;&lt;/a&gt; raises the exception &lt;code&gt;django.contrib.sitemaps.SitemapNotFound&lt;/code&gt; if it cannot determine your sitemap URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="015fdf8383cdbb2dc17e7523a8117b8266349721" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.core.files.File&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects have the following attributes and methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b564c0223bcfae5ab716818b665cfa35c725ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.core.files.storage.DefaultStorage&quot;&gt;&lt;code&gt;DefaultStorage&lt;/code&gt;&lt;/a&gt; provides lazy access to the current default storage system as defined by &lt;a href=&quot;../settings#std:setting-DEFAULT_FILE_STORAGE&quot;&gt;&lt;code&gt;DEFAULT_FILE_STORAGE&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#django.core.files.storage.DefaultStorage&quot;&gt;&lt;code&gt;DefaultStorage&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;#django.core.files.storage.get_storage_class&quot;&gt;&lt;code&gt;get_storage_class()&lt;/code&gt;&lt;/a&gt; internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39834fd2e19a907a2e6f6e19664e86a90d454318" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; is responsible for creating the email message itself. The &lt;a href=&quot;#topic-email-backends&quot;&gt;email backend&lt;/a&gt; is then responsible for sending the email.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba66a6c012fb0a5ef463ef801b0a65f7e3f08417" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.core.management.BaseCommand&quot;&gt;&lt;code&gt;BaseCommand&lt;/code&gt;&lt;/a&gt; has a few methods that can be overridden but only the &lt;a href=&quot;#django.core.management.BaseCommand.handle&quot;&gt;&lt;code&gt;handle()&lt;/code&gt;&lt;/a&gt; method must be implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d15e1ea33e79ac80378fa258b967aa4b7330c0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; has one extra required argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a73cfd2e327b0d684aea5953393aa11496df5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.Field.null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; has no effect since there is no way to require a relationship at the database level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f9bbdf43eca2eccffd47158f117cb764b80d48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt; instances are created in your database as &lt;code&gt;varchar&lt;/code&gt; columns with a default max length of 100 characters. As with other fields, you can change the maximum length using the &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ee024c0cb4f77bec579fe9de743fe62a7c0a79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.FilePathField&quot;&gt;&lt;code&gt;FilePathField&lt;/code&gt;&lt;/a&gt; instances are created in your database as &lt;code&gt;varchar&lt;/code&gt; columns with a default max length of 100 characters. As with other fields, you can change the maximum length using the &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523c89c0151da41803a33e6b33d61f979e0609a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; accepts other arguments that define the details of how the relation works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d4b1b38d060c12404a59cc708823a5816d2d01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; instances are created in your database as &lt;code&gt;varchar&lt;/code&gt; columns with a default max length of 100 characters. As with other fields, you can change the maximum length using the &lt;a href=&quot;#django.db.models.CharField.max_length&quot;&gt;&lt;code&gt;max_length&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308b5195644fccb4c4aaa05fcb6496ae776c319d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.Index.name&quot;&gt;&lt;code&gt;Index.name&lt;/code&gt;&lt;/a&gt; is required when using &lt;code&gt;condition&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570aa5d826447ceb3b2fb71eafa7d16eccdd8649" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.Index.name&quot;&gt;&lt;code&gt;Index.name&lt;/code&gt;&lt;/a&gt; is required when using &lt;code&gt;opclasses&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a47f15d33bb49c9c727690971d42bfdfa9bebe6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.Lookup&quot;&gt;&lt;code&gt;Lookup&lt;/code&gt;&lt;/a&gt;: to lookup a field (e.g. the &lt;code&gt;exact&lt;/code&gt; of &lt;code&gt;field_name__exact&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6fa01f6a81d64f70398308532b7a400cb67daf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; accepts an extra set of arguments &amp;ndash; all optional &amp;ndash; that control how the relationship functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e74b66ea424de0d957725d9b02949ad8b96fb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; does not support &lt;a href=&quot;#django.db.models.Field.validators&quot;&gt;&lt;code&gt;validators&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81609bda6520862a19fdd65259befe9e459f4f42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.Transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt;: to transform a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ed92601053b1b5b4aefffc380a18c87a8ae152" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.query.QuerySet.exists&quot;&gt;&lt;code&gt;exists()&lt;/code&gt;&lt;/a&gt; is useful for searches relating to both object membership in a &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; and to the existence of any objects in a &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;, particularly in the context of a large &lt;a href=&quot;#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f5e36cedd5679a97cc31f27e1458346886f2f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.query.QuerySet.only&quot;&gt;&lt;code&gt;QuerySet.only()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.query.QuerySet.prefetch_related&quot;&gt;&lt;code&gt;prefetch_related()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f38325ca51a386cc128254c7b5abcc7410a8e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.models.query.QuerySet.update&quot;&gt;&lt;code&gt;QuerySet.update()&lt;/code&gt;&lt;/a&gt; is used to save the changes, so this is more efficient than iterating through the list of models and calling &lt;code&gt;save()&lt;/code&gt; on each of them, but it has a few caveats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7598d06224f9dbee2a95541fd96360cfc4db995a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.db.transaction.TransactionManagementError&quot;&gt;&lt;code&gt;TransactionManagementError&lt;/code&gt;&lt;/a&gt; is raised for any and all problems related to database transactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a811bc839feed821c04e9f11665d15232ccecd4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.forms.MultiWidget&quot;&gt;&lt;code&gt;MultiWidget&lt;/code&gt;&lt;/a&gt; has one required argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae44127fc97b68c427c50e53356c251cab05b3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt; widgets are used by default on &lt;a href=&quot;fields#django.forms.ChoiceField&quot;&gt;&lt;code&gt;ChoiceField&lt;/code&gt;&lt;/a&gt; fields. The choices displayed on the widget are inherited from the &lt;a href=&quot;fields#django.forms.ChoiceField&quot;&gt;&lt;code&gt;ChoiceField&lt;/code&gt;&lt;/a&gt; and changing &lt;a href=&quot;fields#django.forms.ChoiceField.choices&quot;&gt;&lt;code&gt;ChoiceField.choices&lt;/code&gt;&lt;/a&gt; will update &lt;a href=&quot;#django.forms.Select.choices&quot;&gt;&lt;code&gt;Select.choices&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a50884f9d64babf4b544412a91913241365db5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.forms.formsets.BaseFormSet&quot;&gt;&lt;code&gt;BaseFormSet&lt;/code&gt;&lt;/a&gt; also provides an &lt;a href=&quot;#django.forms.formsets.BaseFormSet.ordering_widget&quot;&gt;&lt;code&gt;ordering_widget&lt;/code&gt;&lt;/a&gt; attribute and &lt;a href=&quot;#django.forms.formsets.BaseFormSet.get_ordering_widget&quot;&gt;&lt;code&gt;get_ordering_widget()&lt;/code&gt;&lt;/a&gt; method that control the widget used with &lt;a href=&quot;#django.forms.formsets.BaseFormSet.can_order&quot;&gt;&lt;code&gt;can_order&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571fd0c5d3e5eb602b41d8144c4357da8d50a09a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.http.FileResponse&quot;&gt;&lt;code&gt;FileResponse&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;#django.http.StreamingHttpResponse&quot;&gt;&lt;code&gt;StreamingHttpResponse&lt;/code&gt;&lt;/a&gt; optimized for binary files. It uses &lt;a href=&quot;https://www.python.org/dev/peps/pep-3333/#optional-platform-specific-file-handling&quot;&gt;wsgi.file_wrapper&lt;/a&gt; if provided by the wsgi server, otherwise it streams the file out in small chunks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40468d491deaa34a30bae33c7c658c5b0148df7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.http.HttpRequest.headers&quot;&gt;&lt;code&gt;HttpRequest.headers&lt;/code&gt;&lt;/a&gt; is a simpler way to access all HTTP-prefixed headers, plus &lt;code&gt;CONTENT_LENGTH&lt;/code&gt; and &lt;code&gt;CONTENT_TYPE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a81b9f5d68fb3e41e2302a858c2546c77efca5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.http.QueryDict&quot;&gt;&lt;code&gt;QueryDict&lt;/code&gt;&lt;/a&gt; implements all the standard dictionary methods because it&amp;rsquo;s a subclass of dictionary. Exceptions are outlined here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e952e5e499f33c0ba199853de3f8c7371901cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.http.StreamingHttpResponse&quot;&gt;&lt;code&gt;StreamingHttpResponse&lt;/code&gt;&lt;/a&gt; should only be used in situations where it is absolutely required that the whole content isn&amp;rsquo;t iterated before transferring the data to the client. Because the content can&amp;rsquo;t be accessed, many middleware can&amp;rsquo;t function normally. For example the &lt;code&gt;ETag&lt;/code&gt; and &lt;code&gt;Content-Length&lt;/code&gt; headers can&amp;rsquo;t be generated for streaming responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aadf8f907188566a52348469689934db2acd454" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.http.UnreadablePostError&quot;&gt;&lt;code&gt;UnreadablePostError&lt;/code&gt;&lt;/a&gt; is raised when a user cancels an upload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8e1b8b22b4e4958cbcde602c93855e1732245a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;django.template.backends.django.DjangoTemplates&lt;/code&gt;&lt;/a&gt; is a thin wrapper adapting &lt;a href=&quot;../ref/templates/api#django.template.Engine&quot;&gt;&lt;code&gt;django.template.Engine&lt;/code&gt;&lt;/a&gt; to Django&amp;rsquo;s template backend API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf565681016c57a501fc8899c1c703e324ee25c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.template.loaders.cached.Loader&quot;&gt;&lt;code&gt;django.template.loaders.cached.Loader&lt;/code&gt;&lt;/a&gt; requires all of its wrapped loaders to set this attribute, typically by instantiating the &lt;code&gt;Origin&lt;/code&gt; with &lt;code&gt;loader=self&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6af1f92f23c989ddbe00629bf378d776fc7fe6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.test.SimpleTestCase&quot;&gt;&lt;code&gt;SimpleTestCase&lt;/code&gt;&lt;/a&gt; disallows database queries by default. This helps to avoid executing write queries which will affect other tests since each &lt;code&gt;SimpleTestCase&lt;/code&gt; test isn&amp;rsquo;t run in a transaction. If you aren&amp;rsquo;t concerned about this problem, you can disable this behavior by setting the &lt;code&gt;databases&lt;/code&gt; class attribute to &lt;code&gt;'__all__'&lt;/code&gt; on your test class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b08b4cd3bfda334a7ce700b8e5cb7079e4d074f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#django.test.client.RedirectCycleError&quot;&gt;&lt;code&gt;RedirectCycleError&lt;/code&gt;&lt;/a&gt; is raised when the test client detects a loop or an overly long chain of redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2792e954b77615913c3613a3f384db364ccb2154" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#hooking-adminsite-to-urlconf&quot;&gt;Hook the admin&amp;rsquo;s URLs into your URLconf&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980dc19fabebe720cfa0ce90d13a1dba08099efa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#postgresapp&quot;&gt;Postgres.app&lt;/a&gt; (easiest and recommended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde33782a6708d9214de6fa05784c268dde22729" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#std:fieldlookup-hstorefield.contained_by&quot;&gt;&lt;code&gt;contained_by&lt;/code&gt;&lt;/a&gt; (accepts any JSON rather than just a dictionary of strings)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04d3aee0b8f0a58b9603609835d805244428259" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#std:fieldlookup-hstorefield.contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; (accepts any JSON rather than just a dictionary of strings)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b24eb8fa34725dbae0fa48a81d75cfa82abb67e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#std:setting-DATETIME_FORMAT&quot;&gt;&lt;code&gt;DATETIME_FORMAT&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baba5d95bff5ac4b28b264bd0a63c0e4b57639fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; must have different values. Before &lt;a href=&quot;#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; was introduced, it was common to rely or fallback on &lt;a href=&quot;#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; to also serve static files; however, since this can have serious security implications, there is a validation check to prevent it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb0bd04cf229603e2598a62d6bf7dd67cd60ae6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt; must have different values. See &lt;a href=&quot;#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3904e4389ead36cabefb6caee45b71ebf973f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#std:setting-USE_I18N&quot;&gt;&lt;code&gt;USE_I18N&lt;/code&gt;&lt;/a&gt; must be active for this setting to have any effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca87e7dbeeffd0f2dc622a8c7eee0009a1fdb10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#std:setting-USE_X_FORWARDED_HOST&quot;&gt;&lt;code&gt;USE_X_FORWARDED_HOST&lt;/code&gt;&lt;/a&gt; takes priority over this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b39e5dae193bdc3659a80dac5f426dd5d5c71c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#std:templatetag-if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; tags may also use the operators &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;in&lt;/code&gt;, &lt;code&gt;not in&lt;/code&gt;, &lt;code&gt;is&lt;/code&gt;, and &lt;code&gt;is not&lt;/code&gt; which work as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81713f562956e33cd9d6c59442935e7dc61f6228" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#std:templatetag-if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; tags may use &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt; or &lt;code&gt;not&lt;/code&gt; to test a number of variables or to negate a given variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0413deb4fd0c50004a33f3f13b0a822f46107a3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../../howto/windows&quot;&gt;Install Python&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6273afabc99e0808f9a94c4873febf9b5e6a1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../../settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt; configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e7377885d7afc07b912735382c9172f6296042" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../models/expressions&quot;&gt;Query expressions&lt;/a&gt; may be used in &lt;code&gt;admin_order_field&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038435b4a6bccc7d7b8d42f4ef1de2a01811fe73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../models/indexes#django.db.models.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../models/fields#django.db.models.Field.db_index&quot;&gt;&lt;code&gt;Field.db_index&lt;/code&gt;&lt;/a&gt; both create a B-tree index, which isn&amp;rsquo;t particularly helpful when querying complex data types. Indexes such as &lt;a href=&quot;indexes#django.contrib.postgres.indexes.GinIndex&quot;&gt;&lt;code&gt;GinIndex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;indexes#django.contrib.postgres.indexes.GistIndex&quot;&gt;&lt;code&gt;GistIndex&lt;/code&gt;&lt;/a&gt; are better suited, though the index choice is dependent on the queries that you&amp;rsquo;re using. Generally, GiST may be a good choice for the &lt;a href=&quot;#range-fields&quot;&gt;range fields&lt;/a&gt; and &lt;a href=&quot;#django.contrib.postgres.fields.HStoreField&quot;&gt;&lt;code&gt;HStoreField&lt;/code&gt;&lt;/a&gt;, and GIN may be helpful for &lt;a href=&quot;#django.contrib.postgres.fields.ArrayField&quot;&gt;&lt;code&gt;ArrayField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.contrib.postgres.fields.JSONField&quot;&gt;&lt;code&gt;JSONField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1be8458fef586a6f4087f567ca9575163b10416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/class-based-views/base#django.views.generic.base.TemplateView&quot;&gt;&lt;code&gt;TemplateView&lt;/code&gt;&lt;/a&gt; certainly is useful, but Django&amp;rsquo;s generic views really shine when it comes to presenting views of your database content. Because it&amp;rsquo;s such a common task, Django comes with a handful of built-in generic views to help generate list and detail views of objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22004968dde61a08b0ad5ffac56ee7c3f6f1261" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; provides built-in pagination, but you might want to paginate a list of objects that are all linked (by a foreign key) to another object. In our publishing example, you might want to paginate through all the books by a particular publisher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226f04467ae48950aa95efef7812a723d99616b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/class-based-views/mixins-multiple-object#django.views.generic.list.MultipleObjectMixin&quot;&gt;&lt;code&gt;MultipleObjectMixin&lt;/code&gt;&lt;/a&gt; also overrides &lt;a href=&quot;../../ref/class-based-views/mixins-simple#django.views.generic.base.ContextMixin.get_context_data&quot;&gt;&lt;code&gt;get_context_data()&lt;/code&gt;&lt;/a&gt; to include appropriate context variables for pagination (providing dummies if pagination is disabled). It relies on &lt;code&gt;object_list&lt;/code&gt; being passed in as a keyword argument, which &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt; arranges for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526e5cea0c1d7da10039b8ee0d7176faf80240b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.InlineModelAdmin&quot;&gt;&lt;code&gt;InlineModelAdmin&lt;/code&gt;&lt;/a&gt; objects can be handled in a similar fashion. They require three customized methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3ca5252b2bcf65d379ebf48e65788854306ef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.Group&quot;&gt;&lt;code&gt;django.contrib.auth.models.Group&lt;/code&gt;&lt;/a&gt; models are a generic way of categorizing users so you can apply permissions, or some other label, to those users. A user can belong to any number of groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4304f4da9ad38473b43f34fca9a26ed2f7b18f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; objects are the core of the authentication system. They typically represent the people interacting with your site and are used to enable things like restricting access, registering user profiles, associating content with creators etc. Only one class of user exists in Django&amp;rsquo;s authentication framework, i.e., &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_superuser&quot;&gt;&lt;code&gt;'superusers'&lt;/code&gt;&lt;/a&gt; or admin &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User.is_staff&quot;&gt;&lt;code&gt;'staff'&lt;/code&gt;&lt;/a&gt; users are just user objects with special attributes set, not different classes of user objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b6e7028ac9c304f2857f342039d5d0b51c52db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; objects have two many-to-many fields: &lt;code&gt;groups&lt;/code&gt; and &lt;code&gt;user_permissions&lt;/code&gt;. &lt;a href=&quot;../../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt; objects can access their related objects in the same way as any other &lt;a href=&quot;../db/models&quot;&gt;Django model&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d672ace301eb2ac5f764bdb696698c77be8346" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt; provides a convenience management command for gathering static files in a single directory so you can serve them easily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7471ee57eb1f709c970b8358f4b782f12b62ea55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/django-admin#cmdoption-test-exclude-tag&quot;&gt;&lt;code&gt;test --exclude-tag&lt;/code&gt;&lt;/a&gt; has precedence over &lt;a href=&quot;../../ref/django-admin#cmdoption-test-tag&quot;&gt;&lt;code&gt;test --tag&lt;/code&gt;&lt;/a&gt;, so if a test has two tags and you select one of them and exclude the other, the test won&amp;rsquo;t be run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0ada44605698fa7dc2175a97be183335ccb5e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/django-admin#django-admin-changepassword&quot;&gt;&lt;code&gt;manage.py changepassword *username*&lt;/code&gt;&lt;/a&gt; offers a method of changing a user&amp;rsquo;s password from the command line. It prompts you to change the password of a given user which you must enter twice. If they both match, the new password will be changed immediately. If you do not supply a user, the command will attempt to change the password whose username matches the current system user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45839df3d37b2ab0d6ae7a9e68361cb09b2b561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t understand the syntax of Jinja2 templates. To extract strings from a project containing Jinja2 templates, use &lt;a href=&quot;http://babel.pocoo.org/en/latest/messages.html#message-extraction&quot;&gt;Message Extracting&lt;/a&gt; from &lt;a href=&quot;http://babel.pocoo.org/&quot;&gt;Babel&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f586e83130e6889b35d863babfa1949b3f361f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; always creates migrations for model changes, but if &lt;code&gt;allow_migrate()&lt;/code&gt; returns &lt;code&gt;False&lt;/code&gt;, any migration operations for the &lt;code&gt;model_name&lt;/code&gt; will be silently skipped when running &lt;a href=&quot;../../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;db&lt;/code&gt;. Changing the behavior of &lt;code&gt;allow_migrate()&lt;/code&gt; for models that already have migrations may result in broken foreign keys, extra tables, or missing tables. When &lt;a href=&quot;../../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt; verifies the migration history, it skips databases where no app is allowed to migrate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a9d0feb41ae81d45e5a7f79c5b92c86ef5b602" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/forms/fields#django.forms.BooleanField&quot;&gt;&lt;code&gt;BooleanField&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../ref/forms/fields#django.forms.NullBooleanField&quot;&gt;&lt;code&gt;NullBooleanField&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;null=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6ad6b0d2fe85958138bfbc02c73819967b02fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;max_length&lt;/code&gt; set to the model field&amp;rsquo;s &lt;code&gt;max_length&lt;/code&gt; and &lt;a href=&quot;../../ref/forms/fields#django.forms.CharField.empty_value&quot;&gt;&lt;code&gt;empty_value&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;None&lt;/code&gt; if &lt;code&gt;null=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347d12908d2b0adfceb034d34c9b1cc0fc4657fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;widget=forms.Textarea&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1869fe8f59e2e1ee6c62d7800283037bbf86b31b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/forms/fields#django.forms.CharField&quot;&gt;&lt;code&gt;CharField&lt;/code&gt;&lt;/a&gt;, if &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.editable&quot;&gt;&lt;code&gt;editable&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt; on the model field, otherwise not represented in the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4aefa8e769c0d23e55fde595df34700702109c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/forms/fields#django.forms.IntegerField&quot;&gt;&lt;code&gt;IntegerField&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;min_value&lt;/code&gt; set to -9223372036854775808 and &lt;code&gt;max_value&lt;/code&gt; set to 9223372036854775807.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5195b2926f1d2d60dc239044cb9aed35f382b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/forms/fields#django.forms.ModelChoiceField&quot;&gt;&lt;code&gt;ModelChoiceField&lt;/code&gt;&lt;/a&gt; (see below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222e98da26008fa2f94059035d6b212744a9574e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/forms/fields#django.forms.ModelMultipleChoiceField&quot;&gt;&lt;code&gt;ModelMultipleChoiceField&lt;/code&gt;&lt;/a&gt; (see below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb20c64f7370c2c4d28f1d6b4c8ebc7b30d2be7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/forms/models#django.forms.models.inlineformset_factory&quot;&gt;&lt;code&gt;inlineformset_factory()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;../../ref/forms/models#django.forms.models.modelformset_factory&quot;&gt;&lt;code&gt;modelformset_factory()&lt;/code&gt;&lt;/a&gt; and marks &lt;code&gt;can_delete=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294e527d613d40bad59a969a3121c42615f70db6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/forms/models#django.forms.models.modelformset_factory&quot;&gt;&lt;code&gt;modelformset_factory()&lt;/code&gt;&lt;/a&gt; uses &lt;a href=&quot;../../ref/forms/formsets#django.forms.formsets.formset_factory&quot;&gt;&lt;code&gt;formset_factory()&lt;/code&gt;&lt;/a&gt; to generate formsets. This means that a model formset is an extension of a basic formset that knows how to interact with a particular model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771ec5be28d5a916dab8d7b02e19fae8f5fdcf90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/middleware#django.contrib.auth.middleware.AuthenticationMiddleware&quot;&gt;&lt;code&gt;AuthenticationMiddleware&lt;/code&gt;&lt;/a&gt; associates users with requests using sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5cbe3b3e6569abba23e545985c265e4202129d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/middleware#django.contrib.sessions.middleware.SessionMiddleware&quot;&gt;&lt;code&gt;SessionMiddleware&lt;/code&gt;&lt;/a&gt; manages &lt;a href=&quot;../http/sessions&quot;&gt;sessions&lt;/a&gt; across requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0e10ca3b0c0e74407befde0d559a5a6c52a2ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; fields accept a number of extra arguments which are explained in &lt;a href=&quot;../../ref/models/fields#foreign-key-arguments&quot;&gt;the model field reference&lt;/a&gt;. These options help define how the relationship should work; all are optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b541bd2b20547c4afe85751d621050a921af984e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; requires a positional argument: the class to which the model is related.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dbf5b9da5ec0220b789c9289edf6781f6dbb1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; require the first argument to be a model class, so use the &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.verbose_name&quot;&gt;&lt;code&gt;verbose_name&lt;/code&gt;&lt;/a&gt; keyword argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f17ca1e83e48afbc843ef97539b44429183970" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; fields also accept a number of extra arguments which are explained in &lt;a href=&quot;../../ref/models/fields#manytomany-arguments&quot;&gt;the model field reference&lt;/a&gt;. These options help define how the relationship should work; all are optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde9fe3ad717227efaba07832f3b29680df000e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; requires a positional argument: the class to which the model is related.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff60a069090616f092254d2b601cb2fa94ae651a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; classes used to automatically become the primary key on a model. This is no longer true (although you can manually pass in the &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.primary_key&quot;&gt;&lt;code&gt;primary_key&lt;/code&gt;&lt;/a&gt; argument if you like). Thus, it&amp;rsquo;s now possible to have multiple fields of type &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; on a single model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8337c284f36a8ed52a21a7506c111462d262b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; fields also accept an optional &lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField.parent_link&quot;&gt;&lt;code&gt;parent_link&lt;/code&gt;&lt;/a&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebeb5abe7d9ded175db40b5d4619da0356b28ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; requires a positional argument: the class to which the model is related.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddf775924cd402497d32d922ce0c777ba11fac9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; takes a number of advanced options not described here. See the documentation for &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt; for complete details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8207dff5651acef5dccaa2997ba1689fa0d390" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.explain&quot;&gt;&lt;code&gt;QuerySet.explain()&lt;/code&gt;&lt;/a&gt; gives you detailed information about how the database executes a query, including indexes and joins that are used. These details may help you find queries that could be rewritten more efficiently, or identify indexes that could be added to improve performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49da86cbd43b18e5e4ed614ecff70ddc3b3db235" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt; will always give you a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt;, even if only a single object matches the query - in this case, it will be a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; containing a single element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04712d8773cb566ea8e31a1ffdd793fb9827263" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/settings#std:setting-ADMINS&quot;&gt;&lt;code&gt;ADMINS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/settings#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055dd522beaeff1aa7e612997a38f08a41690908" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/settings#std:setting-ADMINS&quot;&gt;&lt;code&gt;ADMINS&lt;/code&gt;&lt;/a&gt; will be notified of 500 errors by email.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8bdd032f6b5973706a24b9211eb68216fb1c4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/settings#std:setting-EMAIL_BACKEND&quot;&gt;&lt;code&gt;EMAIL_BACKEND&lt;/code&gt;&lt;/a&gt; and related settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b5d795977b9f3ce0ddfab21fccf644ac879f7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/settings#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt; will be notified of 404 errors. &lt;a href=&quot;../../ref/settings#std:setting-IGNORABLE_404_URLS&quot;&gt;&lt;code&gt;IGNORABLE_404_URLS&lt;/code&gt;&lt;/a&gt; can help filter out spurious reports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ece7d31174c3d03ecb7580c7acd82041a4e1046" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/settings#std:setting-MEDIA_ROOT&quot;&gt;&lt;code&gt;MEDIA_ROOT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/settings#std:setting-MEDIA_URL&quot;&gt;&lt;code&gt;MEDIA_URL&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e23e277b5b87747d1fa04b4822acad69327d06a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55099c95843a846bdcd2729377a4a415fa58fdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ref/signals#django.db.models.signals.post_migrate&quot;&gt;&lt;code&gt;post_migrate&lt;/code&gt;&lt;/a&gt; is fired before each test to create the content types and permissions for each model in available apps, in case they&amp;rsquo;re missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516ad47864843e32e3ee1929091af2fbdc09e99d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../topics/db/aggregation&quot;&gt;Django&amp;rsquo;s database aggregation API&lt;/a&gt; works with a &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt;. For example, you can find out how many tags all the bookmarks have:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb833991fbfce794603ab4cfafb91bb8dc2b97d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../topics/db/models#automatic-primary-key-fields&quot;&gt;id&lt;/a&gt; is always &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b9f02343158dbf5c81b9e3982e1991e8910680" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../topics/forms/formsets&quot;&gt;Formsets&lt;/a&gt; instantiate forms with &lt;code&gt;use_required_attribute=False&lt;/code&gt; to avoid incorrect browser validation when adding and deleting forms from a formset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591a8456fde56316781c86162b614e41d581d46c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../topics/i18n/formatting&quot;&gt;Format localization&lt;/a&gt; will be respected if enabled, e.g. with the &lt;code&gt;'de'&lt;/code&gt; language:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7737bb5bfefcf6f97f9acf6f3878e32c9fd9a756" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../auth/default#django.contrib.auth.mixins.LoginRequiredMixin&quot;&gt;&lt;code&gt;LoginRequiredMixin&lt;/code&gt;&lt;/a&gt; prevents users who aren&amp;rsquo;t logged in from accessing the form. If you omit that, you&amp;rsquo;ll need to handle unauthorized users in &lt;a href=&quot;../../ref/class-based-views/mixins-editing#django.views.generic.edit.ModelFormMixin.form_valid&quot;&gt;&lt;code&gt;form_valid()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06661e6c2674ff5216e04071a2823fadee646ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../db-api#mysql-spatial-limitations&quot;&gt;Limited functionality&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6b88aa5e75a5f79842f3d7fa5446caa4264a0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../howto/custom-file-storage&quot;&gt;Custom storage systems&lt;/a&gt; work the same way: you can pass them in as the &lt;code&gt;storage&lt;/code&gt; argument to a &lt;a href=&quot;../ref/models/fields#django.db.models.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec97a1d0f365c1cecbe8ef231381ac00182b8369" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;django.views.generic.list.ListView&lt;/code&gt;&lt;/a&gt; provides a builtin way to paginate the displayed list. You can do this by adding a &lt;a href=&quot;../ref/class-based-views/mixins-multiple-object#django.views.generic.list.MultipleObjectMixin.paginate_by&quot;&gt;&lt;code&gt;paginate_by&lt;/code&gt;&lt;/a&gt; attribute to your view class, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce872c5a64af7979ab3213230d2e6e638eb01643" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt; &amp;ndash; The admin site. You&amp;rsquo;ll use it shortly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace9d75d86ef9a5efe19dd4640173f9bfea0fe6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/contrib/contenttypes#module-django.contrib.contenttypes&quot;&gt;&lt;code&gt;django.contrib.contenttypes&lt;/code&gt;&lt;/a&gt; &amp;ndash; A framework for content types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176f5fd68308fd6a7acf5444b7eeb5b9c21623e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/contrib/messages#module-django.contrib.messages&quot;&gt;&lt;code&gt;django.contrib.messages&lt;/code&gt;&lt;/a&gt; &amp;ndash; A messaging framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed084e22f42ddd07414032f8b5453d786173686" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/contrib/staticfiles#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt;&lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;&lt;/a&gt; appends a content-dependent tag to the filenames of &lt;a href=&quot;../ref/contrib/staticfiles&quot;&gt;static files&lt;/a&gt; to make it safe for browsers to cache them long-term without missing future changes - when a file changes, so will the tag, so browsers will reload the asset automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b1e8c8344e189a9dee9c08ebf66c4f59390c1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/contrib/staticfiles#module-django.contrib.staticfiles&quot;&gt;&lt;code&gt;django.contrib.staticfiles&lt;/code&gt;&lt;/a&gt; &amp;ndash; A framework for managing static files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8494fb5b1e06e022d11e49df5e3e5cb18b7ce624" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/csrf#how-csrf-works&quot;&gt;CSRF protection works&lt;/a&gt; by checking for a secret in each POST request. This ensures that a malicious user cannot &amp;ldquo;replay&amp;rdquo; a form POST to your website and have another logged in user unwittingly submit that form. The malicious user would have to know the secret, which is user specific (using a cookie).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4b501e3848e13fb30b058ee2e0f172802f0794" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt;, which is responsible for creating new migrations based on the changes you have made to your models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca329420d56207261fe23134d6e65168c0034ff0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;, which is responsible for applying and unapplying migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3045624806e8b2bcdc0c0f5b1f06a83cc71e1cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/django-admin#django-admin-showmigrations&quot;&gt;&lt;code&gt;showmigrations&lt;/code&gt;&lt;/a&gt;, which lists a project&amp;rsquo;s migrations and their status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe982b4026bdfa9960b67ff732b8c121dc09bc82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/django-admin#django-admin-sqlmigrate&quot;&gt;&lt;code&gt;sqlmigrate&lt;/code&gt;&lt;/a&gt;, which displays the SQL statements for a migration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e266ee92205ead3af54d4ce93bc4f5f0a34d24c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/middleware#django.contrib.auth.middleware.PersistentRemoteUserMiddleware&quot;&gt;&lt;code&gt;PersistentRemoteUserMiddleware&lt;/code&gt;&lt;/a&gt; provides support for this use case. It will maintain the authenticated session until explicit logout by the user. The class can be used as a drop-in replacement of &lt;a href=&quot;../ref/middleware#django.contrib.auth.middleware.RemoteUserMiddleware&quot;&gt;&lt;code&gt;RemoteUserMiddleware&lt;/code&gt;&lt;/a&gt; in the documentation above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f31281abac2daa86f0b33f02f8f3d0974987d72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/middleware#django.middleware.common.BrokenLinkEmailsMiddleware&quot;&gt;&lt;code&gt;BrokenLinkEmailsMiddleware&lt;/code&gt;&lt;/a&gt; must appear before other middleware that intercepts 404 errors, such as &lt;a href=&quot;../ref/middleware#django.middleware.locale.LocaleMiddleware&quot;&gt;&lt;code&gt;LocaleMiddleware&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/contrib/flatpages#django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&quot;&gt;&lt;code&gt;FlatpageFallbackMiddleware&lt;/code&gt;&lt;/a&gt;. Put it towards the top of your &lt;a href=&quot;../ref/settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cd8be59d98cf93c43b0d145f5e84c014214bf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/models/fields#django.db.models.Field.auto_created&quot;&gt;&lt;code&gt;auto_created&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;True&lt;/code&gt; if the field was automatically created, as for the &lt;a href=&quot;../ref/models/fields#django.db.models.OneToOneField&quot;&gt;&lt;code&gt;OneToOneField&lt;/code&gt;&lt;/a&gt; used by model inheritance. For advanced use only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a186916c4c7d293149c79312fd50b3414dde32e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/models/fields#django.db.models.Field.db_tablespace&quot;&gt;&lt;code&gt;db_tablespace&lt;/code&gt;&lt;/a&gt;: Only for index creation, if the backend supports &lt;a href=&quot;../topics/db/tablespaces&quot;&gt;tablespaces&lt;/a&gt;. You can usually ignore this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d52d0c6499551a13c2569fa41f41a6ba58dea01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;request.POST&lt;/code&gt;&lt;/a&gt; is a dictionary-like object that lets you access submitted data by key name. In this case, &lt;code&gt;request.POST['choice']&lt;/code&gt; returns the ID of the selected choice, as a string. &lt;a href=&quot;../ref/request-response#django.http.HttpRequest.POST&quot;&gt;&lt;code&gt;request.POST&lt;/code&gt;&lt;/a&gt; values are always strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afb458104910ade1b910def60b2898e6902ab8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-CACHES-KEY_FUNCTION&quot;&gt;&lt;code&gt;KEY_FUNCTION&lt;/code&gt;&lt;/a&gt; A string containing a dotted path to a function that defines how to compose a prefix, version and key into a final cache key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c56f65fe3bd9676c7c780b7e5a3539e9d350b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-CACHES-KEY_PREFIX&quot;&gt;&lt;code&gt;KEY_PREFIX&lt;/code&gt;&lt;/a&gt;: A string that will be automatically included (prepended by default) to all cache keys used by the Django server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241d3a2a2408729caa7b9e00c34ce69b2a60dd6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-CACHES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;: Any options that should be passed to the cache backend. The list of valid options will vary with each backend, and cache backends backed by a third-party library will pass their options directly to the underlying cache library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483a7dbcacd03fafb2ae255b991a3614c6710c89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-CACHES-TIMEOUT&quot;&gt;&lt;code&gt;TIMEOUT&lt;/code&gt;&lt;/a&gt;: The default timeout, in seconds, to use for the cache. This argument defaults to &lt;code&gt;300&lt;/code&gt; seconds (5 minutes). You can set &lt;code&gt;TIMEOUT&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt; so that, by default, cache keys never expire. A value of &lt;code&gt;0&lt;/code&gt; causes keys to immediately expire (effectively &amp;ldquo;don&amp;rsquo;t cache&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c0ba6c940309e5022fa8c7d868653d4abf9bc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-CACHES-VERSION&quot;&gt;&lt;code&gt;VERSION&lt;/code&gt;&lt;/a&gt;: The default version number for cache keys generated by the Django server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0fa8b8075e8dcbc13476723d18a90ef0c98e46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_ALIAS&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_ALIAS&lt;/code&gt;&lt;/a&gt; &amp;ndash; The cache alias to use for storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f583878808fc8e20243fe27bc26ea8a911547fdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_KEY_PREFIX&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_KEY_PREFIX&lt;/code&gt;&lt;/a&gt; &amp;ndash; If the cache is shared across multiple sites using the same Django installation, set this to the name of the site, or some other string that is unique to this Django instance, to prevent key collisions. Use an empty string if you don&amp;rsquo;t care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d05036862798e42d9371c3785d3ae0c49471584e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-CACHE_MIDDLEWARE_SECONDS&quot;&gt;&lt;code&gt;CACHE_MIDDLEWARE_SECONDS&lt;/code&gt;&lt;/a&gt; &amp;ndash; The number of seconds each page should be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacf33cf01a4b9fa9d14108037c15eecb1edc026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-DATABASE-ENGINE&quot;&gt;&lt;code&gt;ENGINE&lt;/code&gt;&lt;/a&gt; &amp;ndash; Either &lt;code&gt;'django.db.backends.sqlite3'&lt;/code&gt;, &lt;code&gt;'django.db.backends.postgresql'&lt;/code&gt;, &lt;code&gt;'django.db.backends.mysql'&lt;/code&gt;, or &lt;code&gt;'django.db.backends.oracle'&lt;/code&gt;. Other backends are &lt;a href=&quot;../ref/databases#third-party-notes&quot;&gt;also available&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7105ebfc7a4aa7e813d579c55ca47a222325e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-DEBUG&quot;&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7f1df63a7a9a60f8dcfb7b0e0c2fd64c84650a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; &amp;ndash; The name of your database. If you&amp;rsquo;re using SQLite, the database will be a file on your computer; in that case, &lt;a href=&quot;../ref/settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; should be the full absolute path, including filename, of that file. The default value, &lt;code&gt;os.path.join(BASE_DIR, 'db.sqlite3')&lt;/code&gt;, will store the file in your project directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f5b0be5da347dfcbf21e1ddda042530a82b941" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt; tells whether the engine should look for templates inside installed applications. Each backend defines a conventional name for the subdirectory inside applications where its templates should be stored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362938393c215ddfa987887f7ec1d63a48b38a43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-BACKEND&quot;&gt;&lt;code&gt;BACKEND&lt;/code&gt;&lt;/a&gt; is a dotted Python path to a template engine class implementing Django&amp;rsquo;s template backend API. The built-in backends are &lt;a href=&quot;#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;django.template.backends.django.DjangoTemplates&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.template.backends.jinja2.Jinja2&quot;&gt;&lt;code&gt;django.template.backends.jinja2.Jinja2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d27960c2072953e6d9ee69c6f7b37428554266b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; defines a list of directories where the engine should look for template source files, in search order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3226600a39a9fbc5da5e21f792deefee2659f5e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; is a list of filesystem directories to check when loading Django templates; it&amp;rsquo;s a search path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c17281a8aae98bf51723dd42127cd6321dff6ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt; contains backend-specific settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e222985bf3574e5656d64d02a7c4126d9bfdd594" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/signals#django.core.signals.request_started&quot;&gt;&lt;code&gt;django.core.signals.request_started&lt;/code&gt;&lt;/a&gt; &amp;amp; &lt;a href=&quot;../ref/signals#django.core.signals.request_finished&quot;&gt;&lt;code&gt;django.core.signals.request_finished&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd63cae7f584e84724fa3416f92f2c51cf1ae49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/signals#django.db.models.signals.pre_delete&quot;&gt;&lt;code&gt;django.db.models.signals.pre_delete&lt;/code&gt;&lt;/a&gt; &amp;amp; &lt;a href=&quot;../ref/signals#django.db.models.signals.post_delete&quot;&gt;&lt;code&gt;django.db.models.signals.post_delete&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1915549f11ba31e63d2bcb5cc4bf22c81deac8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/signals#django.db.models.signals.pre_save&quot;&gt;&lt;code&gt;django.db.models.signals.pre_save&lt;/code&gt;&lt;/a&gt; &amp;amp; &lt;a href=&quot;../ref/signals#django.db.models.signals.post_save&quot;&gt;&lt;code&gt;django.db.models.signals.post_save&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f20ce11d568780748891dbc570d4175aa12142d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/templates/api#django.template.Context&quot;&gt;&lt;code&gt;django.template.Context&lt;/code&gt;&lt;/a&gt; holds some metadata in addition to the context data. It is passed to &lt;a href=&quot;../ref/templates/api#django.template.Template.render&quot;&gt;&lt;code&gt;Template.render()&lt;/code&gt;&lt;/a&gt; for rendering a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e64414498b4ab3f2bc161c41f46841c6d031f73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/templates/api#django.template.Engine&quot;&gt;&lt;code&gt;django.template.Engine&lt;/code&gt;&lt;/a&gt; encapsulates an instance of the Django template system. The main reason for instantiating an &lt;a href=&quot;../ref/templates/api#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt; directly is to use the Django template language outside of a Django project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614ab198a8f7030ff5609a3d7f106ff4bc2813d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/templates/api#django.template.RequestContext&quot;&gt;&lt;code&gt;django.template.RequestContext&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;a href=&quot;../ref/templates/api#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; that stores the current &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; and runs template context processors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7347f80559828b580f42c540c9613e82a11032c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/templates/api#django.template.Template&quot;&gt;&lt;code&gt;django.template.Template&lt;/code&gt;&lt;/a&gt; represents a compiled template. Templates are obtained with &lt;a href=&quot;../ref/templates/api#django.template.Engine.get_template&quot;&gt;&lt;code&gt;Engine.get_template()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../ref/templates/api#django.template.Engine.from_string&quot;&gt;&lt;code&gt;Engine.from_string()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fd1c0a31b24b426965ff32edcfbcbe927808e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; argument: &lt;code&gt;kwargs&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a53cc15e525eb4edfaace01c1e953498741bd9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; argument: &lt;code&gt;name&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784c0a7ac25d5d01b575acc237fa4db147bf059e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; argument: &lt;code&gt;route&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8394f7a5666610482e0640d124e7057a00435e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ref/urls#django.urls.path&quot;&gt;&lt;code&gt;path()&lt;/code&gt;&lt;/a&gt; argument: &lt;code&gt;view&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0b884db82c473e401adb35e64ea8e4cfc312c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../settings#std:setting-MIDDLEWARE&quot;&gt;&lt;code&gt;MIDDLEWARE&lt;/code&gt;&lt;/a&gt; contains &lt;code&gt;'django.contrib.sessions.middleware.SessionMiddleware'&lt;/code&gt; and &lt;code&gt;'django.contrib.messages.middleware.MessageMiddleware'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78456508f3ff185627c0f515e2d38fd17acc56dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../topics/auth/index#module-django.contrib.auth&quot;&gt;&lt;code&gt;django.contrib.auth&lt;/code&gt;&lt;/a&gt; &amp;ndash; An authentication system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf44f46c2507a865c8718ab4df537203a046733" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../topics/http/sessions#module-django.contrib.sessions&quot;&gt;&lt;code&gt;django.contrib.sessions&lt;/code&gt;&lt;/a&gt; &amp;ndash; A session framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706780a293872129205d51cb12b883d2a00a7065" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../topics/install#installing-development-version&quot;&gt;Install the latest development version&lt;/a&gt;. This option is for enthusiasts who want the latest-and-greatest features and aren&amp;rsquo;t afraid of running brand new code. You might encounter new bugs in the development version, but reporting them helps the development of Django. Also, releases of third-party packages are less likely to be compatible with the development version than with the latest stable release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5e5a3b26f84b7c395af3d465d5cc50f667cf7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../topics/install#installing-official-release&quot;&gt;Install an official release&lt;/a&gt;. This is the best approach for most users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2654136a391140cc4bf8a387809637996c188175" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../topics/testing/advanced#django.test.utils.setup_test_environment&quot;&gt;&lt;code&gt;setup_test_environment()&lt;/code&gt;&lt;/a&gt; installs a template renderer which will allow us to examine some additional attributes on responses such as &lt;code&gt;response.context&lt;/code&gt; that otherwise wouldn&amp;rsquo;t be available. Note that this method &lt;em&gt;does not&lt;/em&gt; setup a test database, so the following will be run against the existing database and the output may differ slightly depending on what questions you already created. You might get unexpected results if your &lt;code&gt;TIME_ZONE&lt;/code&gt; in &lt;code&gt;settings.py&lt;/code&gt; isn&amp;rsquo;t correct. If you don&amp;rsquo;t remember setting it earlier, check it before continuing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23a96b5e9ea21087eb695da4a122992c152ee28d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../topics/testing/index&quot;&gt;Testing in Django&lt;/a&gt; has comprehensive information about testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cd04db5d7255ce41a790536bd55493806e539a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../utils#django.utils.feedgenerator.Atom1Feed&quot;&gt;&lt;code&gt;django.utils.feedgenerator.Atom1Feed&lt;/code&gt;&lt;/a&gt; (Atom 1.0.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78a6d20dbb6c2e357d7d3304d560684b480284e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../utils#django.utils.feedgenerator.Rss201rev2Feed&quot;&gt;&lt;code&gt;django.utils.feedgenerator.Rss201rev2Feed&lt;/code&gt;&lt;/a&gt; (RSS 2.01. Default.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a631a77300aabc52240cb11ea35f9631247ab2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../utils#django.utils.feedgenerator.RssUserland091Feed&quot;&gt;&lt;code&gt;django.utils.feedgenerator.RssUserland091Feed&lt;/code&gt;&lt;/a&gt; (RSS 0.91.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1bc8f75481c875ad2c49adb3fb37a1fbd91286" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications&quot;&gt;Learn more about application configurations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36274067f36bc63cda89b2ad093334280482c0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints#django.db.models.UniqueConstraint&quot;&gt;&lt;code&gt;UniqueConstraint&lt;/code&gt;&lt;/a&gt; provides more functionality than &lt;code&gt;unique_together&lt;/code&gt;. &lt;code&gt;unique_together&lt;/code&gt; may be deprecated in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6c340fb2a32c51007495923992d75119c50e1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;default#django.contrib.auth.forms.AuthenticationForm&quot;&gt;&lt;code&gt;AuthenticationForm&lt;/code&gt;&lt;/a&gt;: Uses the username field specified by &lt;a href=&quot;#django.contrib.auth.models.CustomUser.USERNAME_FIELD&quot;&gt;&lt;code&gt;USERNAME_FIELD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684a6fd4e51d913a5453f9c82919c2ad6813f14d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;default#django.contrib.auth.forms.PasswordResetForm&quot;&gt;&lt;code&gt;PasswordResetForm&lt;/code&gt;&lt;/a&gt;: Assumes that the user model has a field that stores the user&amp;rsquo;s email address with the name returned by &lt;a href=&quot;#django.contrib.auth.models.AbstractBaseUser.get_email_field_name&quot;&gt;&lt;code&gt;get_email_field_name()&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;email&lt;/code&gt; by default) that can be used to identify the user and a boolean field named &lt;code&gt;is_active&lt;/code&gt; to prevent password resets for inactive users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d3a3a77a647ff324f6052372624707f5a47ae8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;django-admin#django-admin-startproject&quot;&gt;&lt;code&gt;django-admin startproject&lt;/code&gt;&lt;/a&gt; automatically adds a randomly-generated &lt;code&gt;SECRET_KEY&lt;/code&gt; to each new project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130c3caad6b1d8210ab9e3d7a534dc99f35a42d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exceptions#django.core.exceptions.AppRegistryNotReady&quot;&gt;&lt;code&gt;AppRegistryNotReady&lt;/code&gt;&lt;/a&gt;: This happens when importing an application configuration or a models module triggers code that depends on the app registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87250b76d561e3661d31e380efcadb5784ea1e38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;expressions#django.db.models.Expression.asc&quot;&gt;&lt;code&gt;asc()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;expressions#django.db.models.Expression.desc&quot;&gt;&lt;code&gt;desc()&lt;/code&gt;&lt;/a&gt; have arguments (&lt;code&gt;nulls_first&lt;/code&gt; and &lt;code&gt;nulls_last&lt;/code&gt;) that control how null values are sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2af15906af8a7e26831a4f59e73b03554ed2dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fields#django.db.models.Field.hidden&quot;&gt;&lt;code&gt;Hidden fields&lt;/code&gt;&lt;/a&gt; cannot be retrieved by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7934801d693cd2426f211aee66be087e300714d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;formsets#manually-rendered-can-delete-and-can-order&quot;&gt;Manually rendered can_delete and can_order&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdab1114ff6c8ba5536b1071d5c4589fc022f770" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;gdal#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; objects may also be used to save raster models:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91991547469e76f3fdd77e381b1b9c6208543107" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;gdal#django.contrib.gis.gdal.Layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt; objects may be sliced:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a43de95e5257036ab259c4ed86c0b02df48b234" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;geolibs&quot;&gt;GEOS and PROJ.4&lt;/a&gt; should be installed prior to building SpatiaLite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f5597baca5d1ed61ae440bcadd0430df4225f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;geoquerysets#std:fieldlookup-dwithin&quot;&gt;&lt;code&gt;dwithin&lt;/code&gt;&lt;/a&gt; (except MariaDB and MySQL)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41be23f43d96becb8f6db74e14199c39ef9363ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;geos#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects may also be used to save geometric models:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a7e5fd7b98ef8f1353610d0273bcb044f4a0df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;howto/index&quot;&gt;How-to guides&lt;/a&gt; are recipes. They guide you through the steps involved in addressing key problems and use-cases. They are more advanced than tutorials and assume some knowledge of how Django works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ddd649554341cb7ff53e222010c287fbfe88db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http/sessions#cached-sessions-backend&quot;&gt;Using cached sessions&lt;/a&gt; may be a way to increase performance by eliminating the need to load session data from a slower storage source like the database and instead storing frequently used session data in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316890e03ba55be66f4508451c6fc12121e28d6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jinja.pocoo.org/docs/&quot;&gt;Jinja2&lt;/a&gt; can offer performance improvements, particularly when it comes to speed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8469e59051a86c58fb755523cc5786d8f0804c60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; provides &lt;a href=&quot;http://pytz.sourceforge.net/#helpers&quot;&gt;helpers&lt;/a&gt;, including a list of current time zones and a list of all available time zones &amp;ndash; some of which are only of historical interest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2308f32137cc8efd20b0f7090a522035fd4e4512" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.nyphp.org/phundamentals/8_Preventing-Email-Header-Injection&quot;&gt;Header injection&lt;/a&gt; is a security exploit in which an attacker inserts extra email headers to control the &amp;ldquo;To:&amp;rdquo; and &amp;ldquo;From:&amp;rdquo; in email messages that your scripts generate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fccf0b0e9be3c32ecf22ab4f5bfd89e3c8080376" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://asgi.readthedocs.io/en/latest/&quot;&gt;ASGI&lt;/a&gt; is the new, asynchronous-friendly standard that will allow your Django site to use asynchronous Python features, and asynchronous Django features as they are developed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f551dabc5d2a7182b996293f63a7f47df84677" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; handles all the SpatiaLite related packages on your behalf, including SQLite, SpatiaLite, PROJ, and GEOS. Install them like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55717b783f515220fa8c0bc85713cd20bf5d06bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; provides &amp;ldquo;recipes&amp;rdquo; for building binaries and packages from source. It provides recipes for the GeoDjango prerequisites on Macintosh computers running macOS. Because Homebrew still builds the software from source, &lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;Xcode&lt;/a&gt; is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8359839a08766d65000f32b79ff81bb7b7dce0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://dev.mysql.com/downloads/connector/python&quot;&gt;MySQL Connector/Python&lt;/a&gt; is a pure Python driver from Oracle that does not require the MySQL client library or any Python modules outside the standard library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f9a60ea951d54e07dbd653243833167ff2bc10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/glossary/#term-slug&quot;&gt;Slug&lt;/a&gt; is a newspaper term. A slug is a short label for something, containing only letters, numbers, underscores or hyphens. They&amp;rsquo;re generally used in URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d929a35e1ae588822d118637f77fd812c272c35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#CreateView&quot;&gt;&lt;code&gt;CreateView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#UpdateView&quot;&gt;&lt;code&gt;UpdateView&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;myapp/author_form.html&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dfcdfbdb14cbae137b51b374eea51d7bb5dba99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/ref/class-based-views/flattened-index/#DeleteView&quot;&gt;&lt;code&gt;DeleteView&lt;/code&gt;&lt;/a&gt; uses &lt;code&gt;myapp/author_confirm_delete.html&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5403d402a103c81dbd2c58c79e1316e50f4a3c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.tzinfo&quot;&gt;&lt;code&gt;tzinfo&lt;/code&gt;&lt;/a&gt; instance that represents UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae20b7954f8ab93883611c4b661c8397b800e97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://docs.python.org/3/library/functools.html#functools.partial&quot;&gt;&lt;code&gt;functools.partial()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.python.org/3/library/functools.html#functools.partialmethod&quot;&gt;&lt;code&gt;functools.partialmethod&lt;/code&gt;&lt;/a&gt; instances which have serializable &lt;code&gt;func&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, and &lt;code&gt;keywords&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f393cb34db96320e8c1567bf738076c391dfa59e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Argon2&quot;&gt;Argon2&lt;/a&gt; is not the default for Django because it requires a third-party library. The Password Hashing Competition panel, however, recommends immediate use of Argon2 rather than the other algorithms supported by Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbbefc06588bbac3b5966b48c86cd76e30564c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Argon2&quot;&gt;Argon2&lt;/a&gt; is the winner of the 2015 &lt;a href=&quot;https://password-hashing.net&quot;&gt;Password Hashing Competition&lt;/a&gt;, a community organized open competition to select a next generation hashing algorithm. It&amp;rsquo;s designed not to be easier to compute on custom hardware than it is to compute on an ordinary CPU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80c49a9b2e23314c323488dc02bb0ac6085b70f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Bcrypt&quot;&gt;Bcrypt&lt;/a&gt; is a popular password storage algorithm that&amp;rsquo;s specifically designed for long-term password storage. It&amp;rsquo;s not the default used by Django since it requires the use of third-party libraries, but since many people may want to use it Django supports bcrypt with minimal effort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5e2ef359529416faa14e5f83afc38adf5070e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Database_index&quot;&gt;Indexes&lt;/a&gt;. This is a number one priority, &lt;em&gt;after&lt;/em&gt; you have determined from profiling what indexes should be added. Use &lt;a href=&quot;../../ref/models/options#django.db.models.Options.indexes&quot;&gt;&lt;code&gt;Meta.indexes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../ref/models/fields#django.db.models.Field.db_index&quot;&gt;&lt;code&gt;Field.db_index&lt;/code&gt;&lt;/a&gt; to add these from Django. Consider adding indexes to fields that you frequently query using &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.filter&quot;&gt;&lt;code&gt;filter()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.exclude&quot;&gt;&lt;code&gt;exclude()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt;, etc. as indexes may help to speed up lookups. Note that determining the best indexes is a complex database-dependent topic that will depend on your particular application. The overhead of maintaining an index may outweigh any gains in query speed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd47e8256d0a5ff7c9e8a6bc6f22f4d11fe969a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gdal.org/programs/ogr2ogr.html&quot;&gt;ogr2ogr&lt;/a&gt;: A command-line utility included with GDAL that can import many vector data formats into PostGIS, MySQL, and Oracle databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f549780d2dd525157321cd3bfceb513d2d1a81e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/OSGeo/proj.4/wiki/&quot;&gt;PROJ.4&lt;/a&gt; is a library for converting geospatial data to different coordinate reference systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb975ce2bcd38a80f2ebe967a9e126c6b289994" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jazzband/django-debug-toolbar/&quot;&gt;django-debug-toolbar&lt;/a&gt; is a very handy tool that provides insights into what your code is doing and how much time it spends doing it. In particular it can show you all the SQL queries your page is generating, and how long each one has taken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6d4f173c1a71aa0840a83b28f86ed954dd69e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gunicorn.org/&quot;&gt;Gunicorn&lt;/a&gt; (&amp;lsquo;Green Unicorn&amp;rsquo;) is a pure-Python WSGI server for UNIX. It has no dependencies and can be installed using &lt;code&gt;pip&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7bdee3d9811bb294e95ad6e1084583fa79a5db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://koordinates.com/&quot;&gt;Robert Coup&lt;/a&gt; is the initial author of the measure objects, and was inspired by Brian Beck&amp;rsquo;s work in &lt;a href=&quot;https://github.com/geopy/geopy/&quot;&gt;geopy&lt;/a&gt; and Geoff Biggs&amp;rsquo; PhD work on dimensioned units for robotics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda706ec3b07700e25a2a4aabffd4eec43e1181e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://postgis.net/&quot;&gt;PostGIS&lt;/a&gt; adds geographic object support to PostgreSQL, turning it into a spatial database. &lt;a href=&quot;geolibs#geosbuild&quot;&gt;GEOS&lt;/a&gt;, &lt;a href=&quot;geolibs#proj4&quot;&gt;PROJ.4&lt;/a&gt; and &lt;a href=&quot;geolibs#gdalbuild&quot;&gt;GDAL&lt;/a&gt; should be installed prior to building PostGIS. You might also need additional libraries, see &lt;a href=&quot;https://postgis.net/docs/postgis_installation.html#install_requirements&quot;&gt;PostGIS requirements&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cfc8b6d4351e9083a6b799f9a7335b8a973913e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://postgis.net/docs/using_postgis_dbmanagement.html#shp2pgsql_usage&quot;&gt;shp2pgsql&lt;/a&gt;: This utility included with PostGIS imports ESRI shapefiles into PostGIS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2cd1454b5271d9f48d1628d9ec20e14bd49763" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://postgresapp.com/&quot;&gt;Postgres.app&lt;/a&gt; is a standalone PostgreSQL server that includes the PostGIS extension. You will also need to install &lt;code&gt;gdal&lt;/code&gt; and &lt;code&gt;libgeoip&lt;/code&gt; with &lt;a href=&quot;#homebrew&quot;&gt;Homebrew&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931154bff9f89bebd74e3c55a507df6e955ea474" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/daphne/&quot;&gt;Daphne&lt;/a&gt; is a pure-Python ASGI server for UNIX, maintained by members of the Django project. It acts as the reference server for ASGI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cd9d06730c02eb91ec8fcf2de402da5ef47f47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/mysqlclient/&quot;&gt;mysqlclient&lt;/a&gt; is a native driver. It&amp;rsquo;s &lt;strong&gt;the recommended choice&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da2ca6ee33166b44274c13e4992645713152950" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/pip/&quot;&gt;pip&lt;/a&gt; is a package manage for Python. It makes installing and uninstalling Python packages (such as Django!) very easy. For the rest of the installation, we&amp;rsquo;ll use &lt;code&gt;pip&lt;/code&gt; to install Python packages from the command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0588a32ab1881bc9252fc7e5f327dd940425d74c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypi.org/project/virtualenv/&quot;&gt;virtualenv&lt;/a&gt; and &lt;a href=&quot;https://pypi.org/project/virtualenvwrapper-win/&quot;&gt;virtualenvwrapper&lt;/a&gt; provide a dedicated environment for each Django project you create. While not mandatory, this is considered a best practice and will save you time in the future when you&amp;rsquo;re ready to deploy your project. To do this, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ef2d4c9609c28913ae9a6afb6dcfcee794e077" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pypy.org/&quot;&gt;PyPy&lt;/a&gt; is an implementation of Python in Python itself (the &amp;lsquo;standard&amp;rsquo; Python implementation is in C). PyPy can offer substantial performance gains, typically for heavyweight applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caae1fba8f115403ff1b122d3009840fab2fffe1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://schwehr.blogspot.com/&quot;&gt;Kurt Schwehr&lt;/a&gt; has been gracious enough to create GeoDjango packages for users of the &lt;a href=&quot;http://www.finkproject.org/&quot;&gt;Fink&lt;/a&gt; package system. &lt;a href=&quot;http://pdb.finkproject.org/pdb/browse.php?summary=django-gis&quot;&gt;Different packages are available&lt;/a&gt; (starting with &lt;code&gt;django-gis&lt;/code&gt;), depending on which version of Python you want to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec9a16674cc6705b3e612b724ee259cc6e60d42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://spatialreference.org/&quot;&gt;spatialreference.org&lt;/a&gt;: A Django-powered database of spatial reference systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f46211dab837f418d6d3013fe7391a1b3f15161" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc5322.html#section-3.3&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;RFC 5322&lt;/strong&gt;&lt;/a&gt; formatted date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7902428b203f5a7c78c03cf67ee8af78f72946e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc6265.html#section-6.1&quot; id=&quot;index-5&quot;&gt;&lt;strong&gt;RFC 6265&lt;/strong&gt;&lt;/a&gt; states that user agents should support cookies of at least 4096 bytes. For many browsers this is also the maximum size. Django will not raise an exception if there&amp;rsquo;s an attempt to store a cookie of more than 4096 bytes, but many browsers will not set the cookie correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75239d6e8c6aae8fcf8a49902aa5a7bc455f5eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://trac.osgeo.org/gdal/&quot;&gt;GDAL&lt;/a&gt; is an excellent open source geospatial library that has support for reading most vector and raster spatial data formats. Currently, GeoDjango only supports &lt;a href=&quot;../gdal&quot;&gt;GDAL&amp;rsquo;s vector data&lt;/a&gt; capabilities &lt;a href=&quot;#id10&quot; id=&quot;id5&quot;&gt;[2]&lt;/a&gt;. &lt;a href=&quot;#geosbuild&quot;&gt;GEOS&lt;/a&gt; and &lt;a href=&quot;#proj4&quot;&gt;PROJ.4&lt;/a&gt; should be installed prior to building GDAL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f71aba44c272fe44d88ce439424eb26a9a2388" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://trac.osgeo.org/geos/&quot;&gt;GEOS&lt;/a&gt; stands for &lt;strong&gt;Geometry Engine - Open Source&lt;/strong&gt;, and is a C++ library, ported from the &lt;a href=&quot;https://sourceforge.net/projects/jts-topo-suite/&quot;&gt;Java Topology Suite&lt;/a&gt;. GEOS implements the OpenGIS &lt;a href=&quot;https://www.opengeospatial.org/standards/sfs&quot;&gt;Simple Features for SQL&lt;/a&gt; spatial predicate functions and spatial operators. GEOS, now an OSGeo project, was initially developed and maintained by &lt;a href=&quot;http://www.refractions.net/&quot;&gt;Refractions Research&lt;/a&gt; of Victoria, Canada.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e5e15a4159d03d62b9ec8e036f528ea7b79cfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://uwsgi-docs.readthedocs.io/&quot;&gt;uWSGI&lt;/a&gt; is a fast, self-healing and developer/sysadmin-friendly application container server coded in pure C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43fc5cd723fcdba34a6f90c88e50680779b6968" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://web.archive.org/web/20080302095452/http://welcome.warnercnr.colostate.edu/class_info/nr502/lg3/datums_coordinates/spcs.html&quot;&gt;The State Plane Coordinate System&lt;/a&gt;: A website covering the various projection systems used in the United States. Much of the U.S. spatial data encountered will be in one of these coordinate systems rather than in a geographic coordinate system such as WGS84.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd3064006b878a534534ecd29466e0523d29ac2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://wsgi.readthedocs.io/en/latest/&quot;&gt;WSGI&lt;/a&gt; is the main Python standard for communicating between Web servers and applications, but it only supports synchronous code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6950e3cf6631adf01d29179768968880a2610048" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.gaia-gis.it/fossil/libspatialite&quot;&gt;SpatiaLite&lt;/a&gt; adds spatial support to SQLite, turning it into a full-featured spatial database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e81bd26798d771c0cd3103ff176ca08e3e8378" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.gdal.org/&quot;&gt;GDAL&lt;/a&gt; stands for &lt;strong&gt;Geospatial Data Abstraction Library&lt;/strong&gt;, and is a veritable &amp;ldquo;Swiss army knife&amp;rdquo; of GIS data functionality. A subset of GDAL is the &lt;a href=&quot;https://gdal.org/user/vector_data_model.html&quot;&gt;OGR&lt;/a&gt; Simple Features Library, which specializes in reading and writing vector geographic data in a variety of standard formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8979426c949755b4bd09b397dfd8c0aa791b04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.macports.org/&quot;&gt;MacPorts&lt;/a&gt; may be used to install GeoDjango prerequisites on computers running macOS. Because MacPorts still builds the software from source, &lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;Xcode&lt;/a&gt; is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c4f4cf925d846fa60822277aa5be3644b6ee80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.owasp.org/index.php/HttpOnly&quot;&gt;HttpOnly&lt;/a&gt; is a flag included in a Set-Cookie HTTP response header. It&amp;rsquo;s part of the &lt;a href=&quot;https://tools.ietf.org/html/rfc6265.html#section-4.1.2.6&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 6265#section-4.1.2.6&lt;/strong&gt;&lt;/a&gt; standard for cookies and can be a useful way to mitigate the risk of a client-side script accessing the protected cookie data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2bdd4f1eaf5d8da63c87ebd18ba8cf17dfe278" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.owasp.org/index.php/HttpOnly&quot;&gt;HttpOnly&lt;/a&gt; is a flag included in a Set-Cookie HTTP response header. It&amp;rsquo;s part of the &lt;a href=&quot;https://tools.ietf.org/html/rfc6265.html#section-4.1.2.6&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 6265&lt;/strong&gt;&lt;/a&gt; standard for cookies and can be a useful way to mitigate the risk of a client-side script accessing the protected cookie data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72787c96b10525dcf33b095a7245557d0a54557d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.python.org/dev/peps/pep-0249&quot; id=&quot;index-0&quot;&gt;&lt;strong&gt;PEP 249&lt;/strong&gt;&lt;/a&gt;, the Python Database API Specification v2.0, requires autocommit to be initially turned off. Django overrides this default and turns autocommit on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d4728ee08d571a93a728c7d34db06f443e2349" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.sqlite.org/&quot;&gt;SQLite&lt;/a&gt; provides an excellent development alternative for applications that are predominantly read-only or require a smaller installation footprint. As with all database servers, though, there are some differences that are specific to SQLite that you should be aware of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6670be0b4a0a4881a4142112c748a5e45b4b18bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.uvicorn.org/&quot;&gt;Uvicorn&lt;/a&gt; is an ASGI server based on &lt;code&gt;uvloop&lt;/code&gt; and &lt;code&gt;httptools&lt;/code&gt;, with an emphasis on speed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade993670dba66c56d21152383b33059a97ba1cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.w3.org/2003/01/geo/&quot;&gt;W3C Geo&lt;/a&gt; formatted feeds only support &lt;a href=&quot;model-api#django.contrib.gis.db.models.PointField&quot;&gt;&lt;code&gt;PointField&lt;/code&gt;&lt;/a&gt; geometries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20624babc3669f11f108441bb0c9b6a78c2ad24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;instances#django.db.models.Model.delete&quot;&gt;&lt;code&gt;Model.delete()&lt;/code&gt;&lt;/a&gt; isn&amp;rsquo;t called on related models, but the &lt;a href=&quot;../signals#django.db.models.signals.pre_delete&quot;&gt;&lt;code&gt;pre_delete&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../signals#django.db.models.signals.post_delete&quot;&gt;&lt;code&gt;post_delete&lt;/code&gt;&lt;/a&gt; signals are sent for all deleted objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dd1ee868f1d94fda87e20f0407806e4468a986" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;intro/index&quot;&gt;Tutorials&lt;/a&gt; take you by the hand through a series of steps to create a Web application. Start here if you&amp;rsquo;re new to Django or Web application development. Also look at the &amp;ldquo;&lt;a href=&quot;#index-first-steps&quot;&gt;First steps&lt;/a&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5498bab3dd6247cffb59fd56b05b457aa74e34d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;meta#django.db.models.options.Options.get_fields&quot;&gt;&lt;code&gt;Options.get_fields()&lt;/code&gt;&lt;/a&gt; excludes hidden fields by default. Pass in &lt;code&gt;include_hidden=True&lt;/code&gt; to return hidden fields in the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41437f558f6224fe87712b03bc11292a2607b4aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;modelforms#model-formsets&quot;&gt;Creating formsets from models with model formsets&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326bfc64ee21d8c4b81f5b27ce327e8c1d6e128b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;operations#create-postgresql-extensions&quot;&gt;Setup the hstore extension&lt;/a&gt; in PostgreSQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8ca4acd48a858d397332e401070f1e90578c1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ref/contrib/gis/index&quot;&gt;GeoDjango&lt;/a&gt; intends to be a world-class geographic Web framework. Its goal is to make it as easy as possible to build GIS Web applications and harness the power of spatially enabled data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febed10516504305c59f67e20d0214b5872b6fa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ref/index&quot;&gt;Reference guides&lt;/a&gt; contain technical reference for APIs and other aspects of Django&amp;rsquo;s machinery. They describe how it works and how to use it but assume that you have a basic understanding of key concepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ac65437024b34aaa3452d0be7384ec20dec19f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;settings#std:setting-USER&quot;&gt;&lt;code&gt;USER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;settings#std:setting-PASSWORD&quot;&gt;&lt;code&gt;PASSWORD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;settings#std:setting-HOST&quot;&gt;&lt;code&gt;HOST&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;settings#std:setting-PORT&quot;&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fa4129bd72d6dcd668309df617163081ce0a12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;settings#std:setting-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f866d561201804df861494572c9fb8a2531c68f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;topics/i18n/index&quot;&gt;Overview&lt;/a&gt; | &lt;a href=&quot;topics/i18n/translation&quot;&gt;Internationalization&lt;/a&gt; | &lt;a href=&quot;topics/i18n/translation#how-to-create-language-files&quot;&gt;Localization&lt;/a&gt; | &lt;a href=&quot;topics/i18n/formatting&quot;&gt;Localized Web UI formatting and form input&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5539e18bc9bc936805f1357cf30d5fe19f7986a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;topics/index&quot;&gt;Topic guides&lt;/a&gt; discuss key topics and concepts at a fairly high level and provide useful background information and explanation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df8391936b35a31b09615d728699d1c85dbc09d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!=&lt;/code&gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ad6341f41bc87a5ef7956ecdcd46aebc07d0a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; (double quote) is converted to &lt;code&gt;&amp;amp;quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430d935d13a0b07c815905ebea357382e66b867d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;day&quot;&lt;/code&gt; returns a list of all distinct year/month/day values for the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2191697f1366ac1ddd4a1b8438896b6f103039e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;default&quot;&lt;/code&gt; (since the default router sends writes here)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a536f8e3fe2c8ad6ca637cfe1b7d367109885c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;month&quot;&lt;/code&gt; returns a list of all distinct year/month values for the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667c14e8d1fc0d5a2b01a7a091ce6b959a52a3d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;pre_add&quot;&lt;/code&gt; (followed by a separate signal with &lt;code&gt;&quot;post_add&quot;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a3ea9e9b67d768245c062c466aa64fceb261a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;pre_remove&quot;&lt;/code&gt; (followed by a separate signal with &lt;code&gt;&quot;post_remove&quot;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8356b6c87723456318e6d6a486dcb6a2df11a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;week&quot;&lt;/code&gt; returns a list of all distinct year/week values for the field. All dates will be a Monday.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f1a0c4d3d88e1476ec36c3e528433ac8f8adca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;year&quot;&lt;/code&gt; returns a list of all distinct year values for the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba7c8f9ac10e082ca01bd0dacdd02b0ce17db4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$row&lt;/code&gt; is the newly added (or removed) row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3073bbddfbf00e5ad22b6fa943e82f623474db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&lt;/code&gt; is converted to &lt;code&gt;&amp;amp;amp;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d083d162be63ae5a7a94ba711c6cd973ca0227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&lt;/code&gt; is converted to &lt;code&gt;&amp;amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7866e1c74de13a229347a9680d7cf111813dbf29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;&lt;/code&gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8d56eccd5657beaed3cf2d6f8d9a202d60b935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;gt;=&lt;/code&gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1211cf8f69a4efdd98bb22b570dbfb9186df4315" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; is converted to &lt;code&gt;&amp;amp;lt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3cdef852d74071dc0f798edc088031e49b257b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77064babde1731bc92aa80cd235a2bb9afc1bb17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;=&lt;/code&gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9b4aacf4230893160796acfe32a7d4e111d046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;app_label&amp;gt; &amp;lt;migrationname&amp;gt;&lt;/code&gt;: Brings the database schema to a state where the named migration is applied, but no later migrations in the same app are applied. This may involve unapplying migrations if you have previously migrated past the named migration. You can use a prefix of the migration name, e.g. &lt;code&gt;0001&lt;/code&gt;, as long as it&amp;rsquo;s unique for the given app name. Use the name &lt;code&gt;zero&lt;/code&gt; to migrate all the way back i.e. to revert all applied migrations for an app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f0c712420f816615039dc47ae4da68e98dd254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;app_label&amp;gt;&lt;/code&gt;: The specified app has its migrations run, up to the most recent migration. This may involve running other apps&amp;rsquo; migrations too, due to dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffa8a68020fe7ff87683367484ca9b9f51e11cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;containing_model&amp;gt;_id&lt;/code&gt;: the &lt;code&gt;id&lt;/code&gt; of the model that declares the &lt;code&gt;ManyToManyField&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20531a1faf95eb3cc268ce692f4597804abf9e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;other_model&amp;gt;_id&lt;/code&gt;: the &lt;code&gt;id&lt;/code&gt; of the model that the &lt;code&gt;ManyToManyField&lt;/code&gt; points to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec32dfe7bcea1be8a7b53da213075ddb90f5d76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'%(app_label)s'&lt;/code&gt; is replaced by the lowercased name of the app the child class is contained within. Each installed application name must be unique and the model class names within each app must also be unique, therefore the resulting name will end up being different.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229ff331fb5102faa67cb417de71799f03eece17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'%(class)s'&lt;/code&gt; is replaced by the lowercased name of the child class that the field is used in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cbc874d33eb1d19e3d53a8e31991debcb0b2b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'%U'&lt;/code&gt;: Based on the United States week system where the week begins on Sunday. This is the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66cf8f62fd42a388c4e08a1e1293a2bac9491c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'%W'&lt;/code&gt;: Similar to &lt;code&gt;'%U'&lt;/code&gt;, except it assumes that the week begins on Monday. This is not the same as the ISO 8601 week number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d9970bfdbe28c2ab0f9b3fe207b6bef3c4b662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;''&lt;/code&gt;, &lt;code&gt;'GMT'&lt;/code&gt;, &lt;code&gt;'-500'&lt;/code&gt;, &lt;code&gt;'US/Eastern'&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bed4999a822136c71ea4fe5593c21fae899c47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'0'&lt;/code&gt; (Sunday) to &lt;code&gt;'6'&lt;/code&gt; (Saturday)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cddf2c17a17093508125bdd2b75f10f47a245fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'0'&lt;/code&gt; to &lt;code&gt;'23'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a788cc265315d2db33e329bf3bbfbc82b0b03409" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'00'&lt;/code&gt; to &lt;code&gt;'23'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3851c54b7cd0846db35e8a07b1b3bb2b14e1385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'00'&lt;/code&gt; to &lt;code&gt;'59'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228f6cb84875d0dae35fe04b488e90a3327a56f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'01'&lt;/code&gt; to &lt;code&gt;'12'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9ec4f6eb10308c4a382f6d86b5ca10aee8e2cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'01'&lt;/code&gt; to &lt;code&gt;'31'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bd921b1f8811f6d52c8124f161d4ef99494050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'1 a.m.'&lt;/code&gt;, &lt;code&gt;'1:30 p.m.'&lt;/code&gt;, &lt;code&gt;'midnight'&lt;/code&gt;, &lt;code&gt;'noon'&lt;/code&gt;, &lt;code&gt;'12:30 p.m.'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf6923ccc97c6b06a8bf4ca28577c62773255ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'1'&lt;/code&gt; or &lt;code&gt;'0'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c720662dd52477acc23b4f1728040278779661c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'1'&lt;/code&gt; to &lt;code&gt;'12'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2225b0298692135e82776f3a23500d1e40541c27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'1'&lt;/code&gt; to &lt;code&gt;'31'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3773b33533361945a008ac77d7d60dc9d9488701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'1'&lt;/code&gt;, &lt;code&gt;'1:30'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4ad971135b70f9c1a3dec7d413f6062d046138" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; (single quote) is converted to &lt;code&gt;&amp;amp;#x27;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76ecda8b1588d801ce7fe94401f479f744e1cc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'AM'&lt;/code&gt; or &lt;code&gt;'PM'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a110d2c064d6d84de21182e1084553a29788363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'EST'&lt;/code&gt;, &lt;code&gt;'MDT'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054c898cd894be80dbdc88981464186021a42689" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Jan.'&lt;/code&gt;, &lt;code&gt;'Feb.'&lt;/code&gt;, &lt;code&gt;'March'&lt;/code&gt;, &lt;code&gt;'May'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ba83858007d9fa0c3fb62b1aa7681338ff36ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Lax'&lt;/code&gt; (default): provides a balance between security and usability for websites that want to maintain user&amp;rsquo;s logged-in session after the user arrives from an external link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7651f5e89049c893414986295662fd66e10ed3f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'Strict'&lt;/code&gt;: prevents the cookie from being sent by the browser to the target site in all cross-site browsing context, even when following a regular link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed2befb343df288267f6142cfbc1c41bbbc2599" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'a.m.'&lt;/code&gt; or &lt;code&gt;'p.m.'&lt;/code&gt; (Note that this is slightly different than PHP&amp;rsquo;s output, because this includes periods to match Associated Press style.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42472897f8332fb3edfa0dadf4432f32ae04bfcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'add'&lt;/code&gt;: &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.has_add_permission&quot;&gt;&lt;code&gt;ModelAdmin.has_add_permission()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76b000dd9a18454af8ad00db0b85898bbc8e11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'after'&lt;/code&gt;: The content on the error line after the token that raised the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10191d1c40a7057ca49727a5aca71e5105a490c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'attrs'&lt;/code&gt;: HTML attributes to be set on the rendered widget. The combination of the &lt;a href=&quot;#django.forms.Widget.attrs&quot;&gt;&lt;code&gt;attrs&lt;/code&gt;&lt;/a&gt; attribute and the &lt;code&gt;attrs&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405d5b4c087e7afbcf36326582e0bbb589cb3e62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'author-polls:index'&lt;/code&gt; will always resolve to the index page of the instance &lt;code&gt;'author-polls'&lt;/code&gt; (and likewise for &lt;code&gt;'publisher-polls'&lt;/code&gt;) .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ebea9c0b7147301732beae393bfbaa3f4366b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'auto_reload'&lt;/code&gt;: &lt;code&gt;settings.DEBUG&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecd12425d21f053793a4c4ff60193cd316bb4cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'autoescape'&lt;/code&gt;: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c463015732cb148f40ef7901d7f653f9bd4449d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'autoescape'&lt;/code&gt;: a boolean that controls whether HTML autoescaping is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf16b398f38c040cd3e0735896cdefe2c94a5a4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'before'&lt;/code&gt;: The content on the error line before the token that raised the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f336af2b2fc45ff47d0396b00e758b5db3b2ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'bottom'&lt;/code&gt;: The line number where &lt;code&gt;source_lines&lt;/code&gt; ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d12d6785a06f11dbf31084f90bc9036d3d6b7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'builtins'&lt;/code&gt;: A list of dotted Python paths of template tag modules to add to &lt;a href=&quot;../ref/templates/builtins&quot;&gt;built-ins&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80214fe16fca6ad691dbb357812f352d192d0791" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'builtins'&lt;/code&gt;: A list of dotted Python paths of template tag modules to add to &lt;a href=&quot;builtins&quot;&gt;built-ins&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d43b68bfe85b58677a1e9c2fc7fe20683a72f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'change'&lt;/code&gt;: &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.has_change_permission&quot;&gt;&lt;code&gt;ModelAdmin.has_change_permission()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0b14250e5830ad44991c1dc7868f7eaea8ef66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'context_processors'&lt;/code&gt;: a list of dotted Python paths to callables that are used to populate the context when a template is rendered with a request. These callables take a request object as their argument and return a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; of items to be merged into the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc49057554da37bf427ff53d284a08dc9260ea81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'debug'&lt;/code&gt;: a boolean that turns on/off template debug mode. If it is &lt;code&gt;True&lt;/code&gt;, the fancy error page will display a detailed report for any exception raised during template rendering. This report contains the relevant snippet of the template with the appropriate line highlighted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6549ac4b6abea4b8b967e0dd6cbd174f311930c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'delete'&lt;/code&gt;: &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.has_delete_permission&quot;&gt;&lt;code&gt;ModelAdmin.has_delete_permission()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ff02548ea8dd82b7005d0e6f17ed30b5b654c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'django.contrib.auth'&lt;/code&gt; contains the core of the authentication framework, and its default models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6791ce62225fc817ff80cee54b1efae89680cd54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'django.contrib.contenttypes'&lt;/code&gt; is the Django &lt;a href=&quot;../../ref/contrib/contenttypes&quot;&gt;content type system&lt;/a&gt;, which allows permissions to be associated with models you create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de22ceed452e24de7cbe854fe1a175776179885c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'django.contrib.messages'&lt;/code&gt; is in &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ef7e5486313d92b018913937daf9c1ab988d65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'django.forms'&lt;/code&gt; in &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; and at least one engine with &lt;a href=&quot;../settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS=True&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c088a184c5df6255bd859e47ff415834a115a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'django.template.loaders.app_directories.Loader'&lt;/code&gt; if and only if &lt;code&gt;app_dirs&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17479a71fff2b2de1441fec0367f13de67b25bf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'during'&lt;/code&gt;: The token that raised the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa8f9a5fdc6d695516d9d3f057a9789fb9fe472" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'file_charset'&lt;/code&gt;: the charset used to read template files on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c594ea917cb2a5f652a7fb8c78d0427c847c31e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'is_hidden'&lt;/code&gt;: A boolean indicating whether or not this widget is hidden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180ed45cab111fb59455850256839be40a36705d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'libraries'&lt;/code&gt;: A dictionary of labels and dotted Python paths of template tag modules to register with the template engine. This can be used to add new libraries or provide alternate labels for existing ones. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050038a43596f290a8af146c8efa14b192f015fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'libraries'&lt;/code&gt;: A dictionary of labels and dotted Python paths of template tag modules to register with the template engine. This is used to add new libraries or provide alternate labels for existing ones. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ead4fd48a3e059c75e67f254788daac83e6f78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'line'&lt;/code&gt;: The line number on which the exception occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9539ebae5eda54dfa79bd3d89f9dc42c719c26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'listopada'&lt;/code&gt; (for Polish locale, as opposed to &lt;code&gt;'Listopad'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cda75e1c4e3268f46c72be5c0e38e08110802f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'loader'&lt;/code&gt;: a loader configured for &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-DIRS&quot;&gt;&lt;code&gt;DIRS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-APP_DIRS&quot;&gt;&lt;code&gt;APP_DIRS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3cf7ff02bc0085be4b87150b44c2490c4d6a20a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'loader_name'&lt;/code&gt;: An optional string identifying the function or class used to load the template, e.g. &lt;code&gt;django.template.loaders.filesystem.Loader&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8fc4541eb067847adbc3e8c8b7eb9a335e37796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'loaders'&lt;/code&gt;: a list of dotted Python paths to template loader classes. Each &lt;code&gt;Loader&lt;/code&gt; class knows how to import templates from a particular source. Optionally, a tuple can be used instead of a string. The first item in the tuple should be the &lt;code&gt;Loader&lt;/code&gt; class name, and subsequent items are passed to the &lt;code&gt;Loader&lt;/code&gt; during initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0994e28d800507e7dc6655f4e254fd78801975af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'max_decimal_places'&lt;/code&gt; if the number of decimals is larger than &lt;code&gt;decimal_places&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab605c3fe78c11a56616df0a1080714fadb47ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'max_digits'&lt;/code&gt; if the number of digits is larger than &lt;code&gt;max_digits&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfd6e869671eaff0542b67e55fd011577e3c1ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'max_whole_digits'&lt;/code&gt; if the number of whole digits is larger than the difference between &lt;code&gt;max_digits&lt;/code&gt; and &lt;code&gt;decimal_places&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a907b465201f7b68e199448f6c788d7fd9a34a84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'message'&lt;/code&gt;: The exception message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63438c2153ac978e983541b7f37ad542db3f5353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'name'&lt;/code&gt;: The full path to the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d848f52eca05aef4fabdae4594e91e541f0c2698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'name'&lt;/code&gt;: The name of the field from the &lt;code&gt;name&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a281e9941adc5c0dff169a986425e62d9fcc83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'name'&lt;/code&gt;: The name of the template in which the exception occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a10280e4b185070c287128cb5d8f26db5e82b55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'required'&lt;/code&gt;: A boolean indicating whether or not the field for this widget is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7146c75e7aaea4a9ee9c6212ae050c82bfc5147" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'source_lines'&lt;/code&gt;: The lines before, after, and including the line the exception occurred on. This is for context, so it shouldn&amp;rsquo;t contain more than 20 lines or so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80ee51e1786a2e7079e40917f68f441992be321" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'st'&lt;/code&gt;, &lt;code&gt;'nd'&lt;/code&gt;, &lt;code&gt;'rd'&lt;/code&gt; or &lt;code&gt;'th'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3564db623b27fc8ad224f3a8b24499d0d35a7058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'string_if_invalid'&lt;/code&gt;: the output, as a string, that the template system should use for invalid (e.g. misspelled) variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5011f36d803472937709db71435cdd4c07aa4ed2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'template_name'&lt;/code&gt;: The relative path to the template as passed into the the template loading methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c206a3f2bfb8b424b339cd928bc2d48b18a532c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'template_name'&lt;/code&gt;: The value of &lt;code&gt;self.template_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfd596793f4ef72203d4eb45ed26f069dc2fe2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'top'&lt;/code&gt;: The line number where &lt;code&gt;source_lines&lt;/code&gt; starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da888c50ebe8546bff015377cab4a9dc66afc156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'total'&lt;/code&gt;: The number of lines in &lt;code&gt;source_lines&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1bdc03fac17d1b8563f60ee169d16e5a7b85a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'undefined'&lt;/code&gt;: &lt;code&gt;DebugUndefined if settings.DEBUG else Undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae76d7cc5e40a47047929e400447b1e95d5ce478" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'value'&lt;/code&gt;: The value as returned by &lt;a href=&quot;#django.forms.Widget.format_value&quot;&gt;&lt;code&gt;format_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e69ae4b0dc1505b4f137bce78c7bb16013cbc53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'view'&lt;/code&gt;: &lt;a href=&quot;index#django.contrib.admin.ModelAdmin.has_view_permission&quot;&gt;&lt;code&gt;ModelAdmin.has_view_permission()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dee65fde2ad080745076598c85afb1c762039f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(with, height)&lt;/code&gt; of raster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420e2408bddaef2626d9ae1c50bb492c017b114f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**kwargs&lt;/code&gt; are passed to &lt;a href=&quot;#django.forms.BoundField.as_widget&quot;&gt;&lt;code&gt;as_widget()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43430593fde7d6c23558f49b4d7cca552230e62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--insecure&lt;/code&gt; doesn&amp;rsquo;t work with &lt;a href=&quot;#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt;&lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314ebe86bcf538743b6db7cab19b6d82c8cfe6d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-1&lt;/code&gt; for empty &lt;a href=&quot;#django.contrib.gis.geos.GeometryCollection&quot;&gt;&lt;code&gt;GeometryCollection&lt;/code&gt;&lt;/a&gt;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc832392d63da2af89d614d6eb06dd3e7e26a53b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-43200&lt;/code&gt; to &lt;code&gt;43200&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df62d373aeeffa56db1e0324fe6ac4a7e3c8c2d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.dbf&lt;/code&gt;: Database file for holding non-geometric attribute data (e.g., integer and character fields).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0a6893694477d80c5fd17ac4971baf72ed81c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.filter(myfield__mylookup)&lt;/code&gt; will call &lt;code&gt;myfield.get_lookup('mylookup')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b49420f04e1931021b26e2e136b0816d5a5d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.filter(myfield__mytransform)&lt;/code&gt; will first call &lt;code&gt;myfield.get_lookup('mytransform')&lt;/code&gt;, which will fail, so it will fall back to calling &lt;code&gt;myfield.get_transform('mytransform')&lt;/code&gt; and then &lt;code&gt;mytransform.get_lookup('exact')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161849bab2eff4d8e01866a3bff8c961e3e758b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.filter(myfield__mytransform__mylookup)&lt;/code&gt; will call &lt;code&gt;myfield.get_transform('mytransform')&lt;/code&gt;, and then &lt;code&gt;mytransform.get_lookup('mylookup')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d122697ff7c16b02f565301fe8a56ba7ad93e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.prj&lt;/code&gt;: Contains the spatial reference information for the geographic data stored in the shapefile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a013b3985cf8e9de8dda3f2b0a63e9673835940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.shp&lt;/code&gt;: Holds the vector data for the world borders geometries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8adc780a5d711a0bc3cfbea2178ee795e667f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.shx&lt;/code&gt;: Spatial index file for geometries stored in the &lt;code&gt;.shp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da878411afac4c26604e05c86bcb00b878fda510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/articles/2003/03/building-a-django-site/&lt;/code&gt; would match the final pattern. Django would call the function &lt;code&gt;views.article_detail(request, year=2003, month=3, slug=&quot;building-a-django-site&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0077d7ba3ef6c9a572545a1bb45cd6f246e7b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/articles/2003/&lt;/code&gt; would match the first pattern in the list, not the second one, because the patterns are tested in order, and the first one is the first test to pass. Feel free to exploit the ordering to insert special cases like this. Here, Django would call the function &lt;code&gt;views.special_case_2003(request)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb61d19f7fb5ca59097e6d73b6af1cbcc9397acd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/articles/2003&lt;/code&gt; would not match any of these patterns, because each pattern requires that the URL end with a slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f555447a2d6cb691c6ee9c602d9dc9d7b32693f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/beats/1424/rss/&lt;/code&gt; &amp;ndash; Returns recent crimes for beat 1424.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425d823a701bbe8260aa39d50f205aef36e5dc34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/beats/613/rss/&lt;/code&gt; &amp;ndash; Returns recent crimes for beat 613.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a5af6567ecd16b46d7734a2e80dd4fa7c3af89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/home/html/default/news/story_detail.html&lt;/code&gt; (&lt;code&gt;'django'&lt;/code&gt; engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392f53ba89a67fe8ffb6d6d1722c85059cdc8cd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/home/html/default/story_253_detail.html&lt;/code&gt; (&lt;code&gt;'django'&lt;/code&gt; engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3d0958618ae33422d9fd8ef534a03cb5f89b00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/home/html/default/story_detail.html&lt;/code&gt; (&lt;code&gt;'django'&lt;/code&gt; engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afdf79cca48390bca6a728ed44711f54c4a9b53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/home/html/example.com/news/story_detail.html&lt;/code&gt; (&lt;code&gt;'django'&lt;/code&gt; engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e7113fb1ad1a988cbbaffba5e3ee7fe7815c4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/home/html/example.com/story_253_detail.html&lt;/code&gt; (&lt;code&gt;'django'&lt;/code&gt; engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b51b9eb8d6a87c16fce73c6e67a7e5f70cbdaea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/home/html/example.com/story_detail.html&lt;/code&gt; (&lt;code&gt;'django'&lt;/code&gt; engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f7f7b4252df147b8deb5076d9666c5e2ad8366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/home/html/jinja2/news/story_detail.html&lt;/code&gt; (&lt;code&gt;'jinja2'&lt;/code&gt; engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249a83ca1b2bcf1cf969fb4b9bd8b8f21496f649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/home/html/jinja2/story_253_detail.html&lt;/code&gt; (&lt;code&gt;'jinja2'&lt;/code&gt; engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc51e6cd196d6b30720e830823a0ef089d6e606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/home/html/jinja2/story_detail.html&lt;/code&gt; (&lt;code&gt;'jinja2'&lt;/code&gt; engine)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9082d2cf1a1dcd9420d8c022f11fe0881ccaf7d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;000000&lt;/code&gt; to &lt;code&gt;999999&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ae712e2ea36836769e63209db2aafbe75a7fd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; for &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt;s and &lt;a href=&quot;#django.contrib.gis.geos.MultiPoint&quot;&gt;&lt;code&gt;MultiPoint&lt;/code&gt;&lt;/a&gt;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5b62c342cabbbbca1e0632db3d6ce0179c1e61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; means no output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b932fb31c8c6add416b0fc55f5581ac6dc59aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1000000&lt;/code&gt; becomes &lt;code&gt;'1,0 Million'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3271d2276859a5e6f41f2195af0bcfe31bcd352" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1000000&lt;/code&gt; becomes &lt;code&gt;1.0 million&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce53ebce00213895182c85e340b9c52fb7d5d5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;10&lt;/code&gt; becomes &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29171592cd3a338392c83de8b1d3963ecbaf063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1200000000&lt;/code&gt; becomes &lt;code&gt;'1,2 Milliarden'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931a584fc53740da9ee0d3853429e75c893a6ca3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1200000000&lt;/code&gt; becomes &lt;code&gt;1.2 billion&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacd0ad8cb9e4479dcaeb8947351180ae98c6a53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1200000&lt;/code&gt; becomes &lt;code&gt;'1,2 Millionen'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f911c0b9afc84ac2ef5dd6905183b19e3ec297" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1200000&lt;/code&gt; becomes &lt;code&gt;1.2 million&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebeb69918e3d861028330d40d3603d4a0f38cf7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;16 Feb 2007 13:30:00&lt;/code&gt; becomes &lt;code&gt;1 day, 3 hours ago&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da8b69d0615f59cfd6592086822098a2eb2689b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;16 Feb 2007 13:30:01&lt;/code&gt; becomes &lt;code&gt;1 day, 2 hours ago&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0b34cad8158bd9ac13b89445088fc81fd44135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;16 Feb 2007 13:31:29&lt;/code&gt; becomes &lt;code&gt;1 day, 2 hours ago&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8ef747c1587d7c8ddbc3db09f762a8cd4600ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;16 Feb 2007&lt;/code&gt; becomes &lt;code&gt;yesterday&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f131c03464e432c3a002f6eb97614fd365ef629" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 13:31:29&lt;/code&gt; becomes &lt;code&gt;2 hours ago&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752822af7c4c4d81c3aec72005ba19d34fd5440a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 15:30:00&lt;/code&gt; becomes &lt;code&gt;an hour ago&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c7e7ede734324766d391ca7d28c8830f74e197" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 15:30:01&lt;/code&gt; becomes &lt;code&gt;59 minutes ago&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa433ec1d2ed23108850e8ead226b1098c544145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 15:30:29&lt;/code&gt; becomes &lt;code&gt;59 minutes ago&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42777c91144de724ad99b4acb9c8eefaa495d6a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 16:25:35&lt;/code&gt; becomes &lt;code&gt;4 minutes ago&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a61f094ad10803920f6d11851b70254765b078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 16:29:00&lt;/code&gt; becomes &lt;code&gt;a minute ago&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a418808f6aee7869959a234932d4e2612c101f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 16:29:31&lt;/code&gt; becomes &lt;code&gt;29 seconds ago&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a75dbd43e968ed23f2441d1326d9f0531c27b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 16:30:00&lt;/code&gt; becomes &lt;code&gt;now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c460081a2f97d9a38e17ef891d3b3c13d8fcea94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 16:30:29&lt;/code&gt; becomes &lt;code&gt;29 seconds from now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9376c4069ca2d087311c76545893d5a64f6defb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 16:30:30&lt;/code&gt; becomes &lt;code&gt;30 seconds from now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124d43a38df5930f991bdda5ef5e4debba163a92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 16:31:00&lt;/code&gt; becomes &lt;code&gt;a minute from now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2304ca46234b2a371c4e93cba72acaefcde9ea9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 16:34:35&lt;/code&gt; becomes &lt;code&gt;4 minutes from now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a39dd092bc71361d8f88e8f769ee958d62a94d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 17:30:29&lt;/code&gt; becomes &lt;code&gt;an hour from now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17971ce4adf0f00071ac3ce5c9150025aa1e817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007 18:31:29&lt;/code&gt; becomes &lt;code&gt;2 hours from now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5adf38aa39282852918ece931e793204870085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;17 Feb 2007&lt;/code&gt; becomes &lt;code&gt;today&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad8072969d59308de912446a023e70c7755f396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;18 Feb 2007 16:31:29&lt;/code&gt; becomes &lt;code&gt;1 day from now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63aa7d6519c4d3ad596ddd2ae88efea40c6ab8c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;18 Feb 2007&lt;/code&gt; becomes &lt;code&gt;tomorrow&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9ede3df09ea33d27ab41aef34efeec57980090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; becomes &lt;code&gt;1st&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ebe60f7ec5c85297b88126a80467afaa2e2688e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; becomes &lt;code&gt;one&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44fb19c37070937ee510f48471f8d3646e2aadb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; for &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt;s and &lt;a href=&quot;#django.contrib.gis.geos.MultiLineString&quot;&gt;&lt;code&gt;MultiLineString&lt;/code&gt;&lt;/a&gt;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0d3f53114c9fbf04a5bbe166944928ff564c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; means normal output (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34654632bb7a46cddf47ddba6b0b110a42705367" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt; to &lt;code&gt;366&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e783e0ff69e34674076aecdfe543b0c69f3cd82e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1&lt;/code&gt;, &lt;code&gt;53&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff4669d61739eabd6414aabbcaa685b9bf40805" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2008-01-02T10:30:00.000123+02:00&lt;/code&gt;, or &lt;code&gt;2008-01-02T10:30:00.000123&lt;/code&gt; if the datetime is naive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713e8f3c1fa1851534deed2ab2f826dab6aa2d35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;26 Feb 2007 18:31:29&lt;/code&gt; becomes &lt;code&gt;1 week, 2 days from now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b5067e7f9e67a02971a964a98506a952e3e09c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;28&lt;/code&gt; to &lt;code&gt;31&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819371d67e48ffc6deebd4aeb11ce844c6205a94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; becomes &lt;code&gt;2nd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b52ac7f50cef76e48e4d7f1a3bcc3cba8f6eff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; becomes &lt;code&gt;two&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b47eb727a619cd5a772329315b9c5b78edfca1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; for &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt;s and &lt;a href=&quot;#django.contrib.gis.geos.MultiPolygon&quot;&gt;&lt;code&gt;MultiPolygon&lt;/code&gt;&lt;/a&gt;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebf970a090f5fb005a5ae043ee863335ee8435d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; means verbose output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fe8a49f36305bcf1470ec1b83a5a0ad41c58c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3&lt;/code&gt; becomes &lt;code&gt;3rd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253e691f8d6cf36d023882697f7d308915adfc63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;3&lt;/code&gt; means &lt;em&gt;very&lt;/em&gt; verbose output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4db160ebdd58b9dc5e5a43a751e6a3ed2645c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4500.2&lt;/code&gt; becomes &lt;code&gt;4,500.2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62092396c48da46274943ed4cf8442387d1eaaec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4500000&lt;/code&gt; becomes &lt;code&gt;4,500,000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3863f5c57b7fc8d64e8dca3915dc4da9df96147b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;450000&lt;/code&gt; becomes &lt;code&gt;'450.000'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875475b7237c3df7f3466f7642d13e1cfd1817e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;450000&lt;/code&gt; becomes &lt;code&gt;450,000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56cf2ea54303592875b49250f31ecbd4b4707ddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;45000&lt;/code&gt; becomes &lt;code&gt;'45.000'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c63926f5d7aa27c635d0d0e328c94672f37d7c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;45000&lt;/code&gt; becomes &lt;code&gt;45,000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087768d70ea2c0ebd12122129c6c0b733c0a57c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;4500&lt;/code&gt; becomes &lt;code&gt;4,500&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b20deef32d08505f712a441a7e651cd5157a51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e802d205c4e6c751b0137d211e29f1bdcf045c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375d93a6ddad7caf2dc2a454c889a364254f5068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; is also &lt;a href=&quot;../topics/testing/advanced#topics-testing-advanced-multiple-hosts&quot;&gt;checked when running tests&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc14db548005ad5efdfc52eb84d44fe0eb1d8054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractBaseSession&lt;/code&gt; and &lt;code&gt;BaseSessionManager&lt;/code&gt; are importable from &lt;code&gt;django.contrib.sessions.base_session&lt;/code&gt; so that they can be imported without including &lt;code&gt;django.contrib.sessions&lt;/code&gt; in &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991abebcd24c9954466189c3bcadd02f02d74bcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractBaseUser&lt;/code&gt; and &lt;code&gt;BaseUserManager&lt;/code&gt; are importable from &lt;code&gt;django.contrib.auth.base_user&lt;/code&gt; so that they can be imported without including &lt;code&gt;django.contrib.auth&lt;/code&gt; in &lt;a href=&quot;../../ref/settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72dee087121e5ae3b44f0b9c74ddee82f1dca3f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdminSite&lt;/code&gt; attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ea5934a3b08440c2d22dc42a7bc1afeffa7eb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdminSite&lt;/code&gt; instances take a single argument to their constructor, their name, which can be anything you like. This argument becomes the prefix to the URL names for the purposes of &lt;a href=&quot;#admin-reverse-urls&quot;&gt;reversing them&lt;/a&gt;. This is only necessary if you are using more than one &lt;code&gt;AdminSite&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5364b4e8deae1f1d7d836590cf8147f559a0836" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdminSite&lt;/code&gt; methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdc7885c206ec6bf9fc9da73eb7bacd7af8f3dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdminSite&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb73f0f5472c02c262877c68970da740db4b0810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Aggregate()&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c24eaddcdf57bd4fd4bdb7762201171ae9ca609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnonymousUser&lt;/code&gt; object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace3188b38c9db7255016ce41aa99e744513b012" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppConfig.get_model(model_name, require_ready=True)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/apps/config/#AppConfig.get_model&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85edfd2ac1661f7588f1177f8d4e71c89ced6a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppConfig.get_models()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/apps/config/#AppConfig.get_models&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d6e4b97ba9f13f26b168574c76408e56861947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppConfig.ready()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/apps/config/#AppConfig.ready&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28eaaf4013f499b3ccc55a3604882f73576aef20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Article&lt;/code&gt; objects have access to their related &lt;code&gt;Publication&lt;/code&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b8250033a7b5ea59ecbc1a79a788632dee4caa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseCommand&lt;/code&gt; subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1a7ad787370add1a647610d4adf157657e123f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseFormSet&lt;/code&gt; has a couple of methods that are closely related to the &lt;code&gt;ManagementForm&lt;/code&gt;, &lt;code&gt;total_form_count&lt;/code&gt; and &lt;code&gt;initial_form_count&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a53ab68a8c6a62f2a151e755823eb4c5495455" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BaseFormSet&lt;/code&gt; provides an additional attribute &lt;code&gt;empty_form&lt;/code&gt; which returns a form instance with a prefix of &lt;code&gt;__prefix__&lt;/code&gt; for easier use in dynamic forms with JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a36bb2a8d67f90ef947d3217ce8e4ed67e5f894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BinaryField&lt;/code&gt; has one extra optional argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b932b27c3caf70183e9c30d82e01d1e9ab14f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Book queryset for use by&lt;/code&gt;&lt;a href=&quot;../../ref/class-based-views/generic-display#django.views.generic.list.ListView&quot;&gt;&lt;code&gt;ListView&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9910073b2d6bf7390c082beccceaee46d143909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BookFormSet&lt;/code&gt;&amp;rsquo;s &lt;a href=&quot;formsets#formset-prefix&quot;&gt;prefix&lt;/a&gt; is &lt;code&gt;'book_set'&lt;/code&gt; (&lt;code&gt;&amp;lt;model name&amp;gt;_set&lt;/code&gt; ). If &lt;code&gt;Book&lt;/code&gt;&amp;rsquo;s &lt;code&gt;ForeignKey&lt;/code&gt; to &lt;code&gt;Author&lt;/code&gt; has a &lt;a href=&quot;../../ref/models/fields#django.db.models.ForeignKey.related_name&quot;&gt;&lt;code&gt;related_name&lt;/code&gt;&lt;/a&gt;, that&amp;rsquo;s used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9518c447a4dfd066f9c26aee47052bf536c166eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bookmark&lt;/code&gt; instances will each have a &lt;code&gt;tags&lt;/code&gt; attribute, which can be used to retrieve their associated &lt;code&gt;TaggedItems&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f6d4e63454831372fc97e0c0f885c7b2fdf663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CIText&lt;/code&gt; fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223e8f45500fd2f649e694dd78827b68e69cbc13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONTENT_LENGTH&lt;/code&gt; &amp;ndash; The length of the request body (as a string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c16627eea432c93c05f5f506f3962e41544f2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONTENT_TYPE&lt;/code&gt; &amp;ndash; The MIME type of the request body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20000d9e01de29ba37d2ec1a4be44d44db06cbbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CRITICAL&lt;/code&gt;: Information describing a critical problem that has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e92fd2b68d519597d538f8b61eb5b9a8a69411" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CULL_FREQUENCY&lt;/code&gt;: The fraction of entries that are culled when &lt;code&gt;MAX_ENTRIES&lt;/code&gt; is reached. The actual ratio is &lt;code&gt;1 / CULL_FREQUENCY&lt;/code&gt;, so set &lt;code&gt;CULL_FREQUENCY&lt;/code&gt; to &lt;code&gt;2&lt;/code&gt; to cull half the entries when &lt;code&gt;MAX_ENTRIES&lt;/code&gt; is reached. This argument should be an integer and defaults to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903673a401c85dc65f7ac634dfdb3029b10e1116" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CachedStaticFilesStorage&lt;/code&gt; is a similar class like the &lt;a href=&quot;#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt;&lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;&lt;/a&gt; class but uses Django&amp;rsquo;s &lt;a href=&quot;../../topics/cache&quot;&gt;caching framework&lt;/a&gt; for storing the hashed names of processed files instead of a static manifest file called &lt;code&gt;staticfiles.json&lt;/code&gt;. This is mostly useful for situations in which you don&amp;rsquo;t have access to the file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f2046d6be30637c67ba10ab03589f9b7d3c5de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CachedStaticFilesStorage&lt;/code&gt; isn&amp;rsquo;t recommended &amp;ndash; in almost all cases &lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt; is a better choice. There are several performance penalties when using &lt;code&gt;CachedStaticFilesStorage&lt;/code&gt; since a cache miss requires hashing files at runtime. Remote file storage require several round-trips to hash a file on a cache miss, as several file accesses are required to ensure that the file hash is correct in the case of nested file paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b3c68b7dafc7dc1bbf85d52abeaf8723c83f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Case()&lt;/code&gt; accepts any number of &lt;code&gt;When()&lt;/code&gt; objects as individual arguments. Other options are provided using keyword arguments. If none of the conditions evaluate to &lt;code&gt;TRUE&lt;/code&gt;, then the expression given with the &lt;code&gt;default&lt;/code&gt; keyword argument is returned. If a &lt;code&gt;default&lt;/code&gt; argument isn&amp;rsquo;t provided, &lt;code&gt;None&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5150697e6322deaeb6d1b06c222f71f46fa189e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Case()&lt;/code&gt; also works in a &lt;code&gt;filter()&lt;/code&gt; clause. For example, to find gold clients that registered more than a month ago and platinum clients that registered more than a year ago:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df38a1052dfc84bc1b42cb5405bdcf94b7e1ec1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CommentNode.render()&lt;/code&gt; returns an empty string. Anything between &lt;code&gt;{% comment %}&lt;/code&gt; and &lt;code&gt;{% endcomment %}&lt;/code&gt; is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30ab39ab24a73e0f8b5c8b69fa40f04c0458f15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CommonPasswordValidator&lt;/code&gt;, which checks whether the password occurs in a list of common passwords. By default, it compares to an included list of 20,000 common passwords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbbe1fa8457a62c52b8096784c9f7f7855b8c26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEBUG&lt;/code&gt;: Low level system information for debugging purposes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff8c07a634aadfb2091bca8daa642c4c19d5114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFAULT_MESSAGE_LEVELS&lt;/code&gt; &amp;ndash; A mapping of the message level names to &lt;a href=&quot;../contrib/messages#message-level-constants&quot;&gt;their numeric value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd535cc3a212eed3d601a594cf0248595f01b66e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateField&lt;/code&gt; extracts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200ea4a9ce8681614410db3c89bfd915b7851385" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateField&lt;/code&gt; truncation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e5a165ed1c3c7d4962fce0be170f12a9498450" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateTimeField&lt;/code&gt; examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857a784dd664dd436d4d04af4869ff0ca0836e61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateTimeField&lt;/code&gt; extracts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828d3321c4a833a2df8e0f8b899783202c2d04ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateTimeField&lt;/code&gt; truncation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fccca44c060ef88b1c01cd6270421fa2dead574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decimal, Promise (django.utils.functional.lazy() objects),&lt;/code&gt;&lt;a href=&quot;https://docs.python.org/3/library/uuid.html#uuid.UUID&quot;&gt;&lt;code&gt;UUID&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd4c4134efe27083422fce6426b8d1b7c0c4b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DetailView&lt;/code&gt;: working with a single Django object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d64a1958ff553e6a9c6ddc0138ca0f9970815a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DiscoverRunner&lt;/code&gt; will search for tests in any file matching &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924f918d671f57f7e36e629eba015cc30a5b1a0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DjangoTemplates&lt;/code&gt; engines accept the following &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3ba97bd61dc23bc956a78bb759bd5830f2627c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERROR&lt;/code&gt;: Information describing a major problem that has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad656bb1259dbd5273cffcae2052ada6c9bda87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EmailMessage&lt;/code&gt; Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b763ebe20b9c2d7fce5a6d518bc08549629522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EmptyResultSet&lt;/code&gt; may be raised during query generation if a query won&amp;rsquo;t return any results. Most Django projects won&amp;rsquo;t encounter this exception, but it might be useful for implementing custom lookups and expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfae438f42821ce92fe08145913b3882887d5920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Exists()&lt;/code&gt; subqueries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f1398f15f8f3152bd09a577d1328aa89a58eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Exists&lt;/code&gt; is a &lt;code&gt;Subquery&lt;/code&gt; subclass that uses an SQL &lt;code&gt;EXISTS&lt;/code&gt; statement. In many cases it will perform better than a subquery since the database is able to stop evaluation of the subquery when a first matching row is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a55931522f9b13762ee3181d39bfbff9dc4181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExpressionWrapper()&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd155ecee8cc63e6f69186e841f47e900d416aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExpressionWrapper&lt;/code&gt; surrounds another expression and provides access to properties, such as &lt;code&gt;output_field&lt;/code&gt;, that may not be available on other expressions. &lt;code&gt;ExpressionWrapper&lt;/code&gt; is necessary when using arithmetic on &lt;code&gt;F()&lt;/code&gt; expressions with different types as described in &lt;a href=&quot;#using-f-with-annotations&quot;&gt;Using F() with annotations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937d8585709d2236e556a9e0514565d8e7674b96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F()&lt;/code&gt; assignments persist after &lt;code&gt;Model.save()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e3a03c711dda4f1c88bcda3290633b7ffecd1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F()&lt;/code&gt; can be used to create dynamic fields on your models by combining different fields with arithmetic:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c9020bf0365dd408372f72be1fb0ce8e04ac8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F()&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ea977341c4d4e269d659e47fb7a346f55a105d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F()&lt;/code&gt; is also very useful in &lt;code&gt;QuerySet&lt;/code&gt; filters, where they make it possible to filter a set of objects against criteria based on their field values, rather than on Python values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245a0498259bc8682d049c7908c284903b37eab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F()&lt;/code&gt; objects assigned to model fields persist after saving the model instance and will be applied on each &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;save()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caec2b0aaea1b912e4098c799c1dfea8c4037f69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F()&lt;/code&gt; therefore can offer performance advantages by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f1b501f1124dd52b8aa899bd67d822a06b7a95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILES&lt;/code&gt; will only contain data if the request method was POST and the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; that posted to the request had &lt;code&gt;enctype=&quot;multipart/form-data&quot;&lt;/code&gt;. Otherwise, &lt;code&gt;FILES&lt;/code&gt; will be a blank dictionary-like object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a51ec0426c89f7830653103c8bae165b5803b16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; (&lt;code&gt;Pizza&lt;/code&gt; contains the &lt;a href=&quot;models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;, so this call modifies the forward relation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f452a483cd3c232a48047fb294451dacaa62f009" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; = left-to-right layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce25d297a145dc4e646e41ad052229e9163f9718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;False&lt;/code&gt; by default. If set to &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;get_fields()&lt;/code&gt; will include fields that are used to back other field&amp;rsquo;s functionality. This will also include any fields that have a &lt;code&gt;related_name&lt;/code&gt; (such as &lt;a href=&quot;fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;fields#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt;) that start with a &amp;ldquo;+&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4e20fbdcef12a45061058c300babb221f0e6f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Feature&lt;/code&gt; wraps an OGR feature. You never create a &lt;code&gt;Feature&lt;/code&gt; object directly. Instead, you retrieve them from a &lt;a href=&quot;#django.contrib.gis.gdal.Layer&quot;&gt;&lt;code&gt;Layer&lt;/code&gt;&lt;/a&gt; object. Each feature consists of a geometry and a set of fields containing additional properties. The geometry of a field is accessible via its &lt;code&gt;geom&lt;/code&gt; property, which returns an &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; object. A &lt;code&gt;Feature&lt;/code&gt; behaves like a standard Python container for its fields, which it returns as &lt;a href=&quot;#django.contrib.gis.gdal.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; objects: you can access a field directly by its index or name, or you can iterate over a feature&amp;rsquo;s fields, e.g. in a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcc852c6a42266d4a943bff96dc5f88337caee5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Feed&lt;/code&gt; Subclass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5532b833e010ebca111ff403c41c5d724fddb551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Feed&lt;/code&gt; class reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951a2e2a6dac19dca591b37da472427cf82a20c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Feed&lt;/code&gt; classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525d9a8a84c6f5d704e8d4d2ee34856f68843c24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FetchFromCacheMiddleware&lt;/code&gt; caches GET and HEAD responses with status 200, where the request and response headers allow. Responses to requests for the same URL with different query parameters are considered to be unique pages and are cached separately. This middleware expects that a HEAD request is answered with the same response headers as the corresponding GET request; in which case it can return a cached GET response for HEAD request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883378e75d5b5e50295490820b6d142f582f9fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FetchFromCacheMiddleware&lt;/code&gt;, on the other hand, runs during the request phase, where middleware is applied first-to-last, so an item at the top of the list runs &lt;em&gt;first&lt;/em&gt; during the request phase. The &lt;code&gt;FetchFromCacheMiddleware&lt;/code&gt; also needs to run after other middleware updates the &lt;code&gt;Vary&lt;/code&gt; header, so &lt;code&gt;FetchFromCacheMiddleware&lt;/code&gt; must be &lt;em&gt;after&lt;/em&gt; any item that does so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f72507993db1c89c101ed65aed3c3feff6a1cb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Field&lt;/code&gt; implements the &lt;a href=&quot;lookups#lookup-registration-api&quot;&gt;lookup registration API&lt;/a&gt;. The API can be used to customize which lookups are available for a field class, and how lookups are fetched from a field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897ddb1c7b3ae84f53f6c4c5f490f8746d1f9482" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Field&lt;/code&gt; is an abstract class that represents a database table column. Django uses fields to create the database table (&lt;a href=&quot;#django.db.models.Field.db_type&quot;&gt;&lt;code&gt;db_type()&lt;/code&gt;&lt;/a&gt;), to map Python types to database (&lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt;) and vice-versa (&lt;a href=&quot;#django.db.models.Field.from_db_value&quot;&gt;&lt;code&gt;from_db_value()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efa21acfc1c3634cd8cc0664868791500b4f852" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Field&lt;/code&gt; lookups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abc354cf8600c79db31466df37869be42fec5d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileField&lt;/code&gt; and &lt;code&gt;FieldFile&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4190bdc583419fe42309e9d8a0d0f9f9e63e7e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileResponse&lt;/code&gt; accepts any file-like object with binary content, for example a file open in binary mode like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d28d66eda3f75aa7bb9aaed4df392f9bdb8fad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileResponse&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83eab8ddd5ab278eb027f4a2b580d985eb890e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileUploadHandler.file_complete(file_size)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/files/uploadhandler/#FileUploadHandler.file_complete&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d664fcdcecb43b3a49681b5494a87b6a39ddffd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileUploadHandler.handle_raw_input(input_data, META, content_length, boundary, encoding)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/files/uploadhandler/#FileUploadHandler.handle_raw_input&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3cc98320742b35721cc11c390e06741b40c757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileUploadHandler.new_file(field_name, file_name, content_type, content_length, charset, content_type_extra)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/files/uploadhandler/#FileUploadHandler.new_file&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aea5d3da9fe79382d732747c1022838bb15c87d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileUploadHandler.receive_data_chunk(raw_data, start)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/files/uploadhandler/#FileUploadHandler.receive_data_chunk&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cf93f8e1a5db4552685c45172fa5c636da7311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileUploadHandler.upload_complete()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/files/uploadhandler/#FileUploadHandler.upload_complete&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6c249836024110d2d17b5614f8fba91209130f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FilteredRelation()&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b192a18306d6747642dfdd981076986c6e51ad58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FilteredRelation&lt;/code&gt; doesn&amp;rsquo;t support:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5097b3402eabf4f5cbc9f79457ff73cc7bed9d79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FilteredRelation&lt;/code&gt; is used with &lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;ON&lt;/code&gt; clause when a &lt;code&gt;JOIN&lt;/code&gt; is performed. It doesn&amp;rsquo;t act on the default relationship but on the annotation name (&lt;code&gt;pizzas_vegetarian&lt;/code&gt; in example below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaa7655054a38a94dfe1898b0012e03b5ec0871" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FloatField&lt;/code&gt; vs. &lt;code&gt;DecimalField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed462b1f625600a5f82c7f76358d7258c950047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ForeignKey&lt;/code&gt; is represented by &lt;code&gt;django.forms.ModelChoiceField&lt;/code&gt;, which is a &lt;code&gt;ChoiceField&lt;/code&gt; whose choices are a model &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ac4f6541896483609988fe85d5c94ae57deb1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Func()&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79730305a3b7dff755f12e684c5e2d92c35ba069" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Func()&lt;/code&gt; expressions are the base type of all expressions that involve database functions like &lt;code&gt;COALESCE&lt;/code&gt; and &lt;code&gt;LOWER&lt;/code&gt;, or aggregates like &lt;code&gt;SUM&lt;/code&gt;. They can be used directly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87ddd7fb357e54230eff53aea13e0a610306e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GDALBand&lt;/code&gt; instances are not created explicitly, but rather obtained from a &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster&quot;&gt;&lt;code&gt;GDALRaster&lt;/code&gt;&lt;/a&gt; object, through its &lt;a href=&quot;#django.contrib.gis.gdal.GDALRaster.bands&quot;&gt;&lt;code&gt;bands&lt;/code&gt;&lt;/a&gt; attribute. The GDALBands contain the actual pixel values of the raster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d634b15a3d5fd77a62ca6e332ccf8b59d92b5fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c04e019f42371a7096483b3c61ba18c9ff7b5c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; are the only HTTP methods to use when dealing with forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac401b26a41e361ebbc640dd939e0e0c127ae2b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;POST&lt;/code&gt; are typically used for different purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242e2e4ad6d9d42025c091019253ff5f36e30399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET&lt;/code&gt; would also be unsuitable for a password form, because the password would appear in the URL, and thus, also in browser history and server logs, all in plain text. Neither would it be suitable for large quantities of data, or for binary data, such as an image. A Web application that uses &lt;code&gt;GET&lt;/code&gt; requests for admin forms is a security risk: it can be easy for an attacker to mimic a form&amp;rsquo;s request to gain access to sensitive parts of the system. &lt;code&gt;POST&lt;/code&gt;, coupled with other protections like Django&amp;rsquo;s &lt;a href=&quot;../../ref/csrf&quot;&gt;CSRF protection&lt;/a&gt; offers more control over access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb9f1bd8c10d8e863aa8cd152bdaeb51bcebd12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET&lt;/code&gt;, by contrast, bundles the submitted data into a string, and uses this to compose a URL. The URL contains the address where the data must be sent, as well as the data keys and values. You can see this in action if you do a search in the Django documentation, which will produce a URL of the form &lt;code&gt;https://docs.djangoproject.com/search/?q=forms&amp;amp;release=1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca93ef68e56dff9bc72b622546fe0cb1b2b63fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GZipMiddleware&lt;/code&gt; adds &lt;code&gt;Accept-Encoding&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443ee505bb8a61ff13def7ce9925f6e746c30b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GeoJSON&lt;/code&gt; Serializer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1318b05ae23f9e26302cf6ebd1674b5687772fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GeometryCollection&lt;/code&gt; objects may be instantiated by passing in other &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; as arguments, or a single sequence of &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94be3207706fe362d1fe5a0c3696807a90fbec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Group&lt;/code&gt; model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb40fac8b1a7fd0d8d5e25004cb8ee2c829078bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HStoreField&lt;/code&gt; is not particularly user friendly in most cases, however it is a useful way to format data from a client-side widget for submission to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b723440aeddab2a3d50de91a9f6aca927583ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTTP_ACCEPT&lt;/code&gt; &amp;ndash; Acceptable content types for the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5794dba23d198a50d5faa852e32421f62e70b74f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTTP_ACCEPT_ENCODING&lt;/code&gt; &amp;ndash; Acceptable encodings for the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1501d50864b2bd3b41d8b1be9381a67e92086f22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTTP_ACCEPT_LANGUAGE&lt;/code&gt; &amp;ndash; Acceptable languages for the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56943e8aadd87518bab168c9706c465644f22925" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTTP_HOST&lt;/code&gt; &amp;ndash; The HTTP Host header sent by the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84afcd32720015e1f63c21add059bf8c7497254d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTTP_REFERER&lt;/code&gt; &amp;ndash; The referring page, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6810b846df4c36b7735d4db7962eecc7f88dd8d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTTP_USER_AGENT&lt;/code&gt; &amp;ndash; The client&amp;rsquo;s user-agent string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2870faa12ea76c12341cf06820cf7ad4ad4f8d99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HttpRequest&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba0eccb6546fd728eebe1a0a2e65c2a29bd3dcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HttpResponse&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca66bb9e70570d172d1749105dccd7238e61548" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HttpResponse&lt;/code&gt; subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcec5be1f13a6e6e35f67abf1a171a97c3f306a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INFO&lt;/code&gt;: General system information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e3c88694e013d53310d77de3f0e50c625f8f25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImportError: cannot import name ...&lt;/code&gt; This happens if the import sequence ends up in a loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b5c12f37e82a51e0bdf0feb196d304ac24a064" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Index&lt;/code&gt; options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac2315c62f37608a8c70c555d8f88ba6098b688" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InlineModelAdmin&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbac98a53893eabc90fd7fa2cad99f797138351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InlineModelAdmin&lt;/code&gt; options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa3c9e8741e9d8195e7d0c690d10bbc1f700164" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InlineModelAdmin&lt;/code&gt; shares many of the same features as &lt;code&gt;ModelAdmin&lt;/code&gt;, and adds some of its own (the shared features are actually defined in the &lt;code&gt;BaseModelAdmin&lt;/code&gt; superclass). The shared features are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb309bd6f78f854e86db1dc0087c90c5f6e84762" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSONField&lt;/code&gt; is not particularly user friendly in most cases, however it is a useful way to format data from a client-side widget for submission to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a896e95c512dec0d44e58f9e1908683be9ba04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Jinja2&lt;/code&gt; engines also accept the following &lt;a href=&quot;../ref/settings#std:setting-TEMPLATES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a423b62704cc1f24794afc6bc4e5d94e7618afd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JsonResponse&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd07442853de7316f355b8806ca709168e2789b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LANGUAGES&lt;/code&gt; &amp;ndash; The value of the &lt;a href=&quot;../settings#std:setting-LANGUAGES&quot;&gt;&lt;code&gt;LANGUAGES&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5744b78eb435f1e0434bf1363541e88619cab1ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LANGUAGE_BIDI&lt;/code&gt; &amp;ndash; &lt;code&gt;True&lt;/code&gt; if the current language is a right-to-left language, e.g. Hebrew, Arabic. &lt;code&gt;False&lt;/code&gt; if it&amp;rsquo;s a left-to-right language, e.g. English, French, German.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9cdfb53705944282c04c76b07b960b578a92df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LANGUAGE_CODE&lt;/code&gt; &amp;ndash; &lt;code&gt;request.LANGUAGE_CODE&lt;/code&gt;, if it exists. Otherwise, the value of the &lt;a href=&quot;../settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627ffedf4b2bda574d492ffeba8fd3f9c2177de4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4b631f0c13b10b0aeed79f09b59231aedb703f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Layer&lt;/code&gt; is a wrapper for a layer of data in a &lt;code&gt;DataSource&lt;/code&gt; object. You never create a &lt;code&gt;Layer&lt;/code&gt; object directly. Instead, you retrieve them from a &lt;a href=&quot;#django.contrib.gis.gdal.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; object, which is essentially a standard Python container of &lt;code&gt;Layer&lt;/code&gt; objects. For example, you can access a specific layer by its index (e.g. &lt;code&gt;ds[0]&lt;/code&gt; to access the first layer), or you can iterate over all the layers in the container in a &lt;code&gt;for&lt;/code&gt; loop. The &lt;code&gt;Layer&lt;/code&gt; itself acts as a container for geometric features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9a6420bf2c4bf826b0ffe9de9e65f6801f1878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LayerMapping&lt;/code&gt; API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a60235a81a971bbf21f739a1e96a996b764eae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LayerMapping&lt;/code&gt; data import utility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367b3150505aee71e4d9d7765c27f44e4985268f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LazyObject&lt;/code&gt; instances which wrap a serializable value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e84d0938bdae99d2070968fc87808726b441de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LineString&lt;/code&gt; objects are instantiated using arguments that are either a sequence of coordinates or &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; objects. For example, the following are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8bf7c826941c3561dd04411be7b0a6127dc0e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinearRing&lt;/code&gt; objects are constructed in the exact same way as &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt; objects, however the coordinates must be &lt;em&gt;closed&lt;/em&gt;, in other words, the first coordinates must be the same as the last coordinates. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de45d30389c4a132a774a9d7f0f365aa2a932a55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListView&lt;/code&gt;: working with many Django objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b79d4261672cb41c4d05e071284f383c48a4954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LiveServerTestCase&lt;/code&gt; does basically the same as &lt;a href=&quot;#django.test.TransactionTestCase&quot;&gt;&lt;code&gt;TransactionTestCase&lt;/code&gt;&lt;/a&gt; with one extra feature: it launches a live Django server in the background on setup, and shuts it down on teardown. This allows the use of automated test clients other than the &lt;a href=&quot;#test-client&quot;&gt;Django dummy client&lt;/a&gt; such as, for example, the &lt;a href=&quot;http://seleniumhq.org/&quot;&gt;Selenium&lt;/a&gt; client, to execute a series of functional tests inside a browser and simulate a real user&amp;rsquo;s actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef25e1d3f5608588abad7426b1f2d7a0888a306" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocaleMiddleware&lt;/code&gt; adds &lt;code&gt;Accept-Language&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9923db1f6ab837d5d98ce2b6243ce39e79103c6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocaleMiddleware&lt;/code&gt; tries to determine the user&amp;rsquo;s language preference by following this algorithm:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7d06130568cf3781be2a6805430a70cac63912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogEntry&lt;/code&gt; attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047667a091bc1f1a517d1d88ae8eeb52eff72a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogEntry&lt;/code&gt; methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae47e507fc4bcfee977734acec40b8b414c49384" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogEntry&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b788f2f86d325985a6ecfb2c68da98ff147bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lookup&lt;/code&gt; reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb2a7f7a7156088fd53cf3599448593bf2ba310" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MAX_ENTRIES&lt;/code&gt;: The maximum number of entries allowed in the cache before old values are deleted. This argument defaults to &lt;code&gt;300&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c303659f04ac1233c06edf9fd7ab520d50e7e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;META&lt;/code&gt; is the same object as &lt;code&gt;request.META&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce69ddb5eab138afb781b31ea93a5b42bd189983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Managers&lt;/code&gt; are accessible only via model classes, rather than from model instances, to enforce a separation between &amp;ldquo;table-level&amp;rdquo; operations and &amp;ldquo;record-level&amp;rdquo; operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf5beb8f4fd2d45a29d377c0f71dbbf759537f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManyToManyField&lt;/code&gt; fields aren&amp;rsquo;t supported, because that would entail executing a separate SQL statement for each row in the table. If you want to do this nonetheless, give your model a custom method, and add that method&amp;rsquo;s name to &lt;code&gt;list_display&lt;/code&gt;. (See below for more on custom methods in &lt;code&gt;list_display&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ef2fd643112b2f3670c5675e6e1ae6cd49e40d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManyToManyField&lt;/code&gt; is represented by &lt;code&gt;django.forms.ModelMultipleChoiceField&lt;/code&gt;, which is a &lt;code&gt;MultipleChoiceField&lt;/code&gt; whose choices are a model &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5942e54c553fa888868580947253d62126c310dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Media&lt;/code&gt; as a dynamic property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4032fc8fd32aa811819cb78f87403e17736b5e58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Media&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629c37c9785a94d1b4a77f6b2773d0b832748f53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Media&lt;/code&gt; objects can also be added together. When two &lt;code&gt;Media&lt;/code&gt; objects are added, the resulting &lt;code&gt;Media&lt;/code&gt; object contains the union of the assets specified by both:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cc20b15c559c771c0d5343f0247c9fde75a5cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Media&lt;/code&gt; on Forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bd05c300ef8bf43221f4adcadac49cf5c2fa70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Membership&lt;/code&gt; has &lt;em&gt;two&lt;/em&gt; foreign keys to &lt;code&gt;Person&lt;/code&gt; (&lt;code&gt;person&lt;/code&gt; and &lt;code&gt;inviter&lt;/code&gt;), which makes the relationship ambiguous and Django can&amp;rsquo;t know which one to use. In this case, you must explicitly specify which foreign keys Django should use using &lt;code&gt;through_fields&lt;/code&gt;, as in the example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7edfd3c3e0e508f19b35c501c6f410e721b1c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Meta&lt;/code&gt; and multi-table inheritance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610778482ee9084078c061c6aa30c646afa99e89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Meta&lt;/code&gt; inheritance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51a248c23224bdb2f919f41517f79735a192f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Meta&lt;/code&gt; options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b3c1df572d26ca2ff4b655113aa1dc9003697f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MinimumLengthValidator&lt;/code&gt;, which checks whether the password meets a minimum length. This validator is configured with a custom option: it now requires the minimum length to be nine characters, instead of the default eight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1626cce7abce502d70b3d4c9bf1c124a2034943" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Model.save()&lt;/code&gt; no longer attempts to find a row when saving a new &lt;code&gt;Model&lt;/code&gt; instance and a default value for the primary key is provided, and always executes an &lt;code&gt;INSERT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9dc4c8052b009c621df6d077a81ce619d7d937" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Model&lt;/code&gt; validation (&lt;a href=&quot;../../ref/models/instances#django.db.models.Model.full_clean&quot;&gt;&lt;code&gt;Model.full_clean()&lt;/code&gt;&lt;/a&gt;) is triggered from within the form validation step, right after the form&amp;rsquo;s &lt;code&gt;clean()&lt;/code&gt; method is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2dea6fe0b3c77b13fabf058ee5d4a89348cd2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelAdmin&lt;/code&gt; asset definitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e2b4bf4545b2c91191ffb17f253584e6856ff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelAdmin&lt;/code&gt; ignores this attribute when &lt;a href=&quot;../../models/querysets#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; was already called on the changelist&amp;rsquo;s &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a0f00b57dfccc788f16140142e4368b8d5da91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelAdmin&lt;/code&gt; methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d48258d3c40bb0f10bfcbda7de5eeec2d93099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelAdmin&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0c5c2a844511a61ce032b0a2c988e0f3adb3ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelAdmin&lt;/code&gt; objects have five methods that require customization for multiple-database support:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4b6a660f1dafb78747780e9c0fee7e1b023dfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelAdmin&lt;/code&gt; options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880c32c9914eac0f967b50f95f9c75b32dfafe68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelAdmin&lt;/code&gt; views have &lt;code&gt;model_admin&lt;/code&gt; attributes. Other &lt;code&gt;AdminSite&lt;/code&gt; views have &lt;code&gt;admin_site&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bbe4a808e732c8bd8155d7f001ca83a3836bd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelChoiceField&lt;/code&gt; also takes two optional arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31eed5c3c347d1542d7e87705aaeb69b33e64632" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelForm&lt;/code&gt; is a regular &lt;code&gt;Form&lt;/code&gt; which can automatically generate certain fields. The fields that are automatically generated depend on the content of the &lt;code&gt;Meta&lt;/code&gt; class and on which fields have already been defined declaratively. Basically, &lt;code&gt;ModelForm&lt;/code&gt; will &lt;strong&gt;only&lt;/strong&gt; generate fields that are &lt;strong&gt;missing&lt;/strong&gt; from the form, or in other words, fields that weren&amp;rsquo;t defined declaratively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da50fec15435fc3c2cbb0413c334eabc3355800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MultiLineString&lt;/code&gt; objects may be instantiated by passing in &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt; objects as arguments, or a single sequence of &lt;a href=&quot;#django.contrib.gis.geos.LineString&quot;&gt;&lt;code&gt;LineString&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b202e5bf3c4949d2266f9b95d9d4a381ca9734b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MultiPoint&lt;/code&gt; objects may be instantiated by passing in &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; objects as arguments, or a single sequence of &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39301bbe8d547de064347ac1b29a868b0f8aa33b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MultiPolygon&lt;/code&gt; objects may be instantiated by passing &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; objects as arguments, or a single sequence of &lt;a href=&quot;#django.contrib.gis.geos.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdcaf36d79b391d8b3d641f621872bd4ef56abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MyArticleAdminForm&lt;/code&gt; can be defined anywhere as long as you import where needed. Now within your form you can add your own custom validation for any field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c1acd31d415566f97986b52aedf3291aa5ff3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; (if the field allows &lt;code&gt;null=True&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4bc4e63684555e6c60037fcfd6af807d787080" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;: disables the flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02585ec9ac3ef26686fd4d944e816fc4aff1f593" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumericPasswordValidator&lt;/code&gt;, which checks whether the password isn&amp;rsquo;t entirely numeric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d4079735fbb959c51fc01a81dde270705c0953" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OpenLayersWidget&lt;/code&gt; and &lt;a href=&quot;#django.contrib.gis.forms.widgets.OSMWidget&quot;&gt;&lt;code&gt;OSMWidget&lt;/code&gt;&lt;/a&gt; use the &lt;code&gt;openlayers.js&lt;/code&gt; file hosted on the &lt;code&gt;cdnjs.cloudflare.com&lt;/code&gt; content-delivery network. You can subclass these widgets in order to specify your own version of the &lt;code&gt;OpenLayers.js&lt;/code&gt; file in the &lt;code&gt;js&lt;/code&gt; property of the inner &lt;code&gt;Media&lt;/code&gt; class (see &lt;a href=&quot;../../../topics/forms/media#assets-as-a-static-definition&quot;&gt;Assets as a static definition&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33037088fe56d2683a732b3eefc7293ceac70f0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; include file-upload information. See &lt;a href=&quot;#django.http.HttpRequest.FILES&quot;&gt;&lt;code&gt;FILES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7264b21d61f7a631bdd2d3d1f6c93149246a7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Page.end_index()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/paginator/#Page.end_index&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f913223d128d89267cccb8e6ec9a8288e6af82c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Page.has_next()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/paginator/#Page.has_next&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7883c087be674dd301c87499e86f2719145874fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Page.has_other_pages()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/paginator/#Page.has_other_pages&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f04ad47a57bc886ef7f5af928e99e663db682ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Page.has_previous()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/paginator/#Page.has_previous&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988f070a181613d295e7ba552c0d088172814a10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Page.next_page_number()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/paginator/#Page.next_page_number&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144df9221cbb7ecb7d245985dd3ba9bd12723e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Page.previous_page_number()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/paginator/#Page.previous_page_number&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856fe2b9e66d8f734824be2fa204c3c1b508a6f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Page.start_index()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/paginator/#Page.start_index&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eeed50b8040af8a7d8209305589279e8beae3ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Page&lt;/code&gt; class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d186068b6b0b7f848b9e5af51c40a79c8b023275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Paginator.get_page(number)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/paginator/#Paginator.get_page&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dafe7589b10e2d7ea6643d29a76ffe3daa3a964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Paginator.page(number)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/paginator/#Paginator.page&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0745c4ac47deb9702e25f429b63cdb9841e5a6e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Paginator&lt;/code&gt; class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ef438b224a313b17a33b590060070977927bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Permission&lt;/code&gt; model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4f3f00dae5c9235479dd0deebd487f8cafc865" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PermissionsMixin&lt;/code&gt; and &lt;code&gt;ModelBackend&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53264c6e7bd42453193cbc88b2a5d2ad6b42713a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pizza.toppings.through&lt;/code&gt; (the intermediate m2m class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3ece92f584d340f2d619c23dbcc2766057ef6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pizza&lt;/code&gt; (the class of the objects removed from the &lt;code&gt;Topping&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dbfde7b7000fb888ae52b777888595128232f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Point&lt;/code&gt; objects are instantiated using arguments that represent the component coordinates of the point or with a single sequence coordinates. For example, the following are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903f5a978a4d19cadbc2bae2ff560428cb79bf32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Polygon&lt;/code&gt; objects may be instantiated by passing in parameters that represent the rings of the polygon. The parameters must either be &lt;a href=&quot;#django.contrib.gis.geos.LinearRing&quot;&gt;&lt;code&gt;LinearRing&lt;/code&gt;&lt;/a&gt; instances, or a sequence that may be used to construct a &lt;a href=&quot;#django.contrib.gis.geos.LinearRing&quot;&gt;&lt;code&gt;LinearRing&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7aa38bbc12ee99dd0705b689e232f71ebd5291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prefetch()&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74040bb35396211d2e41b15c9a8be79355af9c93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Publication&lt;/code&gt; objects have access to their related &lt;code&gt;Article&lt;/code&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca8d5afc976b728e4d074aa114cd2e60862e808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Publisher queryset for use in&lt;/code&gt;&lt;a href=&quot;../../ref/class-based-views/mixins-single-object#django.views.generic.detail.SingleObjectMixin.get_object&quot;&gt;&lt;code&gt;get_object()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d706d913cf479616b4aa97ea895723e2c2910849" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Q()&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca60cbb5d575297ab801fcd3f561fdfeddff0bcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Q&lt;/code&gt; objects can be combined using the &lt;code&gt;&amp;amp;&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt; operators. When an operator is used on two &lt;code&gt;Q&lt;/code&gt; objects, it yields a new &lt;code&gt;Q&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e531f4088f784f5e568916a76224cc892580c9ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QUERY_STRING&lt;/code&gt; &amp;ndash; The query string, as a single (unparsed) string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4bee1abe0a6e78a6353d55e795d8576add21f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QueryDict&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fb64cfc282c395b0cc495ca5cc2e9d08703149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QuerySet.select_for_update()&lt;/code&gt; not supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726f9b5ba9ad59e5b4ce7dbb905800ecdf01f8f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QuerySet&lt;/code&gt; API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7393c63254601a010be8ae7df9e1bf9f4b58d47b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QuerySet&lt;/code&gt; API reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72efcef807d84ae97f76c2c9cde2d92fe50efc7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QuerySet&lt;/code&gt;s are lazy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49340a4e5fe1913ddbe9022ebec5fcff7f5c9a85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QuerySet&lt;/code&gt;s still return the model that was requested</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745af8a51e5158f38d29b485693dffb97aa8f8f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QuerySets&lt;/code&gt; are lazy &amp;ndash; the act of creating a &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; doesn&amp;rsquo;t involve any database activity. You can stack filters together all day long, and Django won&amp;rsquo;t actually run the query until the &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet&quot;&gt;&lt;code&gt;QuerySet&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;evaluated&lt;/em&gt;. Take a look at this example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786a8d6d4f2d18828e3c917c930cab23a40b7524" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Question.objects.filter(pub_date__lte=timezone.now())&lt;/code&gt; returns a queryset containing &lt;code&gt;Question&lt;/code&gt;s whose &lt;code&gt;pub_date&lt;/code&gt; is less than or equal to - that is, earlier than or equal to - &lt;code&gt;timezone.now&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdb1f87b1c3cf4e5c166e532d3a08b6765c8974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Question&lt;/code&gt; (the class itself)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67d272e0b096aa10a363919c8dc559b7e5207a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REMOTE_ADDR&lt;/code&gt; &amp;ndash; The IP address of the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d1b0db692ef48ad554ae50e865e522732b5c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REMOTE_HOST&lt;/code&gt; &amp;ndash; The hostname of the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb49c3993381a43637f8e95091cd4ae0d5c213c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REMOTE_USER&lt;/code&gt; &amp;ndash; The user authenticated by the Web server, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ce5c3e5f5baaf57c27554417951de681db4f12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REQUEST_METHOD&lt;/code&gt; &amp;ndash; A string such as &lt;code&gt;&quot;GET&quot;&lt;/code&gt; or &lt;code&gt;&quot;POST&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7499f3951aca8ada5473b72ebcd225a34c84180b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REQUIRED_FIELDS&lt;/code&gt; must contain all required fields on your user model, but should &lt;em&gt;not&lt;/em&gt; contain the &lt;code&gt;USERNAME_FIELD&lt;/code&gt; or &lt;code&gt;password&lt;/code&gt; as these fields will always be prompted for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897052bea5d9b1fcc311b4cbf580be2e88d43b35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RasterField&lt;/code&gt; is currently only implemented for the PostGIS backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a200b0cf93249a8c50caa0d150486eccee228e83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RasterField&lt;/code&gt; is currently only implemented for the PostGIS backend. Spatial lookups are available for raster fields, but spatial database functions and aggregates aren&amp;rsquo;t implemented for raster fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fd62f604de3771be51438e3f49c5c56e2db814" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RequestSite&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6ad96b1f607e9c19adf83f9d9194bf808196d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RunPython&lt;/code&gt; does not magically alter the connection of the models for you; any model methods you call will go to the default database unless you give them the current database alias (available from &lt;code&gt;schema_editor.connection.alias&lt;/code&gt;, where &lt;code&gt;schema_editor&lt;/code&gt; is the second argument to your function).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6da9482c63bdac93fd3993d0a628909eeaef82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SERVER_NAME&lt;/code&gt; &amp;ndash; The hostname of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc665b347c26a0cbcf96841958656df2a36e410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SERVER_PORT&lt;/code&gt; &amp;ndash; The port of the server (as a string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9449a0634a46cb76895c1c7a6a710a450261520f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHA1&lt;/code&gt;, &lt;code&gt;SHA224&lt;/code&gt;, &lt;code&gt;SHA256&lt;/code&gt;, &lt;code&gt;SHA384&lt;/code&gt;, and &lt;code&gt;SHA512&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8262ed4f036489dc8fb2306006edbac4fbd78d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SampleTestCaseChild.test&lt;/code&gt; will be labeled with &lt;code&gt;'slow'&lt;/code&gt;, &lt;code&gt;'core'&lt;/code&gt;, &lt;code&gt;'bar'&lt;/code&gt;, and &lt;code&gt;'foo'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792ad082b6b5f0ac2c78ea7ee5857b98086d32aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SearchQuery&lt;/code&gt; terms can be combined logically to provide more flexibility:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24442be042a8537c069d95531ab3bcdf2fe7fab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SearchQuery&lt;/code&gt; translates the terms the user provides into a search query object that the database compares to a search vector. By default, all the words the user provides are passed through the stemming algorithms, and then it looks for matches for all of the resulting terms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d7563da16084616e2cb58a9453df3081570f66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SearchVector&lt;/code&gt; objects can be combined together, allowing you to reuse them. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5efad6df88745c734c33b272df8d09dbfa92ff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecurityMiddleware&lt;/code&gt; can set the &lt;code&gt;Referrer-Policy&lt;/code&gt; header for you, based on the the &lt;a href=&quot;settings#std:setting-SECURE_REFERRER_POLICY&quot;&gt;&lt;code&gt;SECURE_REFERRER_POLICY&lt;/code&gt;&lt;/a&gt; setting (note spelling: browsers send a &lt;code&gt;Referer&lt;/code&gt; header when a user clicks a link, but the header instructing a browser whether to do so is spelled &lt;code&gt;Referrer-Policy&lt;/code&gt;). The valid values for this setting are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f4d44e647da6ea7c40889494cdb402ac8f1b6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecurityMiddleware&lt;/code&gt; will set this header for you on all HTTPS responses if you set the &lt;a href=&quot;settings#std:setting-SECURE_HSTS_SECONDS&quot;&gt;&lt;code&gt;SECURE_HSTS_SECONDS&lt;/code&gt;&lt;/a&gt; setting to a non-zero integer value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d519f5f8274cb059f937996d9c3a1d2279bcf391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SessionMiddleware&lt;/code&gt; adds &lt;code&gt;Cookie&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2c3e84811cdcaa81a191d97714e5ef72025369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SessionStore.create()&lt;/code&gt; is designed to create a new session (i.e. one not loaded from the session store and with &lt;code&gt;session_key=None&lt;/code&gt;). &lt;code&gt;save()&lt;/code&gt; is designed to save an existing session (i.e. one loaded from the session store). Calling &lt;code&gt;save()&lt;/code&gt; on a new session may also work but has a small chance of generating a &lt;code&gt;session_key&lt;/code&gt; that collides with an existing one. &lt;code&gt;create()&lt;/code&gt; calls &lt;code&gt;save()&lt;/code&gt; and loops until an unused &lt;code&gt;session_key&lt;/code&gt; is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b60a1bf18f3694a8511b3acd973ee224b414880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Signal.connect(receiver, sender=None, weak=True, dispatch_uid=None)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/dispatch/dispatcher/#Signal.connect&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0199076b451d3f1ccbcde57cb8d42bfc967d8ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Signal.disconnect(receiver=None, sender=None, dispatch_uid=None)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/dispatch/dispatcher/#Signal.disconnect&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ce8822966a3e42404fa0368229ea0a6d274262" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Signal.send(sender, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/dispatch/dispatcher/#Signal.send&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e272493c7587a074c5364b2decc2516d82e51cb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Signal.send_robust(sender, **kwargs)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/dispatch/dispatcher/#Signal.send_robust&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a962ddd2f13ed38c248081c3afa5e329d684b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleArrayField&lt;/code&gt; is not particularly user friendly in most cases, however it is a useful way to format data from a client-side widget for submission to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7d58946e2b826e6b67dcd5eb3fe066973efaf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTemplateResponse&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e684c193655e19f942b305fa7b4d6f0f67816d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTestCase&lt;/code&gt; and its subclasses (e.g. &lt;code&gt;TestCase&lt;/code&gt;, &amp;hellip;) rely on &lt;code&gt;setUpClass()&lt;/code&gt; and &lt;code&gt;tearDownClass()&lt;/code&gt; to perform some class-wide initialization (e.g. overriding settings). If you need to override those methods, don&amp;rsquo;t forget to call the &lt;code&gt;super&lt;/code&gt; implementation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69118275eff464209613c0c398600c59d88009cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sitemap&lt;/code&gt; class reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29bdf241dedaa34110abb05e76b456bb9c88d647" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sitemap&lt;/code&gt; classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6b4f519c18a44794e3424d09ac9a3ad890957b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SplitDateTimeWidget&lt;/code&gt; has several optional arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29d3863f8c9add7fb3d9d3f6d96db33fc8d203e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StreamingHttpResponse&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541eb6e43649b9efd106d2d3821422e71d47e8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Subquery()&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6002d89f3b92d0402bb443637208d97d1f4b174" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Subquery()&lt;/code&gt; that returns a boolean value and &lt;code&gt;Exists()&lt;/code&gt; may be used as a &lt;code&gt;condition&lt;/code&gt; in &lt;a href=&quot;conditional-expressions#django.db.models.expressions.When&quot;&gt;&lt;code&gt;When&lt;/code&gt;&lt;/a&gt; expressions, or to directly filter a queryset:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94aaf20a3eef535200c2370f733a6911c0385299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyndicationFeed&lt;/code&gt; Subclasses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f3a43e00a7c54013128af083f3c39acaa8f130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyndicationFeed&lt;/code&gt; classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd75228e9cafa4c85cfb3c553cd55efaf54f417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TIMESTAMP&lt;/code&gt; columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f0260e5cb737053a2573e8861a79a8005dde06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Template&lt;/code&gt; objects returned by &lt;code&gt;get_template()&lt;/code&gt; and &lt;code&gt;select_template()&lt;/code&gt; must provide a &lt;code&gt;render()&lt;/code&gt; method with the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49d280fa93a135ebe0150eced1548b4279c48b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TemplateResponse&lt;/code&gt; and &lt;code&gt;SimpleTemplateResponse&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588f1dd7c8320b1d1ec649ab6898a025e3a5e64d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TemplateResponse&lt;/code&gt; is a subclass of &lt;a href=&quot;#django.template.response.SimpleTemplateResponse&quot;&gt;&lt;code&gt;SimpleTemplateResponse&lt;/code&gt;&lt;/a&gt; that knows about the current &lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522055aeb21b1abee964d7c90f6cb0bfe63c1103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TemplateResponse&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523162b17cb90d0bc38ac97fac80392b0a6e2154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TemporaryUploadedFile.temporary_file_path()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/files/uploadedfile/#TemporaryUploadedFile.temporary_file_path&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5dbd19bc037f7e260c2f876f6195e8e32089b43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TestCase&lt;/code&gt; running on a database that does not support rollback (e.g. MySQL with the MyISAM storage engine), and all instances of &lt;code&gt;TransactionTestCase&lt;/code&gt;, will roll back at the end of the test by deleting all data from the test database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d7d23d53423516956f2a16baa119f4152a6bb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextField&lt;/code&gt; limitations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549905c4967304d5263214f87bd359d55c782c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TimeField&lt;/code&gt; truncation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd8ff1c3260c0bf0e23a008b8131b022801e756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TimestampSigner&lt;/code&gt; is a subclass of &lt;a href=&quot;#django.core.signing.Signer&quot;&gt;&lt;code&gt;Signer&lt;/code&gt;&lt;/a&gt; that appends a signed timestamp to the value. This allows you to confirm that a signed value was created within a specified period of time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e260df2dcf868ebcd928b757ef8600c2fae0b38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Topping&lt;/code&gt; (the class of the objects added to the &lt;code&gt;Pizza&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d14f3ea40f93b7c5aada355915dc0637daac97d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TransactionTestCase&lt;/code&gt; and &lt;code&gt;TestCase&lt;/code&gt; are identical except for the manner in which the database is reset to a known state and the ability for test code to test the effects of commit and rollback:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19b3efd493df061de6e9025d1cf78ecacb672d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TransactionTestCase&lt;/code&gt; inherits from &lt;a href=&quot;#django.test.SimpleTestCase&quot;&gt;&lt;code&gt;SimpleTestCase&lt;/code&gt;&lt;/a&gt; to add some database-specific features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f772f068afbddf3a1d4a58e63d5ea60216d31464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Transform&lt;/code&gt; reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbbd2426123db3148e59bb756ffc5e3c35f91628" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; (&lt;code&gt;Pizza&lt;/code&gt; contains the &lt;a href=&quot;models/fields#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt;, so this call modifies the reverse relation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e73373b515c130714a24edbe2c176b202865b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; = right-to-left layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0b4d80aa6af7133d4422956d84e65172ac54e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; by default. Recursively includes fields defined on parent classes. If set to &lt;code&gt;False&lt;/code&gt;, &lt;code&gt;get_fields()&lt;/code&gt; will only search for fields declared directly on the current model. Fields from models that directly inherit from abstract models or proxy classes are considered to be local, not on the parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a15a5fa4d773fa9967f8bbb55e6fe3a4fdd620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the &lt;code&gt;QuerySet&lt;/code&gt; is ordered &amp;mdash; i.e. has an &lt;a href=&quot;#django.db.models.query.QuerySet.order_by&quot;&gt;&lt;code&gt;order_by()&lt;/code&gt;&lt;/a&gt; clause or a default ordering on the model. &lt;code&gt;False&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87a491b0d48d93054236b4d1a5e13743dcef683" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if the response has been closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a7e21094ee4c1e707ae22865e204ca2fa381d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9b1126a4b2a3e658fbd1aba356531f3993b3c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt;. Determines whether or not a user object is created if not already in the database Defaults to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0635e1b21d934d2e8d3ee7b9021da56c1d7b2bb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Trunc&lt;/code&gt; takes a single &lt;code&gt;expression&lt;/code&gt;, representing a &lt;code&gt;DateField&lt;/code&gt;, &lt;code&gt;TimeField&lt;/code&gt;, or &lt;code&gt;DateTimeField&lt;/code&gt;, a &lt;code&gt;kind&lt;/code&gt; representing a date or time part, and an &lt;code&gt;output_field&lt;/code&gt; that&amp;rsquo;s either &lt;code&gt;DateTimeField()&lt;/code&gt;, &lt;code&gt;TimeField()&lt;/code&gt;, or &lt;code&gt;DateField()&lt;/code&gt;. It returns a datetime, date, or time depending on &lt;code&gt;output_field&lt;/code&gt;, with fields up to &lt;code&gt;kind&lt;/code&gt; set to their minimum value. If &lt;code&gt;output_field&lt;/code&gt; is omitted, it will default to the &lt;code&gt;output_field&lt;/code&gt; of &lt;code&gt;expression&lt;/code&gt;. A &lt;code&gt;tzinfo&lt;/code&gt; subclass, usually provided by &lt;code&gt;pytz&lt;/code&gt;, can be passed to truncate a value in a specific timezone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3f1f96bf83d4e644346549d8c0a369e54da93c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TruncDate&lt;/code&gt; casts &lt;code&gt;expression&lt;/code&gt; to a date rather than using the built-in SQL truncate function. It&amp;rsquo;s also registered as a transform on &lt;code&gt;DateTimeField&lt;/code&gt; as &lt;code&gt;__date&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe009886efa598f604687ad1133e933e458a957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TruncTime&lt;/code&gt; casts &lt;code&gt;expression&lt;/code&gt; to a time rather than using the built-in SQL truncate function. It&amp;rsquo;s also registered as a transform on &lt;code&gt;DateTimeField&lt;/code&gt; as &lt;code&gt;__time&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07e3b6abb8beab0ceb696dacd2efa844e51dc77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; runs during the response phase, where middleware is run in reverse order, so an item at the top of the list runs &lt;em&gt;last&lt;/em&gt; during the response phase. Thus, you need to make sure that &lt;code&gt;UpdateCacheMiddleware&lt;/code&gt; appears &lt;em&gt;before&lt;/em&gt; any other middleware that might add something to the &lt;code&gt;Vary&lt;/code&gt; header. The following middleware modules do so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b4959feddcf110028cdc2a92e07eec78baf7b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;User&lt;/code&gt; model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6142e18fddc448713b7c43776e1f6f7f26d6a35c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;User&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee21f118fdbb52142934d9c58c9ccfb4d38e2de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UserAttributeSimilarityValidator&lt;/code&gt;, which checks the similarity between the password and a set of attributes of the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04196b3ebdbf5363fc8df0323e8eee5aa8920c80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ValidationError&lt;/code&gt;s that don&amp;rsquo;t belong to a particular field in a form or model are classified as &lt;code&gt;NON_FIELD_ERRORS&lt;/code&gt;. This constant is used as a key in dictionaries that otherwise map fields to their respective list of errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641464da8247bbb1853b909b47e13bc50c862304" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Value()&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eace1c314aa454d41960a75af8a6614ac795d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WARNING&lt;/code&gt;: Information describing a minor problem that has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f594661199b8d30e1c77421ed87ce15f20090420" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WKBWriter&lt;/code&gt; provides the most control over its output. By default it returns OGC-compliant WKB when its &lt;code&gt;write&lt;/code&gt; method is called. However, it has properties that allow for the creation of EWKB, a superset of the WKB standard that includes additional information. See the &lt;a href=&quot;#django.contrib.gis.geos.WKBWriter.outdim&quot;&gt;&lt;code&gt;WKBWriter.outdim&lt;/code&gt;&lt;/a&gt; documentation for more details about the &lt;code&gt;dim&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef01df73f332f7fa5d77e08f46f6d390d85da56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Widget&lt;/code&gt; subclasses can provide custom context values by overriding this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5452afa81eedebfb052e74d920fd3b84f069350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X-Frame-Options&lt;/code&gt; middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6709956acb33b8380175f9edce25a17ee2c9ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt; (an empty list because there were no positional arguments passed to &lt;code&gt;__init__()&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a017e439032700ba2514f940754dae8d50749de1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__init__()&lt;/code&gt; gets the &lt;code&gt;format_string&lt;/code&gt; from &lt;code&gt;do_current_time()&lt;/code&gt;. Always pass any options/parameters/arguments to a &lt;code&gt;Node&lt;/code&gt; via its &lt;code&gt;__init__()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3122f79a73c3bc8735831025a0d8f86cb50370c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;__iter__()&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/core/files/base/#File.__iter__&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f11152b252919f5bbbf594e780d4b5f17307f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;activate(language)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/utils/translation/#activate&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486cdc11fefef51f494d40cc58975122953bb6e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add()&lt;/code&gt; also accepts the field the relation points to as an argument. The above example can be rewritten as &lt;code&gt;b.entry_set.add(234)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ef6210cdc6fa517a602090e9ed8a6f4739e3df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_message(request, level, message, extra_tags='', fail_silently=False)&lt;/code&gt;&lt;a href=&quot;https://docs.djangoproject.com/en/3.0/_modules/django/contrib/messages/api/#add_message&quot;&gt;[source]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c71bb97b62ece1b5473e208f77b7a105a175ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_url&lt;/code&gt;: admin URL to add a new model instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a693961ea27d1520475da9b1b4894da5c55e7544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;admin&lt;/code&gt; depends on &lt;code&gt;auth&lt;/code&gt;, so its models must be in the same database as &lt;code&gt;auth&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52ff07e958c0ae732d8fc73155d688772767975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;admin&lt;/code&gt;: Checks of any admin site declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0264cdbc68d22853b89019e8370e6d96c92dd26f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;admin_order_field&lt;/code&gt; supports query lookups to sort by values on related models. This example includes an &amp;ldquo;author first name&amp;rdquo; column in the list display and allows sorting it by first name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc116c63d34e9dab37f1320c626e18c139276fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;admin_url&lt;/code&gt;: admin changelist URL for the model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aff21e27e8a7e07923cc8b38939a15a10c35be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;aggregate()&lt;/code&gt; is a terminal clause for a &lt;code&gt;QuerySet&lt;/code&gt; that, when invoked, returns a dictionary of name-value pairs. The name is an identifier for the aggregate value; the value is the computed aggregate. The name is automatically generated from the name of the field and the aggregate function. If you want to manually specify a name for the aggregate value, you can do so by providing that name when you specify the aggregate clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c162650b79cf82096a03f6fba7e4995c001d0f71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow_joins&lt;/code&gt; is a boolean that allows or denies the use of joins in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0485c4149c76ea02a430d56e71dec8073c7c6970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;annotated_comment.last_updated&lt;/code&gt; will be the most recent of &lt;code&gt;blog.modified&lt;/code&gt; and &lt;code&gt;comment.modified&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017e67d35fec6a3d53b66fee0d192a6872447387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app_directory&lt;/code&gt; &amp;ndash; the full path of the newly created app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666bb6ed96dc2ad7bc4ebb52b5411fcd2e11ee28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app_dirs&lt;/code&gt; only affects the default value of &lt;code&gt;loaders&lt;/code&gt;. See below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75e3f137dd02b772ee4820692b8919986c770b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app_label&lt;/code&gt;: the application label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903737a0586b0b783f9bd73da552d894f9584203" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app_label&lt;/code&gt;s arguments limit the output, however, dependencies of provided apps may also be included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba901d9a08cd7720b35da449e70aeed542da2902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app_name&lt;/code&gt; &amp;ndash; the app name as passed to the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7105b48f42f4cf5d0d3e4aa3782913a7dc4891bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app_url&lt;/code&gt;: the URL of the application index in the admin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8cbdb888b157481bc96d01e422e3a64d05b0e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; and &lt;code&gt;kwargs&lt;/code&gt; cannot be passed to &lt;code&gt;reverse()&lt;/code&gt; at the same time.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
