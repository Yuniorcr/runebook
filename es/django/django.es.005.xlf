<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="django">
    <body>
      <group id="django">
        <trans-unit id="9c6928581df2a3d4e734facfdeb19244a874b86c" translate="yes" xml:space="preserve">
          <source>By far, the most common problem when installing GeoDjango is that the external shared libraries (e.g., for GEOS and GDAL) cannot be located. &lt;a href=&quot;#id27&quot; id=&quot;id5&quot;&gt;[1]&lt;/a&gt; Typically, the cause of this problem is that the operating system isn&amp;rsquo;t aware of the directory where the libraries built from source were installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eadae5b875107d64f4a9dbdd96b5eae7b15360d" translate="yes" xml:space="preserve">
          <source>By passing a hardcoded URL to redirect to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410f3140d832540e34b1f703f5f9780637017818" translate="yes" xml:space="preserve">
          <source>By passing some object; that object&amp;rsquo;s &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.get_absolute_url&quot;&gt;&lt;code&gt;get_absolute_url()&lt;/code&gt;&lt;/a&gt; method will be called to figure out the redirect URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f790aaa211799b67e9734bb44b20520139b5705" translate="yes" xml:space="preserve">
          <source>By passing the name of a view and optionally some positional or keyword arguments; the URL will be reverse resolved using the &lt;a href=&quot;../../ref/urlresolvers#django.urls.reverse&quot;&gt;&lt;code&gt;reverse()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf44349a57bf99a3da9cd7ed7be76a4a791e4da9" translate="yes" xml:space="preserve">
          <source>By registering the &lt;code&gt;Question&lt;/code&gt; model with &lt;code&gt;admin.site.register(Question)&lt;/code&gt;, Django was able to construct a default form representation. Often, you&amp;rsquo;ll want to customize how the admin form looks and works. You&amp;rsquo;ll do this by telling Django the options you want when you register the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a72150f0151c29d8e88726ab81f5d4a3c72e587" translate="yes" xml:space="preserve">
          <source>By running &lt;code&gt;makemigrations&lt;/code&gt;, you&amp;rsquo;re telling Django that you&amp;rsquo;ve made some changes to your models (in this case, you&amp;rsquo;ve made new ones) and that you&amp;rsquo;d like the changes to be stored as a &lt;em&gt;migration&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2698e53410edfde0b255f7364f15c404526b514" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;--verbosity&lt;/code&gt; flag to 0, you can suppress the extra output and just get the path names:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafa080a33e73f9455d05b423e3fd1169f60cf32" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;email_backend&lt;/code&gt; argument of &lt;code&gt;AdminEmailHandler&lt;/code&gt;, the &lt;a href=&quot;email#topic-email-backends&quot;&gt;email backend&lt;/a&gt; that is being used by the handler can be overridden, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f540514d2bf110bb1b873c082ed4fb4d5e8add" translate="yes" xml:space="preserve">
          <source>By storing the value in a data attribute, we ensure it&amp;rsquo;s escaped appropriately if we want to use it in a JavaScript context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60057f3f688d8b06da7a58f3308af4491f7ae488" translate="yes" xml:space="preserve">
          <source>By taking advantage of web browsers&amp;rsquo; caching abilities, you can eliminate network hits entirely for a given file after the initial download.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed287a0e379d778a3eeb942d9ca8ae389a30184d" translate="yes" xml:space="preserve">
          <source>By the time the form&amp;rsquo;s &lt;code&gt;clean()&lt;/code&gt; method is called, all the individual field clean methods will have been run (the previous two sections), so &lt;code&gt;self.cleaned_data&lt;/code&gt; will be populated with any data that has survived so far. So you also need to remember to allow for the fact that the fields you are wanting to validate might not have survived the initial individual field checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf54b3c3a704ac37d2ee3e37fc7b15c423932c4f" translate="yes" xml:space="preserve">
          <source>By the time you push your code to production, it&amp;rsquo;s hopefully robust, but you can&amp;rsquo;t rule out unexpected errors. Thankfully, Django can capture errors and notify you accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e38ac8e1886700d5dfead1203995c19d9446fc" translate="yes" xml:space="preserve">
          <source>By using &lt;code&gt;Transform&lt;/code&gt; instead of &lt;code&gt;Lookup&lt;/code&gt; it means we are able to chain further lookups afterwards. So &lt;code&gt;Experiment.objects.filter(change__abs__lt=27)&lt;/code&gt; will generate the following SQL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6da94170b6d7247db67e6cac43616cc97fbefb" translate="yes" xml:space="preserve">
          <source>By using a keyword argument to specify the aggregate function, you can control the name of the aggregation value that is returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507169571631561d324c277b834f130fa24c7eaa" translate="yes" xml:space="preserve">
          <source>By way of example, if listing the contents of certain storage backends turns out to be expensive, you might decide not to implement &lt;code&gt;Storage.listdir&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ce43fd9c6c913bf7d30b60ac1976d42220e456" translate="yes" xml:space="preserve">
          <source>By way of example, suppose you have a model like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75db2961ab787d0a3b41b3a6b0e65b06693ce81" translate="yes" xml:space="preserve">
          <source>Byteorder Value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="0d741550bd4db8a752d46cf9c9f6951ed99a3357" translate="yes" xml:space="preserve">
          <source>C implementations of Python libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5860ddd6f84a4601d3b785cd1f80dc27ce224e43" translate="yes" xml:space="preserve">
          <source>CGI specification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12fa5fcaba8eae05abcc1e5b1cc620eaf6dc3ada" translate="yes" xml:space="preserve">
          <source>CREATE PROCEDURE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738e5f467ba3a4254f467b31bb3c8da33459bfb4" translate="yes" xml:space="preserve">
          <source>CREATE PROCEDURE WITH ADMIN OPTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7598785b07ca70f266afcf7d0a8eb1cf4d0316" translate="yes" xml:space="preserve">
          <source>CREATE SEQUENCE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f37c36c9c8b6cca22b6df3d46330385564e152" translate="yes" xml:space="preserve">
          <source>CREATE SEQUENCE WITH ADMIN OPTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aed7c8bada16418abc44db5943b30cf4691b235" translate="yes" xml:space="preserve">
          <source>CREATE SESSION WITH ADMIN OPTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979ae29e43d609d39c91f43b7d2c9c6f0170c84c" translate="yes" xml:space="preserve">
          <source>CREATE TABLE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f194afde4946790548e145f558322252a26886ac" translate="yes" xml:space="preserve">
          <source>CREATE TABLE WITH ADMIN OPTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3911ee759f233a5280c04fb3873a55053eecf0" translate="yes" xml:space="preserve">
          <source>CREATE TABLESPACE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6418466d171e86053f358e78bdbbeb775f1f4f" translate="yes" xml:space="preserve">
          <source>CREATE TRIGGER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a195c132ace2fa09c2eb3a61cf6904ec2099374" translate="yes" xml:space="preserve">
          <source>CREATE TRIGGER WITH ADMIN OPTION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b4f23af8e09b7f85cfa3af0d06b6b261d9ae23" translate="yes" xml:space="preserve">
          <source>CREATE USER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9be80b96f1c5890989a051c13fd3642245b655" translate="yes" xml:space="preserve">
          <source>CSRF attacks allow a malicious user to execute actions using the credentials of another user without that user&amp;rsquo;s knowledge or consent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8fff30013a75a4ad1868cf3fddb4aedfce3cc2" translate="yes" xml:space="preserve">
          <source>CSRF failures are logged as warnings to the &lt;a href=&quot;../topics/logging#django-security-logger&quot;&gt;django.security.csrf&lt;/a&gt; logger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dad4bef1b0b5153b2a3801ffbf7c3d5383891d" translate="yes" xml:space="preserve">
          <source>CSRF protection middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183d7d8966580df0e0abbeda4c15dbaa378da0d2" translate="yes" xml:space="preserve">
          <source>CSRF protection should be disabled for just a few views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50338b3b242845e21a0ace9ae9684283d945fb52" translate="yes" xml:space="preserve">
          <source>Cache</source>
          <target state="translated">Cache</target>
        </trans-unit>
        <trans-unit id="acbda0fec2fe82da82e9502df8ab30f811055067" translate="yes" xml:space="preserve">
          <source>Cache arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f548eceb4063ed512d026604f0cc6f4b79062cfc" translate="yes" xml:space="preserve">
          <source>Cache backends that implement their own culling strategy (i.e., the &lt;code&gt;locmem&lt;/code&gt;, &lt;code&gt;filesystem&lt;/code&gt; and &lt;code&gt;database&lt;/code&gt; backends) will honor the following options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2519e25400cafc71c27e79ee0ed8da52808ca8aa" translate="yes" xml:space="preserve">
          <source>Cache file attributes wherever possible. Since files may be stored in remote storage systems, retrieving them may cost extra time, or even money, that isn&amp;rsquo;t always necessary. Once a file is retrieved to obtain some data about its content, cache as much of that data as possible to reduce the number of times the file must be retrieved on subsequent calls for that information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0724677c8042ae24853c8d056aea6ae292f3236f" translate="yes" xml:space="preserve">
          <source>Cache key prefixing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="568bcc7904029d3838fc97291bee4ee2e3c4513f" translate="yes" xml:space="preserve">
          <source>Cache key transformation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cabdad5f5926a49b8e27093eb56c22e273fb879" translate="yes" xml:space="preserve">
          <source>Cache key warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bfbc1460a5989b3328d1d08cb4d7bcd07309ed" translate="yes" xml:space="preserve">
          <source>Cache keys also include the active &lt;a href=&quot;i18n/index#term-language-code&quot;&gt;language&lt;/a&gt; when &lt;a href=&quot;../ref/settings#std:setting-USE_L10N&quot;&gt;&lt;code&gt;USE_L10N&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt; and the &lt;a href=&quot;i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt; when &lt;a href=&quot;../ref/settings#std:setting-USE_TZ&quot;&gt;&lt;code&gt;USE_TZ&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ea82be45e2ca1387bce6858d4a1e2278852e0f" translate="yes" xml:space="preserve">
          <source>Cache middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8253b0803e92653e15146f8e14ecfbff84d772d" translate="yes" xml:space="preserve">
          <source>Cache servers often have weak authentication. Make sure they only accept connections from your application servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8062cdd3cff6bd5b28b528db9eb86faf48b14891" translate="yes" xml:space="preserve">
          <source>Cache versioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d1d6e68e2efb43040f5747213a436e201ddbd2" translate="yes" xml:space="preserve">
          <source>Caches</source>
          <target state="translated">Caches</target>
        </trans-unit>
        <trans-unit id="da8a8950b5b6043f06280dde3cc19998826fb05d" translate="yes" xml:space="preserve">
          <source>Caches a complex variable under a simpler name. This is useful when accessing an &amp;ldquo;expensive&amp;rdquo; method (e.g., one that hits the database) multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20488b0aaf8b9a76e5105c29315d29b9fb58149" translate="yes" xml:space="preserve">
          <source>Caches are not cleared after each test, and running &amp;ldquo;manage.py test fooapp&amp;rdquo; can insert data from the tests into the cache of a live system if you run your tests in production because, unlike databases, a separate &amp;ldquo;test cache&amp;rdquo; is not used. This behavior &lt;a href=&quot;https://code.djangoproject.com/ticket/11505&quot;&gt;may change&lt;/a&gt; in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="98c1f85303f94c49ac9e6485f441d2186f4c7ea1" translate="yes" xml:space="preserve">
          <source>Caching and &lt;code&gt;QuerySet&lt;/code&gt;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158fd07571b063993f6c4fc9390a346d5fc0c3c9" translate="yes" xml:space="preserve">
          <source>Caching the current &lt;code&gt;Site&lt;/code&gt; object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f61e98f71915665b89d8779a5f8ed0542e38090" translate="yes" xml:space="preserve">
          <source>Calculates a partition for each of the rows in the frame clause, distributing numbers as evenly as possible between 1 and &lt;code&gt;num_buckets&lt;/code&gt;. If the rows don&amp;rsquo;t divide evenly into a number of buckets, one or more buckets will be represented more frequently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4718dace470988d41014b2afc03b8d10dda878" translate="yes" xml:space="preserve">
          <source>Calculates the cumulative distribution of a value within a window or partition. The cumulative distribution is defined as the number of rows preceding or peered with the current row divided by the total number of rows in the frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b029943b59c24a8bfb62e9149a4a3c1fe2238e8" translate="yes" xml:space="preserve">
          <source>Calculates the leading value in a given &lt;a href=&quot;expressions#window-frames&quot;&gt;frame&lt;/a&gt;. Both &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; are evaluated with respect to the current row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a72235190570bfe5057824d4e0f99c75bd3ff4" translate="yes" xml:space="preserve">
          <source>Calculates the value offset by &lt;code&gt;offset&lt;/code&gt;, and if no row exists there, returns &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6751bd6532a841494c31d2cb271a6c23434bcc" translate="yes" xml:space="preserve">
          <source>Calculation</source>
          <target state="translated">Calculation</target>
        </trans-unit>
        <trans-unit id="7549f08dfa01f0c01fbea6def77fa44bb0e854b6" translate="yes" xml:space="preserve">
          <source>Calcutta: 15,000,000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bfbc1bb89e39593bc448d487ef9451871d2d5b" translate="yes" xml:space="preserve">
          <source>Call the &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object&amp;rsquo;s &lt;code&gt;render()&lt;/code&gt; method with a &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; to &amp;ldquo;fill&amp;rdquo; the template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e01593380533bdbbb15c2c90eaee274eae0fe2" translate="yes" xml:space="preserve">
          <source>Callable variables are slightly more complex than variables which only require straight lookups. Here are some things to keep in mind:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce46ba0adc2acc2f59611a6bb874f9af1ff6a7b" translate="yes" xml:space="preserve">
          <source>Callback signaling that a new file upload is starting. This is called before any data has been fed to any upload handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa90af3954b4ce6550e00d167939f1aac96f5800" translate="yes" xml:space="preserve">
          <source>Callback signaling that the entire upload (all files) has completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4661219d7bd825b0ab199b164d8f3f95684ead45" translate="yes" xml:space="preserve">
          <source>Callback to add elements inside the root feed element (&lt;code&gt;feed&lt;/code&gt;/&lt;code&gt;channel&lt;/code&gt;). &lt;code&gt;handler&lt;/code&gt; is an &lt;a href=&quot;https://docs.python.org/3/library/xml.sax.utils.html#xml.sax.saxutils.XMLGenerator&quot;&gt;&lt;code&gt;XMLGenerator&lt;/code&gt;&lt;/a&gt; from Python&amp;rsquo;s built-in SAX library; you&amp;rsquo;ll call methods on it to add to the XML document in process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b265d6c16bf2b98f52dcc9cf31ad13945b3698f" translate="yes" xml:space="preserve">
          <source>Callback to add elements to each item (&lt;code&gt;item&lt;/code&gt;/&lt;code&gt;entry&lt;/code&gt;) element. &lt;code&gt;handler&lt;/code&gt; and &lt;code&gt;item&lt;/code&gt; are as above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02e8544c5084a0867d6ab3bc3adf5ec30f430f8" translate="yes" xml:space="preserve">
          <source>Callbacks are not run until autocommit is restored on the connection following the commit (because otherwise any queries done in a callback would open an implicit transaction, preventing the connection from going back into autocommit mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2533e53842ba6e01a2778c3617175b7973804acc" translate="yes" xml:space="preserve">
          <source>Called by &lt;code&gt;Storage.open()&lt;/code&gt;, this is the actual mechanism the storage class uses to open the file. This must return a &lt;code&gt;File&lt;/code&gt; object, though in most cases, you&amp;rsquo;ll want to return some subclass here that implements logic specific to the backend storage system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d0f1fdb5703c461487c46188c40aa995a81d75" translate="yes" xml:space="preserve">
          <source>Called by &lt;code&gt;Storage.save()&lt;/code&gt;. The &lt;code&gt;name&lt;/code&gt; will already have gone through &lt;code&gt;get_valid_name()&lt;/code&gt; and &lt;code&gt;get_available_name()&lt;/code&gt;, and the &lt;code&gt;content&lt;/code&gt; will be a &lt;code&gt;File&lt;/code&gt; object itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a199450f538b19c8c1bfacc04eac998316aa504" translate="yes" xml:space="preserve">
          <source>Called when a file has finished uploading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b314529747427ae5357f76f444f113cd8fe54d8" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#django.core.serializers.get_serializer&quot;&gt;&lt;code&gt;get_serializer()&lt;/code&gt;&lt;/a&gt; with an unknown &lt;a href=&quot;#serialization-formats&quot;&gt;format&lt;/a&gt; will raise a &lt;code&gt;django.core.serializers.SerializerDoesNotExist&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9062822e071ddc2708cc58d82fd89d3807fde227" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;#django.db.models.query.QuerySet.only&quot;&gt;&lt;code&gt;only()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#django.db.models.query.QuerySet.defer&quot;&gt;&lt;code&gt;defer()&lt;/code&gt;&lt;/a&gt; after &lt;code&gt;values()&lt;/code&gt; doesn&amp;rsquo;t make sense, so doing so will raise a &lt;code&gt;NotImplementedError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225255f5717a035a5dbfcccbd85b49715a6d8371" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;DeserializedObject.save()&lt;/code&gt; saves the object to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5f536dc82f70cbd8c3fdea012232b4c2e39d8c" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;django.setup()&lt;/code&gt; is required for &amp;ldquo;standalone&amp;rdquo; Django usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be7efc33d36e293c98563570bb597c994ff2a3f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;expression.as_sql()&lt;/code&gt; is usually incorrect - instead &lt;code&gt;compiler.compile(expression)&lt;/code&gt; should be used. The &lt;code&gt;compiler.compile()&lt;/code&gt; method will take care of calling vendor-specific methods of the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d16ea3138b13ed44461144ff40a1a3f1265f71" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;save_m2m()&lt;/code&gt; is only required if you use &lt;code&gt;save(commit=False)&lt;/code&gt;. When you use a &lt;code&gt;save()&lt;/code&gt; on a form, all data &amp;ndash; including many-to-many data &amp;ndash; is saved without the need for any additional method calls. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5b54109f1437cbeae3a6e4feec88fde3db559f" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;transaction.rollback()&lt;/code&gt; rolls back the entire transaction. Any uncommitted database operations will be lost. In this example, the changes made by &lt;code&gt;a.save()&lt;/code&gt; would be lost, even though that operation raised no error itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd97bce2d410cc2be245b31441f9fd4522c9ee5" translate="yes" xml:space="preserve">
          <source>Calling a management command in your code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e08c5db744ae893282c27182426ac3bf421bd0" translate="yes" xml:space="preserve">
          <source>Calling custom &lt;code&gt;QuerySet&lt;/code&gt; methods from the manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290de1b2f9412ab31c14212febd8764907d2a18e" translate="yes" xml:space="preserve">
          <source>Calling none() will create a queryset that never returns any objects and no query will be executed when accessing the results. A qs.none() queryset is an instance of &lt;code&gt;EmptyQuerySet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d377f3ae921804afcb89876990ce854705a425" translate="yes" xml:space="preserve">
          <source>Calling stored procedures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70fbb8db9b9b7c8797750d7521b26b6012ce94ea" translate="yes" xml:space="preserve">
          <source>Calling this function with the value &lt;code&gt;'de'&lt;/code&gt; will give you &lt;code&gt;&quot;Willkommen&quot;&lt;/code&gt;, regardless of &lt;a href=&quot;../../ref/settings#std:setting-LANGUAGE_CODE&quot;&gt;&lt;code&gt;LANGUAGE_CODE&lt;/code&gt;&lt;/a&gt; and language set by middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c856e91fc9af620e934945645127d4ce162a82" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#django.views.generic.base.TemplateResponseMixin.get_template_names&quot;&gt;&lt;code&gt;get_template_names()&lt;/code&gt;&lt;/a&gt; to obtain the list of template names that will be searched looking for an existent template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205a3fba438d8b924883caa5e99258ff7619b586" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#django.views.generic.edit.FormMixin.get_form&quot;&gt;&lt;code&gt;get_form()&lt;/code&gt;&lt;/a&gt; and adds the result to the context data with the name &amp;lsquo;form&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc917339e3060f94eb46e37a73db6fe792c06394" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;../../ref/models/querysets#django.db.models.query.QuerySet.get&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; on a given model manager, but it raises &lt;a href=&quot;views#django.http.Http404&quot;&gt;&lt;code&gt;Http404&lt;/code&gt;&lt;/a&gt; instead of the model&amp;rsquo;s &lt;a href=&quot;../../ref/models/instances#django.db.models.Model.DoesNotExist&quot;&gt;&lt;code&gt;DoesNotExist&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3817fa4274b76c50a1ea835fa0948e0dd429206" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;self.get_response(request)&lt;/code&gt; to get the response from later middleware and the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b7bfc7fca2285243c57ea1c4e38419161e5e62" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;self.process_request(request)&lt;/code&gt; (if defined).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4ba89b2a8ada97487233f628173f811b841f5f" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;self.process_response(request, response)&lt;/code&gt; (if defined).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edbc64e696501a6c087d5e657ab2e11f291d4a2" translate="yes" xml:space="preserve">
          <source>Calls a database stored procedure with the given name. A sequence (&lt;code&gt;params&lt;/code&gt;) or dictionary (&lt;code&gt;kparams&lt;/code&gt;) of input parameters may be provided. Most databases don&amp;rsquo;t support &lt;code&gt;kparams&lt;/code&gt;. Of Django&amp;rsquo;s built-in backends, only Oracle supports it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86a8c1f3d2b9fe28ced9ca98ed7331cd00f6222" translate="yes" xml:space="preserve">
          <source>Calls to update can also use &lt;a href=&quot;../../ref/models/expressions#django.db.models.F&quot;&gt;&lt;code&gt;F expressions&lt;/code&gt;&lt;/a&gt; to update one field based on the value of another field in the model. This is especially useful for incrementing counters based upon their current value. For example, to increment the pingback count for every entry in the blog:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1377b4153726db706d088e89d58fe38d78a1c4ae" translate="yes" xml:space="preserve">
          <source>Can also be used as a decorator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8c496228d2e8578cd02ba4adc44a8b32d30105" translate="yes" xml:space="preserve">
          <source>Can be called multiple times on a single string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9003c0b87f6d4ccd4ebc6feacd9ab4291bb8431a" translate="yes" xml:space="preserve">
          <source>Can be run as a cron job or directly to clean out expired sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10da83c08c4a1138fdc03b07a422c389e67b0765" translate="yes" xml:space="preserve">
          <source>Can use the &lt;a href=&quot;contrib/admin/admindocs#admindocs-bookmarklets&quot;&gt;admindocs bookmarklets&lt;/a&gt; even if not logged in as a staff user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c987df332492e001e2d3789c0251ae7f9c7305c4" translate="yes" xml:space="preserve">
          <source>Can validate that non-empty file data has been bound to the form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b52c8f82215da5093e92eb4e9e72651d008a682" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t find GDAL library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bde5803bc78173238d1a3e76ed6f0a8e16dc840" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t find GEOS library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54f11270dd47daf2e0f21c920b9fe97d8d6f53c" translate="yes" xml:space="preserve">
          <source>Capitalizes the first character of the value. If the first character is not a letter, this filter has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643aff8a663babf6c7c6871f88058cc7f7ec318b" translate="yes" xml:space="preserve">
          <source>Captured parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5fc41408434f90f41bd5bf5ff6e7346c566867" translate="yes" xml:space="preserve">
          <source>Captured values can optionally include a converter type. For example, use &lt;code&gt;&amp;lt;int:name&amp;gt;&lt;/code&gt; to capture an integer parameter. If a converter isn&amp;rsquo;t included, any string, excluding a &lt;code&gt;/&lt;/code&gt; character, is matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b89a53170cf2cbb22f8d7105e72efe86e419b2" translate="yes" xml:space="preserve">
          <source>Cartographic Projections library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effff00e7a692538669e4cf735c030e54ad8e6b3" translate="yes" xml:space="preserve">
          <source>Cascade deletes. Django emulates the behavior of the SQL constraint ON DELETE CASCADE and also deletes the object containing the ForeignKey.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9254c4bba00f5ff69304a7921d3118fcbac7e6b8" translate="yes" xml:space="preserve">
          <source>Case</source>
          <target state="translated">Case</target>
        </trans-unit>
        <trans-unit id="e7507a4a6841ce2fda611ea4fccd77d38161b45b" translate="yes" xml:space="preserve">
          <source>Case-insensitive containment test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9313b4678937a757cac748207904bc5de19606" translate="yes" xml:space="preserve">
          <source>Case-insensitive ends-with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0362149611a5ec0998f155187f49291496bc75" translate="yes" xml:space="preserve">
          <source>Case-insensitive exact match. If the value provided for comparison is &lt;code&gt;None&lt;/code&gt;, it will be interpreted as an SQL &lt;code&gt;NULL&lt;/code&gt; (see &lt;a href=&quot;#std:fieldlookup-isnull&quot;&gt;&lt;code&gt;isnull&lt;/code&gt;&lt;/a&gt; for more details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7634f69eb8a3e4eff4652ba8684a95370739003e" translate="yes" xml:space="preserve">
          <source>Case-insensitive regular expression match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77942bdff97295d7b996673b8cbd912e09e179d7" translate="yes" xml:space="preserve">
          <source>Case-insensitive starts-with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e7ffa2290b08368430a3bb66eb35d1d5525705" translate="yes" xml:space="preserve">
          <source>Case-sensitive containment test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f39d0d9dc8009adf803b95a8e052064e59c3422" translate="yes" xml:space="preserve">
          <source>Case-sensitive containment test. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a13d13f6844d51bd79413f5aa96642a027f98e9" translate="yes" xml:space="preserve">
          <source>Case-sensitive ends-with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db5fb150086d944b8dccae77af44e814044f1b0" translate="yes" xml:space="preserve">
          <source>Case-sensitive regular expression match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2810f50cccc5f39df11fe3f8ce275a8e25efc745" translate="yes" xml:space="preserve">
          <source>Case-sensitive starts-with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a89527100d7affacb785a535913eceec75eda6" translate="yes" xml:space="preserve">
          <source>Caution</source>
          <target state="translated">Caution</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="32b9ed6be0f1d41f1c5b1a9ba236378547abd75d" translate="yes" xml:space="preserve">
          <source>Caveats on Oracle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698b2aa739a5adac275a1b1c1b14ec3c80549813" translate="yes" xml:space="preserve">
          <source>Centers the value in a field of a given width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cab1c70b10c72b3dc8fc42049f8e0e2303757a9" translate="yes" xml:space="preserve">
          <source>Centimeter</source>
          <target state="translated">Centimeter</target>
        </trans-unit>
        <trans-unit id="fb989a28d9c65cf81739440b610163e2621f4326" translate="yes" xml:space="preserve">
          <source>Certain Django components also have their own caching functionality; these are discussed below in the sections related to those components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bcd6122f6e191d31074ecd7a8a7b69b7db9820" translate="yes" xml:space="preserve">
          <source>Certain applications provide custom tag and filter libraries. To access them in a template, ensure the application is in &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; (we&amp;rsquo;d add &lt;code&gt;'django.contrib.humanize'&lt;/code&gt; for this example), and then use the &lt;a href=&quot;builtins#std:templatetag-load&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; tag in a template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81f5be1e9b8b7d9f762cf7cce4a566d424505a6" translate="yes" xml:space="preserve">
          <source>Certain expressions may not be supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a227e8810bacd3c29b9501fefb520e6c0cab4e" translate="yes" xml:space="preserve">
          <source>Certain key parts of Django are not able to operate safely in an asynchronous environment, as they have global state that is not coroutine-aware. These parts of Django are classified as &amp;ldquo;async-unsafe&amp;rdquo;, and are protected from execution in an asynchronous environment. The ORM is the main example, but there are other parts that are also protected in this way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e401d2cd529d75cfa2ea6150c3b9e4c5df0518b6" translate="yes" xml:space="preserve">
          <source>Certain views can have unusual requirements that mean they don&amp;rsquo;t fit the normal pattern envisaged here. A number of utilities can be useful in these situations. The scenarios they might be needed in are described in the following section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81f3692d7cd234a9b91ed4f4582f15dd8290d89" translate="yes" xml:space="preserve">
          <source>Chain</source>
          <target state="translated">Chain</target>
        </trans-unit>
        <trans-unit id="3c6171c87113422a3f3429146ba5738e8a314ad4" translate="yes" xml:space="preserve">
          <source>Chain (Benoit)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7397da9f2bf5c7f48571b6f5af8fbd61d90308" translate="yes" xml:space="preserve">
          <source>Chain (Sears)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce02335f52c1bd189c9e1d30838e8a4f3330eb39" translate="yes" xml:space="preserve">
          <source>Chaining &lt;code&gt;prefetch_related&lt;/code&gt; calls will accumulate the lookups that are prefetched. To clear any &lt;code&gt;prefetch_related&lt;/code&gt; behavior, pass &lt;code&gt;None&lt;/code&gt; as a parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe8b203548770ce24b9b586fd1e9fc34d9754e0" translate="yes" xml:space="preserve">
          <source>Chaining &lt;code&gt;select_related&lt;/code&gt; calls works in a similar way to other methods - that is that &lt;code&gt;select_related('foo', 'bar')&lt;/code&gt; is equivalent to &lt;code&gt;select_related('foo').select_related('bar')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e179f06aac87666a61d48cc71ea619e11edbe952" translate="yes" xml:space="preserve">
          <source>Chaining filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fbd995d3b6b156ee26ae3c03e6516434c34c12" translate="yes" xml:space="preserve">
          <source>Change</source>
          <target state="translated">Change</target>
        </trans-unit>
        <trans-unit id="978219bf935dfccbf5fcff03ad903965b477b672" translate="yes" xml:space="preserve">
          <source>Change &lt;code&gt;unique=True&lt;/code&gt; to &lt;code&gt;null=True&lt;/code&gt; &amp;ndash; this will create the intermediary null field and defer creating the unique constraint until we&amp;rsquo;ve populated unique values on all the rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda4cbf2941e0428aa185caa42229a5ca77c5913" translate="yes" xml:space="preserve">
          <source>Change the &amp;ldquo;Date published&amp;rdquo; by clicking the &amp;ldquo;Today&amp;rdquo; and &amp;ldquo;Now&amp;rdquo; shortcuts. Then click &amp;ldquo;Save and continue editing.&amp;rdquo; Then click &amp;ldquo;History&amp;rdquo; in the upper right. You&amp;rsquo;ll see a page listing all changes made to this object via the Django admin, with the timestamp and username of the person who made the change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b028b85847edd8e58a1c36a90e6542beee48073f" translate="yes" xml:space="preserve">
          <source>Change your models (in &lt;code&gt;models.py&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f3b40b52c856af8cb400c2497f03119720801a" translate="yes" xml:space="preserve">
          <source>Changed in Django 2.2:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9703c03e2e64f0540e022cd7df2d556655339d53" translate="yes" xml:space="preserve">
          <source>Changed in Django 3.0:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba236a483f165d2bfc9b10507d610b6bde6a8ba" translate="yes" xml:space="preserve">
          <source>Changelist</source>
          <target state="translated">Changelist</target>
        </trans-unit>
        <trans-unit id="2d4ed11e371947075aa36af2d8a347a98dbd1273" translate="yes" xml:space="preserve">
          <source>Changes a field&amp;rsquo;s name (and, unless &lt;a href=&quot;models/fields#django.db.models.Field.db_column&quot;&gt;&lt;code&gt;db_column&lt;/code&gt;&lt;/a&gt; is set, its column name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ea6d097b2dc289bac2a18b72d49cac8196d782" translate="yes" xml:space="preserve">
          <source>Changes a model&amp;rsquo;s &lt;a href=&quot;models/options#django.db.models.Options.index_together&quot;&gt;&lt;code&gt;index_together&lt;/code&gt;&lt;/a&gt; value; this will add or remove indexes from the model&amp;rsquo;s table until they match the new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a4e9438f880955e4130b40bee89afb35895b44" translate="yes" xml:space="preserve">
          <source>Changes a model&amp;rsquo;s &lt;a href=&quot;models/options#django.db.models.Options.unique_together&quot;&gt;&lt;code&gt;unique_together&lt;/code&gt;&lt;/a&gt; value; this will add or remove unique constraints from the model&amp;rsquo;s table until they match the new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c816ec7a7c05ade3722606532f92e7248dafee3" translate="yes" xml:space="preserve">
          <source>Changes the model&amp;rsquo;s set of custom indexes (the &lt;a href=&quot;models/options#django.db.models.Options.index_together&quot;&gt;&lt;code&gt;index_together&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6612a11308cfb1dd512fbc343dcdd0ddbb3c811a" translate="yes" xml:space="preserve">
          <source>Changes the model&amp;rsquo;s set of unique constraints (the &lt;a href=&quot;models/options#django.db.models.Options.unique_together&quot;&gt;&lt;code&gt;unique_together&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a972fd27237d2164984b1ba9831df10c0e460b8" translate="yes" xml:space="preserve">
          <source>Changes the model&amp;rsquo;s table name (the &lt;a href=&quot;models/options#django.db.models.Options.db_table&quot;&gt;&lt;code&gt;db_table&lt;/code&gt;&lt;/a&gt; option on the &lt;code&gt;Meta&lt;/code&gt; subclass).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db747fb627126a359d7def659dd0352e3919bb1e" translate="yes" xml:space="preserve">
          <source>Changing &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; after you&amp;rsquo;ve created database tables is significantly more difficult since it affects foreign keys and many-to-many relationships, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb40c96d620b0b220afe31f4b0710bbe53eca0b" translate="yes" xml:space="preserve">
          <source>Changing &lt;code&gt;order_with_respect_to&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de980bdcf73cbcdbd24cf453e0709c2a81363f4c" translate="yes" xml:space="preserve">
          <source>Changing a custom field&amp;rsquo;s base class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe72aecd4476f1f731e064961c53e87770d63b2" translate="yes" xml:space="preserve">
          <source>Changing a user&amp;rsquo;s password will log out all their sessions. See &lt;a href=&quot;#session-invalidation-on-password-change&quot;&gt;Session invalidation on password change&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d2465f16195c825347a20b5ab68dd74cc9fd0f" translate="yes" xml:space="preserve">
          <source>Changing an unmanaged model to managed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e1198ccb053cf32349285143b660dfd72bf502" translate="yes" xml:space="preserve">
          <source>Changing passwords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d648a588beccf21b2a5977a3f45276864409d1dd" translate="yes" xml:space="preserve">
          <source>Changing the default JSON encoder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59297060cd88ff50798e1200607bda6e3c7a64e9" translate="yes" xml:space="preserve">
          <source>Changing the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4edcda30ad2cbc66ef258692394cc6897559ba3" translate="yes" xml:space="preserve">
          <source>Changing the minimum recorded level per-request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27863b4c17612256cbade1c8a5daae517bb6c0b2" translate="yes" xml:space="preserve">
          <source>Changing the port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff5487fda52cb16cd2f83bcd748322df3795601" translate="yes" xml:space="preserve">
          <source>Changing the queryset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b19472e5b1f82485078fea4153a94cb28bc023" translate="yes" xml:space="preserve">
          <source>Changing the search configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128e55b0e9498129809151adeb2a56e0ded3a0be" translate="yes" xml:space="preserve">
          <source>Changing to a custom user model mid-project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5058f50eb235013db83478b4c09b9d85b50f9654" translate="yes" xml:space="preserve">
          <source>Changing upload handler behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13cc96b75836987bfdbff1a81233adc38420cd1" translate="yes" xml:space="preserve">
          <source>Character fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99957d5920a0c408d447b33739a6c587076d7c4c" translate="yes" xml:space="preserve">
          <source>Cheat sheet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb80438ab17d883d1ed6cdd6f67a81ed2e82a1e" translate="yes" xml:space="preserve">
          <source>Check first if SQLite is compiled with the &lt;a href=&quot;https://www.sqlite.org/rtree.html&quot;&gt;R*Tree module&lt;/a&gt;. Run the sqlite3 command line interface and enter the following query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8664c61a6d5af3170e77d9a9fefed1000d60d34" translate="yes" xml:space="preserve">
          <source>Check for duplicate flatpage URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc89e15ccb324f637c49e8c84907a45925b079f" translate="yes" xml:space="preserve">
          <source>Check if a value has changed from the last iteration of a loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bde1461372979f085dc0503dc0a112a68fa7282" translate="yes" xml:space="preserve">
          <source>Check out Django&amp;rsquo;s main development branch like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04b3c8da9374a5791c1d92a606c401c41193076" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;../serialization&quot;&gt;Serializing Django objects&lt;/a&gt; documentation for more information on how to correctly transform Django models and querysets into JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9380d6f6c73e9fa1638d5cd5ae16b2c81814c9e" translate="yes" xml:space="preserve">
          <source>Check the &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/misc/distributions/&quot;&gt;distribution specific notes&lt;/a&gt; to see if your platform/distribution provides official Django packages/installers. Distribution-provided packages will typically allow for automatic installation of dependencies and supported upgrade paths; however, these packages will rarely contain the latest release of Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b228c9603969f0a96a2bfe0a7bd2082b55a65af" translate="yes" xml:space="preserve">
          <source>Checking for the required number of arguments, etc., has already been done by the time our function is called, so we don&amp;rsquo;t need to do that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7733f2b8fa6f97ff9ec622e9349eda3ee076841c" translate="yes" xml:space="preserve">
          <source>Checking if the field data has changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22079bec1c73c4523422968d5a18eab2a6a42e29" translate="yes" xml:space="preserve">
          <source>Checking that a callable &lt;a href=&quot;#django.test.SimpleTestCase.assertRaisesMessage&quot;&gt;&lt;code&gt;raises a certain exception&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e666f124c7e64aa56434fa6bd2fed4502f7c542" translate="yes" xml:space="preserve">
          <source>Checking that a callable &lt;a href=&quot;#django.test.SimpleTestCase.assertWarnsMessage&quot;&gt;&lt;code&gt;triggers a certain warning&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7125d8c0ad65ef9bccd1cbc0d286e7dbfa9f28b0" translate="yes" xml:space="preserve">
          <source>Checking which form data has changed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9b712b6c4ea74deeb6970fa4db291756f30ffc" translate="yes" xml:space="preserve">
          <source>Checks can be triggered explicitly via the &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; command. Checks are triggered implicitly before most commands, including &lt;a href=&quot;../ref/django-admin#django-admin-runserver&quot;&gt;&lt;code&gt;runserver&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt;. For performance reasons, checks are not run as part of the WSGI stack that is used in deployment. If you need to run system checks on your deployment server, trigger them explicitly using &lt;a href=&quot;../ref/django-admin#django-admin-check&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9835dee24c04098e686b60c1c7515fa889dcbbcf" translate="yes" xml:space="preserve">
          <source>Checks deferrable database constraints at the end of each test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384145617d037279a5df2a22a564a2b7db5ab02c" translate="yes" xml:space="preserve">
          <source>Checks if &lt;code&gt;value&lt;/code&gt; was signed less than &lt;code&gt;max_age&lt;/code&gt; seconds ago, otherwise raises &lt;code&gt;SignatureExpired&lt;/code&gt;. The &lt;code&gt;max_age&lt;/code&gt; parameter can accept an integer or a &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timedelta&quot;&gt;&lt;code&gt;datetime.timedelta&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9127410ac9fb01c7fdd9f1334829066a7cd7a78" translate="yes" xml:space="preserve">
          <source>Checks its own rendered contents against its previous state and only displays the content if it has changed. For example, this displays a list of days, only displaying the month if it changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80225fb6301c03594549c53729c7642fc6a6f51b" translate="yes" xml:space="preserve">
          <source>Checks to see if the given spatial reference is valid, if not an exception will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b374afc96e757e6e2a31fcb267590bb38fa939" translate="yes" xml:space="preserve">
          <source>Checks whether an application with the given name exists in the registry. &lt;code&gt;app_name&lt;/code&gt; is the full name of the app, e.g. &lt;code&gt;'django.contrib.admin'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc62e66b338709aefc667cb29a3043e09cfe052" translate="yes" xml:space="preserve">
          <source>Checks whether there is a global language file for the given language code (e.g. &amp;lsquo;fr&amp;rsquo;, &amp;lsquo;pt_BR&amp;rsquo;). This is used to decide whether a user-provided language is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44266bb61b2d032bb13f445f6e03021d4e83fa22" translate="yes" xml:space="preserve">
          <source>Chicago: 7,000,000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5996882c70257eb82d8a4bc0e2a61f7768540178" translate="yes" xml:space="preserve">
          <source>Choose &lt;code&gt;memory_cost&lt;/code&gt; to be the KiB of memory you can spare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9ec0a34dcb893c5c2bc08c1df83fe4ef574db1" translate="yes" xml:space="preserve">
          <source>Choose &lt;code&gt;parallelism&lt;/code&gt; to be the number of threads you can spare computing the hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f88b4b283c432bab61dfe12fb72d23f6e082dd" translate="yes" xml:space="preserve">
          <source>Choosing a name for your app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba2aad3491667b89109b80cd83a4d44b2507dfa" translate="yes" xml:space="preserve">
          <source>Choosing an appropriate SRID for your model is an important decision that the developer should consider carefully. The SRID is an integer specifier that corresponds to the projection system that will be used to interpret the data in the spatial database. &lt;a href=&quot;#fnsrid&quot; id=&quot;id7&quot;&gt;[3]&lt;/a&gt; Projection systems give the context to the coordinates that specify a location. Although the details of &lt;a href=&quot;https://en.wikipedia.org/wiki/Geodesy&quot;&gt;geodesy&lt;/a&gt; are beyond the scope of this documentation, the general problem is that the earth is spherical and representations of the earth (e.g., paper maps, Web maps) are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc76dbb40513db48ba2a74315571cc7cfd36629b" translate="yes" xml:space="preserve">
          <source>Choosing between &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;QuerySet.filter()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c2a6a459b482dba9ac2e1abe53f471939a3cc5" translate="yes" xml:space="preserve">
          <source>Chrome 4.1+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6692bb58d9c44d5350d7632ea1fbe7e5f7c485" translate="yes" xml:space="preserve">
          <source>Clarke&amp;rsquo;s Foot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1484fef9b4abc05c0979965e3ea49d9ea6b34ba4" translate="yes" xml:space="preserve">
          <source>Clarke&amp;rsquo;s link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae2ba46cfe4af8b889075e7a1960f5189a765cf" translate="yes" xml:space="preserve">
          <source>Class method that returns an instance of &lt;a href=&quot;../../topics/db/managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; with a copy of the &lt;code&gt;QuerySet&lt;/code&gt;&amp;rsquo;s methods. See &lt;a href=&quot;../../topics/db/managers#create-manager-with-queryset-methods&quot;&gt;Creating a manager with QuerySet methods&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3586c1c64a914d530f0b0442a85112f3759cde5" translate="yes" xml:space="preserve">
          <source>Class-based generic views - flattened index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9913e499f783b1e205ead17714ccb61c43398bb9" translate="yes" xml:space="preserve">
          <source>Class-based generic views were created with the same objective as function-based generic views, to make view development easier. However, the way the solution is implemented, through the use of mixins, provides a toolkit that results in class-based generic views being more extensible and flexible than their function-based counterparts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdc8cf046fdef508e7b5c3a88652e0095f6155f" translate="yes" xml:space="preserve">
          <source>Class-based views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4a4e7b7f57dd45b621369dc0ca0ce23b32c09a" translate="yes" xml:space="preserve">
          <source>Class-based views API reference. For introductory material, see &lt;a href=&quot;../../topics/class-based-views/mixins&quot;&gt;Using mixins with class-based views&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935b328a33ab7f3fe7d394d5bba191897050ca57" translate="yes" xml:space="preserve">
          <source>Class-based views API reference. For introductory material, see the &lt;a href=&quot;../../topics/class-based-views/index&quot;&gt;Class-based views&lt;/a&gt; topic guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09a0fdba70b5b44149adcd6897aa653fb564a5a" translate="yes" xml:space="preserve">
          <source>Class-based views mixins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a689200f6a54407a59f2a1448947a87c0f2af763" translate="yes" xml:space="preserve">
          <source>Class-based views provide an alternative way to implement views as Python objects instead of functions. They do not replace function-based views, but have certain differences and advantages when compared to function-based views:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fbe3806fe4fa85be709cd683d3a0ce016bfe3f" translate="yes" xml:space="preserve">
          <source>Cleaning a specific field attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c15e64e7f592352145ea138a3f45fe5b83a297" translate="yes" xml:space="preserve">
          <source>Cleaning and validating fields that depend on each other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9871435a7dab83176cbc6b4ea940ec5d9753dc54" translate="yes" xml:space="preserve">
          <source>Cleans and returns a value for use in the widget template. &lt;code&gt;value&lt;/code&gt; isn&amp;rsquo;t guaranteed to be valid input, therefore subclass implementations should program defensively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e2550a68d3f04ff9456e17a1d332e94ce526ea" translate="yes" xml:space="preserve">
          <source>Clear the existing files before trying to copy or link the original file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fce0185a260e1bdf205bebb2f5ca4969dbc5c9" translate="yes" xml:space="preserve">
          <source>Clearing the session store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8871f6cf793cd5b46adb118c7a6bf5094d8c3fc9" translate="yes" xml:space="preserve">
          <source>Clearly, &lt;a href=&quot;https://docs.python.org/3/library/unittest.html#module-unittest&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; is not the only Python testing framework. While Django doesn&amp;rsquo;t provide explicit support for alternative frameworks, it does provide a way to invoke tests constructed for an alternative framework as if they were normal Django tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16b0c294394f27e0ac5749d235078e550604ac2" translate="yes" xml:space="preserve">
          <source>Clearly, having &amp;ldquo;Django administration&amp;rdquo; at the top of each admin page is ridiculous. It&amp;rsquo;s just placeholder text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7718e31552b0112a1a2ec941c597349546a14c1b" translate="yes" xml:space="preserve">
          <source>Clearly, the power of relational databases lies in relating tables to each other. Django offers ways to define the three most common types of database relationships: many-to-one, many-to-many and one-to-one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6838b7a69e395c2bf15ebc5a8c592bf3526981" translate="yes" xml:space="preserve">
          <source>Clearly, user-submitted data shouldn&amp;rsquo;t be trusted blindly and inserted directly into your Web pages, because a malicious user could use this kind of hole to do potentially bad things. This type of security exploit is called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;Cross Site Scripting&lt;/a&gt; (XSS) attack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb813cacbd2922039a79ce85d2ae6074cdfcf7c4" translate="yes" xml:space="preserve">
          <source>Clears an internal cache used by &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; to keep track of models for which it has created &lt;a href=&quot;#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt; instances. You probably won&amp;rsquo;t ever need to call this method yourself; Django will call it automatically when it&amp;rsquo;s needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2c7de5484059aff894ad9b7e2f035faa95adb5" translate="yes" xml:space="preserve">
          <source>Click &amp;ldquo;Questions&amp;rdquo;. Now you&amp;rsquo;re at the &amp;ldquo;change list&amp;rdquo; page for questions. This page displays all the questions in the database and lets you choose one to change it. There&amp;rsquo;s the &amp;ldquo;What&amp;rsquo;s up?&amp;rdquo; question we created earlier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e12a102575e2c837ef35120ea9f6301b62a3aa" translate="yes" xml:space="preserve">
          <source>Click the &amp;ldquo;What&amp;rsquo;s up?&amp;rdquo; question to edit it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b164ea79f51a3226a2f1ba2d64c19601a36e89fb" translate="yes" xml:space="preserve">
          <source>Clickjacking Protection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e6f9818aff9cfa621bb73a0138b945c072ae28" translate="yes" xml:space="preserve">
          <source>Clickjacking is a type of attack where a malicious site wraps another site in a frame. This attack can result in an unsuspecting user being tricked into performing unintended actions on the target site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32111326fd6c48d78974ec40a35a7768a07184d3" translate="yes" xml:space="preserve">
          <source>Clickjacking protection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d764d75fcf6e80a9de83e6bffcae22e86d8a4af" translate="yes" xml:space="preserve">
          <source>Client requests &lt;code&gt;/foo/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc71b46bf4ac05f5a39c0205973031dc31d9ab1" translate="yes" xml:space="preserve">
          <source>Client sends a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/foo/&lt;/code&gt;, after receiving a 412 response, to retrieve an updated version of the content before updating it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9390959736f66ef4250430fc366308771f97cf5" translate="yes" xml:space="preserve">
          <source>Client sends an HTTP &lt;code&gt;PUT&lt;/code&gt; request to &lt;code&gt;/foo/&lt;/code&gt; to update the resource. It also sends an &lt;code&gt;If-Match: &quot;abcd1234&quot;&lt;/code&gt; header to specify the version it is trying to update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4e5bc602307ed4ab1eddecc70e4b7c73dbafb1" translate="yes" xml:space="preserve">
          <source>Client-side caching will save bandwidth and make your site load faster. If you&amp;rsquo;re using ETags (&lt;a href=&quot;../../ref/middleware#django.middleware.http.ConditionalGetMiddleware&quot;&gt;&lt;code&gt;ConditionalGetMiddleware&lt;/code&gt;&lt;/a&gt;), you&amp;rsquo;re already covered. Otherwise, you can apply &lt;a href=&quot;../conditional-view-processing#conditional-decorators&quot;&gt;conditional decorators&lt;/a&gt;. In the following example, the cache is invalidated whenever you restart your application server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c115451ace317c65803db8091eb1e55ebeda50" translate="yes" xml:space="preserve">
          <source>Close the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303cb26080c8d48af2e98b700a7a4b017d40ec37" translate="yes" xml:space="preserve">
          <source>Close to the top: it redirects when &lt;a href=&quot;settings#std:setting-APPEND_SLASH&quot;&gt;&lt;code&gt;APPEND_SLASH&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;settings#std:setting-PREPEND_WWW&quot;&gt;&lt;code&gt;PREPEND_WWW&lt;/code&gt;&lt;/a&gt; are set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d39b59d4d25e5ad71bcf2d3fb9014da0acb6d75" translate="yes" xml:space="preserve">
          <source>Closing files is especially important when accessing file fields in a loop over a large number of objects. If files are not manually closed after accessing them, the risk of running out of file descriptors may arise. This may lead to the following error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adac69379a626c2436948a4ef1792c7d719ef929" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Code</target>
        </trans-unit>
        <trans-unit id="0fccd67a1d6d2011197e3b86591b54f93278c8e4" translate="yes" xml:space="preserve">
          <source>Code and templates calling &lt;code&gt;get_absolute_url()&lt;/code&gt; should be able to use the result directly without any further processing. You may wish to use the &lt;code&gt;django.utils.encoding.iri_to_uri()&lt;/code&gt; function to help with this if you are using strings containing characters outside the ASCII range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c556450c442de5568b2ca61b59c3676e128741e" translate="yes" xml:space="preserve">
          <source>Code coverage describes how much source code has been tested. It shows which parts of your code are being exercised by tests and which are not. It&amp;rsquo;s an important part of testing applications, so it&amp;rsquo;s strongly recommended to check the coverage of your tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5750b940d6720029e34eee8586abacc31ac208d7" translate="yes" xml:space="preserve">
          <source>Code layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264398069882e7753347718021d0c9c51b7ce8fc" translate="yes" xml:space="preserve">
          <source>Code of Conduct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7a63bb17eb1d76f8c9b5adc889523e705db12b" translate="yes" xml:space="preserve">
          <source>Collation settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae48f5d8e796a9281d732e0b6c3ab8ef31d8a1d" translate="yes" xml:space="preserve">
          <source>Collects the static files into &lt;a href=&quot;../settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df066a374fafe32bc0ce1847a456e1e438ce57f1" translate="yes" xml:space="preserve">
          <source>Colors can also be specified by extending a base palette. If you put a palette name in a color specification, all the colors implied by that palette will be loaded. So:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739dddeb1d3e0548df06fdaf615608f23f48ac27" translate="yes" xml:space="preserve">
          <source>Combined querysets must use the same model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b28b1879e8268f5a29264171deb92278bb15ce9" translate="yes" xml:space="preserve">
          <source>Combines a given template with a given context dictionary and returns an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object with that rendered text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf88bd402a2a3c10adade912df67db04d6a14f8" translate="yes" xml:space="preserve">
          <source>Combines two &lt;code&gt;QuerySet&lt;/code&gt;s using the SQL &lt;code&gt;AND&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c57c30c1d0f3c3cdabf58605f794fdbe31d85d" translate="yes" xml:space="preserve">
          <source>Combines two &lt;code&gt;QuerySet&lt;/code&gt;s using the SQL &lt;code&gt;OR&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298b25acc069de0daa59c3ef8592b259f9e8263e" translate="yes" xml:space="preserve">
          <source>Combining &lt;code&gt;Media&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4cc55611b5c720e74fca17f0c34bce34c1b111" translate="yes" xml:space="preserve">
          <source>Combining &lt;code&gt;Media&lt;/code&gt; objects with assets in a conflicting order results in a &lt;code&gt;MediaOrderConflictWarning&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb23073a36f1b9643eacab1ec8054110b00017fc" translate="yes" xml:space="preserve">
          <source>Combining multiple aggregations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2868a85184050150c21dc4574f3c38bb0d731e6" translate="yes" xml:space="preserve">
          <source>Combining multiple aggregations with &lt;code&gt;annotate()&lt;/code&gt; will &lt;a href=&quot;https://code.djangoproject.com/ticket/10060&quot;&gt;yield the wrong results&lt;/a&gt; because joins are used instead of subqueries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7c0f377739588d036f10407e3dbd3ae092857a" translate="yes" xml:space="preserve">
          <source>Combining transforms and aggregates requires the use of two &lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; calls, either explicitly or as keyword arguments to &lt;a href=&quot;#django.db.models.query.QuerySet.values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;. As above, if the transform has been registered on the relevant field type the first &lt;a href=&quot;#django.db.models.query.QuerySet.annotate&quot;&gt;&lt;code&gt;annotate()&lt;/code&gt;&lt;/a&gt; can be omitted, thus the following examples are equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062f06af390fd741afa99a084678b15ff848b32b" translate="yes" xml:space="preserve">
          <source>Command exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d57144ac6945b09d5de4731f8c00fe9c8dab71" translate="yes" xml:space="preserve">
          <source>Command objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1162b250f65b6790cb6c722277534bece1295b" translate="yes" xml:space="preserve">
          <source>Command options which take multiple options are passed a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abf877682cac812884ab957e7211e54caef5ae8" translate="yes" xml:space="preserve">
          <source>Commands provided by applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783c87224075a79bd8b537cf05a2b53f1d940875" translate="yes" xml:space="preserve">
          <source>Comment action &amp;ndash; handles posting comments to a given entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="6641306a3633f32bdedfa4054c5b08150fba84fc" translate="yes" xml:space="preserve">
          <source>Comments for translators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a2381c3fdb3c0c5a2f43150e4e650259c6c328" translate="yes" xml:space="preserve">
          <source>Comments for translators in templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237397d108c7882411e5f1ddd54d93a731a473f7" translate="yes" xml:space="preserve">
          <source>Comments look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1076a4b29562467018597272c6d896f5bc5227a5" translate="yes" xml:space="preserve">
          <source>Committing the changes in the patch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f4ee0012b5a9243c01295a17fad4ea4fe13d46" translate="yes" xml:space="preserve">
          <source>Common Web application tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af04fb2fa2de3c20f43f5e3967f22434e12a290c" translate="yes" xml:space="preserve">
          <source>Common aggregate options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00ac15e60bc2dbbc5a5e9b995a6071cb6c5d758" translate="yes" xml:space="preserve">
          <source>Common cases such as validating against an email or a regular expression can be handled using existing validator classes available in Django. For example, &lt;code&gt;validators.validate_slug&lt;/code&gt; is an instance of a &lt;a href=&quot;../validators#django.core.validators.RegexValidator&quot;&gt;&lt;code&gt;RegexValidator&lt;/code&gt;&lt;/a&gt; constructed with the first argument being the pattern: &lt;code&gt;^[-a-zA-Z0-9_]+$&lt;/code&gt;. See the section on &lt;a href=&quot;../validators&quot;&gt;writing validators&lt;/a&gt; to see a list of what is already available and for an example of how to write a validator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3598d7d42bce6e5debb8491d044313a6d4391ec5" translate="yes" xml:space="preserve">
          <source>Common pitfalls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ec277c0ef20da052bfc2eb2c8a1f67cd237755" translate="yes" xml:space="preserve">
          <source>Common use is to display a thousand separator. If this setting is &lt;code&gt;0&lt;/code&gt;, then no grouping will be applied to the number. If this setting is greater than &lt;code&gt;0&lt;/code&gt;, then &lt;a href=&quot;#std:setting-THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt; will be used as the separator between those groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e2fa048671ba1782ceac817166728db935c047" translate="yes" xml:space="preserve">
          <source>Comparable to &lt;a href=&quot;#django.db.models.functions.FirstValue&quot;&gt;&lt;code&gt;FirstValue&lt;/code&gt;&lt;/a&gt;, it calculates the last value in a given frame clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013a952e852568e07ecb48992072b7b1e509b117" translate="yes" xml:space="preserve">
          <source>Comparable to &lt;code&gt;RowNumber&lt;/code&gt;, this function ranks rows in the window. The computed rank contains gaps. Use &lt;a href=&quot;#django.db.models.functions.DenseRank&quot;&gt;&lt;code&gt;DenseRank&lt;/code&gt;&lt;/a&gt; to compute rank without gaps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e3bae39864c8eaadbaa52201cd3400ed3c7268" translate="yes" xml:space="preserve">
          <source>Comparing Polygons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9a07241ecb7fd5c1f83975cd62cd490f5c7b13" translate="yes" xml:space="preserve">
          <source>Comparing objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15eebb89cf64b1215fecc2b913d44d9bd81a2ffd" translate="yes" xml:space="preserve">
          <source>Comparing offset-naive and offset-aware datetimes will return an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8a9f334334957255e73f6d04d7cdf5cb4e1d87" translate="yes" xml:space="preserve">
          <source>Comparison and conversion functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25204cbd4bfc02484e2851632d991b06eb495ce" translate="yes" xml:space="preserve">
          <source>Comparison functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c2a4d72da244fd42ae3a97b091ca45e31993a0" translate="yes" xml:space="preserve">
          <source>Comparison with middleware conditional processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ee9d9d9a9e3ffcaef93431da80743ebd1d119c" translate="yes" xml:space="preserve">
          <source>Compatibility Tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75384cdd59f5a26056087afb915a33aa701204f" translate="yes" xml:space="preserve">
          <source>Compatibility checks warn of potential problems that might occur after upgrading Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966b80fafe70e64691aed39ff4ed52c57620abe6" translate="yes" xml:space="preserve">
          <source>Compiles &lt;code&gt;.po&lt;/code&gt; files created by &lt;a href=&quot;#django-admin-makemessages&quot;&gt;&lt;code&gt;makemessages&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;.mo&lt;/code&gt; files for use with the built-in gettext support. See &lt;a href=&quot;../topics/i18n/index&quot;&gt;Internationalization and localization&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e905651a34f4047baa4fb287c63cd2f1a5e771" translate="yes" xml:space="preserve">
          <source>Compiles the given template code and returns a &lt;a href=&quot;#django.template.Template&quot;&gt;&lt;code&gt;Template&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30ce2330406ed290a82010d978c0c56ca93b445a" translate="yes" xml:space="preserve">
          <source>Compiling message files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0059eb732e810f5e37b107fcba91c62825c59cc1" translate="yes" xml:space="preserve">
          <source>Complete &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; elements can also be generated using the &lt;a href=&quot;../../ref/forms/api#django.forms.BoundField.label_tag&quot;&gt;&lt;code&gt;label_tag()&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1913a1fa57f5232142d7bd96f33c2c65642a19a" translate="yes" xml:space="preserve">
          <source>Complex expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4efdb00b051a421feb4019cc39c46fbafabeea1" translate="yes" xml:space="preserve">
          <source>Complex lookups with &lt;code&gt;Q&lt;/code&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="fab38ef91b6ace3bd587ad488096f8252e1e3b83" translate="yes" xml:space="preserve">
          <source>Composite widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c9c53630c638b1f7e13d41f5e544d61320f791" translate="yes" xml:space="preserve">
          <source>Compressed fixtures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b919ab47536ad948ad059b28f52abc7202eb7da" translate="yes" xml:space="preserve">
          <source>Compresses responses for all modern browsers, saving bandwidth and transfer time. Note that GZipMiddleware is currently considered a security risk, and is vulnerable to attacks that nullify the protection provided by TLS/SSL. See the warning in &lt;a href=&quot;../ref/middleware#django.middleware.gzip.GZipMiddleware&quot;&gt;&lt;code&gt;GZipMiddleware&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68df5f1aa66f7f803e95695e64e17380eccdcd96" translate="yes" xml:space="preserve">
          <source>Compute statistics on the pixel values of this band. The return value is a tuple with the following structure: &lt;code&gt;(minimum, maximum, mean, standard deviation)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a71649f7a2bce3581b4512f70d6c0d66ec8189b" translate="yes" xml:space="preserve">
          <source>Computes and returns a &lt;a href=&quot;#django.contrib.gis.geos.Point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt; guaranteed to be on the interior of this geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b98ecc517c58a811d5c20ab7bb36e95df0c85c" translate="yes" xml:space="preserve">
          <source>Computes and returns a return code based on a test suite, and the result from that test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9364f46c2cda5209aaab7715e4f92f41b2f35e0" translate="yes" xml:space="preserve">
          <source>Computes the percentile rank of the rows in the frame clause. This computation is equivalent to evaluating:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba348e281d3a1b3d56d22212bc1c06e8d44cd1a2" translate="yes" xml:space="preserve">
          <source>Computes the row number according to the ordering of either the frame clause or the ordering of the whole query if there is no partitioning of the &lt;a href=&quot;expressions#window-frames&quot;&gt;window frame&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976abda7d25dd0dfc1c9d9662da5f4c425bdf9f0" translate="yes" xml:space="preserve">
          <source>Computes the row relative to the offset &lt;code&gt;nth&lt;/code&gt; (must be a positive value) within the window. Returns &lt;code&gt;None&lt;/code&gt; if no row exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c3b5b1e7cd50f8eaaee1c91c319908604703bd" translate="yes" xml:space="preserve">
          <source>Computes the sum of all values of the given expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b13c0c14f5454f62d6b6a1576e053d30f8d170b" translate="yes" xml:space="preserve">
          <source>Computes the union of all the elements of this geometry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f58d263f33944384921df8405fd4a36e06175e2" translate="yes" xml:space="preserve">
          <source>Concepts</source>
          <target state="translated">Concepts</target>
        </trans-unit>
        <trans-unit id="8a0d63179619b501ad5800876cf0df368b27a390" translate="yes" xml:space="preserve">
          <source>Conditional Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51201a4ffb69f5fef436bea1d53b660564da92b2" translate="yes" xml:space="preserve">
          <source>Conditional GET middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84610f50040959e21038dc91d808569b8b6c878d" translate="yes" xml:space="preserve">
          <source>Conditional View Processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a65ce1ccd4b4ea18beb9a287cffd3226a29b18" translate="yes" xml:space="preserve">
          <source>Conditional aggregation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3a5684fef13806f283dbcf73d3e65b3768503e" translate="yes" xml:space="preserve">
          <source>Conditional content processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e428c12fd355944b5e6b7023bd80dd3c17b5aee5" translate="yes" xml:space="preserve">
          <source>Conditional expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45c9f8d76c7c10737f779703b3c7b190d208b8a" translate="yes" xml:space="preserve">
          <source>Conditional expressions allow you to use &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt;&lt;code&gt;elif&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt;&lt;code&gt;else&lt;/code&gt;&lt;/a&gt; logic in queries. Django natively supports SQL &lt;code&gt;CASE&lt;/code&gt; expressions. For more details see &lt;a href=&quot;conditional-expressions&quot;&gt;Conditional Expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c9e719109c7265189423688e4cce31f68c4b2c" translate="yes" xml:space="preserve">
          <source>Conditional expressions can be used in annotations, aggregations, filters, lookups, and updates. They can also be combined and nested with other expressions. This allows you to make powerful conditional queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef384a3da302114339742bb2d330728087ede27" translate="yes" xml:space="preserve">
          <source>Conditional expressions let you use &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#if&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#elif&quot;&gt;&lt;code&gt;elif&lt;/code&gt;&lt;/a&gt; &amp;hellip; &lt;a href=&quot;https://docs.python.org/3/reference/compound_stmts.html#else&quot;&gt;&lt;code&gt;else&lt;/code&gt;&lt;/a&gt; logic within filters, annotations, aggregations, and updates. A conditional expression evaluates a series of conditions for each row of a table and returns the matching result expression. Conditional expressions can also be combined and nested like other &lt;a href=&quot;expressions&quot;&gt;expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60685b8618223463a1213478b5912b07b255960a" translate="yes" xml:space="preserve">
          <source>Conditional filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12fc2f5ba876364a8762b74c54215eafe75db00b" translate="yes" xml:space="preserve">
          <source>Conditional update</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcf55a9190afa7734274d1ddfba86a6f59deba2" translate="yes" xml:space="preserve">
          <source>Conditional view processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1b7b24ee2d25c7e1fdcf4448522c537af9f7f1" translate="yes" xml:space="preserve">
          <source>Conditionally enabling or disabling actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a0de49479646f82acca96a3b96147d92a823b1" translate="yes" xml:space="preserve">
          <source>Conditions that span relational fields. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f081a03e38b9f2ce94b3f290434e89b874cfbe18" translate="yes" xml:space="preserve">
          <source>Configurable attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="2b6c31d8647bdbb2028b97fcd3605cc88d0c8ef1" translate="yes" xml:space="preserve">
          <source>Configure &lt;code&gt;settings.py&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19576e379b1455d39fea388e4831958b5fde4e20" translate="yes" xml:space="preserve">
          <source>Configure a &lt;a href=&quot;../../../topics/templates#django.template.backends.django.DjangoTemplates&quot;&gt;&lt;code&gt;DjangoTemplates&lt;/code&gt;&lt;/a&gt; backend in your &lt;a href=&quot;../../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting with &lt;code&gt;django.contrib.auth.context_processors.auth&lt;/code&gt; and &lt;code&gt;django.contrib.messages.context_processors.messages&lt;/code&gt; in the &lt;code&gt;'context_processors'&lt;/code&gt; option of &lt;a href=&quot;../../settings#std:setting-TEMPLATES-OPTIONS&quot;&gt;&lt;code&gt;OPTIONS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3b04cea17e28c67f71fed6f96b07d523b18de1" translate="yes" xml:space="preserve">
          <source>Configure your web server to serve the files in &lt;a href=&quot;../../ref/settings#std:setting-STATIC_ROOT&quot;&gt;&lt;code&gt;STATIC_ROOT&lt;/code&gt;&lt;/a&gt; under the URL &lt;a href=&quot;../../ref/settings#std:setting-STATIC_URL&quot;&gt;&lt;code&gt;STATIC_URL&lt;/code&gt;&lt;/a&gt;. For example, here&amp;rsquo;s &lt;a href=&quot;../deployment/wsgi/modwsgi#serving-files&quot;&gt;how to do this with Apache and mod_wsgi&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503e91de84f91208b728c191e6f3ed197e5d413b" translate="yes" xml:space="preserve">
          <source>Configure, make and install:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184f5022536e583eabec108d9706fbe79627f797" translate="yes" xml:space="preserve">
          <source>Configures Django by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba19abb1d165db639c4a564906edfeb16a0a29d" translate="yes" xml:space="preserve">
          <source>Configures a newly created user. This method is called immediately after a new user is created, and can be used to perform custom setup actions, such as setting the user&amp;rsquo;s groups based on attributes in an LDAP directory. Returns the user object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af468c991e56e22e41dec7452937a15cb317f13" translate="yes" xml:space="preserve">
          <source>Configures three loggers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485cc663bb970ccb9c99a838c0f5a04115489124" translate="yes" xml:space="preserve">
          <source>Configuring Django in this fashion is mostly necessary &amp;ndash; and, indeed, recommended &amp;ndash; when you&amp;rsquo;re using a piece of the framework inside a larger application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b38a4978760216c72304cd269e9d8e57f7db4d" translate="yes" xml:space="preserve">
          <source>Configuring an engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0159a42419a7407b045bec82aed244724be873" translate="yes" xml:space="preserve">
          <source>Configuring and starting the uWSGI server for Django</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399b54fd8f642e78380d5fce3b076f86d97da4e8" translate="yes" xml:space="preserve">
          <source>Configuring applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79235b7e3284ed1a0ee69b93dc85fffe62a078f3" translate="yes" xml:space="preserve">
          <source>Configuring email for development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64c5c6a6cb52da59668af10fafaac8249a4f623" translate="yes" xml:space="preserve">
          <source>Configuring form elements&amp;rsquo; HTML &lt;code&gt;id&lt;/code&gt; attributes and &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c337c488d4a759a6eb0d55f602e54b6c630596b" translate="yes" xml:space="preserve">
          <source>Configuring logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722745be73ea61714ad4ab330460a1449b423ce0" translate="yes" xml:space="preserve">
          <source>Configuring static files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204565212ff116d3cf1b1065c865c959dbde3456" translate="yes" xml:space="preserve">
          <source>Configuring the message engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b1e8f062ef7113523bf799b6668696a0806bcf" translate="yes" xml:space="preserve">
          <source>Configuring the rendering of a form&amp;rsquo;s widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af41083fea57cddecb86fb3bf45008f94aabe64" translate="yes" xml:space="preserve">
          <source>Configuring the session engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4035740826101b046a1e4bff2c0739fa6aaed0d9" translate="yes" xml:space="preserve">
          <source>Configuring the settings module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd325343ebe91309a2a788b620ad9f4a5c51fae6" translate="yes" xml:space="preserve">
          <source>Configuring these servers is out of scope of this document; check each server&amp;rsquo;s respective documentation for instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0f7b1c340243357fe9239425729d88aa6a2c45" translate="yes" xml:space="preserve">
          <source>Confirm the bug by using the &lt;a href=&quot;../ref/django-admin#django-admin-shell&quot;&gt;&lt;code&gt;shell&lt;/code&gt;&lt;/a&gt; to check the method on a question whose date lies in the future:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4eb5164cf4479c415eb2d005ae2e4fac51710db" translate="yes" xml:space="preserve">
          <source>Congratulations, you&amp;rsquo;ve learned how to make a pull request to Django! Details of more advanced techniques you may need are in &lt;a href=&quot;https://docs.djangoproject.com/en/3.0/internals/contributing/writing-code/working-with-git/&quot;&gt;Working with Git and GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d403fbfd19b67a206b7298bca03432d7c2ea2ce" translate="yes" xml:space="preserve">
          <source>Connecting receiver functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bdf07a77312f53ea2d4719544dbd5407ca884f" translate="yes" xml:space="preserve">
          <source>Connecting to signals sent by specific senders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af53bacbeb9ba4944f6b9f266fabc80be94aba0c" translate="yes" xml:space="preserve">
          <source>Connecting to the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f35038b27fc876a57591119e37327c7b80eb76" translate="yes" xml:space="preserve">
          <source>Connection management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9519b982a0870cfa8eaaa9ffdb2113e333074ee0" translate="yes" xml:space="preserve">
          <source>Connection settings are used in this order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b328cde6e35e516d82cee79dfdc66644770025e" translate="yes" xml:space="preserve">
          <source>Connections and cursors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a00f8956bd3074b46c457b5fc7f951d07cffcb" translate="yes" xml:space="preserve">
          <source>Consequently, when configured via &lt;code&gt;settings.configure()&lt;/code&gt;, Django will not make any modifications to the process environment variables (see the documentation of &lt;a href=&quot;../ref/settings#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; for why this would normally occur). It&amp;rsquo;s assumed that you&amp;rsquo;re already in full control of your environment in these cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723e6f92743d4882ba199f3bce595df23c649696" translate="yes" xml:space="preserve">
          <source>Consider &lt;a href=&quot;../howto/static-files/deployment#staticfiles-from-cdn&quot;&gt;serving static files from a cloud service or CDN&lt;/a&gt; to avoid some of these issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcf5d703d3f6569aaf8b5b1cb51f1023404c956" translate="yes" xml:space="preserve">
          <source>Consider a form containing a &lt;a href=&quot;../../ref/forms/fields#django.forms.FileField&quot;&gt;&lt;code&gt;FileField&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86230a2ac93ffe6536b5566b296e6c21dec433f" translate="yes" xml:space="preserve">
          <source>Consider a more useful form than our minimal example above, which we could use to implement &amp;ldquo;contact me&amp;rdquo; functionality on a personal website:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6670df00166ba856b2846c093a362aeefbb7eadf" translate="yes" xml:space="preserve">
          <source>Consider a typical case, where a view might need to call a model&amp;rsquo;s method to perform some computation, before placing the model instance into the context, where the template might invoke the method once more:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0105b3c78814a97f1529301cab6c2210c49eaf36" translate="yes" xml:space="preserve">
          <source>Consider again this URLconf entry:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d813ff8a4ab210b4832d5705e367f6f3c7f128ae" translate="yes" xml:space="preserve">
          <source>Consider an example where you are implementing a custom field named &lt;code&gt;RangedIntegerField&lt;/code&gt;. This field adds &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; arguments to the constructor of &lt;code&gt;IntegerField&lt;/code&gt;. You may want to add a check to ensure that users provide a min value that is less than or equal to the max value. The following code snippet shows how you can implement this check:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7def0b3f29a8fc3f1e8dca782d283a5c0a71a0a" translate="yes" xml:space="preserve">
          <source>Consider the case of a list of objects that have a foreign key referencing &lt;a href=&quot;../ref/contrib/contenttypes#django.contrib.contenttypes.models.ContentType&quot;&gt;&lt;code&gt;ContentType&lt;/code&gt;&lt;/a&gt;. If you&amp;rsquo;re going to serialize an object that refers to a content type, then you need to have a way to refer to that content type to begin with. Since &lt;code&gt;ContentType&lt;/code&gt; objects are automatically created by Django during the database synchronization process, the primary key of a given content type isn&amp;rsquo;t easy to predict; it will depend on how and when &lt;a href=&quot;../ref/django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; was executed. This is true for all models which automatically generate objects, notably including &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.Permission&quot;&gt;&lt;code&gt;Permission&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.Group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../ref/contrib/auth#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f69e049d11cfea430a186ac01ffac1bca0cfc8" translate="yes" xml:space="preserve">
          <source>Consider the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec3d6fc8e2778acd98b6b9a74478cbb3ac532f2" translate="yes" xml:space="preserve">
          <source>Consider the following model, using an &lt;a href=&quot;../ref/models/fields#django.db.models.ImageField&quot;&gt;&lt;code&gt;ImageField&lt;/code&gt;&lt;/a&gt; to store a photo:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f0ad7c11ed74758926263473b6fcdd5c68904d" translate="yes" xml:space="preserve">
          <source>Consider the following two models:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55e14cd00af1671d3acaeb6797a2f1a1d1cfe56" translate="yes" xml:space="preserve">
          <source>Consider this case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6fa5fb83466f5cb81ad8dc4eb230c1e627bee82" translate="yes" xml:space="preserve">
          <source>Consider this set of models:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d80b05f0a3f520081f1af1f6b4b6a85d5f6f34" translate="yes" xml:space="preserve">
          <source>Consider using an error monitoring system such as &lt;a href=&quot;https://docs.sentry.io/&quot;&gt;Sentry&lt;/a&gt; before your inbox is flooded by reports. Sentry can also aggregate logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac4e95735f7b9ee2aeac0a541fc2fbb47d3773a" translate="yes" xml:space="preserve">
          <source>Consider, for example, that you need to change a single database feature. First, you have to create a new directory with a &lt;code&gt;base&lt;/code&gt; module in it. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac7b250a9feea25e1a60fbc0ce1d2f28db31ae2" translate="yes" xml:space="preserve">
          <source>Considerations regarding model&amp;rsquo;s &lt;code&gt;error_messages&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad5caa2de30e036189b4b06ccc83a823846c06f" translate="yes" xml:space="preserve">
          <source>Considerations when removing model fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cbdd33812e96a59909005452966168ffe901bd" translate="yes" xml:space="preserve">
          <source>Console backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733fd2b4c4e1bca4c7d0e3c2e1c341bcd1d34269" translate="yes" xml:space="preserve">
          <source>Constant</source>
          <target state="translated">Constant</target>
        </trans-unit>
        <trans-unit id="d2bb772775f2449a9d77b0f2111e8563197228e7" translate="yes" xml:space="preserve">
          <source>Constraints are defined in &lt;code&gt;django.db.models.constraints&lt;/code&gt;, but for convenience they&amp;rsquo;re imported into &lt;a href=&quot;../../topics/db/models#module-django.db.models&quot;&gt;&lt;code&gt;django.db.models&lt;/code&gt;&lt;/a&gt;. The standard convention is to use &lt;code&gt;from django.db import models&lt;/code&gt; and refer to the constraints as &lt;code&gt;models.&amp;lt;Foo&amp;gt;Constraint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c5e5d778784e530c7a73d09a7b6e47b0b6dbcc" translate="yes" xml:space="preserve">
          <source>Constraints in abstract base classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1705fea1fec1fa4ac3b10f2d3cfa4a70220a459d" translate="yes" xml:space="preserve">
          <source>Constraints reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a9544fc5f74416b59886dcf88258ecc14145b9" translate="yes" xml:space="preserve">
          <source>Constructed by paginating &lt;code&gt;queryset&lt;/code&gt; into pages of size &lt;code&gt;page_size&lt;/code&gt;. If the request contains a &lt;code&gt;page&lt;/code&gt; argument, either as a captured URL argument or as a GET argument, &lt;code&gt;object_list&lt;/code&gt; will correspond to the objects from that page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843aa9f358e7373aa764b1a65c9105e0cdcfffaf" translate="yes" xml:space="preserve">
          <source>Constructing an unbound form is the same as always &amp;ndash; omit both form data &lt;em&gt;and&lt;/em&gt; file data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad04bd63e469988c66f8a3b4fe65a042e0e7a4c2" translate="yes" xml:space="preserve">
          <source>Constructor arguments are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c178a0518cca80f0ef53db97c1d23d11b0c437d" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;a href=&quot;#django.contrib.gis.gdal.Polygon&quot;&gt;&lt;code&gt;Polygon&lt;/code&gt;&lt;/a&gt; from the given bounding-box (a 4-tuple).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01313c178df0437bd242d3dc19fe189331e205f" translate="yes" xml:space="preserve">
          <source>Constructs a &lt;a href=&quot;#django.contrib.gis.geos.GEOSGeometry&quot;&gt;&lt;code&gt;GEOSGeometry&lt;/code&gt;&lt;/a&gt; from the given GML string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4182e609339c912b6a2b55fb04b1948dc8fa25a3" translate="yes" xml:space="preserve">
          <source>Constructs a form, checks the form for validity, and handles it accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25a4d6a608627e8ee7fbb0590daad81bfdf43f7" translate="yes" xml:space="preserve">
          <source>Constructs a test suite that matches the test labels provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b659b37f4f2e24b2ad4c7dc596d71c179972c4e" translate="yes" xml:space="preserve">
          <source>Constructs an &lt;a href=&quot;#django.contrib.gis.gdal.OGRGeometry&quot;&gt;&lt;code&gt;OGRGeometry&lt;/code&gt;&lt;/a&gt; from the given GML string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcb9a98e37a51c3b607e0bab427f0a3e73904bd" translate="yes" xml:space="preserve">
          <source>Constructs the target URL for redirection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d6543469ef40166278b437bd62f964375e7652" translate="yes" xml:space="preserve">
          <source>Contained within. This operator is supported by many Python containers to test whether the given value is in the container. The following are some examples of how &lt;code&gt;x in y&lt;/code&gt; will be interpreted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d2ab91daa8570eacf6a6c4a05409536ee1c6a9" translate="yes" xml:space="preserve">
          <source>Containment and key operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4391727be29f60ee6dfbc6fd8ef4ac397cf112d6" translate="yes" xml:space="preserve">
          <source>Containment functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b100d40ac5a33d89caf83b3c3f6ff6daf77433b" translate="yes" xml:space="preserve">
          <source>Contains the complete list of core and contrib app settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4683f6ec63cb87bdf57e377dbff2cca050de9197" translate="yes" xml:space="preserve">
          <source>Content types and generic relations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc11b3a28fa30ae6d3d3ad1438824cbd5224ba5c" translate="yes" xml:space="preserve">
          <source>Context</source>
          <target state="translated">Context</target>
        </trans-unit>
        <trans-unit id="59bbe6057a4273131904b6f9404ed85f706992d4" translate="yes" xml:space="preserve">
          <source>Context and template responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c53e2b775a20fe1a0e933400d064d167505dae" translate="yes" xml:space="preserve">
          <source>Context available in widget templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ed0085f13911ebc5a2d12f4fc504a3182b3ed1" translate="yes" xml:space="preserve">
          <source>Context processors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5901a49232dbef577cda0060c889044257f6fbb8" translate="yes" xml:space="preserve">
          <source>Context processors are applied on top of context data. This means that a context processor may overwrite variables you&amp;rsquo;ve supplied to your &lt;a href=&quot;#django.template.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#django.template.RequestContext&quot;&gt;&lt;code&gt;RequestContext&lt;/code&gt;&lt;/a&gt;, so take care to avoid variable names that overlap with those supplied by your context processors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc05c7c5de0522d2d85d1b6e2fce9c6303049e04" translate="yes" xml:space="preserve">
          <source>Context processors are functions that receive the current &lt;a href=&quot;../ref/request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; as an argument and return a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; of data to be added to the rendering context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967bdc0eee5ec3c4217bafc26bea045765883071" translate="yes" xml:space="preserve">
          <source>Context processors are useful with Django templates because Django templates don&amp;rsquo;t support calling functions with arguments. Since Jinja2 doesn&amp;rsquo;t have that limitation, it&amp;rsquo;s recommended to put the function that you would use as a context processor in the global variables available to the template using &lt;code&gt;jinja2.Environment&lt;/code&gt; as described below. You can then call that function in the template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81ca58a2d33854d7dad7ec7988eec151557124f" translate="yes" xml:space="preserve">
          <source>Context variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdc9b0c3ef7fa9d319e35db5e3432f41737cfe7" translate="yes" xml:space="preserve">
          <source>Context variables override values from template context processors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc335d8b69e1b609577d3e39cfa36ec0f7fac1a" translate="yes" xml:space="preserve">
          <source>Context: variable &lt;code&gt;person&lt;/code&gt; is set to &lt;code&gt;&quot;John&quot;&lt;/code&gt; and variable &lt;code&gt;greeting&lt;/code&gt; is set to &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c257f4238337560d78d4a4163014eafe278ff120" translate="yes" xml:space="preserve">
          <source>Contextual line information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334884395d29b2523e74a230fda97118c3630209" translate="yes" xml:space="preserve">
          <source>Contextual markers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46f1a2f098ccaca572a905f2bdf7cbbbfc6c89d" translate="yes" xml:space="preserve">
          <source>Contextual markers are also supported by the &lt;a href=&quot;#std:templatetag-trans&quot;&gt;&lt;code&gt;trans&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:templatetag-blocktrans&quot;&gt;&lt;code&gt;blocktrans&lt;/code&gt;&lt;/a&gt; template tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f09c07c68096594da883f5a23969df19412ff1f" translate="yes" xml:space="preserve">
          <source>Continuing on from the previous example, suppose that in our &lt;code&gt;ContactForm&lt;/code&gt;, we want to make sure that the &lt;code&gt;recipients&lt;/code&gt; field always contains the address &lt;code&gt;&quot;fred@example.com&quot;&lt;/code&gt;. This is validation that is specific to our form, so we don&amp;rsquo;t want to put it into the general &lt;code&gt;MultiEmailField&lt;/code&gt; class. Instead, we write a cleaning method that operates on the &lt;code&gt;recipients&lt;/code&gt; field, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aceb61eb4351dad879dda9b2731200ebcbce06e2" translate="yes" xml:space="preserve">
          <source>Continuing our example from above, you could change the default manager used when you query the &lt;code&gt;Person&lt;/code&gt; model like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7c9e50892f4db2ac9af5a082e27a7139717e30" translate="yes" xml:space="preserve">
          <source>Continuing our ongoing example, we can write the &lt;a href=&quot;../ref/models/fields#django.db.models.Field.formfield&quot;&gt;&lt;code&gt;formfield()&lt;/code&gt;&lt;/a&gt; method as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4405502bfbd98671211d09306e81c9df25477cd4" translate="yes" xml:space="preserve">
          <source>Continuing the above example, we need to define &lt;code&gt;CurrentTimeNode&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187e8fa995249b524a5096b2858c0f31b6eb0e75" translate="yes" xml:space="preserve">
          <source>Contrarily to the &lt;a href=&quot;#std:templatetag-trans&quot;&gt;&lt;code&gt;trans&lt;/code&gt;&lt;/a&gt; tag, the &lt;code&gt;blocktrans&lt;/code&gt; tag allows you to mark complex sentences consisting of literals and variable content for translation by making use of placeholders:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3296398180a962f1c4599ecb5770b2a81fc18db0" translate="yes" xml:space="preserve">
          <source>Contrib and reusable apps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3240e8665bc40b2d6222b1e3c5ce26beecf640" translate="yes" xml:space="preserve">
          <source>Contributing back to Django itself is the best way to see your own concerns addressed. This may seem daunting at first, but it&amp;rsquo;s a well-traveled path with documentation, tooling, and a community to support you. We&amp;rsquo;ll walk you through the entire process, so you can learn by example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce115b0c925643288d6d66089149032ada8c603" translate="yes" xml:space="preserve">
          <source>Control characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b154e4edab7aebc0af47c2562667941ef91db649" translate="yes" xml:space="preserve">
          <source>Controlling cache: Using other headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35880afc483938e0a826ea644109cd0ca08b484" translate="yes" xml:space="preserve">
          <source>Controlling creation order for test databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac4ae3a9579cbec5691358ce474c0b0df2695e3" translate="yes" xml:space="preserve">
          <source>Controlling localization in templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c98a788da67114af3a0e49ab46a0ae821e68bb5" translate="yes" xml:space="preserve">
          <source>Controlling the order of migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6574c3053a419a2444932d417f95327aff549414" translate="yes" xml:space="preserve">
          <source>Controlling transactions explicitly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6b7cfbba43adbe608690d2bba0e22a0e13e5ec" translate="yes" xml:space="preserve">
          <source>Controls &lt;code&gt;#: filename:line&lt;/code&gt; comment lines in language files. If the option is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b7f71be578959fd6d23d2bbd5ba9bb07c414cf" translate="yes" xml:space="preserve">
          <source>Controls the current auto-escaping behavior. This tag takes either &lt;code&gt;on&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; as an argument and that determines whether auto-escaping is in effect inside the block. The block is closed with an &lt;code&gt;endautoescape&lt;/code&gt; ending tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d1f63c0dfa11d252b1ab38a64e01627e4e3b0d" translate="yes" xml:space="preserve">
          <source>Controls the migration framework&amp;rsquo;s reaction if this &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; is pointing at a swappable model. If it is &lt;code&gt;True&lt;/code&gt; - the default - then if the &lt;a href=&quot;#django.db.models.ForeignKey&quot;&gt;&lt;code&gt;ForeignKey&lt;/code&gt;&lt;/a&gt; is pointing at a model which matches the current value of &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; (or another swappable model setting) the relationship will be stored in the migration using a reference to the setting, not to the model directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5fe6453afeb245d890f34dc50aaf9282f5e1b4" translate="yes" xml:space="preserve">
          <source>Controls the migration framework&amp;rsquo;s reaction if this &lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; is pointing at a swappable model. If it is &lt;code&gt;True&lt;/code&gt; - the default - then if the &lt;a href=&quot;#django.db.models.ManyToManyField&quot;&gt;&lt;code&gt;ManyToManyField&lt;/code&gt;&lt;/a&gt; is pointing at a model which matches the current value of &lt;code&gt;settings.AUTH_USER_MODEL&lt;/code&gt; (or another swappable model setting) the relationship will be stored in the migration using a reference to the setting, not to the model directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96447b99d7e9abc6ce4b3abc13d4f488a8b1386b" translate="yes" xml:space="preserve">
          <source>Controls the test runner class that is used to execute tests. This value overrides the value provided by the &lt;a href=&quot;settings#std:setting-TEST_RUNNER&quot;&gt;&lt;code&gt;TEST_RUNNER&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db523bd92e8d56b60d8ceccede6318428181fa50" translate="yes" xml:space="preserve">
          <source>Controls where Django stores message data. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcdc7bebe7773531a558a1c056859dbf3cdff7f" translate="yes" xml:space="preserve">
          <source>Controls where Django stores session data. Included engines are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d7b257968400dc7ed02b7e6eeaa22323ece797" translate="yes" xml:space="preserve">
          <source>Controls where on the page the actions bar appears. By default, the admin changelist displays actions at the top of the page (&lt;code&gt;actions_on_top = True;
actions_on_bottom = False&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5925bed528d2d1afb2ff84897cdc886191f6161" translate="yes" xml:space="preserve">
          <source>Controls whether a selection counter is displayed next to the action dropdown. By default, the admin changelist will display it (&lt;code&gt;actions_selection_counter = True&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e488b00f6003e3487cf3f6ea18fe1dbdb084857c" translate="yes" xml:space="preserve">
          <source>Controls whether or not a constraint should be created in the database for this foreign key. The default is &lt;code&gt;True&lt;/code&gt;, and that&amp;rsquo;s almost certainly what you want; setting this to &lt;code&gt;False&lt;/code&gt; can be very bad for data integrity. That said, here are some scenarios where you might want to do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df07e9c9d2ef71a7e2e53a925a500dda80d56c9" translate="yes" xml:space="preserve">
          <source>Controls whether or not constraints should be created in the database for the foreign keys in the intermediary table. The default is &lt;code&gt;True&lt;/code&gt;, and that&amp;rsquo;s almost certainly what you want; setting this to &lt;code&gt;False&lt;/code&gt; can be very bad for data integrity. That said, here are some scenarios where you might want to do this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9494d96246d9e4b07c2935a61d2709b70980f091" translate="yes" xml:space="preserve">
          <source>Conversely, if (for some strange reason) you want Django to output natural keys during serialization, but &lt;em&gt;not&lt;/em&gt; be able to load those key values, just don&amp;rsquo;t define the &lt;code&gt;get_by_natural_key()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8944328622412e4c50234bcd60eb29184d97f2d2" translate="yes" xml:space="preserve">
          <source>Conversion functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190ebbb02c1204703af9a12541fd89c32a534f48" translate="yes" xml:space="preserve">
          <source>Conversion to local time isn&amp;rsquo;t always appropriate &amp;ndash; you may be generating output for computers rather than for humans. The following filters and tags, provided by the &lt;code&gt;tz&lt;/code&gt; template tag library, allow you to control the time zone conversions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9ee11ef37c5bf3a42a21bffdc8cdd4cabb0b98" translate="yes" xml:space="preserve">
          <source>Convert a file system path to a URI portion that is suitable for inclusion in a URL. The path is assumed to be either UTF-8 bytes or string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14aadc6f430aec0f5b89fd139372539991eba2a" translate="yes" xml:space="preserve">
          <source>Convert an Internationalized Resource Identifier (IRI) portion to a URI portion that is suitable for inclusion in a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c8520e24cd282ffd2c300af62902a5fb2a771e" translate="yes" xml:space="preserve">
          <source>Convert the URLconf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877d071a083df4941810c83461727b6498800fe5" translate="yes" xml:space="preserve">
          <source>Converting Python objects to query values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946fe91972de9e63b56258bac7bd01d9e7040979" translate="yes" xml:space="preserve">
          <source>Converting field data for serialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31453473f160b9159b4c71f0570be3844679c73" translate="yes" xml:space="preserve">
          <source>Converting query values to database values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7856c753afe0cd24cd03cfa58759f394e4cb11b3" translate="yes" xml:space="preserve">
          <source>Converting to ASCII if &lt;code&gt;allow_unicode&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt; (the default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f1111f3091d1d7534cc3a81f16babd8ab75df0" translate="yes" xml:space="preserve">
          <source>Converting to lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14370b561d154884d95603823bcf09249b64b4d1" translate="yes" xml:space="preserve">
          <source>Converting values to Python objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1cce06f41ce11386663380c98bec1f00c59b42" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;obj&lt;/code&gt; to a string. Used to serialize the value of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c755c5b20ef8849e03ee59aaf45f1dbe488321" translate="yes" xml:space="preserve">
          <source>Converts &lt;code&gt;value&lt;/code&gt; to a backend-specific value. By default it returns &lt;code&gt;value&lt;/code&gt; if &lt;code&gt;prepared=True&lt;/code&gt; and &lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt; if is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c888f74331d7656347f7a04df7c5cb54e286c8" translate="yes" xml:space="preserve">
          <source>Converts URLs and email addresses in text into clickable links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d847ac56760c372bb5b94f78f62438ea26896715" translate="yes" xml:space="preserve">
          <source>Converts URLs and email addresses into clickable links just like &lt;a href=&quot;#urlize&quot;&gt;urlize&lt;/a&gt;, but truncates URLs longer than the given character limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751a9da24aca474705b5c4e3e7b28fb048fee25f" translate="yes" xml:space="preserve">
          <source>Converts a Uniform Resource Identifier into an Internationalized Resource Identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1982b3dcc1ede0fbfcf2f2b99d326751d14c87b" translate="yes" xml:space="preserve">
          <source>Converts a base 36 string to an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f93e7e3f308d74df45af186ef9bea1f8e5a4e2" translate="yes" xml:space="preserve">
          <source>Converts a function decorator into a method decorator. It can be used to decorate methods or classes; in the latter case, &lt;code&gt;name&lt;/code&gt; is the name of the method to be decorated and is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ff663b74bd4920025fcbb882fe213137b6b205" translate="yes" xml:space="preserve">
          <source>Converts a large integer (or a string representation of an integer) to a friendly text representation. Translates &lt;code&gt;1.0&lt;/code&gt; as a singular phrase and all other numeric values as plural, this may be incorrect for some languages. Works best for numbers over 1 million.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9551376de4074e9ca7c4dd6bfeea4e6cd76d89" translate="yes" xml:space="preserve">
          <source>Converts a numeric field or expression from degrees to radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2319f1c30478b4232e670273c40e44ebf9f05c" translate="yes" xml:space="preserve">
          <source>Converts a numeric field or expression from radians to degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2618a28e846fb11c7628bfca859ef19787afd6" translate="yes" xml:space="preserve">
          <source>Converts a phone number (possibly containing letters) to its numerical equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577743ec7452c0285cd1f9ee850658b64049a5fb" translate="yes" xml:space="preserve">
          <source>Converts a positive integer to a base 36 string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6176ccd3f9c61f695f20d4d3c989543ba3906ed8" translate="yes" xml:space="preserve">
          <source>Converts a string into all lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a8344fd2e4b3cb087ff90b842c79148cc94371" translate="yes" xml:space="preserve">
          <source>Converts a string into all uppercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55d52a8a6c062c508ef151ae8a79d0dad7a1d2c" translate="yes" xml:space="preserve">
          <source>Converts a string into titlecase by making words start with an uppercase character and the remaining characters lowercase. This tag makes no effort to keep &amp;ldquo;trivial words&amp;rdquo; in lowercase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda103d7b6e149b66f5daf5c97e9e68dedee4d62" translate="yes" xml:space="preserve">
          <source>Converts a string to a URL slug by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b02d783cffedff30f7c0486752888ac67c9dce0" translate="yes" xml:space="preserve">
          <source>Converts a value as returned by the database to a Python object. It is the reverse of &lt;a href=&quot;#django.db.models.Field.get_prep_value&quot;&gt;&lt;code&gt;get_prep_value()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc08b0cc0ce67195f91918da27fb75121e9c300" translate="yes" xml:space="preserve">
          <source>Converts all newlines in a piece of plain text to HTML line breaks (&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63102052e724046b4c7cfc712d45726581d79095" translate="yes" xml:space="preserve">
          <source>Converts an IRI (Internationalized Resource Identifier) to a string that is suitable for including in a URL. This is necessary if you&amp;rsquo;re trying to use strings containing non-ASCII characters in a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c065bc0735425120d0f70837c91d785bc012dad9" translate="yes" xml:space="preserve">
          <source>Converts an aware &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; to a different time zone, by default the &lt;a href=&quot;../topics/i18n/timezones#default-current-time-zone&quot;&gt;current time zone&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f58866c9ad2f0e5b48d3a41964a61f6805e6d2" translate="yes" xml:space="preserve">
          <source>Converts an integer or float (or a string representation of either) to a string containing commas every three digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77e5c76b3715d860b42b33499f84db56abe1350" translate="yes" xml:space="preserve">
          <source>Converts an integer to its ordinal as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe150d1e0f5f7fb120999c3b0f99edafb6daa81b" translate="yes" xml:space="preserve">
          <source>Converts the value into the correct Python object. It acts as the reverse of &lt;a href=&quot;#django.db.models.Field.value_to_string&quot;&gt;&lt;code&gt;value_to_string()&lt;/code&gt;&lt;/a&gt;, and is also called in &lt;a href=&quot;instances#django.db.models.Model.clean&quot;&gt;&lt;code&gt;clean()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1df7b5a7e49ff77c91cc2a5edd4b7412912653" translate="yes" xml:space="preserve">
          <source>Converts this geometry to canonical form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5609a3d54449e54a1186321cbbae77971c7f0b88" translate="yes" xml:space="preserve">
          <source>Converts to ASCII. Converts spaces to hyphens. Removes characters that aren&amp;rsquo;t alphanumerics, underscores, or hyphens. Converts to lowercase. Also strips leading and trailing whitespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c899c354a18cb19ad6d8b51fc4b5f91ac62c334" translate="yes" xml:space="preserve">
          <source>Coordinate Retrieval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7403995ddabd0bb442686cb413956962db613f4" translate="yes" xml:space="preserve">
          <source>Coordinate System Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8662f261b71825c211e5fdfa612126122f90357e" translate="yes" xml:space="preserve">
          <source>Coordinates of the top left origin of the raster in the spatial reference system of the source, as a point object with &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a70e2212ed651a12300fa7f69b3920ae57340f" translate="yes" xml:space="preserve">
          <source>Copy the &lt;code&gt;AddField&lt;/code&gt; operation from the auto-generated migration (the first of the three new files) to the last migration, change &lt;code&gt;AddField&lt;/code&gt; to &lt;code&gt;AlterField&lt;/code&gt;, and add imports of &lt;code&gt;uuid&lt;/code&gt; and &lt;code&gt;models&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788fd368b693b80faee754d2935c349108572591" translate="yes" xml:space="preserve">
          <source>Copy the admin static files so that they live within your Apache document root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d14efc430d4c9769a3ab6b2653575f46529a76b" translate="yes" xml:space="preserve">
          <source>Copying model instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4c0c82a62b49bfdcecec04410c6ce9b6600f87" translate="yes" xml:space="preserve">
          <source>Copying the data across</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e342de6e92ac926565fd339c2f3c30925c376803" translate="yes" xml:space="preserve">
          <source>Core Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0973170c5ea97231549e5e3fd104575d8b0565e1" translate="yes" xml:space="preserve">
          <source>Core Settings Topical Index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5cd72f2450459ecb150f3e1de55a5c656262b9" translate="yes" xml:space="preserve">
          <source>Core field arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc69874cbbf2b688bae436665cf59c2abb826f24" translate="yes" xml:space="preserve">
          <source>Core system checks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f588fcafb5874172dc936c72cc314dd639e0b2" translate="yes" xml:space="preserve">
          <source>Counting in the opposite direction works in conjunction with distinct():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655362dd6b3d43b1a50bdb4f16f4cb510ef4b75d" translate="yes" xml:space="preserve">
          <source>Covers all the model related APIs including model fields, related objects, and &lt;code&gt;QuerySet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec53b2c8ed1d8e7f9a3b2bf5c554b068c0e49b96" translate="yes" xml:space="preserve">
          <source>Covers built-in tags, built-in filters, using an alternative template, language, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0610776ae159e53430f541c68b1ccbb538f36fcd" translate="yes" xml:space="preserve">
          <source>Covers the full API reference, including form fields, form widgets, and form and field validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d685caebaa4b6f75f7658512436b86c05cd4ba" translate="yes" xml:space="preserve">
          <source>Covers the schema operations API, special operations, and writing your own operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67adc58703a9da20e63462f7e347e781289f5b6b" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;base.html&lt;/code&gt; template that holds the main look-and-feel of your site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fbf7b36e8022314a4790339f2543f3fbf3f923" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;base_SECTIONNAME.html&lt;/code&gt; template for each &amp;ldquo;section&amp;rdquo; of your site. For example, &lt;code&gt;base_news.html&lt;/code&gt;, &lt;code&gt;base_sports.html&lt;/code&gt;. These templates all extend &lt;code&gt;base.html&lt;/code&gt; and include section-specific styles/design.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc749cd3971dbe897724bd6dd8564d3ddcf6f67c" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;django-polls/LICENSE&lt;/code&gt; file. Choosing a license is beyond the scope of this tutorial, but suffice it to say that code released publicly without a license is &lt;em&gt;useless&lt;/em&gt;. Django and many Django-compatible apps are distributed under the BSD license; however, you&amp;rsquo;re free to pick your own license. Just be aware that your licensing choice will affect who is able to use your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e2bad0947a098145039bda8135653551af8fc5" translate="yes" xml:space="preserve">
          <source>Create a &lt;code&gt;templates&lt;/code&gt; directory in your project directory (the one that contains &lt;code&gt;manage.py&lt;/code&gt;). Templates can live anywhere on your filesystem that Django can access. (Django runs as whatever user your server runs.) However, keeping your templates within the project is a good convention to follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8591541ba0c61f55fbd6a67ce8d050b87767b7b5" translate="yes" xml:space="preserve">
          <source>Create a New Project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dcc14e8d90fd94874dc780b8a0352d4414ebcf" translate="yes" xml:space="preserve">
          <source>Create a Python database-access API for accessing &lt;code&gt;Question&lt;/code&gt; and &lt;code&gt;Choice&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f4729d746052323bea080e3291aec1bad94b49" translate="yes" xml:space="preserve">
          <source>Create a Restaurant. Pass the ID of the &amp;ldquo;parent&amp;rdquo; object as this object&amp;rsquo;s ID:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836dff9f23282905fc38c81755a6f798c674bb12" translate="yes" xml:space="preserve">
          <source>Create a Spatial Database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852d14595eb7534a3b7c4dd3e6b61e01f0ddc46b" translate="yes" xml:space="preserve">
          <source>Create a couple of Places:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad262f4aaf5e201de7e9d7e8303a9b32e7d21d2" translate="yes" xml:space="preserve">
          <source>Create a database schema (&lt;code&gt;CREATE TABLE&lt;/code&gt; statements) for this app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1281cb56285a7b07dc433a65ef11706d09c808" translate="yes" xml:space="preserve">
          <source>Create a few &lt;code&gt;Publications&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c77fdc7f75b9f396d557578b69ed93e72fdfce5" translate="yes" xml:space="preserve">
          <source>Create a few Reporters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cb094b62d7a2aec00d853cc276175047b6ecc1" translate="yes" xml:space="preserve">
          <source>Create a file &lt;code&gt;django-polls/README.rst&lt;/code&gt; with the following contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a14ba9ac0e0b05614c2104e006d32373be6b90" translate="yes" xml:space="preserve">
          <source>Create a new article:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac21fa26bcebb273cb8fb212beed3074ac542ac" translate="yes" xml:space="preserve">
          <source>Create a new virtual environment by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db3963994f9c87b261747170405214fe69ce219" translate="yes" xml:space="preserve">
          <source>Create a subclass of &lt;code&gt;django.contrib.auth.hashers.PBKDF2PasswordHasher&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b752c6e084b6efe17f993fbe10934f428ec7656e" translate="yes" xml:space="preserve">
          <source>Create a symbolic link to each file instead of copying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08cabfe70f421bd36807a1a99bc3b26ff7e9ce3" translate="yes" xml:space="preserve">
          <source>Create a symbolic link to the admin static files from within your document root (this may require &lt;code&gt;+FollowSymLinks&lt;/code&gt; in your Apache configuration).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3fb40d22a3a9a6c121f6cc44971a526dffb546" translate="yes" xml:space="preserve">
          <source>Create a test database, as described in &lt;a href=&quot;../topics/testing/overview#the-test-database&quot;&gt;The test database&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8593879fbb8fbdaa981c410607b1834b6196de0b" translate="yes" xml:space="preserve">
          <source>Create a test to expose the bug</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c5a3c03ddfcf8c589b3f218a2a3ff0c9214390" translate="yes" xml:space="preserve">
          <source>Create a view that can set the current timezone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4537affcd2696306e2ca6cd704323f72090d7e6" translate="yes" xml:space="preserve">
          <source>Create an &lt;code&gt;Article&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77283d7b31a87604678318131c2e4fd7ade2e321" translate="yes" xml:space="preserve">
          <source>Create an Article via the Reporter object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f090dffea140d5e0d0950a1320f5ed657c94aed" translate="yes" xml:space="preserve">
          <source>Create an Article:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158833a98ff083701681b6601c3740425dc98258" translate="yes" xml:space="preserve">
          <source>Create an admin user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8357f0e20d9e4d86bb2f611b84223b374e8ad2e3" translate="yes" xml:space="preserve">
          <source>Create and add a &lt;code&gt;Publication&lt;/code&gt; to an &lt;code&gt;Article&lt;/code&gt; in one step using &lt;a href=&quot;../../../ref/models/relations#django.db.models.fields.related.RelatedManager.create&quot;&gt;&lt;code&gt;create()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5961a59feb5d12c74a29c20edc10106800d8f25" translate="yes" xml:space="preserve">
          <source>Create another &lt;code&gt;Article&lt;/code&gt;, and set it to appear in the &lt;code&gt;Publications&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fb6c99afc76608b4ddc291508c26a6a9320973" translate="yes" xml:space="preserve">
          <source>Create database superuser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45c5127fd242961eee62589553d6b669c2161d9" translate="yes" xml:space="preserve">
          <source>Create database user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be69eeb874428a25d75295cd26ea503f3fc7a7b" translate="yes" xml:space="preserve">
          <source>Create in bulk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c764ce09f8a1a32911dbbad5dfb8948ccf8554" translate="yes" xml:space="preserve">
          <source>Create individual templates for each type of page, such as a news article or blog entry. These templates extend the appropriate section template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be508244621c4025257d5c4ed57c32bd6843783" translate="yes" xml:space="preserve">
          <source>Create superusers using the &lt;a href=&quot;../../ref/django-admin#django-admin-createsuperuser&quot;&gt;&lt;code&gt;createsuperuser&lt;/code&gt;&lt;/a&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9548c88189467bc8e5d27c2ff0b7c5841f632284" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://www.postgresql.org/docs/current/brin-intro.html&quot;&gt;BRIN index&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f381aed2b93a22cb8a31f90056580c567d6680e6" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://www.postgresql.org/docs/current/gin.html&quot;&gt;gin index&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0d8c421e33b77e8d1b0b52ca02f611c0e6a0db" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;https://www.postgresql.org/docs/current/gist.html&quot;&gt;GiST index&lt;/a&gt;. These indexes are automatically created on spatial fields with &lt;a href=&quot;../gis/model-api#django.contrib.gis.db.models.BaseSpatialField.spatial_index&quot;&gt;&lt;code&gt;spatial_index=True&lt;/code&gt;&lt;/a&gt;. They&amp;rsquo;re also useful on other types, such as &lt;a href=&quot;fields#django.contrib.postgres.fields.HStoreField&quot;&gt;&lt;code&gt;HStoreField&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;fields#range-fields&quot;&gt;range fields&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02dbfc61b7341045f04743484e677bc6dcec207" translate="yes" xml:space="preserve">
          <source>Creates a &lt;a href=&quot;models/constraints&quot;&gt;constraint&lt;/a&gt; in the database table for the model with &lt;code&gt;model_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb14c736a29cc2dbf86895673bfd6d47e4dc735" translate="yes" xml:space="preserve">
          <source>Creates a B-Tree index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7c7f84568f72db3fea6457ea22d98854b80373" translate="yes" xml:space="preserve">
          <source>Creates a Django app directory structure for the given app name in the current directory or the given destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32bd7032c626239ea32443c559faef167069770" translate="yes" xml:space="preserve">
          <source>Creates a Django project directory structure for the given project name in the current directory or the given destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d99ffeb785883294c3f3203a3da5bce039607d" translate="yes" xml:space="preserve">
          <source>Creates a TagURI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f78e51b846cf73a7aaa147eeba963c89d7cc72c" translate="yes" xml:space="preserve">
          <source>Creates a check constraint in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12bb29704eded64208661d06e4cebe63fc65c39b" translate="yes" xml:space="preserve">
          <source>Creates a hash index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6aa02cf5c64f9d47682d2c2901e941da826eac" translate="yes" xml:space="preserve">
          <source>Creates a hashed password in the format used by this application. It takes one mandatory argument: the password in plain-text. Optionally, you can provide a salt and a hashing algorithm to use, if you don&amp;rsquo;t want to use the defaults (first entry of &lt;code&gt;PASSWORD_HASHERS&lt;/code&gt; setting). See &lt;a href=&quot;#auth-included-hashers&quot;&gt;Included hashers&lt;/a&gt; for the algorithm name of each hasher. If the password argument is &lt;code&gt;None&lt;/code&gt;, an unusable password is returned (one that will never be accepted by &lt;a href=&quot;#django.contrib.auth.hashers.check_password&quot;&gt;&lt;code&gt;check_password()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78e89aaeca64ba3da457955f23f3a3a928f2b14" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;QueryDict&lt;/code&gt; with keys from &lt;code&gt;iterable&lt;/code&gt; and each value equal to &lt;code&gt;value&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae9fbfa0e913cc0db15894d0bd21272e2b5eac7" translate="yes" xml:space="preserve">
          <source>Creates a new model in the project history and a corresponding table in the database to match it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f177e523cbd1e4a967daf61de327fffe500db83" translate="yes" xml:space="preserve">
          <source>Creates a new object, saves it and puts it in the related object set. Returns the newly created object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb4efef3a42d0671353d7b10e9ca6a2f48171d4" translate="yes" xml:space="preserve">
          <source>Creates a new object, saves it and puts it in the related object set. Returns the newly created object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4538cd027e6ee8ee6a7b1d8fbc1183d5bca011" translate="yes" xml:space="preserve">
          <source>Creates a new savepoint. This marks a point in the transaction that is known to be in a &amp;ldquo;good&amp;rdquo; state. Returns the savepoint ID (&lt;code&gt;sid&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f013a1612ce6541c295c9ae15dc5c5c204a8074e" translate="yes" xml:space="preserve">
          <source>Creates a new session key while retaining the current session data. &lt;a href=&quot;../auth/default#django.contrib.auth.login&quot;&gt;&lt;code&gt;django.contrib.auth.login()&lt;/code&gt;&lt;/a&gt; calls this method to mitigate against session fixation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4485653708a9a212a2a670464db8bd58b5f9235f" translate="yes" xml:space="preserve">
          <source>Creates a new table in the database for the provided model, along with any unique constraints or indexes it requires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690894dd489984a4e9e7d1a6b1183f1002394336" translate="yes" xml:space="preserve">
          <source>Creates a new test database and runs &lt;code&gt;migrate&lt;/code&gt; against it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b93852da7c8fc97833695d125f0f3f933e545a1" translate="yes" xml:space="preserve">
          <source>Creates a superuser account (a user who has all permissions). This is useful if you need to create an initial superuser account or if you need to programmatically generate superuser accounts for your site(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6171d2295e7c0ed48e71dd0870d4e2cbd8166d2" translate="yes" xml:space="preserve">
          <source>Creates a unique constraint in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0432bace35ccd073e6bfa597655a54d9a70552cf" translate="yes" xml:space="preserve">
          <source>Creates an &lt;a href=&quot;https://www.postgresql.org/docs/current/spgist.html&quot;&gt;SP-GiST index&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6255ebbbe9adb4991648c436b550cb9a2e8659e9" translate="yes" xml:space="preserve">
          <source>Creates an exclusion constraint in the database. Internally, PostgreSQL implements exclusion constraints using indexes. The default index type is &lt;a href=&quot;https://www.postgresql.org/docs/current/gist.html&quot;&gt;GiST&lt;/a&gt;. To use them, you need to activate the &lt;a href=&quot;https://www.postgresql.org/docs/current/btree-gist.html&quot;&gt;btree_gist extension&lt;/a&gt; on PostgreSQL. You can install it using the &lt;a href=&quot;operations#django.contrib.postgres.operations.BtreeGistExtension&quot;&gt;&lt;code&gt;BtreeGistExtension&lt;/code&gt;&lt;/a&gt; migration operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca67befda87ce2fda3dd3950101215522015c64" translate="yes" xml:space="preserve">
          <source>Creates an index (B-Tree) in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b3cc3f024f4e12818a480c9e9785fdcf0107b1" translate="yes" xml:space="preserve">
          <source>Creates an index in the database table for the model with &lt;code&gt;model_name&lt;/code&gt;. &lt;code&gt;index&lt;/code&gt; is an instance of the &lt;a href=&quot;models/indexes#django.db.models.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22dc22ec0c579bf515148241adf4483ee78f0136" translate="yes" xml:space="preserve">
          <source>Creates new migrations based on the changes detected to your models. Migrations, their relationship with apps and more are covered in depth in &lt;a href=&quot;../topics/migrations&quot;&gt;the migrations documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44c7ea385ebbd1c0a0c07cca93a77a36329518e" translate="yes" xml:space="preserve">
          <source>Creates the cache tables for use with the database cache backend using the information from your settings file. See &lt;a href=&quot;../topics/cache&quot;&gt;Django&amp;rsquo;s cache framework&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665cbad6c4bddc0850c0907d819287e4f9d308cc" translate="yes" xml:space="preserve">
          <source>Creates the test databases by calling &lt;a href=&quot;#django.test.utils.setup_databases&quot;&gt;&lt;code&gt;setup_databases()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5f8bf67baa52fb48d7ca9908450a8e72262521" translate="yes" xml:space="preserve">
          <source>Creates the test databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf695e3de3dd650d5db2268e0ef4baac788c0d1" translate="yes" xml:space="preserve">
          <source>Creates, saves and returns a &lt;a href=&quot;#django.contrib.auth.models.User&quot;&gt;&lt;code&gt;User&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c041c8a70d85777d315ae6afd1da67e5a999b3" translate="yes" xml:space="preserve">
          <source>Creating a Geometry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a012943df6a903338b4bce23d7744d51b328aab1" translate="yes" xml:space="preserve">
          <source>Creating a branch for your patch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ac0bbfeabf829a00d633027731ed91312a2d0b" translate="yes" xml:space="preserve">
          <source>Creating a custom database-backed session engine built upon those included in Django (namely &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;cached_db&lt;/code&gt;) may be done by inheriting &lt;a href=&quot;#django.contrib.sessions.base_session.AbstractBaseSession&quot;&gt;&lt;code&gt;AbstractBaseSession&lt;/code&gt;&lt;/a&gt; and either &lt;code&gt;SessionStore&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b334b10ec50ac715d436250767c44b095c5a98f5" translate="yes" xml:space="preserve">
          <source>Creating a manager with &lt;code&gt;QuerySet&lt;/code&gt; methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5939e7cb6944753c61d1e6772b8d56e4ad2da782" translate="yes" xml:space="preserve">
          <source>Creating a new table with the new schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b3670f50a7235a62e631529cda3b62ff015b13" translate="yes" xml:space="preserve">
          <source>Creating a project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3507fab0949d23f3a095d2878623ff305932dd" translate="yes" xml:space="preserve">
          <source>Creating a sitemap index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c7399a4c6eb88ee627587c0862477cf8a4228ed" translate="yes" xml:space="preserve">
          <source>Creating a spatial database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f0a5eead71b6037196acbef32fb4ac3bc05e90" translate="yes" xml:space="preserve">
          <source>Creating an admin user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954917ae5dbe89de69077e2886f8434619b628a6" translate="yes" xml:space="preserve">
          <source>Creating and Saving Models with Geometry Fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5cdb3bb448987a114553188202f13903780b1d" translate="yes" xml:space="preserve">
          <source>Creating and Saving Models with Raster Fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72003e01f0de72fbeb595f21b715e4efdeac07ef" translate="yes" xml:space="preserve">
          <source>Creating custom fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce541594802bd28d7639b5d94a81fb523b07d71f" translate="yes" xml:space="preserve">
          <source>Creating custom fields requires a bit of attention to detail. To make things easier to follow, we&amp;rsquo;ll use a consistent example throughout this document: wrapping a Python object representing the deal of cards in a hand of &lt;a href=&quot;https://en.wikipedia.org/wiki/Contract_bridge&quot;&gt;Bridge&lt;/a&gt;. Don&amp;rsquo;t worry, you don&amp;rsquo;t have to know how to play Bridge to follow this example. You only need to know that 52 cards are dealt out equally to four players, who are traditionally called &lt;em&gt;north&lt;/em&gt;, &lt;em&gt;east&lt;/em&gt;, &lt;em&gt;south&lt;/em&gt; and &lt;em&gt;west&lt;/em&gt;. Our class looks something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbeb8134b5a6061594f1df56020a10612b04b71" translate="yes" xml:space="preserve">
          <source>Creating custom format files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca77bb5dfa9f39d7a4e9411a577a470573f94838" translate="yes" xml:space="preserve">
          <source>Creating custom message levels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7feb970cca7b1f942f20a158ae612616deab8db" translate="yes" xml:space="preserve">
          <source>Creating extension using migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a56e9cf3ae3d2cdb8bd07958069bd475dccd3b1" translate="yes" xml:space="preserve">
          <source>Creating forms from models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969eec4f6cf8a8c1e4c5617688c5ad7be4f5510d" translate="yes" xml:space="preserve">
          <source>Creating message files from JavaScript source code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd203b744dc0d8a93e73770a9a6ac69a6431673" translate="yes" xml:space="preserve">
          <source>Creating models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8dd4d67f3136087378e105e7c5e653955a5db29" translate="yes" xml:space="preserve">
          <source>Creating objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e81bea9a3bc4d898b37eb16f1adfe3db7dd89b" translate="yes" xml:space="preserve">
          <source>Creating projects with a local copy of Django</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b66b7011f4bde37feb7c9d332a71f93e6e15fd" translate="yes" xml:space="preserve">
          <source>Creating rasters from data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e2c12e9d256bf5bb2adfdc8ac559faebf19c45" translate="yes" xml:space="preserve">
          <source>Creating superusers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316db80e3c8f8c069308c64646646d3c1ed208c4" translate="yes" xml:space="preserve">
          <source>Creating the &lt;code&gt;flatpages/default.html&lt;/code&gt; template is your responsibility; in your template directory, create a &lt;code&gt;flatpages&lt;/code&gt; directory containing a file &lt;code&gt;default.html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24db0799c6388c618a6772dcb8b0e502ce12b18" translate="yes" xml:space="preserve">
          <source>Creating the Polls app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a424e3061938a1c7264e464015df539f5f35a479" translate="yes" xml:space="preserve">
          <source>Creating the cache table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c1964da47d78a7495311d193f8a06d10455d63" translate="yes" xml:space="preserve">
          <source>Creating the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7d1516d4d52631df2921a31867c57b01d73cb0" translate="yes" xml:space="preserve">
          <source>Creating the extension requires a database user with superuser privileges. If the Django database user doesn&amp;rsquo;t have superuser privileges, you&amp;rsquo;ll have to create the extension outside of Django migrations with a user that has the appropriate privileges. In that case, connect to your Django database and run the query &lt;code&gt;CREATE EXTENSION IF NOT EXISTS hstore;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1474add844b8d610df5ac31c608f7496f6713b64" translate="yes" xml:space="preserve">
          <source>Creating the test databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c7734d51f5945b8a2dd287727468112306b2af" translate="yes" xml:space="preserve">
          <source>Creating users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a52fdb554c0b801da7c3eae7c4f5265155f4b3b" translate="yes" xml:space="preserve">
          <source>Creating your database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1014cd317ecbb2fec70d0fa6ce28f5d56cbb36e" translate="yes" xml:space="preserve">
          <source>Creating your own Aggregate Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9d7c32120688686aa04670ec6251c31650a1e7" translate="yes" xml:space="preserve">
          <source>Creating your own settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6744d9ba1de7954fd781114b86522f4b93adb12c" translate="yes" xml:space="preserve">
          <source>Creating your tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff357cce9a0a5f5bff4688a6da86e63d71eea13" translate="yes" xml:space="preserve">
          <source>Critical settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="077e062460ee115e1c2f6aac42d1ad832a11e84f" translate="yes" xml:space="preserve">
          <source>Cross Site Request Forgery Protection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f70d1cefbd406afc170b973d0f71da95cb60e55" translate="yes" xml:space="preserve">
          <source>Cross Site Request Forgery protection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca769b18247e31e844721a8791a9053580f01c16" translate="yes" xml:space="preserve">
          <source>Cross site request forgery (CSRF) protection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1afa128e239ede5b334a8b340909ae6a93eef4" translate="yes" xml:space="preserve">
          <source>Cross site scripting (XSS) protection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8ae290d91743bf028b94ada9cc33cd9e885b0b" translate="yes" xml:space="preserve">
          <source>Cross-database relations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c20fd9203e69e49f5ffc0e43b4b3ae080a2987" translate="yes" xml:space="preserve">
          <source>Cross-platform and tested; compatible with Windows, Linux, Solaris, and macOS platforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af448d9ae67fe20d525b6963a44b285d81fa8961" translate="yes" xml:space="preserve">
          <source>Cryptographic signing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ad5ed46b83e98b1f48496c5dbaba78ccf3fc52" translate="yes" xml:space="preserve">
          <source>CsrfViewMiddleware.process_view not used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fbebf6e67e3e1ae730183343a6393734e72929" translate="yes" xml:space="preserve">
          <source>Currently available feed types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d2f57cbe72d8a6d36d4f4a4aaeca0e841b4270" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;postgresql&lt;/code&gt;, &lt;code&gt;oracle&lt;/code&gt;, and &lt;code&gt;mysql&lt;/code&gt; database backends support &lt;code&gt;select_for_update()&lt;/code&gt;. However, MariaDB 10.3+ supports only the &lt;code&gt;nowait&lt;/code&gt; argument and MySQL 8.0.1+ supports the &lt;code&gt;nowait&lt;/code&gt; and &lt;code&gt;skip_locked&lt;/code&gt; arguments. MySQL and MariaDB don&amp;rsquo;t support the &lt;code&gt;of&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a651f190cc76355c6140c82a3b0a49ea508064" translate="yes" xml:space="preserve">
          <source>Custom Lookups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb55fd2a8a225de55cc2a7c151116ab885d289d0" translate="yes" xml:space="preserve">
          <source>Custom auth backends can provide their own permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fd71a31afaaf057b0fedc28ba72336f1780a64" translate="yes" xml:space="preserve">
          <source>Custom backends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be73c4a40287493a1331f1847137608f03f7db5" translate="yes" xml:space="preserve">
          <source>Custom context processors can live anywhere in your code base. All Django cares about is that your custom context processors are pointed to by the &lt;code&gt;'context_processors'&lt;/code&gt; option in your &lt;a href=&quot;../settings#std:setting-TEMPLATES&quot;&gt;&lt;code&gt;TEMPLATES&lt;/code&gt;&lt;/a&gt; setting &amp;mdash; or the &lt;code&gt;context_processors&lt;/code&gt; argument of &lt;a href=&quot;#django.template.Engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt; if you&amp;rsquo;re using it directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee37c1354dec1629641a646e6a662a26d2fe7fa4" translate="yes" xml:space="preserve">
          <source>Custom database types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1535f11e4ce90f2db54547b4056b8064b713c8a8" translate="yes" xml:space="preserve">
          <source>Custom default settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef9e92f379d2757660afc779e0b3d8dbe9b82f8" translate="yes" xml:space="preserve">
          <source>Custom email backends should subclass &lt;code&gt;BaseEmailBackend&lt;/code&gt; that is located in the &lt;code&gt;django.core.mail.backends.base&lt;/code&gt; module. A custom email backend must implement the &lt;code&gt;send_messages(email_messages)&lt;/code&gt; method. This method receives a list of &lt;a href=&quot;#django.core.mail.EmailMessage&quot;&gt;&lt;code&gt;EmailMessage&lt;/code&gt;&lt;/a&gt; instances and returns the number of successfully delivered messages. If your backend has any concept of a persistent session or connection, you should also implement the &lt;code&gt;open()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; methods. Refer to &lt;code&gt;smtp.EmailBackend&lt;/code&gt; for a reference implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f6c9004a0f58c43e2c76676784d271eb1f76cc" translate="yes" xml:space="preserve">
          <source>Custom engines can populate the postmortem by passing the &lt;code&gt;backend&lt;/code&gt; and &lt;code&gt;tried&lt;/code&gt; arguments when raising &lt;a href=&quot;#django.template.TemplateDoesNotExist&quot;&gt;&lt;code&gt;TemplateDoesNotExist&lt;/code&gt;&lt;/a&gt;. Backends that use the postmortem &lt;a href=&quot;#template-origin-api&quot;&gt;should specify an origin&lt;/a&gt; on the template object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ac55b9a3d90687c34195d8b70d4cf69a5febea" translate="yes" xml:space="preserve">
          <source>Custom engines can populate this information by setting a &lt;code&gt;template_debug&lt;/code&gt; attribute on exceptions raised during parsing and rendering. This attribute is a &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; with the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f55c6087b7d0fc860401a848392486f9b03383" translate="yes" xml:space="preserve">
          <source>Custom engines can provide their own &lt;code&gt;template.origin&lt;/code&gt; information by creating an object that specifies the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c58b5a78913f05fa5d6ac67ed7e5e59a11f36b5" translate="yes" xml:space="preserve">
          <source>Custom error reports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bee706b2d9ec29c0ffddaa871393f8bddb224e" translate="yes" xml:space="preserve">
          <source>Custom feed generators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a85f7cef3e205a4fbccb0b642f3559efc61e223" translate="yes" xml:space="preserve">
          <source>Custom field types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f86d5227e987ad9feec36387a01f71ac50987e" translate="yes" xml:space="preserve">
          <source>Custom fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e221cc8d1a9e92d6aaa4eb1a13752833406d8e36" translate="yes" xml:space="preserve">
          <source>Custom file upload handlers &lt;strong&gt;must&lt;/strong&gt; define the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3507087d35d153b74458d38f43020e6a1205c49a" translate="yes" xml:space="preserve">
          <source>Custom filters are Python functions that take one or two arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f15c93f34d7ec5419aeb82c99cce621b3938cc" translate="yes" xml:space="preserve">
          <source>Custom formset validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9115d0af9c57a289022b399c4e423ec502f5f7" translate="yes" xml:space="preserve">
          <source>Custom keyword arguments may be defined on this method if it&amp;rsquo;s likely that &lt;code&gt;as_vendorname()&lt;/code&gt; methods or subclasses will need to supply data to override the generation of the SQL string. See &lt;a href=&quot;expressions#django.db.models.Func.as_sql&quot;&gt;&lt;code&gt;Func.as_sql()&lt;/code&gt;&lt;/a&gt; for example usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b11a4419497bb0e675cb189e1117988dca84c3" translate="yes" xml:space="preserve">
          <source>Custom libraries and template inheritance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad60e6ef93acdf368b01f33eba1a92718aa542bf" translate="yes" xml:space="preserve">
          <source>Custom loaders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88824670ecea4ff8e6f4960a2c9988b136992f4" translate="yes" xml:space="preserve">
          <source>Custom logging configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4bdeb3e6f85e8f055ed8b15db2b73e9d8da8842" translate="yes" xml:space="preserve">
          <source>Custom management commands are especially useful for running standalone scripts or for scripts that are periodically executed from the UNIX crontab or from Windows scheduled tasks control panel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2822eba7bc80f4ec79b68e44cabc44c607f7b494" translate="yes" xml:space="preserve">
          <source>Custom managers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0229e5fe0e5e381a67fad47ed67e29a333a67bbc" translate="yes" xml:space="preserve">
          <source>Custom managers and model inheritance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac0aaaaa8bf55e8fcc051ed1bc33ea819de9179" translate="yes" xml:space="preserve">
          <source>Custom permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ce10dca02502825ea353d8ad2a72922bc1dbe0" translate="yes" xml:space="preserve">
          <source>Custom prefetching also works with single related relations like forward &lt;code&gt;ForeignKey&lt;/code&gt; or &lt;code&gt;OneToOneField&lt;/code&gt;. Generally you&amp;rsquo;ll want to use &lt;a href=&quot;#django.db.models.query.QuerySet.select_related&quot;&gt;&lt;code&gt;select_related()&lt;/code&gt;&lt;/a&gt; for these relations, but there are a number of cases where prefetching with a custom &lt;code&gt;QuerySet&lt;/code&gt; is useful:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c5481ba8c25b2841bd54c8e789627babfd6a75" translate="yes" xml:space="preserve">
          <source>Custom response classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d978bae51d9a07ba9a42f06526b5a0e62deff5b6" translate="yes" xml:space="preserve">
          <source>Custom serializers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d5db0e64d43c816841af4760b3503a8df014b9" translate="yes" xml:space="preserve">
          <source>Custom tag and filter libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b909eaa372de99b1bfa2ec89ef400ce7a00ff1a" translate="yes" xml:space="preserve">
          <source>Custom template options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa307fdb7131d857af40e2eddcc4de4e06ac8d1" translate="yes" xml:space="preserve">
          <source>Custom template tags and filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61a6605f4811cc9d97090149fc5df69abce0c7c" translate="yes" xml:space="preserve">
          <source>Custom upload handlers may also define any of the following optional methods or attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="162a6a573415c3572f32590bdc2ec6573f0dbe8b" translate="yes" xml:space="preserve">
          <source>Custom users and &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32d43732aede79902b22cb4b27558172a2252b1" translate="yes" xml:space="preserve">
          <source>Custom users and permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aeca53bc2d2a116fcf245c569267f8484a653b7" translate="yes" xml:space="preserve">
          <source>Custom users and proxy models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a51a00699194fce94c928643545fc65dcccbfb" translate="yes" xml:space="preserve">
          <source>Custom users and the built-in auth forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabd75b6cca0fd38a9ecdc0aea6ae5fd1fe885c8" translate="yes" xml:space="preserve">
          <source>Customization of &lt;code&gt;SessionStore&lt;/code&gt; classes is achieved by overriding methods and properties described below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dad078a37ad8bef94e0172271b5ec7a4f3608af" translate="yes" xml:space="preserve">
          <source>Customize the admin change list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7130d4a0e533172c317c2b9e89ef7b4b3b5bd137" translate="yes" xml:space="preserve">
          <source>Customize the admin form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933af945151e4ceedf9bb41ecde47a78fbebc2e4" translate="yes" xml:space="preserve">
          <source>Customize the admin index page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591b656041b888797bfae9fb2fe8a882053f1550" translate="yes" xml:space="preserve">
          <source>Customize the admin look and feel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810838565e0457955a945c498139dfb6b6259a32" translate="yes" xml:space="preserve">
          <source>Customize the default error views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3898444d3f84c9e669d871893e8fe7f9620f4c7" translate="yes" xml:space="preserve">
          <source>Customize your &lt;em&gt;app&amp;rsquo;s&lt;/em&gt; look and feel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa94e4fe64bcbe8907e8328b5d0d0f6a8d3eb52" translate="yes" xml:space="preserve">
          <source>Customizing &lt;code&gt;BoundField&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d115e75e975b1a0fd0f4b1efe3c73b6a0fc7d5c7" translate="yes" xml:space="preserve">
          <source>Customizing Users and authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78638351f2fdd04348732962a65dc250d8123e75" translate="yes" xml:space="preserve">
          <source>Customizing a formset&amp;rsquo;s prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70436842c132d679ef9f3442db4a8be0781fc782" translate="yes" xml:space="preserve">
          <source>Customizing authentication in Django</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e1cf12ebd31e82bfa9a678aa4d83140cda8997" translate="yes" xml:space="preserve">
          <source>Customizing error views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc6ccecbaf8812fa1f442eeccfa0c013bfa8fcf" translate="yes" xml:space="preserve">
          <source>Customizing model loading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a9bb9c7797c50c59d72bee233376f82a02c53a" translate="yes" xml:space="preserve">
          <source>Customizing the &lt;a href=&quot;#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cd4da01000ae81211d191ad888550dec8aa9357" translate="yes" xml:space="preserve">
          <source>Customizing the &lt;code&gt;makemessages&lt;/code&gt; command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debfa4bf14660e4e23669d971a0ff79fbdf1d16f" translate="yes" xml:space="preserve">
          <source>Customizing the error list format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6e7e4cd7c08dea08ed324a1b20112279fb97b3" translate="yes" xml:space="preserve">
          <source>Customizing the ignored pattern list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a448ad85fc5db0253551ec0018d98ee240b4e95b" translate="yes" xml:space="preserve">
          <source>Customizing the test client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1425ebd232b0843c39c03e60e1a5e1eedd84dc" translate="yes" xml:space="preserve">
          <source>Customizing widget instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eca7c367c653950368edc8799d8278f19c04299" translate="yes" xml:space="preserve">
          <source>Customizing your &lt;em&gt;application&amp;rsquo;s&lt;/em&gt; templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db51360adc406f3c536825e4a81671a75d5c8cf" translate="yes" xml:space="preserve">
          <source>Customizing your &lt;em&gt;project&amp;rsquo;s&lt;/em&gt; templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987f411227cd62e1d9d2747e9d01bc6388c54944" translate="yes" xml:space="preserve">
          <source>DATA_UPLOAD_MAX_MEMORY_SIZE</source>
          <target state="translated">DATA_UPLOAD_MAX_MEMORY_SIZE</target>
        </trans-unit>
        <trans-unit id="5750f2d08e40bca98a28bf2a9b714836e0fe00a7" translate="yes" xml:space="preserve">
          <source>DATA_UPLOAD_MAX_NUMBER_FIELDS</source>
          <target state="translated">DATA_UPLOAD_MAX_NUMBER_FIELDS</target>
        </trans-unit>
        <trans-unit id="a987cc1f335205c5c000f01b405ca5783de2344b" translate="yes" xml:space="preserve">
          <source>DO NOT USE THIS SERVER IN A PRODUCTION SETTING. It has not gone through security audits or performance tests. (And that&amp;rsquo;s how it&amp;rsquo;s gonna stay. We&amp;rsquo;re in the business of making Web frameworks, not Web servers, so improving this server to be able to handle a production environment is outside the scope of Django.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b58f5eaa2a826388da846448a415bd3b556b444" translate="yes" xml:space="preserve">
          <source>DROP TABLESPACE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cf63e97fca8f5739f4d40bb716551c534d305c" translate="yes" xml:space="preserve">
          <source>DROP USER</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a812312e430870167fa53943a7ddb12f6f0e7ef7" translate="yes" xml:space="preserve">
          <source>Data Migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff838532a17a9bf53f2dd50827a7cf7490286eb4" translate="yes" xml:space="preserve">
          <source>Data is written to the &lt;code&gt;GDALBand&lt;/code&gt; if the &lt;code&gt;data&lt;/code&gt; parameter is provided. The input can be of one of the following types - packed string, buffer, list, array, and NumPy array. The number of items in the input should normally correspond to the total number of pixels in the band, or to the number of pixels for a specific block of pixel values if the &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters are provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fcb2efcf8f2609249be0f201f623f9a4d68b9b5" translate="yes" xml:space="preserve">
          <source>Data migrations and multiple databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b7c9d512743003a90c2ad0d1f8f6a570fd978c" translate="yes" xml:space="preserve">
          <source>Data reset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32db47328d8772b22ceb0af8cd5675ba31ec819" translate="yes" xml:space="preserve">
          <source>Data source objects can have different layers of geospatial features; however, shapefiles are only allowed to have one layer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac512b2277dc12fb253b90cadeff4b79f7f0c52d" translate="yes" xml:space="preserve">
          <source>Data validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61074f1c958d6cdd32dad889b3d58a2d0704cbe3" translate="yes" xml:space="preserve">
          <source>Database</source>
          <target state="translated">Database</target>
        </trans-unit>
        <trans-unit id="84e4359569b343c221776e64428717c072c28795" translate="yes" xml:space="preserve">
          <source>Database &lt;a href=&quot;#django.test.TransactionTestCase.fixtures&quot;&gt;&lt;code&gt;fixtures&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac23f66394de8fde26d23dbcd9da3059e8c61ac" translate="yes" xml:space="preserve">
          <source>Database Exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba115d9062bb7b2f8814ed825125ddb7a3c96c0" translate="yes" xml:space="preserve">
          <source>Database Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc81aa36ed554aeb50f5d23e1a57ea70956e182" translate="yes" xml:space="preserve">
          <source>Database Representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6066bdddff4236d40fda0df2e79d644f6b86600" translate="yes" xml:space="preserve">
          <source>Database Wrappers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139d853c40c2761d9a187500ec19678b9d1407bf" translate="yes" xml:space="preserve">
          <source>Database access optimization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29408e56b0a4999d99c270efbe0ec050a118eceb" translate="yes" xml:space="preserve">
          <source>Database caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5f2437b66f2d6da0600c1896ec4baef76e4c08" translate="yes" xml:space="preserve">
          <source>Database connection parameters are probably different in development and in production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0aa4c1f52dca8c803a9f74c78b22b38aa0a5f27" translate="yes" xml:space="preserve">
          <source>Database exceptions may be imported from &lt;code&gt;django.db&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd856a5b46cdf9a80702df4bc303ec320caa529" translate="yes" xml:space="preserve">
          <source>Database functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abde0154d38dc69279d63ae5d700f37d56cb8f6" translate="yes" xml:space="preserve">
          <source>Database installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0252e25f7f905b6ee26062252e349dd4a604862c" translate="yes" xml:space="preserve">
          <source>Database instrumentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c76dbb51befa2b17f875f1d802153ea0d11dd7" translate="yes" xml:space="preserve">
          <source>Database migration operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f880b9e5e4723468be0ca6c5c7d681c4aa5f505" translate="yes" xml:space="preserve">
          <source>Database optimization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e88cc3a57ce147729af4249a83f5ab24a3e875" translate="yes" xml:space="preserve">
          <source>Database passwords are very sensitive. You should protect them exactly like &lt;a href=&quot;../../ref/settings#std:setting-SECRET_KEY&quot;&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e14fd7699801130697b1a440f51ad1ca1ba384" translate="yes" xml:space="preserve">
          <source>Database routers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9014ac5cdd6d1e3f5253983d1008f07819f2c347" translate="yes" xml:space="preserve">
          <source>Database routers are installed using the &lt;a href=&quot;../../ref/settings#std:setting-DATABASE_ROUTERS&quot;&gt;&lt;code&gt;DATABASE_ROUTERS&lt;/code&gt;&lt;/a&gt; setting. This setting defines a list of class names, each specifying a router that should be used by the master router (&lt;code&gt;django.db.router&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5e801029bb1ea439ed37b472f1040dda983357" translate="yes" xml:space="preserve">
          <source>Database setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dfaa1204a605086f8fa0fc6782bceb0f80d633" translate="yes" xml:space="preserve">
          <source>Database storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254201a1cd6b53ffb45f6e76fbc025f80039c274" translate="yes" xml:space="preserve">
          <source>Database support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de63e8d097b4f4a0634d0fb814107a54e3b34258" translate="yes" xml:space="preserve">
          <source>Database transactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fadeac0d68486e07c4ee9405b6335d13f52505" translate="yes" xml:space="preserve">
          <source>Database-specific fixtures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3363d01cf150e94ab392893f862d8912e00e815" translate="yes" xml:space="preserve">
          <source>Database-specific notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b86ef0c86ec30b96def201de4b90737947c4f05" translate="yes" xml:space="preserve">
          <source>Database: &lt;a href=&quot;#std:setting-DATABASE-TEST&quot;&gt;&lt;code&gt;TEST&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9df769b266c487f912c433c67364fc569bb2078" translate="yes" xml:space="preserve">
          <source>Databases</source>
          <target state="translated">Databases</target>
        </trans-unit>
        <trans-unit id="556659043954d5da31cc2609356e020369c828d9" translate="yes" xml:space="preserve">
          <source>Databases can have any alias you choose. However, the alias &lt;code&gt;default&lt;/code&gt; has special significance. Django uses the database with the alias of &lt;code&gt;default&lt;/code&gt; when no other database has been selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c3f652b5771ee2eca91ff8e23a77ac196a7c18" translate="yes" xml:space="preserve">
          <source>Databases timezone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b958a8c281531157c9f0c685ef5f87dc2bb49c4a" translate="yes" xml:space="preserve">
          <source>Date functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722e02eb4754ac850e59c24add2024f3104621a9" translate="yes" xml:space="preserve">
          <source>Date-based generic views, provided in &lt;a href=&quot;#module-django.views.generic.dates&quot;&gt;&lt;code&gt;django.views.generic.dates&lt;/code&gt;&lt;/a&gt;, are views for displaying drilldown pages for date-based data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1cc70f02e495d4e6ff10b231493be79279e537" translate="yes" xml:space="preserve">
          <source>Date-based mixins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1ffdd5723c9c074a2c27bcd8a7723fe2f52f65" translate="yes" xml:space="preserve">
          <source>Date-based views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e078bbb68dd3331035b940f947c4a5719704861" translate="yes" xml:space="preserve">
          <source>Day of the month without leading zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b807017dea44363d85cc772768a88a0eabd8fdc2" translate="yes" xml:space="preserve">
          <source>Day of the month, 2 digits with leading zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d62f5c366cf10a550473d88dce2a8d8ebc13fb" translate="yes" xml:space="preserve">
          <source>Day of the week, digits without leading zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb83669585b40f30731fa803eeb62366ad3de470" translate="yes" xml:space="preserve">
          <source>Day of the week, textual, 3 letters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8cb970427579b8db2c4d5c57a0060c0319253e" translate="yes" xml:space="preserve">
          <source>Day of the week, textual, long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d217acf15d9c91018c040a87e1a6703ff4783db" translate="yes" xml:space="preserve">
          <source>Day of the year.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f65709e1fa200146c24178ae25721f4965a72b" translate="yes" xml:space="preserve">
          <source>Day-based archive page &amp;ndash; displays all entries in the given day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf376db74e48db2de7a580650158c8e131860084" translate="yes" xml:space="preserve">
          <source>Daylight Savings Time, whether it&amp;rsquo;s in effect or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2269848e603601cacee606bc27a4cecca3cf161" translate="yes" xml:space="preserve">
          <source>Deactivates the currently active translation object so that further _ calls will resolve against the default translation object, again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cbf2732fefc0bef13dd4d4df04fdfa0d736ebd" translate="yes" xml:space="preserve">
          <source>Deactivating transaction management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd4b6926376e0aec947ef8f062c7452118e99af" translate="yes" xml:space="preserve">
          <source>Dealing with aware datetime objects isn&amp;rsquo;t always intuitive. For instance, the &lt;code&gt;tzinfo&lt;/code&gt; argument of the standard datetime constructor doesn&amp;rsquo;t work reliably for time zones with DST. Using UTC is generally safe; if you&amp;rsquo;re using other time zones, you should review the &lt;a href=&quot;http://pytz.sourceforge.net/&quot;&gt;pytz&lt;/a&gt; documentation carefully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a3bbdf305e5eee2989a426b9bc475e127fd785" translate="yes" xml:space="preserve">
          <source>Dealing with conflicts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff864b9048671a9eba40ddeb105557bfb77fe4e" translate="yes" xml:space="preserve">
          <source>Dealing with forms that have &lt;code&gt;FileField&lt;/code&gt; and &lt;code&gt;ImageField&lt;/code&gt; fields is a little more complicated than a normal form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31974ede893790b6091543eb2ad457264207da69" translate="yes" xml:space="preserve">
          <source>Dealing with ordering and deletion of forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617b08e20f97d4dbfa8241cf495eb982b9ba2ca3" translate="yes" xml:space="preserve">
          <source>Dealing with streaming responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3afa8dd01711103e96589a90b95ce9fc84b48ee" translate="yes" xml:space="preserve">
          <source>Debug integration for custom engines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="0f569ab827cea4307fb56e4d259c3fb468135b4c" translate="yes" xml:space="preserve">
          <source>Decimal handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e477488866d963ac8a2e2a726cd08a51d3e7f0af" translate="yes" xml:space="preserve">
          <source>Declaring tablespaces for indexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca53cee65ec35cdc69d4aa4faa1f9ae01c2323a" translate="yes" xml:space="preserve">
          <source>Declaring tablespaces for tables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59fb0bb941962f005be45aac075ea6b6506029d" translate="yes" xml:space="preserve">
          <source>Decodes a base64 encoded string, adding back any trailing equal signs that might have been stripped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1057027db663ad03628a7e9b7e58b2eed4218b" translate="yes" xml:space="preserve">
          <source>Decoding is performed by the session store class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82408e489aa5a6b0f0d4cec1f18c6b2a57031709" translate="yes" xml:space="preserve">
          <source>Decorating class-based views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bef610601777b9150d1e821dfed27022cdf98a2" translate="yes" xml:space="preserve">
          <source>Decorating in URLconf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ec55df0349b8b264b29b9e73078a50c7ebe91f" translate="yes" xml:space="preserve">
          <source>Decorating the class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0cd2fea7b605a0b9b931e6db6412863ba912e9" translate="yes" xml:space="preserve">
          <source>Decorator that provides the protection of &lt;code&gt;CsrfViewMiddleware&lt;/code&gt; to a view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972f8e67f89bd5e0ee7eb2a48682855b93e80882" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts particular request methods. Usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9fd7a0d9a26379b735568c0936722ca89e1544" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts the GET and HEAD methods. These methods are commonly considered &amp;ldquo;safe&amp;rdquo; because they should not have the significance of taking an action other than retrieving the requested resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca9b58e5c658446309b8f4617d734c96d8a5221" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts the GET method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63237f3cde011215cbd36f39fc19a2e6569920b" translate="yes" xml:space="preserve">
          <source>Decorator to require that a view only accepts the POST method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="3b0fe449d57e268a242fe7327c25ad202ce29960" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__avg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eaf6c75d4bd5d8d352ce896722d2d60a3da505a" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__count&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf958307ec625f89e7e98794f1ef83fb00e2434" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__max&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a2b03f6caf151b5d73c09404079f4f6445cf5b" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__min&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501c6641474c76547a2948547e923a6fe357c5bc" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__stddev&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1135bbbe27a179415d3e4f2ab9055f804ee1d624" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__sum&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe72e50aa6157456761eaa0a11e54b0cbf5b1c11" translate="yes" xml:space="preserve">
          <source>Default alias: &lt;code&gt;&amp;lt;field&amp;gt;__variance&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d84a2eb70fb18836de40a22e38c9de9ff0c038" translate="yes" xml:space="preserve">
          <source>Default charset to use for all &lt;code&gt;HttpResponse&lt;/code&gt; objects, if a MIME type isn&amp;rsquo;t manually specified. Used when constructing the &lt;code&gt;Content-Type&lt;/code&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65e7dabc01b374a999316b09f6e602c1a427c4e" translate="yes" xml:space="preserve">
          <source>Default decimal separator used when formatting decimal numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b13cc3341a4dd79a6a1c1eb5801aae744b7f3c9" translate="yes" xml:space="preserve">
          <source>Default email address to use for various automated correspondence from the site manager(s). This doesn&amp;rsquo;t include error messages sent to &lt;a href=&quot;#std:setting-ADMINS&quot;&gt;&lt;code&gt;ADMINS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#std:setting-MANAGERS&quot;&gt;&lt;code&gt;MANAGERS&lt;/code&gt;&lt;/a&gt;; for that, see &lt;a href=&quot;#std:setting-SERVER_EMAIL&quot;&gt;&lt;code&gt;SERVER_EMAIL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb44ecfff41fd115c1b6e966af813aa712ecb3d" translate="yes" xml:space="preserve">
          <source>Default exception reporter filter class to be used if none has been assigned to the &lt;a href=&quot;request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; instance yet. See &lt;a href=&quot;../howto/error-reporting#filtering-error-reports&quot;&gt;Filtering error reports&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6bd7c5b8f99d4c3287ab161141ae82712f34c6" translate="yes" xml:space="preserve">
          <source>Default file storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6d27203a47ff3eb307b6d6007ca286fb0acfeb" translate="yes" xml:space="preserve">
          <source>Default file storage class to be used for any file-related operations that don&amp;rsquo;t specify a particular storage system. See &lt;a href=&quot;../topics/files&quot;&gt;Managing files&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a0916ed3f84c51b602042d09ce4dddbd8c564b" translate="yes" xml:space="preserve">
          <source>Default managers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3756df3c62f47f45ddc117d75f48aa29a7d1dddb" translate="yes" xml:space="preserve">
          <source>Default options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="996c921f2aac61858015eef2b97cb09b1e41b64e" translate="yes" xml:space="preserve">
          <source>Default ordering also affects &lt;a href=&quot;../../topics/db/aggregation#aggregation-ordering-interaction&quot;&gt;aggregation queries&lt;/a&gt; but this won&amp;rsquo;t be the case starting in Django 3.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec06182adb9ef48485b8098e33a5cb872878965" translate="yes" xml:space="preserve">
          <source>Default permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a7c50e5936d25255d8f80258ec7514452c02fd" translate="yes" xml:space="preserve">
          <source>Default return value for &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_login_url&quot;&gt;&lt;code&gt;get_login_url()&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;None&lt;/code&gt; in which case &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_login_url&quot;&gt;&lt;code&gt;get_login_url()&lt;/code&gt;&lt;/a&gt; falls back to &lt;a href=&quot;../../ref/settings#std:setting-LOGIN_URL&quot;&gt;&lt;code&gt;settings.LOGIN_URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3f7bd4f5652d2aafd39eed12ef8ded4b329415" translate="yes" xml:space="preserve">
          <source>Default return value for &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_permission_denied_message&quot;&gt;&lt;code&gt;get_permission_denied_message()&lt;/code&gt;&lt;/a&gt;. Defaults to an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3964d878af62515ab9444a067c3f00ef457bdb" translate="yes" xml:space="preserve">
          <source>Default return value for &lt;a href=&quot;#django.contrib.auth.mixins.AccessMixin.get_redirect_field_name&quot;&gt;&lt;code&gt;get_redirect_field_name()&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;&quot;next&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57afbebd04d4d02458682eb7fa90339a9d41caac" translate="yes" xml:space="preserve">
          <source>Default settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4415a1ce985191113c4bb5cb2500ff02b89f6a" translate="yes" xml:space="preserve">
          <source>Default tablespace to use for indexes on fields that don&amp;rsquo;t specify one, if the backend supports it (see &lt;a href=&quot;../topics/db/tablespaces&quot;&gt;Tablespaces&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da8375a64a743aeebdcbfc4d9587db3ab1fde74" translate="yes" xml:space="preserve">
          <source>Default tablespace to use for models that don&amp;rsquo;t specify one, if the backend supports it (see &lt;a href=&quot;../topics/db/tablespaces&quot;&gt;Tablespaces&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c990d8a53e39e8b302130b171d6366213cbb402" translate="yes" xml:space="preserve">
          <source>Default test client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd09f8fd9cf2c070c82bec7a1d8ebc98a5ef611" translate="yes" xml:space="preserve">
          <source>Default thousand separator used when formatting numbers. This setting is used only when &lt;a href=&quot;#std:setting-USE_THOUSAND_SEPARATOR&quot;&gt;&lt;code&gt;USE_THOUSAND_SEPARATOR&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt; and &lt;a href=&quot;#std:setting-NUMBER_GROUPING&quot;&gt;&lt;code&gt;NUMBER_GROUPING&lt;/code&gt;&lt;/a&gt; is greater than &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60101bb52e0eb77d1dffe8d347f02222b3adc952" translate="yes" xml:space="preserve">
          <source>Default time zone and current time zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30dcd9266de46024c5550a95bf06e6551c891c06" translate="yes" xml:space="preserve">
          <source>Default translation and loaded translations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358f756060b88e7ac6c296590e4f9a6dfd4562ca" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.CheckboxInput&quot;&gt;&lt;code&gt;CheckboxInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089fe43d0305a75b72b2fc9fd0c7a2cfadbdd100" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.ClearableFileInput&quot;&gt;&lt;code&gt;ClearableFileInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973eef6613272c16ce8ff919da8800344eed11b3" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.DateInput&quot;&gt;&lt;code&gt;DateInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010317b0fbc21e70bbdc610a64db58fbe24a1058" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.DateTimeInput&quot;&gt;&lt;code&gt;DateTimeInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e289b2a85750f2010538e3332df07cbca51a421e" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.EmailInput&quot;&gt;&lt;code&gt;EmailInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d144f985bd591ee2a97487b8be2a1c6e9ee0f3" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.NullBooleanSelect&quot;&gt;&lt;code&gt;NullBooleanSelect&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2869b87f6e3bd55fdd1fa60a76bde3b1f910c8" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.NumberInput&quot;&gt;&lt;code&gt;NumberInput&lt;/code&gt;&lt;/a&gt; when &lt;a href=&quot;#django.forms.Field.localize&quot;&gt;&lt;code&gt;Field.localize&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;False&lt;/code&gt;, else &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b9563d18b281e60f2309788320e1b53668806a" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.Select&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534d27365a71daaeb4057cacfa758a7494188dae" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.SelectMultiple&quot;&gt;&lt;code&gt;SelectMultiple&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032ac55edbf5e8dd3296d97c892ee0be45509407" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.SplitDateTimeWidget&quot;&gt;&lt;code&gt;SplitDateTimeWidget&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee64ba75c25272a4b678ec490759a45df9fea43c" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.TextInput&quot;&gt;&lt;code&gt;TextInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e577748ccae2d5a6c089d9b2e3df6f677ae933" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.TimeInput&quot;&gt;&lt;code&gt;TimeInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88c5aa4c223d3684cb4dc0826eb93490073fbef" translate="yes" xml:space="preserve">
          <source>Default widget: &lt;a href=&quot;widgets#django.forms.URLInput&quot;&gt;&lt;code&gt;URLInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="67db1cf2fd03a0f9fab47af0e36125a4f8eb93b5" translate="yes" xml:space="preserve">
          <source>Default: &lt;a href=&quot;../../ref/forms/widgets#django.forms.NumberInput&quot;&gt;&lt;code&gt;NumberInput&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997b4e79338b2ff2f204e9eb72659e0e6bf81846" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;''&lt;/code&gt; (Empty string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bdf55c46aa3abf5f646929023b1e4bb7a1c84a" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;','&lt;/code&gt; (Comma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795d7b6a3f7d0f9376b6a55b32fcfc5ea14c9506" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'.'&lt;/code&gt; (Dot)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0196e5ded7a96507722ab400f335ed4fa4dab0ed" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'/'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb78754b9ff0ab81a2f71c590df83bfde7eb5c25" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'/accounts/login/'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eba43577560ed12140f3b8ed6ae2b2dba63bb0d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'/accounts/profile/'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc001f4043e6bf6194bf8be2b6a6167ec4373c69" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'25M'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffc792bcfa56d1810f92db32cbe8ff39d40ac42" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'500M'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdbee6dd20cc632090d2f78666f5c91a75224d8" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'50M'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7642e98b345a25f91d739ed609f98ce8439cca75" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;../howto/error-reporting#django.views.debug.SafeExceptionReporterFilter&quot;&gt;&lt;code&gt;django.views.debug.SafeExceptionReporterFilter&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a5220270185773c92b5ea4f5c02aac05a4f8da" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;../topics/email#django.core.mail.backends.smtp.EmailBackend&quot;&gt;&lt;code&gt;django.core.mail.backends.smtp.EmailBackend&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d93e1064ff7f8b54ec2be614c28f7c5625f43a4" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;files/storage#django.core.files.storage.FileSystemStorage&quot;&gt;&lt;code&gt;django.core.files.storage.FileSystemStorage&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a7d24fbfa0c2fde73217a4f703d2f7227d7377" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'&lt;/code&gt;&lt;a href=&quot;forms/renderers#django.forms.renderers.DjangoTemplates&quot;&gt;&lt;code&gt;django.forms.renderers.DjangoTemplates&lt;/code&gt;&lt;/a&gt;&lt;code&gt;'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2212d132d7071c1a7df8a228796ac890ea1ec3" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'America/Chicago'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13a3a042021357bd30080c16253b6a9f2a8ae37" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'DENY'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd44dc540b617cfdec9fbd4e135052cc4acc0ed" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'F Y'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e2c2a2da4d094ecfed6435ea65ee3b0bab0b78" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'F j'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bb115fb859643cc7499dfb79d6cd295d081989" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'HTTP_X_CSRFTOKEN'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c320145bc48179b9a6d0fe6f8544c991589334ed" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'Lax'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba2ab5b7ebe572ac8bb5ed49875504d3c4548f9" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'N j, Y'&lt;/code&gt; (e.g. &lt;code&gt;Feb. 4, 2003&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5630bb13124c3f602d73ec202beddbad0dc2980" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'N j, Y, P'&lt;/code&gt; (e.g. &lt;code&gt;Feb. 4, 2003, 4 p.m.&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0967932179cbf575486da544eb1e20e9aaaad1" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'P'&lt;/code&gt; (e.g. &lt;code&gt;4 p.m.&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f87341d8c741051a61adb4974de9ef0db55bf9b" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'[Django] '&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1268dd27c9a0d569d95f2f6b325daceec003cb3e" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'auth.User'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fab9aeca51ef1b9ccb02b8fe899919824161c46" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'csrftoken'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128442bfc3862ef671e47f3f3dade4d29cd276a3" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'default'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b19a6259605718017bb58b10e8e5fecf42d6e06" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.contrib.messages.storage.fallback.FallbackStorage'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b1d4fee8155b4a694d673c5df3d66fed00e1a3" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.contrib.sessions.backends.db'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2656c7aff0d6544db5992f988b98dabade69b8ea" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.contrib.sessions.serializers.JSONSerializer'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488e22af27624c240a0772db2f7a7484586b816b" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.contrib.staticfiles.storage.StaticFilesStorage'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882ec21922634ed2d86e52b18235be9156bff0df" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.core.signing.TimestampSigner'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3744085dcbbd698b74015fffb6ebe1a6a55f65" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.test.runner.DiscoverRunner'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d80a1e61062a156901ee67f5ed66a54c12748d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django.views.csrf.csrf_failure'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053a4a1222a0252ae7456640b12cf5f17c2c5430" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'django_language'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b5eb0f85b47615055e49fb6207984eeeb028f3" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'en-us'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7bb4b802da74bd606acaf449f3ab6a648e7406" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'localhost'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc487f8f26e1f867656bc82d7245e55d852aa59" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'logging.config.dictConfig'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b7109fd2c838f7ec01371771dbcd24bf40fef5" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'m/d/Y P'&lt;/code&gt; (e.g. &lt;code&gt;12/31/2003 4 p.m.&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb831b75bece7d1a54b33f3cdef65faa5ea05dc" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'m/d/Y'&lt;/code&gt; (e.g. &lt;code&gt;12/31/2003&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f758d93dd1c78c5ce4f3653a3864d7bc3846f3" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'root@localhost'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0527e669bc11fd44cd7bca1ed963a88034b5d14" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'sessionid'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d401a6800278154088171be1df2f5093f4f06ce" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'utf-8'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf43dbbfcd0989ea5408aa944ee40a804337032" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;'webmaster@localhost'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3569cdb24d4e3738060acfc3ad2efff4bb497560" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65bd9e049d2d3d36033ebf2c3b3dec644d0b2e46" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;0&lt;/code&gt; (Sunday)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15563e706f9818d86151fe84e24d929bd38ab866" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;0o644&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88862b306507450be1cb013438c14b8ce90ddd1" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;1000&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8684c022464a2102f7848172983423aa3d7ea6" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;1209600&lt;/code&gt; (2 weeks, in seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cdb6bdfb4ddcbbf9350bcc9a8f2c9275878282" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f7711457e3aa2211302734aa2f7e557a1cc483a" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;25&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b46bd564d054127e0f9a6e1c1e12c7901e7eaf" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;2621440&lt;/code&gt; (i.e. 2.5 MB).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c437503a5fc1e0deabd662d22fe84536301a56" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;300&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b462618d0e5c160f96395a98b8c5aba541aebc" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;31449600&lt;/code&gt; (approximately 1 year, in seconds)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b05de63802534c8137a6f0bc266b819b3b70648" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;3&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb612eb3aae52316c145cab6492d8330731582db" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;600&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a9084be6987615bf532ff3db85aaec6121b192" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;False&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4f64360906e7f1452e75f1085dc507b2bff801" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2946d6707436ee5b1a7c7c104e9dad07bb489c9f" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;None&lt;/code&gt; (expires at browser close)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8ca82e4a52fce1712b0adec6141e66b586eb41" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faeff543065545d715ac04f654f411c0d8f33d25" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;['default']&lt;/code&gt;, for all databases other than &lt;code&gt;default&lt;/code&gt;, which has no dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02aa7d9e40af37191980719fca8f6aa03aa44e3a" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;['django.contrib.auth.backends.ModelBackend']&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bee933aff901ad8560db2ae2caad4e948205874" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;[]&lt;/code&gt; (Empty list)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5a357552875b745134e87f131f361a5ee8160d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;default&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df44ef382af757a7508e8e6e7550cefd26581dc" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;messages.INFO&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0f178638771800f08a5a145b2892f6ddf572a0" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;{}&lt;/code&gt; (Empty dict)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67db356353ac7fcc54b39edcfb87118eba95dd3a" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;{}&lt;/code&gt; (Empty dictionary)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16da03f01bc8e013eb649255c75a43b9c3dc11b" translate="yes" xml:space="preserve">
          <source>Default: A list of all available languages. This list is continually growing and including a copy here would inevitably become rapidly out of date. You can see the current list of translated languages by looking in &lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/global_settings.py&quot;&gt;django/conf/global_settings.py&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d485a204535d541c7d21380a87d9e5bc32b91798" translate="yes" xml:space="preserve">
          <source>Default: A list of all language codes that are written right-to-left. You can see the current list of these languages by looking in &lt;a href=&quot;https://github.com/django/django/blob/master/django/conf/global_settings.py&quot;&gt;django/conf/global_settings.py&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6083aa8fd082bdcd8802cf1509789b2435f544" translate="yes" xml:space="preserve">
          <source>Default: A logging configuration dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0834a9c615b1c3b580548c3be858e9f18f746a0d" translate="yes" xml:space="preserve">
          <source>Default: Not defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997364a31e6b79d4205d2e9a2cc05ec572a0d195" translate="yes" xml:space="preserve">
          <source>Default: see below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b812f67e0e9152ee5bd184729e913c5fb156c0ac" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;a href=&quot;../request-response#django.http.HttpResponseGone&quot;&gt;&lt;code&gt;HttpResponseGone&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b2ef6a290211e9f8a705b52473520a04104361" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;a href=&quot;../request-response#django.http.HttpResponsePermanentRedirect&quot;&gt;&lt;code&gt;HttpResponsePermanentRedirect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4d005ca3a61106247ed7e631be66d0ec0ae87f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;a href=&quot;request-response#django.http.HttpResponsePermanentRedirect&quot;&gt;&lt;code&gt;HttpResponsePermanentRedirect&lt;/code&gt;&lt;/a&gt;. Subclass &lt;code&gt;CommonMiddleware&lt;/code&gt; and override the attribute to customize the redirects issued by the middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0d6e7d90823e375f11462556d429645d56a153" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;a href=&quot;request-response#django.http.HttpResponseRedirect&quot;&gt;&lt;code&gt;HttpResponseRedirect&lt;/code&gt;&lt;/a&gt;. Subclass &lt;code&gt;LocaleMiddleware&lt;/code&gt; and override the attribute to customize the redirects issued by the middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9db1c30efeb8e0419e296f69927ae6250ee1e17" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;%(expression)s OVER (%(window)s)'&lt;/code&gt;. If only the &lt;code&gt;expression&lt;/code&gt; argument is provided, the window clause will be blank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d8cb62553686a28c0bb63f132f1e5a555e3fb9" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;('add', 'change', 'delete', 'view')&lt;/code&gt;. You may customize this list, for example, by setting this to an empty list if your app doesn&amp;rsquo;t require any of the default permissions. It must be specified on the model before the model is created by &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; in order to prevent any omitted permissions from being created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907c53a8ae1c53569e36451b7558d25df6de35fd" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;False&lt;/code&gt;. If enabled, stripping will be applied before the regex validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f754fa0046919e9432d7c22896f6413bc08b51" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;False&lt;/code&gt;. The SQL standard disallows referencing window functions in the &lt;code&gt;WHERE&lt;/code&gt; clause and Django raises an exception when constructing a &lt;code&gt;QuerySet&lt;/code&gt; that would do that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbcff4e8e7b6cf5499dbbec427ebf335a64198a" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt; since most aggregate functions can be used as the source expression in &lt;a href=&quot;#django.db.models.expressions.Window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd7bd4a0560892952b689e0c71ed0501e359d80" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt;, in which case a &lt;code&gt;required&lt;/code&gt; validation error will be raised if no value is supplied for any field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619bef8cda01fd88969e8e7439c289e84d44d37e" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt;, meaning Django will create the appropriate database tables in &lt;a href=&quot;../django-admin#django-admin-migrate&quot;&gt;&lt;code&gt;migrate&lt;/code&gt;&lt;/a&gt; or as part of migrations and remove them as part of a &lt;a href=&quot;../django-admin#django-admin-flush&quot;&gt;&lt;code&gt;flush&lt;/code&gt;&lt;/a&gt; management command. That is, Django &lt;em&gt;manages&lt;/em&gt; the database tables&amp;rsquo; lifecycles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f48ea53b3cd2b78bf54e6fb0ef9120a87e97223" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt;. Creates a spatial index for the given geometry field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c123d8bc12519e64a23e13a2286264f8c69ce7" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;True&lt;/code&gt;. When set to &lt;code&gt;False&lt;/code&gt;, disables editing of existing geometry fields in the admin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c003fef6e245fc984750ff38b0c3c2ebd54b72f" translate="yes" xml:space="preserve">
          <source>Defaults to providing &lt;code&gt;date_list&lt;/code&gt; by year, but this can be altered to month or day using the attribute &lt;code&gt;date_list_period&lt;/code&gt;. This also applies to all subclass views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e32815870a249346846dd8211ba0125dc0e6971" translate="yes" xml:space="preserve">
          <source>Deferring model fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4702bf45618c39f2599c157983456bfdcace358a" translate="yes" xml:space="preserve">
          <source>Define a &lt;a href=&quot;../settings#std:setting-SITE_ID&quot;&gt;&lt;code&gt;SITE_ID&lt;/code&gt;&lt;/a&gt; setting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7b7b35489d4b747f186863885c13a6e186dc53" translate="yes" xml:space="preserve">
          <source>Define a &lt;code&gt;get_absolute_url()&lt;/code&gt; method to tell Django how to calculate the canonical URL for an object. To callers, this method should appear to return a string that can be used to refer to the object over HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed59e765964a4d2aa83cb981bfa2024b11a079b" translate="yes" xml:space="preserve">
          <source>Define custom methods on a model to add custom &amp;ldquo;row-level&amp;rdquo; functionality to your objects. Whereas &lt;a href=&quot;managers#django.db.models.Manager&quot;&gt;&lt;code&gt;Manager&lt;/code&gt;&lt;/a&gt; methods are intended to do &amp;ldquo;table-wide&amp;rdquo; things, model methods should act on a particular model instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e570799d9bd23cb5c79308384499433f5663d3" translate="yes" xml:space="preserve">
          <source>Defines a block that can be overridden by child templates. See &lt;a href=&quot;language#template-inheritance&quot;&gt;Template inheritance&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a4133f9903d218e677f51c159c3e66b0635c78" translate="yes" xml:space="preserve">
          <source>Defines the class this transformation outputs. It must be a &lt;a href=&quot;fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; instance. By default is the same as its &lt;code&gt;lhs.output_field&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c120fcd7e714e01c552c6f1a17aed133ea303bb" translate="yes" xml:space="preserve">
          <source>Defines the type of class returned by the &lt;code&gt;get_lookup()&lt;/code&gt; method. It must be a &lt;a href=&quot;fields#django.db.models.Field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a06e3730c12f5747448528ae4d21f3913cdabc" translate="yes" xml:space="preserve">
          <source>Defines two filters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd018a91dacb0df0403a63cf27254f258f1ca4e" translate="yes" xml:space="preserve">
          <source>Defines two formatters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b052434c8bf583d7f9cf2d766a4cafa8150b7b3" translate="yes" xml:space="preserve">
          <source>Defines two handlers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34eb11e84b9351ecde10161fc6952775fa23190a" translate="yes" xml:space="preserve">
          <source>Defining &lt;a href=&quot;#django.contrib.contenttypes.fields.GenericRelation&quot;&gt;&lt;code&gt;GenericRelation&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;related_query_name&lt;/code&gt; set allows querying from the related object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dce9fc5fbf8fa1054c55e5c7f014d9e7ca7b6e3" translate="yes" xml:space="preserve">
          <source>Defining a Geographic Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e0033e5ed8e5b295e829e5010e8de133e313f2" translate="yes" xml:space="preserve">
          <source>Defining a custom email backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d349848f7ede72f4f3ed575ea6d3f7567d7fff00" translate="yes" xml:space="preserve">
          <source>Defining a test runner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9787cc25b2f857b03a8646a520906e3b9359971" translate="yes" xml:space="preserve">
          <source>Defining actions as methods gives the action more idiomatic access to the &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt; itself, allowing the action to call any of the methods provided by the admin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ce8ea8dd06560422fb3f1f115631948e200a9b" translate="yes" xml:space="preserve">
          <source>Defining and sending signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0cad74a06499480fbb2152543015a07638bfe5" translate="yes" xml:space="preserve">
          <source>Defining signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5e6c996907105479f6a562279ff1b8116220f5" translate="yes" xml:space="preserve">
          <source>Defining your databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2e1aeb4bea3bc3383a65ab5b75322ee1a67949" translate="yes" xml:space="preserve">
          <source>Defining your own range types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15225baac48fc3d689cb2b0f74b936eff4339ff7" translate="yes" xml:space="preserve">
          <source>Definitions</source>
          <target state="translated">Definitions</target>
        </trans-unit>
        <trans-unit id="f6fdbe48dc54dd86f63097a03bd24094dedd713a" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="translated">Delete</target>
        </trans-unit>
        <trans-unit id="5b3b83af91b02f67bb115632ba4297710a2b48ba" translate="yes" xml:space="preserve">
          <source>Delete &amp;ndash; Displays a delete confirmation page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4793016c31fbba669f722385fb4924a93c6fe932" translate="yes" xml:space="preserve">
          <source>Delete some of the old, unneeded views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b3823726327c85a901843be7d75d8c55413631" translate="yes" xml:space="preserve">
          <source>Deletes stale content types (from deleted models) in your database. Any objects that depend on the deleted content types will also be deleted. A list of deleted objects will be displayed before you confirm it&amp;rsquo;s okay to proceed with the deletion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4809719d3da4c82a27ee2c24b2d2a4f3804cee" translate="yes" xml:space="preserve">
          <source>Deletes the cookie with the given key. Fails silently if the key doesn&amp;rsquo;t exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d623ac95264c8b9be90c32fa0554f99cb4c5bc" translate="yes" xml:space="preserve">
          <source>Deletes the current session data from the session and deletes the session cookie. This is used if you want to ensure that the previous session data can&amp;rsquo;t be accessed again from the user&amp;rsquo;s browser (for example, the &lt;a href=&quot;../auth/default#django.contrib.auth.logout&quot;&gt;&lt;code&gt;django.contrib.auth.logout()&lt;/code&gt;&lt;/a&gt; function calls it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73c7594f7310f58ed3a702bf90f0d2373a57a4e" translate="yes" xml:space="preserve">
          <source>Deletes the file associated with this instance and clears all attributes on the field. Note: This method will close the file if it happens to be open when &lt;code&gt;delete()&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d812d63bb5a6499e33b5faa10bd6e618f1f44705" translate="yes" xml:space="preserve">
          <source>Deletes the file referenced by &lt;code&gt;name&lt;/code&gt;. If deletion is not supported on the target storage system this will raise &lt;code&gt;NotImplementedError&lt;/code&gt; instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1ed78d2b32bd0027128c9f929fd17e9de09f7d" translate="yes" xml:space="preserve">
          <source>Deletes the header with the given name. Fails silently if the header doesn&amp;rsquo;t exist. Case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1594b31e9ff392f6f6d666c77d75e3fb488565f" translate="yes" xml:space="preserve">
          <source>Deletes the model from the project history and its table from the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac01d105d129556ae01eb77a50fb9547ad78df5" translate="yes" xml:space="preserve">
          <source>Deletes the test cookie. Use this to clean up after yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370ba4d4ccb5669c3bbfcffd8f3bf6a90ba76614" translate="yes" xml:space="preserve">
          <source>Deleting all the migration files it replaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b4f49a22885d3ea1cde052877cec8632b72e75" translate="yes" xml:space="preserve">
          <source>Deleting objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="0756bee6cb3c67237cd5904539b455daa0fbd838" translate="yes" xml:space="preserve">
          <source>Dependencies during serialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227b8e0b3f5490d45d847363f7a1e60e029a34d7" translate="yes" xml:space="preserve">
          <source>Depending on the database backend, query results will either be loaded all at once or streamed from the database using server-side cursors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef38ae8e357477ed4cb87c1a76764d0de669c5b1" translate="yes" xml:space="preserve">
          <source>Depending on the value of &lt;code&gt;raise_exception&lt;/code&gt;, the method either raises a &lt;a href=&quot;../../ref/exceptions#django.core.exceptions.PermissionDenied&quot;&gt;&lt;code&gt;PermissionDenied&lt;/code&gt;&lt;/a&gt; exception or redirects the user to the &lt;code&gt;login_url&lt;/code&gt;, optionally including the &lt;code&gt;redirect_field_name&lt;/code&gt; if it is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c1150c2805016d76822ae245cecceeeef0032b" translate="yes" xml:space="preserve">
          <source>Depending on your configuration, this section describes several methods to configure a database user with sufficient privileges to run tests for GeoDjango applications on PostgreSQL. If your &lt;a href=&quot;install/postgis#spatialdb-template&quot;&gt;spatial database template&lt;/a&gt; was created like in the instructions, then your testing database user only needs to have the ability to create databases. In other configurations, you may be required to use a database superuser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006f907d3e808549c8d8bac532841c8337bae68a" translate="yes" xml:space="preserve">
          <source>Depending on your model, you may find that it is not possible to deserialize a model that only serializes a subset of its fields. If a serialized object doesn&amp;rsquo;t specify all the fields that are required by a model, the deserializer will not be able to save deserialized instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413957e90571532ac1c624be02c25d591ec2b89e" translate="yes" xml:space="preserve">
          <source>Deploying Django</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15cb7c7108644ee69a857a2f02cca0101f265ca" translate="yes" xml:space="preserve">
          <source>Deploying Django with &lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache&lt;/a&gt; and &lt;a href=&quot;https://modwsgi.readthedocs.io/en/develop/&quot;&gt;mod_wsgi&lt;/a&gt; is a tried and tested way to get Django into production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9aa87915e9b45d601acab839be398e8cfb40442" translate="yes" xml:space="preserve">
          <source>Deploying GeoDjango</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cbd80292a13ad260a236d49d0db9eb513d41d6" translate="yes" xml:space="preserve">
          <source>Deploying static files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327a55f82dc6818877a68e37b722bb7f2360b633" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="translated">Deployment</target>
        </trans-unit>
        <trans-unit id="07a8a810780edcfa088e374aa8f85e0fe565c490" translate="yes" xml:space="preserve">
          <source>Deployment checklist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb88881694eb75c92deb84b666d7b360400012d" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1819ca26348a5e255349590ea7b3f0e5896650d6" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: &lt;code&gt;CachedStaticFilesStorage&lt;/code&gt; is deprecated as it has some intractable problems, some of which are outlined below. Use &lt;a href=&quot;#django.contrib.staticfiles.storage.ManifestStaticFilesStorage&quot;&gt;&lt;code&gt;ManifestStaticFilesStorage&lt;/code&gt;&lt;/a&gt; or a third-party cloud storage instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a8448d6c03ae2bb6b51520abb2900768bfcaa1" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: Starting in Django 3.1, the ordering from a model&amp;rsquo;s &lt;code&gt;Meta.ordering&lt;/code&gt; won&amp;rsquo;t be used in &lt;code&gt;GROUP BY&lt;/code&gt; queries, such as &lt;code&gt;.annotate().values()&lt;/code&gt;. Since Django 2.2, these queries issue a deprecation warning indicating to add an explicit &lt;code&gt;order_by()&lt;/code&gt; to the queryset to silence the warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f988873f549a8b09c3297a9c1789a82002ad8d" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: This setting is deprecated. Starting with Django 3.1, files read from disk must be UTF-8 encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e401ea3682d4526fff26e5de95f44574aec9b2" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: Use &lt;a href=&quot;#django.contrib.postgres.fields.DecimalRangeField&quot;&gt;&lt;code&gt;DecimalRangeField&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046c9bcc3b96be6453ad22650a90d89c8a3bce5b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: Use &lt;a href=&quot;#django.contrib.postgres.forms.DecimalRangeField&quot;&gt;&lt;code&gt;DecimalRangeField&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f2cfc41bbc54ea294028076b80cc47a7669c50" translate="yes" xml:space="preserve">
          <source>Deprecated since version 2.2: Use &lt;a href=&quot;https://docs.python.org/3/library/datetime.html#datetime.timezone&quot;&gt;&lt;code&gt;datetime.timezone&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45c3909a5319dc04f8fdca5b6dee1df0a4c669b" translate="yes" xml:space="preserve">
          <source>Deprecated since version 3.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4784b1574a4b4194354374954866f9c4d232f98" translate="yes" xml:space="preserve">
          <source>Deprecated since version 3.0: The language won&amp;rsquo;t be stored in the session in Django 4.0. Use the &lt;a href=&quot;settings#std:setting-LANGUAGE_COOKIE_NAME&quot;&gt;&lt;code&gt;LANGUAGE_COOKIE_NAME&lt;/code&gt;&lt;/a&gt; cookie instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="b2f45e461c8bf945be0760b5ed79bb1e866376da" translate="yes" xml:space="preserve">
          <source>Deserialization of natural keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cc36514c07a32077b448f0ed60b3b5a77a8942" translate="yes" xml:space="preserve">
          <source>Deserialization of objects with no primary key will always check whether the model&amp;rsquo;s manager has a &lt;code&gt;get_by_natural_key()&lt;/code&gt; method and if so, use it to populate the deserialized object&amp;rsquo;s primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478bc2e2f852272b7c7b9a455acaf658c8c1d19c" translate="yes" xml:space="preserve">
          <source>Deserializing data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64257e587c100a59a84f78b254064e0a88fb19af" translate="yes" xml:space="preserve">
          <source>Deserializing data is very similar to serializing it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4b63f12160f43e4c02da1ba348f57a26675a14" translate="yes" xml:space="preserve">
          <source>Design your URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8339aeb556f83e5f4594300872f978448af574" translate="yes" xml:space="preserve">
          <source>Design your model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02c99bd448789b60cee12279d2b894d92ac4a57" translate="yes" xml:space="preserve">
          <source>Design your templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591686024aaf35e01a1dbc13b21cc0edf4850a10" translate="yes" xml:space="preserve">
          <source>Designate and bind a counter value with the name &lt;code&gt;count&lt;/code&gt;. This value will be the one used to select the right plural form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d154a76eafeb587cfe4bb3a23c2e081508e07f" translate="yes" xml:space="preserve">
          <source>Designates the name of the variable to use in the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8d9eb0f20787402e221892d46074396aca8d81" translate="yes" xml:space="preserve">
          <source>Designating the CSRF cookie as &lt;code&gt;HttpOnly&lt;/code&gt; doesn&amp;rsquo;t offer any practical protection because CSRF is only to protect against cross-domain attacks. If an attacker can read the cookie via JavaScript, they&amp;rsquo;re already on the same domain as far as the browser knows, so they can do anything they like anyway. (XSS is a much bigger hole than CSRF.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a2301aee9b8e7921830babb9d9357f6fc460b4" translate="yes" xml:space="preserve">
          <source>Designating the settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f946cb4a7caf05f21d409a395a181b2bc733e2" translate="yes" xml:space="preserve">
          <source>Destroying the test databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d44797e579abbfd03ef9b185b8cb262e441097" translate="yes" xml:space="preserve">
          <source>Destroys the database whose name is the value of &lt;a href=&quot;../../ref/settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;../../ref/settings#std:setting-DATABASES&quot;&gt;&lt;code&gt;DATABASES&lt;/code&gt;&lt;/a&gt;, and sets &lt;a href=&quot;../../ref/settings#std:setting-NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt; to the value of &lt;code&gt;old_database_name&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be858835915b77e190b2b50c375eef501569084" translate="yes" xml:space="preserve">
          <source>Destroys the test databases, restoring pre-test conditions by calling &lt;a href=&quot;#django.test.utils.teardown_databases&quot;&gt;&lt;code&gt;teardown_databases()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53db1768fa53b64edff3158d6a9ccf0b67d770d5" translate="yes" xml:space="preserve">
          <source>Destroys the test databases, restoring pre-test conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446ba80ce4a3f48778fd53c394affa5a7dca0984" translate="yes" xml:space="preserve">
          <source>Detail Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b174b91b196c8dee411e88ead1d4fd2bf0f64bb4" translate="yes" xml:space="preserve">
          <source>Detailed form API reference. For introductory material, see the &lt;a href=&quot;../../topics/forms/index&quot;&gt;Working with forms&lt;/a&gt; topic guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093115f44b6adadaff855fd36c0a42b9c46d43a4" translate="yes" xml:space="preserve">
          <source>Details for each of the requirements and installation instructions are provided in the sections below. In addition, platform-specific instructions are available for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abef72fe7e08f6c8eca5e11ac9430e28fc7e78b" translate="yes" xml:space="preserve">
          <source>Determine if an object list will be returned as part of the context. Returns &lt;a href=&quot;#django.views.generic.dates.YearArchiveView.make_object_list&quot;&gt;&lt;code&gt;make_object_list&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d5652e9bda540eecf165e479876a78c34cab17" translate="yes" xml:space="preserve">
          <source>Determine if the migration operation is allowed to run on the database with alias &lt;code&gt;db&lt;/code&gt;. Return &lt;code&gt;True&lt;/code&gt; if the operation should run, &lt;code&gt;False&lt;/code&gt; if it shouldn&amp;rsquo;t run, or &lt;code&gt;None&lt;/code&gt; if the router has no opinion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e729836bf3f38b09112ebcbc0ef5c2579463c4" translate="yes" xml:space="preserve">
          <source>Determine if the object instance is of a protected type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388bf854b4079b4253808464aaa168b2dec2fe6f" translate="yes" xml:space="preserve">
          <source>Determine the &lt;a href=&quot;../forms/api#django.forms.Form.prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; for the generated form. Returns &lt;a href=&quot;#django.views.generic.edit.FormMixin.prefix&quot;&gt;&lt;code&gt;prefix&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb21a02f011f19765a1dcdc9f24a28a39dd55288" translate="yes" xml:space="preserve">
          <source>Determine the URL to redirect to when the form is successfully validated. Returns &lt;a href=&quot;#django.views.generic.edit.FormMixin.success_url&quot;&gt;&lt;code&gt;success_url&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7eec079c73201f8d0ab03bbf7a001a164cbd11" translate="yes" xml:space="preserve">
          <source>Determine the URL to redirect to when the form is successfully validated. Returns &lt;a href=&quot;#django.views.generic.edit.ModelFormMixin.success_url&quot;&gt;&lt;code&gt;django.views.generic.edit.ModelFormMixin.success_url&lt;/code&gt;&lt;/a&gt; if it is provided; otherwise, attempts to use the &lt;code&gt;get_absolute_url()&lt;/code&gt; of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2661e24bb16227392ec85b0c713aaab93b983e7c" translate="yes" xml:space="preserve">
          <source>Determine whether to include &amp;ldquo;future&amp;rdquo; objects on this page, where &amp;ldquo;future&amp;rdquo; means objects in which the field specified in &lt;code&gt;date_field&lt;/code&gt; is greater than the current date/time. Returns &lt;a href=&quot;#django.views.generic.dates.DateMixin.allow_future&quot;&gt;&lt;code&gt;allow_future&lt;/code&gt;&lt;/a&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b59033927e55b648a5b7b27625c8568e24a2cb3" translate="yes" xml:space="preserve">
          <source>Determines if Django will use the pre-1.6 &lt;a href=&quot;instances#django.db.models.Model.save&quot;&gt;&lt;code&gt;django.db.models.Model.save()&lt;/code&gt;&lt;/a&gt; algorithm. The old algorithm uses &lt;code&gt;SELECT&lt;/code&gt; to determine if there is an existing row to be updated. The new algorithm tries an &lt;code&gt;UPDATE&lt;/code&gt; directly. In some rare cases the &lt;code&gt;UPDATE&lt;/code&gt; of an existing row isn&amp;rsquo;t visible to Django. An example is the PostgreSQL &lt;code&gt;ON UPDATE&lt;/code&gt; trigger which returns &lt;code&gt;NULL&lt;/code&gt;. In such cases the new algorithm will end up doing an &lt;code&gt;INSERT&lt;/code&gt; even when a row exists in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4be1c1a7610016eca8366d57bec0ae0d1ec0996" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.add_view&quot;&gt;&lt;code&gt;add_view()&lt;/code&gt;&lt;/a&gt; stage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ef716e269d001abfb666cce096f8a533bbfb1d" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.change_view&quot;&gt;&lt;code&gt;change_view()&lt;/code&gt;&lt;/a&gt; stage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b13c14115d0f81fa450e8e8bc54f4d8e084bb60" translate="yes" xml:space="preserve">
          <source>Determines the &lt;a href=&quot;../../request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;#django.contrib.admin.ModelAdmin.delete_view&quot;&gt;&lt;code&gt;delete_view()&lt;/code&gt;&lt;/a&gt; stage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c48e4b20e6ad398a94ae7b77c7217c62be6e4e0" translate="yes" xml:space="preserve">
          <source>Determines whether the widget will have a value filled in when the form is re-displayed after a validation error (default is &lt;code&gt;False&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e970d11d6e2ac30780c87bd7920a96575d6890" translate="yes" xml:space="preserve">
          <source>Determining the version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22354d57a68ea2f6eca477c2b86c2289164e577" translate="yes" xml:space="preserve">
          <source>Development server won&amp;rsquo;t automatically restart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91925d5940f655cf778d7912b76a420682ea624a" translate="yes" xml:space="preserve">
          <source>Development-related messages that will be ignored (or removed) in a production deployment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38672bc8b938a4e93ee299958b7ba0c35d3986a" translate="yes" xml:space="preserve">
          <source>Dictionary lookup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43df699c2dc54f1d56387b5ce7f61b6bd9d86072" translate="yes" xml:space="preserve">
          <source>Dictionary lookup, attribute lookup and list-index lookups are implemented with a dot notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0033fd61ed0d9dd4f31e74ed940c65aac673ddb" translate="yes" xml:space="preserve">
          <source>Dictionary lookup. Example: &lt;code&gt;foo[&quot;bar&quot;]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9844c496e70778b4622dc4b9d14446cc4dbb1599" translate="yes" xml:space="preserve">
          <source>Dictionary params are not supported with the SQLite backend; with this backend, you must pass parameters as a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3797745024f9e71cc1a9a425669a1580908dc77" translate="yes" xml:space="preserve">
          <source>Difference to Greenwich time in hours.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b87302cf4d6e044b838bbb64f0713d214ce5b8" translate="yes" xml:space="preserve">
          <source>Differences between proxy inheritance and unmanaged models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4b8d6a8ef3fe3bc2de972c1f7b28cf248b5e3b" translate="yes" xml:space="preserve">
          <source>Different error?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bda41622602a8bb8d9004db7ae5fd925054c93" translate="yes" xml:space="preserve">
          <source>Different signals use different objects as their senders; you&amp;rsquo;ll need to consult the &lt;a href=&quot;../ref/signals&quot;&gt;built-in signal documentation&lt;/a&gt; for details of each particular signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111f471f1c33c0211ebb481f1e0edd25317cdb62" translate="yes" xml:space="preserve">
          <source>Directories where the engine should look for template source files, in search order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d039878b575ca44dfc5e5a32e4898482c71811" translate="yes" xml:space="preserve">
          <source>Disables breaking long message lines into several lines in language files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4c48e3b0caf11a6881c64f4270867d437481bd" translate="yes" xml:space="preserve">
          <source>Disables colorized command output. Some commands format their output to be colorized. For example, errors will be printed to the console in red and SQL statements will be syntax highlighted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ad98f6ffe0f668a698112f505a4963aa948244" translate="yes" xml:space="preserve">
          <source>Disables reading the startup script for the &amp;ldquo;plain&amp;rdquo; Python interpreter. By default, the script pointed to by the &lt;a href=&quot;https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSTARTUP&quot; id=&quot;index-3&quot;&gt;&lt;code&gt;PYTHONSTARTUP&lt;/code&gt;&lt;/a&gt; environment variable or the &lt;code&gt;~/.pythonrc.py&lt;/code&gt; script is read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fe3baef7ceaf81ed4ba8126cca6ad496ff2a1c" translate="yes" xml:space="preserve">
          <source>Disables the auto-reloader. This means any Python code changes you make while the server is running will &lt;em&gt;not&lt;/em&gt; take effect if the particular Python modules have already been loaded into memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119d87d164f8509e18cd90153ddcef0ded127cfc" translate="yes" xml:space="preserve">
          <source>Disables the default values of &lt;code&gt;--ignore&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b5d718c75938c0bf50a198fabe9a1a029bf627" translate="yes" xml:space="preserve">
          <source>Disables the optimizer when generating a squashed migration. By default, Django will try to optimize the operations in your migrations to reduce the size of the resulting file. Use this option if this process is failing or creating incorrect migrations, though please also file a Django bug report about the behavior, as optimization is meant to be safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76be908b3097056448c6afb2d3f6a1029436eed9" translate="yes" xml:space="preserve">
          <source>Disables use of threading in the development server. The server is multithreaded by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8109ad7dfc0adce0b7d2b65ea9ce4c7c416384d5" translate="yes" xml:space="preserve">
          <source>Disabling &lt;a href=&quot;../../ref/settings#std:setting-ALLOWED_HOSTS&quot;&gt;&lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;&lt;/a&gt; checking (&lt;code&gt;ALLOWED_HOSTS = ['*']&lt;/code&gt;) when running tests prevents the test client from raising a helpful error message if you follow a redirect to an external URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0a3500a3e70ca3c8107e85111fa0f27b789623" translate="yes" xml:space="preserve">
          <source>Disabling a site-wide action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b3109d2eade90bafedda2cfe65286e77f85a48" translate="yes" xml:space="preserve">
          <source>Disabling actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f61de92c6480125054cd67d0f0abf6dc281883" translate="yes" xml:space="preserve">
          <source>Disabling all actions for a particular &lt;a href=&quot;index#django.contrib.admin.ModelAdmin&quot;&gt;&lt;code&gt;ModelAdmin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6b01a40e33bcee209f1d53259f20c9dc5c74c1" translate="yes" xml:space="preserve">
          <source>Disabling logging configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d70aaeb26a4cc60e94ce0e783f960a0f6e2bd49" translate="yes" xml:space="preserve">
          <source>Disclosed security issues in Django</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78c013c299e0eb98a81739068e3f16466796d25" translate="yes" xml:space="preserve">
          <source>Disconnecting signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9057f485af326a5d2d2681d5b39c88016e6e56" translate="yes" xml:space="preserve">
          <source>Discovery of admin files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64548175545ca9534d1f70065c5e34a655b9b895" translate="yes" xml:space="preserve">
          <source>Display list and detail pages for a single object. If we were creating an application to manage conferences then a &lt;code&gt;TalkListView&lt;/code&gt; and a &lt;code&gt;RegisteredUserListView&lt;/code&gt; would be examples of list views. A single talk page is an example of what we call a &amp;ldquo;detail&amp;rdquo; view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13532d11832086bdc504ef1a4449c09be33bb4c6" translate="yes" xml:space="preserve">
          <source>Displaying &lt;code&gt;registration_required&lt;/code&gt; flatpages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0828e2342731a2c8c00fa3c3c6f6066765220920" translate="yes" xml:space="preserve">
          <source>Displaying debug output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660d88c4c1960c51658ce5f89ff619c9b594e2a0" translate="yes" xml:space="preserve">
          <source>Displaying messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6706bfa4d9e668540ed3a956cd02ffdb83dd3182" translate="yes" xml:space="preserve">
          <source>Displays a full stack trace when a &lt;a href=&quot;../howto/custom-management-commands#django.core.management.CommandError&quot;&gt;&lt;code&gt;CommandError&lt;/code&gt;&lt;/a&gt; is raised. By default, &lt;code&gt;django-admin&lt;/code&gt; will show an error message when a &lt;code&gt;CommandError&lt;/code&gt; occurs and a full stack trace for any other exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1dd9da7c2d33b59e5a821aa775ddb9b6372f6a7" translate="yes" xml:space="preserve">
          <source>Displays all settings, even if they have Django&amp;rsquo;s default value. Such settings are prefixed by &lt;code&gt;&quot;###&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46aed19c1e75a0350399dbf07a914c1430160781" translate="yes" xml:space="preserve">
          <source>Displays differences between the current settings file and Django&amp;rsquo;s default settings (or another settings file specified by &lt;a href=&quot;#cmdoption-diffsettings-default&quot;&gt;&lt;code&gt;--default&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f04353bc3ff08b5ce101f6d2f476cbf0bd2a88" translate="yes" xml:space="preserve">
          <source>Displays random &amp;ldquo;lorem ipsum&amp;rdquo; Latin text. This is useful for providing sample data in templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ff6ac03c8de9c5a7773b3338ed56e12aa87de3" translate="yes" xml:space="preserve">
          <source>Displays text with line numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d16dec23f731e5d1e758a2f2539539b83e3a742" translate="yes" xml:space="preserve">
          <source>Displays the current date and/or time, using a format according to the given string. Such string can contain format specifiers characters as described in the &lt;a href=&quot;#std:templatefilter-date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; filter section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4ece970310a67279b44ecd2040fe97bb03157d" translate="yes" xml:space="preserve">
          <source>Distance Lookups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5dac4724e3ed72abefcaa4736bd6cdd36b1c87" translate="yes" xml:space="preserve">
          <source>Distance Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d08ff2be156063b7efc06d2495433331d3f4df8" translate="yes" xml:space="preserve">
          <source>Distance calculations with spatial data is tricky because, unfortunately, the Earth is not flat. Some distance queries with fields in a geographic coordinate system may have to be expressed differently because of limitations in PostGIS. Please see the &lt;a href=&quot;model-api#selecting-an-srid&quot;&gt;Selecting an SRID&lt;/a&gt; section in the &lt;a href=&quot;model-api&quot;&gt;GeoDjango Model API&lt;/a&gt; documentation for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d0b6f734875ac5f9d39259dc012845b0166a2e" translate="yes" xml:space="preserve">
          <source>Distance lookups take a tuple parameter comprising:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbcb1b67a5a23af508da8a4e3f1074b2f375802" translate="yes" xml:space="preserve">
          <source>Distance lookups take the following form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba91c36ad89f1909e854d9621a9e3c9c6f7aafb" translate="yes" xml:space="preserve">
          <source>Dive Into Python (a free online book for beginning Python developers) includes a great &lt;a href=&quot;https://www.diveinto.org/python3/unit-testing.html&quot;&gt;introduction to Unit Testing&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c95e2580609775eb2b7302ad50c369810daef6" translate="yes" xml:space="preserve">
          <source>Django</source>
          <target state="translated">Django</target>
        </trans-unit>
        <trans-unit id="769380707930d83173e396f9268d8f88027c9057" translate="yes" xml:space="preserve">
          <source>Django Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6a12b6fe49fcf385827a3d27282bad924d4423" translate="yes" xml:space="preserve">
          <source>Django Core Exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd826e3e3b0bb1449349f3c0aa7c94c3bba8813" translate="yes" xml:space="preserve">
          <source>Django Exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11cf5ae018b120dd1ff5dcd7c8d8b57af4a0d11" translate="yes" xml:space="preserve">
          <source>Django Packages provides a &lt;a href=&quot;https://djangopackages.org/grids/g/pdf/&quot;&gt;comparison of packages&lt;/a&gt; that help generate PDF files from Django.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db22d948341a0750d49831166adb379a85ed90f0" translate="yes" xml:space="preserve">
          <source>Django Utils</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccb5b038648322f6fc9beacd7e9884ff6d89dd0" translate="yes" xml:space="preserve">
          <source>Django admin JavaScript makes use of the &lt;a href=&quot;https://jquery.com&quot;&gt;jQuery&lt;/a&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f873f9003f9ebfa394e6c1a85701a9054d4169cf" translate="yes" xml:space="preserve">
          <source>Django adopts a &amp;ldquo;lazy&amp;rdquo; approach to decoding form data. The data in an &lt;code&gt;HttpRequest&lt;/code&gt; object is only decoded when you access it. In fact, most of the data is not decoded at all. Only the &lt;code&gt;HttpRequest.GET&lt;/code&gt; and &lt;code&gt;HttpRequest.POST&lt;/code&gt; data structures have any decoding applied to them. Those two fields will return their members as Unicode data. All other attributes and methods of &lt;code&gt;HttpRequest&lt;/code&gt; return data exactly as it was submitted by the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb62d87ed5423151028775a91e43a316062c5cb" translate="yes" xml:space="preserve">
          <source>Django aims to follow Python&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3/tutorial/stdlib.html#tut-batteries-included&quot;&gt;&amp;ldquo;batteries included&amp;rdquo; philosophy&lt;/a&gt;. It ships with a variety of extra, optional tools that solve common Web-development problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9cb3ca4b1dc9576637c690fad5d84883768d106" translate="yes" xml:space="preserve">
          <source>Django allows you to override the default user model by providing a value for the &lt;a href=&quot;../../ref/settings#std:setting-AUTH_USER_MODEL&quot;&gt;&lt;code&gt;AUTH_USER_MODEL&lt;/code&gt;&lt;/a&gt; setting that references a custom model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ac4c610be5e232109a0da9588a63a316cb250b" translate="yes" xml:space="preserve">
          <source>Django also allows the &lt;a href=&quot;https://en.wikipedia.org/wiki/Fully_qualified_domain_name&quot;&gt;fully qualified domain name (FQDN)&lt;/a&gt; of any entries. Some browsers include a trailing dot in the &lt;code&gt;Host&lt;/code&gt; header which Django strips when performing host validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6704db362f4291b059782d27e0a05637c07ab79b" translate="yes" xml:space="preserve">
          <source>Django also comes with a lower-level feed-generating API. Use this if you want to generate feeds outside of a Web context, or in some other lower-level way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9521c4fe01b405b0001e29ed67a9c0a69fad4050" translate="yes" xml:space="preserve">
          <source>Django also creates API accessors for the &amp;ldquo;other&amp;rdquo; side of the relationship &amp;ndash; the link from the related model to the model that defines the relationship. For example, a &lt;code&gt;Blog&lt;/code&gt; object &lt;code&gt;b&lt;/code&gt; has access to a list of all related &lt;code&gt;Entry&lt;/code&gt; objects via the &lt;code&gt;entry_set&lt;/code&gt; attribute: &lt;code&gt;b.entry_set.all()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003dbf2d5d14b9ddff530e3745c9f868eca5cb29" translate="yes" xml:space="preserve">
          <source>Django also defines a set of fields that represent relations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff55e8dd422fb73cd9158d2c731c59110966582d" translate="yes" xml:space="preserve">
          <source>Django also gives developers power to write &lt;a href=&quot;db/sql#executing-raw-queries&quot;&gt;raw queries&lt;/a&gt; or execute &lt;a href=&quot;db/sql#executing-custom-sql&quot;&gt;custom sql&lt;/a&gt;. These capabilities should be used sparingly and you should always be careful to properly escape any parameters that the user can control. In addition, you should exercise caution when using &lt;a href=&quot;../ref/models/querysets#django.db.models.query.QuerySet.extra&quot;&gt;&lt;code&gt;extra()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../ref/models/expressions#django.db.models.expressions.RawSQL&quot;&gt;&lt;code&gt;RawSQL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1778c45c6cdf7be2bf36c71d865a4b76444a33ee" translate="yes" xml:space="preserve">
          <source>Django also offers a &lt;a href=&quot;../ref/utils#django.utils.functional.keep_lazy&quot;&gt;&lt;code&gt;keep_lazy()&lt;/code&gt;&lt;/a&gt; decorator. This allows a function that has been called with a lazy argument to behave lazily itself, only being evaluated when it needs to be. Thus the lazy argument - which could be an expensive one - will not be called upon for evaluation until it&amp;rsquo;s strictly required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3be1b84e5749f3be3485a06feb25e0662e93dbb" translate="yes" xml:space="preserve">
          <source>Django also provides &lt;a href=&quot;#built-in-auth-views&quot;&gt;views&lt;/a&gt; and &lt;a href=&quot;#built-in-auth-forms&quot;&gt;forms&lt;/a&gt; that may be used to allow users to change their own passwords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ef38d9be3b089211847bf7776f6adde4853bf0" translate="yes" xml:space="preserve">
          <source>Django also provides a way to translate URLs according to the active language. See the &lt;a href=&quot;../i18n/translation#url-internationalization&quot;&gt;internationalization documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d648d7fd76e758d5c7f5761ba79f49411de9f742" translate="yes" xml:space="preserve">
          <source>Django also provides an API that allows you to maintain complete control over database usage in your code. A manually specified database allocation will take priority over a database allocated by a router.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e97f5c59a2a47176233efb9e93c5e41ff63e482" translate="yes" xml:space="preserve">
          <source>Django also uses these &lt;code&gt;Operation&lt;/code&gt; objects to work out what your models looked like historically, and to calculate what changes you&amp;rsquo;ve made to your models since the last migration so it can automatically write your migrations; that&amp;rsquo;s why they&amp;rsquo;re declarative, as it means Django can easily load them all into memory and run through them without touching the database to work out what your project should look like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9bcf643848afd86aa5def17cd14071c44f0923" translate="yes" xml:space="preserve">
          <source>Django also works well with &amp;ldquo;downstream&amp;rdquo; caches, such as &lt;a href=&quot;http://www.squid-cache.org&quot;&gt;Squid&lt;/a&gt; and browser-based caches. These are the types of caches that you don&amp;rsquo;t directly control but to which you can provide hints (via HTTP headers) about which parts of your site should be cached, and how.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511b9e7b5da348943fbb4c15f9d03f9c129408e6" translate="yes" xml:space="preserve">
          <source>Django applications require a single base filesystem path where Django (depending on configuration) will search for templates, static assets, etc. Thus, namespace packages may only be Django applications if one of the following is true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5ff692cf4868fdfbbaa8feab7e317e762751c6" translate="yes" xml:space="preserve">
          <source>Django applications that make proper use of URL namespacing can be deployed more than once for a particular site. For example &lt;a href=&quot;../../ref/contrib/admin/index#module-django.contrib.admin&quot;&gt;&lt;code&gt;django.contrib.admin&lt;/code&gt;&lt;/a&gt; has an &lt;a href=&quot;../../ref/contrib/admin/index#django.contrib.admin.AdminSite&quot;&gt;&lt;code&gt;AdminSite&lt;/code&gt;&lt;/a&gt; class which allows you to &lt;a href=&quot;../../ref/contrib/admin/index#multiple-admin-sites&quot;&gt;deploy more than one instance of the admin&lt;/a&gt;. In a later example, we&amp;rsquo;ll discuss the idea of deploying the polls application from the tutorial in two different locations so we can serve the same functionality to two different audiences (authors and publishers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da015b3e3be611efe63c0416fc75b3480d9a9904" translate="yes" xml:space="preserve">
          <source>Django apps are &amp;ldquo;pluggable&amp;rdquo;: You can use an app in multiple projects, and you can distribute apps, because they don&amp;rsquo;t have to be tied to a given Django installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fea2f4ba070fa8e695f4340e48f2233d10da08" translate="yes" xml:space="preserve">
          <source>Django assumes that all databases use UTF-8 encoding. Using other encodings may result in unexpected behavior such as &amp;ldquo;value too long&amp;rdquo; errors from your database for data that is valid in Django. See the database specific notes below for information on how to set up your database correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebef6c71f1658cf910992f51621a4b8eb7c50aa" translate="yes" xml:space="preserve">
          <source>Django at a glance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6db7224feb4cf7f9af259a01d8b83e66b01b2c" translate="yes" xml:space="preserve">
          <source>Django attempts to support as many features as possible on all database backends. However, not all database backends are alike, and we&amp;rsquo;ve had to make design decisions on which features to support and which assumptions we can make safely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a72f5a587298370cc35240126e66aa9f362d11e" translate="yes" xml:space="preserve">
          <source>Django authentication provides both authentication and authorization together and is generally referred to as the authentication system, as these features are somewhat coupled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec72b09ba2e3ac2352b00fce902dc72ae767e1a" translate="yes" xml:space="preserve">
          <source>Django automatically converts exceptions raised by the view or by middleware into an appropriate HTTP response with an error status code. &lt;a href=&quot;../../ref/views#error-views&quot;&gt;Certain exceptions&lt;/a&gt; are converted to 4xx status codes, while an unknown exception is converted to a 500 status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50c82d2bdfce66f7231dbcce0ec91ccd83a5988" translate="yes" xml:space="preserve">
          <source>Django calls &lt;code&gt;process_exception()&lt;/code&gt; when a view raises an exception. &lt;code&gt;process_exception()&lt;/code&gt; should return either &lt;code&gt;None&lt;/code&gt; or an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object. If it returns an &lt;a href=&quot;../../ref/request-response#django.http.HttpResponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; object, the template response and response middleware will be applied and the resulting response returned to the browser. Otherwise, &lt;a href=&quot;../../ref/views#error-views&quot;&gt;default exception handling&lt;/a&gt; kicks in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8b66699207f32bf040c54f4c864f13d7219ff5" translate="yes" xml:space="preserve">
          <source>Django can also be configured to email errors about broken links (404 &amp;ldquo;page not found&amp;rdquo; errors). Django sends emails about 404 errors when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f632e7a71bfa08d0745355e2d9459757c66beae4" translate="yes" xml:space="preserve">
          <source>Django can be easily integrated with &lt;a href=&quot;https://coverage.readthedocs.io/&quot;&gt;coverage.py&lt;/a&gt;, a tool for measuring code coverage of Python programs. First, &lt;a href=&quot;https://pypi.org/project/coverage/&quot;&gt;install coverage.py&lt;/a&gt;. Next, run the following from your project folder containing &lt;code&gt;manage.py&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3965b5de252b5ebbbf7c4a4a55f225e160d66b8" translate="yes" xml:space="preserve">
          <source>Django can be installed easily using &lt;code&gt;pip&lt;/code&gt; within your virtual environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cd20e2a96a0ec74c81f8bb5e71198e65df22ac" translate="yes" xml:space="preserve">
          <source>Django can create migrations for you. Make changes to your models - say, add a field and remove a model - and then run &lt;a href=&quot;../ref/django-admin#django-admin-makemigrations&quot;&gt;&lt;code&gt;makemigrations&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae649090d91e254a10d688aff359a72f4e143261" translate="yes" xml:space="preserve">
          <source>Django can reload that data for you on a per-testcase basis by setting the &lt;code&gt;serialized_rollback&lt;/code&gt; option to &lt;code&gt;True&lt;/code&gt; in the body of the &lt;code&gt;TestCase&lt;/code&gt; or &lt;code&gt;TransactionTestCase&lt;/code&gt;, but note that this will slow down that test suite by approximately 3x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c5ddf704c494fa6c6c3ae57be3f66c079a33b2" translate="yes" xml:space="preserve">
          <source>Django can serialize the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42097d241271bde355b7bc0c1e08abce30493e32" translate="yes" xml:space="preserve">
          <source>Django can store its cached data in your database. This works best if you&amp;rsquo;ve got a fast, well-indexed database server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ad61f6fdfa69cb20044d37dffb1e1ca10ea97b" translate="yes" xml:space="preserve">
          <source>Django can&amp;rsquo;t automatically generate data migrations for you, as it does with schema migrations, but it&amp;rsquo;s not very hard to write them. Migration files in Django are made up of &lt;a href=&quot;../ref/migration-operations&quot;&gt;Operations&lt;/a&gt;, and the main operation you use for data migrations is &lt;a href=&quot;../ref/migration-operations#django.db.migrations.operations.RunPython&quot;&gt;&lt;code&gt;RunPython&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a80c1f49f49f5599aad0e0ec38ad04a15dab37e" translate="yes" xml:space="preserve">
          <source>Django cannot reliably use alternate time zones in a Windows environment. If you&amp;rsquo;re running Django on Windows, &lt;a href=&quot;#std:setting-TIME_ZONE&quot;&gt;&lt;code&gt;TIME_ZONE&lt;/code&gt;&lt;/a&gt; must be set to match the system time zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ad2426b39319e79dabd5a553a54543c18c5ffa" translate="yes" xml:space="preserve">
          <source>Django cannot serialize:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73028ccda69e25258c2c460d93321b9c199a4f1c" translate="yes" xml:space="preserve">
          <source>Django chooses the algorithm to use by consulting the &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; setting. This is a list of hashing algorithm classes that this Django installation supports. The first entry in this list (that is, &lt;code&gt;settings.PASSWORD_HASHERS[0]&lt;/code&gt;) will be used to store passwords, and all the other entries are valid hashers that can be used to check existing passwords. This means that if you want to use a different algorithm, you&amp;rsquo;ll need to modify &lt;a href=&quot;../../ref/settings#std:setting-PASSWORD_HASHERS&quot;&gt;&lt;code&gt;PASSWORD_HASHERS&lt;/code&gt;&lt;/a&gt; to list your preferred algorithm first in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad7781d4ca23a424af90efb320cced9fae26622" translate="yes" xml:space="preserve">
          <source>Django comes with a built-in permissions system. It provides a way to assign permissions to specific users and groups of users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90644c8048b4946a6d71d9e226fbdc4fc33509b" translate="yes" xml:space="preserve">
          <source>Django comes with a couple of other template-tag libraries that you have to enable explicitly in your &lt;a href=&quot;../settings#std:setting-INSTALLED_APPS&quot;&gt;&lt;code&gt;INSTALLED_APPS&lt;/code&gt;&lt;/a&gt; setting and enable in your template with the &lt;a href=&quot;#std:templatetag-load&quot;&gt;&lt;code&gt;{% load %}&lt;/code&gt;&lt;/a&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d77e11dd067dbda732d72efc27028ee19f420d1" translate="yes" xml:space="preserve">
          <source>Django comes with a few helpful pieces of &lt;a href=&quot;../ref/middleware&quot;&gt;middleware&lt;/a&gt; that can help optimize your site&amp;rsquo;s performance. They include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c1033ebd98b559d412d8e12472b11aea38bf55" translate="yes" xml:space="preserve">
          <source>Django comes with a few views by default for handling HTTP errors. To override these with your own custom views, see &lt;a href=&quot;../topics/http/views#customizing-error-views&quot;&gt;Customizing error views&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66d50c3962d63a73eafeece108e9100e593969f" translate="yes" xml:space="preserve">
          <source>Django comes with a high-level sitemap-generating framework to create &lt;a href=&quot;https://www.sitemaps.org/&quot;&gt;sitemap&lt;/a&gt; XML files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d5f3ac1f072fbf32e326b431e92919fcc1cfb5" translate="yes" xml:space="preserve">
          <source>Django comes with a high-level syndication-feed-generating framework for creating &lt;a href=&quot;http://www.whatisrss.com/&quot;&gt;RSS&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc4287&quot;&gt;Atom&lt;/a&gt; feeds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5928db3d1e10983bf16e9a3605ed6c0c05174344" translate="yes" xml:space="preserve">
          <source>Django comes with a robust cache system that lets you save dynamic pages so they don&amp;rsquo;t have to be calculated for each request. For convenience, Django offers different levels of cache granularity: You can cache the output of specific views, you can cache only the pieces that are difficult to produce, or you can cache your entire site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc381567a734ad1e6659bc73e3680e556ef7d5b" translate="yes" xml:space="preserve">
          <source>Django comes with a special &lt;code&gt;Context&lt;/code&gt; class, &lt;code&gt;django.template.RequestContext&lt;/code&gt;, that acts slightly differently from the normal &lt;code&gt;django.template.Context&lt;/code&gt;. The first difference is that it takes an &lt;a href=&quot;../request-response#django.http.HttpRequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; as its first argument. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493a9b4e99187f7a6a6e8b61cfb3b8da50b7a295" translate="yes" xml:space="preserve">
          <source>Django comes with a tool, &lt;a href=&quot;../../ref/django-admin#django-admin-makemessages&quot;&gt;&lt;code&gt;django-admin makemessages&lt;/code&gt;&lt;/a&gt;, that automates the creation and upkeep of these files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fb1b5fba25c1abdad90391d056fc4a6489f598" translate="yes" xml:space="preserve">
          <source>Django comes with a user authentication system. It handles user accounts, groups, permissions and cookie-based user sessions. This section of the documentation explains how the default implementation works out of the box, as well as how to &lt;a href=&quot;customizing&quot;&gt;extend and customize&lt;/a&gt; it to suit your project&amp;rsquo;s needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83038f0f54459949ab2f649098846b5f76a6439" translate="yes" xml:space="preserve">
          <source>Django comes with a utility called &lt;a href=&quot;../ref/django-admin#django-admin-inspectdb&quot;&gt;&lt;code&gt;inspectdb&lt;/code&gt;&lt;/a&gt; that can create models by introspecting an existing database. You can view the output by running this command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2bdce4f66aae9e6cc84cd4c2435f7f0511163c" translate="yes" xml:space="preserve">
          <source>Django comes with an optional &amp;ldquo;flatpages&amp;rdquo; application. It lets you store &amp;ldquo;flat&amp;rdquo; HTML content in a database and handles the management for you via Django&amp;rsquo;s admin interface and a Python API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5261e1bf442fdbf21815e460877c384359b2dda2" translate="yes" xml:space="preserve">
          <source>Django comes with an optional &amp;ldquo;sites&amp;rdquo; framework. It&amp;rsquo;s a hook for associating objects and functionality to particular websites, and it&amp;rsquo;s a holding place for the domain names and &amp;ldquo;verbose&amp;rdquo; names of your Django-powered sites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452c9f64df2dff5b11a88c4285cbee44fe448030" translate="yes" xml:space="preserve">
          <source>Django comes with an optional redirects application. It lets you store redirects in a database and handles the redirecting for you. It uses the HTTP response status code &lt;code&gt;301 Moved Permanently&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086ac840e004ae96851c5a7718f4b23a7c618b36" translate="yes" xml:space="preserve">
          <source>Django comes with built-in database backends. You may subclass an existing database backends to modify its behavior, features, or configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0c88975cb3d91b38378d897728f7ecda3c3070" translate="yes" xml:space="preserve">
          <source>Django contains &lt;a href=&quot;../ref/clickjacking#clickjacking-prevention&quot;&gt;clickjacking protection&lt;/a&gt; in the form of the &lt;a href=&quot;../ref/middleware#django.middleware.clickjacking.XFrameOptionsMiddleware&quot;&gt;&lt;code&gt;X-Frame-Options middleware&lt;/code&gt;&lt;/a&gt; which in a supporting browser can prevent a site from being rendered inside a frame. It is possible to disable the protection on a per view basis or to configure the exact header value sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4475ed751f9607a4d6cd3cb9cc785a8ce1d9c822" translate="yes" xml:space="preserve">
          <source>Django contains a registry of installed applications that stores configuration and provides introspection. It also maintains a list of available &lt;a href=&quot;../topics/db/models&quot;&gt;models&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a71ea56a1eaaa27874964bb6b3cc4b962071075" translate="yes" xml:space="preserve">
          <source>Django core exception classes are defined in &lt;code&gt;django.core.exceptions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3276d1c234e3373c909b1f4cc01e109298b8cb8" translate="yes" xml:space="preserve">
          <source>Django currently supports two interfaces: WSGI and ASGI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7755d406dc1c330fb0aa5fa38c155f355df3ce" translate="yes" xml:space="preserve">
          <source>Django defines a standard API for loading and rendering templates regardless of the backend. Loading consists of finding the template for a given identifier and preprocessing it, usually compiling it to an in-memory representation. Rendering means interpolating the template with context data and returning the resulting string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f07d6cbbb8ffb7d64068907bac22ab996f3c9dc" translate="yes" xml:space="preserve">
          <source>Django determines the order in which migrations should be applied not by the filename of each migration, but by building a graph using two properties on the &lt;code&gt;Migration&lt;/code&gt; class: &lt;code&gt;dependencies&lt;/code&gt; and &lt;code&gt;run_before&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b2934181710d7a73695848135a5a151e3fb8c2" translate="yes" xml:space="preserve">
          <source>Django determines the root URLconf module to use. Ordinarily, this is the value of the &lt;a href=&quot;../../ref/settings#std:setting-ROOT_URLCONF&quot;&gt;&lt;code&gt;ROOT_URLCONF&lt;/code&gt;&lt;/a&gt; setting, but if the incoming &lt;code&gt;HttpRequest&lt;/code&gt; object has a &lt;a href=&quot;../../ref/request-response#django.http.HttpRequest.urlconf&quot;&gt;&lt;code&gt;urlconf&lt;/code&gt;&lt;/a&gt; attribute (set by middleware), its value will be used in place of the &lt;a href=&quot;../../ref/settings#std:setting-ROOT_URLCONF&quot;&gt;&lt;code&gt;ROOT_URLCONF&lt;/code&gt;&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
