<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="apache_http_server">
    <body>
      <group id="apache_http_server">
        <trans-unit id="5c5c96e583e519a4b9fd17a73c2088795d8e6617" translate="yes" xml:space="preserve">
          <source>!&lt;var&gt;directive-name&lt;/var&gt;</source>
          <target state="translated">!&lt;var&gt;directive-name&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="d89379a86405716bfab2ce8c26f18baf523594dd" translate="yes" xml:space="preserve">
          <source>!&lt;var&gt;module&lt;/var&gt;</source>
          <target state="translated">!&lt;var&gt;module&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="ffa117ff6462ffaf142b51034ab7ee72c177a680" translate="yes" xml:space="preserve">
          <source>!&lt;var&gt;section-name&lt;/var&gt;</source>
          <target state="translated">!&lt;var&gt;section-name&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="815e5e933f9ecdc6b727e530fe0756284a1ab98f" translate="yes" xml:space="preserve">
          <source>&quot;$2y$&quot; + the result of the crypt_blowfish algorithm. See the APR source file &lt;a href=&quot;http://svn.apache.org/viewvc/apr/apr/trunk/crypto/crypt_blowfish.c?view=markup&quot;&gt;crypt_blowfish.c&lt;/a&gt; for the details of the algorithm.</source>
          <target state="translated">&quot;$2y$&quot; + the result of the crypt_blowfish algorithm. See the APR source file &lt;a href=&quot;http://svn.apache.org/viewvc/apr/apr/trunk/crypto/crypt_blowfish.c?view=markup&quot;&gt;crypt_blowfish.c&lt;/a&gt; for the details of the algorithm.</target>
        </trans-unit>
        <trans-unit id="0cdc3a12b1ff33344cbbabce3ef50a79def0ceb9" translate="yes" xml:space="preserve">
          <source>&quot;$apr1$&quot; + the result of an Apache-specific algorithm using an iterated (1,000 times) MD5 digest of various combinations of a random 32-bit salt and the password. See the APR source file &lt;a href=&quot;http://svn.apache.org/viewvc/apr/apr/trunk/crypto/apr_md5.c?view=markup&quot;&gt;apr_md5.c&lt;/a&gt; for the details of the algorithm.</source>
          <target state="translated">&quot;$apr1$&quot; + the result of an Apache-specific algorithm using an iterated (1,000 times) MD5 digest of various combinations of a random 32-bit salt and the password. See the APR source file &lt;a href=&quot;http://svn.apache.org/viewvc/apr/apr/trunk/crypto/apr_md5.c?view=markup&quot;&gt;apr_md5.c&lt;/a&gt; for the details of the algorithm.</target>
        </trans-unit>
        <trans-unit id="ca67ff6334d4974dc9e1d5a571baf77ea464a86d" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;&amp;gt;&lt;/code&gt;&quot; indicates a dependency upon the previous non-&quot;&lt;code&gt;&amp;gt;&lt;/code&gt;&quot; line</source>
          <target state="translated">&quot;&lt;code&gt;&amp;gt;&lt;/code&gt;&quot; indicates a dependency upon the previous non-&quot;&lt;code&gt;&amp;gt;&lt;/code&gt;&quot; line</target>
        </trans-unit>
        <trans-unit id="b8d5743d5fb81ab3446bcf9534ab15647ac91452" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;=&lt;/code&gt;&quot; and &quot;&lt;code&gt;!=&lt;/code&gt;&quot; bind more tightly than &quot;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&quot; and &quot;&lt;code&gt;||&lt;/code&gt;&quot;. &quot;&lt;code&gt;!&lt;/code&gt;&quot; binds most tightly. Thus, the following are equivalent:</source>
          <target state="translated">&quot;&lt;code&gt;=&lt;/code&gt;&quot; and &quot;&lt;code&gt;!=&lt;/code&gt;&quot; bind more tightly than &quot;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&quot; and &quot;&lt;code&gt;||&lt;/code&gt;&quot;. &quot;&lt;code&gt;!&lt;/code&gt;&quot; binds most tightly. Thus, the following are equivalent:</target>
        </trans-unit>
        <trans-unit id="5fa310fd5a8f0be1230451c7f06b3a875c1f190b" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;on&lt;/code&gt;&quot; if the connection uses IPv6, &quot;&lt;code&gt;off&lt;/code&gt;&quot; otherwise</source>
          <target state="translated">&quot;&lt;code&gt;on&lt;/code&gt;&quot; if the connection uses IPv6, &quot;&lt;code&gt;off&lt;/code&gt;&quot; otherwise</target>
        </trans-unit>
        <trans-unit id="529e5327b644fe9b70d62e4b564b99f5c6fffef5" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;on&lt;/code&gt;&quot; if the request uses http/2, &quot;&lt;code&gt;off&lt;/code&gt;&quot; otherwise</source>
          <target state="translated">&quot;&lt;code&gt;on&lt;/code&gt;&quot; if the request uses http/2, &quot;&lt;code&gt;off&lt;/code&gt;&quot; otherwise</target>
        </trans-unit>
        <trans-unit id="d14fcbd83ac9fc672b2406e501bdd271fb38d7b6" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;on&lt;/code&gt;&quot; if the request uses https, &quot;&lt;code&gt;off&lt;/code&gt;&quot; otherwise</source>
          <target state="translated">&quot;&lt;code&gt;on&lt;/code&gt;&quot; if the request uses https, &quot;&lt;code&gt;off&lt;/code&gt;&quot; otherwise</target>
        </trans-unit>
        <trans-unit id="46781866bd5d581570a2199ed732ae1c522b628f" translate="yes" xml:space="preserve">
          <source>&quot;&lt;code&gt;true&lt;/code&gt;&quot; if the current request is a subrequest, &quot;&lt;code&gt;false&lt;/code&gt;&quot; otherwise</source>
          <target state="translated">&quot;&lt;code&gt;true&lt;/code&gt;&quot; if the current request is a subrequest, &quot;&lt;code&gt;false&lt;/code&gt;&quot; otherwise</target>
        </trans-unit>
        <trans-unit id="73534d27157fe9e13ac09a804149b0face8d4271" translate="yes" xml:space="preserve">
          <source>&quot;CBC&quot; refers to Cipher Block Chaining, which means that a portion of the previously encrypted cipher text is used in the encryption of the current block. &quot;DES&quot; refers to the Data Encryption Standard [&lt;a href=&quot;#AC96&quot;&gt;AC96&lt;/a&gt;, ch12], which has a number of variants (including DES40 and 3DES_EDE). &quot;Idea&quot; is currently one of the best and cryptographically strongest algorithms available, and &quot;RC2&quot; is a proprietary algorithm from RSA DSI [&lt;a href=&quot;#AC96&quot;&gt;AC96&lt;/a&gt;, ch13].</source>
          <target state="translated">&quot;CBC&quot; refers to Cipher Block Chaining, which means that a portion of the previously encrypted cipher text is used in the encryption of the current block. &quot;DES&quot; refers to the Data Encryption Standard [&lt;a href=&quot;#AC96&quot;&gt;AC96&lt;/a&gt;, ch12], which has a number of variants (including DES40 and 3DES_EDE). &quot;Idea&quot; is currently one of the best and cryptographically strongest algorithms available, and &quot;RC2&quot; is a proprietary algorithm from RSA DSI [&lt;a href=&quot;#AC96&quot;&gt;AC96&lt;/a&gt;, ch13].</target>
        </trans-unit>
        <trans-unit id="3fc4c1cd92ca1779ba056734d4dfe3f77a45103a" translate="yes" xml:space="preserve">
          <source>&quot;Child cannot open lock file. Exiting&quot;</source>
          <target state="translated">&quot;Child cannot open lock file. Exiting&quot;</target>
        </trans-unit>
        <trans-unit id="7c30142d26b464f7d0e200f01bb9baa6c2bd1156" translate="yes" xml:space="preserve">
          <source>&quot;HTTP/1.0&quot;, includes the specification for a Basic Access Authentication scheme.</source>
          <target state="translated">&quot;HTTP/1.0&quot;, includes the specification for a Basic Access Authentication scheme.</target>
        </trans-unit>
        <trans-unit id="f6f1f768e98d4ad5dbb51cd3b18c3fc9717c67f6" translate="yes" xml:space="preserve">
          <source>&quot;Opening config file ...&quot;</source>
          <target state="translated">&quot;Opening config file ...&quot;</target>
        </trans-unit>
        <trans-unit id="fb82369bd86b59d1ed13fdc54587625176cd7f18" translate="yes" xml:space="preserve">
          <source>&quot;Premature end of script headers&quot;</source>
          <target state="translated">&quot;Premature end of script headers&quot;</target>
        </trans-unit>
        <trans-unit id="940e9287aae52734f4208d1337ed2cb22d94d079" translate="yes" xml:space="preserve">
          <source>&quot;Server seems busy, (you may need to increase StartServers, or Min/MaxSpareServers)...&quot;</source>
          <target state="translated">&quot;Server seems busy, (you may need to increase StartServers, or Min/MaxSpareServers)...&quot;</target>
        </trans-unit>
        <trans-unit id="cd0ba4ab261ea327a8a217cd7519ed9eac48663c" translate="yes" xml:space="preserve">
          <source>&quot;cache lookup FAILED, forcing new map lookup&quot;</source>
          <target state="translated">&quot;cache lookup FAILED, forcing new map lookup&quot;</target>
        </trans-unit>
        <trans-unit id="ab1cd4933816ecca14e7f5d8fe14907ac376242b" translate="yes" xml:space="preserve">
          <source>&quot;child process 1234 did not exit, sending another SIGHUP&quot;</source>
          <target state="translated">&quot;child process 1234 did not exit, sending another SIGHUP&quot;</target>
        </trans-unit>
        <trans-unit id="7d8af7fa416eae2d5e8d0c4ee2109a10ae33369f" translate="yes" xml:space="preserve">
          <source>&quot;dbm&quot; (&lt;code&gt;&lt;a href=&quot;mod/mod_socache_dbm&quot;&gt;mod_socache_dbm&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&quot;dbm&quot; (&lt;code&gt;&lt;a href=&quot;mod/mod_socache_dbm&quot;&gt;mod_socache_dbm&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="3297ab0b2a68c231a11cbb87bc525b92df274d3b" translate="yes" xml:space="preserve">
          <source>&quot;dc&quot; (&lt;code&gt;&lt;a href=&quot;mod/mod_socache_dc&quot;&gt;mod_socache_dc&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&quot;dc&quot; (&lt;code&gt;&lt;a href=&quot;mod/mod_socache_dc&quot;&gt;mod_socache_dc&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="2be8cb975411eb0f90d1895ca0092067ad7615e3" translate="yes" xml:space="preserve">
          <source>&quot;default&quot;</source>
          <target state="translated">&quot;default&quot;</target>
        </trans-unit>
        <trans-unit id="cfb2976356e8300b4382b8611371066c5e9b4297" translate="yes" xml:space="preserve">
          <source>&quot;getpwuid: couldn't determine user name from uid&quot;</source>
          <target state="translated">&quot;getpwuid: couldn't determine user name from uid&quot;</target>
        </trans-unit>
        <trans-unit id="759bdb4467c3113bfbbb18b627169d69cb8ff2c1" translate="yes" xml:space="preserve">
          <source>&quot;httpd: caught SIGBUS, attempting to dump core in ...&quot;</source>
          <target state="translated">&quot;httpd: caught SIGBUS, attempting to dump core in ...&quot;</target>
        </trans-unit>
        <trans-unit id="03130b500990fbff5b508545d2d18802546f4a26" translate="yes" xml:space="preserve">
          <source>&quot;map lookup FAILED: map=rewritemap key=keyname&quot;</source>
          <target state="translated">&quot;map lookup FAILED: map=rewritemap key=keyname&quot;</target>
        </trans-unit>
        <trans-unit id="dfd035a525edb399eb621060fd96a312463863aa" translate="yes" xml:space="preserve">
          <source>&quot;memcache&quot; (&lt;code&gt;&lt;a href=&quot;mod/mod_socache_memcache&quot;&gt;mod_socache_memcache&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&quot;memcache&quot; (&lt;code&gt;&lt;a href=&quot;mod/mod_socache_memcache&quot;&gt;mod_socache_memcache&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="17838f456e716676512eeb1f577743be0649d5ce" translate="yes" xml:space="preserve">
          <source>&quot;off&quot;</source>
          <target state="translated">&quot;off&quot;</target>
        </trans-unit>
        <trans-unit id="eb7a1e3953148e4a7b9f58161d2d871cfee72ad3" translate="yes" xml:space="preserve">
          <source>&quot;on&quot;</source>
          <target state="translated">&quot;on&quot;</target>
        </trans-unit>
        <trans-unit id="8eba1562b8dd610645fd156cfd539bcbe3213117" translate="yes" xml:space="preserve">
          <source>&quot;openssl: Handshake: start&quot;</source>
          <target state="translated">&quot;openssl: Handshake: start&quot;</target>
        </trans-unit>
        <trans-unit id="67ba04664168edf5a748379b77338002bc795741" translate="yes" xml:space="preserve">
          <source>&quot;proxy: CONNECT: sending the CONNECT request to the remote proxy&quot;</source>
          <target state="translated">&quot;proxy: CONNECT: sending the CONNECT request to the remote proxy&quot;</target>
        </trans-unit>
        <trans-unit id="1765ddbac9aa64e51f3a591d917a4da03b3e1509" translate="yes" xml:space="preserve">
          <source>&quot;proxy: FTP: control connection complete&quot;</source>
          <target state="translated">&quot;proxy: FTP: control connection complete&quot;</target>
        </trans-unit>
        <trans-unit id="b14b919b83d38dea2fd1dda901da77860bf7d9b2" translate="yes" xml:space="preserve">
          <source>&quot;read from buffered SSL brigade, mode 0, 17 bytes&quot;</source>
          <target state="translated">&quot;read from buffered SSL brigade, mode 0, 17 bytes&quot;</target>
        </trans-unit>
        <trans-unit id="1bc93515b67c722b0589cd8bedd3669013e51cd1" translate="yes" xml:space="preserve">
          <source>&quot;shmcb&quot; (&lt;code&gt;&lt;a href=&quot;mod/mod_socache_shmcb&quot;&gt;mod_socache_shmcb&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&quot;shmcb&quot; (&lt;code&gt;&lt;a href=&quot;mod/mod_socache_shmcb&quot;&gt;mod_socache_shmcb&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="aaa7b62d0bb674d4e37f5b02d4fd576695b9253f" translate="yes" xml:space="preserve">
          <source>&quot;socket: Failed to get a socket, exiting child&quot;</source>
          <target state="translated">&quot;socket: Failed to get a socket, exiting child&quot;</target>
        </trans-unit>
        <trans-unit id="bae7cd0129fbd36f6f7edcdf873c97a9ba73a89f" translate="yes" xml:space="preserve">
          <source>&quot;{SHA}&quot; + Base64-encoded SHA-1 digest of the password. Insecure.</source>
          <target state="translated">&quot;{SHA}&quot; + Base64-encoded SHA-1 digest of the password. Insecure.</target>
        </trans-unit>
        <trans-unit id="cabcd2363ba07fcea0b3dcb8b120e08a8e6233e4" translate="yes" xml:space="preserve">
          <source>&quot;| 0000: 02 23 44 30 13 40 ac 34 df 3d bf 9a 19 49 39 15 |&quot;</source>
          <target state="translated">&quot;| 0000: 02 23 44 30 13 40 ac 34 df 3d bf 9a 19 49 39 15 |&quot;</target>
        </trans-unit>
        <trans-unit id="40ba4961eeb7021e0a4176173ecda2a9496a7cbe" translate="yes" xml:space="preserve">
          <source># followed by a user number.</source>
          <target state="translated"># followed by a user number.</target>
        </trans-unit>
        <trans-unit id="548778a954375f2c21749a74b8d46516c79bd2e3" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2018 The Apache Software Foundation</source>
          <target state="translated">&amp;copy; 2018 The Apache Software Foundation</target>
        </trans-unit>
        <trans-unit id="52be9031a79dbcc390ef535a005e2a309d021273" translate="yes" xml:space="preserve">
          <source>&amp;lt;AuthnProviderAlias&amp;gt; Directive</source>
          <target state="translated">&amp;lt;AuthnProviderAlias&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="797b123ed3a4213a8163a2d69c2918d079777d0a" translate="yes" xml:space="preserve">
          <source>&amp;lt;AuthzProviderAlias&amp;gt; Directive</source>
          <target state="translated">&amp;lt;AuthzProviderAlias&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="58c5d5010751ecfb8f03579fd4c05a2099833d47" translate="yes" xml:space="preserve">
          <source>&amp;lt;Directory&amp;gt; Directive</source>
          <target state="translated">&amp;lt;Directory&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="adbb09242b093970b0cabbdb79d3e1266f4f7180" translate="yes" xml:space="preserve">
          <source>&amp;lt;DirectoryMatch&amp;gt; Directive</source>
          <target state="translated">&amp;lt;DirectoryMatch&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="8572a0cd5422024e9b1a75a98bdfb826aced8317" translate="yes" xml:space="preserve">
          <source>&amp;lt;Else&amp;gt;</source>
          <target state="translated">&amp;lt;Else&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ee000083dc97c4f403420c670df368a3efa0e757" translate="yes" xml:space="preserve">
          <source>&amp;lt;Else&amp;gt; Directive</source>
          <target state="translated">&amp;lt;Else&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="d11b12bdd8ad9a304cfdb74b152610471ba9744b" translate="yes" xml:space="preserve">
          <source>&amp;lt;ElseIf&amp;gt;</source>
          <target state="translated">&amp;lt;ElseIf&amp;gt;</target>
        </trans-unit>
        <trans-unit id="46d156733e8a127ae107e646d4c118c2554ae47d" translate="yes" xml:space="preserve">
          <source>&amp;lt;ElseIf&amp;gt; Directive</source>
          <target state="translated">&amp;lt;ElseIf&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="694b2e550f0ca64f575fd03edb3995b39f585f2b" translate="yes" xml:space="preserve">
          <source>&amp;lt;Files&amp;gt;</source>
          <target state="translated">&amp;lt;Files&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1d55b637516432bffe8e8fa348ce49d643633161" translate="yes" xml:space="preserve">
          <source>&amp;lt;Files&amp;gt; Directive</source>
          <target state="translated">&amp;lt;Files&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="62f2ba2271d727763049ad276d3acbeff126c1a0" translate="yes" xml:space="preserve">
          <source>&amp;lt;FilesMatch&amp;gt;</source>
          <target state="translated">&amp;lt;FilesMatch&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4c11d707e646ee7450170c54884d59a703819a13" translate="yes" xml:space="preserve">
          <source>&amp;lt;FilesMatch&amp;gt; Directive</source>
          <target state="translated">&amp;lt;FilesMatch&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="f84f68baf8a9e3d52148756f2ebf1bfaafe9ec7f" translate="yes" xml:space="preserve">
          <source>&amp;lt;If&amp;gt;</source>
          <target state="translated">&amp;lt;If&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c5e6b18fe7375a3bca137636c52ec7650fc13519" translate="yes" xml:space="preserve">
          <source>&amp;lt;If&amp;gt; Directive</source>
          <target state="translated">&amp;lt;If&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="42d7ae6e40a380832b429078c6e6a1febecb139b" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfDefine&amp;gt;</source>
          <target state="translated">&amp;lt;IfDefine&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7c70e83d167a3b7e2f6cc3a280917699b0833647" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfDefine&amp;gt; Directive</source>
          <target state="translated">&amp;lt;IfDefine&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="af155fd59d1b353abd0c38405110872b626e589a" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfDirective&amp;gt;</source>
          <target state="translated">&amp;lt;IfDirective&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c1483446bff39b40749cbf491daf620ad0cf79b5" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfDirective&amp;gt; Directive</source>
          <target state="translated">&amp;lt;IfDirective&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="2447bd535571a05e8ac94143bb55c5fb792b7952" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfFile&amp;gt;</source>
          <target state="translated">&amp;lt;IfFile&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2d03d0f7183effcf834c38708218b247a369f50c" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfFile&amp;gt; Directive</source>
          <target state="translated">&amp;lt;IfFile&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="ded21dbbf815c257614d2e6c6586fcfdec7ce23a" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfModule&amp;gt;</source>
          <target state="translated">&amp;lt;IfModule&amp;gt;</target>
        </trans-unit>
        <trans-unit id="29ea0fb83206e26885b92b867206e5bc33ee36fa" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfModule&amp;gt; Directive</source>
          <target state="translated">&amp;lt;IfModule&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="f128c714f0367a9ac5a70c8f0e75eb2d52a0fae4" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfSection&amp;gt;</source>
          <target state="translated">&amp;lt;IfSection&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a322abe7267e587db85948ee1e064513cc4403e5" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfSection&amp;gt; Directive</source>
          <target state="translated">&amp;lt;IfSection&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="1bb9e2ea5eb6ad548045cad98360131c6de81a08" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfVersion&amp;gt;</source>
          <target state="translated">&amp;lt;IfVersion&amp;gt;</target>
        </trans-unit>
        <trans-unit id="409ad7adaf8e0b94e559143a0646dfab9a6b7a99" translate="yes" xml:space="preserve">
          <source>&amp;lt;IfVersion&amp;gt; Directive</source>
          <target state="translated">&amp;lt;IfVersion&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="7e2e350c6ea1ea0b3fdeab7d581f7646da3373d1" translate="yes" xml:space="preserve">
          <source>&amp;lt;Limit&amp;gt;</source>
          <target state="translated">&amp;lt;Limit&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a869fea9bebcc7de6bc5a8c3982411183c2cf29f" translate="yes" xml:space="preserve">
          <source>&amp;lt;Limit&amp;gt; Directive</source>
          <target state="translated">&amp;lt;Limit&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="7e9ab63c6a31b01342a637648fe908fad200f5d8" translate="yes" xml:space="preserve">
          <source>&amp;lt;LimitExcept&amp;gt;</source>
          <target state="translated">&amp;lt;LimitExcept&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bdbe485726d598e6ca418ff1b1a3560ee1648f2e" translate="yes" xml:space="preserve">
          <source>&amp;lt;LimitExcept&amp;gt; Directive</source>
          <target state="translated">&amp;lt;LimitExcept&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="75d9269d9bac3f235a6e5a1ba92852c53b713266" translate="yes" xml:space="preserve">
          <source>&amp;lt;Location&amp;gt; Directive</source>
          <target state="translated">&amp;lt;Location&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="220200d7fdf8bdfac61d69154e23f7387b12c030" translate="yes" xml:space="preserve">
          <source>&amp;lt;LocationMatch&amp;gt; Directive</source>
          <target state="translated">&amp;lt;LocationMatch&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="37cf745af9c91ca616a686eec34f676db3c43622" translate="yes" xml:space="preserve">
          <source>&amp;lt;MDomainSet&amp;gt; Directive</source>
          <target state="translated">&amp;lt;MDomainSet&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="cec9d3041c3e12f8ac1463fe9ecc5a0e4f80b403" translate="yes" xml:space="preserve">
          <source>&amp;lt;Macro&amp;gt; Directive</source>
          <target state="translated">&amp;lt;Macro&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="3fe091510f710db7c4bbe7138176f1778b5b25bf" translate="yes" xml:space="preserve">
          <source>&amp;lt;Proxy&amp;gt; Directive</source>
          <target state="translated">&amp;lt;Proxy&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="c24f088b4f399d7d518cd518c05368bb3043ed5e" translate="yes" xml:space="preserve">
          <source>&amp;lt;ProxyMatch&amp;gt; Directive</source>
          <target state="translated">&amp;lt;ProxyMatch&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="a757e855719321fac37eb5adfd2e51dadabf35e2" translate="yes" xml:space="preserve">
          <source>&amp;lt;RequireAll&amp;gt;</source>
          <target state="translated">&amp;lt;RequireAll&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8a1c10ed8d53bb4d82ef0317b1232599953d178e" translate="yes" xml:space="preserve">
          <source>&amp;lt;RequireAll&amp;gt; Directive</source>
          <target state="translated">&amp;lt;RequireAll&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="5ae00f2a7367d6888523179aabc628765af5a15b" translate="yes" xml:space="preserve">
          <source>&amp;lt;RequireAny&amp;gt;</source>
          <target state="translated">&amp;lt;RequireAny&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3ac02c91852a2bd0f8d9df84ddf2e8d884db5ca7" translate="yes" xml:space="preserve">
          <source>&amp;lt;RequireAny&amp;gt; Directive</source>
          <target state="translated">&amp;lt;RequireAny&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="d7c050aab8f870b274a252bec8f214e01ac0ec24" translate="yes" xml:space="preserve">
          <source>&amp;lt;RequireNone&amp;gt;</source>
          <target state="translated">&amp;lt;RequireNone&amp;gt;</target>
        </trans-unit>
        <trans-unit id="272297a6543e49a4cccbe40ba8637f9c915b2c42" translate="yes" xml:space="preserve">
          <source>&amp;lt;RequireNone&amp;gt; Directive</source>
          <target state="translated">&amp;lt;RequireNone&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="3ca9d876f5e193c60d35d6b56fa9438b82b39c6b" translate="yes" xml:space="preserve">
          <source>&amp;lt;VirtualHost&amp;gt; Directive</source>
          <target state="translated">&amp;lt;VirtualHost&amp;gt; Directive</target>
        </trans-unit>
        <trans-unit id="2e3bec1aee31bfbeb900451cc2a640af9c9d9384" translate="yes" xml:space="preserve">
          <source>&amp;lt;auto&amp;gt;</source>
          <target state="translated">&amp;lt;auto&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0db8d04782ab861e9397d1d053586f514cd0d8e5" translate="yes" xml:space="preserve">
          <source>'$' matches at end of subject string only.</source>
          <target state="translated">'$' matches at end of subject string only.</target>
        </trans-unit>
        <trans-unit id="6a5a21b4ea979a40b7527d966682599ed7d1a4d7" translate="yes" xml:space="preserve">
          <source>'*' is the only special content-type that matches all others. 'image/*' will not work.</source>
          <target state="translated">'*' is the only special content-type that matches all others. 'image/*' will not work.</target>
        </trans-unit>
        <trans-unit id="60e0259718ccc1c913864cf08c98dfe3c67c4cad" translate="yes" xml:space="preserve">
          <source>'&lt;strong&gt;&lt;code&gt;nocase|NC&lt;/code&gt;&lt;/strong&gt;' (&lt;strong&gt;n&lt;/strong&gt;o &lt;strong&gt;c&lt;/strong&gt;ase)</source>
          <target state="translated">'&lt;strong&gt;&lt;code&gt;nocase|NC&lt;/code&gt;&lt;/strong&gt;' (&lt;strong&gt;n&lt;/strong&gt;o &lt;strong&gt;c&lt;/strong&gt;ase)</target>
        </trans-unit>
        <trans-unit id="e02e0f7cacbd719086eae29774c7fb2754b9bc2f" translate="yes" xml:space="preserve">
          <source>'&lt;strong&gt;&lt;code&gt;novary|NV&lt;/code&gt;&lt;/strong&gt;' (&lt;strong&gt;n&lt;/strong&gt;o &lt;strong&gt;v&lt;/strong&gt;ary)</source>
          <target state="translated">'&lt;strong&gt;&lt;code&gt;novary|NV&lt;/code&gt;&lt;/strong&gt;' (&lt;strong&gt;n&lt;/strong&gt;o &lt;strong&gt;v&lt;/strong&gt;ary)</target>
        </trans-unit>
        <trans-unit id="aeebed5198dffbf562582b6a47ce155c7eba4472" translate="yes" xml:space="preserve">
          <source>'&lt;strong&gt;&lt;code&gt;ornext|OR&lt;/code&gt;&lt;/strong&gt;' (&lt;strong&gt;or&lt;/strong&gt; next condition)</source>
          <target state="translated">'&lt;strong&gt;&lt;code&gt;ornext|OR&lt;/code&gt;&lt;/strong&gt;' (&lt;strong&gt;or&lt;/strong&gt; next condition)</target>
        </trans-unit>
        <trans-unit id="542b10d6451b5956e6aacbe8109430b4abd921fe" translate="yes" xml:space="preserve">
          <source>(Do not call the &lt;code&gt;perl&lt;/code&gt; interpreter. The shell and Apache should find the interpreter using the &lt;a href=&quot;#pathinformation&quot;&gt;path information&lt;/a&gt; on the first line of the script.)</source>
          <target state="translated">(Do not call the &lt;code&gt;perl&lt;/code&gt; interpreter. The shell and Apache should find the interpreter using the &lt;a href=&quot;#pathinformation&quot;&gt;path information&lt;/a&gt; on the first line of the script.)</target>
        </trans-unit>
        <trans-unit id="5d7038ef31d3f1d31c24f47bedeb00904aab69a0" translate="yes" xml:space="preserve">
          <source>(In the case of text files of course, provisions must be made so that EBCDIC documents are always served in ASCII)</source>
          <target state="translated">(In the case of text files of course, provisions must be made so that EBCDIC documents are always served in ASCII)</target>
        </trans-unit>
        <trans-unit id="ecb1b34a7ca9ba09c1471102c6cf9cdcbf6b568a" translate="yes" xml:space="preserve">
          <source>(It is not enabled by default since some older browser tripped on such responses.)</source>
          <target state="translated">(It is not enabled by default since some older browser tripped on such responses.)</target>
        </trans-unit>
        <trans-unit id="f186f4139c5e4104aa163220805e46f0cdd7f18b" translate="yes" xml:space="preserve">
          <source>(It is the SIEMENS family of mainframes running the &lt;a href=&quot;http://www.siemens.de/servers/bs2osd/osdbc_us.htm&quot;&gt;BS2000/OSD operating system&lt;/a&gt;. This mainframe OS nowadays features a SVR4-derived POSIX subsystem).</source>
          <target state="translated">(It is the SIEMENS family of mainframes running the &lt;a href=&quot;http://www.siemens.de/servers/bs2osd/osdbc_us.htm&quot;&gt;BS2000/OSD operating system&lt;/a&gt;. This mainframe OS nowadays features a SVR4-derived POSIX subsystem).</target>
        </trans-unit>
        <trans-unit id="2154f1beeb04fee8202b6a21ca08446adbe30b3d" translate="yes" xml:space="preserve">
          <source>(Note: you must have &quot;&lt;code&gt;AllowOverride Options&lt;/code&gt;&quot; in effect to permit the use of the &quot;&lt;code&gt;&lt;a href=&quot;../mod/core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;&quot; directive in &lt;code&gt;.htaccess&lt;/code&gt; files.)</source>
          <target state="translated">(Note: you must have &quot;&lt;code&gt;AllowOverride Options&lt;/code&gt;&quot; in effect to permit the use of the &quot;&lt;code&gt;&lt;a href=&quot;../mod/core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;&quot; directive in &lt;code&gt;.htaccess&lt;/code&gt; files.)</target>
        </trans-unit>
        <trans-unit id="a0df94992941eca79370bd88d8e68d0cdc8de36a" translate="yes" xml:space="preserve">
          <source>(Other HTTP status codes are not yet implemented.)</source>
          <target state="translated">(Other HTTP status codes are not yet implemented.)</target>
        </trans-unit>
        <trans-unit id="251406c3ce2a8ad6808e4ebff8d7b1debd105b68" translate="yes" xml:space="preserve">
          <source>(Port numbers specified in the &lt;code&gt;VirtualHost&lt;/code&gt; directive do not influence what port numbers Apache will listen on, they only control which &lt;code&gt;VirtualHost&lt;/code&gt; will be selected to handle a request. Use the &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directive to control the addresses and ports on which the server listens.)</source>
          <target state="translated">(Port numbers specified in the &lt;code&gt;VirtualHost&lt;/code&gt; directive do not influence what port numbers Apache will listen on, they only control which &lt;code&gt;VirtualHost&lt;/code&gt; will be selected to handle a request. Use the &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directive to control the addresses and ports on which the server listens.)</target>
        </trans-unit>
        <trans-unit id="413d19b7e4f5065b1bbc5aa6cbc24e3ddf58bb4b" translate="yes" xml:space="preserve">
          <source>(The %stdout and %stderr parts may be missing if the script did not output anything on standard output or standard error).</source>
          <target state="translated">(The %stdout and %stderr parts may be missing if the script did not output anything on standard output or standard error).</target>
        </trans-unit>
        <trans-unit id="f24c8420b4530170bb5ba5e79af5a218dd245a7f" translate="yes" xml:space="preserve">
          <source>(load) balancer workers</source>
          <target state="translated">(load) balancer workers</target>
        </trans-unit>
        <trans-unit id="7739136dc697141cd8d76585cab6736b910f012b" translate="yes" xml:space="preserve">
          <source>(or</source>
          <target state="translated">(or</target>
        </trans-unit>
        <trans-unit id="c5bd79e81b86a5f4c23a67cf462be45b3cd4ddc9" translate="yes" xml:space="preserve">
          <source>(repeat)</source>
          <target state="translated">(repeat)</target>
        </trans-unit>
        <trans-unit id="71eaa52ed24fa4e442bf3f1a2d5ee4e9a3ff6a51" translate="yes" xml:space="preserve">
          <source>(test bed only)</source>
          <target state="translated">(test bed only)</target>
        </trans-unit>
        <trans-unit id="b3ce330efcb1d9dccee1df7545bdeabbd76075e4" translate="yes" xml:space="preserve">
          <source>) if each Virtual Host specifies different log files. The total number of file descriptors used by Apache is one for each distinct error log file, one for every other log file directive, plus 10-20 for internal use. Unix operating systems limit the number of file descriptors that may be used by a process; the limit is typically 64, and may usually be increased up to a large hard-limit.</source>
          <target state="translated">) if each Virtual Host specifies different log files. The total number of file descriptors used by Apache is one for each distinct error log file, one for every other log file directive, plus 10-20 for internal use. Unix operating systems limit the number of file descriptors that may be used by a process; the limit is typically 64, and may usually be increased up to a large hard-limit.</target>
        </trans-unit>
        <trans-unit id="b9772750713437afa6f0df1a1516e978e28195c1" translate="yes" xml:space="preserve">
          <source>) is available. It can be used to build DSO based modules &lt;em&gt;outside of&lt;/em&gt; the Apache httpd source tree. The idea is simple: When installing Apache HTTP Server the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;make install&lt;/code&gt; procedure installs the Apache httpd C header files and puts the platform-dependent compiler and linker flags for building DSO files into the &lt;code&gt;&lt;a href=&quot;programs/apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt; program. This way the user can use &lt;code&gt;&lt;a href=&quot;programs/apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt; to compile his Apache httpd module sources without the Apache httpd distribution source tree and without having to fiddle with the platform-dependent compiler and linker flags for DSO support.</source>
          <target state="translated">) is available. It can be used to build DSO based modules &lt;em&gt;outside of&lt;/em&gt; the Apache httpd source tree. The idea is simple: When installing Apache HTTP Server the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;make install&lt;/code&gt; procedure installs the Apache httpd C header files and puts the platform-dependent compiler and linker flags for building DSO files into the &lt;code&gt;&lt;a href=&quot;programs/apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt; program. This way the user can use &lt;code&gt;&lt;a href=&quot;programs/apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt; to compile his Apache httpd module sources without the Apache httpd distribution source tree and without having to fiddle with the platform-dependent compiler and linker flags for DSO support.</target>
        </trans-unit>
        <trans-unit id="06c54ba2349c2d817a8f5680ead952c8676db590" translate="yes" xml:space="preserve">
          <source>) mode.</source>
          <target state="translated">) mode.</target>
        </trans-unit>
        <trans-unit id="64dcdab74c5a65c49204506e7e44adc420f383c2" translate="yes" xml:space="preserve">
          <source>), by contrast, appears to the client just like an ordinary web server. No special configuration on the client is necessary. The client makes ordinary requests for content in the namespace of the reverse proxy. The reverse proxy then decides where to send those requests and returns the content as if it were itself the origin.</source>
          <target state="translated">), by contrast, appears to the client just like an ordinary web server. No special configuration on the client is necessary. The client makes ordinary requests for content in the namespace of the reverse proxy. The reverse proxy then decides where to send those requests and returns the content as if it were itself the origin.</target>
        </trans-unit>
        <trans-unit id="b55b445cd9fa88de69ba5ffc97b74fc82ea3f3bd" translate="yes" xml:space="preserve">
          <source>*: Unless &lt;code&gt;hcexpr&lt;/code&gt; is used, a 2xx or 3xx HTTP status will be interpreted as &lt;em&gt;passing&lt;/em&gt; the health check</source>
          <target state="translated">*: Unless &lt;code&gt;hcexpr&lt;/code&gt; is used, a 2xx or 3xx HTTP status will be interpreted as &lt;em&gt;passing&lt;/em&gt; the health check</target>
        </trans-unit>
        <trans-unit id="f61696495263e8576cbf929a998e92fba9f3b16b" translate="yes" xml:space="preserve">
          <source>, &lt;em&gt;one-way function&lt;/em&gt; or &lt;em&gt;hash function&lt;/em&gt;. Message digests are used to create a short, fixed-length representation of a longer, variable-length message. Digest algorithms are designed to produce a unique digest for each message. Message digests are designed to make it impractically difficult to determine the message from the digest and (in theory) impossible to find two different messages which create the same digest -- thus eliminating the possibility of substituting one message for another while maintaining the same digest.</source>
          <target state="translated">, &lt;em&gt;one-way function&lt;/em&gt; or &lt;em&gt;hash function&lt;/em&gt;. Message digests are used to create a short, fixed-length representation of a longer, variable-length message. Digest algorithms are designed to produce a unique digest for each message. Message digests are designed to make it impractically difficult to determine the message from the digest and (in theory) impossible to find two different messages which create the same digest -- thus eliminating the possibility of substituting one message for another while maintaining the same digest.</target>
        </trans-unit>
        <trans-unit id="9679f33d0799c9a56706dc969741ef99c8f79bae" translate="yes" xml:space="preserve">
          <source>, as shown in &lt;a href=&quot;#figure2&quot;&gt;Figure 2&lt;/a&gt;. An encapsulated protocol is transferred as data by the lower layer protocol, which does not examine the data. The encapsulated protocol has no knowledge of the underlying protocol.</source>
          <target state="translated">, as shown in &lt;a href=&quot;#figure2&quot;&gt;Figure 2&lt;/a&gt;. An encapsulated protocol is transferred as data by the lower layer protocol, which does not examine the data. The encapsulated protocol has no knowledge of the underlying protocol.</target>
        </trans-unit>
        <trans-unit id="3df4bef1bcd01f9a5596c6a5b0e4bb165469ed9d" translate="yes" xml:space="preserve">
          <source>- Copyright (c) Ian F. Darwin, 1987. Written by Ian F. Darwin.</source>
          <target state="translated">- Copyright (c) Ian F. Darwin, 1987. Written by Ian F. Darwin.</target>
        </trans-unit>
        <trans-unit id="e6a9fc04320a924f46c7c737432bb0389d9dd095" translate="yes" xml:space="preserve">
          <source>--</source>
          <target state="translated">--</target>
        </trans-unit>
        <trans-unit id="02e8acc99fd502b05611295f8e527a3188de0a90" translate="yes" xml:space="preserve">
          <source>--version</source>
          <target state="translated">--version</target>
        </trans-unit>
        <trans-unit id="6bfad0cb61ec04c8e83fbc02d3e02c478a1f6e49" translate="yes" xml:space="preserve">
          <source>-V</source>
          <target state="translated">-V</target>
        </trans-unit>
        <trans-unit id="438f486ff09e58bed9c4b9b705a520182a3b3d78" translate="yes" xml:space="preserve">
          <source>. The &lt;var&gt;path&lt;/var&gt; is the name of a local virtual path; &lt;var&gt;url&lt;/var&gt; is a partial URL for the remote server and cannot include a query string.</source>
          <target state="translated">. The &lt;var&gt;path&lt;/var&gt; is the name of a local virtual path; &lt;var&gt;url&lt;/var&gt; is a partial URL for the remote server and cannot include a query string.</target>
        </trans-unit>
        <trans-unit id="7ff95313e7f71f38c2e5e947f62ed8c1498367af" translate="yes" xml:space="preserve">
          <source>. There are two built-in workers: the default forward proxy worker and the default reverse proxy worker. Additional workers can be configured explicitly.</source>
          <target state="translated">. There are two built-in workers: the default forward proxy worker and the default reverse proxy worker. Additional workers can be configured explicitly.</target>
        </trans-unit>
        <trans-unit id="80a2fccac839d91d644a788a600620919de056bd" translate="yes" xml:space="preserve">
          <source>. These elements allow conditional text, the inclusion of other files or programs, as well as the setting and printing of environment variables.</source>
          <target state="translated">. These elements allow conditional text, the inclusion of other files or programs, as well as the setting and printing of environment variables.</target>
        </trans-unit>
        <trans-unit id="f5d6577fe733403be1c67efd1e5eba538c25c2b9" translate="yes" xml:space="preserve">
          <source>. They support many important configuration attributes which are described below in the &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive. The same attributes can also be set using &lt;code&gt;&lt;a href=&quot;#proxyset&quot;&gt;ProxySet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">. They support many important configuration attributes which are described below in the &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive. The same attributes can also be set using &lt;code&gt;&lt;a href=&quot;#proxyset&quot;&gt;ProxySet&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="6d6638f100b207ecb46091b66920f3b392bc6263" translate="yes" xml:space="preserve">
          <source>.htaccess Files</source>
          <target state="translated">.htaccess Files</target>
        </trans-unit>
        <trans-unit id="f8b05ceb09a39b30d1aa607c98975867d93543c7" translate="yes" xml:space="preserve">
          <source>.htaccess file in document root</source>
          <target state="translated">.htaccess file in document root</target>
        </trans-unit>
        <trans-unit id="4e84d41a538a64fca553f9162e74afbefdc4485d" translate="yes" xml:space="preserve">
          <source>.htaccess file in images directory</source>
          <target state="translated">.htaccess file in images directory</target>
        </trans-unit>
        <trans-unit id="ba18f3ace196344efa96f9183582049f6bb01653" translate="yes" xml:space="preserve">
          <source>.htaccess files</source>
          <target state="translated">.htaccess files</target>
        </trans-unit>
        <trans-unit id="90b266b3c8f6e032c527acb5f9af15ffc4baecc6" translate="yes" xml:space="preserve">
          <source>/foo/.htaccess:</source>
          <target state="translated">/foo/.htaccess:</target>
        </trans-unit>
        <trans-unit id="0485ec5e8b4f78b3966cb382b0ddbe36f120f161" translate="yes" xml:space="preserve">
          <source>/foo/bar/.htaccess:</source>
          <target state="translated">/foo/bar/.htaccess:</target>
        </trans-unit>
        <trans-unit id="3fda983096b6e293d7a854692cc2cb51e87238f1" translate="yes" xml:space="preserve">
          <source>/home/bob/www/one/two.html</source>
          <target state="translated">/home/bob/www/one/two.html</target>
        </trans-unit>
        <trans-unit id="98a741ca53a3f6b9620e930f4e206db7e79a5f56" translate="yes" xml:space="preserve">
          <source>/otherpath/pathinfo</source>
          <target state="translated">/otherpath/pathinfo</target>
        </trans-unit>
        <trans-unit id="ad077d004e5ad3cb45146039d4502c64b30361c5" translate="yes" xml:space="preserve">
          <source>/somepath/otherpath/pathinfo</source>
          <target state="translated">/somepath/otherpath/pathinfo</target>
        </trans-unit>
        <trans-unit id="5fa427d98cf4e9a40bdf0bdb633d00d241c090c5" translate="yes" xml:space="preserve">
          <source>/usr/web/bob/one/two.html</source>
          <target state="translated">/usr/web/bob/one/two.html</target>
        </trans-unit>
        <trans-unit id="2113f7bfab26c2a0e27ce4df9d4ac43322b9086b" translate="yes" xml:space="preserve">
          <source>0x01</source>
          <target state="translated">0x01</target>
        </trans-unit>
        <trans-unit id="d6c81010612ae78ac6212fa60776e210b9e47365" translate="yes" xml:space="preserve">
          <source>0x02</source>
          <target state="translated">0x02</target>
        </trans-unit>
        <trans-unit id="9fc6fa67f2a46c7a35273aae8718728e912515b9" translate="yes" xml:space="preserve">
          <source>0x03</source>
          <target state="translated">0x03</target>
        </trans-unit>
        <trans-unit id="cc35a7395782908111509566248cbc75aedc0969" translate="yes" xml:space="preserve">
          <source>0x04</source>
          <target state="translated">0x04</target>
        </trans-unit>
        <trans-unit id="2fee0d789cea022f61e53c60ae2474686baab72a" translate="yes" xml:space="preserve">
          <source>0x05</source>
          <target state="translated">0x05</target>
        </trans-unit>
        <trans-unit id="afccd2a6961ead3d5fafc141887e4d020afb3603" translate="yes" xml:space="preserve">
          <source>0x06</source>
          <target state="translated">0x06</target>
        </trans-unit>
        <trans-unit id="7b524218c065d0fc60c7ae361cb63b947c43484e" translate="yes" xml:space="preserve">
          <source>0x07</source>
          <target state="translated">0x07</target>
        </trans-unit>
        <trans-unit id="432a3e71f41dcc25bcb79d077c4d41d6b17f5132" translate="yes" xml:space="preserve">
          <source>0x08</source>
          <target state="translated">0x08</target>
        </trans-unit>
        <trans-unit id="970d12842fd761256ef261aa175003c7add215c9" translate="yes" xml:space="preserve">
          <source>0x09</source>
          <target state="translated">0x09</target>
        </trans-unit>
        <trans-unit id="35d9fb27f0789e03e56dcdc67643ae51b66c1d82" translate="yes" xml:space="preserve">
          <source>0x0A</source>
          <target state="translated">0x0A</target>
        </trans-unit>
        <trans-unit id="ecbaa4b841e012b9a2843f03ad83aabe7ad58328" translate="yes" xml:space="preserve">
          <source>0x0B</source>
          <target state="translated">0x0B</target>
        </trans-unit>
        <trans-unit id="d2b9b24163759388554f53f5aeedd7242522d9bb" translate="yes" xml:space="preserve">
          <source>0x12</source>
          <target state="translated">0x12</target>
        </trans-unit>
        <trans-unit id="808cffbf9b22ff150ee5b25dc9c6166c19c4756d" translate="yes" xml:space="preserve">
          <source>0x34</source>
          <target state="translated">0x34</target>
        </trans-unit>
        <trans-unit id="49aab034a59a6ec5984bcb7b4f2a67b93a10707a" translate="yes" xml:space="preserve">
          <source>0xA001</source>
          <target state="translated">0xA001</target>
        </trans-unit>
        <trans-unit id="bf95c0d994cb1a34c3afc4c54c6d311de9d34465" translate="yes" xml:space="preserve">
          <source>0xA002</source>
          <target state="translated">0xA002</target>
        </trans-unit>
        <trans-unit id="a60ae866156bde7b531d2146783b94038fe1fb4d" translate="yes" xml:space="preserve">
          <source>0xA003</source>
          <target state="translated">0xA003</target>
        </trans-unit>
        <trans-unit id="0f40594556028b14b1fc008266c2c282c52d617d" translate="yes" xml:space="preserve">
          <source>0xA004</source>
          <target state="translated">0xA004</target>
        </trans-unit>
        <trans-unit id="1e530164c1b989d1f1a8381986937f078df48ffd" translate="yes" xml:space="preserve">
          <source>0xA005</source>
          <target state="translated">0xA005</target>
        </trans-unit>
        <trans-unit id="00d6b7d79a101f3055f6b9c3f35482718452baaa" translate="yes" xml:space="preserve">
          <source>0xA006</source>
          <target state="translated">0xA006</target>
        </trans-unit>
        <trans-unit id="cb4c867a61e55450652f8279100d2a5a4380c8ca" translate="yes" xml:space="preserve">
          <source>0xA007</source>
          <target state="translated">0xA007</target>
        </trans-unit>
        <trans-unit id="5bd9100a3a5005d0cf9e1b3803b9a751637b6481" translate="yes" xml:space="preserve">
          <source>0xA008</source>
          <target state="translated">0xA008</target>
        </trans-unit>
        <trans-unit id="e6ef332429cbfa3983f4985a7e941d0cdcb8b062" translate="yes" xml:space="preserve">
          <source>0xA009</source>
          <target state="translated">0xA009</target>
        </trans-unit>
        <trans-unit id="e1e56f4851e824b0af78097866f1621995037dec" translate="yes" xml:space="preserve">
          <source>0xA00A</source>
          <target state="translated">0xA00A</target>
        </trans-unit>
        <trans-unit id="4b70491d6b1bb291c8ad889708c4de0760c774ec" translate="yes" xml:space="preserve">
          <source>0xA00B</source>
          <target state="translated">0xA00B</target>
        </trans-unit>
        <trans-unit id="df1f2081dffa69f0f177e9e4f60c274d7f47fb5c" translate="yes" xml:space="preserve">
          <source>0xA00C</source>
          <target state="translated">0xA00C</target>
        </trans-unit>
        <trans-unit id="6d7fc8b74526667cf3c34459bdc52c9f7e91e0e8" translate="yes" xml:space="preserve">
          <source>0xA00D</source>
          <target state="translated">0xA00D</target>
        </trans-unit>
        <trans-unit id="f7b45838fc28a908ed30b5ea33ddff2f7d67d996" translate="yes" xml:space="preserve">
          <source>0xA00E</source>
          <target state="translated">0xA00E</target>
        </trans-unit>
        <trans-unit id="b2f595fdd535910619e8ae9d5b5ec352cda96dc8" translate="yes" xml:space="preserve">
          <source>0xFF</source>
          <target state="translated">0xFF</target>
        </trans-unit>
        <trans-unit id="4877935d6e43052bdadd1b4ec4859fee35fddcee" translate="yes" xml:space="preserve">
          <source>1-digit weekday (Sunday first day of week)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0853dbb9dfbe3fb26f1fce8f508a5df55e467cb8" translate="yes" xml:space="preserve">
          <source>1. Does the system support threads?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3b03fccacc8165fe743a12fec0f1bcbe56d2b6" translate="yes" xml:space="preserve">
          <source>1...n</source>
          <target state="translated">1...n</target>
        </trans-unit>
        <trans-unit id="7dccc759a654fc945f78c21d9d57bbda0f204e93" translate="yes" xml:space="preserve">
          <source>2-digit day of month</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4fcb0ed48e22cdb4ff9bbdbde991958bca7916" translate="yes" xml:space="preserve">
          <source>2-digit hour (12 hour clock)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5762f29619c21ed3cdb4a688d7b1027f09b1caf9" translate="yes" xml:space="preserve">
          <source>2-digit hour (24 hour clock)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d02dad29d4d32f8f06ab90b2cf1682f6e4fa28b" translate="yes" xml:space="preserve">
          <source>2-digit minute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940862dc17045967e70c8dc495d30de7978f8f3d" translate="yes" xml:space="preserve">
          <source>2-digit month</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958ea08d2b64ab216e0784a3cc7a826dbc049b27" translate="yes" xml:space="preserve">
          <source>2-digit second</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179c8831dc213c6e24c4b3dad41c5420bf4e4fed" translate="yes" xml:space="preserve">
          <source>2-digit week of year (Monday first day of week)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650520559b145f9f508b047f757a3ccd266efe8d" translate="yes" xml:space="preserve">
          <source>2-digit week of year (Sunday first day of week)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9caf7933885b8f708bb1820cb76e5592f6ff74" translate="yes" xml:space="preserve">
          <source>2-digit year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0187620c2a8d1a7dc0e4a1bd01ed0592f933522" translate="yes" xml:space="preserve">
          <source>2. Does the system support thread-safe polling (Specifically, the kqueue and epoll functions)?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3096b247481e463a4e9199f7c415037d8567a2d" translate="yes" xml:space="preserve">
          <source>2.2.32 or 2.4.24 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f991e10895edbc7be1d955949711491006e445" translate="yes" xml:space="preserve">
          <source>2.3 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04c81e0ed08f5cd37ae5a79ffa8aa8ba8ad616f" translate="yes" xml:space="preserve">
          <source>2.3.10 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bf6abb5f631bab82c707e07c04a81575a0fd7f" translate="yes" xml:space="preserve">
          <source>2.3.9 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28a5d1b17341585291211248dbbb7da1f26b839" translate="yes" xml:space="preserve">
          <source>2.4.0 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea4f707e878dd22f3bf7475afbc18bb16900b10" translate="yes" xml:space="preserve">
          <source>2.4.10 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7c5bd9dadc9c8b26cc3ac0910af5343ae7405a" translate="yes" xml:space="preserve">
          <source>2.4.11 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef11c3392178ecf44b01ca6d998d8add43dec28" translate="yes" xml:space="preserve">
          <source>2.4.3 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29173227b868d808c36d72018120971c5c0ac965" translate="yes" xml:space="preserve">
          <source>2.4.5 and later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f1dac8381d88d7c21b63c08525ac53d7b165b7" translate="yes" xml:space="preserve">
          <source>3-character month name (localized)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f463fd8157cded9ed9ed31aa209644751e3b5035" translate="yes" xml:space="preserve">
          <source>3-character weekday name (localized)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514bffe90943e436c6f1e216571a4f665ae50a03" translate="yes" xml:space="preserve">
          <source>3-digit day of year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb8c07071c06e85348ce858951af8e74e14db85" translate="yes" xml:space="preserve">
          <source>3DES(168)</source>
          <target state="translated">3DES(168)</target>
        </trans-unit>
        <trans-unit id="812df613a3ae8fbb0f6ed7d0a7a4e3387615ebe8" translate="yes" xml:space="preserve">
          <source>3des192</source>
          <target state="translated">3des192</target>
        </trans-unit>
        <trans-unit id="e74855106367b2c2a8b56c92ee30b86c10a8529d" translate="yes" xml:space="preserve">
          <source>4-digit year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3256da16a0ea8052d7eab7d6db04f24dbff992f0" translate="yes" xml:space="preserve">
          <source>4...(n+3)</source>
          <target state="translated">4...(n+3)</target>
        </trans-unit>
        <trans-unit id="1bf948b3434e8f9c89edf19edce0c563b49815b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#A&quot;&gt; A &lt;/a&gt; | &lt;a href=&quot;#B&quot;&gt; B &lt;/a&gt; | &lt;a href=&quot;#C&quot;&gt; C &lt;/a&gt; | &lt;a href=&quot;#D&quot;&gt; D &lt;/a&gt; | &lt;a href=&quot;#E&quot;&gt; E &lt;/a&gt; | &lt;a href=&quot;#F&quot;&gt; F &lt;/a&gt; | &lt;a href=&quot;#H&quot;&gt; H &lt;/a&gt; | &lt;a href=&quot;#I&quot;&gt; I &lt;/a&gt; | &lt;a href=&quot;#L&quot;&gt; L &lt;/a&gt; | &lt;a href=&quot;#M&quot;&gt; M &lt;/a&gt; | &lt;a href=&quot;#N&quot;&gt; N &lt;/a&gt; | &lt;a href=&quot;#P&quot;&gt; P &lt;/a&gt; | &lt;a href=&quot;#R&quot;&gt; R &lt;/a&gt; | &lt;a href=&quot;#S&quot;&gt; S &lt;/a&gt; | &lt;a href=&quot;#U&quot;&gt; U &lt;/a&gt; | &lt;a href=&quot;#V&quot;&gt; V &lt;/a&gt; | &lt;a href=&quot;#W&quot;&gt; W &lt;/a&gt; | &lt;a href=&quot;#X&quot;&gt; X &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e541ee969bfb330cb87cb712a9265b9fd174ddd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#charset-lang&quot;&gt;Languages&lt;/a&gt; and &lt;a href=&quot;#contentencoding&quot;&gt;content encodings&lt;/a&gt; are treated accumulative, because one can assign more than one language or encoding to a particular resource. For example, the file &lt;code&gt;welcome.html.en.de&lt;/code&gt; will be delivered with &lt;code&gt;Content-Language: en, de&lt;/code&gt; and &lt;code&gt;Content-Type: text/html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa977e60ddf92ceff44a84a84359bc96f00305ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#mapfunc&quot;&gt;mapping-function&lt;/a&gt; calls (&lt;code&gt;${mapname:key|default}&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71885ecb6c24541e0e28cfcd0eb5cdc9a97d4985" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../content-negotiation&quot;&gt;Content negotiated&lt;/a&gt; &quot;MultiViews&quot; are allowed using &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167142be9088ec2a4e9f369b305a7042217d74e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../content-negotiation&quot;&gt;Content negotiation&lt;/a&gt; will be performed if &lt;code&gt;&lt;a href=&quot;core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;&lt;code&gt;MultiViews&lt;/code&gt; is in effect. If &lt;var&gt;filename&lt;/var&gt; resolves to a static &lt;code&gt;text/html&lt;/code&gt; document (not a CGI script) and either one of the &lt;code&gt;&lt;a href=&quot;core#options&quot;&gt;options&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Includes&lt;/code&gt; or &lt;code&gt;IncludesNOEXEC&lt;/code&gt; is enabled, the file will be processed for server-side includes (see the &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; documentation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77fede827761c425777a7cf55624fb37857532ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../env&quot;&gt;Environment Variables in Apache HTTP Server&lt;/a&gt;, for additional examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fae381a03e3f65178c3fc58873dd083ee0653b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expr&quot;&gt;Expressions in Apache HTTP Server&lt;/a&gt;, for a complete reference and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df9b7dd6133a4cb3759ca78c64902df296bca00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expr&quot;&gt;Expressions in Apache HTTP Server&lt;/a&gt;, for a complete reference and more examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995fd62b7d46c6e7798a5c38077db38f95b48ab3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../filter&quot;&gt;Filters&lt;/a&gt; documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f128dfb1631fdcebaca754af83f1791918c9022" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../misc/security_tips#serverroot&quot;&gt;the security tips&lt;/a&gt; for information on how to properly set permissions on the &lt;code&gt;ServerRoot&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a595d03995ae134858d9a1dffbc59ba4cc56ad5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../mpm&quot;&gt;Multi-Processing Modules&lt;/a&gt;, or MPMs, implement the basic behavior of the server. A single MPM must be active in order for the server to function. The list of available MPMs appears on the &lt;a href=&quot;../mod/index&quot;&gt;module index page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab807530137aedbba03956524c0fcd4ba66e43b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sections&quot;&gt;How &amp;lt;Directory&amp;gt;, &amp;lt;Location&amp;gt; and &amp;lt;Files&amp;gt; sections work&lt;/a&gt; for an explanation of how these different sections are combined when a request is received</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948ba9a600a2e4dddb25c73dfc8f285ef03079aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sections&quot;&gt;How &amp;lt;Directory&amp;gt;, &amp;lt;Location&amp;gt; and &amp;lt;Files&amp;gt; sections work&lt;/a&gt; for an explanation of how these different sections are combined when a request is received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2f3538f3ce6a2c464cb9717e432ad1226380b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sections&quot;&gt;How &amp;lt;Directory&amp;gt;, &amp;lt;Location&amp;gt;, &amp;lt;Files&amp;gt; sections work&lt;/a&gt; for an explanation of how these different sections are combined when a request is received. &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ElseIf&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;Else&amp;gt;&lt;/code&gt; are applied last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b915944b791c5502f9886f4bb2e91b49adc33e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;fd-limits&quot;&gt;File Descriptor Limits&lt;/a&gt; (or, &lt;em&gt;Too many log files&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac946af619499562dbdb3a4e32ffb84de51bfac1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/Backus%E2%80%93Naur_Form&quot;&gt;Backus-Naur Form&lt;/a&gt; (BNF) is a notation technique for context-free grammars, often used to describe the syntax of languages used in computing. In most cases, expressions are used to express boolean values. For these, the starting point in the BNF is &lt;code&gt;expr&lt;/code&gt;. However, a few directives like &lt;code&gt;&lt;a href=&quot;mod/mod_log_debug#logmessage&quot;&gt;LogMessage&lt;/a&gt;&lt;/code&gt; accept expressions that evaluate to a string value. For those, the starting point in the BNF is &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed7b33833f4fe94b6fde87896091cbba0a6254c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://ftp.ics.uci.edu/pub/ietf/http/#RFC&quot;&gt; http://ftp.ics.uci.edu/pub/ietf/http/#RFC&lt;/a&gt; - A pre-compiled list of HTTP related RFCs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544cd9e2e0683da1710b4cff3fac3e152a9fce00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://purl.org/NET/http-errata&quot;&gt; http://purl.org/NET/http-errata&lt;/a&gt; - HTTP/1.1 Specification Errata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7f8920882c234706a00841562f21a0e27992e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.perl.org/&quot;&gt;Perl 5&lt;/a&gt; [OPTIONAL]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf1bab1857301b1c244704afb8eed77e93014e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.rfc-editor.org/errata.php&quot;&gt; http://www.rfc-editor.org/errata.php&lt;/a&gt; - RFC Errata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685c6eaf2520215071637d769b2912bbbd922672" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47&lt;/a&gt; (Best Current Practice), &lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc3066.txt&quot;&gt;RFC 3066&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509f6c6ab04687e984984418666dd9e8baac98bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc1945.txt&quot;&gt;RFC 1945&lt;/a&gt; (Informational)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9436d4f6f98a71d4ed9ef375428883091bd9d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt; (Standards Track)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3595ae9e2e7c43b3878c322540bdb0b137b253" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt; (Standards Track)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735b5271ee3c375c81021942ca21bd716e4af8e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc2617.txt&quot;&gt;RFC 2617&lt;/a&gt; (Standards Track)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa33a55814e1234e41c2555c615d886f47432e7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc2854.txt&quot;&gt;RFC 2854&lt;/a&gt; (Informational)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d3ac69694bdb6b84c11ab460114dd1c309669b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc3282.txt&quot;&gt;RFC 3282&lt;/a&gt; (Standards Track)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf4f7d2d8111ad5913e1515b9fe45ab78d93055" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc4346.txt&quot;&gt;RFC 4346&lt;/a&gt; (Standards Track)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61552d535ea5752477414fb33879644f30fb6bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/html401&quot;&gt;HTML 4.01 Specification&lt;/a&gt; (&lt;a href=&quot;http://www.w3.org/MarkUp/html4-updates/errata&quot;&gt;Errata&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d4cc2c13850da0ee54f7929cff14fa764ddc63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/xhtml1&quot;&gt;XHTML 1.0 The Extensible HyperText Markup Language (Second Edition)&lt;/a&gt; (&lt;a href=&quot;http://www.w3.org/2002/08/REC-xhtml1-20020801-errata/&quot;&gt;Errata&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620943d08e23769ded0f8f7db31a4a944dbffbfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.w3.org/TR/xhtml11/&quot;&gt;XHTML 1.1 - Module-based XHTML&lt;/a&gt; (&lt;a href=&quot;http://www.w3.org/MarkUp/2009/xhtml11-2nd-edition-errata.html&quot;&gt;Errata&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9092623e5594add07aeee7b9ad4819cc4a036d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://xmlsoft.org/&quot;&gt;libxml2&lt;/a&gt; always uses UTF-8 (Unicode) internally, and libxml2-based filter modules will output that by default. mod_xml2enc can change the output encoding through the API, but there is currently no way to configure that directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331b5a5034c242051bb34c73fea945039d3bbd85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;Regular expressions&lt;/a&gt; can also be used, with the addition of the &lt;code&gt;~&lt;/code&gt; character. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4962630d1685eb01bb12f9397d993c528d80a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://nghttp2.org/documentation/h2load-howto.html&quot;&gt;h2load&lt;/a&gt; - useful to stress-test your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c33197246f735cd8df6aac1ecd0b0f8a3d2b23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://nghttp2.org/documentation/nghttp.1.html&quot;&gt;nghttp&lt;/a&gt; - useful to visualize the HTTP/2 frames and get a better idea of the protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9299c47eb3aa3ff06029346f8b8b0b99b16e9eae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc2616#section-19.6&quot;&gt;RFC 2616 &amp;sect;19.6&lt;/a&gt; &quot;Compatibility With Previous Versions&quot; had encouraged HTTP servers to support legacy HTTP/0.9 requests. RFC 7230 supersedes this with &quot;The expectation to support HTTP/0.9 requests has been removed&quot; and offers additional comments in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230#appendix-A&quot;&gt;RFC 7230 Appendix A&lt;/a&gt;. The &lt;code&gt;Require1.0&lt;/code&gt; option allows the user to remove support of the default &lt;code&gt;Allow0.9&lt;/code&gt; option's behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61b219fffb15ba39b206da114c26b772dd4fdb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc7231#section-4.1&quot;&gt;RFC 7231 &amp;sect;4.1&lt;/a&gt; &quot;Request Methods&quot; &quot;Overview&quot; requires that origin servers shall respond with a HTTP 501 status code when an unsupported method is encountered in the request line. This already happens when the &lt;code&gt;LenientMethods&lt;/code&gt; option is used, but administrators may wish to toggle the &lt;code&gt;RegisteredMethods&lt;/code&gt; option and register any non-standard methods using the &lt;code&gt;&lt;a href=&quot;#registerhttpmethod&quot;&gt;RegisterHttpMethod&lt;/a&gt;&lt;/code&gt; directive, particularly if the &lt;code&gt;Unsafe&lt;/code&gt; option has been toggled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e3a556fe2b224992f8e616b9c97013f7760cf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ip-based&quot;&gt;IP-based Virtual Hosts&lt;/a&gt; (An IP address for each web site)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73b12a065831a162ef86b06e094585a1c6c9a0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ip-based&quot;&gt;IP-based virtual hosts&lt;/a&gt; use the IP address of the connection to determine the correct virtual host to serve. Therefore you need to have a separate IP address for each host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0e0c29c7d93d4f1423e600bafd2d53baf6e8cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt; documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3390962c1e780a338063e722a730a07ca4f0944" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt; documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef02783b95c70aef792a7d7474468257efb3511" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;name-based&quot;&gt;Name-based Virtual Hosts&lt;/a&gt; (More than one web site per IP address)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ff54654d20f4dc545f85be7ab47dc608da9ec3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;overrides#override-options&quot;&gt;Options&lt;/a&gt;[=&lt;var&gt;Option&lt;/var&gt;,...]</source>
          <target state="translated">&lt;a href=&quot;overrides#override-options&quot;&gt;Options&lt;/a&gt;[=&lt;var&gt;Option&lt;/var&gt;,...]</target>
        </trans-unit>
        <trans-unit id="5a1f42d9063fd3ae8e10d40b75b67c442146d487" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; has two modes of operation. It can be run as persistent daemon, or periodically from cron. &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; can take up to an hour or more to process very large (tens of gigabytes) caches and if you are running it from cron it is recommended that you determine how long a typical run takes, to avoid running more than one instance at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6e40fc5f9381e4f54b89000263003d9d744400" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;vhosts/name-based&quot;&gt;Name-based virtual host support&lt;/a&gt; requires httpd to know the IP address(es) of the host that &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; is running on. To get this address it uses either the global &lt;code&gt;&lt;a href=&quot;mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; (if present) or calls the C function &lt;code&gt;gethostname&lt;/code&gt; (which should return the same as typing &quot;hostname&quot; at the command prompt). Then it performs a DNS lookup on this address. At present there is no way to avoid this lookup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ccd7a6df1e44f1146dd86c9c16016a2bb01198" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;LA-U&quot; name=&quot;LA-U&quot;&gt;&lt;code&gt;%{LA-U:variable}&lt;/code&gt;&lt;/a&gt; can be used for look-aheads which perform an internal (URL-based) sub-request to determine the final value of &lt;em&gt;variable&lt;/em&gt;. This can be used to access variable for rewriting which is not available at the current stage, but will be set in a later phase.</source>
          <target state="translated">&lt;a id=&quot;LA-U&quot; name=&quot;LA-U&quot;&gt;&lt;code&gt;%{LA-U:variable}&lt;/code&gt;&lt;/a&gt; can be used for look-aheads which perform an internal (URL-based) sub-request to determine the final value of &lt;em&gt;variable&lt;/em&gt;. This can be used to access variable for rewriting which is not available at the current stage, but will be set in a later phase.</target>
        </trans-unit>
        <trans-unit id="61ebeefe7722da7c545b66d83e817cd9e1037b85" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;figure1&quot; name=&quot;figure1&quot;&gt;&lt;dfn&gt;Figure 1&lt;/dfn&gt;&lt;/a&gt;: Simplified SSL Handshake Sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91937e8e361a6f98f9168d9e0fdf046d829e652c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;figure1&quot; name=&quot;figure1&quot;&gt;&lt;dfn&gt;Figure 1&lt;/dfn&gt;&lt;/a&gt;: Typical cache growth / clean sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8f1a5d1247f51f04c070febc5c261c32c81f04" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;figure2&quot; name=&quot;figure2&quot;&gt;&lt;dfn&gt;Figure 2&lt;/dfn&gt;&lt;/a&gt;: SSL Protocol Stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7afecfab1737e6f66ad6f8b7c10ec6a64e876b4" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;figure3&quot; name=&quot;figure3&quot;&gt;&lt;dfn&gt;Figure 3&lt;/dfn&gt;&lt;/a&gt;: SSL Record Protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69badc143de19df8bc28209dbd56ee82f62c064c" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;indexoptions.charset&quot; name=&quot;indexoptions.charset&quot;&gt;Charset=&lt;var&gt;character-set&lt;/var&gt;&lt;/a&gt; (&lt;em&gt;Apache HTTP Server 2.0.61 and later&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65888da29c02952c7667a2aba29ab95611e1b803" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;indexoptions.type&quot; name=&quot;indexoptions.type&quot;&gt;Type=&lt;var&gt;MIME content-type&lt;/var&gt;&lt;/a&gt; (&lt;em&gt;Apache HTTP Server 2.0.61 and later&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56136ca3f1ac1865fe8c9f3b72d84637592fe99" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;indexoptions.useolddateformat&quot; name=&quot;indexoptions.useolddateformat&quot;&gt;UseOldDateFormat&lt;/a&gt; (&lt;em&gt;Apache HTTP Server 2.4.26 and later&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a4e94e33e245bc0e55f29b72917d06b5de0106" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;indexoptions.versionsort&quot; name=&quot;indexoptions.versionsort&quot;&gt;VersionSort&lt;/a&gt; (&lt;em&gt;Apache HTTP Server 2.0a3 and later&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ed98a4d2a9aed1a86dccd9f05b39455eb9dcb3" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;indexoptions.xhtml&quot; name=&quot;indexoptions.xhtml&quot;&gt;XHTML&lt;/a&gt; (&lt;em&gt;Apache HTTP Server 2.0.49 and later&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fc7eb483542d00332b95a12e782258473c8335" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;patterns&quot; name=&quot;patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; is a perl compatible &lt;a id=&quot;regexp&quot; name=&quot;regexp&quot;&gt;regular expression&lt;/a&gt;. What this pattern is compared against varies depending on where the &lt;code&gt;RewriteRule&lt;/code&gt; directive is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02841c1b34ee4c009486bd7ebef11f8017f3ec56" translate="yes" xml:space="preserve">
          <source>&lt;a id=&quot;serialize&quot; name=&quot;serialize&quot;&gt;The functions&lt;/a&gt;&lt;code&gt;accept_mutex_on&lt;/code&gt; and &lt;code&gt;accept_mutex_off&lt;/code&gt; implement a mutual exclusion semaphore. Only one child can have the mutex at any time. There are several choices for implementing these mutexes. The choice is defined in &lt;code&gt;src/conf.h&lt;/code&gt; (pre-1.3) or &lt;code&gt;src/include/ap_config.h&lt;/code&gt; (1.3 or later). Some architectures do not have any locking choice made, on these architectures it is unsafe to use multiple &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a7b55eb7465bb923988fcaa2db9e74b8d47f90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!&lt;/code&gt;: kill cipher from list completely (can &lt;strong&gt;not&lt;/strong&gt; be added later again)</source>
          <target state="translated">&lt;code&gt;!&lt;/code&gt;: kill cipher from list completely (can &lt;strong&gt;not&lt;/strong&gt; be added later again)</target>
        </trans-unit>
        <trans-unit id="bd432891a6002e7ae114e2e37c7622f16106075f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!&lt;/code&gt;&lt;var&gt;parameter-name&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;!&lt;/code&gt;&lt;var&gt;parameter-name&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="ab67d70659f186f0ed06e5982e3a1c248ae81b6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;!&lt;em&gt;varname&lt;/em&gt;&lt;/code&gt;, or</source>
          <target state="translated">&lt;code&gt;!&lt;em&gt;varname&lt;/em&gt;&lt;/code&gt;, or</target>
        </trans-unit>
        <trans-unit id="e65e5824085542e3557ae800b6950b40650fd5fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;GET /apache_pb.gif HTTP/1.0&quot;&lt;/code&gt; (&lt;code&gt;\&quot;%r\&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;GET /apache_pb.gif HTTP/1.0&quot;&lt;/code&gt; (&lt;code&gt;\&quot;%r\&quot;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="9eff427d3558a98ea099531f4992a91ebf65b84c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;Mozilla/4.08 [en] (Win98; I ;Nav)&quot;&lt;/code&gt; (&lt;code&gt;\&quot;%{User-agent}i\&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;Mozilla/4.08 [en] (Win98; I ;Nav)&quot;&lt;/code&gt; (&lt;code&gt;\&quot;%{User-agent}i\&quot;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="b44ff819832dbc323065c27d6d757b5b3e8554a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;http://www.example.com/start.html&quot;&lt;/code&gt; (&lt;code&gt;\&quot;%{Referer}i\&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&quot;http://www.example.com/start.html&quot;&lt;/code&gt; (&lt;code&gt;\&quot;%{Referer}i\&quot;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="c44e7d4e60875689c380bd27052e24359db37cba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt; followed by a group number.</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; followed by a group number.</target>
        </trans-unit>
        <trans-unit id="47d8b0945e3a09a9f2ea586a810e5f7ea96793d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;#&lt;/code&gt; followed by a user number.</source>
          <target state="translated">&lt;code&gt;#&lt;/code&gt; followed by a user number.</target>
        </trans-unit>
        <trans-unit id="4b3968ed2e36208f1e2163cf1630d6340c87bc1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%&lt;/code&gt; (percent space)</source>
          <target state="translated">&lt;code&gt;%&lt;/code&gt; (percent space)</target>
        </trans-unit>
        <trans-unit id="760545a363b917af2cabe3d6540d15d1c9a71594" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%{ENV:variable}&lt;/code&gt;, where &lt;em&gt;variable&lt;/em&gt; can be any environment variable, is also available. This is looked-up via internal Apache httpd structures and (if not found there) via &lt;code&gt;getenv()&lt;/code&gt; from the Apache httpd server process.</source>
          <target state="translated">&lt;code&gt;%{ENV:variable}&lt;/code&gt;, where &lt;em&gt;variable&lt;/em&gt; can be any environment variable, is also available. This is looked-up via internal Apache httpd structures and (if not found there) via &lt;code&gt;getenv()&lt;/code&gt; from the Apache httpd server process.</target>
        </trans-unit>
        <trans-unit id="b2b52f1577f1b69c3f41d8df61b85a051778ce32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%{HTTP:header}&lt;/code&gt;, where &lt;em&gt;header&lt;/em&gt; can be any HTTP MIME-header name, can always be used to obtain the value of a header sent in the HTTP request. Example: &lt;code&gt;%{HTTP:Proxy-Connection}&lt;/code&gt; is the value of the HTTP header ``&lt;code&gt;Proxy-Connection:&lt;/code&gt;''.</source>
          <target state="translated">&lt;code&gt;%{HTTP:header}&lt;/code&gt;, where &lt;em&gt;header&lt;/em&gt; can be any HTTP MIME-header name, can always be used to obtain the value of a header sent in the HTTP request. Example: &lt;code&gt;%{HTTP:Proxy-Connection}&lt;/code&gt; is the value of the HTTP header ``&lt;code&gt;Proxy-Connection:&lt;/code&gt;''.</target>
        </trans-unit>
        <trans-unit id="9fe24be25c821a5d3fb5da20fb4bf9534b25cf31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%{LA-F:variable}&lt;/code&gt; can be used to perform an internal (filename-based) sub-request, to determine the final value of &lt;em&gt;variable&lt;/em&gt;. Most of the time, this is the same as LA-U above.</source>
          <target state="translated">&lt;code&gt;%{LA-F:variable}&lt;/code&gt; can be used to perform an internal (filename-based) sub-request, to determine the final value of &lt;em&gt;variable&lt;/em&gt;. Most of the time, this is the same as LA-U above.</target>
        </trans-unit>
        <trans-unit id="2949a44f9abd4bb1de95354c30a131d011f4553a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%{SSL:variable}&lt;/code&gt;, where &lt;em&gt;variable&lt;/em&gt; is the name of an &lt;a href=&quot;mod_ssl#envvars&quot;&gt;SSL environment variable&lt;/a&gt;, can be used whether or not &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; is loaded, but will always expand to the empty string if it is not. Example: &lt;code&gt;%{SSL:SSL_CIPHER_USEKEYSIZE}&lt;/code&gt; may expand to &lt;code&gt;128&lt;/code&gt;. These variables are available even without setting the &lt;code&gt;StdEnvVars&lt;/code&gt; option of the &lt;code&gt;&lt;a href=&quot;mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;%{SSL:variable}&lt;/code&gt;, where &lt;em&gt;variable&lt;/em&gt; is the name of an &lt;a href=&quot;mod_ssl#envvars&quot;&gt;SSL environment variable&lt;/a&gt;, can be used whether or not &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; is loaded, but will always expand to the empty string if it is not. Example: &lt;code&gt;%{SSL:SSL_CIPHER_USEKEYSIZE}&lt;/code&gt; may expand to &lt;code&gt;128&lt;/code&gt;. These variables are available even without setting the &lt;code&gt;StdEnvVars&lt;/code&gt; option of the &lt;code&gt;&lt;a href=&quot;mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; directive.</target>
        </trans-unit>
        <trans-unit id="ab77a6caa8eeb89bd06966d391a0aa10acfb275c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;AuthnProviderAlias&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/AuthnProviderAlias&amp;gt;&lt;/code&gt; are used to enclose a group of authentication directives that can be referenced by the alias name using one of the directives &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt; AuthBasicProvider&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_auth_digest#authdigestprovider&quot;&gt; AuthDigestProvider&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;AuthnProviderAlias&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/AuthnProviderAlias&amp;gt;&lt;/code&gt; are used to enclose a group of authentication directives that can be referenced by the alias name using one of the directives &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt; AuthBasicProvider&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_auth_digest#authdigestprovider&quot;&gt; AuthDigestProvider&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="72121a3f8574e158dd18b9ba31d63c34be3acf24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;AuthzProviderAlias&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/AuthzProviderAlias&amp;gt;&lt;/code&gt; are used to enclose a group of authorization directives that can be referenced by the alias name using the directive &lt;code&gt;&lt;a href=&quot;#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;AuthzProviderAlias&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/AuthzProviderAlias&amp;gt;&lt;/code&gt; are used to enclose a group of authorization directives that can be referenced by the alias name using the directive &lt;code&gt;&lt;a href=&quot;#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="10e538bc88f436ed27a670942a55d897473525ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/Directory&amp;gt;&lt;/code&gt; are used to enclose a group of directives that will apply only to the named directory, sub-directories of that directory, and the files within the respective directories. Any directive that is allowed in a directory context may be used. &lt;var&gt;Directory-path&lt;/var&gt; is either the full path to a directory, or a wild-card string using Unix shell-style matching. In a wild-card string, &lt;code&gt;?&lt;/code&gt; matches any single character, and &lt;code&gt;*&lt;/code&gt; matches any sequences of characters. You may also use &lt;code&gt;[]&lt;/code&gt; character ranges. None of the wildcards match a `/' character, so &lt;code&gt;&amp;lt;Directory &quot;/*/public_html&quot;&amp;gt;&lt;/code&gt; will not match &lt;code&gt;/home/user/public_html&lt;/code&gt;, but &lt;code&gt;&amp;lt;Directory &quot;/home/*/public_html&quot;&amp;gt;&lt;/code&gt; will match. Example:</source>
          <target state="translated">&lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/Directory&amp;gt;&lt;/code&gt; are used to enclose a group of directives that will apply only to the named directory, sub-directories of that directory, and the files within the respective directories. Any directive that is allowed in a directory context may be used. &lt;var&gt;Directory-path&lt;/var&gt; is either the full path to a directory, or a wild-card string using Unix shell-style matching. In a wild-card string, &lt;code&gt;?&lt;/code&gt; matches any single character, and &lt;code&gt;*&lt;/code&gt; matches any sequences of characters. You may also use &lt;code&gt;[]&lt;/code&gt; character ranges. None of the wildcards match a `/' character, so &lt;code&gt;&amp;lt;Directory &quot;/*/public_html&quot;&amp;gt;&lt;/code&gt; will not match &lt;code&gt;/home/user/public_html&lt;/code&gt;, but &lt;code&gt;&amp;lt;Directory &quot;/home/*/public_html&quot;&amp;gt;&lt;/code&gt; will match. Example:</target>
        </trans-unit>
        <trans-unit id="c1739139667639669e5c41fbe6ea49a7e1b119ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;DirectoryMatch&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/DirectoryMatch&amp;gt;&lt;/code&gt; are used to enclose a group of directives which will apply only to the named directory (and the files within), the same as &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;. However, it takes as an argument a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;&amp;lt;DirectoryMatch&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/DirectoryMatch&amp;gt;&lt;/code&gt; are used to enclose a group of directives which will apply only to the named directory (and the files within), the same as &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;. However, it takes as an argument a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt;. For example:</target>
        </trans-unit>
        <trans-unit id="1ea5a92bda1e0ef2e1a183e02971856ea19e9e78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;IfDefine&amp;gt;&lt;/code&gt; sections are nest-able, which can be used to implement simple multiple-parameter tests. Example:</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfDefine&amp;gt;&lt;/code&gt; sections are nest-able, which can be used to implement simple multiple-parameter tests. Example:</target>
        </trans-unit>
        <trans-unit id="7767ec043a1b9c43b050df763c3d9697964c903c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;IfModule&amp;gt;&lt;/code&gt; sections are nest-able, which can be used to implement simple multiple-module tests.</source>
          <target state="translated">&lt;code&gt;&amp;lt;IfModule&amp;gt;&lt;/code&gt; sections are nest-able, which can be used to implement simple multiple-module tests.</target>
        </trans-unit>
        <trans-unit id="aad64be61882978d4b3fc0bfa3ca91025d860d25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;LimitExcept&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/LimitExcept&amp;gt;&lt;/code&gt; are used to enclose a group of access control directives which will then apply to any HTTP access method &lt;strong&gt;not&lt;/strong&gt; listed in the arguments; i.e., it is the opposite of a &lt;code&gt;&lt;a href=&quot;#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; section and can be used to control both standard and nonstandard/unrecognized methods. See the documentation for &lt;code&gt;&lt;a href=&quot;#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">&lt;code&gt;&amp;lt;LimitExcept&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/LimitExcept&amp;gt;&lt;/code&gt; are used to enclose a group of access control directives which will then apply to any HTTP access method &lt;strong&gt;not&lt;/strong&gt; listed in the arguments; i.e., it is the opposite of a &lt;code&gt;&lt;a href=&quot;#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; section and can be used to control both standard and nonstandard/unrecognized methods. See the documentation for &lt;code&gt;&lt;a href=&quot;#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="84a73b7dc4fa075e15de0f53a1415eee289c9452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; sections operate completely outside the filesystem. This has several consequences. Most importantly, &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; directives should not be used to control access to filesystem locations. Since several different URLs may map to the same filesystem location, such access controls may by circumvented.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; sections operate completely outside the filesystem. This has several consequences. Most importantly, &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; directives should not be used to control access to filesystem locations. Since several different URLs may map to the same filesystem location, such access controls may by circumvented.</target>
        </trans-unit>
        <trans-unit id="ce1bf085b762fea9faa897a9690027cdf0681f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/RequireAll&amp;gt;&lt;/code&gt; are used to enclose a group of authorization directives of which none must fail and at least one must succeed in order for the &lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; directive to succeed.</source>
          <target state="translated">&lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/RequireAll&amp;gt;&lt;/code&gt; are used to enclose a group of authorization directives of which none must fail and at least one must succeed in order for the &lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; directive to succeed.</target>
        </trans-unit>
        <trans-unit id="999ba747d095bebbe27ea71443cf4392092126c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/RequireAny&amp;gt;&lt;/code&gt; are used to enclose a group of authorization directives of which one must succeed in order for the &lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; directive to succeed.</source>
          <target state="translated">&lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/RequireAny&amp;gt;&lt;/code&gt; are used to enclose a group of authorization directives of which one must succeed in order for the &lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; directive to succeed.</target>
        </trans-unit>
        <trans-unit id="0af45e389c38ba75a059794f24f391d4551d5d5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/RequireNone&amp;gt;&lt;/code&gt; are used to enclose a group of authorization directives of which none must succeed in order for the &lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; directive to not fail.</source>
          <target state="translated">&lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/RequireNone&amp;gt;&lt;/code&gt; are used to enclose a group of authorization directives of which none must succeed in order for the &lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; directive to not fail.</target>
        </trans-unit>
        <trans-unit id="0d2a6c3280e4951e362f6e81df34f4f702849e4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/code&gt; are used to enclose a group of directives that will apply only to a particular virtual host. Any directive that is allowed in a virtual host context may be used. When the server receives a request for a document on a particular virtual host, it uses the configuration directives enclosed in the &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; section. &lt;var&gt;Addr&lt;/var&gt; can be any of the following, optionally followed by a colon and a port number (or *):</source>
          <target state="translated">&lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;/VirtualHost&amp;gt;&lt;/code&gt; are used to enclose a group of directives that will apply only to a particular virtual host. Any directive that is allowed in a virtual host context may be used. When the server receives a request for a document on a particular virtual host, it uses the configuration directives enclosed in the &lt;code&gt;&amp;lt;VirtualHost&amp;gt;&lt;/code&gt; section. &lt;var&gt;Addr&lt;/var&gt; can be any of the following, optionally followed by a colon and a port number (or *):</target>
        </trans-unit>
        <trans-unit id="75092dd50bd80033abd4fbfc90d322017dfedd34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'string1 string2'&lt;/code&gt; results in &lt;code&gt;string1 string2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'string1 string2'&lt;/code&gt; results in &lt;code&gt;string1 string2&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="8305fc8380c85cc87fd75d9bcfb52859e6b3de25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(ab)+&lt;/code&gt; matches &lt;code&gt;ababab&lt;/code&gt; - that is, the &lt;code&gt;+&lt;/code&gt; applies to the group. For more on backreferences see &lt;a href=&quot;#InternalBackRefs&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;(ab)+&lt;/code&gt; matches &lt;code&gt;ababab&lt;/code&gt; - that is, the &lt;code&gt;+&lt;/code&gt; applies to the group. For more on backreferences see &lt;a href=&quot;#InternalBackRefs&quot;&gt;below&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ee1c3a9405843cc87018a25023c705f77363b671" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt; =</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; =</target>
        </trans-unit>
        <trans-unit id="703b96c15541a00534b6e27787bead6b93c198bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;: move matching ciphers to the current location in list</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt;: move matching ciphers to the current location in list</target>
        </trans-unit>
        <trans-unit id="d48042f2b386fc842c53a458070b72a144b0eca2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--enable-v4-mapped&lt;/code&gt; is the default on all platforms except FreeBSD, NetBSD, and OpenBSD, so this is probably how your httpd was built.</source>
          <target state="translated">&lt;code&gt;--enable-v4-mapped&lt;/code&gt; is the default on all platforms except FreeBSD, NetBSD, and OpenBSD, so this is probably how your httpd was built.</target>
        </trans-unit>
        <trans-unit id="c3d4b2c677d937a03e01576c7fa513ea30817f3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; (&lt;code&gt;%l&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; (&lt;code&gt;%l&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="6f0c178fcf567da816900ce06e56ce4f4f6f232f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; (dash)</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; (dash)</target>
        </trans-unit>
        <trans-unit id="972798ccf641191369d998b1b9d6dc2161554e8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt; =</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt; =</target>
        </trans-unit>
        <trans-unit id="9e7e9d89bf399fa367c97cbb765dd44b5c859010" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-&lt;/code&gt;: remove cipher from list (can be added later again)</source>
          <target state="translated">&lt;code&gt;-&lt;/code&gt;: remove cipher from list (can be added later again)</target>
        </trans-unit>
        <trans-unit id="c372c98166a85854f963756b69dc87639c1ec8ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-DescriptionWidth&lt;/code&gt; (or unset) allows &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; to calculate the best width.</source>
          <target state="translated">&lt;code&gt;-DescriptionWidth&lt;/code&gt; (or unset) allows &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; to calculate the best width.</target>
        </trans-unit>
        <trans-unit id="b4e091ce372710f7880518d63af5232c8bbd7888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-L&lt;/code&gt;&lt;var&gt;linkname&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;-L&lt;/code&gt;&lt;var&gt;linkname&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="5ed0ab8d6e67f73fc2a7015654f43c97b464c68e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-NameWidth&lt;/code&gt; (or unset) allows &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; to calculate the best width, but only up to 20 bytes wide.</source>
          <target state="translated">&lt;code&gt;-NameWidth&lt;/code&gt; (or unset) allows &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; to calculate the best width, but only up to 20 bytes wide.</target>
        </trans-unit>
        <trans-unit id="e06cf57ff784427473d2c9b4188e89a418a19eba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-T&lt;/code&gt; (Available in 2.3.8 and later)</source>
          <target state="translated">&lt;code&gt;-T&lt;/code&gt; (Available in 2.3.8 and later)</target>
        </trans-unit>
        <trans-unit id="3726250ff296ebc346d78abadaff9b1c0b81efc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; specifies a path to a particular configuration file</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; specifies a path to a particular configuration file</target>
        </trans-unit>
        <trans-unit id="3ea0fa9ec6d5d807540c00cf8734ea6489b5ec03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-f&lt;/code&gt; specifies an absolute or relative path to a particular configuration file:</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; specifies an absolute or relative path to a particular configuration file:</target>
        </trans-unit>
        <trans-unit id="d1e9bfa015b5c596cb57e514ed227e878012a3fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-n&lt;/code&gt; specifies the installed Apache service whose configuration file is to be used:</source>
          <target state="translated">&lt;code&gt;-n&lt;/code&gt; specifies the installed Apache service whose configuration file is to be used:</target>
        </trans-unit>
        <trans-unit id="b6f5b928e0452f109fc5daa7d1d337e366202a1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;-p&lt;/code&gt;&lt;var&gt;program&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;-p&lt;/code&gt;&lt;var&gt;program&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="52e97d24749e5e2dddba2da03a2a330706483981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.htaccess&lt;/code&gt; file contents:</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; file contents:</target>
        </trans-unit>
        <trans-unit id="a851cbc22405929780e2490a2e641bc99c3e7fc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.htaccess&lt;/code&gt; file in &lt;code&gt;/www/htdocs/example&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; file in &lt;code&gt;/www/htdocs/example&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="37e0da67ec7ed4e775db5cff6623058c2affaa68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.htaccess&lt;/code&gt; files (or &quot;distributed configuration files&quot;) provide a way to make configuration changes on a per-directory basis. A file, containing one or more configuration directives, is placed in a particular document directory, and the directives apply to that directory, and all subdirectories thereof.</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; files (or &quot;distributed configuration files&quot;) provide a way to make configuration changes on a per-directory basis. A file, containing one or more configuration directives, is placed in a particular document directory, and the directives apply to that directory, and all subdirectories thereof.</target>
        </trans-unit>
        <trans-unit id="df43bb2a6c192fab39408a01f4b2b75c63c67f65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.htaccess&lt;/code&gt; files provide a way to make configuration changes on a per-directory basis.</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; files provide a way to make configuration changes on a per-directory basis.</target>
        </trans-unit>
        <trans-unit id="b2ce577513d96f475bfdf1f740638c0266d03167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;.htaccess&lt;/code&gt; files should be used in a case where the content providers need to make configuration changes to the server on a per-directory basis, but do not have root access on the server system. In the event that the server administrator is not willing to make frequent configuration changes, it might be desirable to permit individual users to make these changes in &lt;code&gt;.htaccess&lt;/code&gt; files for themselves. This is particularly true, for example, in cases where ISPs are hosting multiple user sites on a single machine, and want their users to be able to alter their configuration.</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; files should be used in a case where the content providers need to make configuration changes to the server on a per-directory basis, but do not have root access on the server system. In the event that the server administrator is not willing to make frequent configuration changes, it might be desirable to permit individual users to make these changes in &lt;code&gt;.htaccess&lt;/code&gt; files for themselves. This is particularly true, for example, in cases where ISPs are hosting multiple user sites on a single machine, and want their users to be able to alter their configuration.</target>
        </trans-unit>
        <trans-unit id="97fbb41619052231b763858b9314d357a0ff46be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; (default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c35ad0a300b01698ac087d93ecb67c65797754f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;1+&lt;/code&gt; and &lt;code&gt;-1+&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e13ef8b0b47f22c46ffcbc131b9a10094f117cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;127.0.0.1&lt;/code&gt; (&lt;code&gt;%h&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396aee85e16fbef8cb98b1e6dec41e57e6e12900" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;192.168&lt;/code&gt; or &lt;code&gt;192.168.0.0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3001a4f51c623ec5b9031f49741d0917810e74d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;200&lt;/code&gt; (&lt;code&gt;%&amp;gt;s&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bedab9e59b30f9e87dca27ca6f141648f53e45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2326&lt;/code&gt; (&lt;code&gt;%b&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26fe71ef676d5c9d36dcf751301f21ffc64f16c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;2&lt;/code&gt; (not yet implemented)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986b3a576b4a3f13998747f3974c29ef4622a9ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;#addiconbytype&quot;&gt;AddIconByType&lt;/a&gt;&lt;/code&gt; should be used in preference to &lt;code&gt;AddIcon&lt;/code&gt;, when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f875a2289ddbee12021fea4b7a75c70bbf22d38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;#authdigestdomain&quot;&gt;AuthDigestDomain&lt;/a&gt;&lt;/code&gt; should list the locations that will be protected by this configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8ae8003931f179c63d3d03600ac4f0247319c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; for a description of how regular expressions are mixed in with normal &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; for a description of how regular expressions are mixed in with normal &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;s</target>
        </trans-unit>
        <trans-unit id="66f7c211071b0357155d454e681aa185316205f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; will be evaluated &lt;em&gt;only&lt;/em&gt; for directories requested with trailing slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e794907d90c093b94de1e3ebd615c8f496bfb11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;#h2maxsessionstreams&quot;&gt;H2MaxSessionStreams&lt;/a&gt;&lt;/code&gt; limits the number of parallel requests that a client can make on a HTTP/2 connection. It depends on your site how many you should allow. The default is 100 which is plenty and unless you run into memory problems, I would keep it this way. Most requests that browsers send are GETs without a body, so they use up only a little bit of memory until the actual processing starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51d70f0b2315f91081b2e5316a8252caf80bab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;#h2windowsize&quot;&gt;H2WindowSize&lt;/a&gt;&lt;/code&gt; controls how much the client is allowed to send as body of a request, before it waits for the server to encourage more. Or, the other way around, it is the amount of request body data the server needs to be able to buffer. This is per request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db3ff802b289f654493c43fe4df377d2696662f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;#luahookauthchecker&quot;&gt;LuaHookAuthChecker&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#luaauthzprovider&quot;&gt;LuaAuthzProvider&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b842446a5ee4b5cb52e2249da7f35bdf4f58b594" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; directives of the type &lt;code&gt;prg&lt;/code&gt; are not started during server initialization if they're defined in a context that does not have &lt;code&gt;RewriteEngine&lt;/code&gt; set to &lt;code&gt;on&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ff537eca980f67834e804892884211cc271514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;#sslcadnrequestfile&quot;&gt;SSLCADNRequestFile&lt;/a&gt;&lt;/code&gt; must specify an &lt;em&gt;all-in-one&lt;/em&gt; file containing a concatenation of PEM-encoded CA certificates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caf3355e6d4e47ec8e86b8dfd80186f887e39de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/core#cgimapextension&quot;&gt;CGIMapExtension&lt;/a&gt;&lt;/code&gt; - This directive maps a CGI file extension to a script interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050a651a356d9555ee795a12836ae685617b91b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt; provides the &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#redirect&quot;&gt;Redirect&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#redirectmatch&quot;&gt;RedirectMatch&lt;/a&gt;&lt;/code&gt; directives, which provide a means to redirect one URL to another. This kind of simple redirection of one URL, or a class of URLs, to somewhere else, should be accomplished using these directives rather than &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;RedirectMatch&lt;/code&gt; allows you to include a regular expression in your redirection criteria, providing many of the benefits of using &lt;code&gt;RewriteRule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ce8f4759cdfe218bb556a8ce139c790ffbe46d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_authn_dbm&quot;&gt;mod_authn_dbm&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_dbd&quot;&gt;mod_authn_dbd&lt;/a&gt;&lt;/code&gt; are two modules which make this possible. Rather than selecting &lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; file&lt;/code&gt;, instead you can choose &lt;code&gt;dbm&lt;/code&gt; or &lt;code&gt;dbd&lt;/code&gt; as your storage format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7584aa42819441efdc41753e23bb94b2e8d6856c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt;, intermediate proxies and browsers may each cache responses and cause the either page to be shown outside of the time-window configured. &lt;code&gt;&lt;a href=&quot;../mod/mod_expires&quot;&gt;mod_expires&lt;/a&gt;&lt;/code&gt; may be used to control this effect. You are, of course, much better off simply serving the content dynamically, and customizing it based on the time of day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e22f65a6d76d279b858747efc665448b2cead4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_dbd&quot;&gt;mod_dbd&lt;/a&gt;&lt;/code&gt; will need to be configured to point at the right database for this statement to be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3ed1fda35d07abf8b5005e62652b781e083c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; inspect response header for &lt;code&gt;Link&lt;/code&gt; headers in a certain format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1dc464df7d06a141bb8bdc7bc6464db381a390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; uses the library of &lt;a href=&quot;https://nghttp2.org&quot;&gt;nghttp2&lt;/a&gt; as its implementation base. In order to build &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; you need at least version 1.2.1 of &lt;code&gt;libnghttp2&lt;/code&gt; installed on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267c448d123a018d67cab7211f5b45011aba912e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; will not work around this limit by default. The reason is that &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; is today only chosen, if you run processing engines that are not prepared for multi-threading, e.g. will crash with more than one request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e872790db5261332f113478660596489d6da808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_include#xbithack&quot;&gt;XBitHack&lt;/a&gt;&lt;/code&gt; tells Apache to parse files for SSI directives if they have the execute bit set. So, to add SSI directives to an existing page, rather than having to change the file name, you would just need to make the file executable using &lt;code&gt;chmod&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb867d05cb6540b43ba156f288883e6a2640b8bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt;, with corresponding dependency on openldap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d6f902b7086b96380ce1b19bcd5ee44039119b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_lua&quot;&gt;mod_lua&lt;/a&gt;&lt;/code&gt; module, with corresponding dependency on lua.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bcb3cc7c7ddcedae6e0a2f480b2b27b3e4f2a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_nw_ssl#nwssltrustedcerts&quot;&gt;NWSSLTrustedCerts&lt;/a&gt;&lt;/code&gt; - Adds trusted certificates that are used to create secure connections to proxied servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac38674e7994bb7b9ac2c90fd46654e54b7043da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_nw_ssl#nwsslupgradeable&quot;&gt;NWSSLUpgradeable&lt;/a&gt;&lt;/code&gt; - Allow a connection created on the specified address/port to be upgraded to an SSL connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0190e8948d4ab48f02f85ab4675cf203dac2879a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_nw_ssl#securelisten&quot;&gt;SecureListen&lt;/a&gt;&lt;/code&gt; - Enables SSL encryption for a specified port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f003d4c6623e01104045b4e3b5d89f10e4e03a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_proxy_html&quot;&gt;mod_proxy_html&lt;/a&gt;&lt;/code&gt; module, with corresponding dependency on libxml2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d275c1ec7612e9caba4b2172f07a8c066e347037" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; is frequently used to take a particular action based on the presence or absence of a particular environment variable or request header. This can be done more efficiently using the &lt;code&gt;&lt;a href=&quot;../mod/core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c536c56d001596bc8c89afd3532463bef84659ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; provides a way to modify incoming URL requests, dynamically, based on &lt;a href=&quot;intro#regex&quot;&gt;regular expression&lt;/a&gt; rules. This allows you to map arbitrary URLs onto your internal URL structure in any way you like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e781d5eac5deb3a08f5cd69dedaba698e12b337a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; should be considered a last resort, when other alternatives are found wanting. Using it when there are simpler alternatives leads to configurations which are confusing, fragile, and hard to maintain. Understanding what other alternatives are available is a very important step towards &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; mastery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4dd838140c1b39b9011e3169414b710699e2db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; provides the &lt;a href=&quot;flags#flag_p&quot;&gt;[P]&lt;/a&gt; flag to pass rewritten URIs through &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daab026dd032b06f6ac777292bd50c4a4604e6f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_socache_dc&quot;&gt;mod_socache_dc&lt;/a&gt;&lt;/code&gt; module, with corresponding dependency on distcache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5820f464b2e4a086fd57d2135b2e410cb6cb66bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; can log extremely verbose debugging information to the error log, when its &lt;code&gt;&lt;a href=&quot;../mod/core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; is set to the higher trace levels. On the other hand, on a very busy server, level &lt;code&gt;info&lt;/code&gt; may already be too much. Remember that you can configure the &lt;code&gt;&lt;a href=&quot;../mod/core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; per module to suite your needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9e202819bcef9d380465e4fc0017fa650ed95e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; module, with corresponding dependency on openssl.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788bd1af3e6b3f8eeb819b655983badb40a40f57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mod_suexec#suexecusergroup&quot;&gt;SuexecUserGroup&lt;/a&gt;&lt;/code&gt; may be used inside a VirtualHost directive if the &lt;a href=&quot;../suexec&quot;&gt;suEXEC wrapper&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8488ac14ee1b0133a0fcdcd1e6c1f4a0b4aef76d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mpm_common#maxconnectionsperchild&quot;&gt;MaxConnectionsPerChild&lt;/a&gt;&lt;/code&gt; - Like the Unix directive, this controls how many connections a worker thread will serve before exiting. The recommended default, &lt;code&gt;MaxConnectionsPerChild 0&lt;/code&gt;, causes the thread to continue servicing request indefinitely. It is recommended on NetWare, unless there is some specific reason, that this directive always remain set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c615eeb51444511b80adb8f6746d77ed77a8ebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mpm_common#maxconnectionsperchild&quot;&gt;MaxConnectionsPerChild&lt;/a&gt;&lt;/code&gt;: Like the Unix directive, this controls how many connections a single child process will serve before exiting. However, unlike on Unix, a replacement process is not instantly available. Use the default &lt;code&gt;MaxConnectionsPerChild 0&lt;/code&gt;, unless instructed to change the behavior to overcome a memory leak in third party modules or in-process applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15b016bbeff9e8fbaf3e906b19bf898b62d596c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mpm_common#maxsparethreads&quot;&gt;MaxSpareThreads&lt;/a&gt;&lt;/code&gt; - This directive instructs the server to begin terminating worker threads if the number of idle threads ever exceeds this value. The recommended default is &lt;code&gt;MaxSpareThreads 100&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19928f77e2f545a2e93fa45fc76482106140af6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mpm_common#minsparethreads&quot;&gt;MinSpareThreads&lt;/a&gt;&lt;/code&gt; - This directive instructs the server to spawn additional worker threads if the number of idle threads ever falls below this value. The recommended default is &lt;code&gt;MinSpareThreads 10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93c1796a0edc1c58ab86a5f8caf614741cf9c9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mpm_common#startthreads&quot;&gt;StartThreads&lt;/a&gt;&lt;/code&gt; - This directive tells the server how many threads it should start initially. The recommended default is &lt;code&gt;StartThreads 50&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0ca4cf5c78782804539199c4c65de739016570" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt;: This directive is new. It tells the server how many threads it should use. This is the maximum number of connections the server can handle at once, so be sure to set this number high enough for your site if you get a lot of hits. The recommended default is &lt;code&gt;ThreadsPerChild 150&lt;/code&gt;, but this must be adjusted to reflect the greatest anticipated number of simultaneous connections to accept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ebdfaffb8e14e76ed243403f1e77a45929640e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mpm_common#threadstacksize&quot;&gt;ThreadStackSize&lt;/a&gt;&lt;/code&gt; - This directive tells the server what size of stack to use for the individual worker thread. The recommended default is &lt;code&gt;ThreadStackSize 65536&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e5ecb02f088520936b888226c4be6a75a18f34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../mod/mpm_netware#maxthreads&quot;&gt;MaxThreads&lt;/a&gt;&lt;/code&gt; - This directive limits the total number of work threads to a maximum value. The recommended default is &lt;code&gt;ThreadsPerChild 250&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6efe615d7f76780cf98a45d875064304695070d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;../programs/htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt; will ask you for the password, and then ask you to type it again to confirm it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2cf3696fedaf1d81fad2a719a3eba6d9e93cf49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used to achieve similar results.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core#if&quot;&gt;&amp;lt;If&amp;gt;&lt;/a&gt;&lt;/code&gt; can be used to achieve similar results.</target>
        </trans-unit>
        <trans-unit id="49ee63451c5c84cfbf62532cecc7a76be80aeada" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;core#limitrequestbody&quot;&gt;LimitRequestBody&lt;/a&gt;&lt;/code&gt; only applies to request bodies that the server will spool to disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561cb5cfcf407eef1cd8330ae5384f9dbc4c316d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; can be used to configure a log level specific to mod_authnz_fcgi. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380445afc647ebd12904a82e672c4180d843ceb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; is based on the &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; MPM, which implements a hybrid multi-process multi-threaded server. A single control process (the parent) is responsible for launching child processes. Each child process creates a fixed number of server threads as specified in the &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; directive, as well as a listener thread which listens for connections and passes them to a worker thread for processing when they arrive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb43da4ac07d94d9666de70b28faafddde9e4aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_netware&quot;&gt;mpm_netware&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decc183ff19fec4ca9f4339e8ccd1324cf998016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3bbd5a91e9f899c96f79213fc0d41916a9a6b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_netware&quot;&gt;mpm_netware&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcc3a6b7b035c246395589133245ac5dcb4295b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81cd2b8da00ec253641d3562d36b4e241904559" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01707c8737f16757f0c80b3178e537212a61e1ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_netware&quot;&gt;mpm_netware&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf7e4bc638444b3452526b4042eea6dabac45a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_netware&quot;&gt;mpm_netware&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a387c1c95613f1b572ca6e2951b6e79213cab673" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpm_winnt&quot;&gt;mpm_winnt&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11337a12a0f93a33eac91ff5d22e3e2381f42af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8dfb219bb8e1251ba066082206b839b2d702d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; (except regular expressions) and &lt;code&gt;.htaccess&lt;/code&gt; done simultaneously (with &lt;code&gt;.htaccess&lt;/code&gt;, if allowed, overriding &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; (except regular expressions) and &lt;code&gt;.htaccess&lt;/code&gt; done simultaneously (with &lt;code&gt;.htaccess&lt;/code&gt;, if allowed, overriding &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="33b64d597ddf4ba9278932793caa301b29b3c28a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; (group 1 above) is processed in the order shortest directory component to longest. For example, &lt;code&gt;&amp;lt;Directory &quot;/var/web/dir&quot;&amp;gt;&lt;/code&gt; will be processed before &lt;code&gt;&amp;lt;Directory &quot;/var/web/dir/subdir&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; (group 1 above) is processed in the order shortest directory component to longest. For example, &lt;code&gt;&amp;lt;Directory &quot;/var/web/dir&quot;&amp;gt;&lt;/code&gt; will be processed before &lt;code&gt;&amp;lt;Directory &quot;/var/web/dir/subdir&quot;&amp;gt;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="5de39cc27640c4060beb7b178f431b55a3910320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/core#directorymatch&quot;&gt;&amp;lt;DirectoryMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&amp;lt;Directory &quot;~&quot;&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod/core#directorymatch&quot;&gt;&amp;lt;DirectoryMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&amp;lt;Directory &quot;~&quot;&amp;gt;&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="73457183cad9afa9f73994b46930d8ae3d104959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/core#filesmatch&quot;&gt;&amp;lt;FilesMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; done simultaneously</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod/core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/core#filesmatch&quot;&gt;&amp;lt;FilesMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; done simultaneously</target>
        </trans-unit>
        <trans-unit id="42cd058b882d3fa9dd0a18499125403abfc0534e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/core#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/core#ifmodule&quot;&gt;&amp;lt;IfModule&amp;gt;&lt;/a&gt;&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;mod/mod_version#ifversion&quot;&gt;&amp;lt;IfVersion&amp;gt;&lt;/a&gt;&lt;/code&gt; can apply negative conditions by preceding their test with &quot;!&quot;. Also, these sections can be nested to achieve more complex restrictions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod/core#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/core#ifmodule&quot;&gt;&amp;lt;IfModule&amp;gt;&lt;/a&gt;&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;mod/mod_version#ifversion&quot;&gt;&amp;lt;IfVersion&amp;gt;&lt;/a&gt;&lt;/code&gt; can apply negative conditions by preceding their test with &quot;!&quot;. Also, these sections can be nested to achieve more complex restrictions.</target>
        </trans-unit>
        <trans-unit id="e1d2df35691749ab5964a76665d591128601db4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; done simultaneously</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; done simultaneously</target>
        </trans-unit>
        <trans-unit id="1e9184fc3b4c8fa752bcf99bb05ce5f906f992a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_actions&quot;&gt;mod_actions&lt;/a&gt;&lt;/code&gt; - Maps a request to a CGI script based on the request method, or resource MIME type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85439f743a978e50f42bdc3ab46580e4fe25b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_alias#alias&quot;&gt;&amp;lt;Alias&amp;gt;&lt;/a&gt;&lt;/code&gt;es on the other hand, are mapped vice-versa:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod/mod_alias#alias&quot;&gt;&amp;lt;Alias&amp;gt;&lt;/a&gt;&lt;/code&gt;es on the other hand, are mapped vice-versa:</target>
        </trans-unit>
        <trans-unit id="6445a40ba9e898158c22cc1fb33a87dc4787e57a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; and its provider modules &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; provide intelligent, HTTP-aware caching. The content itself is stored in the cache, and mod_cache aims to honor all of the various HTTP headers and options that control the cacheability of content as described in &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html&quot;&gt;Section 13 of RFC2616&lt;/a&gt;. &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; is aimed at both simple and complex caching configurations, where you are dealing with proxied content, dynamic local content or have a need to speed up access to local files on a potentially slow disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3376b589e5b6cba6dce95664c64020c1984019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; will only serve the cached content to requesters with accept-language and accept-charset headers matching those of the original request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d025ba0df710b5c7b258851c2e5ca1a56785f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; will run before &lt;code&gt;&lt;a href=&quot;mod/mod_env&quot;&gt;mod_env&lt;/a&gt;&lt;/code&gt; and, when successful, will deliver the content without it. In that case a cache hit will log &lt;code&gt;-&lt;/code&gt;, while a cache miss will log &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc1e0399ad2b2e908b9627d027da6ff594f5ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlevels&quot;&gt;CacheDirLevels&lt;/a&gt;&lt;/code&gt; specifies how many levels of subdirectory there should be, and &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk#cachedirlength&quot;&gt;CacheDirLength&lt;/a&gt;&lt;/code&gt; specifies how many characters should be in each directory. With the example settings given above, the hash would be turned into a filename prefix as &lt;code&gt;/var/cache/apache/x/y/TGxSMO2b68mBCykqkp1w&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfb9b3628990ca028914c27134b1990e4224c8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt;, transcodes between different character sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48a8b69b0322bc355843430eadcc2edd22ba015" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt;, implements compression/decompression on the fly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a08d6c453dff35a3c769b119ae46ceb1bf8cc63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_dir&quot;&gt;mod_dir&lt;/a&gt;&lt;/code&gt; - Provides basic mapping of a trailing slash into an index file such as &lt;code&gt;index.html&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45351a2c3318a25d986015a5c7c200bfe4fcfb2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_dir&quot;&gt;mod_dir&lt;/a&gt;&lt;/code&gt; provides &lt;code&gt;&lt;a href=&quot;mod/mod_dir#fallbackresource&quot;&gt;FallbackResource&lt;/a&gt;&lt;/code&gt;, which can be used to map virtual URIs to a real resource, which then serves them. This is a very useful replacement for &lt;code&gt;&lt;a href=&quot;mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; when implementing a 'front controller'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963004b875c3ded12cbbc3578049e28629b255e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_ext_filter&quot;&gt;mod_ext_filter&lt;/a&gt;&lt;/code&gt;, runs an external program as a filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4fa9450d231891275d60c1cb41f389c0dda4cb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt; offers the ability to pre-load files into memory on server startup, and can improve access times and save file handles on files that are accessed often, as there is no need to go to disk on each request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04960c5e9940a5db6b20d5f047bcbf7ab84b935e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt; provides the &lt;code&gt;&lt;a href=&quot;mod/mod_file_cache#mmapfile&quot;&gt;MMapFile&lt;/a&gt;&lt;/code&gt; directive, which allows you to have httpd map a static file's contents into memory at start time (using the mmap system call). httpd will use the in-memory contents for all subsequent accesses to this file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301deecec49107f9b861b93cb298b4383964d8ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt;, included in Apache 2.1 and later, enables the filter chain to be configured dynamically at run time. So for example you can set up a proxy to rewrite HTML with an HTML filter and JPEG images with a completely separate filter, despite the proxy having no prior information about what the origin server will send. This works by using a filter harness, that dispatches to different providers according to the actual contents at runtime. Any filter may be either inserted directly in the chain and run unconditionally, or used as a provider and inserted dynamically. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e01ef65e832fa402a41cc209070a15c16cb9184b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_imagemap&quot;&gt;mod_imagemap&lt;/a&gt;&lt;/code&gt; - Maps a request to a URL based on where a user clicks on an image embedded in a HTML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a25b882acc4968d7586b481fb6fed02f6ed9e40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; must be enabled to use this feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f0617ddb366fa25744ff5068ad5cdb576b6154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt;, implements server-side includes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afb48cc6cc80dbefd989bebf2def7e578d8a68f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_log_forensic&quot;&gt;mod_log_forensic&lt;/a&gt;&lt;/code&gt; provides for forensic logging of client requests. Logging is done before and after processing a request, so the forensic log contains two log lines for each request. The forensic logger is very strict with no customizations. It can be an invaluable debugging and security tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1ab5af427a0d75c96c4b317bb3a8875ac70bf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_logio&quot;&gt;mod_logio&lt;/a&gt;&lt;/code&gt; adds in two additional &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; fields (%I and %O) that log the actual number of bytes received and sent on the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ab72394aaea2380cfdf98e97913526001dd61e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; - Selects an appropriate document based on client preferences such as language or content compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca761790f9ce3dc82f4adc435b6d7a8f555823b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_reflector&quot;&gt;mod_reflector&lt;/a&gt;&lt;/code&gt; accepts POST requests from clients, and reflects the content request body received within the POST request back in the response, passing through the output filter stack on the way back to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94c6bb015d4ad1e2130907731efdb30d5ef1174" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt;, implements SSL encryption (https).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a7b84909d3eb67d6b893f05eb4af511db14e3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, depending on platform capabilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e21a5953f2e09abe4045ff982887423053a6cfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt; is designed to handle simple URL manipulation tasks. For more complicated tasks such as manipulating the query string, use the tools provided by &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288916b534720ecbd9daca699c47fae13d0ff25c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_allowmethods&quot;&gt;mod_allowmethods&lt;/a&gt;&lt;/code&gt; was written to replace the rather kludgy implementation of &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;Limit&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core#limitexcept&quot;&gt;LimitExcept&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feab1a12b520efc2d427e4a86dfe55ad4be8810b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_auth_digest&quot;&gt;mod_auth_digest&lt;/a&gt;&lt;/code&gt; only works properly on platforms where APR supports shared memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d9d2e6a2be1e453ec45893ff2cdbabe7559b72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; addresses this by allowing the method and body of the original request to be embedded in the login form. If authentication is successful, the original method and body will be retried by Apache httpd, preserving the state of the original request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85f440319f88d0b8ed05628a1516a6b1a5675d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; registers both an authn_ldap authentication provider and an authz_ldap authorization handler. The authn_ldap authentication provider can be enabled through the &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; directive using the &lt;code&gt;ldap&lt;/code&gt; value. The authz_ldap handler extends the &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive's authorization types by adding &lt;code&gt;ldap-user&lt;/code&gt;, &lt;code&gt;ldap-dn&lt;/code&gt; and &lt;code&gt;ldap-group&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37766a69a72d0b2ac5287d36401d94dd3cd8e2ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; supports the following features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922ad8a92a50b43f1ab76e81c200d06472565e91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; uses the following directives during the compare phase:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97655f4b00486c1b1282309be3b498ca3e5ac2bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt; provides a high-level interface to authorization that is much easier to use than using into the relevant hooks directly. The first argument to the &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive gives the name of the responsible authorization provider. For any &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; line, &lt;code&gt;&lt;a href=&quot;mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt; will call the authorization provider of the given name, passing the rest of the line as parameters. The provider will then check authorization and pass the result as return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d29100b269bb46fb3ca1a28e2c69dfba132449c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt; provides some generic authorization providers which can be used with the &lt;code&gt;&lt;a href=&quot;#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6043a3f68b98b98b350f24937626847ddc4672bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; works correctly. Since it doesn't emit the path in the link, it would point to the wrong path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ed3d177bf3e0749455042fc0c20ba766146b57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; implements an &lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt; compliant &lt;strong&gt;HTTP content caching filter&lt;/strong&gt;, with support for the caching of content negotiated responses containing the Vary header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0499eb6c1bbd58fa4b06b192defeab90add0d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; requires the services of one or more storage management modules. The following storage management modules are included in the base Apache distribution:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088267d3359bcba285048f61c84f7bf8f93a1aca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; implements a disk based storage manager for &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406bd24122ed224fbed9fa3d150cd5d313b83e15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; requires the services of &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt;, which must be loaded before mod_cache_disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5466f87806978a3e3e414dd35b6e647b703f5c70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; uses the sendfile feature to serve files from the cache when supported by the platform, and when enabled with &lt;code&gt;&lt;a href=&quot;core#enablesendfile&quot;&gt;EnableSendfile&lt;/a&gt;&lt;/code&gt;. However, per-directory and .htaccess configuration of &lt;code&gt;&lt;a href=&quot;core#enablesendfile&quot;&gt;EnableSendfile&lt;/a&gt;&lt;/code&gt; are ignored by &lt;code&gt;&lt;a href=&quot;mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; as the corresponding settings are not available to the module when a request is being served from the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0630fa0059aa50d5713d04b139441535aee6c6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_cache_socache&quot;&gt;mod_cache_socache&lt;/a&gt;&lt;/code&gt; implements a shared object cache (socache) based storage manager for &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d58303fd87b67eb0cd100e113f0fd51834d3da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_cache_socache&quot;&gt;mod_cache_socache&lt;/a&gt;&lt;/code&gt; requires the services of &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt;, which must be loaded before &lt;code&gt;&lt;a href=&quot;mod_cache_socache&quot;&gt;mod_cache_socache&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d8f691bcc9bba1a05db226e45390eb5f795cb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_cgid&quot;&gt;mod_cgid&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6fecae33be0c00f0650abd27e83112c81c34eea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; allows the server to change the character set of responses before sending them to the client. In an EBCDIC environment, Apache always translates HTTP protocol content (e.g. response headers) from the code page of the Apache process locale to ISO-8859-1, but not the body of responses. In any environment, &lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; can be used to specify that response bodies should be translated. For example, if files are stored in EBCDIC, then &lt;code&gt;&lt;a href=&quot;mod_charset_lite&quot;&gt;mod_charset_lite&lt;/a&gt;&lt;/code&gt; can translate them to ISO-8859-1 before sending them to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f47b0b85d8c69095a469125bd9ee16e6ff66f246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_dav&quot;&gt;mod_dav&lt;/a&gt;&lt;/code&gt; may be subject to various kinds of denial-of-service attacks. The &lt;code&gt;&lt;a href=&quot;core#limitxmlrequestbody&quot;&gt;LimitXMLRequestBody&lt;/a&gt;&lt;/code&gt; directive can be used to limit the amount of memory consumed in parsing large DAV requests. The &lt;code&gt;&lt;a href=&quot;#davdepthinfinity&quot;&gt;DavDepthInfinity&lt;/a&gt;&lt;/code&gt; directive can be used to prevent &lt;code&gt;PROPFIND&lt;/code&gt; requests on a very large repository from consuming large amounts of memory. Another possible denial-of-service attack involves a client simply filling up all available disk space with many large files. There is no direct way to prevent this in Apache, so you should avoid giving DAV access to untrusted users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff85e52a19d924caccb053a5083757fc73f05700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_dbd&quot;&gt;mod_dbd&lt;/a&gt;&lt;/code&gt; exports five functions for other modules to use. The API is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907dc9c9ca67319f6930a4a6c1c7ed5354862600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_dbd&quot;&gt;mod_dbd&lt;/a&gt;&lt;/code&gt; manages SQL database connections using &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt;. It provides database connections on request to modules requiring SQL database functions, and takes care of managing databases with optimal efficiency and scalability for both threaded and non-threaded MPMs. For details, see the &lt;a href=&quot;http://apr.apache.org/&quot;&gt;APR&lt;/a&gt; website and this overview of the &lt;a href=&quot;http://people.apache.org/~niq/dbd.html&quot;&gt;Apache DBD Framework&lt;/a&gt; by its original developer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4c52d9c2235ae397709442e0b90b6f4b345065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_dbd&quot;&gt;mod_dbd&lt;/a&gt;&lt;/code&gt; supports SQL prepared statements on behalf of modules that may wish to use them. Each prepared statement must be assigned a name (label), and they are stored in a hash: the &lt;code&gt;prepared&lt;/code&gt; field of an &lt;code&gt;ap_dbd_t&lt;/code&gt;. Hash entries are of type &lt;code&gt;apr_dbd_prepared_t&lt;/code&gt; and can be used in any of the apr_dbd prepared statement SQL query or select commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0706208f0be31e08c37d2b0d44671f9742596a9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_ext_filter&quot;&gt;mod_ext_filter&lt;/a&gt;&lt;/code&gt; presents a simple and familiar programming model for &lt;a href=&quot;../filter&quot;&gt;filters&lt;/a&gt;. With this module, a program which reads from stdin and writes to stdout (i.e., a Unix-style filter command) can be a filter for Apache. This filtering mechanism is much slower than using a filter which is specially written for the Apache API and runs inside of the Apache server process, but it does have the following benefits:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d6278dca39c6e1eca0035eb983e58e1b98d3fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt; caches a list of statically configured files via &lt;code&gt;&lt;a href=&quot;#mmapfile&quot;&gt;MMapFile&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#cachefile&quot;&gt;CacheFile&lt;/a&gt;&lt;/code&gt; directives in the main server configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d23fdda0505b7e8d7b8c1d7d821f049c21d664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; aims to offer generic handling of these details of filter implementation, reducing the complexity required of content filter modules. This is work-in-progress; the &lt;code&gt;&lt;a href=&quot;#filterprotocol&quot;&gt;FilterProtocol&lt;/a&gt;&lt;/code&gt; implements some of this functionality for back-compatibility with Apache 2.0 modules. For httpd 2.1 and later, the &lt;code&gt;ap_register_output_filter_protocol&lt;/code&gt; and &lt;code&gt;ap_filter_protocol&lt;/code&gt; API enables filter modules to declare their own behaviour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916bedb1be365ef23d270dab649ecfc1607faa21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; by contrast gives server administrators a great deal of flexibility in configuring the filter chain. In fact, filters can be inserted based on complex boolean &lt;a href=&quot;../expr&quot;&gt;expressions&lt;/a&gt; This generalises the limited flexibility offered by &lt;code&gt;AddOutputFilterByType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d5c5387ebbab1340ad3ef334d156a09d9c785f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; will record buckets and brigades passing through the filter to the error log, before the provider has processed them. This is similar to the information generated by &lt;a href=&quot;http://apache.webthing.com/mod_diagnostics/&quot;&gt;mod_diagnostics&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b754fce21c7e6fbd68ffd0d27f84f01fe30c61d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; works by introducing indirection into the filter chain. Instead of inserting filters in the chain, we insert a filter harness which in turn dispatches conditionally to a filter provider. Any content filter may be used as a provider to &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt;; no change to existing filter modules is required (although it may be possible to simplify them).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb2472225c6bf3fded29d2fdd1116bf3510914f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; works by introducing indirection into the filter chain. Instead of inserting filters in the chain, we insert a filter harness which in turn dispatches conditionally to a filter provider. Any content filter may be used as a provider to &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt;; no change to existing filter modules is required (although it may be possible to simplify them). There can be multiple providers for one filter, but no more than one provider will run for any single request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692253e73b7f8d51bc339b3ad99a6ef15a4f4718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; can be applied either early or late in the request. The normal mode is late, when &lt;em&gt;Request&lt;/em&gt; Headers are set immediately before running the content generator and &lt;em&gt;Response&lt;/em&gt; Headers just as the response is sent down the wire. Always use Late mode in an operational server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f37ecdb7071146d2886fc7b38c144cc16cfb5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_heartbeat&quot;&gt;mod_heartbeat&lt;/a&gt;&lt;/code&gt; itself is loaded on the origin server(s) that serve requests through the proxy server(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51e7bd21de87f46c319f68d05713ca16fad10a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_heartbeat&quot;&gt;mod_heartbeat&lt;/a&gt;&lt;/code&gt; sends multicast messages to a &lt;code&gt;&lt;a href=&quot;mod_heartmonitor&quot;&gt;mod_heartmonitor&lt;/a&gt;&lt;/code&gt; listener that advertises the servers current connection count. Usually, &lt;code&gt;&lt;a href=&quot;mod_heartmonitor&quot;&gt;mod_heartmonitor&lt;/a&gt;&lt;/code&gt; will be running on a proxy server with &lt;code&gt;&lt;a href=&quot;mod_lbmethod_heartbeat&quot;&gt;mod_lbmethod_heartbeat&lt;/a&gt;&lt;/code&gt; loaded, which allows &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; to use the &quot;heartbeat&quot; &lt;em&gt;lbmethod&lt;/em&gt; inside of &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d29a179cd3833460bcef9e1d3280b13ec627be9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_heartmonitor&quot;&gt;mod_heartmonitor&lt;/a&gt;&lt;/code&gt; listens for server status messages generated by &lt;code&gt;&lt;a href=&quot;mod_heartbeat&quot;&gt;mod_heartbeat&lt;/a&gt;&lt;/code&gt; enabled origin servers and makes their status available to &lt;code&gt;&lt;a href=&quot;mod_lbmethod_heartbeat&quot;&gt;mod_lbmethod_heartbeat&lt;/a&gt;&lt;/code&gt;. This allows &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; to use the &quot;heartbeat&quot; &lt;em&gt;lbmethod&lt;/em&gt; inside of &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381a141357b9b3e2dd9ac9f182200f6b38cdab0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; provides its information by reading the parsed configuration, rather than reading the original configuration file. There are a few limitations as a result of the way the parsed configuration tree is created:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0830cfaba0a3c204164db587c299850abb6bcec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; has a content handler that allows administrators to monitor the cache performance. The name of the content handler is &lt;code&gt;ldap-status&lt;/code&gt;, so the following directives could be used to access the &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; cache information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0f109d6e16bfbdc25eb95ba48d10af00422c23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; stores the username, the DN retrieved, the password used to bind, and the time of the bind in the cache. Whenever a new connection is initiated with the same username, &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; compares the password of the new connection with the password in the cache. If the passwords match, and if the cached entry is not too old, &lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; bypasses the search/bind phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c58a015ca930b631f8fcd19032fab91a86b80b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_ldap&quot;&gt;mod_ldap&lt;/a&gt;&lt;/code&gt; supports two types of LDAP caching during the search/bind phase with a &lt;em&gt;search/bind cache&lt;/em&gt; and during the compare phase with two &lt;em&gt;operation caches&lt;/em&gt;. Each LDAP URL that is used by the server has its own set of these three caches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae7bb3ca8e5bb6516a3a6e7e7ae33a10e49fdff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will look at your server configuration and try to figure out which of those are available. Then it can select the proper ACME challenge to create a certificate for your site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4688161f62c285ab80809e5e41fa98c597783527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_privileges&quot;&gt;mod_privileges&lt;/a&gt;&lt;/code&gt; introduces new security concerns in situations where &lt;strong&gt;untrusted code&lt;/strong&gt; may be run &lt;strong&gt;within the webserver process&lt;/strong&gt;. This applies to untrusted modules, and scripts running under modules such as mod_php or mod_perl. Scripts running externally (e.g. as CGI or in an appserver behind mod_proxy or mod_jk) are NOT affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed4086f2db93c31bec9c6490c3afc5c3a018cca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_privileges&quot;&gt;mod_privileges&lt;/a&gt;&lt;/code&gt; raises security issues similar to those of &lt;a href=&quot;../suexec&quot;&gt;suexec&lt;/a&gt;. But unlike suexec, it applies not only to CGI programs but to the entire request processing cycle, including in-process applications and subprocesses. It is ideally suited to running PHP applications under &lt;strong&gt;mod_php&lt;/strong&gt;, which is also incompatible with threaded MPMs. It is also well-suited to other in-process scripting applications such as &lt;strong&gt;mod_perl&lt;/strong&gt;, &lt;strong&gt;mod_python&lt;/strong&gt;, and &lt;strong&gt;mod_ruby&lt;/strong&gt;, and to applications implemented in C as apache modules where privilege separation is an issue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2201c11537c4a14a5b1c805d3a787e410389b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; and related modules implement a proxy/gateway for Apache HTTP Server, supporting a number of popular protocols as well as several different load balancing algorithms. Third-party modules can add support for additional protocols and load balancing algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0de76327afeb1e6cb4dbb62f02033f4543637b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; extension for &lt;code&gt;CONNECT&lt;/code&gt; request handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fe2f5acb1bc7ef4a06d27793a26206ab57c7f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; extension for load balancing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0591f865c23aab93e0741cda5ae5d04b13353c62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, which provides basic proxy capabilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b776c0d86c6c2b3619a9bb61ada12b549ad02f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt; modifies any &lt;code&gt;Location&lt;/code&gt; (redirect) headers that are sent by the back-end server, and, in this example, &lt;code&gt;Substitute&lt;/code&gt; takes care of the rest of the problem by fixing up the HTML response as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edac92bf1705f1278ff8ce0371a053f1633e2977" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; and one or more balancer modules if load balancing is required. (See &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; for more information.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9822fc5f391adf95219c8a80625c1bc75724bcf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy_connect&quot;&gt;mod_proxy_connect&lt;/a&gt;&lt;/code&gt; creates the following request notes for logging using the &lt;code&gt;%{VARNAME}n&lt;/code&gt; format in &lt;code&gt;&lt;a href=&quot;mod_log_config#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3026762330b1f884f31bd256a05d8f7b6079c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy_fcgi&quot;&gt;mod_proxy_fcgi&lt;/a&gt;&lt;/code&gt; disables connection reuse by default, so after a request has been completed the connection will NOT be held open by that httpd child process and won't be reused. If the FastCGI application is able to handle concurrent connections from httpd, you can opt-in to connection reuse as shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceb05853369ed8fcaabbd46e5d7978459a231e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy_http&quot;&gt;mod_proxy_http&lt;/a&gt;&lt;/code&gt; creates the following request notes for logging using the &lt;code&gt;%{VARNAME}n&lt;/code&gt; format in &lt;code&gt;&lt;a href=&quot;mod_log_config#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#errorlogformat&quot;&gt;ErrorLogFormat&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d408b87dfc27d42560a7b77311ef2871e5daa0aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy_http2&quot;&gt;mod_proxy_http2&lt;/a&gt;&lt;/code&gt; supports HTTP/2 only, it does &lt;em&gt;not&lt;/em&gt; provide any downgrades to HTTP/1.1. This means that the backend needs to support HTTP/2 because HTTP/1.1 will not be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d72e38e46cc1918fa1da1a9e39865a9a2988ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy_http2&quot;&gt;mod_proxy_http2&lt;/a&gt;&lt;/code&gt; works with incoming fronted requests using HTTP/1.1 or HTTP/2. In both cases, requests proxied to the same backend are sent over a single TCP connection whenever possible (namely when the connection can be re-used).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d97d60c597c919ba6744227fa0f028a0f717e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_proxy_scgi&quot;&gt;mod_proxy_scgi&lt;/a&gt;&lt;/code&gt; does the same as &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; in this regard, except that you can turn off the feature or specify the use of a header other than &lt;code&gt;Location&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6525109ae46dde1292acee9881f2fb739d51bb96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; offers detailed logging of its actions at the &lt;code&gt;trace1&lt;/code&gt; to &lt;code&gt;trace8&lt;/code&gt; log levels. The log level can be set specifically for &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;&lt;a href=&quot;core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; directive: Up to level &lt;code&gt;debug&lt;/code&gt;, no actions are logged, while &lt;code&gt;trace8&lt;/code&gt; means that practically all actions are logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c0f8ffd3e41fb45fefbcca1c89137e8c2f222a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; operates on the full URL path, including the path-info section. A rewrite rule can be invoked in &lt;code&gt;httpd.conf&lt;/code&gt; or in &lt;code&gt;.htaccess&lt;/code&gt;. The path generated by a rewrite rule can include a query string, or can lead to internal sub-processing, external request redirection, or internal proxy throughput.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14dea8d8e2384b2d6688c5494de24b82613bba5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; provides a flexible and powerful way to manipulate URLs using an unlimited number of rules. Each rule can have an unlimited number of attached rule conditions, to allow you to rewrite URL based on server variables, environment variables, HTTP headers, or time stamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357b6c2a88e2605cd780e21dae6d75faa7fdda63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_sed&quot;&gt;mod_sed&lt;/a&gt;&lt;/code&gt; is an in-process content filter. The &lt;code&gt;&lt;a href=&quot;mod_sed&quot;&gt;mod_sed&lt;/a&gt;&lt;/code&gt; filter implements the &lt;code&gt;sed&lt;/code&gt; editing commands implemented by the Solaris 10 &lt;code&gt;sed&lt;/code&gt; program as described in the &lt;a href=&quot;http://www.gnu.org/software/sed/manual/sed.txt&quot;&gt;manual page&lt;/a&gt;. However, unlike &lt;code&gt;sed&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_sed&quot;&gt;mod_sed&lt;/a&gt;&lt;/code&gt; doesn't take data from standard input. Instead, the filter acts on the entity data sent between client and server. &lt;code&gt;&lt;a href=&quot;mod_sed&quot;&gt;mod_sed&lt;/a&gt;&lt;/code&gt; can be used as an input or output filter. &lt;code&gt;&lt;a href=&quot;mod_sed&quot;&gt;mod_sed&lt;/a&gt;&lt;/code&gt; is a content filter, which means that it cannot be used to modify client or server http headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcb73498e3291c3a28686934f8a60c39055a588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_slotmem_plain&quot;&gt;mod_slotmem_plain&lt;/a&gt;&lt;/code&gt; is a memory provider which provides for creation and access to a plain memory segment in which the datasets are organized in &quot;slots.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684710898f4dba5090ec2b3e7eb029b4e93173ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_slotmem_plain&quot;&gt;mod_slotmem_plain&lt;/a&gt;&lt;/code&gt; provides the following API functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7c45619cb685dbc8a52e8a6fd598323c95d670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_slotmem_shm&quot;&gt;mod_slotmem_shm&lt;/a&gt;&lt;/code&gt; is a memory provider which provides for creation and access to a shared memory segment in which the datasets are organized in &quot;slots.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce4d19dd6391809969a3de030c95c6c7325e8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_slotmem_shm&quot;&gt;mod_slotmem_shm&lt;/a&gt;&lt;/code&gt; provides the following API functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f6ca40397ce94ee9e739d532496b15229ccdfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_socache_dc&quot;&gt;mod_socache_dc&lt;/a&gt;&lt;/code&gt; is a shared object cache provider which provides for creation and access to a cache backed by the &lt;a href=&quot;http://distcache.sourceforge.net/&quot;&gt;distcache&lt;/a&gt; distributed session caching libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acab75b17ffb7d3b959d257670d37c6b69a32b5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; provides a few authentication providers for use with &lt;code&gt;&lt;a href=&quot;mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt;'s &lt;code&gt;&lt;a href=&quot;mod_authz_core#require&quot;&gt;Require&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0317852d6c227e52f187c2b4ad41ee29ff144942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; sets &quot;notes&quot; for the request which can be used in logging with the &lt;code&gt;%{&lt;em&gt;name&lt;/em&gt;}n&lt;/code&gt; format string in &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c35e6d489fe2af392d242db60a3aaefeb2767b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_substitute&quot;&gt;mod_substitute&lt;/a&gt;&lt;/code&gt; provides a mechanism to perform both regular expression and fixed string substitutions on response bodies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827a645746ee9c47b73ce91bcdf7440ab5c85cad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_unique_id&quot;&gt;mod_unique_id&lt;/a&gt;&lt;/code&gt; is no longer required since version 2.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290f74fc58891659d5356ab3206a61f501029bf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_usertrack&quot;&gt;mod_usertrack&lt;/a&gt;&lt;/code&gt; sets a cookie which can be logged via &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; configurable logging formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4622171f3603c03dea1e05c1db2241b46c7641c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mod_watchdog&quot;&gt;mod_watchdog&lt;/a&gt;&lt;/code&gt; defines programmatic hooks for other modules to periodically run tasks. These modules can register handlers for &lt;code&gt;&lt;a href=&quot;mod_watchdog&quot;&gt;mod_watchdog&lt;/a&gt;&lt;/code&gt; hooks. Currently, the following modules in the Apache distribution use this functionality:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04f85b33798b5486536b2165b5bd496f81d7487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mpm_common#maxconnectionsperchild&quot;&gt;MaxConnectionsPerChild&lt;/a&gt;&lt;/code&gt; controls how frequently the server recycles processes by killing old ones and launching new ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af62e7ec5d501d4458374b4585a29630d3022ea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mpm_common#maxconnectionsperchild&quot;&gt;MaxConnectionsPerChild&lt;/a&gt;&lt;/code&gt; controls how frequently the server recycles processes by killing old ones and launching new ones. On the NetWare OS it is highly recommended that this directive remain set to 0. This allows worker threads to continue servicing requests indefinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7196d7cff22e92e32e1531cd4376169dc0bf5e82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; was called &lt;code&gt;MaxClients&lt;/code&gt; prior to version 2.3.13. The above value shows that the old name did not accurately describe its meaning for the event MPM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ca2fb74732f34f5eeaa0990849d7796aff237e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mpm_netware&quot;&gt;mpm_netware&lt;/a&gt;&lt;/code&gt; uses a default of &lt;code&gt;MinSpareThreads 10&lt;/code&gt; and, since it is a single-process MPM, tracks this on a server-wide bases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483dfa29fd379b41e5545c95f861cb2ee3db0a33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mpm_netware&quot;&gt;mpm_netware&lt;/a&gt;&lt;/code&gt; wants the value to be greater than &lt;code&gt;&lt;a href=&quot;#minsparethreads&quot;&gt;MinSpareThreads&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ee6c86f9032978670742373db12145c98dbff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt; works similar to &lt;code&gt;&lt;a href=&quot;mpm_netware&quot;&gt;mpm_netware&lt;/a&gt;&lt;/code&gt;. For &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt; the default value is &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b85fded26a3f117934b4268245c038aaab59dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt; works similar to &lt;code&gt;&lt;a href=&quot;mpm_netware&quot;&gt;mpm_netware&lt;/a&gt;&lt;/code&gt;. For &lt;code&gt;&lt;a href=&quot;mpmt_os2&quot;&gt;mpmt_os2&lt;/a&gt;&lt;/code&gt; the default value is &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba708d8cb69b6c5e92df579a5372d03eaf5d860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; MPMs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749f8db3cacdc3ecc19c18a166599698eaf06ab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; use a default of &lt;code&gt;MinSpareThreads 75&lt;/code&gt; and deal with idle threads on a server-wide basis. If there aren't enough idle threads in the server then child processes are created until the number of idle threads is greater than &lt;var&gt;number&lt;/var&gt;. Additional processes/threads might be created if &lt;code&gt;&lt;a href=&quot;#listencoresbucketsratio&quot;&gt;ListenCoresBucketsRatio&lt;/a&gt;&lt;/code&gt; is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477e90241b5645b4461bf492a46892a0d2cdb329" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;em&gt;varname&lt;/em&gt;&lt;/code&gt;, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c927e1d0984635f6b1930358f6f412d8ddb053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;=&lt;/code&gt; or &lt;code&gt;==&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;=&lt;/code&gt; or &lt;code&gt;==&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0ee53bf905a269ad12b65ccf68ba920f46e55cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AcceptFilter&lt;/code&gt; is implemented in the MPM and has a different type of control over handling of new connections. (Refer to the &lt;code&gt;&lt;a href=&quot;core#acceptfilter&quot;&gt;AcceptFilter&lt;/a&gt;&lt;/code&gt; documentation for details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff2daa8d1f92a3cd840e4c2d40aa920c7e32d5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AddAlt&lt;/code&gt; provides the alternate text to display for a file, instead of an icon, for &lt;code&gt;&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;FancyIndexing&lt;/a&gt;&lt;/code&gt;. &lt;var&gt;File&lt;/var&gt; is a file extension, partial filename, wild-card expression or full filename for files to describe. If &lt;var&gt;String&lt;/var&gt; contains any whitespace, you have to enclose it in quotes (&lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt;). This alternate text is displayed if the client is image-incapable, has image loading disabled, or fails to retrieve the icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d003805761fe3281cba420e5b7816be2b70f97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AddAltByEncoding&lt;/code&gt; provides the alternate text to display for a file, instead of an icon, for &lt;code&gt;&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;FancyIndexing&lt;/a&gt;&lt;/code&gt;. &lt;var&gt;MIME-encoding&lt;/var&gt; is a valid content-encoding, such as &lt;code&gt;x-compress&lt;/code&gt;. If &lt;var&gt;String&lt;/var&gt; contains any whitespace, you have to enclose it in quotes (&lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt;). This alternate text is displayed if the client is image-incapable, has image loading disabled, or fails to retrieve the icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf9422d844acb1df0a53c98e818811b3945370f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AddAltByType&lt;/code&gt; sets the alternate text to display for a file, instead of an icon, for &lt;code&gt;&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;FancyIndexing&lt;/a&gt;&lt;/code&gt;. &lt;var&gt;MIME-type&lt;/var&gt; is a valid content-type, such as &lt;code&gt;text/html&lt;/code&gt;. If &lt;var&gt;String&lt;/var&gt; contains any whitespace, you have to enclose it in quotes (&lt;code&gt;&quot;&lt;/code&gt; or &lt;code&gt;'&lt;/code&gt;). This alternate text is displayed if the client is image-incapable, has image loading disabled, or fails to retrieve the icon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8645928ad49090ffdc132347e5ddd4e884aefb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AddDefaultCharset&lt;/code&gt; should only be used when all of the text resources to which it applies are known to be in that character encoding and it is too inconvenient to label their charset individually. One such example is to add the charset parameter to resources containing generated content, such as legacy CGI scripts, that might be vulnerable to cross-site scripting attacks due to user-provided data being included in the output. Note, however, that a better solution is to just fix (or delete) those scripts, since setting a default charset does not protect users that have enabled the &quot;auto-detect character encoding&quot; feature on their browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fef3ef9eea7e8295155a71aad2e864ff4b455e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AddInputFilter&lt;/code&gt; maps the filename extension &lt;var&gt;extension&lt;/var&gt; to the &lt;a href=&quot;../filter&quot;&gt;filters&lt;/a&gt; which will process client requests and POST input when they are received by the server. This is in addition to any filters defined elsewhere, including the &lt;code&gt;&lt;a href=&quot;core#setinputfilter&quot;&gt;SetInputFilter&lt;/a&gt;&lt;/code&gt; directive. This mapping is merged over any already in force, overriding any mappings that already exist for the same &lt;var&gt;extension&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c917fd9106cb6427bab676160e3ee895e46ac48e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AllowOverride&lt;/code&gt; is valid only in &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections specified without regular expressions, not in &lt;code&gt;&lt;a href=&quot;#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#directorymatch&quot;&gt;&amp;lt;DirectoryMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57434f72de04a7615c09384f0d3d2640ce855d75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AllowOverrideList&lt;/code&gt; is valid only in &lt;code&gt;&lt;a href=&quot;#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections specified without regular expressions, not in &lt;code&gt;&lt;a href=&quot;#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#directorymatch&quot;&gt;&amp;lt;DirectoryMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb3933155647aa6e7b1e281a78fc44507e3f255" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AsyncRequestWorkerFactor&lt;/code&gt; can take non-integer arguments, e.g &quot;1.5&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2737a03d2d8bc0a281437d87081019833bfb8dd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AuthCertDir&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;AuthCertDir&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5130f186548c5649adeb0f16043b4b3a65d9ccd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C=D&lt;/code&gt; sorts the directory by description, then file name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e275ee84c5b278ea277e199a4f7ac4e5630d8eb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C=M&lt;/code&gt; sorts the directory by last-modified date, then file name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b461a4d8aed6caf45beb3e27e0ccd3b83d2dd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C=N&lt;/code&gt; sorts the directory by file name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6524403a42b9e209d666f131fde8eff5ac033fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C=S&lt;/code&gt; sorts the directory by size, then file name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a198760be709a5dd61670d87f3ed3eceabac178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CGIPassAuth&lt;/code&gt; allows scripts access to HTTP authorization headers such as &lt;code&gt;Authorization&lt;/code&gt;, which is required for scripts that implement HTTP Basic authentication. Normally these HTTP headers are hidden from scripts. This is to disallow scripts from seeing user ids and passwords used to access the server when HTTP Basic authentication is enabled in the web server. This directive should be used when scripts are allowed to implement HTTP Basic authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4b8c74b2fad9dcf4e42eb89601831f842a68cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CacheIgnoreHeaders&lt;/code&gt; specifies additional HTTP headers that should not to be stored in the cache. For example, it makes sense in some cases to prevent cookies from being stored in the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3241d0333bff7df3daf112084e659c86a8ecaa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CacheIgnoreHeaders&lt;/code&gt; takes a space separated list of HTTP headers that should not be stored in the cache. If only hop-by-hop headers not should be stored in the cache (the RFC 2616 compliant behaviour), &lt;code&gt;CacheIgnoreHeaders&lt;/code&gt; can be set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00c1fdc355ffd340dc2e1a393f818aa3a5e5a46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CacheIgnoreURLSessionIdentifiers None&lt;/code&gt; clears the list of ignored identifiers. Otherwise, each identifier is added to the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10789b11feb3f7688558dc7b366fc7d76489bfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Content-MD5&lt;/code&gt; is only sent for documents served by the &lt;code&gt;&lt;a href=&quot;core&quot;&gt;core&lt;/a&gt;&lt;/code&gt;, and not by any module. For example, SSI documents, output from CGI scripts, and byte range responses do not have this header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60525f7f88174761b6f18381fb9de25219b171bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoreDumpDirectory&lt;/code&gt; processing only occurs for a select set of fatal signals: SIGFPE, SIGILL, SIGABORT, SIGSEGV, and SIGBUS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f730203874b23fa7f6581089ca5aea2c55e884" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultType None&lt;/code&gt; is only available in httpd-2.2.7 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0615152d589c009bc958f0a2abc75cbc3cbce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DescriptionWidth=*&lt;/code&gt; grows the column to the width necessary to accommodate the longest description string. &lt;strong&gt;See the section on &lt;code&gt;&lt;a href=&quot;#adddescription&quot;&gt;AddDescription&lt;/a&gt;&lt;/code&gt; for dangers inherent in truncating descriptions.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa9cf4cd695b72017bcaf11d92b4038e94d369c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DescriptionWidth=n&lt;/code&gt; fixes the column width to &lt;var&gt;n&lt;/var&gt; bytes wide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca7cfa61ce12d43c4ecb3a39f93318c0a5e1163" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Directory&lt;/code&gt; &quot;/&quot; matches and an initial configuration to set the &lt;code&gt;CustomHeaderName&lt;/code&gt; header with the value &lt;code&gt;one&lt;/code&gt; is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e1d5c0254c5f6481fce1f22c7487f1ffc6e13b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Directory&lt;/code&gt; &quot;/example&quot; matches, and since &lt;code&gt;&lt;a href=&quot;mod/mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; specifies in its code to override in case of a merge, a new configuration is created to set the &lt;code&gt;CustomHeaderName&lt;/code&gt; header with the value &lt;code&gt;two&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c2503cc77c068909c5bcd18a4754cbc48cd473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErrorLogFormat&lt;/code&gt; allows to specify what supplementary information is logged in the error log in addition to the actual log message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1bcd6e5e3df18111cd18c366ed32ce7791df09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F=0&lt;/code&gt; formats the listing as a simple list (not FancyIndexed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048ed3129dc994a4821dfb10154eff1c60bc4f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F=1&lt;/code&gt; formats the listing as a FancyIndexed list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e13c16542228bf7e2660b160e7dac1657ba06e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F=2&lt;/code&gt; formats the listing as an HTMLTable FancyIndexed list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a09e384c6a825643607174192a16ba7ab31f61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FilesMatch&lt;/code&gt; &quot;.*&quot; matches and another merge opportunity arises, causing the &lt;code&gt;CustomHeaderName&lt;/code&gt; header to be set with the value &lt;code&gt;three&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9a3646f251bb2372c23cf3c490c0a23347c719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ForceLanguagePriority Fallback&lt;/code&gt; uses &lt;code&gt;&lt;a href=&quot;#languagepriority&quot;&gt;LanguagePriority&lt;/a&gt;&lt;/code&gt; to serve a valid result, rather than returning an HTTP result 406 (NOT ACCEPTABLE). If the directives below were given, and the user's &lt;code&gt;Accept-Language&lt;/code&gt; only permitted an &lt;code&gt;es&lt;/code&gt; language response, but such a variant isn't found, then the first variant from the &lt;code&gt;&lt;a href=&quot;#languagepriority&quot;&gt;LanguagePriority&lt;/a&gt;&lt;/code&gt; list below will be served.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bf722d27745b5967137f428c5f19021803b903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ForceLanguagePriority Prefer&lt;/code&gt; uses &lt;code&gt;LanguagePriority&lt;/code&gt; to serve a one valid result, rather than returning an HTTP result 300 (MULTIPLE CHOICES) when there are several equally valid choices. If the directives below were given, and the user's &lt;code&gt;Accept-Language&lt;/code&gt; header assigned &lt;code&gt;en&lt;/code&gt; and &lt;code&gt;de&lt;/code&gt; each as quality &lt;code&gt;.500&lt;/code&gt; (equally acceptable) then the first matching variant, &lt;code&gt;en&lt;/code&gt;, will be served.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5bd03c83aa9468863dc6b2b3f3e6e3eda1a71e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GetServerVariable&lt;/code&gt; is supported, although extended server variables do not exist (as defined by other servers.) All the usual Apache CGI environment variables are available from &lt;code&gt;GetServerVariable&lt;/code&gt;, as well as the &lt;code&gt;ALL_HTTP&lt;/code&gt; and &lt;code&gt;ALL_RAW&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08029ffe8939955901414708e69f653d19696123" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GlobalLog&lt;/code&gt; is not valid in virtual host context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513d70d744791590aef984eb50ad7f3caf1f250b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GlobalLog&lt;/code&gt; is used by virtual hosts that define their own &lt;code&gt;CustomLog&lt;/code&gt;, unlike a globally specified &lt;code&gt;CustomLog&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b83da90f60bb6fe7357de4fd500e0472e8de830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IndexOrderDefault&lt;/code&gt; takes two arguments. The first must be either &lt;code&gt;Ascending&lt;/code&gt; or &lt;code&gt;Descending&lt;/code&gt;, indicating the direction of the sort. The second argument must be one of the keywords &lt;code&gt;Name&lt;/code&gt;, &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Size&lt;/code&gt;, or &lt;code&gt;Description&lt;/code&gt;, and identifies the primary key. The secondary key is &lt;em&gt;always&lt;/em&gt; the ascending filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7214ef08d9f3f14d128e39c94a8da82382e1485e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LDAPReferrals&lt;/code&gt; takes the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d230ace0b77fb2bb4ad1b82f3c4f60a43f33101c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LimitInternalRecursion&lt;/code&gt; prevents the server from crashing when entering an infinite loop of internal redirects or subrequests. Such loops are usually caused by misconfigurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56da2b6b2038c2c27f8c31704675d94cace9db53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListenCoresBucketsRatio&lt;/code&gt; can improve the scalability when accepting new connections is/becomes the bottleneck. On systems with a large number of CPU cores, enabling this feature has been tested to show significant performances improvement and shorter responses time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1c617c37ddc5c7a0916c8fc803d5f8dc7982e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogLevel&lt;/code&gt; adjusts the verbosity of the messages recorded in the error logs (see &lt;code&gt;&lt;a href=&quot;#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; directive). The following &lt;var&gt;level&lt;/var&gt;s are available, in order of decreasing significance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451c87a62ecce6be60ea1e81c2588249d992e0cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MD5-sess&lt;/code&gt; is not correctly implemented yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b40508a0c051be4bdeb8579229a1ffac7578db4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Makefile.win&lt;/code&gt; is the top level Apache makefile. To compile Apache on Windows, simply use one of the following commands to build the &lt;code&gt;release&lt;/code&gt; or &lt;code&gt;debug&lt;/code&gt; flavor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7f312d45554bd925c4ee3b7eb875a5ec231130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaxRequestWorkers&lt;/code&gt; was called &lt;code&gt;MaxClients&lt;/code&gt; before version 2.3.13. The old name is still supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac70f9d2a14fe451d4579cc5b1d96e2588b6d598" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MultiViews&lt;/code&gt; is a per-directory option, meaning it can be set with an &lt;code&gt;&lt;a href=&quot;mod/core#options&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; directive within a &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod/core#files&quot;&gt;&amp;lt;Files&amp;gt;&lt;/a&gt;&lt;/code&gt; section in &lt;code&gt;httpd.conf&lt;/code&gt;, or (if &lt;code&gt;&lt;a href=&quot;mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; is properly set) in &lt;code&gt;.htaccess&lt;/code&gt; files. Note that &lt;code&gt;Options All&lt;/code&gt; does not set &lt;code&gt;MultiViews&lt;/code&gt;; you have to ask for it by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18635ef470005b0c604cff619fe080cbf93d0a87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MultiViews&lt;/code&gt; may also apply to searches for the file named by the &lt;code&gt;&lt;a href=&quot;mod/mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; directive, if the server is trying to index a directory. If the configuration files specify</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b883183db7b26bff36d35b36a03f97ee726d5f8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MultiviewsMatch&lt;/code&gt; is not allowed in a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d9c45da9fbf6c639c388f3f144d9ad10e40ec5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MultiviewsMatch&lt;/code&gt; permits three different behaviors for &lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;'s Multiviews feature. Multiviews allows a request for a file, &lt;em&gt;e.g.&lt;/em&gt;&lt;code&gt;index.html&lt;/code&gt;, to match any negotiated extensions following the base request, &lt;em&gt;e.g.&lt;/em&gt;&lt;code&gt;index.html.en&lt;/code&gt;, &lt;code&gt;index.html.fr&lt;/code&gt;, or &lt;code&gt;index.html.gz&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f4bbe9550bca0efa06de1f69344576ec5cb5c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; and &lt;code&gt;M&lt;/code&gt; are used to specify substrings of the name. &lt;code&gt;N&lt;/code&gt; selects from the dot-separated components of the name, and &lt;code&gt;M&lt;/code&gt; selects characters within whatever &lt;code&gt;N&lt;/code&gt; has selected. &lt;code&gt;M&lt;/code&gt; is optional and defaults to zero if it isn't present; the dot must be present if and only if &lt;code&gt;M&lt;/code&gt; is present. The interpretation is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb8573ddc12186ccad41a59c2acf71b92871a87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt;, &lt;code&gt;SUCCESS&lt;/code&gt;, &lt;code&gt;GENEROUS&lt;/code&gt; or &lt;code&gt;FAILED:&lt;/code&gt;&lt;em&gt;reason&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e1d5f6c62868d0bf0cff49126ac335a613a5d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NameWidth=*&lt;/code&gt; grows the column to the necessary width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1baf4b60e82f572dc8176821e959589cf7df9ac8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NameWidth=n&lt;/code&gt; fixes the column width to &lt;var&gt;n&lt;/var&gt; bytes wide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c816dcfdc447bb0ea148b6a22f2a0e07d9f98f8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;O=A&lt;/code&gt; sorts the listing in Ascending Order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2940f7fe2d8aa09f9dbcb3500c7360ab2640e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;O=D&lt;/code&gt; sorts the listing in Descending Order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a245c4c1a2839bd20c905360ed6d06d2e8501f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P=pattern&lt;/code&gt; lists only files matching the given &lt;var&gt;pattern&lt;/var&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cccd13a7b06ad596f6ab814eec9ca065d317227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ProxyHTMLMeta&lt;/code&gt; has two effects. Firstly and most importantly it enables detection of character encodings declared in the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f00bef8e60d9796398524cb7ad83b014d7a44f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REDIRECT_&lt;/code&gt; environment variables are created from the environment variables which existed prior to the redirect. They are renamed with a &lt;code&gt;REDIRECT_&lt;/code&gt; prefix, &lt;em&gt;i.e.&lt;/em&gt;, &lt;code&gt;HTTP_USER_AGENT&lt;/code&gt; becomes &lt;code&gt;REDIRECT_HTTP_USER_AGENT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4fdedef28653baab059ca68e5e92384872661c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REDIRECT_URL&lt;/code&gt;, &lt;code&gt;REDIRECT_STATUS&lt;/code&gt;, and &lt;code&gt;REDIRECT_QUERY_STRING&lt;/code&gt; are guaranteed to be set, and the other headers will be set only if they existed prior to the error condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b266aaede1d05ae4bfaef626608588199e2acb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReadClient&lt;/code&gt; retrieves the request body exceeding the initial buffer (defined by &lt;code&gt;&lt;a href=&quot;#isapireadaheadbuffer&quot;&gt;ISAPIReadAheadBuffer&lt;/a&gt;&lt;/code&gt;). Based on the &lt;code&gt;ISAPIReadAheadBuffer&lt;/code&gt; setting (number of bytes to buffer prior to calling the ISAPI handler) shorter requests are sent complete to the extension when it is invoked. If the request is longer, the ISAPI extension must use &lt;code&gt;ReadClient&lt;/code&gt; to retrieve the remaining request body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7454fb0fefe40b2e3e48f4a7bc988bf0fc85034d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Redirect&lt;/code&gt; directives take precedence over &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#scriptalias&quot;&gt;ScriptAlias&lt;/a&gt;&lt;/code&gt; directives, irrespective of their ordering in the configuration file. &lt;code&gt;Redirect&lt;/code&gt; directives inside a Location take precedence over &lt;code&gt;Redirect&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; directives with an &lt;var&gt;URL-path&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ee926dceb4d280988891b31c1ae64cffc43116" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Remote_Addr&lt;/code&gt; - the IP address of the client making the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a26acac82612d9136a348215786d64cf7ab9ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Remote_Host&lt;/code&gt; - the hostname (if available) of the client making the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cbebc1a2b317cfae82f1ad32a0804b8f70c11b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoveEncoding&lt;/code&gt; directives are processed &lt;em&gt;after&lt;/em&gt; any &lt;code&gt;&lt;a href=&quot;#addencoding&quot;&gt;AddEncoding&lt;/a&gt;&lt;/code&gt; directives, so it is possible they may undo the effects of the latter if both occur within the same directory configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac50968528fa3b3d4eb1b4c253f5d100857bddf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoveType&lt;/code&gt; directives are processed &lt;em&gt;after&lt;/em&gt; any &lt;code&gt;&lt;a href=&quot;#addtype&quot;&gt;AddType&lt;/a&gt;&lt;/code&gt; directives, so it is possible they may undo the effects of the latter if both occur within the same directory configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d87606669254a229851c6459812d13dbf10a4c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request_Method&lt;/code&gt; - the name of the method being used (&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;em&gt;et cetera&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99dd9d5b41d09d46ec847eeb513bff4b078c5da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request_Protocol&lt;/code&gt; - the name and version of the protocol with which the request was made (&lt;em&gt;e.g.&lt;/em&gt;, &quot;HTTP/0.9&quot;, &quot;HTTP/1.1&quot;, &lt;em&gt;etc.&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d57fbd3820f24897e25fdfffa6725f12fa5a5d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request_URI&lt;/code&gt; - the resource requested on the HTTP request line -- generally the portion of the URL following the scheme and host portion without the query string. See the &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; directive of &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; for extra information on how to match your query string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3285854b514c7621a4287d2b1816c360595b32d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLBanCipher&lt;/code&gt;&lt;em&gt;c1&lt;/em&gt; ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="450cb7ee253a5a45fc97f06bce23583403ef4c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCACertificatePath&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLCACertificatePath&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ce414025f54ca82f70dfa039f74836da23c8e43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCacheServerPath&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLCacheServerPath&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="276b137ec67488bc23ae6b6dfffd67b3598b157c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCacheServerPort&lt;/code&gt;&lt;em&gt;integer&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLCacheServerPort&lt;/code&gt;&lt;em&gt;integer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0ef9f2772a63f4a68a5ae38c33a5f128607b000a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCacheServerRunDir&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLCacheServerRunDir&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c8aca96bef86af808c945d73a5b120b95411e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCertificateChainFile&lt;/code&gt; became obsolete with version 2.4.8, when &lt;code&gt;&lt;a href=&quot;#sslcertificatefile&quot;&gt;SSLCertificateFile&lt;/a&gt;&lt;/code&gt; was extended to also load intermediate CA certificates from the server certificate file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862ec493eb9f65c01b9d0703b48f3c5586507b90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCertificateFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLCertificateFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f82e767d1b60edb3239ce0c87036c0c278fd921e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCertificateKeyFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLCertificateKeyFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d661c2191f47a79fd2496620ad2269a6206d69c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCipherList&lt;/code&gt;&lt;em&gt;spec&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLCipherList&lt;/code&gt;&lt;em&gt;spec&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ac06910f8247bbb60a4e3662d0a5e4fa226a16a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCipherSuite&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLCipherSuite&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4d27c9f553592fead018c84d36748ed5236267c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCipherSuite&lt;/code&gt;&lt;em&gt;spec&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLCipherSuite&lt;/code&gt;&lt;em&gt;spec&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d45430ac679b8d5aade18a8dc2f509741a64cbfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLCryptoDevice&lt;/code&gt;&lt;em&gt;engine&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLCryptoDevice&lt;/code&gt;&lt;em&gt;engine&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="caa564f696c9c144ec62bbd6c95e3a4bc83a5768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt;&lt;em&gt;flag&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt;&lt;em&gt;flag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a1514b86564b7c809fdcae365707838f5f18909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLErrorFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLErrorFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="773cd286e942b6d5ace6be9be6b1c6c18ac350d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLFlag&lt;/code&gt;&lt;em&gt;flag&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLFlag&lt;/code&gt;&lt;em&gt;flag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5bc2530bfd36adc3ec198c751cd750b27edef7e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLLogFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLLogFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4bcb7e229e1e3d82f8eacf877ac78cc65c9dcaa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLMutex&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLMutex&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14d77e0fc7ebc0dd9eb8af956ec6669c5e5932d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLProxyCipherList&lt;/code&gt;&lt;em&gt;spec&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLProxyCipherList&lt;/code&gt;&lt;em&gt;spec&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63af451767515879fcec1d346f0f5912ac36d20b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLProxyCipherSpec&lt;/code&gt;&lt;em&gt;spec&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLProxyCipherSpec&lt;/code&gt;&lt;em&gt;spec&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="093f82f6522457e569e2ecb63ab5ccd373fcc466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLProxyMachineCertFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLProxyMachineCertFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="017caa21dead6c62e33fbff585542b2dcaab96b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLProxyMachineCertPath&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLProxyMachineCertPath&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4affcfe87e42ecfc4c586e1c34a3a54dbe01a7cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLProxyMachineCertificateFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLProxyMachineCertificateFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a05aff8957910d63d6912130e78c3e9611d7f007" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLProxyMachineCertificatePath&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLProxyMachineCertificatePath&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f648afc4e5f4b66405ee2df73a59ebba17ecb1f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLRequire %{SSL_CIPHER} in {&quot;&lt;/code&gt;&lt;em&gt;c1&lt;/em&gt;&lt;code&gt;&quot;, ...}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcd30deb2e0c6ada4cf7cc6ff4ce126b05c3db5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLRequire not (%{SSL_CIPHER} in {&quot;&lt;/code&gt;&lt;em&gt;c1&lt;/em&gt;&lt;code&gt;&quot;, ...})&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be670d7829c4193b107a9a1ab9060ac335f2956c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLRequire&lt;/code&gt; is deprecated and should in general be replaced by &lt;a href=&quot;mod_authz_core#reqexpr&quot;&gt;Require expr&lt;/a&gt;. The so called &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; syntax of &lt;code&gt;Require expr&lt;/code&gt; is a superset of the syntax of &lt;code&gt;SSLRequire&lt;/code&gt;, with the following exception:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f45543baede7630f308ebe23ab8fa9fdbd870e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLRequireCipher&lt;/code&gt;&lt;em&gt;c1&lt;/em&gt; ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239cc0e78d8cd2793e78deee380fe9c73c9abc3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLRequiredCiphers&lt;/code&gt;&lt;em&gt;spec&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLRequiredCiphers&lt;/code&gt;&lt;em&gt;spec&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ed700c5cc5d8733cf379791c324a5d396aec5b6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLRoot&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLRoot&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50e9619b13008b280ecc0516c8d5de209c9b3022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLSessionLockFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLSessionLockFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e5482a9cab29ae24ab41cb055461e813f58a35d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLVerifyClient&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLVerifyClient&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="351e04f6dd42d976c9250aa48d63b15efc7b4d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLVerifyDepth&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSLVerifyDepth&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="590669cdfea69acbce4eb2ea74b9578596fbc4b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CLIENT_CERT_CHAIN_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_CLIENT_CERT_CHAIN_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d662a2602c593d43c0427f84156adf8e2a560646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CLIENT_I_DN_&lt;/code&gt;&lt;em&gt;x509&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_CLIENT_I_DN_&lt;/code&gt;&lt;em&gt;x509&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7db9f8ea2c5283a6542e6dd1752cf259a103bc31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CLIENT_SAN_DNS_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_CLIENT_SAN_DNS_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ccaa438da5c8e722592ce1aac19eb83d3d8b951d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CLIENT_SAN_Email_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_CLIENT_SAN_Email_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b3628fa900cbbb753f7d0f861c4d4c1e1fc44103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CLIENT_SAN_OTHER_msUPN_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_CLIENT_SAN_OTHER_msUPN_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6aa68dd3ffaedc31e2ab7398d3050e7a7b9d780a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CLIENT_S_DN_&lt;/code&gt;&lt;em&gt;x509&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_CLIENT_S_DN_&lt;/code&gt;&lt;em&gt;x509&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="130f5fa3fc1d7b1e3d7f632f6d6c52fe23e9fd93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CLIENT_V_REMAIN&lt;/code&gt; is only available in version 2.1 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6185bd9f35d1520addc93ecaba011a89531cb989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CertFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_CertFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f94265abc89e137a4c04e8e3c98fc50aa4b76d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CertFileType&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_CertFileType&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="266342eada3f792f4f99b421f579deffc4a69e69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CertificateLogDir&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_CertificateLogDir&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="067ec060f6ae8429f4bd997f480332bb3a0cae9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_CipherSuite&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_CipherSuite&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="136941608e2d2156d8d94cda0c2005a030f6b2bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_ClientAuth&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_ClientAuth&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="110b06ccfd540d9f630bf4f54df20512b09f8899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_Connect&lt;/code&gt;&lt;em&gt;flag&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_Connect&lt;/code&gt;&lt;em&gt;flag&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="19bc60c7d26d6183f091ec5a294b023ead0ab7fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_FetchKeyPhraseFrom&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_FetchKeyPhraseFrom&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2caf38e7732cb724bdaf9eccddd4bf849187931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_Group&lt;/code&gt;&lt;em&gt;name&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_Group&lt;/code&gt;&lt;em&gt;name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d2fdfd0ca30aa93f1759bb2dba835216a9d29cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_KeyFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_KeyFile&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e27910d58747e594e41aecf9fca0f5f0bdbf2bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_KeyFileType&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_KeyFileType&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9340eeba8eb0ef217e5969a013189e445408e9fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_Log&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_Log&lt;/code&gt;&lt;em&gt;file&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="11e65e8edd6c4b50c83d9f93a96bc24fb560d767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_LogX509Attributes&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_LogX509Attributes&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b0bc46b52249ad88dc9430e05a387962c4b7d67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_Require&lt;/code&gt;&lt;em&gt;expr&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_Require&lt;/code&gt;&lt;em&gt;expr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca28b8639fe944fe6f41c305729700679641e189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_SERVER_I_DN_&lt;/code&gt;&lt;em&gt;x509&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_SERVER_I_DN_&lt;/code&gt;&lt;em&gt;x509&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="661a70bb35945ba2c34108250f53f0e0e9f27586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_SERVER_SAN_DNS_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_SERVER_SAN_DNS_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cc12f2a07788f92da8a792de7b891736e7673db5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_SERVER_SAN_Email_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_SERVER_SAN_Email_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3854fb7796b4aa3937d997c6cd1d7d96c1ea1173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_SERVER_SAN_OTHER_dnsSRV_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_SERVER_SAN_OTHER_dnsSRV_&lt;/code&gt;&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="28c758a6978d2c56522aead8e98a2bcfd391e502" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_SERVER_S_DN_&lt;/code&gt;&lt;em&gt;x509&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_SERVER_S_DN_&lt;/code&gt;&lt;em&gt;x509&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bb9b68416c2e4d9579f8b16f6b554c783dfd198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_SessionDir&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_SessionDir&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5d6995eecd96c451d119abd1a45b26504a51b52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_X509VerifyDepth&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_X509VerifyDepth&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="907129deeba81e2c7dcaa8e50f6720371029219f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_X509VerifyDir&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_X509VerifyDir&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="06f308f4ecbc666769b0f88252ed7a3831a5ff72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSL_X509VerifyPolicy&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SSL_X509VerifyPolicy&lt;/code&gt;&lt;em&gt;arg&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a56c113dd3646bb71ff7b33ea96b0736c8e12fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptAlias&lt;/code&gt; can also be used in conjunction with a script or handler you have. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d647558e042ecbca76dd4303509ac42f8f046310" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptLogLength&lt;/code&gt; can be used to limit the size of the CGI script logfile. Since the logfile logs a lot of information per CGI error (all request headers, all script output) it can grow to be a big file. To prevent problems due to unbounded growth, this directive can be used to set an maximum file-size for the CGI logfile. If the file exceeds this size, no more information will be written to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3bb3f320f6c755011f4d1f8755815f563216ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ServerName&lt;/code&gt; and &lt;code&gt;ServerAlias&lt;/code&gt; checks are never performed for an IP-based vhost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f5951e729b8319091d658b432be41305ca14e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ServerName&lt;/code&gt; is used (possibly in conjunction with &lt;code&gt;&lt;a href=&quot;#serveralias&quot;&gt;ServerAlias&lt;/a&gt;&lt;/code&gt;) to uniquely identify a virtual host, when using &lt;a href=&quot;../vhosts/name-based&quot;&gt;name-based virtual hosts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6638c49b7f5353207a15e8b67eaab0b7bc228901" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ServerName&lt;/code&gt; should always be set for each vhost. Otherwise a DNS lookup is required for each vhost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84548e6ec37be1e7e787de058ddd26db8fa1c96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ServerTokens Full&lt;/code&gt; (or not specified)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790363757f942854d13da5899039c25e73caeaf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Server_Addr&lt;/code&gt; - the IP address of the server on which the request was received (only with versions later than 2.0.43)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a237e7197a41b97fe18787232c7d9d42f61c8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StrongholdAccelerator&lt;/code&gt;&lt;em&gt;engine&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;StrongholdAccelerator&lt;/code&gt;&lt;em&gt;engine&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="63a976959538aa9c7001b4c4722a4bfd4f204f5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StrongholdKey&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;StrongholdKey&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b9367ea131a6fe1700138a289b434393bbddaa47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StrongholdLicenseFile&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;StrongholdLicenseFile&lt;/code&gt;&lt;em&gt;dir&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d43172b073a00faf320c51288f11d73d59c6bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TLSv1.1&lt;/code&gt; (when using OpenSSL 1.0.1 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf85346d14d21634e7f5e51d2a30266b4678876" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TLSv1.2&lt;/code&gt; (when using OpenSSL 1.0.1 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff88e7d69074d94adff506f030137005e082f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TLSv1.3&lt;/code&gt; (when using OpenSSL 1.1.1 and later)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10107646b6b1d02d0cf29879a8e5b2ce2d6a2178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V=0&lt;/code&gt; disables version sorting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520e7b595c6539754df58849ece74a938e3717d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V=1&lt;/code&gt; enables version sorting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bc9eee4613bb9847b986acf08ee9b2517ddf80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VAL&lt;/code&gt; may contain backreferences (&lt;code&gt;$N&lt;/code&gt; or &lt;code&gt;%N&lt;/code&gt;) which are expanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd35b3b9d5399aaf5d28519780b7f37ec0673397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VHostCGIPrivs&lt;/code&gt; can be used to assign arbitrary &lt;a href=&quot;http://sosc-dr.sun.com/bigadmin/features/articles/least_privilege.jsp&quot;&gt;privileges&lt;/a&gt; to subprocesses created by a virtual host, as discussed under &lt;code&gt;VHostCGIMode&lt;/code&gt;. Each &lt;var&gt;privilege-name&lt;/var&gt; is the name of a Solaris privilege, such as &lt;var&gt;file_setid&lt;/var&gt; or &lt;var&gt;sys_nfs&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934481a3a7469aadfc521b92dada1617074679e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VHostPrivs&lt;/code&gt; can be used to assign arbitrary &lt;a href=&quot;http://sosc-dr.sun.com/bigadmin/features/articles/least_privilege.jsp&quot;&gt;privileges&lt;/a&gt; to a virtual host. Each &lt;var&gt;privilege-name&lt;/var&gt; is the name of a Solaris privilege, such as &lt;var&gt;file_setid&lt;/var&gt; or &lt;var&gt;sys_nfs&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7114923b1f43f4ad92c407c4cdba5db29080f46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VirtualDocumentRoot&lt;/code&gt; will override any &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directives you may have put in the same context or child contexts. Putting a &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; in the global server scope will effectively override &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directives in any virtual hosts defined later on, unless you set &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; to &lt;code&gt;None&lt;/code&gt; in each virtual host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4edc07006235fccd06bd1b3a4bed8ddcda61f18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WriteClient&lt;/code&gt; is supported, but only with the &lt;code&gt;HSE_IO_SYNC&lt;/code&gt; flag or no option flag (value of &lt;code&gt;0&lt;/code&gt;). Any other &lt;code&gt;WriteClient&lt;/code&gt; request will be rejected with a return value of &lt;code&gt;FALSE&lt;/code&gt;, and a &lt;code&gt;GetLastError&lt;/code&gt; value of &lt;code&gt;ERROR_INVALID_PARAMETER&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7ad17b29ba5e189c664687a402f6f0066be53e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; =</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52021d299b84fe55a0d5b7299e7937da5c9daf93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[10/Oct/2000:13:55:36 -0700]&lt;/code&gt; (&lt;code&gt;%t&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;[10/Oct/2000:13:55:36 -0700]&lt;/code&gt; (&lt;code&gt;%t&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="1dd699c276d7a640ddfe980b8845a8dce29e8f5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt; (backslash space)</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt; (backslash space)</target>
        </trans-unit>
        <trans-unit id="38f9965db9df17eb371352d61506514f3d731cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^^BLANKICON^^&lt;/code&gt; is only used for formatting, and so is unnecessary if you're using &lt;code&gt;IndexOptions HTMLTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;^^BLANKICON^^&lt;/code&gt; is only used for formatting, and so is unnecessary if you're using &lt;code&gt;IndexOptions HTMLTable&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="e63cbc3c907f1e30deaa1576edfde988588c9930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^a&lt;/code&gt; matches a string that begins with &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;^a&lt;/code&gt; matches a string that begins with &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="128642e9f8b71a5b2388a5d88570bd32d5e2b36e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_default_&lt;/code&gt; vhosts for all ports</source>
          <target state="translated">&lt;code&gt;_default_&lt;/code&gt; vhosts for all ports</target>
        </trans-unit>
        <trans-unit id="f2ad0eb27be18957a50e50037bd8f23377105f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_default_&lt;/code&gt; vhosts for different ports</source>
          <target state="translated">&lt;code&gt;_default_&lt;/code&gt; vhosts for different ports</target>
        </trans-unit>
        <trans-unit id="14c2248b56ab84b38809c4d58f83b5ef70ad1945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_default_&lt;/code&gt; vhosts for one port</source>
          <target state="translated">&lt;code&gt;_default_&lt;/code&gt; vhosts for one port</target>
        </trans-unit>
        <trans-unit id="0adf45daf3ac091ab4983e163bb0fa71b0fb42cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a$&lt;/code&gt; matches a string that ends with &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4962a5a0b82b78a2ebfb98738c1b6f8e1e68b5fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a*&lt;/code&gt; matches all the same things &lt;code&gt;a+&lt;/code&gt; matches, but will also match an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b286f61156ad58fd382a56246ebcae6af1fa76a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a+&lt;/code&gt; matches &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;aa&lt;/code&gt;, &lt;code&gt;aaa&lt;/code&gt;, etc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf88adcc40e54f3a5603a7437d68a5169187712" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ab&lt;/code&gt; is a tool for benchmarking your Apache Hypertext Transfer Protocol (HTTP) server. It is designed to give you an impression of how your current Apache installation performs. This especially shows you how many requests per second your Apache installation is capable of serving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0809b7d0cfb5c1ff46951256ea65e4677d633bdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apachectl&lt;/code&gt; is a front end to the Apache HyperText Transfer Protocol (HTTP) server. It is designed to help the administrator control the functioning of the Apache &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; daemon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5dbb1ab0b75f0b54723b88d54e9641eff373e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apxs&lt;/code&gt; is a tool for building and installing extension modules for the Apache HyperText Transfer Protocol (HTTP) server. This is achieved by building a dynamic shared object (DSO) from one or more source or object &lt;var&gt;files&lt;/var&gt; which then can be loaded into the Apache server under runtime via the &lt;code&gt;&lt;a href=&quot;../mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive from &lt;code&gt;&lt;a href=&quot;../mod/mod_so&quot;&gt;mod_so&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fe2922d61c6462d3e1fe687bb04f39337dde60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;auth-int&lt;/code&gt; is not implemented yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ede5b00da02b00da0c01c63dbc3c009b83dadcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base&lt;/code&gt; Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cadc4866fbab3039ec8f482bdfd6d54b16d7ac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base&lt;/code&gt; itself will not be resolved according to the current value. A statement &lt;code&gt;base mailto:&lt;/code&gt; will work properly, though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e4f2488439e65ae53cb77137f33e2e56e76ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;base_uri&lt;/code&gt; is synonymous with &lt;code&gt;base&lt;/code&gt;. Note that a trailing slash on the URL is significant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd98c2b0ba7bb582bb6948e62eb8fd7301c42253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c.t&lt;/code&gt; will match &lt;code&gt;cat&lt;/code&gt;, &lt;code&gt;cot&lt;/code&gt;, &lt;code&gt;cut&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10597fa1c873ee605736c538af86cf7d294d1fee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c[^/]t&lt;/code&gt; matches &lt;code&gt;cat&lt;/code&gt; or &lt;code&gt;c=t&lt;/code&gt; but not &lt;code&gt;c/t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7848d1d3de86fdfa6ecc9b8586d9ff59dadeb9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c[uoa]t&lt;/code&gt; matches &lt;code&gt;cut&lt;/code&gt;, &lt;code&gt;cot&lt;/code&gt; or &lt;code&gt;cat&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2d39931d31b79bae99a793f7fad436bbccd318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;colou?r&lt;/code&gt; will match &lt;code&gt;color&lt;/code&gt; and &lt;code&gt;colour&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff2b57d6310ed3d5791ecbc63657e437de9b846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configure&lt;/code&gt; searches automatically for an installed &lt;code&gt;zlib&lt;/code&gt; library if your source configuration requires one (e.g., when &lt;code&gt;&lt;a href=&quot;../mod/mod_deflate&quot;&gt;mod_deflate&lt;/a&gt;&lt;/code&gt; is enabled). You can set the directory path to the compression library instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7899e5fca717db89e7158d2998a145f3e86e7b0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;configure&lt;/code&gt; will not complain about &lt;code&gt;--enable-foo&lt;/code&gt; even if &lt;var&gt;foo&lt;/var&gt; doesn't exist, so you need to type carefully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92d0b3f9bbeee8430e3a55a346d9073c04da879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbmmanage&lt;/code&gt; has a list of DBM format preferences, defined by the &lt;code&gt;@AnyDBM::ISA&lt;/code&gt; array near the beginning of the program. Since we prefer the Berkeley DB 2 file format, the order in which &lt;code&gt;dbmmanage&lt;/code&gt; will look for system libraries is Berkeley DB 2, then NDBM, then GDBM and then SDBM. The first library found will be the library &lt;code&gt;dbmmanage&lt;/code&gt; will attempt to use for all DBM file transactions. This ordering is slightly different than the standard &lt;code&gt;@AnyDBM::ISA&lt;/code&gt; ordering in Perl, as well as the ordering used by the simple &lt;code&gt;dbmopen()&lt;/code&gt; call in Perl, so if you use any other utilities to manage your DBM files, they must also follow this preference ordering. Similar care must be taken if using programs in other languages, like C, to access these files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d018fe034223d2bd8dbcd56dda01feef3029eeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dbmmanage&lt;/code&gt; is used to create and update the DBM format files used to store usernames and password for basic authentication of HTTP users via &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_dbm&quot;&gt;mod_authn_dbm&lt;/a&gt;&lt;/code&gt;. Resources available from the Apache HTTP server can be restricted to just the users listed in the files created by &lt;code&gt;dbmmanage&lt;/code&gt;. This program can only be used when the usernames are stored in a DBM file. To use a flat-file database see &lt;code&gt;&lt;a href=&quot;htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4feab37046baa43e0050eb8aaafacd4bf5aeb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt; Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f4a7be4e4377a4d57449b6670ff40136a72a71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dospath&lt;/code&gt; Backslashes in URLs are rewritten to forward slashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae004c096441daaf9b5de19d3d6f992986d88b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;echomsg&lt;/code&gt; (&lt;em&gt;Apache 2.1 and later&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e0df758414e8fb336201b4165c56eacbde7052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;egd:/path/to/egd-socket&lt;/code&gt; (Unix only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbbc0f0fa913cc3a431427af23db69dbc22f67b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;frank&lt;/code&gt; (&lt;code&gt;%u&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b5603ba940f7ae84b849c137ac3e904f542f52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htcacheclean&lt;/code&gt; is used to keep the size of &lt;code&gt;&lt;a href=&quot;../mod/mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt;'s storage within a given size limit, or limit on inodes in use. This tool can run either manually or in daemon mode. When running in daemon mode, it sleeps in the background and checks the cache directory at regular intervals for cached content to be removed. You can stop the daemon cleanly by sending it a TERM or INT signal. When run manually, a once off check of the cache directory is made for cached content to be removed. If one or more URLs are specified, each URL will be deleted from the cache, if present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5908a1e299a00cbc48fdd96af984cc9d3b7e3e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htcacheclean&lt;/code&gt; returns a zero status (&quot;true&quot;) if all operations were successful, &lt;code&gt;1&lt;/code&gt; otherwise. If an URL is specified, and the URL was cached and successfully removed, &lt;code&gt;0&lt;/code&gt; is returned, &lt;code&gt;2&lt;/code&gt; otherwise. If an error occurred during URL removal, &lt;code&gt;1&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80b710d7c57efa6ebcac209d85afbfdfbaede65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htdbm&lt;/code&gt; is used to manipulate the DBM format files used to store usernames and password for basic authentication of HTTP users via &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_dbm&quot;&gt;mod_authn_dbm&lt;/a&gt;&lt;/code&gt;. See the &lt;code&gt;&lt;a href=&quot;dbmmanage&quot;&gt;dbmmanage&lt;/a&gt;&lt;/code&gt; documentation for more information about these DBM files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d59f4504da50d342d76fbf6d5f4031dd2655ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htdbm&lt;/code&gt; returns a zero status (&quot;true&quot;) if the username and password have been successfully added or updated in the DBM File. &lt;code&gt;htdbm&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt; if it encounters some problem accessing files, &lt;code&gt;2&lt;/code&gt; if there was a syntax problem with the command line, &lt;code&gt;3&lt;/code&gt; if the password was entered interactively and the verification entry didn't match, &lt;code&gt;4&lt;/code&gt; if its operation was interrupted, &lt;code&gt;5&lt;/code&gt; if a value is too long (username, filename, password, or final computed record), &lt;code&gt;6&lt;/code&gt; if the username contains illegal characters (see the &lt;a href=&quot;#restrictions&quot;&gt;Restrictions section&lt;/a&gt;), and &lt;code&gt;7&lt;/code&gt; if the file is not a valid DBM password file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de40d301ff0cf2d9ebb59a0ec179f5c7e281cd0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htdigest&lt;/code&gt; is used to create and update the flat-files used to store usernames, realm and password for digest authentication of HTTP users. Resources available from the Apache HTTP server can be restricted to just the users listed in the files created by &lt;code&gt;htdigest&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89ca13d745c142ae4ad260feec30c56ea648555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htpasswd&lt;/code&gt; encrypts passwords using either bcrypt, a version of MD5 modified for Apache, SHA1, or the system's &lt;code&gt;crypt()&lt;/code&gt; routine. Files managed by &lt;code&gt;htpasswd&lt;/code&gt; may contain a mixture of different encoding types of passwords; some user records may have bcrypt or MD5-encrypted passwords while others in the same file may have passwords encrypted with &lt;code&gt;crypt()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4615ed05f02b855364794fbe53f5bc4c130fbdb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htpasswd&lt;/code&gt; is used to create and update the flat-files used to store usernames and password for basic authentication of HTTP users. If &lt;code&gt;htpasswd&lt;/code&gt; cannot access a file, such as not being able to write to the output file or not being able to read the file in order to update it, it returns an error status and makes no changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d124e49b861f2f85582ee1956edad9828f115c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;htpasswd&lt;/code&gt; returns a zero status (&quot;true&quot;) if the username and password have been successfully added or updated in the &lt;var&gt;passwdfile&lt;/var&gt;. &lt;code&gt;htpasswd&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt; if it encounters some problem accessing files, &lt;code&gt;2&lt;/code&gt; if there was a syntax problem with the command line, &lt;code&gt;3&lt;/code&gt; if the password was entered interactively and the verification entry didn't match, &lt;code&gt;4&lt;/code&gt; if its operation was interrupted, &lt;code&gt;5&lt;/code&gt; if a value is too long (username, filename, password, or final computed record), &lt;code&gt;6&lt;/code&gt; if the username contains illegal characters (see the &lt;a href=&quot;#restrictions&quot;&gt;Restrictions section&lt;/a&gt;), and &lt;code&gt;7&lt;/code&gt; if the file is not a valid password file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f4602486f0cd8f5420eb3b30d0f1b8196ccee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http://hstandby.example.com:8080&lt;/code&gt; is only sent traffic if all other workers in balancer set &lt;code&gt;0&lt;/code&gt; are not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f002a49d856f18f752e1372db9b0d3a56b1c76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http://spare1.example.com:8080&lt;/code&gt; and &lt;code&gt;http://spare2.example.com:8080&lt;/code&gt; are only sent traffic if one or both of &lt;code&gt;http://www2.example.com:8080&lt;/code&gt; or &lt;code&gt;http://www3.example.com:8080&lt;/code&gt; is unavailable. (One spare will be used to replace one unusable member of the same balancer set.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394c9a4ac99457a6514630552db82af01b56fb61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;http://www2.example.com/&lt;/code&gt; is checked by sending a simple &lt;code&gt;HEAD&lt;/code&gt; request every 10 seconds and making sure that the response status is 2xx, 3xx or 4xx. &lt;code&gt;http://www3.example.com/&lt;/code&gt; is checked every 5 seconds by simply ensuring that the socket to that server is up. If the backend is marked as &quot;down&quot; and it passes 2 health check, it will be re-enabled and added back into the load balancer. It takes 3 back-to-back health check failures to disable the server and move it out of rotation. Finally, &lt;code&gt;http://www4.example.com/&lt;/code&gt; is not dynamically checked at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec67baf79a03716da013eb992c2a2ac120e7baf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;httpd&lt;/code&gt; is the Apache HyperText Transfer Protocol (HTTP) server program. It is designed to be run as a standalone daemon process. When used like this it will create a pool of child processes or threads to handle requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9aeb4a0f4bd1fb1218ae3f0bd83432de52d563f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;httxt2dbm&lt;/code&gt; is used to generate dbm files from text input, for use in &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;dbm&lt;/code&gt; map type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233f0831f3d25c62d7297756a6e407cfc09cd4b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include virtual&lt;/code&gt; should be used in preference to &lt;code&gt;exec cgi&lt;/code&gt; to include the output of CGI programs into an HTML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f240f141222926cb968019ca988262254340ca8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lbmethod=heartbeat&lt;/code&gt; uses the services of &lt;code&gt;&lt;a href=&quot;mod_heartmonitor&quot;&gt;mod_heartmonitor&lt;/a&gt;&lt;/code&gt; to balance between origin servers that are providing heartbeat info via the &lt;code&gt;&lt;a href=&quot;mod_heartbeat&quot;&gt;mod_heartbeat&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00963ce1b3db14a25db85636256a37318eaafe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logresolve&lt;/code&gt; is a post-processing program to resolve IP-addresses in Apache's access logfiles. To minimize impact on your nameserver, logresolve has its very own internal hash-table cache. This means that each IP number will only be looked up the first time it is found in the log file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e995a2c3c69deb5ec8bf98553698a129d449e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lowercase&lt;/code&gt; Urls are rewritten to lowercase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ae795bab824ae0cbf694e8f9fc9adffb5f0aef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_dumpio&lt;/code&gt; allows for the logging of all input received by Apache and/or all output sent by Apache to be logged (dumped) to the error.log file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4f6adcb97bc01c368cd704b22b1212c837fccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_lua&lt;/code&gt; always looks to invoke a Lua function for the handler, rather than just evaluating a script body CGI style. A handler function looks something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370d51737b0590162a38c508995a1cb6f88b2864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_lua&lt;/code&gt; is still in experimental state. Until it is declared stable, usage and behavior may change at any time, even between stable releases of the 2.4.x series. Be sure to check the CHANGES file before upgrading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c960c45abf77fe18204d82773750a6c9929e0d41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_lua&lt;/code&gt; provides a handler named &lt;code&gt;lua-script&lt;/code&gt;, which can be used with a &lt;code&gt;&lt;a href=&quot;core#sethandler&quot;&gt;SetHandler&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0592de690dbf2915bbb1f9a35bbcd9d32f0324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_php3&lt;/code&gt; runs fine, with LDAP and GD and FreeType libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051cd33463fb5261b19b64c46c5f35131eb78cf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_proxy_fdpass&lt;/code&gt; uses the ability of AF_UNIX domain sockets to &lt;a href=&quot;http://www.freebsd.org/cgi/man.cgi?query=recv&quot;&gt;pass an open file descriptor&lt;/a&gt; to allow another process to finish handling a request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453063055daf63f467a40ddc765edf1eee820543" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_rewrite&lt;/code&gt; has to unescape URLs before mapping them, so backreferences are unescaped at the time they are applied. Using the B flag, non-alphanumeric characters in backreferences will be escaped. For example, consider the rule:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7005c1f277087325d598eded42e462644932f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_socache_dbm&lt;/code&gt; is a shared object cache provider which provides for creation and access to a cache backed by a DBM database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48898635920ea2b887660e8265d7bc97a909ef9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_socache_memcache&lt;/code&gt; is a shared object cache provider which provides for creation and access to a cache backed by the &lt;a href=&quot;http://memcached.org/&quot;&gt;memcached&lt;/a&gt; high-performance, distributed memory object caching system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b5c562d8790944d0e4011014fda2a4c56620df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mod_socache_shmcb&lt;/code&gt; is a shared object cache provider which provides for creation and access to a cache backed by a high-performance cyclic buffer inside a shared memory segment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a5a441b529e759448e3401b3977713a75a159c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no-etag&lt;/code&gt; will be added to the request notes, and the server is asked not to generate an ETag. Where a server ignores the value of &lt;code&gt;no-etag&lt;/code&gt; and generates an ETag anyway, the ETag will be respected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2684b0cf20b3b254aeb0603b276a6953a44ba417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;now&lt;/code&gt; (equivalent to '&lt;code&gt;access&lt;/code&gt;')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7c3fd17c96601d3f8f64f9d446e7e9a9c088ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;off&lt;/code&gt;: does not issue a redirection. This is the legacy behaviour of mod_dir.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68644c397d0e26ee846b55cddb4b5084d70fc42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;on&lt;/code&gt;: issues a 302 redirection to the index resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06aef74f269a83b77f144de9bff2e3cf6749bc0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;original-uri&lt;/code&gt; (default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a3e1d1bd467bf3caf31ada028cf025b4652a8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permanent&lt;/code&gt;: issues a 301 (permanent) redirection to the index resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c7836844da7ca8e4a58f21a9531d3cd48dac99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;point&lt;/code&gt; Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a44b596e050e1af2ace013e319e787f0ae2c74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;poly&lt;/code&gt; Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90b600dd3ba2d86f048ba714a78bec0d616b063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rate-initial-burst&lt;/code&gt; available in httpd 2.4.24 and later. Rate limiting proxied content does not work correctly up to httpd 2.4.33.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ab4ec9902e357887606ad9517c3df747b88691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rect&lt;/code&gt; Directive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc6f1c393fa419bbf1047fc4ee37e7ab7202500" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;req&lt;/code&gt;, &lt;code&gt;http&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e58c65158e8f78878852055255596bcc072ebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reset&lt;/code&gt; Unset any options set at a higher level in the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d184676bb186fbf7c8369a32ee6f19220e92bcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;result(-1)&lt;/code&gt; fetches the next available row in the set, asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285b9208f642b0fccc78e13fc285d3b944ae4f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;result(0)&lt;/code&gt; fetches all rows in a synchronous manner, returning a table of rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6487b9d8b2b8f09691d02cc6808a267e8a1005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;result(N)&lt;/code&gt; fetches row number &lt;code&gt;N&lt;/code&gt;, asynchronously:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55ba06593f30e849188f9a0ebf09e8ff063fa87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rotatelogs&lt;/code&gt; is a simple program for use in conjunction with Apache's piped logfile feature. It supports rotation based on a time interval or maximum size of the log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed11c09ac6a1042587da2a1ce1b4a55e3d977a96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seeother&lt;/code&gt;: issues a 303 redirection (also known as &quot;See Other&quot;) to the index resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e937702805a3816397992cb366045da4f4b058b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serverlist.txt&lt;/code&gt; will contain a list of the servers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d2fd9c9b87fc0f44befae52a0d58bbd793b03f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shmcb:/path/to/datafile&lt;/code&gt;[&lt;code&gt;(&lt;/code&gt;&lt;em&gt;size&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;]</source>
          <target state="translated">&lt;code&gt;shmcb:/path/to/datafile&lt;/code&gt;[&lt;code&gt;(&lt;/code&gt;&lt;em&gt;size&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;]</target>
        </trans-unit>
        <trans-unit id="6a09441168c009b6213b9705d99ce28f0c5e03ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string1 string2&lt;/code&gt; results in &lt;code&gt;string1 string2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06de5d7740fde91b151e72787e00ef66e47eaf2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suexec&lt;/code&gt; configuration options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59527f55ef8a8ab93b0c0c8dfb607f11a9e26ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;suexec&lt;/code&gt; is used by the Apache HTTP Server to switch to another user before executing CGI programs. In order to achieve this, it must run as &lt;code&gt;root&lt;/code&gt;. Since the HTTP daemon normally doesn't run as &lt;code&gt;root&lt;/code&gt;, the &lt;code&gt;suexec&lt;/code&gt; executable needs the setuid bit set and must be owned by &lt;code&gt;root&lt;/code&gt;. It should never be writable for any other person than &lt;code&gt;root&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f880a480f31110d373215aa55eed475ede04ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;temp&lt;/code&gt;: this has the same effect as &lt;code&gt;on&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6730fe078ce7469b7387904d7f1418bd471022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if cipher is an export cipher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec500dfb8a31ae2e1ae3cec6451b679999517c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if secure renegotiation is supported, else &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f312de9938910e21a59bc0c2573b88308016b61" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;-10&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;-10&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ae79ca609d706632126c5cf22d7dbb590e3fcf3c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;-20&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;-20&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="702e6c70c3b61322d455cc4d7a0283ba31f575b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;-25&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;-25&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ffbea0715c8f5ff095fb744582d9e59649375aea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;-30&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;-30&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f09ccce9223597a533d6a5c8115dc4787a629430" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;-40&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;-40&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2cdaaf1635168f9e8e5652b59daf3e6319f02188" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;-50&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;-50&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3b6f6c6b2d135676f5d95dc5d2898b1c0f8626a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;0&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;0&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b788f5ae7fae690d6a7ceb3481825e9d15d412fb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;10&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;10&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9dc287a80ddefb8194b0b71cefa78617b16427e4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;&lt;strong&gt;Caveat: &lt;/strong&gt;If you specify multiple servers, you need to enclose the entire URL string in quotes; otherwise you will get an error: &quot;AuthLDAPURL takes one argument, URL to define LDAP connection..&quot; &lt;/em&gt; You can of course use search parameters on each of these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78506b3f62dfa4de671a4fc590b7f07b9b6ddea9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Aliases:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Aliases:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="88939cd604bc502d9442ef3f4b4f0153003360c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Any&lt;/em&gt; valid HTTP response status code may be specified, using the syntax [R=305], with a 302 status code being used by default if none is specified. The status code specified need not necessarily be a redirect (3xx) status code. However, if a status code is outside the redirect range (300-399) then the substitution string is dropped entirely, and rewriting is stopped as if the &lt;code&gt;L&lt;/code&gt; were used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0345cfa634a4d2d04e9933b274c80a7b18f884b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Authentication Algorithm:&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca15a46f50ec97a0d9158e184eaf8c1dbba7d92" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Authentication Algorithm&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82c36f32e6267673eccb3ebb9429bd4c00908e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available in versions 2.2.12 and later&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805ac0a0327485eba1420eeaf900670d9039a720" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Available in versions after 2.0.54&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fecdca9bc4871135389c80a4c164e9163b0a4e80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;BalancerMembers&lt;/em&gt; are also sometimes referred to as &lt;em&gt;workers&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc733066f6f805d6b50022488e2fb1c9317391e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;But be careful&lt;/em&gt;: Usually &lt;code&gt;/dev/random&lt;/code&gt; provides only as much entropy data as it actually has, i.e. when you request 512 bytes of entropy, but the device currently has only 100 bytes available two things can happen: On some platforms you receive only the 100 bytes while on other platforms the read blocks until enough bytes are available (which can take a long time). Here using an existing &lt;code&gt;/dev/urandom&lt;/code&gt; is better, because it never blocks and actually gives the amount of requested data. The drawback is just that the quality of the received data may not be the best.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3bbb99e6dff039fc1f2c76bdcbef2a1092fb6a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Caching&lt;/em&gt; frequently requested files that change very infrequently is a technique for reducing server load. &lt;code&gt;&lt;a href=&quot;mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt; provides two techniques for caching frequently requested &lt;em&gt;static&lt;/em&gt; files. Through configuration directives, you can direct &lt;code&gt;&lt;a href=&quot;mod_file_cache&quot;&gt;mod_file_cache&lt;/a&gt;&lt;/code&gt; to either open then &lt;code&gt;mmap()&lt;/code&gt; a file, or to pre-open a file and save the file's open &lt;em&gt;file handle&lt;/em&gt;. Both techniques reduce server load when processing requests for these files by doing part of the work (specifically, the file I/O) for serving the file when the server is started rather than during each request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dda13314805b1bc36838c65b4acd615eb4e4d2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Cipher Encoding Algorithm:&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71143685d4804b02103f81851363c203e1490ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Cipher/Encryption Algorithm&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14344a2862d7c86e41b61b549d0b2f619b1936d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Clickstream&lt;/em&gt; logging of user activity on a site</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03c9e7095f8c0caf33b5fb714ab1e1559fadf71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CondPattern&lt;/em&gt; is the condition pattern, a regular expression which is applied to the current instance of the &lt;em&gt;TestString&lt;/em&gt;. &lt;em&gt;TestString&lt;/em&gt; is first evaluated, before being matched against &lt;em&gt;CondPattern&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765c565669ed1b0d4c0ea322b5ef4f07e1f6b37f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CondPattern&lt;/em&gt; is usually a &lt;em&gt;perl compatible regular expression&lt;/em&gt;, but there is additional syntax available to perform other useful tests against the &lt;em&gt;Teststring&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc06036681bd247915a61848e0c9bfb7c641f59" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Diffie-Hellman Ciphers:&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20609f0afe0e6531e1e3ebe975a7bac0a828d95" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Dis&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Dis&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ebf82b61e037a09683941a2287a5788dc27264e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Drn&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Drn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bfff942dd821d7aedfd1da6f3d378b9589b706e5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Err&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Err&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="394f590c40e0cd7678eab0654cf4e29d04c97573" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;HcFl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;HcFl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cea17683d2aebabccf5caf8a0e27dbf5de5fec3a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If not used, 2xx thru 3xx status codes imply success&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55922b5828173a595f1e1fe87f00529cf6e6d782" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Ign&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Ign&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a93dfecfec36946169962e5056a97a5b9b5eedfd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In Apache httpd 2.0 and 2.2, &lt;code&gt;Win32DisableAcceptEx&lt;/code&gt; was used for this purpose.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9020479478f9dbd3994339ee376d6173d618a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Init&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Init&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4343fdd0942b69383f93a6ecd39808276670f693" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Key Exchange Algorithm:&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956d7c5f3027a1e7e77c5f51c81f3932abc5cd25" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Key Exchange Algorithm&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05da1579371c9ae7138d1374c57f1d3bda795f78" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;MAC Digest Algorithm&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0342a4a7fd8a6472d7fd22cb5bfa0f93cc3bbfd8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NN&lt;/em&gt; must be replaced with the current version number, and &lt;em&gt;PREFIX&lt;/em&gt; must be replaced with the filesystem path under which the server should be installed. If &lt;em&gt;PREFIX&lt;/em&gt; is not specified, it defaults to &lt;code&gt;/usr/local/apache2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a60c3b04825a7530188b9bbc894c54a44bce31d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NOTE:&lt;/em&gt; Since response body can quite large, it is best if used against specific status pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64509b3423a1126a4adb7a4bc9de4b891cbd7be6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note that using mod_authz_dbm requires you to require &lt;code&gt;dbm-group&lt;/code&gt; instead of &lt;code&gt;group&lt;/code&gt;:&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e25b4b7e1990f68ea07cb4d6f5ae225208405b6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Ok&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Ok&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e2ae6985e9eff648b93c6893a73846544e2d4739" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Ordering&lt;/em&gt; is one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4780a1bff1cbf0ad7ce1502db3dbd60db1eccdb0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Packet Format (Container-&amp;gt;Server)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05f8a2e91f438f7ff137dcece8322edf69b9cde" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Packet Format (Server-&amp;gt;Container)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811d1fb5f42aa9832beb4a14d3d422368f5468c4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;RSA Ciphers:&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe834e9cfbd5f7a867cf58b1799bf9f39c0f47c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;SECURITY:&lt;/em&gt; When specifying where to write log files, be aware of some security risks which are present if anyone other than the user that starts Apache has write access to the directory where they are written. See the &lt;a href=&quot;../misc/security_tips&quot;&gt;security tips&lt;/a&gt; document for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23a03d8deaf351551aa9da0426a03544feb2002" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Send a Problem Report to the Apache httpd Users Support Mailing List&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4329fb9a1e237009aa678b995fe332cda20675d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Spar&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Spar&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de781fabaeb759b2126c13077acbd8e0b800f243" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Stby&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Stby&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="503a356b5a5c0d417d60feabfa5841536bc409e7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Stop&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Stop&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c2ac96472f69c8eccd689e347011d334273c709" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TestString&lt;/em&gt; is a string which can contain the following expanded constructs in addition to plain text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e749da8481184691a125c8c13735e4ceb6bc6f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt; is simply &lt;code&gt;authn&lt;/code&gt; for authentication, &lt;code&gt;authz&lt;/code&gt; for authorization, or &lt;code&gt;authnz&lt;/code&gt; for combined authentication and authorization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="794601e8b5ef90dfffc7c6a51806de33f6025e6c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt;&lt;code&gt;authn&lt;/code&gt;, &lt;em&gt;mechanism&lt;/em&gt;&lt;code&gt;AuthBasicProvider&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128750f6b39e09d2910d094e9d36340616ae2af7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt;&lt;code&gt;authn&lt;/code&gt;, &lt;em&gt;mechanism&lt;/em&gt;&lt;code&gt;check_user_id&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd6daa8f3627e20ef5213eaaf96115bd4226ffa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt;&lt;code&gt;authnz&lt;/code&gt;, &lt;em&gt;mechanism&lt;/em&gt;&lt;code&gt;AuthBasicProvider&lt;/code&gt;&lt;em&gt;+&lt;/em&gt;&lt;code&gt;Require&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41ebe0b170ef88ee6a653b487aa146a5ae63fe9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Type&lt;/em&gt;&lt;code&gt;authz&lt;/code&gt;, &lt;em&gt;mechanism&lt;/em&gt;&lt;code&gt;Require&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad8aab92f5b87daab6977f79f41697b85cf0a01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Write a Problem Report in the Bug Database&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30d15e931f1ba76451983b2c67e3dc55f0e7c5b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;backend-address&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;backend-address&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d2a9a637af836038038fc6e2afba7d348558eac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exec:&lt;/em&gt; was added in 2.4.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c47efa24c784476a0db5de6627bbaf9ec7e195" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;foo.en.html.gz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;foo.en.html.gz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f9dd324dc79daa9337cdef7018941a50c3199f63" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;foo.en.html&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;foo.en.html&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6aeac4dba5048fdf7dda1028bcbbf413a97de87d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;foo.gz.html.en&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;foo.gz.html.en&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c390668687d92d346b39eeb2a25f9bd77ad9d07d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;foo.html.en.gz&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;foo.html.en.gz&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a457407cb8e83030e85f4a6db803a944fcbd85d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;foo.html.en&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;foo.html.en&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="206e8b40aef7cceafe3e6b492bd178fb87c69667" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;foo.html.gz.en&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;foo.html.gz.en&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04c59238310bfcf16cbbb35553d54bbfdca9360e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;option&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;option&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4f68952eb9d4ad2e28835233749618f5261a63f9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;provider-name&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;provider-name&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a5c2f2e40b49b593b7d3e131180aba3980559091" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;type&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1ccd26f204bc98bcb330b2b420e231f49ae86d04" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x509&lt;/em&gt; specifies a component of an X.509 DN; one of &lt;code&gt;C,ST,L,O,OU,CN,T,I,G,S,D,UID,Email&lt;/code&gt;. In httpd 2.2.0 and later, &lt;em&gt;x509&lt;/em&gt; may also include a numeric &lt;code&gt;_n&lt;/code&gt; suffix. If the DN in question contains multiple attributes of the same name, this suffix is used as a zero-based index to select a particular attribute. For example, where the server certificate subject DN included two OU attributes, &lt;code&gt;SSL_SERVER_S_DN_OU_0&lt;/code&gt; and &lt;code&gt;SSL_SERVER_S_DN_OU_1&lt;/code&gt; could be used to reference each. A variable name without a &lt;code&gt;_n&lt;/code&gt; suffix is equivalent to that name with a &lt;code&gt;_0&lt;/code&gt; suffix; the first (or only) attribute. When the environment table is populated using the &lt;code&gt;StdEnvVars&lt;/code&gt; option of the &lt;code&gt;&lt;a href=&quot;#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; directive, the first (or only) attribute of any DN is added only under a non-suffixed name; i.e. no &lt;code&gt;_0&lt;/code&gt; suffixed entries are added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8321b494d1c30b8c94842f7e8decf8c8d9799092" translate="yes" xml:space="preserve">
          <source>&lt;q&gt;Public Key Cryptography Standards (PKCS)&lt;/q&gt;, RSA Laboratories Technical Notes, See &lt;a href=&quot;http://www.rsasecurity.com/rsalabs/pkcs/&quot;&gt;http://www.rsasecurity.com/rsalabs/pkcs/&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d064a08ff922c64da0a8bc215c18dcec03f6b0" translate="yes" xml:space="preserve">
          <source>&lt;q&gt;The TLS Protocol Version 1.1&lt;/q&gt;, 2006. See &lt;a href=&quot;http://tools.ietf.org/html/rfc4346&quot;&gt;http://tools.ietf.org/html/rfc4346&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89df7e8bf0fb6a3822fd5241ede14b9e47693c3" translate="yes" xml:space="preserve">
          <source>&lt;q&gt;The TLS Protocol Version 1.2&lt;/q&gt;, 2008. See &lt;a href=&quot;http://tools.ietf.org/html/rfc5246&quot;&gt;http://tools.ietf.org/html/rfc5246&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82eae0a9355ee7ce9c5995f8dc557dc29921e31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; (&lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; + (&lt;code&gt;AsyncRequestWorkerFactor&lt;/code&gt; * &lt;var&gt;number of idle workers&lt;/var&gt;)) * &lt;code&gt;&lt;a href=&quot;mpm_common#serverlimit&quot;&gt;ServerLimit&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; (&lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; + (&lt;code&gt;AsyncRequestWorkerFactor&lt;/code&gt; * &lt;var&gt;number of idle workers&lt;/var&gt;)) * &lt;code&gt;&lt;a href=&quot;mpm_common#serverlimit&quot;&gt;ServerLimit&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2fc9564d54a51aba52cf834cb2154db15ef8857a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; (&lt;code&gt;AsyncRequestWorkerFactor&lt;/code&gt; + 1) * &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; (&lt;code&gt;AsyncRequestWorkerFactor&lt;/code&gt; + 1) * &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b353df0f657095897c7744e5d2f0c71a33aebf37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; &lt;code&gt;${&lt;/code&gt; &lt;em&gt;MapName&lt;/em&gt; &lt;code&gt;:&lt;/code&gt; &lt;em&gt;LookupKey&lt;/em&gt; &lt;code&gt;}&lt;/code&gt; &lt;br/&gt; &lt;code&gt;${&lt;/code&gt; &lt;em&gt;MapName&lt;/em&gt; &lt;code&gt;:&lt;/code&gt; &lt;em&gt;LookupKey&lt;/em&gt; &lt;code&gt;|&lt;/code&gt; &lt;em&gt;DefaultValue&lt;/em&gt; &lt;code&gt;}&lt;/code&gt; &lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;${&lt;/code&gt; &lt;em&gt;MapName&lt;/em&gt; &lt;code&gt;:&lt;/code&gt; &lt;em&gt;LookupKey&lt;/em&gt; &lt;code&gt;}&lt;/code&gt; &lt;br/&gt; &lt;code&gt;${&lt;/code&gt; &lt;em&gt;MapName&lt;/em&gt; &lt;code&gt;:&lt;/code&gt; &lt;em&gt;LookupKey&lt;/em&gt; &lt;code&gt;|&lt;/code&gt; &lt;em&gt;DefaultValue&lt;/em&gt; &lt;code&gt;}&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ade13bf4372bf86b97f94b07b9c5ae12f03e56c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; + (&lt;code&gt;AsyncRequestWorkerFactor&lt;/code&gt; * &lt;var&gt;number of idle workers&lt;/var&gt;) &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99a2db718eab8f7838ac50f807154f2772260b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&amp;gt;=CondPattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;gt;=CondPattern&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="851261b796e5774f1288fd90cf9be30873767867" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&amp;gt;CondPattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;gt;CondPattern&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3234f83df14cfdd8e7a3c803bf4a9f12c00743aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&amp;lt;=CondPattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;lt;=CondPattern&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="381da661a117a12842fb655d5db0271cc9069b04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&amp;lt;CondPattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&amp;lt;CondPattern&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="188fecc3fc5cbf10791560c1680e0c54b8e14265" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-F&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-F&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fdecbcb67d568878985c9c3fbff241336bb1e8d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-L&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-L&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="adb7fc07e6f950263f378e0c9b7b33fd44681bb0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-U&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-U&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f243e1ed6b42339f86848dc86f3ea5c191601798" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-d&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-d&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c3ca5e1f91203c8247246bf173139a63a7af5f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-eq&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-eq&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="571cdf009b22e71becf4b4dd547a4229aaed6b40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-f&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-f&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a509b69c1f9be5278e4ea521dfe8729663a4e9a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-ge&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-ge&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf12cfd2adc01800c5a61c5d93bb9bbdf78ac37c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-gt&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-gt&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aaa0c953708ded51934e977455c23f32ab31ac8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-h&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-h&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a68ac9f33c30b8d2b5328617d22a354e835d9606" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-l&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-l&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0de2328d91a9b8d2028f27b224a66da9b8c037ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-le&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-le&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67b54c95c2fb8418e5c46e2a35b60aaea37c9d95" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-lt&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-lt&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c84bf2ee998d3a4a442923ac552f2714b2e6301d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-ne&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-ne&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="524ab107a1ccaf9788b840f9d46925bd14044609" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-s&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-s&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d9474d608c431d06eec01359ef17b725d69b880" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;-x&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;-x&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98b071fb9ca62c972e4cdebf088f8b17e54e452a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a id=&quot;what_is_matched&quot; name=&quot;what_is_matched&quot;&gt;What is matched?&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e40858f5d97eab7d7ffe6ef369d688943b7890" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;${&lt;/code&gt; &lt;em&gt;MapName&lt;/em&gt; &lt;code&gt;:&lt;/code&gt; &lt;em&gt;LookupKey&lt;/em&gt; &lt;code&gt;}&lt;/code&gt;&lt;br/&gt; &lt;code&gt;${&lt;/code&gt; &lt;em&gt;MapName&lt;/em&gt; &lt;code&gt;:&lt;/code&gt; &lt;em&gt;LookupKey&lt;/em&gt; &lt;code&gt;|&lt;/code&gt; &lt;em&gt;DefaultValue&lt;/em&gt; &lt;code&gt;}&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;${&lt;/code&gt; &lt;em&gt;MapName&lt;/em&gt; &lt;code&gt;:&lt;/code&gt; &lt;em&gt;LookupKey&lt;/em&gt; &lt;code&gt;}&lt;/code&gt;&lt;br/&gt; &lt;code&gt;${&lt;/code&gt; &lt;em&gt;MapName&lt;/em&gt; &lt;code&gt;:&lt;/code&gt; &lt;em&gt;LookupKey&lt;/em&gt; &lt;code&gt;|&lt;/code&gt; &lt;em&gt;DefaultValue&lt;/em&gt; &lt;code&gt;}&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0e057aeca820f716232cf59217cbf8bff7d81b99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;aNULL&lt;/code&gt;, &lt;code&gt;eNULL&lt;/code&gt; and &lt;code&gt;EXP&lt;/code&gt; ciphers are always disabled&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c26637d191e24168c6fa49609236690a772f5f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;=CondPattern&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;=CondPattern&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb3bf3b9bbb5ceb2649934e1002a6eadf038c07a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Additional ProxyPass Keywords&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14d95649d1b6a466cef6b48a8f0d1bd04940863" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;All&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1bd600fb7f94791b61d0339e34347a2d164cd001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arguments with path information&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3be518de68d8f99e0095e9d520ae374e26f3e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Be careful when using this directive; for instance, &lt;code&gt;&quot;UserDir ./&quot;&lt;/code&gt; would map &lt;code&gt;&quot;/~root&quot;&lt;/code&gt; to &lt;code&gt;&quot;/&quot;&lt;/code&gt; - which is probably undesirable. It is strongly recommended that your configuration include a &quot;&lt;code&gt;UserDir disabled root&lt;/code&gt;&quot; declaration. See also the &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;Directory&lt;/a&gt;&lt;/code&gt; directive and the &lt;a href=&quot;../misc/security_tips&quot;&gt;Security Tips&lt;/a&gt; page for more information.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4d9d3331372b90e0cbf8e585a8ff2833a3e1e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Boolean&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Boolean&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf30399143160021a27987c0da0aca754b7ad116" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Building with OpenSSL 1.1.0 and up&lt;/strong&gt; Due to difference in the build structure of OpenSSL begining with version 1.1.0 you will need to convert the dsp files affected with cvtdsp.pl from APR 1.6 or greater. The command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab490ce603e43b7e88d1f14a7ab29b75e402be8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Byte&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Byte&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d37db521c8444dfb2ec740522e96a0e55b8a87c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cached lookups&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9705c31125cf2da352416b2dc40fe27a8894ac3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Can the wrapper successfully become the target user and group?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53acc80a819eb90d1d32c79c8ba074c159b1d450" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Can we change directory to the one in which the target CGI/SSI program resides?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3564f1e3624853ff33d236da968873abbd3eca98" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Can we successfully become the target CGI/SSI program and execute?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f0e0f07c701dc51d7ebe56ab0a003b9d61930f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Can we successfully clean the process environment to ensure safe operations?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf70e230b91d2ea94e371b661b132b4ef41b27d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caution!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Caution!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="059b75a078889e31e60fa568279a9be07643cc66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caution&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Caution&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="08a3da3a780e766945b6fd623fb01ab2d982b2ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caveat&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Caveat&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8411db22ae7599dbd67abcc3a8fbbf742f709170" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Choose a strong SSLCipherSuite&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b12c9447701f0c5696b21986a72f1885f54bef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Command line tools and CRLF&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74bf33e659b7072162d38611dea3a5e93aaa323" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compatibility&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Compatibility&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8c4ba64fff8d9863d380bbba3505d60c15607d3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Compression and TLS&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f148da8730f00cc02e88d815b5a2d4f2eacfd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration directives&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5736d9e43ff84bc86ab9b13beb128683c21c4d89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Configuration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f48c341850023fe7aefd0466ae5f14880413c30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Context&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Context&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28b42d1953dc8cc40443c96784cb05ccc24a5ed2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cookie2&lt;/strong&gt; or &lt;strong&gt;RFC2965&lt;/strong&gt;, which is the most current cookie syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83635ac947395d6e91789085d3da41e8f22d8278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Cookie&lt;/strong&gt; or &lt;strong&gt;RFC2109&lt;/strong&gt;, which is the syntax that superseded the Netscape syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308725c4b7fda845912f22948dd47318f84847ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Core Dumps on BSD&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf7848c2ad6683e0f279700b510a4962a685de8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Core Dumps on Linux&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc230e4f955f1c936b0473100e08639297962af" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create DBM file&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fea4b846fe928737f73f744eac4ad8dde5034d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DH parameter interoperability with primes &amp;gt; 1024 bit&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8b2ea29297dcb6d65195446de6f60badadfb39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DNS resolution for origin domains&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b733a980069d8b974cb6bedbe205ff6d1f57949" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default DH parameters when using multiple certificates and OpenSSL versions prior to 1.0.2&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da21f95b8ee517103055bc4c861c03d48ea13081" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default Substitution&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d583721fdee9eda617809d6d5f0932df533809dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Description&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Description&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c1518db2e49aee7bbe99486adcb5e83a53ae99b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Developer's Note&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32c5b3108d08f4c4d2dcf98b1f82aea4b8f1660" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Differences from the Location configuration section&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a320be38ae35f31749673ff41d12c4166ef6f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Disable module for a vhost&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557727c85f194e2d206ad4ce93a098b1090408d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Does the target CGI or SSI program have an unsafe hierarchical reference?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecdf861f6b0800ed1210ef9d0e635faad515252" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Does the target CGI/SSI program exist?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2c9aa5e0528dfd0df6c1b022b308f525cf1d93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Effectiveness&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Effectiveness&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="413a0978789cb36b710c3c14e4f94209d4c9c110" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Enable connection reuse to a FCGI backend like PHP-FPM&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186e1c23f040cd199af85de39e3922f8b44d0da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Environment variable ordering&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5622b3a9b057f8a77f7ff9a5574ba16a0e7685" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Error code 2186&lt;/strong&gt; is a good indication that you need to review the &quot;Log On As&quot; configuration for the service, since Apache cannot access a required network resource. Also, pay close attention to the privileges of the user Apache is configured to run as.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf277fc90442d69669cd2038643d273f6c55d29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Error condition&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a119710fcb873a8a827c7fe57c864a88dfc6bc45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Escaping slashes in regex strings&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c955cbf9a6347bfa01b13c62eebfb6ad4bb0d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Escaping values, closing databases etc:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4168878b06eaa6917a0f012585506612f5054ea6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bce3f4a409dc0c67054a7e806ad3eecf69f742f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Example&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45329757f8f1fff0a1c43a6610639905bcf54c85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exclusions and the no-proxy environment variable&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07eb22933aa30c56feb64f228bd16971e42aff4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Fixed timeout value&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a08a0966ac603b62909aad5516f14dfca9377ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Forward Proxy compatibility&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea416ab2f1228699d09976b7bba988f70ea5cef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Full&lt;/strong&gt; is synonymous with &lt;strong&gt;On&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6813a5e4e02088de6bd3f03e187038bfe26f72c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HIT&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;HIT&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47db3d87c54a9cceae63720d6ca91e0b29b958cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP/2 in a Server context (TLS and cleartext)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a958f1e61c57f31add9fd0c4e2c32715ba50eeb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP/2 in a VirtualHost context (TLS only)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362ca2cdae721cc2bd8d305f7eee722a203f49d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Hint&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Hint&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="92a66adcb31851e6a2fd18a755dd3f8be8ca2a48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Home directory expansion&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33bef19471fb1e849e5fd1bfc25613d53daef65a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;INode&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;INode&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d91ff7cec0d1905677fe8a2ff5abd896f47241a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IPv4-over-IPv6 Mapped Addresses&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e224a3eaba285b2cbde93dd3490a2a9f1986784" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Implicit disabling of Options&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67dc7629cf58f1006cca29765b371937f355d42" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Inside per-directory configuration for &lt;code&gt;/somepath&lt;/code&gt;&lt;br/&gt; (&lt;code&gt;/physical/path/to/somepath/.htaccess&lt;/code&gt;, with &lt;code&gt;RewriteBase &quot;/somepath&quot;&lt;/code&gt;)&lt;br/&gt; for request ``&lt;code&gt;GET /somepath/localpath/pathinfo&lt;/code&gt;'':&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5163ab7625fd10a99932bd16be08296d39076a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Inside per-server configuration (&lt;code&gt;httpd.conf&lt;/code&gt;)&lt;br/&gt; for request ``&lt;code&gt;GET /somepath/pathinfo&lt;/code&gt;'':&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a65b53ba5171147edc71e3d50a8c4fd36e4be4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Integer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Integer&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c08c2c365768c0507a15e3e5e8f180d97b70998a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Internal (Private) Addresses&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830603ac5fec790b9b36fdfb87ca6554d6a95c5d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the directory &lt;em&gt;NOT&lt;/em&gt; writable by anyone else?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5cda1293bc81c09568fbfb63c49bf4f728b8cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the directory within the httpd webspace?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1c8066630ec2057eb72db82be221aca484bf8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the target CGI/SSI program &lt;em&gt;NOT&lt;/em&gt; setuid or setgid?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a34292cf39637985283512b7ffe5a7740891a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the target CGI/SSI program &lt;em&gt;NOT&lt;/em&gt; writable by anyone else?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e848b40d07b3a27e3018b97aafb9f7a961c476c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the target group &lt;em&gt;NOT&lt;/em&gt; the superuser group?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c7873a6b1acc48a4d115d134c6638e3857765d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the target group name valid?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e2e8efaa5c751aa7dd35dba0907af35c8fbee3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the target groupid &lt;em&gt;ABOVE&lt;/em&gt; the minimum ID number?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d760f8c520491996e116ca13ca1130f81514615" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the target user &lt;em&gt;NOT&lt;/em&gt; superuser?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851924cc39bbacbe0d15b0963178fcc890709128" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the target user name valid?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d862ba9c3c91f8a358bbb0f2ce9cd26d5a1b4394" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the target user/group the same as the program's user/group?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37adefe9b6f7eed383749c7d3bb037320c8d8d25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the target userid &lt;em&gt;ABOVE&lt;/em&gt; the minimum ID number?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4268703275487510e9eaca0321dfb6cbcf5a81ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is the user executing this wrapper a valid user of this system?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b639e3c683b81d8bd58d566f76bf807627ce10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Is this valid user allowed to run the wrapper?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1223f483b17f3c2de128a72128200be182559b76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;It should be noted that if &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; is loaded into the server, its handler capability is available in &lt;em&gt;all&lt;/em&gt; configuration files, including &lt;em&gt;per&lt;/em&gt;-directory files (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;.htaccess&lt;/code&gt;). This may have security-related ramifications for your site.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f29adc18850192f5a8cbe623f221a0da077af60" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Level&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Level&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4eff564ae451e8c9fbe239a625971748f7f1bdd2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Limitations&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Limitations&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cda1a435abef50c04700d734875e58c4f2c47005" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Lua filters with &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db60ffc6198c3daeed433b500f82f046cc29c427" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Lua type&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871f44f9a2c72123b17bbc67cae7ff13576a577b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MISS&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;MISS&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7b98e02cca9243d34b51d57f5b2ffb29bf8c238" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;MTime&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;MTime&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc806e282a8a51c9b39a96f6d937c29e83b8ce8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Mac OS homebrew notes&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4230a54d54873744c4da5d252412ca6957f22849" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Main host goes away&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75328f46f1af0283b0f855c720102cca2a4e0a08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Maximum connections to the backend&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ee7371966946eb210dec5e3665153a44532935" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Meaning of &quot;online&quot; CPU core&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff07e3f217fe77e7104830be892515b14c89ae9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Merging details&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b304ef005685fe711410280dc50b55440cc7991" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Merging of configuration sections&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da807406e761cd37ffab62779708f1e7e432be9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Modifying the Query String&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc14ed5b118bf5b70deedc7790e4e44fc77b669" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Multiple &lt;code&gt;Listen&lt;/code&gt;ers or Apache HTTP servers on the same IP address and port&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb18646f44d0d16c5b4105a620ce7a920a2e562" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE!&lt;/strong&gt; This section may not be complete. For the latest revision of this section of the documentation, see the &lt;a href=&quot;http://httpd.apache.org/docs/2.4/suexec.html&quot;&gt;Online Documentation&lt;/a&gt; version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee5615194a6e2e9ee39332a6bbbd9b28cb8a86e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Name&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="15cd54fe05b5352a3b744cb959d4883c3c2b4db6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nested groups performance&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e82a3f61e836ed8b6413bef3dfa4f1a3cd8fd52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Netscape&lt;/strong&gt;, which is the original but now deprecated syntax. This is the default, and the syntax Apache has historically used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795124f23c6cb7795450082216795e0b6c0958b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Never grant any network privileges to the &lt;code&gt;LocalSystem&lt;/code&gt; account! If you need Apache to be able to access network resources, create a separate account for Apache as noted below.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dfae2820b8c3e724ad95bfde6a9b4539a58d6fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;None&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;None&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd4508eab5fdbe494777fffc93e97b80fcc5d490" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;None&lt;/strong&gt; of these will be set if the &lt;code&gt;&lt;a href=&quot;mod/core#errordocument&quot;&gt;ErrorDocument&lt;/a&gt;&lt;/code&gt; target is an &lt;em&gt;external&lt;/em&gt; redirect (anything starting with a scheme name like &lt;code&gt;http:&lt;/code&gt;, even if it refers to the same host as the server).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600d5415884a0f2edf181fbe90eee80db38a2644" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nonfatal=All&lt;/strong&gt; treats both the above as nonfatal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3f56d4decc4477b3d07c90be939ed4e128394f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nonfatal=Override&lt;/strong&gt; treats directives forbidden by AllowOverride as nonfatal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fca50289000c3f74718d563e373c4914683c1bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nonfatal=Unknown&lt;/strong&gt; treats unknown directives as nonfatal. This covers typos and directives implemented by a module that's not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5b205bbe71d7a4bb0934eef76eaf62ad7352d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Normal select and query from a database:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573ac424cc5395bdd406b3f5f6809eab27cc1e1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Not available with authorization-only&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64bf2302ae2d67284dfe1a112f35aea1e867caa6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note about / (slash)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9404abb158f7ae2db840f7851dff49eaaa6bdc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note on Content-Length&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9cab7b9294de830aae4a9f49a01a8f7f676255e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note on expression values&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296f3c79b117f008d00445ef3827fb7c1e8d8a33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note that the default access for &lt;code&gt;&amp;lt;Directory &quot;/&quot;&amp;gt;&lt;/code&gt; is to permit all access. This means that Apache httpd will serve any file mapped from an URL. It is recommended that you change this with a block such as&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33ab123ebc796e6f08e892394d4081b1aed9529" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: .htaccess files&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04af2d7b536541ba67ef87734bfa6589a85d1e08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: &lt;/strong&gt;This directive cannot be used within a &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5331116928519e93ba5a30eddc22ee958aac4525" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: Unset vs. Empty&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65dcf051b0f8d4d6b70a92dd10d98dbbb05e7cdd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Note:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51fcf713c3959d33c1a3d24b921e0c8961d740b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Each request set aside has to be set aside in temporary RAM until the request is complete. As a result, care should be taken to ensure sufficient RAM is available on the server to support the intended load. Use of this directive should be limited to where needed on targeted parts of your URL space, and with the lowest possible value that is still big enough to hold a request body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd8eb350d06ecf8c7e4c416f2a9343885b70799" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Multiple &lt;code&gt;DirectoryIndex&lt;/code&gt; directives within the &lt;a href=&quot;../sections&quot;&gt;&lt;em&gt;same context&lt;/em&gt;&lt;/a&gt; will add to the list of resources to look for rather than replace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ab574308ba7dd5784082c21d3be7f1f9c241ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The path associated with the &lt;code&gt;unix:&lt;/code&gt; URL is &lt;code&gt;DefaultRuntimeDir&lt;/code&gt; aware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cd00a05c4e51c80b150666326157914820525e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Note&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a260d5c86b9273ec2c360f7dc76b307fb2880b1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes on the PeerExtList function&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef937726101d6bbf1ea792d981c362dd127505c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Notes:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b2596d1a98265fb911f46d0c9f6fc032f7dad23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notice&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Notice&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d67dbc92b1ea7e7ea3ec358716f32670b3eec44b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Only available in &amp;lt;Directory&amp;gt; sections&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ec3fb0fea1eb8e28cb0ab842f620f1afc23fa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Optimization of Boolean Expressions&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74980cc0be71e3d187b51886ba24eb796b2d2ca3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ordering ProxyPass Directives in Locations&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a28dc7782b4a84d1fc22c9795ca74b4b4d1604" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ordering ProxyPass Directives&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94524116d71aa7acd5498a329f8ca43313def99c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Ordering&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ordering&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc42864612f479ce52cd0f76e6a6d3f733a4e4f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Parameters&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8ddf9c83dc393fefac033aafa7587390dae54ca1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Per-directory Rewrites&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d2dcea74d9514274f4c55c020210a7aefa7f77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Per-directory and .htaccess context&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1770c01117273bc190aa40723f29f61671e1f120" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Performance warning&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ce9dea35eb6602b61f5e8553548d4ce67a0350" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prerequisites&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Prerequisites&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8bd3152a4e181e7f25cf28a08fe215769d086071" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Product to ID configuration&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb708aa5feaf33f50188942a9ff6fc436b2db18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ProxyExpress map file&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f19012004cabe14a65a6dc0a488b4ab28de9a52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ProxyPass &lt;code&gt;key=value&lt;/code&gt; Parameters&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f66aa6b29aacedfd6c7decb888f5ba2a7879db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;REQUEST_URI&lt;/strong&gt; rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e115e305af9509050243df78237d36d694f61601" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;REVALIDATE&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;REVALIDATE&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7d2c8a3000af30278bd15a06142be6fea3837446" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Redirect a URI to an all-lowercase version of itself&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51e70285cdd969443ea6ec19b62ca25f31ce3ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reference Documentation&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1187310a4b07636b405371d155fdb926e3a691bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regular Expressions&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796b8703e03c45adf727cf06b2585b884d584a64" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Restrictions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Restrictions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a6f95cab596d747b6affe1a036b7444f5ed218e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rewrite configuration&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440b45f2feccd794353dbbb3185e1b10bbab301b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RewriteCond backreferences&lt;/strong&gt;: These are backreferences of the form &lt;strong&gt;&lt;code&gt;%N&lt;/code&gt;&lt;/strong&gt; (0 &amp;lt;= N &amp;lt;= 9). %1 to %9 provide access to the grouped parts (again, in parentheses) of the pattern, from the last matched &lt;code&gt;RewriteCond&lt;/code&gt; in the current set of conditions. %0 provides access to the whole string matched by that pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc47a7a66f195c8eadf33000525331ea8fdd392" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RewriteLog&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RewriteLog&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b137519b9dd6aec87c78830076740ab5571ca0c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RewriteMap expansions&lt;/strong&gt;: These are expansions of the form &lt;strong&gt;&lt;code&gt;${mapname:key|default}&lt;/code&gt;&lt;/strong&gt;. See &lt;a href=&quot;#mapfunc&quot;&gt;the documentation for RewriteMap&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a98763bfa760b933af5bdb1924e2465bd95f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RewriteRule backreferences&lt;/strong&gt;: These are backreferences of the form &lt;strong&gt;&lt;code&gt;$N&lt;/code&gt;&lt;/strong&gt; (0 &amp;lt;= N &amp;lt;= 9). $1 to $9 provide access to the grouped parts (in parentheses) of the pattern, from the &lt;code&gt;RewriteRule&lt;/code&gt; which is subject to the current set of &lt;code&gt;RewriteCond&lt;/code&gt; conditions. $0 provides access to the whole string matched by that pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99f07ffceff55dc57ea179f603714bcf078110d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SSLCertificateChainFile is deprecated&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bae3348f72df0203f09c9f33d005f7c97f5d43a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SSLRequire is deprecated&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a2aa1c126d22b8883ee55e3c4bd3fe046e83e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Security Warning&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa52e88ec588c4033c1042068eb1e22bf70f0c39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Security note&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ce443a01666a0de9cd81d0c3eb3988a5d5530d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Security risks of Unsafe&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f878f8dba9e2f85f010ea6a1e402495ebc438da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Security warning&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee4395695d86cbf6cc32a262223bab9063e25a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Security:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Security:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0fdc2b4b4a79099ec5cb2046eb596a72f811299" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Security&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Security&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="16edcfedc10f1fdfeaf2dc75ee4a15225dba4759" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;See Also&lt;/strong&gt; the &lt;a href=&quot;mod_proxy_http#env&quot;&gt;Proxy-Chain-Auth&lt;/a&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5bb51d877f5ce81723b6353f32cba17ed0e99d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Server Side Includes&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40f1d3cb38eec5224a29ea8c7974308316911a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Server driven negotiation with the httpd algorithm&lt;/strong&gt; is used in the normal case. The httpd algorithm is explained in more detail below. When this algorithm is used, httpd can sometimes 'fiddle' the quality factor of a particular dimension to achieve a better result. The ways httpd can fiddle quality factors is explained in more detail below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18563d6536ec3737c468ee608ae27a2b8358c2f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Server-Variables&lt;/strong&gt;: These are variables of the form &lt;strong&gt;&lt;code&gt;%{&lt;/code&gt; &lt;em&gt;NAME_OF_VARIABLE&lt;/em&gt; &lt;code&gt;}&lt;/code&gt;&lt;/strong&gt; where &lt;em&gt;NAME_OF_VARIABLE&lt;/em&gt; can be a string taken from the following list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b2b73093b4c207bc4a58ee6976df20f104965e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ServerName inheritance&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="202518b4b4fb4b4547ec8c395c1ec68ff347c495" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Size&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Size&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="38525aec6357059849eb806e211c59c1764b5a3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specific signals&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7593566f175e8d782e361fe7522b4b4c346ab54a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;String&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="87108678a4ca2c513a5978e8e76654846df2e368" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Supported modules&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e16cb1be8a15a622b7c0333c8adf596494c580" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLS in a VirtualHost context&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1aac84bb7ab7c88dc466b2c44f084ac4729912" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Technical Note&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec20e9ac24990b50e019a33146cf9da99f5159f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;data&lt;/code&gt; AcceptFilter (Windows)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c140b5e643d8396202758bc6a3012ef6b9d71f32" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The following has consequences: &lt;/strong&gt;if you want client to &lt;strong&gt;no longer&lt;/strong&gt; use the http: URLs, configure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8263a5ac8cadd71453e5fbef0d8c97a7cd03c5bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Timeout value that is increased when data is received, with an upper bound&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfbd55fddc025850e60ca7a259e64e99738707e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Timeout value that is increased when data is received&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523212a420305c548c566878c29c32b7be0c6fed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Trailing Slash&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6a2d265dae1f18370224554435adaf0e0f7983" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transparent content negotiation&lt;/strong&gt; is used when the browser specifically requests this through the mechanism defined in RFC 2295. This negotiation method gives the browser full control over deciding on the 'best' variant, the result is therefore dependent on the specific algorithms used by the browser. As part of the transparent negotiation process, the browser can ask httpd to run the 'remote variant selection algorithm' defined in RFC 2296.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea15445149bd9b02c888a0f68ee4f3931cea163" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;User directories:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b578c13c71cc5c79b82a37c361b28eb3ad0df6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Using prepared statements (recommended):&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6a86faa0acfbf0f321246801b96d25f2aa249e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Virtual Host scope and pitfalls&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c954512f19e16c234249bb4010e91a902c2a0ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Virtual Hosts:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b621b3c44108fc0155d899cef54e1a4d6499986" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning: The server configuration file is reread when a new child process is started. If you have modified &lt;code&gt;httpd.conf&lt;/code&gt;, the new child may not start or you may receive unexpected results.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251436bcf1a85c83d8711b39296fe259fc9d0256" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Warning:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4aa03d82a91c62ab90e2373d0f6e6e497e275f3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; This document has not been updated to take into account changes made in the 2.0 version of the Apache HTTP Server. Some of the information may still be relevant, but please use it with care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39477b49903116641fa46ec191b0498cfd8880a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; This document has not been updated to take into account changes made in the 2.4 version of the Apache HTTP Server. Some of the information may still be relevant, but please use it with care.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2756abf1eaa19230be9bb95e04f5d2e16307d6dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Warning&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="12db9ec2bd2c1e56b31ee47dd48d1195069d511a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Was the wrapper called with the proper number of arguments?&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869fa4fb9cc645f68ab1dd32e8edccaf873d4333" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When set to &lt;code&gt;chain&lt;/code&gt; or &lt;code&gt;leaf&lt;/code&gt;, CRLs &lt;em&gt;must&lt;/em&gt; be available for successful validation&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28d776c380fdbb49901cd4ce938602e158d7d61" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When to use &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db4dd48b4d59897ecce7aa2c9c77fa2c3e0f3d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Windows note&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9cd9f087589757624c55230f89d8ec89d1f1ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Worker Sharing&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2547a1ae09f06216e95a8f622786ac197377a801" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Writable&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Writable&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c4f272df5b5afb7faf41b752171acf797e73747" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;and then override this for directories you &lt;em&gt;want&lt;/em&gt; accessible. See the &lt;a href=&quot;../misc/security_tips&quot;&gt;Security Tips&lt;/a&gt; page for more details.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b3366a7d6b3224d42489fc2925bcc1cfb7c7f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cgi-script&lt;/strong&gt;: Treat the file as a CGI script. (&lt;code&gt;&lt;a href=&quot;mod/mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce0f9c4f4e5adde76ec6519f96167c965d938ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dash2under.pl&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;dash2under.pl&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c53505e481421a81a10d2b15776d71b63c017b84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;debugging&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;debugging&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8384da2070081204cd3dfd8647b48f8ba5077eb5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;default-handler&lt;/strong&gt;: Send the file using the &lt;code&gt;default_handler()&lt;/code&gt;, which is the handler used by default to handle static content. (core)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61b1bb721f55a8e33e8530d097d744b172f2368" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;default&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;default&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1fc6efb05c0b3b4cd2768b9fcc6d4e8eaf01ce8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;escape&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;escape&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="418c31bd33aeb73e831f4df356585d0258fa7e8f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;h2&lt;/strong&gt; is HTTP/2 over TLS (protocol negotiation via ALPN).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502a20a9985c7cced7098acd1f1a0d36f7d7f4c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;h2c&lt;/strong&gt; is HTTP/2 over TCP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577a0f510c298e32182030483e250b6f866588ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;imap-file&lt;/strong&gt;: Parse as an imagemap rule file. (&lt;code&gt;&lt;a href=&quot;mod/mod_imagemap&quot;&gt;mod_imagemap&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a793d0e765d5901ee8c9134fc38afc22ff858e93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mod_foo&lt;/strong&gt; will now support any character set supported by either (or both) of libxml2 or apr_xlate/iconv.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45f86d696eef9707d4d1d19a233bcbe71a9320e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;none&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;none&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be39498aaf07d4221478d19401b3eb65d57cbe11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;none&lt;/strong&gt;: no client Certificate is required at all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac30977b87de871a5b7ec0ff4556d7adc58c42b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;none&lt;/strong&gt;: no remote server Certificate is required at all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa079e95e50fc7e3485d4e70fc90e1b2f1dfc5f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;optional&lt;/strong&gt;: the client &lt;em&gt;may&lt;/em&gt; present a valid Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e655ce44a0d7e6ce7916e07c9bc630698727e59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;optional&lt;/strong&gt;: the remote server &lt;em&gt;may&lt;/em&gt; present a valid Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c753727b59c7a1b6a16e0ffce424f1c77136a65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;optional_no_ca&lt;/strong&gt;: the client may present a valid Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c867d4765671bbed4c6cbd476b8e1a740adff4d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;optional_no_ca&lt;/strong&gt;: the remote server may present a valid Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4640e8c20f0400f7166a2152b9dddcb24939f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;require&lt;/strong&gt;: the client &lt;em&gt;has to&lt;/em&gt; present a valid Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebd3d8e6dc9978f5cdf3d169a936a45e81a6d81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;require&lt;/strong&gt;: the remote server &lt;em&gt;has to&lt;/em&gt; present a valid Certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041807872b42d70db64c1819e4e1fee9002876ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;send-as-is&lt;/strong&gt;: Send file with HTTP headers as is. (&lt;code&gt;&lt;a href=&quot;mod/mod_asis&quot;&gt;mod_asis&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab0e48d3f96ed0196b97262e343b13b2e7b2387" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;server-info&lt;/strong&gt;: Get the server's configuration information. (&lt;code&gt;&lt;a href=&quot;mod/mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d569a4f25fb44a87a0824bfb1602dd4596b0f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;server-status&lt;/strong&gt;: Get the server's status report. (&lt;code&gt;&lt;a href=&quot;mod/mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771daf452fbf3c8745f46fc9181715f3fa680969" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;set/unset&lt;/strong&gt; when the request body is received - depending on the content type of the request body (because the request body may contain ASCII text or a binary file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d1b941a276913c80dc1c7f19ac0f29370aa12c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;set/unset&lt;/strong&gt; when the response body is sent - depending on the content type of the response body (because the response body may contain text or a binary file)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287896cd0d6e1ed4b94e5dfdec78db8c824bd668" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;set&lt;/strong&gt; before a reply header is sent (because the response header lines are always in ASCII format)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2045758380553d6bd316b57172bb7325cf557b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;set&lt;/strong&gt; before a request is received (because the request and the request header lines are always in ASCII format)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2df65e7123984258d933c7449045c5f1b12b1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suEXEC Points Of Interest&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbaca442ad7dffddf7e56044bfa26f41a10142f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suEXEC configuration options&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7957ba548102a238348249a3424d372b54a7fb35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;suEXEC&lt;/strong&gt; is based on a setuid &quot;wrapper&quot; program that is called by the main Apache HTTP Server. This wrapper is called when an HTTP request is made for a CGI or SSI program that the administrator has designated to run as a userid other than that of the main server. When such a request is made, Apache httpd provides the suEXEC wrapper with the program's name and the user and group IDs under which the program is to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b5fb8babcbe04051d6e38ef48cc579dc5bf6fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;tolower&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;tolower&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="aeee562be9340a922b84d8307edf417f1b3d1f69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;toupper&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;toupper&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="3b54de008849e8ee4c1b07d7434ee7844f2a50cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type-map&lt;/strong&gt;: Parse as a type map file for content negotiation. (&lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713a7fc1f8a314db92859e4036d2879711b4cf6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unescape&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;unescape&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="7614fb997e85f348111f5caccf832909df189133" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unlimited&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;unlimited&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="71becbd20390a9d795fd01396fdebaf7038ef919" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;3xx-code&lt;/var&gt;: issues a redirection marked by the chosen 3xx code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0eadcc73038dbc67f3dd5d7755b87be7bc1722" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;Filename&lt;/var&gt; must resolve to a document with a major content type of &lt;code&gt;text/*&lt;/code&gt; (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;text/html&lt;/code&gt;, &lt;code&gt;text/plain&lt;/code&gt;, etc.). This means that &lt;var&gt;filename&lt;/var&gt; may refer to a CGI script if the script's actual file type (as opposed to its output) is marked as &lt;code&gt;text/html&lt;/code&gt; such as with a directive like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f061db676a047539b430e16f3802c170cc596d" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;Hostname&lt;/var&gt; comparisons are done without regard to the case, and &lt;var&gt;Hostname&lt;/var&gt;s are always assumed to be anchored in the root of the DNS tree; therefore, the two hosts &lt;code&gt;WWW.ExAmple.com&lt;/code&gt; and &lt;code&gt;www.example.com.&lt;/code&gt; (note the trailing period) are considered equal.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
