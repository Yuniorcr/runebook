<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="nim">
    <body>
      <group id="nim">
        <trans-unit id="623c4e7f0e7bea254e8c8f5be179bcc6305f3ea3" translate="yes" xml:space="preserve">
          <source>low level proc that writes an untyped &lt;em&gt;buffer&lt;/em&gt; of &lt;em&gt;bufLen&lt;/em&gt; size to the stream &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0a6def5da14e58fa47224b3ed8797b55b76aa5" translate="yes" xml:space="preserve">
          <source>low-level matching proc that implements the PEG interpreter. Use this for maximum efficiency (every other PEG operation ends up calling this proc). Returns -1 if it does not match, else the length of the match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fffba7f3fde60fe6d4e4742bc3b76d32bb8115" translate="yes" xml:space="preserve">
          <source>low-level sendTo proc. This proc sends &lt;code&gt;data&lt;/code&gt; to the specified &lt;code&gt;address&lt;/code&gt;, which may be an IP address or a hostname, if a hostname is specified this function will try each IP of that hostname.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f3a3d9d6e4d907a7d12e475d0a751d6b7e256b" translate="yes" xml:space="preserve">
          <source>macro</source>
          <target state="translated">macro</target>
        </trans-unit>
        <trans-unit id="a8790a96c4776a71620b54e4eed2592dec154d00" translate="yes" xml:space="preserve">
          <source>macro of type pointer to fenv_t to be used as the argument to functions taking an argument of type fenv_t; in this case the default environment will be used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0731498bb0d6bbf3825fbde289392d549930ce57" translate="yes" xml:space="preserve">
          <source>macros</source>
          <target state="translated">macros</target>
        </trans-unit>
        <trans-unit id="5440ac6c020ba2acf84958ca053a2bd2d2a3ae42" translate="yes" xml:space="preserve">
          <source>macros.!</source>
          <target state="translated">macros.!</target>
        </trans-unit>
        <trans-unit id="76eb0b63fe38e586ee739c6898ab5b9753339971" translate="yes" xml:space="preserve">
          <source>macros.$</source>
          <target state="translated">macros.$</target>
        </trans-unit>
        <trans-unit id="a89866ac2bd4def85d555a73ae1540be70845978" translate="yes" xml:space="preserve">
          <source>macros.==</source>
          <target state="translated">macros.==</target>
        </trans-unit>
        <trans-unit id="1de75776a9edac43b30ce06e985c34186fbeff77" translate="yes" xml:space="preserve">
          <source>macros.[]</source>
          <target state="translated">macros.[]</target>
        </trans-unit>
        <trans-unit id="e15c6cf8d0bdd446fbdcbef9027971bc2c055bc8" translate="yes" xml:space="preserve">
          <source>macros.[]=</source>
          <target state="translated">macros.[]=</target>
        </trans-unit>
        <trans-unit id="b28b7af69320201d1cf206ebf28373980add1451" translate="yes" xml:space="preserve">
          <source>main</source>
          <target state="translated">main</target>
        </trans-unit>
        <trans-unit id="2cdfa7f65233b5cef73e807b9364c337b712999a" translate="yes" xml:space="preserve">
          <source>main file of the C code generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdbd8491149b69986dc733aa7118d78a70bc16b" translate="yes" xml:space="preserve">
          <source>main module: parses the command line and calls &lt;code&gt;main.MainCommand&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38a0509d45a210821fa7561f603940fdfee482e" translate="yes" xml:space="preserve">
          <source>makes the dynlib pragma have no effect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8131163110c477b39078fbed94f6db9e523cf44a" translate="yes" xml:space="preserve">
          <source>manual memory management (&lt;code&gt;alloc&lt;/code&gt;, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910337d528a61d9315a41e71e20ff43f383d8f73" translate="yes" xml:space="preserve">
          <source>marks SYMBOL so that dynlib:SYMBOL has no effect and can be statically linked instead; symbol matching is fuzzy so that --dynlibOverride:lua matches dynlib: &quot;liblua.so.3&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13104fe9edaed8b084c1174dda1ca9e428f16552" translate="yes" xml:space="preserve">
          <source>marks a sequence &lt;em&gt;s&lt;/em&gt; as &lt;span id=&quot;shallow_1&quot;&gt;shallow&lt;/span&gt;. Subsequent assignments will not perform deep copies of &lt;em&gt;s&lt;/em&gt;. This is only useful for optimization purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2496b95d6f2b2b78d9ea57645f1789a63209a8" translate="yes" xml:space="preserve">
          <source>marks a string &lt;em&gt;s&lt;/em&gt; as &lt;span id=&quot;shallow_2&quot;&gt;shallow&lt;/span&gt;. Subsequent assignments will not perform deep copies of &lt;em&gt;s&lt;/em&gt;. This is only useful for optimization purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2939980c23edd18408216e74e68064c3f33bf41e" translate="yes" xml:space="preserve">
          <source>marks the object &lt;em&gt;x&lt;/em&gt; as referenced, so that it will not be freed until it is unmarked via &lt;em&gt;GC_unref&lt;/em&gt;. If called n-times for the same object &lt;em&gt;x&lt;/em&gt;, n calls to &lt;em&gt;GC_unref&lt;/em&gt; are needed to unmark &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab93184b1744659f5162beef22b666b5411ac26" translate="yes" xml:space="preserve">
          <source>marshal</source>
          <target state="translated">marshal</target>
        </trans-unit>
        <trans-unit id="aacff468ad692cd0c2b1e821abb98462156de8ce" translate="yes" xml:space="preserve">
          <source>marshal.$$</source>
          <target state="translated">marshal.$$</target>
        </trans-unit>
        <trans-unit id="f4815c215f833728fd0ba8b68f258e4f586eb92a" translate="yes" xml:space="preserve">
          <source>marshal.to()</source>
          <target state="translated">marshal.to()</target>
        </trans-unit>
        <trans-unit id="14043a0365219961fd0e6502020c5479ddc691f1" translate="yes" xml:space="preserve">
          <source>match any character except newline (by default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ecb3084a6379feea340e3e4a6b8454f841acb1" translate="yes" xml:space="preserve">
          <source>matchers</source>
          <target state="translated">matchers</target>
        </trans-unit>
        <trans-unit id="9f3e9242c63870528e4600bc635fca8f0f5d6e9c" translate="yes" xml:space="preserve">
          <source>matches</source>
          <target state="translated">matches</target>
        </trans-unit>
        <trans-unit id="ab4b90040fa544c5611fa9e4971f5b98a0dfdf5c" translate="yes" xml:space="preserve">
          <source>matches a portion of a subject string that is identical to itself. The power of regular expressions comes from the ability to include alternatives and repetitions in the pattern. These are encoded in the pattern by the use of metacharacters, which do not stand for themselves but instead are interpreted in some special way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00dd212f8154a169ab07b388eaefea14ac878e6c" translate="yes" xml:space="preserve">
          <source>matches at a word boundary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5051e3179d42efbfeca2798c14746e12961da7e4" translate="yes" xml:space="preserve">
          <source>matches at end of subject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c36eb6bd60dbd659b5339f8fb4928cce3186c64" translate="yes" xml:space="preserve">
          <source>matches at end of subject or before newline at end</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1209b36db040ca46efc36b6dd0f594f0eb0800" translate="yes" xml:space="preserve">
          <source>matches at first matching position in subject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a820e0610938052076fb98a78614d38c2d510d" translate="yes" xml:space="preserve">
          <source>matches at start of subject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e694aab11dd6387e2df32ee75ae2cfb6707517e" translate="yes" xml:space="preserve">
          <source>matches when not at a word boundary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a488390a939c4795cc1a801e51751d5f25d800d" translate="yes" xml:space="preserve">
          <source>math</source>
          <target state="translated">math</target>
        </trans-unit>
        <trans-unit id="69c876d1d515d2fd7fde8ef2d6d518adf60d4743" translate="yes" xml:space="preserve">
          <source>math.E</source>
          <target state="translated">math.E</target>
        </trans-unit>
        <trans-unit id="ea01b2502613585dbddf58b6571d3e967abc2dc7" translate="yes" xml:space="preserve">
          <source>math.PI</source>
          <target state="translated">math.PI</target>
        </trans-unit>
        <trans-unit id="55a041f5d9738ac221a5dda444bc58168251a1af" translate="yes" xml:space="preserve">
          <source>math.TAU</source>
          <target state="translated">math.TAU</target>
        </trans-unit>
        <trans-unit id="899c76b3f84ea5c7c20da243e9245dcdc422eb8a" translate="yes" xml:space="preserve">
          <source>math.^</source>
          <target state="translated">math.^</target>
        </trans-unit>
        <trans-unit id="b89f716aac0fa3c26e1b0fe5e247ff05ffc7c469" translate="yes" xml:space="preserve">
          <source>math.ln()</source>
          <target state="translated">math.ln()</target>
        </trans-unit>
        <trans-unit id="0c17d3cf6149947118fa7ea622c6bcf8c79f3502" translate="yes" xml:space="preserve">
          <source>math.mod</source>
          <target state="translated">math.mod</target>
        </trans-unit>
        <trans-unit id="06a34833246008c05dec9151a1a8599ef6076576" translate="yes" xml:space="preserve">
          <source>max (largest value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1673b62e1f4964ea5b3bdf3db3f5f6c2bb411a6" translate="yes" xml:space="preserve">
          <source>maximal number of &quot;distinguished&quot; threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006cfabcf7a7d72e0cad143284f535353e387d92" translate="yes" xml:space="preserve">
          <source>maximal size of the thread pool. 256 threads should be good enough for anybody ;-)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017610eb3115f3b4fe42e06ed12da5054ff918e0" translate="yes" xml:space="preserve">
          <source>maximum number of meaningful digits after the decimal point for Nim's &lt;code&gt;float32&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc0e1e480026eb2f36d429a45d19391854aaa93" translate="yes" xml:space="preserve">
          <source>maximum number of meaningful digits after the decimal point for Nim's &lt;code&gt;float64&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ab922e3b14a8237da44057603625e1aca568f9" translate="yes" xml:space="preserve">
          <source>maximum number of meaningful digits after the decimal point for Nim's &lt;code&gt;float&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bd849c51f1c6135fd903dcb1af675eb0c75b01" translate="yes" xml:space="preserve">
          <source>may be used only in &quot;when&quot; expression. It is true in Nim VM context and false otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ea94f7e524679d0cf34ab7b0b28abe41ba732b" translate="yes" xml:space="preserve">
          <source>md5</source>
          <target state="translated">md5</target>
        </trans-unit>
        <trans-unit id="acd286301a161587fc2217d34efb01949a9901dd" translate="yes" xml:space="preserve">
          <source>md5.$</source>
          <target state="translated">md5.$</target>
        </trans-unit>
        <trans-unit id="0b5daa135fc1a87afd6bae6597165a6fd4652ee7" translate="yes" xml:space="preserve">
          <source>md5.==</source>
          <target state="translated">md5.==</target>
        </trans-unit>
        <trans-unit id="5f00f7a0a9f5e57deb39805aa521121fa277e75e" translate="yes" xml:space="preserve">
          <source>mean</source>
          <target state="translated">mean</target>
        </trans-unit>
        <trans-unit id="2a9079f50339e361c20112f0f11ece3d5b257564" translate="yes" xml:space="preserve">
          <source>meaning</source>
          <target state="translated">meaning</target>
        </trans-unit>
        <trans-unit id="eccc4fdd5c655985a966fcd5519cee11d576e209" translate="yes" xml:space="preserve">
          <source>mem</source>
          <target state="translated">mem</target>
        </trans-unit>
        <trans-unit id="a7f59a0c379d7f88e478d6042ccf2780b447f8a6" translate="yes" xml:space="preserve">
          <source>memfiles</source>
          <target state="translated">memfiles</target>
        </trans-unit>
        <trans-unit id="d363272cc33b4034bdabe6f2b64cc097e0e2a7d3" translate="yes" xml:space="preserve">
          <source>memfiles.$</source>
          <target state="translated">memfiles.$</target>
        </trans-unit>
        <trans-unit id="6ef5d63efb96784e740b8a405a9cf4a0d125f5d0" translate="yes" xml:space="preserve">
          <source>memfiles.==</source>
          <target state="translated">memfiles.==</target>
        </trans-unit>
        <trans-unit id="81c5d49be9505089d8d248ea96f6d077fd0ab9bd" translate="yes" xml:space="preserve">
          <source>memory</source>
          <target state="translated">memory</target>
        </trans-unit>
        <trans-unit id="dbc89ae206073ae832583b28f0daeaf4ae8cde4f" translate="yes" xml:space="preserve">
          <source>merges the second table into the first one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f5ad80cfa1222f40e9c41debdbb478f39cbe7f" translate="yes" xml:space="preserve">
          <source>merges the two tables into a new one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda9b40c3efca8f8c597db1f4eb53e6af8ec28b8" translate="yes" xml:space="preserve">
          <source>mersenne</source>
          <target state="translated">mersenne</target>
        </trans-unit>
        <trans-unit id="6f9b9af3cd6e8b8a73c2cdced37fe9f59226e27d" translate="yes" xml:space="preserve">
          <source>message</source>
          <target state="translated">message</target>
        </trans-unit>
        <trans-unit id="22390de4726cbbc242bc90ed280a4c2bca6ac597" translate="yes" xml:space="preserve">
          <source>meta character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ef9c946edc469c961c7a3c3f1db0b83460e9b8" translate="yes" xml:space="preserve">
          <source>meta type for any supported type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56719c7a7fa796f028e33ee6bb998ff434bdc32" translate="yes" xml:space="preserve">
          <source>meta type for automatic type determination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4c9d1cc4cbe580250feb392bd90ccec101ecba" translate="yes" xml:space="preserve">
          <source>meta type representing all values that can be evaluated at compile-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ccf6e3136f5f69afece511f2c5342e470ce7ba" translate="yes" xml:space="preserve">
          <source>meta type representing the type of all type values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f8e1671dc44fdba2ad49757663a6981a6bc751" translate="yes" xml:space="preserve">
          <source>meta type to denote a type description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29b6454d3ee6d9f7773488e9c9df059f72410cd" translate="yes" xml:space="preserve">
          <source>meta type to denote an expression that is not resolved (for templates)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73eb73675edfa3409c6a8c79afdff51297a747fb" translate="yes" xml:space="preserve">
          <source>meta type to denote an expression that is resolved (for templates)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c49d1a394cab2f990ec0caa4008189b1f1dd7f" translate="yes" xml:space="preserve">
          <source>meta type to denote the absence of any type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbaf8b2d1cdf92bf83857fe1748c0f68de03d47" translate="yes" xml:space="preserve">
          <source>method</source>
          <target state="translated">method</target>
        </trans-unit>
        <trans-unit id="dfc6eb8216db537dcfc7a54a641fefe49c5dacaa" translate="yes" xml:space="preserve">
          <source>might be a back reference, or another way of writing a tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a125c5d77ecdbf5cfe432f43479ba0aded089d5" translate="yes" xml:space="preserve">
          <source>might be a back reference, otherwise the byte consisting entirely of 1 bits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b707089a57baf53d3abd5667617d32cfbaa16dc" translate="yes" xml:space="preserve">
          <source>might be a back reference, otherwise the character with octal code 113</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb62f9db05a063cba7e093e3cbf3dce25184008" translate="yes" xml:space="preserve">
          <source>mimetypes</source>
          <target state="translated">mimetypes</target>
        </trans-unit>
        <trans-unit id="e57c01d7d6433b6c1617da1eaf24fffce9abe718" translate="yes" xml:space="preserve">
          <source>min (smallest value)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed2d9b151b835754f7594a0d688300f52b6d45a" translate="yes" xml:space="preserve">
          <source>min, max values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c47dce0f47f9e1cc3eb2ca29115efab030a280b" translate="yes" xml:space="preserve">
          <source>mixes a hash value &lt;em&gt;h&lt;/em&gt; with &lt;em&gt;val&lt;/em&gt; to produce a new hash value. This is only needed if you need to implement a hash proc for a new datatype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c867b28a1d93a0c1b770b5df6812c7ecd6a0f4ec" translate="yes" xml:space="preserve">
          <source>modify the C compiler header search path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795dd425cf9bf6f91e462bbef645d9332a6dc7d0" translate="yes" xml:space="preserve">
          <source>modify the linker library search path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f25b422d5b4c1906861b6546143e8a200204e88" translate="yes" xml:space="preserve">
          <source>modify this variable to specify the exit code of the program under normal circumstances. When the program is terminated prematurely using &lt;code&gt;quit&lt;/code&gt;, this value is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef98d263633041e3f89baa83011ca2d5150d30e" translate="yes" xml:space="preserve">
          <source>module for traversing type graphs; also contain several helpers for dealing with types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e887405302ed2da23d0fec68ad40fb17ab610524" translate="yes" xml:space="preserve">
          <source>most modules of the standard library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13143d3f6489dbe1ab520c5a3bf473b18f6f9c81" translate="yes" xml:space="preserve">
          <source>mqueue. Sadly there are no mqueue headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f34ee1e406ea84ca83c835a3301b5d9014a788" translate="yes" xml:space="preserve">
          <source>msg</source>
          <target state="translated">msg</target>
        </trans-unit>
        <trans-unit id="e341d125dc6205d9af8c718498a604389d616902" translate="yes" xml:space="preserve">
          <source>multiReplace performs all replacements in a single pass, this means it can be used to swap the occurences of &quot;a&quot; and &quot;b&quot;, for instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f460c882a18c1304d88854e902e11b85d71e7e1b" translate="yes" xml:space="preserve">
          <source>mysql</source>
          <target state="translated">mysql</target>
        </trans-unit>
        <trans-unit id="d9fe55d298f5c86783f93268c28fb6cc037a6d4b" translate="yes" xml:space="preserve">
          <source>mysql.BIND</source>
          <target state="translated">mysql.BIND</target>
        </trans-unit>
        <trans-unit id="ba27e0234b12a5f61cdb6a57088930df810571e1" translate="yes" xml:space="preserve">
          <source>mysql.DATA</source>
          <target state="translated">mysql.DATA</target>
        </trans-unit>
        <trans-unit id="e6c47af62798282f7ae68f8a486d3477abcab071" translate="yes" xml:space="preserve">
          <source>mysql.NET</source>
          <target state="translated">mysql.NET</target>
        </trans-unit>
        <trans-unit id="b0c50e2cc3ba1efe5780414a532c2f0b63141e40" translate="yes" xml:space="preserve">
          <source>mysql.PNET</source>
          <target state="translated">mysql.PNET</target>
        </trans-unit>
        <trans-unit id="a1b27af5ab7de8dd1ad74b828504de72377e9ede" translate="yes" xml:space="preserve">
          <source>mysql.PRES</source>
          <target state="translated">mysql.PRES</target>
        </trans-unit>
        <trans-unit id="f9010f0ca67647c1c6545e9354c88a6ebce81669" translate="yes" xml:space="preserve">
          <source>mysql.PROW</source>
          <target state="translated">mysql.PROW</target>
        </trans-unit>
        <trans-unit id="c928ba8d3097d444e6a9794be41f197dae5af825" translate="yes" xml:space="preserve">
          <source>mysql.PVIO</source>
          <target state="translated">mysql.PVIO</target>
        </trans-unit>
        <trans-unit id="f852402d4b6ddf1c326664c701e966f50d8d57ac" translate="yes" xml:space="preserve">
          <source>mysql.RES</source>
          <target state="translated">mysql.RES</target>
        </trans-unit>
        <trans-unit id="04f82d600eab616795867c40e9e11106c0a039dd" translate="yes" xml:space="preserve">
          <source>mysql.ROW</source>
          <target state="translated">mysql.ROW</target>
        </trans-unit>
        <trans-unit id="e36f77a50ebc4b049aa8ccad79ef0b947ed2f46d" translate="yes" xml:space="preserve">
          <source>mysql.ROWS</source>
          <target state="translated">mysql.ROWS</target>
        </trans-unit>
        <trans-unit id="6bbb7306a740447935c2084caf36711ae6708115" translate="yes" xml:space="preserve">
          <source>mysql.STMT</source>
          <target state="translated">mysql.STMT</target>
        </trans-unit>
        <trans-unit id="41c1c36a2bc47f30d0a473f3abae895be2959fc1" translate="yes" xml:space="preserve">
          <source>mysql.gptr</source>
          <target state="translated">mysql.gptr</target>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="580d1be21bf6bf0d40600251acb6117983bd6993" translate="yes" xml:space="preserve">
          <source>n (data count)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32eebafbfda244bddc835ea8594fc63a318a7cc" translate="yes" xml:space="preserve">
          <source>nativesockets</source>
          <target state="translated">nativesockets</target>
        </trans-unit>
        <trans-unit id="8509c35e4183a94874a6f8f5c633d72a0995f2bf" translate="yes" xml:space="preserve">
          <source>nativesockets.$</source>
          <target state="translated">nativesockets.$</target>
        </trans-unit>
        <trans-unit id="8589b1bb0abf6a4e2303c7ac83cd423e1fec645b" translate="yes" xml:space="preserve">
          <source>nativesockets.==</source>
          <target state="translated">nativesockets.==</target>
        </trans-unit>
        <trans-unit id="faa30cdbd46139ea406b10af7836c45dbe7a4f94" translate="yes" xml:space="preserve">
          <source>nativesockets.Port</source>
          <target state="translated">nativesockets.Port</target>
        </trans-unit>
        <trans-unit id="62a30676743c2d97d57dbd4eee46dadacb55f533" translate="yes" xml:space="preserve">
          <source>negate the class, but only if the first character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a20da5ec2109e935bbfb1982915966ca78741793" translate="yes" xml:space="preserve">
          <source>nests the list &lt;em&gt;pack&lt;/em&gt; into a tree of call expressions: &lt;code&gt;[a, b, c]&lt;/code&gt; is transformed into &lt;code&gt;op(a, op(c, d))&lt;/code&gt;. This is also known as fold expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391b6629d9b645d3073c6f5ad432c40537646604" translate="yes" xml:space="preserve">
          <source>net</source>
          <target state="translated">net</target>
        </trans-unit>
        <trans-unit id="b86298da6b44db76f9c598ea7a9655baa9395199" translate="yes" xml:space="preserve">
          <source>net.$</source>
          <target state="translated">net.$</target>
        </trans-unit>
        <trans-unit id="1b48bded6208fc68e1146c7aa325516b3b61ff86" translate="yes" xml:space="preserve">
          <source>net.==</source>
          <target state="translated">net.==</target>
        </trans-unit>
        <trans-unit id="c2a6b03f190dfb2b4aa91f8af8d477a9bc3401dc" translate="yes" xml:space="preserve">
          <source>new</source>
          <target state="translated">new</target>
        </trans-unit>
        <trans-unit id="19507c931ab2009f71a0b0e962d964b8cf80eb33" translate="yes" xml:space="preserve">
          <source>newP</source>
          <target state="translated">newP</target>
        </trans-unit>
        <trans-unit id="f45e75733aa04f80bdadf7be02d7f5d65a1e99cb" translate="yes" xml:space="preserve">
          <source>newline (hex 0A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5366a2d2ac98dae978423083f8b09e5cddc705d" translate="yes" xml:space="preserve">
          <source>nil</source>
          <target state="translated">nil</target>
        </trans-unit>
        <trans-unit id="15da9b88efb4fd172a3095e9b642bd909ec567be" translate="yes" xml:space="preserve">
          <source>nilChecks</source>
          <target state="translated">nilChecks</target>
        </trans-unit>
        <trans-unit id="771435c469f83f6aa9c405ac5e1ed06314a94f2d" translate="yes" xml:space="preserve">
          <source>nim</source>
          <target state="translated">nim</target>
        </trans-unit>
        <trans-unit id="994a4ebe9fa500156085959e6fa69767f82f5339" translate="yes" xml:space="preserve">
          <source>nimconf</source>
          <target state="translated">nimconf</target>
        </trans-unit>
        <trans-unit id="a698d6f1891a79bcaedd90742a92da8997c0e378" translate="yes" xml:space="preserve">
          <source>nimgrep</source>
          <target state="translated">nimgrep</target>
        </trans-unit>
        <trans-unit id="c5e15af252a1076b865a30644f30291d1e02565b" translate="yes" xml:space="preserve">
          <source>nimgrep User's manual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a648fb9763d62d532b24f0b7da86065707db0b" translate="yes" xml:space="preserve">
          <source>nimgrep [options] [pattern] [replacement] (file/directory)*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b3e399d91962fb4352d8f350ad0c964d4c64bc" translate="yes" xml:space="preserve">
          <source>nl_types. No headers for this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcf6a7f88388ec5f26e7685859c265e1f5beaab" translate="yes" xml:space="preserve">
          <source>noReturn pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a65bd0949ff2a6ecd30890cb73dff15c131124" translate="yes" xml:space="preserve">
          <source>noSideEffect pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52ad63cb34daad9cbc3604a1b0277099ddeb1d8" translate="yes" xml:space="preserve">
          <source>none|speed|size</source>
          <target state="translated">none|speed|size</target>
        </trans-unit>
        <trans-unit id="da9ef0275b1af819b0941144bc29541f9552cda6" translate="yes" xml:space="preserve">
          <source>not a tabulator, but an (unknown) built-in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969d7a2a21898ba63dc5265efd04c401d86ea791" translate="yes" xml:space="preserve">
          <source>notation</source>
          <target state="translated">notation</target>
        </trans-unit>
        <trans-unit id="9b5c0b859faba061dd60fd8070fce74fcee29d0b" translate="yes" xml:space="preserve">
          <source>obj</source>
          <target state="translated">obj</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="e52912de035beb32af0fb8948f839da90a98b49d" translate="yes" xml:space="preserve">
          <source>odbcsql</source>
          <target state="translated">odbcsql</target>
        </trans-unit>
        <trans-unit id="a2a8fe76dbee52b2d0aa0f60d3460e970630cc3c" translate="yes" xml:space="preserve">
          <source>often short for &lt;code&gt;find() &amp;gt;= 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0875d012ef9e16118b2eea4fa88e4e67be66ac6" translate="yes" xml:space="preserve">
          <source>oids</source>
          <target state="translated">oids</target>
        </trans-unit>
        <trans-unit id="72170270f2fff087f3ec3411949aefce8e62c81e" translate="yes" xml:space="preserve">
          <source>oids.$</source>
          <target state="translated">oids.$</target>
        </trans-unit>
        <trans-unit id="1083b16327950fd72e6452e9b4923104d0d8b67e" translate="yes" xml:space="preserve">
          <source>oids.==</source>
          <target state="translated">oids.==</target>
        </trans-unit>
        <trans-unit id="72d1dd282b3f1b55f1629ebd4c1f1a66a9e47269" translate="yes" xml:space="preserve">
          <source>oids.Oid</source>
          <target state="translated">oids.Oid</target>
        </trans-unit>
        <trans-unit id="31757eced79b344c86c2a350cddcf40cf111e3df" translate="yes" xml:space="preserve">
          <source>only search the files with the given extension(s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64d08010f1ef66dfdf262a96341167552defbeb" translate="yes" xml:space="preserve">
          <source>on|off</source>
          <target state="translated">on|off</target>
        </trans-unit>
        <trans-unit id="8eeb76b6bf5f21b29303e9a8461494472f92006c" translate="yes" xml:space="preserve">
          <source>opens &lt;em&gt;url&lt;/em&gt; with the user's default browser. This does not block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d5bc1fc354cefa027cc6818550cb9ecb692043" translate="yes" xml:space="preserve">
          <source>opens a channel &lt;em&gt;c&lt;/em&gt; for inter thread communication. The &lt;em&gt;send&lt;/em&gt; operation will block until number of unprocessed items is less than &lt;em&gt;maxItems&lt;/em&gt;. For unlimited queue set &lt;em&gt;maxItems&lt;/em&gt; to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f1a067732cd2ca4fdc5546856ba85cf55c9ae4" translate="yes" xml:space="preserve">
          <source>opens a connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d062e2a0a1e3fe898c579a274178eabd91829dd0" translate="yes" xml:space="preserve">
          <source>opens a converter that can convert from &lt;em&gt;srcEncoding&lt;/em&gt; to &lt;em&gt;destEncoding&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if it cannot fulfill the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3374572fb27be6d76e1f63cf05652eeb501fca5a" translate="yes" xml:space="preserve">
          <source>opens a database connection. Raises &lt;em&gt;EDb&lt;/em&gt; if the connection could not be established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d59c61a9b2dafa4084512ab137369704a1bd028" translate="yes" xml:space="preserve">
          <source>opens a database connection. Raises &lt;em&gt;EDb&lt;/em&gt; if the connection could not be established. Only the &lt;code&gt;connection&lt;/code&gt; parameter is used for &lt;code&gt;sqlite&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5a5cd4486614d93c8b690a80dae926230b4ade" translate="yes" xml:space="preserve">
          <source>opens a memory mapped file. If this fails, &lt;code&gt;EOS&lt;/code&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c898fa1e7226427010e329971e82c669f8d8abb4" translate="yes" xml:space="preserve">
          <source>openssl</source>
          <target state="translated">openssl</target>
        </trans-unit>
        <trans-unit id="2cecab737f1f9951b2cd61526cdb4f87c3d62d7b" translate="yes" xml:space="preserve">
          <source>openssl.BIO</source>
          <target state="translated">openssl.BIO</target>
        </trans-unit>
        <trans-unit id="ad0c5c5bd4f5bcc9610ae9b39db84d56286dd5c0" translate="yes" xml:space="preserve">
          <source>openssl.PRSA</source>
          <target state="translated">openssl.PRSA</target>
        </trans-unit>
        <trans-unit id="fcb60bc535f44919fb7827a8ef8e2d1b9e17347d" translate="yes" xml:space="preserve">
          <source>operation</source>
          <target state="translated">operation</target>
        </trans-unit>
        <trans-unit id="fe96dd39756ac41b74283a9292652d366d73931f" translate="yes" xml:space="preserve">
          <source>operator</source>
          <target state="translated">operator</target>
        </trans-unit>
        <trans-unit id="8e2be6149ca2e2d0525ec5e0c6e0b83795f4872a" translate="yes" xml:space="preserve">
          <source>operator .()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbc2dd70274ca2bf2c9a041da49d937355258c0" translate="yes" xml:space="preserve">
          <source>operator .=</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d70c749ea824542049c79686cb592ba73f7eb1b" translate="yes" xml:space="preserve">
          <source>operator &lt;em&gt;.()&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7959e707e7ec0ca94c5db42bc6d11cbec6894f" translate="yes" xml:space="preserve">
          <source>operator &lt;em&gt;.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88330eaa9be7dc79db3ab99260b391e999c96b51" translate="yes" xml:space="preserve">
          <source>operator &lt;em&gt;.=&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9cabd331945f070b29077c5556377842bc8a6a8" translate="yes" xml:space="preserve">
          <source>operator &lt;em&gt;=&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52326de3af58b611e247140b38abbb424505a8e9" translate="yes" xml:space="preserve">
          <source>operator =</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a998f82b079627752459766aff20e69379c835" translate="yes" xml:space="preserve">
          <source>opr</source>
          <target state="translated">opr</target>
        </trans-unit>
        <trans-unit id="7021f21faa35cea149e7538f871b8278762cd669" translate="yes" xml:space="preserve">
          <source>optimization</source>
          <target state="translated">optimization</target>
        </trans-unit>
        <trans-unit id="3dbe109a23bba2292b9a30fd4f6a2580b80dfbe2" translate="yes" xml:space="preserve">
          <source>optimize not at all or for speed|size Note: use -d:release for a release build!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513f8de9259fe7658fe14d1352c54ccf070e911f" translate="yes" xml:space="preserve">
          <source>options</source>
          <target state="translated">options</target>
        </trans-unit>
        <trans-unit id="a39081e74ddb88eaa3a44ed1953879d8477c0219" translate="yes" xml:space="preserve">
          <source>options for regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e6ab09fbaf0f70c09f76e320fa1c0bb1080070" translate="yes" xml:space="preserve">
          <source>options for the RST parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe4192943a55e8b3d77ffe428b1e52f7a47604f" translate="yes" xml:space="preserve">
          <source>options for the XML parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0825cb41a68f1c920556d026ffa84029683fff55" translate="yes" xml:space="preserve">
          <source>options that can be passed &lt;em&gt;startProcess&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd44b21a4ee5ffcd027cd42eacb38e91652ab8ad" translate="yes" xml:space="preserve">
          <source>options.$</source>
          <target state="translated">options.$</target>
        </trans-unit>
        <trans-unit id="1dcd97b622a2f62ebfbd21c30d58c202e4202930" translate="yes" xml:space="preserve">
          <source>options.==</source>
          <target state="translated">options.==</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="67c448e04861496af8c1fad63340870533299d83" translate="yes" xml:space="preserve">
          <source>or equivalent. The reason is that sets are implemented as high performance bit vectors. Attempting to declare a set with a larger type will result in an error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9eac91aa164ee0fb0f52d8062224f2892fc18b5" translate="yes" xml:space="preserve">
          <source>or setup a nim.cfg file like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221c54eb2b63616226b79c788b82e582f0631353" translate="yes" xml:space="preserve">
          <source>ordinal types (consist of integer, bool, character, enumeration (and subranges thereof) types)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999a3419d9959d3c39b11dcc67d79c7888b4b765" translate="yes" xml:space="preserve">
          <source>os</source>
          <target state="translated">os</target>
        </trans-unit>
        <trans-unit id="cdadd06cbc82ca07742a161a5165f19360a1b760" translate="yes" xml:space="preserve">
          <source>ospaths</source>
          <target state="translated">ospaths</target>
        </trans-unit>
        <trans-unit id="8519e0595c868b3238f4e4881a2fb2986a4828d6" translate="yes" xml:space="preserve">
          <source>ospaths./</source>
          <target state="translated">ospaths./</target>
        </trans-unit>
        <trans-unit id="8a926e927f6ae6d2241ac753facf12f8ebbbb5e4" translate="yes" xml:space="preserve">
          <source>ospaths./../</source>
          <target state="translated">ospaths./../</target>
        </trans-unit>
        <trans-unit id="7acbc9772ac0e57525948d09d898bc19981048d2" translate="yes" xml:space="preserve">
          <source>osproc</source>
          <target state="translated">osproc</target>
        </trans-unit>
        <trans-unit id="09bc1c0e6a8b92231ebc685ca664d0e714b2e001" translate="yes" xml:space="preserve">
          <source>output to stdout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c97b7015bfb1e700d511b3c53b9da4a7c2b7943" translate="yes" xml:space="preserve">
          <source>outputs &quot;Checkpoint A&quot; before quitting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238ed90e197fb2d92487365806ebca5feb20e142" translate="yes" xml:space="preserve">
          <source>outputs &quot;Checkpoint A&quot; once it fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ba97fe4eea8246677e53effe377d2861bad662" translate="yes" xml:space="preserve">
          <source>overflowChecks</source>
          <target state="translated">overflowChecks</target>
        </trans-unit>
        <trans-unit id="4db80b1cac704b86899294fa0a8fa27bfb6bc762" translate="yes" xml:space="preserve">
          <source>overload with a &lt;code&gt;timeout&lt;/code&gt; parameter in milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509b5aa33489458d31264bd4c80628f29ff7c97e" translate="yes" xml:space="preserve">
          <source>overloaded variant to support a &lt;code&gt;timeout&lt;/code&gt; parameter, the &lt;code&gt;timeout&lt;/code&gt; parameter specifies the amount of milliseconds to wait for data on the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8bed4949a542ac61f861455678adcffff6f9a3" translate="yes" xml:space="preserve">
          <source>overwrites the contents of the memory at &lt;code&gt;p&lt;/code&gt; with the value 0. Exactly &lt;code&gt;size&lt;/code&gt; bytes will be overwritten. Like any procedure dealing with raw memory this is &lt;em&gt;unsafe&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0327f3ea73cf88b0f10d01c7514331e769140a" translate="yes" xml:space="preserve">
          <source>pairs</source>
          <target state="translated">pairs</target>
        </trans-unit>
        <trans-unit id="ac494f50640d1a9a791e27473b71b59484e7673b" translate="yes" xml:space="preserve">
          <source>parallel loop iterator. Same as &lt;em&gt;..&lt;/em&gt; but the loop may run in parallel. &lt;em&gt;annotation&lt;/em&gt; is an additional annotation for the code generator to use. Note that the compiler maps that to the &lt;code&gt;#pragma omp parallel for&lt;/code&gt; construct of &lt;span id=&quot;openmp_1&quot;&gt;OpenMP&lt;/span&gt; and as such isn't aware of the parallelism in your code! Be careful! Later versions of &lt;code&gt;||&lt;/code&gt; will get proper support by Nim's code generator and GC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df06651788c884556a0b4b290fb40475ec9a45ba" translate="yes" xml:space="preserve">
          <source>param</source>
          <target state="translated">param</target>
        </trans-unit>
        <trans-unit id="b75381f00486e5b8409bb3475762882a8ac61715" translate="yes" xml:space="preserve">
          <source>parameter</source>
          <target state="translated">parameter</target>
        </trans-unit>
        <trans-unit id="12358953e03a1b8d9e4ca8dc57dabd538f7cd545" translate="yes" xml:space="preserve">
          <source>parsecfg</source>
          <target state="translated">parsecfg</target>
        </trans-unit>
        <trans-unit id="ea69ae483ebd2bb7cff2a0aec461bc71e184418b" translate="yes" xml:space="preserve">
          <source>parsecfg.$</source>
          <target state="translated">parsecfg.$</target>
        </trans-unit>
        <trans-unit id="2b6c29d6696214a062daf842c2d1d0a49451aec4" translate="yes" xml:space="preserve">
          <source>parsecsv</source>
          <target state="translated">parsecsv</target>
        </trans-unit>
        <trans-unit id="fb9e235bcea6fc5e34b5b3bccdf25f73142dbda4" translate="yes" xml:space="preserve">
          <source>parsejson</source>
          <target state="translated">parsejson</target>
        </trans-unit>
        <trans-unit id="ab2aade2a9bf742c22cb465e99fa95e35f058211" translate="yes" xml:space="preserve">
          <source>parseopt</source>
          <target state="translated">parseopt</target>
        </trans-unit>
        <trans-unit id="95324de690ad48fe8f91bdee9b5bf97b6b0911e9" translate="yes" xml:space="preserve">
          <source>parser</source>
          <target state="translated">parser</target>
        </trans-unit>
        <trans-unit id="e2a0a6816127c44e24e71a37bbbacc90fcaa6436" translate="yes" xml:space="preserve">
          <source>parses &lt;em&gt;name&lt;/em&gt; to a color value. If no valid color could be parsed &lt;code&gt;EInvalidValue&lt;/code&gt; is raised. Case insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a33ed7e9db1e9ad587c7fd38ecfd5d166447491" translate="yes" xml:space="preserve">
          <source>parses &lt;em&gt;s&lt;/em&gt; into an integer in the range &lt;em&gt;validRange&lt;/em&gt;. If successful, &lt;em&gt;value&lt;/em&gt; is modified to contain the result. Otherwise no exception is raised and &lt;em&gt;value&lt;/em&gt; is not touched; this way a reasonable default value won't be overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1baedf0221bb30c1c6e8d0df8c900fd96833148" translate="yes" xml:space="preserve">
          <source>parses a float starting at &lt;em&gt;start&lt;/em&gt; and stores the value into &lt;em&gt;number&lt;/em&gt;. Result is the number of processed chars or 0 if a parsing error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478f9920166e6fa2d1d8d9c0c4d36e5ad30fb71d" translate="yes" xml:space="preserve">
          <source>parses a float starting at &lt;em&gt;start&lt;/em&gt; and stores the value into &lt;em&gt;number&lt;/em&gt;. Result is the number of processed chars or 0 if there occurred a parsing error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b887bfb9e7a67a3c0e1c6ed28c95b10968224866" translate="yes" xml:space="preserve">
          <source>parses a natural number into &lt;code&gt;b&lt;/code&gt;. This cannot raise an overflow error. Instead of an &lt;code&gt;Overflow&lt;/code&gt; exception &lt;code&gt;high(int)&lt;/code&gt; is returned. The number of processed character is returned. This is usually what you really want to use instead of &lt;span id=&quot;parseint_1&quot;&gt;parseInt&lt;/span&gt;. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c77131584b320fd4ff12a9fa6bb1724f39e3910" translate="yes" xml:space="preserve">
          <source>parses a token and stores it in &lt;code&gt;token&lt;/code&gt;. Returns the number of the parsed characters or 0 in case of an error. A token consists of any character that comes before the &lt;em&gt;until&lt;/em&gt; token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc213a7b5ff9d8fb506fa4ee352e536f54ece173" translate="yes" xml:space="preserve">
          <source>parses a token and stores it in &lt;code&gt;token&lt;/code&gt;. Returns the number of the parsed characters or 0 in case of an error. A token consists of any character that is not the &lt;em&gt;until&lt;/em&gt; character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25726bcfd0fa1e096d7dfead90c5c368588f4e9b" translate="yes" xml:space="preserve">
          <source>parses a token and stores it in &lt;code&gt;token&lt;/code&gt;. Returns the number of the parsed characters or 0 in case of an error. A token consists of the characters in &lt;em&gt;validChars&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390cf7c4675387d5e5cb7783108294ea90531440" translate="yes" xml:space="preserve">
          <source>parses a token and stores it in &lt;code&gt;token&lt;/code&gt;. Returns the number of the parsed characters or 0 in case of an error. A token consists of the characters notin &lt;em&gt;until&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c3de4603c3b9060d258629abf614c68eeb67b2" translate="yes" xml:space="preserve">
          <source>parses an IP version 4 in dotted decimal form like &quot;a.b.c.d&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7388ba925dfc3a0e63ba7f7d6ca6278c68523bbc" translate="yes" xml:space="preserve">
          <source>parses an OID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb6fdcfcaa1c18827e6bdbdb786baf2f6aa7ea8" translate="yes" xml:space="preserve">
          <source>parses an identifier and stores it in &lt;code&gt;ident&lt;/code&gt;. Returns the number of the parsed characters or 0 in case of an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88714588834c70fc3b7a25db3ebb858ffff785f1" translate="yes" xml:space="preserve">
          <source>parses an identifier and stores it in &lt;code&gt;ident&lt;/code&gt;. Returns the parsed identifier or an empty string in case of an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea9430699db97f0aaa76dedd34515ea3d291937" translate="yes" xml:space="preserve">
          <source>parses an integer starting at &lt;em&gt;start&lt;/em&gt; and stores the value into &lt;em&gt;number&lt;/em&gt;. Result is the number of processed chars or 0 if there is no integer. &lt;em&gt;EOverflow&lt;/em&gt; is raised if an overflow occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50a472fb24d36d606e1395e5bf75a6871b80fe3" translate="yes" xml:space="preserve">
          <source>parses an unsigned integer starting at &lt;em&gt;start&lt;/em&gt; and stores the value into &lt;em&gt;number&lt;/em&gt;. Result is the number of processed chars or 0 if there is no integer or overflow detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d47f462c98bb7f11fd74008a79da63ade31775e" translate="yes" xml:space="preserve">
          <source>parses cookies into a string table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7aad9b9b4d746ff1ba6cd45e4328de994af91ad" translate="yes" xml:space="preserve">
          <source>parses the SQL from &lt;em&gt;input&lt;/em&gt; into an AST and returns the AST. &lt;em&gt;filename&lt;/em&gt; is only used for error messages. Syntax errors raise an &lt;em&gt;SqlParseError&lt;/em&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0dc423ac634f23a1d4778ce24c0c9c70fc2e8a" translate="yes" xml:space="preserve">
          <source>parses the first or next option; &lt;code&gt;p.kind&lt;/code&gt; describes what token has been parsed. &lt;code&gt;p.key&lt;/code&gt; and &lt;code&gt;p.val&lt;/code&gt; are set accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3896a5c6693ef85a32c671c34058267c4f307de" translate="yes" xml:space="preserve">
          <source>parsesql</source>
          <target state="translated">parsesql</target>
        </trans-unit>
        <trans-unit id="0ba075ca57e12db9d8a9383391fb91e5d9646f3e" translate="yes" xml:space="preserve">
          <source>parsesql.$</source>
          <target state="translated">parsesql.$</target>
        </trans-unit>
        <trans-unit id="fead302c6cb424febdd8af684a7bb5b570d17199" translate="yes" xml:space="preserve">
          <source>parsesql.[]</source>
          <target state="translated">parsesql.[]</target>
        </trans-unit>
        <trans-unit id="12c52df01e8d9308c9db17d3dae313118a73333a" translate="yes" xml:space="preserve">
          <source>parseutils</source>
          <target state="translated">parseutils</target>
        </trans-unit>
        <trans-unit id="7d6c3b2816f6da572cccf5ac23cdaae6da7d6bf4" translate="yes" xml:space="preserve">
          <source>parsexml</source>
          <target state="translated">parsexml</target>
        </trans-unit>
        <trans-unit id="c2722b5ec4122f28b9d27529eef2e6ea1efd88cc" translate="yes" xml:space="preserve">
          <source>pass an option to the C compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9428511ea9892252a8188e9bedad475e0dc3d5d3" translate="yes" xml:space="preserve">
          <source>pass an option to the linker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3132c20785261db1465ba7e9b640cb7d270b7205" translate="yes" xml:space="preserve">
          <source>passes</source>
          <target state="translated">passes</target>
        </trans-unit>
        <trans-unit id="3150ecd5e0294534a81ae047ddac559de481d774" translate="yes" xml:space="preserve">
          <source>path</source>
          <target state="translated">path</target>
        </trans-unit>
        <trans-unit id="b4a0f72dab5e6fc4294de16030f691d6f1137b53" translate="yes" xml:space="preserve">
          <source>path is the string &quot;/usr/bin&quot; (for example), dir is the content of &quot;/usr/bin&quot;; inconsistent right now</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c67bd2fb4a52a35c30535789d212042f71993ea" translate="yes" xml:space="preserve">
          <source>pattern is a peg</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f1fcc0de11bc62c4858e0dd4b2afad59d8d805" translate="yes" xml:space="preserve">
          <source>pattern is a regular expression (default); extended syntax for the regular expression is always turned on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b13db1436ffd66fee3ff1b9810d290ff7b459aa" translate="yes" xml:space="preserve">
          <source>patterns</source>
          <target state="translated">patterns</target>
        </trans-unit>
        <trans-unit id="d1fd3c520e874ef73c32d91823c0a9f9be004357" translate="yes" xml:space="preserve">
          <source>pcre</source>
          <target state="translated">pcre</target>
        </trans-unit>
        <trans-unit id="6f729ac8d5603ae0a024d7e4aaa5a11ae209c27d" translate="yes" xml:space="preserve">
          <source>pcre.Pcre</source>
          <target state="translated">pcre.Pcre</target>
        </trans-unit>
        <trans-unit id="5a1d051d87a2253a039eb9127436040eb10fb445" translate="yes" xml:space="preserve">
          <source>pcre.UCP</source>
          <target state="translated">pcre.UCP</target>
        </trans-unit>
        <trans-unit id="1a649e652d774b8075cf9cfbf49640400d8eb730" translate="yes" xml:space="preserve">
          <source>pcre.UTF8</source>
          <target state="translated">pcre.UTF8</target>
        </trans-unit>
        <trans-unit id="bb6d3364090811710171d910e2869e961fe546b8" translate="yes" xml:space="preserve">
          <source>peeks a bool from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26a01870dc1428161272e7cb22bb345c0ae9086" translate="yes" xml:space="preserve">
          <source>peeks a char from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred. Returns '0' as an EOF marker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c1790f94ac401dd7fea8fadae8fe160aaadbd6" translate="yes" xml:space="preserve">
          <source>peeks a float32 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e4ad3a3a0ee97a665a0ae2ea407a7c97373238" translate="yes" xml:space="preserve">
          <source>peeks a float64 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaaff3d037fc015888a56fc6a14f92ee08e592c1" translate="yes" xml:space="preserve">
          <source>peeks a line of text from the stream &lt;em&gt;s&lt;/em&gt; into &lt;em&gt;line&lt;/em&gt;. &lt;em&gt;line&lt;/em&gt; must not be &lt;code&gt;nil&lt;/code&gt;! May throw an IO exception. A line of text may be delimited by &lt;code&gt;CR&lt;/code&gt;, &lt;code&gt;LF&lt;/code&gt; or &lt;code&gt;CRLF&lt;/code&gt;. The newline character(s) are not part of the returned string. Returns &lt;code&gt;false&lt;/code&gt; if the end of the file has been reached, &lt;code&gt;true&lt;/code&gt; otherwise. If &lt;code&gt;false&lt;/code&gt; is returned &lt;em&gt;line&lt;/em&gt; contains no new data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31658cb93b930d6c462377a7e5d86a3fcda7e9b" translate="yes" xml:space="preserve">
          <source>peeks a string of length &lt;em&gt;length&lt;/em&gt; from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b533d55d3993abdc99a5143c81cccf2e97ade6f1" translate="yes" xml:space="preserve">
          <source>peeks an int16 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b206baada69424e38a42ac6f2c62501149bebca4" translate="yes" xml:space="preserve">
          <source>peeks an int32 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c916accd508b66220b74a61637937418bff96a" translate="yes" xml:space="preserve">
          <source>peeks an int64 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bfe3f9141be8d86e5b88184be6f2ab59a1f127" translate="yes" xml:space="preserve">
          <source>peeks an int8 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343f1906ea14cc32a3d167165c8bb02bf3c76747" translate="yes" xml:space="preserve">
          <source>peeks an uint16 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505c9a18b7e272763bbc13c70ff437b1f44bbb82" translate="yes" xml:space="preserve">
          <source>peeks an uint32 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf5d730ece2b82437da4c967c0edb97550c7d55" translate="yes" xml:space="preserve">
          <source>peeks an uint64 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991d70e4853512007cd6ab98eb81cea2ecc7d100" translate="yes" xml:space="preserve">
          <source>peeks an uint8 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a2ef1629ca8aa3cb7f15b0c3016c654142654a" translate="yes" xml:space="preserve">
          <source>pegs</source>
          <target state="translated">pegs</target>
        </trans-unit>
        <trans-unit id="5a19b2d945f6d72d599bc4ccf405a9e474e3ac03" translate="yes" xml:space="preserve">
          <source>pegs.!</source>
          <target state="translated">pegs.!</target>
        </trans-unit>
        <trans-unit id="70bb4039d443a794c0c95b08d09bb3f2417cf407" translate="yes" xml:space="preserve">
          <source>pegs.!*</source>
          <target state="translated">pegs.!*</target>
        </trans-unit>
        <trans-unit id="eb0eb71eb99d6efc94f873f83bd28e1fcd733d53" translate="yes" xml:space="preserve">
          <source>pegs.!*\</source>
          <target state="translated">pegs.!*\</target>
        </trans-unit>
        <trans-unit id="704566511257a75135a4a1598e5a0ee11e2d058f" translate="yes" xml:space="preserve">
          <source>pegs.$</source>
          <target state="translated">pegs.$</target>
        </trans-unit>
        <trans-unit id="ffc7c6bbd94d343c6332845e1179e3e5117cc392" translate="yes" xml:space="preserve">
          <source>pegs.*</source>
          <target state="translated">pegs.*</target>
        </trans-unit>
        <trans-unit id="c44454c490cc738d4f1cf83534fa60304e379481" translate="yes" xml:space="preserve">
          <source>pegs.+</source>
          <target state="translated">pegs.+</target>
        </trans-unit>
        <trans-unit id="9d633f5f920e03533a7f89af90d97b25d5f24d6d" translate="yes" xml:space="preserve">
          <source>pegs./</source>
          <target state="translated">pegs./</target>
        </trans-unit>
        <trans-unit id="fbb96a0ca1b07dcbd2ac11699f59e96828808f70" translate="yes" xml:space="preserve">
          <source>pegs.=~</source>
          <target state="translated">pegs.=~</target>
        </trans-unit>
        <trans-unit id="e1b8dc6ab5be60dd7d0e7f213497eee0d6fa8778" translate="yes" xml:space="preserve">
          <source>pegs.?</source>
          <target state="translated">pegs.?</target>
        </trans-unit>
        <trans-unit id="2558e38e7b9f68ca1fe57d09b7dda691b19d761b" translate="yes" xml:space="preserve">
          <source>pegs.Peg</source>
          <target state="translated">pegs.Peg</target>
        </trans-unit>
        <trans-unit id="f5d369e0f79af159defe5b5414ba4b6a4c7b09e9" translate="yes" xml:space="preserve">
          <source>pegs.ch()</source>
          <target state="translated">pegs.ch()</target>
        </trans-unit>
        <trans-unit id="56b26ca35bda9ce9311c97148fcb1b5383223c48" translate="yes" xml:space="preserve">
          <source>pegs.nt()</source>
          <target state="translated">pegs.nt()</target>
        </trans-unit>
        <trans-unit id="1fb08a48d858dd0634d18d917bbc5ab72b18d6fe" translate="yes" xml:space="preserve">
          <source>perform a parallel build value = number of processors (0 for auto-detect)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b257649a7332b68cb7870d614e31ba48e19b66" translate="yes" xml:space="preserve">
          <source>performs &lt;code&gt;new(x)&lt;/code&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent a &lt;code&gt;ref&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bb016bf91bf6ee2f7a4ed7124b413b995841a0" translate="yes" xml:space="preserve">
          <source>performs &lt;code&gt;newSeq(x, len)&lt;/code&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent a &lt;code&gt;seq&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fae28d795c7f91d20107d99bbef35f37661d00" translate="yes" xml:space="preserve">
          <source>performs &lt;code&gt;setLen(x, x.len+1)&lt;/code&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent a &lt;code&gt;seq&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bb8496b64803541a12a393bf7633e217d9afd1" translate="yes" xml:space="preserve">
          <source>performs a deep copy of &lt;em&gt;y&lt;/em&gt; and copies it into &lt;em&gt;x&lt;/em&gt;. This is also used by the code generator for the implementation of &lt;code&gt;spawn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769d58d03022a4448690b2abdd247e3bee4ec2cf" translate="yes" xml:space="preserve">
          <source>pins a thread to a &lt;span id=&quot;cpu_1&quot;&gt;CPU&lt;/span&gt;. In other words sets a thread's &lt;span id=&quot;affinity_1&quot;&gt;affinity&lt;/span&gt;. If you don't know what this means, you shouldn't use this proc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49beccdd7be843384ec8ddcd5d611c551d261bf8" translate="yes" xml:space="preserve">
          <source>platform specific newline: CRLF on Windows, LF on Unix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a7ca855f38bc559d0fce6727c7e2d8ada99ff8" translate="yes" xml:space="preserve">
          <source>point</source>
          <target state="translated">point</target>
        </trans-unit>
        <trans-unit id="940109291c3247f273362f340cfab919cf365ae9" translate="yes" xml:space="preserve">
          <source>port type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdba57c2ea525d68cd766e6ddc87ae634e2c0ff" translate="yes" xml:space="preserve">
          <source>posix</source>
          <target state="translated">posix</target>
        </trans-unit>
        <trans-unit id="ec59e8ef5d7143e7b3086cee19b4bf70e5f9fa2a" translate="yes" xml:space="preserve">
          <source>posix.-</source>
          <target state="translated">posix.-</target>
        </trans-unit>
        <trans-unit id="aed16f264d3d3142c291c9f04ea8e6ae63ecb50e" translate="yes" xml:space="preserve">
          <source>posix.==</source>
          <target state="translated">posix.==</target>
        </trans-unit>
        <trans-unit id="13d53899ad9c2b25ab12773e66545167fd55bc20" translate="yes" xml:space="preserve">
          <source>possible JSON node types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75090859f1aa592681d8e9ea433fbfdf78aeee91" translate="yes" xml:space="preserve">
          <source>possible SEXP node types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc848c316af1a89d49826c5ae9d00ed769415f3" translate="yes" xml:space="preserve">
          <source>postgres</source>
          <target state="translated">postgres</target>
        </trans-unit>
        <trans-unit id="b0fe2525fdd968f51c54bf572729980549f4d967" translate="yes" xml:space="preserve">
          <source>postgres.Oid</source>
          <target state="translated">postgres.Oid</target>
        </trans-unit>
        <trans-unit id="0fd8ff59864c85de94e46be86e53855b7b6adae2" translate="yes" xml:space="preserve">
          <source>postgres.POid</source>
          <target state="translated">postgres.POid</target>
        </trans-unit>
        <trans-unit id="f7f73a4b8444f053d79682038c448444ec3ff738" translate="yes" xml:space="preserve">
          <source>pragma</source>
          <target state="translated">pragma</target>
        </trans-unit>
        <trans-unit id="7ca95bc010ef29f7426a3a1f08ef30dd0b1090b5" translate="yes" xml:space="preserve">
          <source>pragma pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47eed8186d0c96aa528915cdbb3985a02eb06f67" translate="yes" xml:space="preserve">
          <source>pragmas</source>
          <target state="translated">pragmas</target>
        </trans-unit>
        <trans-unit id="a6242b9432d7b78881a2cbc373001f6e04d6949d" translate="yes" xml:space="preserve">
          <source>prefix for a Nim expression within a template line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b6df154662245b9796620bb9ea49d74d6634cd1" translate="yes" xml:space="preserve">
          <source>prefix for a line that contains Nim code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d91930a9841b4c6166287549e58911ab76a825c" translate="yes" xml:space="preserve">
          <source>prepends a node &lt;em&gt;n&lt;/em&gt; to &lt;em&gt;L&lt;/em&gt;. Efficiency: O(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4aa938208ea7d303e581cf3f5538a2fb7a587a7" translate="yes" xml:space="preserve">
          <source>prepends a node to &lt;em&gt;L&lt;/em&gt;. Efficiency: O(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6772168810e180cb217eb136349951997a85da" translate="yes" xml:space="preserve">
          <source>prepends a value to &lt;em&gt;L&lt;/em&gt;. Efficiency: O(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a3614fe0f77ab560d7555b7d1ea480a8d8504b" translate="yes" xml:space="preserve">
          <source>proc</source>
          <target state="translated">proc</target>
        </trans-unit>
        <trans-unit id="2910bac20654ced050855bff9ade8232826f7dee" translate="yes" xml:space="preserve">
          <source>procedural type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b5fd347939f5c5bcb8b3a76483ec655131359d" translate="yes" xml:space="preserve">
          <source>procedure</source>
          <target state="translated">procedure</target>
        </trans-unit>
        <trans-unit id="a1673f0be561f4234e48eeb208501c9aadb410fa" translate="yes" xml:space="preserve">
          <source>proceed to the first/next request. Waits &lt;code&gt;timeout&lt;/code&gt; milliseconds for a request, if &lt;code&gt;timeout&lt;/code&gt; is &lt;em&gt;-1&lt;/em&gt; then this function will never time out. Returns &lt;em&gt;true&lt;/em&gt; if a new request has been processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45024bcec192ce5d2aa3d679eb546fd8315e0d92" translate="yes" xml:space="preserve">
          <source>process directories recursively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6eb88c600a2c5ec043e35009cfaa196ad24674" translate="yes" xml:space="preserve">
          <source>produces a new boolean literal node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35baf00453d93fa32eedeb137643ec5c6f5fb255" translate="yes" xml:space="preserve">
          <source>produces a new call node. &lt;em&gt;theProc&lt;/em&gt; is the proc that is called with the arguments &lt;code&gt;args[0..]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f394cdf9d50cb1f226278b104063ecdcbb6a72e" translate="yes" xml:space="preserve">
          <source>produces a new call node. &lt;em&gt;theProc&lt;/em&gt; is the proc that is called with the arguments &lt;code&gt;args[0..]&lt;/code&gt;. &lt;strong&gt;Deprecated since version 0.18.1&lt;/strong&gt;; Use &lt;code&gt;newCall(string, ...)&lt;/code&gt;, or &lt;code&gt;newCall(NimNode, ...)&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b397bc53a18c6577f877a71a6c1c6d84777a3f30" translate="yes" xml:space="preserve">
          <source>produces a new character literal node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651e87ddbe3620c48df8af69f10031b49e74473c" translate="yes" xml:space="preserve">
          <source>produces a new float literal node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff99478a2d2c1b9c935a812c207c580ce2f29415" translate="yes" xml:space="preserve">
          <source>produces a new integer literal node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b982f0d3c76050ec0b3273de4d2ab9d7a87660" translate="yes" xml:space="preserve">
          <source>produces a new node with children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce2287a772d446f15ba5558064a4cc8b1d1840d" translate="yes" xml:space="preserve">
          <source>produces a new string literal node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a392a6a0b23b9bf2ec72fd8a433baa9910e847" translate="yes" xml:space="preserve">
          <source>produces a new unsigned integer literal node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b348389002da667e76a1032d5d489207e9f5f8" translate="yes" xml:space="preserve">
          <source>produces a single &lt;code&gt;$&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0901a72836bf8c930f631ee89dc9ccc9c065850b" translate="yes" xml:space="preserve">
          <source>produces a string representation of the &lt;code&gt;RunningStat&lt;/code&gt;. The exact format is currently unspecified and subject to change. Currently it contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f304f3d0887b7a624d6eae0d946893a32fae730e" translate="yes" xml:space="preserve">
          <source>produces the Cartesian product of the array. Warning: complexity may explode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af814cb40a3dd70ab824e71257837372b5deac24" translate="yes" xml:space="preserve">
          <source>produces this output (but not necessarily in this order!):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0675874b45100c4f684c16d2898259f5370613f7" translate="yes" xml:space="preserve">
          <source>profile your code to find where the bottlenecks are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4a96ea533c919ddfea2c6050d095f50b948f5b" translate="yes" xml:space="preserve">
          <source>proper 64 bit integer arithmetic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532d5a348ca5ce28f7f8ab5e37c8488898e5c39a" translate="yes" xml:space="preserve">
          <source>provides access to the compiler's instantiation stack line information of a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cc9294993bccd0fb803c9895ef590e0e694523" translate="yes" xml:space="preserve">
          <source>pure pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18dc5bf4fba80f447374b436b9ccbf397b6ccc9b" translate="yes" xml:space="preserve">
          <source>push and pop pragmas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f35c89e4f717f13a4a4e1a100c209b311f3309" translate="yes" xml:space="preserve">
          <source>pushes a value &lt;em&gt;x&lt;/em&gt; for processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111f9b5c0d8bf123b2da1d2690a8037301b6937f" translate="yes" xml:space="preserve">
          <source>pushes a value &lt;em&gt;x&lt;/em&gt; for processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c9bad26bc4cd6fe337451ff807305923c147d6" translate="yes" xml:space="preserve">
          <source>pushes all values of &lt;em&gt;x&lt;/em&gt; for processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60437a1af5d122427dd6cb30341048b10bd381cf" translate="yes" xml:space="preserve">
          <source>pushes two sets of values &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; for processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3202d5a586b51e9eb5113d9f5051b1260d84a7f7" translate="yes" xml:space="preserve">
          <source>pushes two values &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; for processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d366f0a6b29bf26b46047d4e37f63a21598754" translate="yes" xml:space="preserve">
          <source>pushes two values &lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; for processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132aeadf736728a3f874cd17615dda27830e8cbd" translate="yes" xml:space="preserve">
          <source>put</source>
          <target state="translated">put</target>
        </trans-unit>
        <trans-unit id="a265a0052033b8ab703d0ebca8741a8c9b3a36ee" translate="yes" xml:space="preserve">
          <source>put, &lt;code&gt;[]=&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da3ca2b0ac24f1755b1346d80c48e09a585aa65" translate="yes" xml:space="preserve">
          <source>puts a (key, value)-pair into &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c490ecf3f897544c4f2850a214858f13b589b8" translate="yes" xml:space="preserve">
          <source>puts a (key, value)-pair into &lt;em&gt;t&lt;/em&gt;. &lt;em&gt;val&lt;/em&gt; has to be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efeba0a9f5622d7b601ba312306885b308de96c3" translate="yes" xml:space="preserve">
          <source>puts a new (key, value)-pair into &lt;em&gt;t&lt;/em&gt; even if &lt;code&gt;t[key]&lt;/code&gt; already exists. This can introduce duplicate keys into the table!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105f2a4cd20bcfc7b447abf30cafa5af3520ddd6" translate="yes" xml:space="preserve">
          <source>raised by the &lt;code&gt;to&lt;/code&gt; macro if the JSON kind is incorrect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffc510135a9346351559a677976b7ccd8204013" translate="yes" xml:space="preserve">
          <source>raised if an invalid PEG has been detected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1369e2f335531aa57752cf20159214fd6c7f1b6" translate="yes" xml:space="preserve">
          <source>raises a DbError exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49f6057899211fd9b189cc437d5d30e8f0a4efc" translate="yes" xml:space="preserve">
          <source>raises an &lt;em&gt;EInvalidLibrary&lt;/em&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad40c10a4dcfeb75dfd66550ba17a4a7a0c11560" translate="yes" xml:space="preserve">
          <source>raises an &lt;em&gt;EJsonParsingError&lt;/em&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23356a5aa69f1bd6d255552d7af79ad738dbbab" translate="yes" xml:space="preserve">
          <source>raises an &lt;em&gt;ESexpParsingError&lt;/em&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449595e5a6d6359151cee486d69d8e72279634b6" translate="yes" xml:space="preserve">
          <source>raises an DbError exception with message &lt;em&gt;msg&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a591a6c9e96272804a54df77231b4bad6d6149a" translate="yes" xml:space="preserve">
          <source>raises an ECgi exception with message &lt;em&gt;msg&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1141b1a90dea9f241487a5d19c9a107bbe3f3d3b" translate="yes" xml:space="preserve">
          <source>raises an ScgiError exception with message &lt;em&gt;msg&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a415ab5cc17c8c093c015ccdb7e552aee7911aa4" translate="yes" xml:space="preserve">
          <source>random</source>
          <target state="translated">random</target>
        </trans-unit>
        <trans-unit id="4e330eee3e7195f06d3b7083fba48550204d9217" translate="yes" xml:space="preserve">
          <source>random.Rand</source>
          <target state="translated">random.Rand</target>
        </trans-unit>
        <trans-unit id="3221d667d753c5940e5a42921fc1566017d9fb12" translate="yes" xml:space="preserve">
          <source>range[T]</source>
          <target state="translated">range[T]</target>
        </trans-unit>
        <trans-unit id="13eac40262e8e3331f72381f251642e7fa2687cc" translate="yes" xml:space="preserve">
          <source>rationals</source>
          <target state="translated">rationals</target>
        </trans-unit>
        <trans-unit id="c0ce3d69d5dd0e671d4661ffa85be90bf4d104ac" translate="yes" xml:space="preserve">
          <source>rationals.$</source>
          <target state="translated">rationals.$</target>
        </trans-unit>
        <trans-unit id="009e6478bc48621f77c807c7b80c3f5aa7f737e2" translate="yes" xml:space="preserve">
          <source>rationals.&amp;lt;</source>
          <target state="translated">rationals.&amp;lt;</target>
        </trans-unit>
        <trans-unit id="e1566d4d2b2061e14ce0dbff062d724ad1c9a685" translate="yes" xml:space="preserve">
          <source>rationals.*</source>
          <target state="translated">rationals.*</target>
        </trans-unit>
        <trans-unit id="a16a58bbfae5c4d2504ac063684adb826ebf1859" translate="yes" xml:space="preserve">
          <source>rationals.*=</source>
          <target state="translated">rationals.*=</target>
        </trans-unit>
        <trans-unit id="c67403795276b0e2ac61e5708ff42af10f884d4f" translate="yes" xml:space="preserve">
          <source>rationals.+</source>
          <target state="translated">rationals.+</target>
        </trans-unit>
        <trans-unit id="94c97963c25f49a66d5e446641979daef816592e" translate="yes" xml:space="preserve">
          <source>rationals.+=</source>
          <target state="translated">rationals.+=</target>
        </trans-unit>
        <trans-unit id="75ce6c8a7c014afea759624b872faf5327508abd" translate="yes" xml:space="preserve">
          <source>rationals.-</source>
          <target state="translated">rationals.-</target>
        </trans-unit>
        <trans-unit id="fb9989746ad512b05951df932b03407cd34a319a" translate="yes" xml:space="preserve">
          <source>rationals.-=</source>
          <target state="translated">rationals.-=</target>
        </trans-unit>
        <trans-unit id="3cc1b8c5927c7fc0721a7fa013f13af6e38322a3" translate="yes" xml:space="preserve">
          <source>rationals./</source>
          <target state="translated">rationals./</target>
        </trans-unit>
        <trans-unit id="c9c7aa357f6a74ff582b824f094599dccc41802c" translate="yes" xml:space="preserve">
          <source>rationals.//</source>
          <target state="translated">rationals.//</target>
        </trans-unit>
        <trans-unit id="8d3c8a7d7b55fa507b1ca0357dcd64e10b6adcde" translate="yes" xml:space="preserve">
          <source>rationals./=</source>
          <target state="translated">rationals./=</target>
        </trans-unit>
        <trans-unit id="c56de5cbc118ebb4e0f3840b84fc5c041c1ffa79" translate="yes" xml:space="preserve">
          <source>rationals.==</source>
          <target state="translated">rationals.==</target>
        </trans-unit>
        <trans-unit id="31af8535699f6ebb260c58debfc81356e81891e4" translate="yes" xml:space="preserve">
          <source>rationals.div</source>
          <target state="translated">rationals.div</target>
        </trans-unit>
        <trans-unit id="0088e971d62e30da1c32fa626bbd4eef01ff9419" translate="yes" xml:space="preserve">
          <source>rationals.mod</source>
          <target state="translated">rationals.mod</target>
        </trans-unit>
        <trans-unit id="c387c982a132d05cbd5f88840aef2c8157740049" translate="yes" xml:space="preserve">
          <source>re</source>
          <target state="translated">re</target>
        </trans-unit>
        <trans-unit id="14aefd924d391ae93b93dae005d73a5f3e43f56a" translate="yes" xml:space="preserve">
          <source>re.=~</source>
          <target state="translated">re.=~</target>
        </trans-unit>
        <trans-unit id="705c26049ae5fca4a72addb232dfbaf4fa8c8e9e" translate="yes" xml:space="preserve">
          <source>re.re()</source>
          <target state="translated">re.re()</target>
        </trans-unit>
        <trans-unit id="7a2597deab092cbe98b787709e14ea213ab31ad6" translate="yes" xml:space="preserve">
          <source>read pattern from stdin (to avoid the shell's confusing quoting rules)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fbb1b455387cec5496c1056ea29075c2e79655" translate="yes" xml:space="preserve">
          <source>reads &lt;em&gt;len&lt;/em&gt; bytes into the buffer &lt;em&gt;a&lt;/em&gt; starting at &lt;code&gt;a[start]&lt;/code&gt;. Returns the actual number of bytes that have been read which may be less than &lt;em&gt;len&lt;/em&gt; (if not as many bytes are remaining), but not greater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47f021c48c5d560f9dcd3f9825660bd7370c9f3" translate="yes" xml:space="preserve">
          <source>reads &lt;em&gt;len&lt;/em&gt; bytes into the buffer pointed to by &lt;em&gt;buffer&lt;/em&gt;. Returns the actual number of bytes that have been read which may be less than &lt;em&gt;len&lt;/em&gt; (if not as many bytes are remaining), but not greater.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a9cf0e5348c889b46dbf688a3ec142e88d957d" translate="yes" xml:space="preserve">
          <source>reads a bool from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e852ae8869358be048471052641797933f8fd3e8" translate="yes" xml:space="preserve">
          <source>reads a char from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred. Returns '0' as an EOF marker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652e34e9d5ed7c226931602179a0ba0724b533b1" translate="yes" xml:space="preserve">
          <source>reads a float32 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8e323c906f44cfa21b01c3267e01e84f1659cd" translate="yes" xml:space="preserve">
          <source>reads a float64 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9340ac7de483360e7740ef39bfc65142256309cf" translate="yes" xml:space="preserve">
          <source>reads a line of text from the file &lt;em&gt;f&lt;/em&gt; into &lt;em&gt;line&lt;/em&gt;. May throw an IO exception. A line of text may be delimited by &lt;code&gt;LF&lt;/code&gt; or &lt;code&gt;CRLF&lt;/code&gt;. The newline character(s) are not part of the returned string. Returns &lt;code&gt;false&lt;/code&gt; if the end of the file has been reached, &lt;code&gt;true&lt;/code&gt; otherwise. If &lt;code&gt;false&lt;/code&gt; is returned &lt;em&gt;line&lt;/em&gt; contains no new data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b7a88bd47e8d38d02d223803eb1d4d88751622" translate="yes" xml:space="preserve">
          <source>reads a line of text from the file &lt;em&gt;f&lt;/em&gt;. May throw an IO exception. A line of text may be delimited by &lt;code&gt;LF&lt;/code&gt; or &lt;code&gt;CRLF&lt;/code&gt;. The newline character(s) are not part of the returned string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40da5001218ddbbef124f9320683af097d36b265" translate="yes" xml:space="preserve">
          <source>reads a line of text from the stream &lt;em&gt;s&lt;/em&gt; into &lt;em&gt;line&lt;/em&gt;. &lt;em&gt;line&lt;/em&gt; must not be &lt;code&gt;nil&lt;/code&gt;! May throw an IO exception. A line of text may be delimited by ```LF`` or &lt;code&gt;CRLF&lt;/code&gt;. The newline character(s) are not part of the returned string. Returns &lt;code&gt;false&lt;/code&gt; if the end of the file has been reached, &lt;code&gt;true&lt;/code&gt; otherwise. If &lt;code&gt;false&lt;/code&gt; is returned &lt;em&gt;line&lt;/em&gt; contains no new data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9dce767037fad550bdfb494ccd0d5468bb9749" translate="yes" xml:space="preserve">
          <source>reads a string of length &lt;em&gt;length&lt;/em&gt; from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0b13630cb7bf12183a42e4512663b34b4b3c4e" translate="yes" xml:space="preserve">
          <source>reads an int16 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f77b06c6a122bd5ac859b9e8376d08f01de722" translate="yes" xml:space="preserve">
          <source>reads an int32 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52dea43802f9308b15b4c0b5d110a1e03662100e" translate="yes" xml:space="preserve">
          <source>reads an int64 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c84a9c45dea3a90b5b3652ad99525e4add3e44" translate="yes" xml:space="preserve">
          <source>reads an int8 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff32095e88b0038c66c0297ab9f1bb461d7c2f6a" translate="yes" xml:space="preserve">
          <source>reads an uint16 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9379552ada90b5461c30a3b09a1d307d7af6566" translate="yes" xml:space="preserve">
          <source>reads an uint32 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742314126c0e9bb46569264825fe97eb6ad14acf" translate="yes" xml:space="preserve">
          <source>reads an uint64 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57abcde40046617faa49900e37a44d452ed28656" translate="yes" xml:space="preserve">
          <source>reads an uint8 from the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969c988893175bca21c90b78b398d643c6a92ffc" translate="yes" xml:space="preserve">
          <source>reads data and transforms it to a &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699caf9715d78f9321820074d54862ee178187b2" translate="yes" xml:space="preserve">
          <source>reads in the file &lt;code&gt;infile&lt;/code&gt;, performs a parallel replacement (calls &lt;code&gt;parallelReplace&lt;/code&gt;) and writes back to &lt;code&gt;outfile&lt;/code&gt;. Raises &lt;code&gt;IOError&lt;/code&gt; if an error occurs. This is supposed to be used for quick scripting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102b03cf3ebd45be49d967cbb2da2e2c95d7cc7e" translate="yes" xml:space="preserve">
          <source>reads in the file &lt;em&gt;infile&lt;/em&gt;, performs a parallel replacement (calls &lt;em&gt;parallelReplace&lt;/em&gt;) and writes back to &lt;em&gt;outfile&lt;/em&gt;. Raises &lt;code&gt;EIO&lt;/code&gt; if an error occurs. This is supposed to be used for quick scripting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000dc9df68c08ea236f664c2b8f4968a440bc66f" translate="yes" xml:space="preserve">
          <source>reads the next row; if &lt;em&gt;columns&lt;/em&gt; &amp;gt; 0, it expects the row to have exactly this many columns. Returns false if the end of the file has been encountered else true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ae11f940bf1866ff86d4ce26fad8935d1cdf48" translate="yes" xml:space="preserve">
          <source>realtime setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab64ead95e87e97a907c4d0e34dcb3cca21c063" translate="yes" xml:space="preserve">
          <source>receives a message from the channel &lt;em&gt;c&lt;/em&gt;. This blocks until a message has arrived! You may use &lt;code&gt;peek&lt;/code&gt; to avoid the blocking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd499e303019b11dc02ffd0ad464d206c27009a7" translate="yes" xml:space="preserve">
          <source>receives all the available data from the socket. Socket errors will result in an &lt;code&gt;EOS&lt;/code&gt; error. If socket is not a connectionless socket and socket is not connected &lt;code&gt;&quot;&quot;&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b68fcfe41dba9424636393c1debe0a8e62d524" translate="yes" xml:space="preserve">
          <source>receives all the data from a non-blocking socket. If socket is non-blocking and there are no messages available, &lt;em&gt;False&lt;/em&gt; will be returned. Other socket errors will result in an &lt;code&gt;EOS&lt;/code&gt; error. If socket is not a connectionless socket and socket is not connected &lt;code&gt;s&lt;/code&gt; will be set to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6731fb735335a91ff88a209514c0e20005a784b" translate="yes" xml:space="preserve">
          <source>rect</source>
          <target state="translated">rect</target>
        </trans-unit>
        <trans-unit id="bf945223e89cce48dcfe24ca3d2596a85d6a90cc" translate="yes" xml:space="preserve">
          <source>rectangle</source>
          <target state="translated">rectangle</target>
        </trans-unit>
        <trans-unit id="dcd528f3103c12b21cff60171c8c11227e9e24ee" translate="yes" xml:space="preserve">
          <source>ref or pointer type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9295b8f45813ce6b345c60861ff4a54345a15a80" translate="yes" xml:space="preserve">
          <source>reference (pointer) type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce28eba2981a06218f7aa0f494457574726ca48c" translate="yes" xml:space="preserve">
          <source>reference to RootObj</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e08761ece67791435d4ec719f7cfb35769196dc" translate="yes" xml:space="preserve">
          <source>register pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db99845855b2ecbfecca9a095062b96c3e27703f" translate="yes" xml:space="preserve">
          <source>remove</source>
          <target state="translated">remove</target>
        </trans-unit>
        <trans-unit id="503d527abb998a47b1b14771d0c3d770b4577458" translate="yes" xml:space="preserve">
          <source>removes &lt;em&gt;key&lt;/em&gt; (and its associated value) from the set &lt;em&gt;c&lt;/em&gt;. If the &lt;em&gt;key&lt;/em&gt; does not exist, nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b7e7bb79bf87ff62d02557c9f693ddc8fbd9fd" translate="yes" xml:space="preserve">
          <source>removes &lt;em&gt;n&lt;/em&gt; from &lt;em&gt;L&lt;/em&gt;. Efficiency: O(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06af1e0da7aa5edf413fcace45189fd87b4be080" translate="yes" xml:space="preserve">
          <source>renderer</source>
          <target state="translated">renderer</target>
        </trans-unit>
        <trans-unit id="9fb50279a098263754acc4ef9454ea84ebc9629c" translate="yes" xml:space="preserve">
          <source>renders &lt;em&gt;n&lt;/em&gt; into its string representation and appends to &lt;em&gt;result&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724597e46296d42d718a2b9100cabc042bbe3e52" translate="yes" xml:space="preserve">
          <source>reopens the file &lt;em&gt;f&lt;/em&gt; with given &lt;em&gt;filename&lt;/em&gt; and &lt;em&gt;mode&lt;/em&gt;. This is often used to redirect the &lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; or &lt;em&gt;stderr&lt;/em&gt; file variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679662711ceacbdd99f959c1967ae061278c5453" translate="yes" xml:space="preserve">
          <source>replace the pattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6215a7f63959d9c1beff81ec3d06efd90ca96aa8" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;&quot;&lt;/code&gt; by &lt;code&gt;\&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2038c557e97e2f7dd62809590eae19fa0f849b1a" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;'&lt;/code&gt; by &lt;code&gt;\'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a6d68ebcbb4fa6deca7c58da66d0a99430b17f" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;\&lt;/code&gt; by &lt;code&gt;\\&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15019806d97e81737c0d250a7fd3b2cbef463849" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;\a&lt;/code&gt; by &lt;code&gt;\\a&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7aab3e27dfd15e2ae8df76ba5dd3accc86a44f" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;\b&lt;/code&gt; by &lt;code&gt;\\b&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a80baee7d5e7dde25fb78340c72f902999b4aa4" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;\c&lt;/code&gt; by &lt;code&gt;\\c&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd8661cc85d063e8f272b242e0d50e555f8b35d" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;\e&lt;/code&gt; by &lt;code&gt;\\e&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2d3a4804b7b442615863e737f56036305a6c83" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;\f&lt;/code&gt; by &lt;code&gt;\\f&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1755abb8358525f30e7f5cc201de04983ba016" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;\n&lt;/code&gt; by &lt;code&gt;\\n&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f548b0265d5766340fa2ffdc540614a5edb35ca4" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;\t&lt;/code&gt; by &lt;code&gt;\\t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16edbac79778bbd5ac3607bf6916bdbfac8283ac" translate="yes" xml:space="preserve">
          <source>replaces any &lt;code&gt;\v&lt;/code&gt; by &lt;code&gt;\\v&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df050205881476de16ff5b5efc08cfb1bd48c33" translate="yes" xml:space="preserve">
          <source>replaces any other character not in the set &lt;code&gt;{'\21..'\126'} by ``\xHH&lt;/code&gt; where &lt;code&gt;HH&lt;/code&gt; is its hexadecimal value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0ad9352e17b3cd158654269498b8937b0260bd" translate="yes" xml:space="preserve">
          <source>represent slice of a MemFile for iteration over delimited lines/records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3983c345fd5838958d780b1147652301ffe83afe" translate="yes" xml:space="preserve">
          <source>represents a Nim &lt;em&gt;symbol&lt;/em&gt; in the compiler; a &lt;em&gt;symbol&lt;/em&gt; is a looked-up &lt;em&gt;ident&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e230cff833f3e99429be58ee54658d8fc160be" translate="yes" xml:space="preserve">
          <source>represents a Nim AST node. Macros operate on this type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e920f55270afdd93987ebffb098a1ecbd7cde7" translate="yes" xml:space="preserve">
          <source>represents a Nim identifier in the AST. &lt;strong&gt;Note&lt;/strong&gt;: This is only rarely useful, for identifier construction from a string use &lt;code&gt;ident&quot;abc&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb41b188b255376ec18504177d71c51c3818f39" translate="yes" xml:space="preserve">
          <source>represents a memory mapped file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1050fbbace6f393a44b63f2f4b266f2dc0413d" translate="yes" xml:space="preserve">
          <source>represents a runtime frame of the call stack; part of the debugger API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b65e2f6545c42d378afe78820ab4ba49b7d097" translate="yes" xml:space="preserve">
          <source>represents an operating system process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6743b0c41b9ebb64ce909115d8c8ae5e3dc6bcc" translate="yes" xml:space="preserve">
          <source>reset &lt;em&gt;r&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816151d18f771ac315ccdc26baa77a5708e3a475" translate="yes" xml:space="preserve">
          <source>reset &lt;em&gt;s&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb39f617d9c1bba7e5cb9f675c79bc53e49943bc" translate="yes" xml:space="preserve">
          <source>resets a string table to be empty again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18f68d1424ef80614b10795d37305976f3fa99d" translate="yes" xml:space="preserve">
          <source>resets an object &lt;em&gt;obj&lt;/em&gt; to its initial (binary zero) value to signify it was &quot;moved&quot; and to signify its destructor should do nothing and ideally be optimized away.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38eb012fef261106710953214d4c9af047a01412" translate="yes" xml:space="preserve">
          <source>resets an object &lt;em&gt;obj&lt;/em&gt; to its initial (binary zero) value. This needs to be called before any possible &lt;span id=&quot;object-branch-transition_1&quot;&gt;object branch transition&lt;/span&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a9bf54e1b5b184e2433b7b9c2cd7c44e7384c7" translate="yes" xml:space="preserve">
          <source>result for readLineAsync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ef9b8468ab1d63c4d00164a6effa41b91d14af" translate="yes" xml:space="preserve">
          <source>result for recvLineAsync</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2698af9f7835a4c616a95d56e8a3f4e71047a69c" translate="yes" xml:space="preserve">
          <source>result not representable due to overflow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ef8ac93c061dd6a58e5669a6407852af5f1df9" translate="yes" xml:space="preserve">
          <source>result not representable due to underflow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b6c5749772d64c63b81c8b45bd59ad3f8e291a" translate="yes" xml:space="preserve">
          <source>results in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e2d480d21afb6ed9cbff62d0578e3950ca2094" translate="yes" xml:space="preserve">
          <source>retrieve the bool value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent a bool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed2aec9ba830ff021f880e8b6a89da8833d7673" translate="yes" xml:space="preserve">
          <source>retrieve the char value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent a char.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23db6b6ec61cc0c50e8f8946f905474f876f21e6" translate="yes" xml:space="preserve">
          <source>retrieve the cstring value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent a cstring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827125d235c9dcd1db1357a5b7deebebe0b4e4be" translate="yes" xml:space="preserve">
          <source>retrieve the float value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent an float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf24e8a1aeb36a6c2012815fa144324621f7d10d" translate="yes" xml:space="preserve">
          <source>retrieve the float value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent some float. The value is extended to &lt;code&gt;BiggestFloat&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfd58b6e229c9394650ebd783c536390cc7fdb6" translate="yes" xml:space="preserve">
          <source>retrieve the float32 value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent an float32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc138daacd755b34f645db1be2b48b653ad127b4" translate="yes" xml:space="preserve">
          <source>retrieve the float64 value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent an float64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6e25e76ae0e7968cb46a37fe215c669a60ef7c" translate="yes" xml:space="preserve">
          <source>retrieve the implementation of &lt;em&gt;symbol&lt;/em&gt;. &lt;em&gt;symbol&lt;/em&gt; can be a routine or a const.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa61fd52ce70e38360526f627671ec4ede2d7b65" translate="yes" xml:space="preserve">
          <source>retrieve the int value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent an int.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafc476a2e679c7e1455734598c9bcbf934fd96c" translate="yes" xml:space="preserve">
          <source>retrieve the int16 value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent an int16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7bb0e54a551068f0e8c1e5f0051ab8bdc877fc" translate="yes" xml:space="preserve">
          <source>retrieve the int32 value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent an int32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76245187bf2cbae2528b189840f1d6a23e6b4f6" translate="yes" xml:space="preserve">
          <source>retrieve the int64 value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent an int64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcbb126ea0fc0c2fcfbd3dd99b53481cd50d9c0" translate="yes" xml:space="preserve">
          <source>retrieve the int8 value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent an int8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00af15ebae1c714c938d57dc5f92ff96303a4365" translate="yes" xml:space="preserve">
          <source>retrieve the integer value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent some integer, a bool, a char, an enum or a small enough bit set. The value might be sign-extended to &lt;code&gt;BiggestInt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957e043ddc675cabacf2ec2af470211f6a03f703" translate="yes" xml:space="preserve">
          <source>retrieve the pointer value out of &lt;em&gt;x&lt;/em&gt;. &lt;code&gt;x&lt;/code&gt; needs to be of kind &lt;code&gt;akString&lt;/code&gt;, &lt;code&gt;akCString&lt;/code&gt;, &lt;code&gt;akProc&lt;/code&gt;, &lt;code&gt;akRef&lt;/code&gt;, &lt;code&gt;akPtr&lt;/code&gt;, &lt;code&gt;akPointer&lt;/code&gt;, &lt;code&gt;akSequence&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5663cacf82a73de4fca8119a9628f5e773e46f" translate="yes" xml:space="preserve">
          <source>retrieve the string value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20531e42c752fb2b20d87e85e3f8e186dba44c15" translate="yes" xml:space="preserve">
          <source>retrieve the uint value out of &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt; needs to represent an uint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f8f25248c822f8c1a0daf6bb04b363695a0beb" translate="yes" xml:space="preserve">
          <source>retrieve the uint16 value out of &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt; needs to represent an uint16.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a274e31c1bed376fe8b380e80e000b338da8cb49" translate="yes" xml:space="preserve">
          <source>retrieve the uint32 value out of &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt; needs to represent an uint32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e24bde69a1225f64568a134cae81d5698c5d2b" translate="yes" xml:space="preserve">
          <source>retrieve the uint64 value out of &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt; needs to represent an uint64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8a7c067f6f492940bcce651d39ffb41bf86b2d" translate="yes" xml:space="preserve">
          <source>retrieve the uint8 value out of &lt;em&gt;x&lt;/em&gt;, &lt;em&gt;x&lt;/em&gt; needs to represent an uint8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce4ed531b85ec5819b0abb5f0177fa1a6c84c10" translate="yes" xml:space="preserve">
          <source>retrieve the unsigned integer value out of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent an unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7607cfae779bd687998a876f0434739f2675b3fa" translate="yes" xml:space="preserve">
          <source>retrieves a single row. If the query doesn't return any rows, this proc will return a Row with empty strings for each column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24bb84eccea49fdbf618c8326f41f67760d1c9f" translate="yes" xml:space="preserve">
          <source>retrieves file permissions for &lt;em&gt;filename&lt;/em&gt;. &lt;em&gt;OSError&lt;/em&gt; is raised in case of an error. On Windows, only the &lt;code&gt;readonly&lt;/code&gt; flag is checked, every other permission is available in any case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529ddd21b7285076a988f7ea4aef784faf83c37e" translate="yes" xml:space="preserve">
          <source>retrieves the address of a procedure/variable from &lt;em&gt;lib&lt;/em&gt;. Raises &lt;em&gt;EInvalidLibrary&lt;/em&gt; if the symbol could not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdfdab83f98e9b5f26956937c1fadcb7a5304b2" translate="yes" xml:space="preserve">
          <source>retrieves the address of a procedure/variable from &lt;em&gt;lib&lt;/em&gt;. Returns nil if the symbol could not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3638a31d4ba33d60f53b2219f4bb57a42620d19" translate="yes" xml:space="preserve">
          <source>retrieves the current column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289a6bc6ce0b5caf83c98bf03369150acfd1f675" translate="yes" xml:space="preserve">
          <source>retrieves the current encoding. On Unix, always &quot;UTF-8&quot; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb68a42193f3c9a767b931a5c021cae58991195" translate="yes" xml:space="preserve">
          <source>retrieves the current exception; if there is none, nil is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a766d8a073fe7776c41d50f87ad1409af13ec0" translate="yes" xml:space="preserve">
          <source>retrieves the current line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fd8f81d4302c617f4fd8751671f2ff6e79feab" translate="yes" xml:space="preserve">
          <source>retrieves the current position in the stream &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73fb7efb55152bdfcbc5ee710e5a5bfa986e4f5" translate="yes" xml:space="preserve">
          <source>retrieves the current position of the file pointer that is used to read from the file &lt;em&gt;f&lt;/em&gt;. The file's first byte has the index zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3bd8b1ba07e62473abdc6ff29cf9b91a860b00" translate="yes" xml:space="preserve">
          <source>retrieves the error message that was attached to the current exception; if there is none, &quot;&quot; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d66631d5637a9a5987664580ac7f121906a633" translate="yes" xml:space="preserve">
          <source>retrieves the file size (in bytes) of &lt;em&gt;f&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ad59741c00f38dc21d62444a2c12022a94d534" translate="yes" xml:space="preserve">
          <source>retrieves the first/next event. This controls the parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19a40e24ae029189b192ede9601c28768c87353" translate="yes" xml:space="preserve">
          <source>retrieves the location at &lt;code&gt;t[key]&lt;/code&gt;. If &lt;em&gt;key&lt;/em&gt; is not in &lt;em&gt;t&lt;/em&gt;, the &lt;code&gt;KeyError&lt;/code&gt; exception is raised. One can check with &lt;code&gt;hasKey&lt;/code&gt; whether the key exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914610a038ef7dd9c03c1a20d4cc503be1856bd7" translate="yes" xml:space="preserve">
          <source>retrieves the raw environment pointer of the closure &lt;em&gt;x&lt;/em&gt;. This is useful for interfacing closures with C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ed813e0d3e7864b4e4b90421e928f4652c1540" translate="yes" xml:space="preserve">
          <source>retrieves the raw proc pointer of the closure &lt;em&gt;x&lt;/em&gt;. This is useful for interfacing closures with C.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838b48487d4eb12222bd9ff1260b955f2b5570a4" translate="yes" xml:space="preserve">
          <source>retrieves the reference count of an heap-allocated object. The value is implementation-dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706d7120fbbffc53e3c0e3c004d99fe3d2b7b9bf" translate="yes" xml:space="preserve">
          <source>retrieves the rest of the command line that has not been parsed yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94dc37ac8a2e0493f32931baaa70f85d601bdb4" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;c[key]&lt;/code&gt;. If &lt;em&gt;key&lt;/em&gt; is not in &lt;em&gt;t&lt;/em&gt;, the &lt;code&gt;KeyError&lt;/code&gt; exception is raised. One can check with &lt;code&gt;hasKey&lt;/code&gt; whether the key exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea44608049468d0f7b311b4cfa574f468137c536" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;c[key]&lt;/code&gt;. The value can be modified. If &lt;em&gt;key&lt;/em&gt; is not in &lt;em&gt;t&lt;/em&gt;, the &lt;code&gt;KeyError&lt;/code&gt; exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b9126dde617b16253f4aad1df45c5c6e92cd7a" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;c[key]&lt;/code&gt;. The value can be modified. If &lt;em&gt;key&lt;/em&gt; is not in &lt;em&gt;t&lt;/em&gt;, the &lt;code&gt;KeyError&lt;/code&gt; exception is raised. Use ```[]``` instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b315db9c74675588bd9f9466c108a6ed89e0ca8a" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;t[key]&lt;/code&gt; iff &lt;em&gt;key&lt;/em&gt; is in &lt;em&gt;t&lt;/em&gt;. Otherwise, 0 (the default initialization value of &lt;em&gt;int&lt;/em&gt;), is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7e8589f7b76d3821679ce136318970c02f43f6" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;t[key]&lt;/code&gt; iff &lt;em&gt;key&lt;/em&gt; is in &lt;em&gt;t&lt;/em&gt;. Otherwise, &lt;em&gt;default&lt;/em&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a331f8da7018e7b6026a11737705cd6a49bfae21" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;t[key]&lt;/code&gt; iff &lt;em&gt;key&lt;/em&gt; is in &lt;em&gt;t&lt;/em&gt;. Otherwise, the default initialization value for type &lt;em&gt;B&lt;/em&gt; is returned (e.g. 0 for any integer type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e585b32dacfd54f8157af34e0585e6af3f9b17" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;t[key]&lt;/code&gt; iff &lt;em&gt;key&lt;/em&gt; is in &lt;em&gt;t&lt;/em&gt;. Otherwise, the integer value of &lt;em&gt;default&lt;/em&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9082eab8c8c6004d68aba805a37b2062fe95ec53" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;t[key]&lt;/code&gt;. &lt;em&gt;value&lt;/em&gt; can be modified in the scope of the &lt;code&gt;withValue&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1de926f41a781da29a0fdf018cfab2518bf739" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;t[key]&lt;/code&gt;. If &lt;em&gt;key&lt;/em&gt; is not in &lt;em&gt;t&lt;/em&gt;, the &lt;code&gt;KeyError&lt;/code&gt; exception is raised. One can check with &lt;code&gt;hasKey&lt;/code&gt; whether the key exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c677ca665101b496c81e5bbf1e5f78afb83dec" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;t[key]&lt;/code&gt;. The value can be modified. If &lt;em&gt;key&lt;/em&gt; is not in &lt;em&gt;t&lt;/em&gt;, the &lt;code&gt;KeyError&lt;/code&gt; exception is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9418fedc01d716eccee7f348e700d517681f63" translate="yes" xml:space="preserve">
          <source>retrieves the value at &lt;code&gt;t[key]&lt;/code&gt;. The value can be modified. If &lt;em&gt;key&lt;/em&gt; is not in &lt;em&gt;t&lt;/em&gt;, the &lt;code&gt;KeyError&lt;/code&gt; exception is raised. Use ```[]``` instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf8134d1bb3d79c3e1788775ad685cfaf76173a" translate="yes" xml:space="preserve">
          <source>retrieves value at &lt;code&gt;t[key]&lt;/code&gt; or puts &lt;code&gt;val&lt;/code&gt; if not present, either way returning a value which can be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a1045ada5e66c8ce67558b678e76f9a06a9227" translate="yes" xml:space="preserve">
          <source>retrieves value at &lt;code&gt;t[key]&lt;/code&gt; or puts &lt;code&gt;val&lt;/code&gt; if not present, either way returning a value which can be modified. &lt;strong&gt;Note&lt;/strong&gt;: This is inherently unsafe in the context of multi-threading since it returns a pointer to &lt;code&gt;B&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847479aca4e74f7ccc2b9987d9e096652b960235" translate="yes" xml:space="preserve">
          <source>retrieves value at &lt;code&gt;t[key]&lt;/code&gt; or puts &lt;code&gt;value&lt;/code&gt; if not present, either way returning a value which can be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3428fe0455340d27f80db052685a543755e9a079" translate="yes" xml:space="preserve">
          <source>return -1 if the process is still running. Otherwise the process' exit code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb83d2fc756e25c84f5869f0a0ed7314e7021c02" translate="yes" xml:space="preserve">
          <source>return the string representation of address within sockAddr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00a7c47087f156e04f6cd7dfff430387a600e8e" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;LineInfo&lt;/code&gt; of &lt;code&gt;n&lt;/code&gt;, using absolute path for &lt;code&gt;filename&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4118dba342f95ef2ace22d9e608ac86f66b66936" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;p&lt;/code&gt;'s error file handle for reading from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a100e934be38a6b31cf1d3639798e3fd58dcc3b" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;p&lt;/code&gt;'s error stream for reading from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1983e4e821a94152b096f89a9ba4d5cd59d027" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;p&lt;/code&gt;'s input file handle for writing to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b75440c792d965d19a0f66963e322ab70c8b36" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;p&lt;/code&gt;'s input stream for writing to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88bfa7d67ba04dd61b3ec713bd14103be3a9835" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;p&lt;/code&gt;'s output file handle for reading from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327442b7de2be33865a1f83317a7a64d247118e9" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;p&lt;/code&gt;'s output stream for reading from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff048578dea42ca666c67e48efd12e3297c0586a" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;buf[start..&amp;lt;bufSize]&lt;/code&gt; matches the &lt;code&gt;pattern&lt;/code&gt; and the captured substrings in the array &lt;code&gt;matches&lt;/code&gt;. If it does not match, nothing is written into &lt;code&gt;matches&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; is returned. &lt;code&gt;buf&lt;/code&gt; has length &lt;code&gt;bufSize&lt;/code&gt; (not necessarily &lt;code&gt;'\0'&lt;/code&gt; terminated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef72037c9be3955503da40cc7aba21244ff8f27" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;s&lt;/code&gt; matches the &lt;code&gt;pattern&lt;/code&gt; beginning from &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d8237ef53e2b17ae5cb13b0fe1340cdbb29f39" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;s[start..]&lt;/code&gt; matches the &lt;code&gt;pattern&lt;/code&gt; and the captured substrings in the array &lt;code&gt;matches&lt;/code&gt;. If it does not match, nothing is written into &lt;code&gt;matches&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fff72b4679913e64ac00743506d561226c097a" translate="yes" xml:space="preserve">
          <source>returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;s[start..]&lt;/code&gt; matches the &lt;code&gt;pattern&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6896286a9269fa5f11b7ac2357165e0b355a7f6" translate="yes" xml:space="preserve">
          <source>returns &lt;em&gt;a&lt;/em&gt; sorted by &lt;em&gt;cmp&lt;/em&gt; in the specified &lt;em&gt;order&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0911bc917b6abdfb2fb96bc8b8d9116620da66" translate="yes" xml:space="preserve">
          <source>returns &lt;em&gt;a&lt;/em&gt; with intensity &lt;em&gt;f&lt;/em&gt;. &lt;em&gt;f&lt;/em&gt; should be a float from 0.0 (completely dark) to 1.0 (full color intensity).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e904e3e8f68423de0e6a5ad9cb35100918a32f" translate="yes" xml:space="preserve">
          <source>returns &lt;em&gt;n&lt;/em&gt;'s kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970ebfedd0e6ed3f3ad0bac25449cfc197112d5f" translate="yes" xml:space="preserve">
          <source>returns &lt;em&gt;p&lt;/em&gt;'s process ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2610d0e83e129b3d7a6ffa345149f0b6d267d49" translate="yes" xml:space="preserve">
          <source>returns a helpful error message for the event &lt;code&gt;jsonError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa319b70cb7b4b490ea6a14eefd9cdb15f7c5794" translate="yes" xml:space="preserve">
          <source>returns a helpful error message for the event &lt;code&gt;sexpError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb738397d302d147d24758df210a44ec6c5c0f5" translate="yes" xml:space="preserve">
          <source>returns a helpful error message for the event &lt;code&gt;xmlError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bb92a042de31757d7f891af6afe88d587834d8" translate="yes" xml:space="preserve">
          <source>returns a new string of length &lt;code&gt;0&lt;/code&gt; but with capacity &lt;em&gt;cap&lt;/em&gt;.This procedure exists only for optimization purposes; the same effect can be achieved with the &lt;code&gt;&amp;amp;&lt;/code&gt; operator or with &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a164b72062eb254c86e0715faebaa552cb0851a" translate="yes" xml:space="preserve">
          <source>returns a new string of length &lt;code&gt;len&lt;/code&gt; but with uninitialized content. One needs to fill the string character after character with the index operator &lt;code&gt;s[i]&lt;/code&gt;. This procedure exists only for optimization purposes; the same effect can be achieved with the &lt;code&gt;&amp;amp;&lt;/code&gt; operator or with &lt;code&gt;add&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eccc7d877b9b2450af56fb5614d35103e8426d9c" translate="yes" xml:space="preserve">
          <source>returns a pointer to a mapped portion of MemFile &lt;em&gt;m&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e765e24df816bc77fcc0119353edb8fbc7fbf659" translate="yes" xml:space="preserve">
          <source>returns a properly formatted error message containing current line and column information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0f601b9f066664521d4ce3ea7363b67a615a2e" translate="yes" xml:space="preserve">
          <source>returns a properly formatted warning message containing current line and column information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf9931322ba8e25969ac9e598fb7b7ba24afedd" translate="yes" xml:space="preserve">
          <source>returns a properly formatted warning message containing that an entry is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05f6af126bd8e46d74fab5e76e3f1fb88ba1cb9" translate="yes" xml:space="preserve">
          <source>returns a random element from the openarray &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae77234d9c55b2f7c7bf8127b4094a7baecfe115" translate="yes" xml:space="preserve">
          <source>returns a random element from the openarray &lt;em&gt;a&lt;/em&gt;. &lt;strong&gt;Deprecated since version 0.18.0&lt;/strong&gt;. Use &lt;code&gt;rand&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9909af6f0157bca5a4f127008c8c63431bdffc9" translate="yes" xml:space="preserve">
          <source>returns a string representation of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa74dfa9cc59b4c47c568cf1e11f052b9b049de" translate="yes" xml:space="preserve">
          <source>returns all matching &lt;em&gt;substrings&lt;/em&gt; of &lt;code&gt;s&lt;/code&gt; that match &lt;code&gt;pattern&lt;/code&gt;. If it does not match, @[] is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1658f538171590195e380dbb14bad4444b2936d8" translate="yes" xml:space="preserve">
          <source>returns all matching &lt;em&gt;substrings&lt;/em&gt; of &lt;em&gt;s&lt;/em&gt; that match &lt;em&gt;pattern&lt;/em&gt;. If it does not match, @[] is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a2762ec14ac9dcfeab6b3d420712c9560e822a" translate="yes" xml:space="preserve">
          <source>returns an error message &quot;&amp;lt;tag&amp;gt; expected&quot; in the same format as the other error messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b206c6ba53996b211abfe30172662bceb7a7f512" translate="yes" xml:space="preserve">
          <source>returns an error message &quot;&lt;em&gt;e&lt;/em&gt; expected&quot; in the same format as the other error messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1987cf3f8a174597356e9fe82836c55ee732d85b" translate="yes" xml:space="preserve">
          <source>returns an error message with text &lt;em&gt;msg&lt;/em&gt; in the same format as the other error messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12661939dabe3188668677195e1d6889bfc95d05" translate="yes" xml:space="preserve">
          <source>returns base Any (useful for inherited object types).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73018bf53a3cb29d7538e74505cb2e6c76345184" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;CONTENT_LENGTH&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39981b08f84a2723d507e915b469a0825cf0cdb2" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;CONTENT_TYPE&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62595bbe7950897ee95e83fb098e741ed0f27ba3" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;DOCUMENT_ROOT&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684590f309991001ee85b383b7efe23ed1beb1aa" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;GATEWAY_INTERFACE&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9454b8ae6fef6ca58943c93fc697eebd076cfdcc" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;HTTP_ACCEPT&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b31b385a1486eeacaa024e083562a8ae22a89c" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;HTTP_ACCEPT_CHARSET&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f3b5c9c40149516eb06437ebff1fb18457bcc7" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;HTTP_ACCEPT_ENCODING&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c8977343556dd04c14fa7e2e2de0a0b9ec19e0" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;HTTP_ACCEPT_LANGUAGE&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bf4aad22ef25aac980d1db28bb961d99be1305" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;HTTP_CONNECTION&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdc90c47faf00983310fe3ae9b0089a9f1b7e8e" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;HTTP_COOKIE&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5775322b6cb9fb472eed6eaba7d8cfd0c1009685" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;HTTP_HOST&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2352bd5592850e22a364aeaa3da6bf84693c37f" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;HTTP_REFERER&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a08af2db8221ff33395b24f96233690ac92ca36" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;HTTP_USER_AGENT&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0002f8d4d3a469ffd50d429027a38c2252bbfe1" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;PATH_INFO&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66fa127e0ca504ae36ef2624b5947b33facf43a" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;PATH_TRANSLATED&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5fd452c2b50e7485bebc4edc32db2f4d1b5a65" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;QUERY_STRING&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3de0560cfe07932fae0dcec010431cf73fcd06" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;REMOTE_ADDR&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668fea6b6aea45ded404743335dca40a4e514ac2" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;REMOTE_HOST&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9466041fbaadaf3bb8bbf1ba62e009ba9334cc04" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;REMOTE_IDENT&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca1958e5a8c4713668c0379097cd89548749865" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;REMOTE_PORT&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de4938d69cd09c3c56fe1028ed60a70dbb629f3" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;REMOTE_USER&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a35ddddbdde921a0d26c2aa0716c7cc3e6c605" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;REQUEST_METHOD&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e6c57f7a0a95f27b0a2934ae6f903c427df728" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;REQUEST_URI&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04653b79d57e7cec3caf147ed675347f29920927" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;SCRIPT_FILENAME&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637178d8658bbd1ad1f7219b3ece3c9f1ed48f64" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;SCRIPT_NAME&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abca69beadd3284532839e193685847d9d0ff56b" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;SERVER_ADDR&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9149f6b6c8985e40fd3d4223e8e2924bc6fceb1" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;SERVER_ADMIN&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8e4e753bc4794a7fa1ae57431c415e9415f1b6" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;SERVER_NAME&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278457088ab9c54db2723b56ce68e5add609d1fe" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;SERVER_PORT&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d3facb26b6549740c175ae84473d62ea049cdf" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;SERVER_PROTOCOL&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85667c533f9210b11806df1b3d2c4df2bcdf2268" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;SERVER_SIGNATURE&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4df5fe661ad5d3b863e7577d53e0308d979b159" translate="yes" xml:space="preserve">
          <source>returns contents of the &lt;code&gt;SERVER_SOFTWARE&lt;/code&gt; environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ce858d39962ea79bc0da5d4f845f68180e60b3" translate="yes" xml:space="preserve">
          <source>returns number of columns in the row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcfa66fc24cdee89afddc108c5d53e31c97ba82" translate="yes" xml:space="preserve">
          <source>returns number of the processed rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f73b8ab497f9bd69f99160509abf2deca2c8837" translate="yes" xml:space="preserve">
          <source>returns text for given column of the row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9725506c04228fd6a533af714d2e7f4f468117" translate="yes" xml:space="preserve">
          <source>returns the (key,val)-pair with the largest &lt;em&gt;val&lt;/em&gt;. Efficiency: O(n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d8cc315d93d03a91f132237de73105506eb24c" translate="yes" xml:space="preserve">
          <source>returns the (key,val)-pair with the smallest &lt;em&gt;val&lt;/em&gt;. Efficiency: O(n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28940a991504561f8b2cc8216e0c89c684e7b9f4" translate="yes" xml:space="preserve">
          <source>returns the &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt;, where &lt;code&gt;buf&lt;/code&gt; has length &lt;code&gt;bufSize&lt;/code&gt; (not necessarily &lt;code&gt;'\0'&lt;/code&gt; terminated). If it does not match, &lt;code&gt;(-1,0)&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d9ba6b6499c3215161f42c68db748deb61a176" translate="yes" xml:space="preserve">
          <source>returns the &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt;. If it does not match, &lt;code&gt;(-1,0)&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0105f4f66775987f4741022aec50176207a6ffd1" translate="yes" xml:space="preserve">
          <source>returns the &lt;code&gt;y&lt;/code&gt;-th predecessor of the value &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;T&lt;/code&gt; has to be an ordinal type. If such a value does not exist, &lt;code&gt;EOutOfRange&lt;/code&gt; is raised or a compile time error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b72cfe17a31a9af868a4d0430a71929934ec60" translate="yes" xml:space="preserve">
          <source>returns the &lt;code&gt;y&lt;/code&gt;-th successor of the value &lt;code&gt;x&lt;/code&gt;. &lt;code&gt;T&lt;/code&gt; has to be an ordinal type. If such a value does not exist, &lt;code&gt;EOutOfRange&lt;/code&gt; is raised or a compile time error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0571e06401235d450faba4d6f10f36d0828ceaa3" translate="yes" xml:space="preserve">
          <source>returns the &lt;em&gt;i&lt;/em&gt;'th child of &lt;em&gt;n&lt;/em&gt; so that it can be modified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7780bbdbfd4416ac5e6e40f92a20012908c7a8ec" translate="yes" xml:space="preserve">
          <source>returns the &lt;em&gt;i&lt;/em&gt;'th child of &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc83153a9b0505288d26f97e6e66bc5f792d8816" translate="yes" xml:space="preserve">
          <source>returns the &lt;em&gt;kind&lt;/em&gt; of the node &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d356d43c3cc34a30d97a7b07f4cc96def3c09624" translate="yes" xml:space="preserve">
          <source>returns the &lt;em&gt;n&lt;/em&gt;'th predecessor of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca75c307a9ce7da32b44ede515043b395bcb26c4" translate="yes" xml:space="preserve">
          <source>returns the &lt;em&gt;n&lt;/em&gt;'th successor of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d561a4427f99b3a5647817738322db9b05c0b13a" translate="yes" xml:space="preserve">
          <source>returns the AST of the invocation expression that invoked this macro. &lt;strong&gt;Deprecated since version 0.18.1&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4748702191fc628047e692f37fd1d0891a9e8104" translate="yes" xml:space="preserve">
          <source>returns the OS file handle of the file &lt;code&gt;f&lt;/code&gt;. This is only useful for platform specific programming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce351d2edec7627e0a3262be6c338d9ae3c9968" translate="yes" xml:space="preserve">
          <source>returns the absolute value of &lt;em&gt;x&lt;/em&gt;. If &lt;em&gt;x&lt;/em&gt; is &lt;code&gt;low(x)&lt;/code&gt; (that is -MININT for its type), an overflow exception is thrown (if overflow checking is turned on).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced8836210022e5a5d373e884c67f0facb2e5474" translate="yes" xml:space="preserve">
          <source>returns the attribute key for the event &lt;code&gt;xmlAttribute&lt;/code&gt; Raises an assertion in debug mode if &lt;code&gt;my.kind&lt;/code&gt; is not &lt;code&gt;xmlAttribute&lt;/code&gt;. In release mode, this will not trigger an error but the value returned will not be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c75586bc8972193d048a0bfdad95eb5b9c1e0e7" translate="yes" xml:space="preserve">
          <source>returns the attribute value for the event &lt;code&gt;xmlAttribute&lt;/code&gt; Raises an assertion in debug mode if &lt;code&gt;my.kind&lt;/code&gt; is not &lt;code&gt;xmlAttribute&lt;/code&gt;. In release mode, this will not trigger an error but the value returned will not be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e6b762d755d31404ee40477a6b920f9e02910f" translate="yes" xml:space="preserve">
          <source>returns the bounds &lt;code&gt;[first..last]&lt;/code&gt; of the &lt;em&gt;i&lt;/em&gt;'th capture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3745d3fb85416e78e224b02db81ea50fe50a9af" translate="yes" xml:space="preserve">
          <source>returns the cardinality of the set &lt;code&gt;x&lt;/code&gt;, i.e. the number of elements in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935215821d31799c021d5a808bbb18c1fb65ed64" translate="yes" xml:space="preserve">
          <source>returns the character at position &lt;em&gt;i&lt;/em&gt; in the rope &lt;em&gt;r&lt;/em&gt;. This is quite expensive! Worst-case: O(n). If &lt;code&gt;i &amp;gt;= r.len&lt;/code&gt;, &lt;code&gt;\0&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c3df5b9a8215a547d1550aa858ccfe3ceb6da5" translate="yes" xml:space="preserve">
          <source>returns the character data for the events: &lt;code&gt;jsonInt&lt;/code&gt;, &lt;code&gt;jsonFloat&lt;/code&gt;, &lt;code&gt;jsonString&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2a32a11eecde02c8c124f726ec4fc582674554" translate="yes" xml:space="preserve">
          <source>returns the character data for the events: &lt;code&gt;sexpInt&lt;/code&gt;, &lt;code&gt;sexpFloat&lt;/code&gt;, &lt;code&gt;sexpString&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c53b4a80858ff887d75184ecc9bca3aaeea52a" translate="yes" xml:space="preserve">
          <source>returns the character data for the events: &lt;code&gt;xmlCharData&lt;/code&gt;, &lt;code&gt;xmlWhitespace&lt;/code&gt;, &lt;code&gt;xmlComment&lt;/code&gt;, &lt;code&gt;xmlCData&lt;/code&gt;, &lt;code&gt;xmlSpecial&lt;/code&gt; Raises an assertion in debug mode if &lt;code&gt;my.kind&lt;/code&gt; is not one of those events. In release mode, this will not trigger an error but the value returned will not be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b83646f8bade6d2e5bf1aa7d3daafc34407e0b" translate="yes" xml:space="preserve">
          <source>returns the current event type for the JSON parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73add03b787de176c352c9bb2cdef1f5b7b9df2d" translate="yes" xml:space="preserve">
          <source>returns the current event type for the SEXP parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7b5d37530cd9d9c65f654f2e722a9e388714e9" translate="yes" xml:space="preserve">
          <source>returns the current event type for the XML parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660e21edd2d896570ec20a509a60f650cfb448cb" translate="yes" xml:space="preserve">
          <source>returns the current number of messages in the channel &lt;em&gt;c&lt;/em&gt;. Returns -1 if the channel has been closed. &lt;strong&gt;Note&lt;/strong&gt;: This is dangerous to use as it encourages races. It's much better to use &lt;code&gt;tryRecv&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b05ecd46ce8cb003620d7d2a2db7fd0b86898e" translate="yes" xml:space="preserve">
          <source>returns the element name for the events: &lt;code&gt;xmlElementStart&lt;/code&gt;, &lt;code&gt;xmlElementEnd&lt;/code&gt;, &lt;code&gt;xmlElementOpen&lt;/code&gt; Raises an assertion in debug mode if &lt;code&gt;my.kind&lt;/code&gt; is not one of those events. In release mode, this will not trigger an error but the value returned will not be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ac7236a242853ffda158cf75d2c95af9f0c092" translate="yes" xml:space="preserve">
          <source>returns the element that is actually stored in 's' which has the same value as 'key' or raises the &lt;code&gt;KeyError&lt;/code&gt; exception. This is useful when one overloaded 'hash' and '==' but still needs reference semantics for sharing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c122b527e8e6c92c2f9ac88540fb2d3cfc3d2d02" translate="yes" xml:space="preserve">
          <source>returns the element that is actually stored in 's' which has the same value as 'key' or raises the &lt;code&gt;KeyError&lt;/code&gt; exception. This is useful when one overloaded 'hash' and '==' but still needs reference semantics for sharing. Use ```[]``` instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d9e912d2d4d64a7d0fe8e4bd3cef62f63a06b7" translate="yes" xml:space="preserve">
          <source>returns the entity name for the event: &lt;code&gt;xmlEntity&lt;/code&gt; Raises an assertion in debug mode if &lt;code&gt;my.kind&lt;/code&gt; is not &lt;code&gt;xmlEntity&lt;/code&gt;. In release mode, this will not trigger an error but the value returned will not be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e155fd4056f189f48a02d19b291bf6706961a6" translate="yes" xml:space="preserve">
          <source>returns the file size of &lt;em&gt;file&lt;/em&gt; (in bytes). An &lt;code&gt;OSError&lt;/code&gt; exception is raised in case of an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01f2ed6e1885b54b61375c94e0ee8b620bb6bed" translate="yes" xml:space="preserve">
          <source>returns the full file-system path of the current source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a04626b88e24ffdf7b2462f63a6d51baec0c8c8" translate="yes" xml:space="preserve">
          <source>returns the generated timestamp of the OID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435d8467dec209302a5de94128f60731c29a13e8" translate="yes" xml:space="preserve">
          <source>returns the highest possible index of an array, a sequence, a string or the highest possible value of an ordinal value &lt;em&gt;x&lt;/em&gt;. As a special semantic rule, &lt;em&gt;x&lt;/em&gt; may also be a type identifier. &lt;code&gt;high(int)&lt;/code&gt; is Nim's way of writing &lt;span id=&quot;int-max_1&quot;&gt;INT_MAX&lt;/span&gt; or &lt;span id=&quot;max-int_1&quot;&gt;MAX_INT&lt;/span&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39285ef2ec4ba6a2d150815412c6cbc002006714" translate="yes" xml:space="preserve">
          <source>returns the integer value that is used to represent &lt;em&gt;x&lt;/em&gt;'s value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb322eff6bcbe6012a918d883d1bc99d4df1e6f8" translate="yes" xml:space="preserve">
          <source>returns the internal int value of an ordinal value &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f75623606b4f3dcbe55b03a70e714ec7030536" translate="yes" xml:space="preserve">
          <source>returns the last item of &lt;em&gt;s&lt;/em&gt; and decreases &lt;code&gt;s.len&lt;/code&gt; by one. This treats &lt;em&gt;s&lt;/em&gt; as a stack and implements the common &lt;em&gt;pop&lt;/em&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc4da5ef88258e7ecd24dabc7627ed1d2581ce7" translate="yes" xml:space="preserve">
          <source>returns the length of a sequence or a string without testing for 'nil'. This is an optimization that rarely makes sense. &lt;strong&gt;Deprecated since version 0.18.1&lt;/strong&gt;. Use len() instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f855f6402367a300fab644e59040409ca9b4bc9" translate="yes" xml:space="preserve">
          <source>returns the length of an array, an openarray, a sequence or a string. This is roughly the same as &lt;code&gt;high(T)-low(T)+1&lt;/code&gt;, but its resulting type is always an int.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4584a1bccb1d7b6c20779b3512ffee9633b58781" translate="yes" xml:space="preserve">
          <source>returns the lowest possible index of an array, a sequence, a string or the lowest possible value of an ordinal value &lt;em&gt;x&lt;/em&gt;. As a special semantic rule, &lt;em&gt;x&lt;/em&gt; may also be a type identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9039dbd329d4bd0a999161e0b737e6629f8ab8" translate="yes" xml:space="preserve">
          <source>returns the number &lt;em&gt;n&lt;/em&gt;'s children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cfb142805e57a86a1b3cdacdb16b15fe42b2933" translate="yes" xml:space="preserve">
          <source>returns the number for the event: &lt;code&gt;jsonFloat&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e1489c52250bcf47235c88849401f7cae91afb" translate="yes" xml:space="preserve">
          <source>returns the number for the event: &lt;code&gt;jsonInt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b96953b32ecfd1725a30beea6aae08fb657af7" translate="yes" xml:space="preserve">
          <source>returns the number for the event: &lt;code&gt;sexpFloat&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391fc060dd94edbd3e3321ab324d2d4c51dc6ad3" translate="yes" xml:space="preserve">
          <source>returns the number for the event: &lt;code&gt;sexpInt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a113c8030b438c16237fc05c6f73729587b3dc4" translate="yes" xml:space="preserve">
          <source>returns the number of &lt;em&gt;n&lt;/em&gt;'s attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9682b578b01e962f3ca94060958c2b0cd7e27eb" translate="yes" xml:space="preserve">
          <source>returns the number of children of &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d2bddd7f350980a184f99f12e84b8ce88bba33" translate="yes" xml:space="preserve">
          <source>returns the number of elements in &lt;em&gt;c&lt;/em&gt; in O(1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78aacea069ddfa9721f260e4f8c5b215e68310b" translate="yes" xml:space="preserve">
          <source>returns the number of keys in &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bf582b1008a8d38f37c0567860cf5790728c79" translate="yes" xml:space="preserve">
          <source>returns the numer of the processors/cores the machine has. Returns 0 if it cannot be detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a608c008f00ce54d0285262162395ba72ac6fa" translate="yes" xml:space="preserve">
          <source>returns the port number as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0404e6424089cdbfbbca5e5a9ae5ac8bd203db5f" translate="yes" xml:space="preserve">
          <source>returns the position the node appears in the original source file in the form filename(line, col)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceffe994727d7139dd72b2b393bb9174e8e2f37d" translate="yes" xml:space="preserve">
          <source>returns the predecessor of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b494070b70fc229714c09e5618311b779ec5e9c1" translate="yes" xml:space="preserve">
          <source>returns the processing instruction name for the event &lt;code&gt;xmlPI&lt;/code&gt; Raises an assertion in debug mode if &lt;code&gt;my.kind&lt;/code&gt; is not &lt;code&gt;xmlPI&lt;/code&gt;. In release mode, this will not trigger an error but the value returned will not be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284bca6d3eeca3df1870c0e6f0803014132ce895" translate="yes" xml:space="preserve">
          <source>returns the rest of the processing instruction for the event &lt;code&gt;xmlPI&lt;/code&gt; Raises an assertion in debug mode if &lt;code&gt;my.kind&lt;/code&gt; is not &lt;code&gt;xmlPI&lt;/code&gt;. In release mode, this will not trigger an error but the value returned will not be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70c67046b1a54ca35b77de8ffb50cbdee616d02" translate="yes" xml:space="preserve">
          <source>returns the reverse of the array &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5bfc610cdce5c2c5c73fe6238a9dfce943be96a" translate="yes" xml:space="preserve">
          <source>returns the reverse of the array &lt;em&gt;a[first..last]&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8585197d5a0e43ea6db50d83d2cc30021d4b476e" translate="yes" xml:space="preserve">
          <source>returns the size of &lt;code&gt;x&lt;/code&gt; in bytes. Since this is a low-level proc, its usage is discouraged - using &lt;code&gt;new&lt;/code&gt; for the most cases suffices that one never needs to know &lt;code&gt;x&lt;/code&gt;'s size. As a special semantic rule, &lt;code&gt;x&lt;/code&gt; may also be a type identifier (&lt;code&gt;sizeof(int)&lt;/code&gt; is valid).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba6061218a6a22e2999030527b333a3abf3f90f" translate="yes" xml:space="preserve">
          <source>returns the size of &lt;em&gt;x&lt;/em&gt;'s basetype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c1c2009ba6331174a69aeb7ee385406c1fa0b6" translate="yes" xml:space="preserve">
          <source>returns the size of &lt;em&gt;x&lt;/em&gt;'s type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9929bd5cfcb16480e2b4960f6f4f1eaac6594028" translate="yes" xml:space="preserve">
          <source>returns the socket's associated port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e40298059670a3c0d2194012a8262255332092" translate="yes" xml:space="preserve">
          <source>returns the socket's domain (AF_INET or AF_INET6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95714fffe81b79c3f54f9e250bf68dcb368802ec" translate="yes" xml:space="preserve">
          <source>returns the socket's local address and port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc9afdd73a98044651cd98429ab28a53bd58bf3" translate="yes" xml:space="preserve">
          <source>returns the socket's peer address and port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cf67e651b04bcbdcaf3e9937a2f801d34ee44b" translate="yes" xml:space="preserve">
          <source>returns the starting position and end position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt; (where &lt;code&gt;buf&lt;/code&gt; has length &lt;code&gt;bufSize&lt;/code&gt; and is not necessarily &lt;code&gt;'\0'&lt;/code&gt; terminated), and the captured substrings in the array &lt;code&gt;matches&lt;/code&gt;. If it does not match, nothing is written into &lt;code&gt;matches&lt;/code&gt; and &lt;code&gt;(-1,0)&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada5c98975b0092c5681a6adcefb8bce0f420501" translate="yes" xml:space="preserve">
          <source>returns the starting position and end position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; and the captured substrings in the array &lt;code&gt;matches&lt;/code&gt;. If it does not match, nothing is written into &lt;code&gt;matches&lt;/code&gt; and (-1,0) is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb753a3565d0ea893033f75e4b8bced9fa15aa6" translate="yes" xml:space="preserve">
          <source>returns the starting position and end position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; and the captured substrings in the array &lt;code&gt;matches&lt;/code&gt;. If it does not match, nothing is written into &lt;code&gt;matches&lt;/code&gt; and &lt;code&gt;(-1,0)&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485718d2e6a7a04354cf5afd856d2ac92db8ed3f" translate="yes" xml:space="preserve">
          <source>returns the starting position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt; and the captured substrings in the array &lt;code&gt;matches&lt;/code&gt;. If it does not match, nothing is written into &lt;code&gt;matches&lt;/code&gt; and &lt;code&gt;-1&lt;/code&gt; is returned. &lt;code&gt;buf&lt;/code&gt; has length &lt;code&gt;bufSize&lt;/code&gt; (not necessarily &lt;code&gt;'\0'&lt;/code&gt; terminated).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49b9483c6d94913e1889ddef6ac519a551c59b8" translate="yes" xml:space="preserve">
          <source>returns the starting position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt;, where &lt;code&gt;buf&lt;/code&gt; has length &lt;code&gt;bufSize&lt;/code&gt; (not necessarily &lt;code&gt;'\0'&lt;/code&gt; terminated). If it does not match, &lt;code&gt;-1&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ea8dd813259de00d2f75a3bec78b26e5a5bf86" translate="yes" xml:space="preserve">
          <source>returns the starting position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; and the captured substrings in the array &lt;code&gt;matches&lt;/code&gt;. If it does not match, nothing is written into &lt;code&gt;matches&lt;/code&gt; and -1 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52c3aa9844b2e16df77877cb8c09af64405af84" translate="yes" xml:space="preserve">
          <source>returns the starting position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt; and the captured substrings in the array &lt;code&gt;matches&lt;/code&gt;. If it does not match, nothing is written into &lt;code&gt;matches&lt;/code&gt; and &lt;code&gt;-1&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5fe5c22884e0a7190b431015860fbfd28fd6d2" translate="yes" xml:space="preserve">
          <source>returns the starting position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt;. If it does not match, -1 is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8f80820297651eb042102f0095103cc62b8259" translate="yes" xml:space="preserve">
          <source>returns the starting position of &lt;code&gt;pattern&lt;/code&gt; in &lt;code&gt;s&lt;/code&gt;. If it does not match, &lt;code&gt;-1&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a0162c02b5e493f08a348c8d57cfd7248f2a15" translate="yes" xml:space="preserve">
          <source>returns the successor of &lt;em&gt;x&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa679c902542ab323cd055a3737c747650e9a1e" translate="yes" xml:space="preserve">
          <source>returns the thread handle of &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad339a0920cf71540140d273e4448af130efa7cd" translate="yes" xml:space="preserve">
          <source>returns the underlying 'data' string by reference. This is only used for speed hacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffd2a813e95aee7c3b232d4241a814e3d7352de" translate="yes" xml:space="preserve">
          <source>returns the underlying 'tag' string by reference. This is only used for speed hacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd91e15a1e1fe44fbefd9ea220ec2b7f2894d03c" translate="yes" xml:space="preserve">
          <source>returns the underlying 'text' string by reference. This is only used for speed hacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169b58a5a049e7ebf2c5d6d1632c867612a6eeed" translate="yes" xml:space="preserve">
          <source>returns the underlying second 'data' string by reference. This is only used for speed hacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fefd98b4084f4307aece15174a745590e97714d" translate="yes" xml:space="preserve">
          <source>returns true if &lt;em&gt;name&lt;/em&gt; is a known color name or a hexadecimal color prefixed with &lt;code&gt;#&lt;/code&gt;. Case insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79b2db67331b36a8b174159cd48097ba5318c38" translate="yes" xml:space="preserve">
          <source>returns true if &lt;em&gt;s&lt;/em&gt; contains &lt;em&gt;key&lt;/em&gt;, otherwise &lt;em&gt;key&lt;/em&gt; is included in &lt;em&gt;s&lt;/em&gt; and false is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cf1bed5472d5ecf38cbbaf5f32e0d5d1c6ad6a" translate="yes" xml:space="preserve">
          <source>returns true if &lt;em&gt;s&lt;/em&gt; does not contain &lt;em&gt;key&lt;/em&gt;, otherwise &lt;em&gt;key&lt;/em&gt; is removed from &lt;em&gt;s&lt;/em&gt; and false is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8abf511443739bdcf303ce6d3d0dda58d863073" translate="yes" xml:space="preserve">
          <source>returns true if &lt;em&gt;s&lt;/em&gt; ends with the pattern &lt;em&gt;prefix&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a4d069614cabbfd5547ed9f245375eccda461c" translate="yes" xml:space="preserve">
          <source>returns true if &lt;em&gt;s&lt;/em&gt; ends with the pattern &lt;em&gt;suffix&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fc0eb3dfb22ea0250340ac030c588022c40afb" translate="yes" xml:space="preserve">
          <source>returns true if &lt;em&gt;s&lt;/em&gt; is empty. This is safe to call even before the set has been initialized with &lt;em&gt;initIntSet&lt;/em&gt;. Note this never worked reliably and so is deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dba221232c43d2130bd8b5dc9ee41e77fe598a2" translate="yes" xml:space="preserve">
          <source>returns true if &lt;em&gt;s&lt;/em&gt; seems to be a valid e-mail address. The checking also uses a domain list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e7c6861d3eb5e4321f910a35c835bc30e6b9a7" translate="yes" xml:space="preserve">
          <source>returns true if &lt;em&gt;s&lt;/em&gt; starts with the pattern &lt;em&gt;prefix&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2bdd7a7322d873881f7deed2e3d8510dedbe683" translate="yes" xml:space="preserve">
          <source>returns true if &lt;em&gt;t&lt;/em&gt; is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c682ab3b45a0839fb50adea6ef3cdcaf465a4d" translate="yes" xml:space="preserve">
          <source>returns true if URI is absolute, false otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290cc009ee56df358e492889112ab52d5e36c606" translate="yes" xml:space="preserve">
          <source>returns true if the contents of the file &lt;em&gt;f&lt;/em&gt; equal &lt;em&gt;r&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0ee3689ff3c4696a17282a2dbf49470c71a7a0" translate="yes" xml:space="preserve">
          <source>returns true if the contents of the file &lt;em&gt;f&lt;/em&gt; equal &lt;em&gt;r&lt;/em&gt;. If &lt;em&gt;f&lt;/em&gt; does not exist, false is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee687f1463b38ab3c246f9907399f820b4ee06c" translate="yes" xml:space="preserve">
          <source>returns true iff &lt;em&gt;c&lt;/em&gt; contains the given &lt;em&gt;key&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a3eb32ef54e6190adf81f2c8b806d1673127b6" translate="yes" xml:space="preserve">
          <source>returns true iff &lt;em&gt;c&lt;/em&gt; contains the given &lt;em&gt;key&lt;/em&gt;. If the key does not exist &lt;code&gt;c[key] = val&lt;/code&gt; is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c62a32c7e6cbd02495ff3358d750b413292393c" translate="yes" xml:space="preserve">
          <source>returns true iff &lt;em&gt;c&lt;/em&gt; contains the given &lt;em&gt;key&lt;/em&gt;. If the key does not exist it is inserted into &lt;em&gt;c&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bc5df387a8b59ed7ac21cd3143841ea1e7808e" translate="yes" xml:space="preserve">
          <source>returns true iff &lt;em&gt;key&lt;/em&gt; is in &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f73e51560243fc62c1682620534feca45749b8" translate="yes" xml:space="preserve">
          <source>returns true iff &lt;em&gt;key&lt;/em&gt; is in the table &lt;em&gt;t&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9158f4fcb7021b41415f5ac8d0a82c52ce72dbd9" translate="yes" xml:space="preserve">
          <source>returns true iff &lt;em&gt;key&lt;/em&gt; is in the table, otherwise inserts &lt;em&gt;val&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b9fe116454a3ee7b23df8c5dd7ffeb9f8aa3e9" translate="yes" xml:space="preserve">
          <source>returns true iff &lt;em&gt;key&lt;/em&gt; is in the table, otherwise inserts &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43545bba46c2be90c09088f66146b911d7c6619c" translate="yes" xml:space="preserve">
          <source>returns true iff some thread is waiting on the channel &lt;em&gt;c&lt;/em&gt; for new messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323f350f9ff3c72209607176054585f99254db3a" translate="yes" xml:space="preserve">
          <source>returns which message class &lt;em&gt;k&lt;/em&gt; belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b86321a70bc2c31becb3cd4885a5959570f0e5" translate="yes" xml:space="preserve">
          <source>reverse and reversed in algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bd11a0a5b1e7bea96ba36018c28d5e6cf008fc" translate="yes" xml:space="preserve">
          <source>reverses &lt;code&gt;type T = distinct A&lt;/code&gt;; works recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393a965cd2a56873265d53a5640001aa66b8b1e0" translate="yes" xml:space="preserve">
          <source>reverses the array &lt;code&gt;a[first..last]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ec8f81242b3d6b15aa9fff8c8c583fbbabed26" translate="yes" xml:space="preserve">
          <source>reverses the array &lt;em&gt;a&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011c24752ce4cc901f0880f849dce41d379c3f7d" translate="yes" xml:space="preserve">
          <source>rlocks</source>
          <target state="translated">rlocks</target>
        </trans-unit>
        <trans-unit id="87cdb5c914378b05aae5d2c60d452c503d044931" translate="yes" xml:space="preserve">
          <source>ropes</source>
          <target state="translated">ropes</target>
        </trans-unit>
        <trans-unit id="8959f9aaa8eed3747ca59e5419c50b14e3123c81" translate="yes" xml:space="preserve">
          <source>ropes.$</source>
          <target state="translated">ropes.$</target>
        </trans-unit>
        <trans-unit id="dc939c5dd04e833e1ea72f7a4692ffec609c975f" translate="yes" xml:space="preserve">
          <source>ropes.%</source>
          <target state="translated">ropes.%</target>
        </trans-unit>
        <trans-unit id="1765f5fa6037781ec98c694771933974a72f6195" translate="yes" xml:space="preserve">
          <source>ropes.Rope</source>
          <target state="translated">ropes.Rope</target>
        </trans-unit>
        <trans-unit id="0379a7dd6b17b08eace30ddc5362745ab1416bd3" translate="yes" xml:space="preserve">
          <source>ropes.[]</source>
          <target state="translated">ropes.[]</target>
        </trans-unit>
        <trans-unit id="d8dbc9d697573a7708b1a8b1fd8bd3f17b1634ff" translate="yes" xml:space="preserve">
          <source>rotate and rotated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c6e99c2d710d08b7e488e26b74c2d1354ff2f5" translate="yes" xml:space="preserve">
          <source>round to nearest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeab28b7efb3744f77eaa38897814c1d88c8e81d" translate="yes" xml:space="preserve">
          <source>round toward +Inf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17aac012c106a5a8ff7e571900302a3b8536f225" translate="yes" xml:space="preserve">
          <source>round toward -Inf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd875b5f65f7f1ec9dff372928b28878cbc2d39" translate="yes" xml:space="preserve">
          <source>round toward 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1164910e43eb8f71203dc5320f345c9041394941" translate="yes" xml:space="preserve">
          <source>rst</source>
          <target state="translated">rst</target>
        </trans-unit>
        <trans-unit id="deb45d6bb2bba6017cf91a81cf58e45b8a2c96d3" translate="yes" xml:space="preserve">
          <source>rst2html</source>
          <target state="translated">rst2html</target>
        </trans-unit>
        <trans-unit id="3589ee17e60adf0258fc3fbcbad552e67390849b" translate="yes" xml:space="preserve">
          <source>rst2tex</source>
          <target state="translated">rst2tex</target>
        </trans-unit>
        <trans-unit id="855c72a904d640d641d6c0182a1a93a735d0ac43" translate="yes" xml:space="preserve">
          <source>rstast</source>
          <target state="translated">rstast</target>
        </trans-unit>
        <trans-unit id="62231fcbedabff1d2ab7426d062e11f706f29a7f" translate="yes" xml:space="preserve">
          <source>rstgen</source>
          <target state="translated">rstgen</target>
        </trans-unit>
        <trans-unit id="24ef7ac0cb5c24f03233965542c58dff9ecbab3c" translate="yes" xml:space="preserve">
          <source>rtarrays</source>
          <target state="translated">rtarrays</target>
        </trans-unit>
        <trans-unit id="df6ad19037c97987c4ff9792810c0e145356717c" translate="yes" xml:space="preserve">
          <source>run</source>
          <target state="translated">run</target>
        </trans-unit>
        <trans-unit id="24ac2513ed9772dd0247cbce97157eef5827326e" translate="yes" xml:space="preserve">
          <source>run a Nimscript file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9280940f904474cfdcb23c9a84171301d644021" translate="yes" xml:space="preserve">
          <source>run the compiled program with given arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28b6698a69260b1fec0ba16a64e14754708d58c" translate="yes" xml:space="preserve">
          <source>run the project (with Tiny C backend; buggy!)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11adf9c35693cc6f67a31b12737d07aa527a4984" translate="yes" xml:space="preserve">
          <source>runs the query (typically &quot;UPDATE&quot;) and returns the number of affected rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8795b11dcf36c5b4c3464b97e4b0b5cade140bc" translate="yes" xml:space="preserve">
          <source>safe alternative to &lt;code&gt;send&lt;/code&gt;. Does not raise an EOS when an error occurs, and instead returns &lt;code&gt;false&lt;/code&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cfe7812a80e96693631744d6dd2062e68f0655" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;'*'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676c6190eea15a2b8e76ad939e242021460417cf" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;A = A + {elem}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea98b139cc23ed302bda33d4ce14aef338263de2" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;A = A - {elem}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a98f7332a3126bcc108eaddeeb26e8299a52ffc" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;[^a-zA-Z]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0016204ea4785a4e032aa4fecfb7d07615b6df7b" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;[a-zA-Z]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e377b243e2af5d6bf7f86ad3dc34e568e7d9b29" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;[a-zA-Z_][a-zA-z_0-9]*&lt;/code&gt;; standard identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7739082bdd8b36c3953f173d1589655412348847" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;\d+&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea73be16aa701c10777069198b9fb4cee4dc896b" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;assert&lt;/code&gt; but is always turned on regardless of &lt;code&gt;--assertions&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a108b43e6bfb6599fcef996367d35aeed003ca7c" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;find(s, pattern, matches, start) &amp;gt;= 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d027328958cbd18520adaae376047a1b84ff8c" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;find(s, pattern, start) &amp;gt;= 0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba302a50d2c075d5aa0b6e36a576a656aa082a06" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;result.add(escape(s))&lt;/code&gt;, but more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae850a9b28bd4baead35bce044a52ad44f9c9c1" translate="yes" xml:space="preserve">
          <source>same as &lt;code&gt;rotateLeft&lt;/code&gt;, just with the difference that it does not modify the argument. It creates a new &lt;code&gt;seq&lt;/code&gt; instead</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b687af2124a9067323eef37696baba9156eee1" translate="yes" xml:space="preserve">
          <source>same as &lt;em&gt;FastRows&lt;/em&gt;, but slower and safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ce03ba7573b614464cfa37cb168b1558dae319" translate="yes" xml:space="preserve">
          <source>same as &lt;em&gt;fastRows&lt;/em&gt;, but slower and safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927342af9501f2d6d5bc8d189892d36c9568499f" translate="yes" xml:space="preserve">
          <source>same as &lt;em&gt;skip&lt;/em&gt; but case is ignored for token matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32141799fec8f618c84f97973dd78ec9affa450c" translate="yes" xml:space="preserve">
          <source>same as fastRows but returns a handle that can be used to get column text on demand using []. Returned handle is valid only within iterator body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88caf073ea06aea1d1ce872f3ed4d53ecbcb921d" translate="yes" xml:space="preserve">
          <source>same as fastRows but returns a handle that can be used to get column text on demand using []. Returned handle is valid only within the iterator body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5407cdabe8c339230f6dc591182b5c4b797cf0b2" translate="yes" xml:space="preserve">
          <source>same as the other &lt;em&gt;open&lt;/em&gt; but creates the file stream for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3df694413299cc4898da24d34be4fc60018ebe8" translate="yes" xml:space="preserve">
          <source>sample.nim:</source>
          <target state="translated">sample.nim:</target>
        </trans-unit>
        <trans-unit id="77a87e808ca7b036a47b5242064a46edf6a34afa" translate="yes" xml:space="preserve">
          <source>scgi</source>
          <target state="translated">scgi</target>
        </trans-unit>
        <trans-unit id="45ddd3ad2082f89463df58c581b667b2c34bfbd1" translate="yes" xml:space="preserve">
          <source>searches in the list for a value. Returns false if the value does not exist, true otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e7e99faaa46230b4d52e6186e483afac7fe9cb" translate="yes" xml:space="preserve">
          <source>searches in the list for a value. Returns nil if the value does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa3971043a832999d18907886f117384ffb7882" translate="yes" xml:space="preserve">
          <source>second argument to &lt;em&gt;socket&lt;/em&gt; proc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e3d4900b7d6586ff55e0bd7f912c380285f722" translate="yes" xml:space="preserve">
          <source>see the documentation of &lt;em&gt;GC_ref&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c8ffa1e213935bc6739acc17a1533de6bfaebd" translate="yes" xml:space="preserve">
          <source>segfaults</source>
          <target state="translated">segfaults</target>
        </trans-unit>
        <trans-unit id="e1aea7669637a7a39c8f658555ac877cd9ffa95d" translate="yes" xml:space="preserve">
          <source>select the GC to use; default is 'refc'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4526367997387b37f294cb80e8d570d377c93185" translate="yes" xml:space="preserve">
          <source>selectors</source>
          <target state="translated">selectors</target>
        </trans-unit>
        <trans-unit id="2e05397f5456f651a3bbe7b4ee0d1e268e835450" translate="yes" xml:space="preserve">
          <source>semantic checking of pragmas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfb54321396a6604566394574cf8dc03e333ee7" translate="yes" xml:space="preserve">
          <source>semexprs</source>
          <target state="translated">semexprs</target>
        </trans-unit>
        <trans-unit id="59e37becc66b7cd88f8a16fadedfe63321efeea3" translate="yes" xml:space="preserve">
          <source>semfold</source>
          <target state="translated">semfold</target>
        </trans-unit>
        <trans-unit id="1cee9ecfff9b1495b38fe47d9b28a1d36e3a3e33" translate="yes" xml:space="preserve">
          <source>seminst</source>
          <target state="translated">seminst</target>
        </trans-unit>
        <trans-unit id="35487d815e5ff94c86c8e16c19c24189cb3af028" translate="yes" xml:space="preserve">
          <source>semstmts</source>
          <target state="translated">semstmts</target>
        </trans-unit>
        <trans-unit id="9ff13fd5c5b4b1745eb4dbe67a211780fc6533f8" translate="yes" xml:space="preserve">
          <source>semthreads</source>
          <target state="translated">semthreads</target>
        </trans-unit>
        <trans-unit id="b5f60aa99f4efeafef717c96e38ec917e26edad0" translate="yes" xml:space="preserve">
          <source>semtypes</source>
          <target state="translated">semtypes</target>
        </trans-unit>
        <trans-unit id="29f4b6f261ba69767b1eb60d81fec7aed5403826" translate="yes" xml:space="preserve">
          <source>sends a message to a thread. &lt;em&gt;msg&lt;/em&gt; is deeply copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e2ea54ce0b1605ca0411c109621ca4c32d46bf" translate="yes" xml:space="preserve">
          <source>sends a signal to the condition variable &lt;em&gt;cond&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dfb3e6b65afa8c465cad3b21f2e9f46e69427a" translate="yes" xml:space="preserve">
          <source>sends data to a non-blocking socket. Returns &lt;code&gt;0&lt;/code&gt; if no data could be sent, if data has been sent returns the amount of bytes of &lt;code&gt;data&lt;/code&gt; that was successfully sent. This number may not always be the length of &lt;code&gt;data&lt;/code&gt; but typically is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755ffd4794463eecd029ad86ded308d87d274f84" translate="yes" xml:space="preserve">
          <source>sends data to a socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd58a0a9909dac9025aa4058c637eb2180ed953f" translate="yes" xml:space="preserve">
          <source>sends the following string to the socket &lt;em&gt;c&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9162e8705ede492c514e765f7ed3474d85922ff4" translate="yes" xml:space="preserve">
          <source>sep</source>
          <target state="translated">sep</target>
        </trans-unit>
        <trans-unit id="485b382c16a0bf707bad0f2165faa86f1f884e16" translate="yes" xml:space="preserve">
          <source>separator</source>
          <target state="translated">separator</target>
        </trans-unit>
        <trans-unit id="2a6afef2f0e7b34223e75d667dc5e0c85a82a250" translate="yes" xml:space="preserve">
          <source>seq[int].genericHead will be just seq seq[int].genericHead[float] will be seq[float]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92504616ed595e2ebebfc30b60415ae110ad83b7" translate="yes" xml:space="preserve">
          <source>sequence</source>
          <target state="translated">sequence</target>
        </trans-unit>
        <trans-unit id="b74336bf27a18ebff6400519a0d05147be64255f" translate="yes" xml:space="preserve">
          <source>sequtils</source>
          <target state="translated">sequtils</target>
        </trans-unit>
        <trans-unit id="4ac6964fdc8baa6b615e7cb0a71f53ff82a3d2e6" translate="yes" xml:space="preserve">
          <source>server takes longer than specified an ETimeout exception will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be8296fec2052c87f4f6cc864a6726998e0b9fa" translate="yes" xml:space="preserve">
          <source>server takes longer than specified an ETimeout exception will be raised. | The optional &lt;code&gt;multipart&lt;/code&gt; parameter can be used to create &lt;code&gt;multipart/form-data&lt;/code&gt; POSTs comfortably.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6176c41b13b26185f1683c7bae2044cd244f65fb" translate="yes" xml:space="preserve">
          <source>set &lt;em&gt;n&lt;/em&gt;'s &lt;em&gt;i&lt;/em&gt;'th child to &lt;em&gt;child&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a34c13c407fafcf8a97b30d595e69634e3b056" translate="yes" xml:space="preserve">
          <source>set Nim's verbosity level (1 is default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe621be92a95bbfc201fc2aea2bec7fc8a9c95b" translate="yes" xml:space="preserve">
          <source>set an environment variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf34177366d6fb489fb91aa1327730cb6ccb823" translate="yes" xml:space="preserve">
          <source>set equality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad77cb7bf810a10f10d06a7195c214cf6b8bbcf" translate="yes" xml:space="preserve">
          <source>set membership (A contains element e)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88832366e2d3fdd8e37c78c96b4c79d99b9188d3" translate="yes" xml:space="preserve">
          <source>set the output filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e824307a3c13517f8323b61018f52a657e9e3e4e" translate="yes" xml:space="preserve">
          <source>set the path used for generated files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd52f60950e2eefa0e91b4f3095aaf1059aa424" translate="yes" xml:space="preserve">
          <source>set the system library path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029dca52046b48b0c047c3436e5f4536806ca844" translate="yes" xml:space="preserve">
          <source>set the target operating system (cross-compilation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f486ef8b6164aeda08dc2e63683621b71d428644" translate="yes" xml:space="preserve">
          <source>set the target processor (cross-compilation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1559ed1486d3db9ad954b65ce63f5548bde34350" translate="yes" xml:space="preserve">
          <source>set this variable to provide a procedure that should be called in case of an &lt;span id=&quot;out-of-memory_1&quot;&gt;out of memory&lt;/span&gt; event. The standard handler writes an error message and terminates the program. &lt;em&gt;outOfMemHook&lt;/em&gt; can be used to raise an exception in case of OOM like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c822010fb777a0f5cd6a7e4c9f79fa6a3663f7" translate="yes" xml:space="preserve">
          <source>sets</source>
          <target state="translated">sets</target>
        </trans-unit>
        <trans-unit id="b2e7a683a584acaae7fedd4ed1d75a93704653e9" translate="yes" xml:space="preserve">
          <source>sets a field of &lt;em&gt;x&lt;/em&gt;; &lt;em&gt;x&lt;/em&gt; represents an object or a tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd4767b9f5d9dabebb297bb5d499ba95d4b95bb" translate="yes" xml:space="preserve">
          <source>sets the associated text with the node &lt;em&gt;n&lt;/em&gt;. &lt;em&gt;n&lt;/em&gt; can be a CDATA, Text, comment, or entity node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c719a4a689a6bc7dc2c3bd871c5f068944d5a0" translate="yes" xml:space="preserve">
          <source>sets the attributes belonging to &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685b943adefa2d920e89cf1752d4da1bd32d88c0" translate="yes" xml:space="preserve">
          <source>sets the client data of &lt;em&gt;n&lt;/em&gt;. The client data field is used by the HTML parser and generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057c21406994b8542f706c1a9aa8024531856322" translate="yes" xml:space="preserve">
          <source>sets the current exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8a8c539e2eb5a74ed1804d41f57d2426ce1b97" translate="yes" xml:space="preserve">
          <source>sets the encoding of a database connection, returns true for success, false for failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb93cb3d265c96195496b437ad01b57d3d5e11e2" translate="yes" xml:space="preserve">
          <source>sets the file permissions for &lt;em&gt;filename&lt;/em&gt;. &lt;em&gt;OSError&lt;/em&gt; is raised in case of an error. On Windows, only the &lt;code&gt;readonly&lt;/code&gt; flag is changed, depending on &lt;code&gt;fpUserWrite&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16da2bb7c55233eda56441440d53f4581894b7bc" translate="yes" xml:space="preserve">
          <source>sets the float value of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent some float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f768447eb6525715807701948fa830ac4b8ed8" translate="yes" xml:space="preserve">
          <source>sets the integer value of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent some integer, a bool, a char, an enum or a small enough bit set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67edfb9f2f3e3defa1f04590c2de2dab7f4d7762" translate="yes" xml:space="preserve">
          <source>sets the length of &lt;em&gt;s&lt;/em&gt; to &lt;em&gt;newlen&lt;/em&gt;. &lt;code&gt;T&lt;/code&gt; may be any sequence type. If the current length is greater than the new length, &lt;code&gt;s&lt;/code&gt; will be truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7393ad8b947221c5689d5c9d99d32ee8f5f05fb4" translate="yes" xml:space="preserve">
          <source>sets the length of &lt;em&gt;s&lt;/em&gt; to &lt;em&gt;newlen&lt;/em&gt;. If the current length is greater than the new length, &lt;code&gt;s&lt;/code&gt; will be truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d681658716d4076cd91c86ea804e5c4155db36" translate="yes" xml:space="preserve">
          <source>sets the maximal thread pool size. The default value of this is &lt;code&gt;MaxThreadPoolSize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2542bc8845fcb224815da2a2b86fe9a3b7183e" translate="yes" xml:space="preserve">
          <source>sets the minimal thread pool size. The default value of this is 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8692a159fc1dc02e9ce65b7a5600e950ef93868d" translate="yes" xml:space="preserve">
          <source>sets the pointer value of &lt;em&gt;x&lt;/em&gt;. &lt;code&gt;x&lt;/code&gt; needs to be of kind &lt;code&gt;akString&lt;/code&gt;, &lt;code&gt;akCString&lt;/code&gt;, &lt;code&gt;akProc&lt;/code&gt;, &lt;code&gt;akRef&lt;/code&gt;, &lt;code&gt;akPtr&lt;/code&gt;, &lt;code&gt;akPointer&lt;/code&gt;, &lt;code&gt;akSequence&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beab44a0587496bc54974a133de3041ffd2db7bf" translate="yes" xml:space="preserve">
          <source>sets the position &lt;em&gt;pos&lt;/em&gt; of the stream &lt;em&gt;s&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f03da1de0d7e28868afe46d2e2d8b5d99b49131" translate="yes" xml:space="preserve">
          <source>sets the position of the file pointer that is used for read/write operations. The file's first byte has the index zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec6d5657772bc55afec538c6dc2697d28b30242" translate="yes" xml:space="preserve">
          <source>sets the string value of &lt;em&gt;x&lt;/em&gt;. &lt;em&gt;x&lt;/em&gt; needs to represent a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c9ebb8e038222a56af0131b41fa3eca97c85ed" translate="yes" xml:space="preserve">
          <source>sets the tag name of &lt;em&gt;n&lt;/em&gt;. &lt;em&gt;n&lt;/em&gt; has to be an &lt;code&gt;xnElement&lt;/code&gt; node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc75a3f9be4b32ccc124879ddedefd2681d43fb" translate="yes" xml:space="preserve">
          <source>sets the unsigned integer value of &lt;em&gt;c&lt;/em&gt;. &lt;em&gt;c&lt;/em&gt; needs to represent an unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0595ef31ce4f70cdd56e0736e3cdfb1362a7f1bc" translate="yes" xml:space="preserve">
          <source>sets.$</source>
          <target state="translated">sets.$</target>
        </trans-unit>
        <trans-unit id="fb7bd27b5f713c0458139c03213301789b5d8611" translate="yes" xml:space="preserve">
          <source>sets.&amp;lt;</source>
          <target state="translated">sets.&amp;lt;</target>
        </trans-unit>
        <trans-unit id="7eed464d858828d5fbe0a81c3cb934324e6e3d87" translate="yes" xml:space="preserve">
          <source>sets.*</source>
          <target state="translated">sets.*</target>
        </trans-unit>
        <trans-unit id="163ad7002dcf5a7e1a08f3bda8e811974d11b410" translate="yes" xml:space="preserve">
          <source>sets.+</source>
          <target state="translated">sets.+</target>
        </trans-unit>
        <trans-unit id="e833f16abb64dd94c11f381f1c14996e352211fa" translate="yes" xml:space="preserve">
          <source>sets.-</source>
          <target state="translated">sets.-</target>
        </trans-unit>
        <trans-unit id="a748d2d869ce2f689ff0c616ac463a905692d354" translate="yes" xml:space="preserve">
          <source>sets.-+-</source>
          <target state="translated">sets.-+-</target>
        </trans-unit>
        <trans-unit id="25b8155b934dc64cee3b8152d6c24838e7cca0e0" translate="yes" xml:space="preserve">
          <source>sets.==</source>
          <target state="translated">sets.==</target>
        </trans-unit>
        <trans-unit id="64838b4ed4d6c7c2df495353f1e9972cc2d9de10" translate="yes" xml:space="preserve">
          <source>sets.[]</source>
          <target state="translated">sets.[]</target>
        </trans-unit>
        <trans-unit id="cc1a2597debc939b6d64386b504515a07903174c" translate="yes" xml:space="preserve">
          <source>setsockopt for integer options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7737ddc5068a4990fefce29ebe594c7f7f47b6" translate="yes" xml:space="preserve">
          <source>sexp</source>
          <target state="translated">sexp</target>
        </trans-unit>
        <trans-unit id="8fbc3cdda972e5f48d8677715668fcb7212660ad" translate="yes" xml:space="preserve">
          <source>sexp.$</source>
          <target state="translated">sexp.$</target>
        </trans-unit>
        <trans-unit id="fb2fb4659ab77e128b891692809aad6e87120a94" translate="yes" xml:space="preserve">
          <source>sexp.==</source>
          <target state="translated">sexp.==</target>
        </trans-unit>
        <trans-unit id="06f00f2b337b51a52212d75730008dcd43b9b0fe" translate="yes" xml:space="preserve">
          <source>sexp.[]</source>
          <target state="translated">sexp.[]</target>
        </trans-unit>
        <trans-unit id="415ab40ae9b7cc4e66d6769cb2c08106e8293b48" translate="yes" xml:space="preserve">
          <source>sha1</source>
          <target state="translated">sha1</target>
        </trans-unit>
        <trans-unit id="f62da64cb9e7d09013416b891e154509e8767b7d" translate="yes" xml:space="preserve">
          <source>sha1.$</source>
          <target state="translated">sha1.$</target>
        </trans-unit>
        <trans-unit id="aa10bea5492b2ade1dbd009e65b8f253850ab5d0" translate="yes" xml:space="preserve">
          <source>sha1.==</source>
          <target state="translated">sha1.==</target>
        </trans-unit>
        <trans-unit id="a681cb770fd3342d1715ae90c8eba619d8e5150d" translate="yes" xml:space="preserve">
          <source>shallow pragma</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1f39c0391941c48e246d877962f9e43a266441" translate="yes" xml:space="preserve">
          <source>sharedlist</source>
          <target state="translated">sharedlist</target>
        </trans-unit>
        <trans-unit id="c7b2141ebd5537f7464f288fa70b429bd72e16dd" translate="yes" xml:space="preserve">
          <source>sharedtables</source>
          <target state="translated">sharedtables</target>
        </trans-unit>
        <trans-unit id="fc314bcf4eeb299c4452e94988e9377c4b9710e2" translate="yes" xml:space="preserve">
          <source>sharedtables.[]=</source>
          <target state="translated">sharedtables.[]=</target>
        </trans-unit>
        <trans-unit id="973fad0ad4b50678c28ad35ae2378270ac8d90eb" translate="yes" xml:space="preserve">
          <source>short options - &lt;code&gt;-abcd&lt;/code&gt;, where a, b, c, d are names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acaf30a6376bc3c6c0059c289a98a79c68d1aa1d" translate="yes" xml:space="preserve">
          <source>shortcut for &lt;code&gt;add(c, frmt % args)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2311798ed24ca4f4813d469a5650606766aabb" translate="yes" xml:space="preserve">
          <source>shortcut for creating a new proc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e79c61a39c5831bf1073984a7c023bba9ca5b4" translate="yes" xml:space="preserve">
          <source>should be equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e91bee53cb1ab5ffcf639325f0e06bf83920e1b" translate="yes" xml:space="preserve">
          <source>should return an int with the &lt;code&gt;&amp;lt; 0&lt;/code&gt;&lt;code&gt;== 0&lt;/code&gt; or &lt;code&gt;&amp;gt; 0&lt;/code&gt; semantics; for a bool result use &lt;code&gt;sameXYZ&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c13c7eced6486b883fa10d2c78706e1905e7de9" translate="yes" xml:space="preserve">
          <source>should return the position where something was found; for a bool result use &lt;code&gt;contains&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bc83ac0f84e61c9ab6179cbfbbfb47f31ab0f3" translate="yes" xml:space="preserve">
          <source>show all command line switches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414597750e7bff20f778d5c844a28b6c726205f7" translate="yes" xml:space="preserve">
          <source>show detailed version information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3a6db44cfa03ebee1cdf1c3221ea78f544b388" translate="yes" xml:space="preserve">
          <source>show this help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16d193ff089670635f0d06ab06ced3435a3f3de" translate="yes" xml:space="preserve">
          <source>shows the version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044e9668d9fb9fcd9699e52f6a602792843ea3c6" translate="yes" xml:space="preserve">
          <source>shows this help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a99408ec1be07671fa940e7d3de75e40fa33175" translate="yes" xml:space="preserve">
          <source>sigmatch</source>
          <target state="translated">sigmatch</target>
        </trans-unit>
        <trans-unit id="426cb823a73d81193cf7d5afd390f4ebb249affd" translate="yes" xml:space="preserve">
          <source>signed 16 bit integer type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41adb55716604a7073bedd8410294658082f7e51" translate="yes" xml:space="preserve">
          <source>signed 32 bit integer type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59814b9c062dcc47da076405d2cfd2e5fde7922f" translate="yes" xml:space="preserve">
          <source>signed 64 bit integer type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d481f3c2ccefceea315e1ce867e83b1f4f12f8ad" translate="yes" xml:space="preserve">
          <source>signed 8 bit integer type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1034449c1f5524de93315a19cbae493e26b24ebd" translate="yes" xml:space="preserve">
          <source>similar to 'g', except that it prints at least one digit after the decimal point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89368e1d68015693ab48ee189d0632cb5d6edfb3" translate="yes" xml:space="preserve">
          <source>size</source>
          <target state="translated">size</target>
        </trans-unit>
        <trans-unit id="f1182ba714091b8a4e484d2b35dfccce435fcb5c" translate="yes" xml:space="preserve">
          <source>size of a buffered socket's buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c046108b9afb372e849e68ac38336b2dd6be6308" translate="yes" xml:space="preserve">
          <source>size should refer to a byte size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8656c382cd88e93560bfbd37edd8ba7a1a4a575d" translate="yes" xml:space="preserve">
          <source>size, len</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a71bb590c173111a1c400203d8604f37cd3cff" translate="yes" xml:space="preserve">
          <source>skConst</source>
          <target state="translated">skConst</target>
        </trans-unit>
        <trans-unit id="968190696f0533ab00aa4363aaf8c39371950e5a" translate="yes" xml:space="preserve">
          <source>skEnumField</source>
          <target state="translated">skEnumField</target>
        </trans-unit>
        <trans-unit id="5da6b256ec657263a31871ac3792ff733ccc49e8" translate="yes" xml:space="preserve">
          <source>skForVar</source>
          <target state="translated">skForVar</target>
        </trans-unit>
        <trans-unit id="376c3cafe23c8ebc1782234ac05dd20f840422b0" translate="yes" xml:space="preserve">
          <source>skIterator, skClosureIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f151db76fc52ae21b5adf1df87a76a8c4c4932f0" translate="yes" xml:space="preserve">
          <source>skLabel</source>
          <target state="translated">skLabel</target>
        </trans-unit>
        <trans-unit id="9d40d6d14c746680b48e7281c524d6fa6fc7b6c5" translate="yes" xml:space="preserve">
          <source>skLet</source>
          <target state="translated">skLet</target>
        </trans-unit>
        <trans-unit id="b112fe4b7b83beb7ab713c9849904923d31cfbe6" translate="yes" xml:space="preserve">
          <source>skMacro</source>
          <target state="translated">skMacro</target>
        </trans-unit>
        <trans-unit id="28e7f027e00971b2e568c5a53b3cae54f8f02bc8" translate="yes" xml:space="preserve">
          <source>skMethod</source>
          <target state="translated">skMethod</target>
        </trans-unit>
        <trans-unit id="b4a579f17dc3716a65137be9f7d92277c7779436" translate="yes" xml:space="preserve">
          <source>skParam</source>
          <target state="translated">skParam</target>
        </trans-unit>
        <trans-unit id="c24ee2fcb8b22b4584c816bb2c04772a7a3d562c" translate="yes" xml:space="preserve">
          <source>skProc</source>
          <target state="translated">skProc</target>
        </trans-unit>
        <trans-unit id="c79ef4248b9821610090733833896bc8ead19b73" translate="yes" xml:space="preserve">
          <source>skResult</source>
          <target state="translated">skResult</target>
        </trans-unit>
        <trans-unit id="aca7c2c27a5f7aef16d8e2bdbe9ae52e1bfde5c0" translate="yes" xml:space="preserve">
          <source>skTemplate</source>
          <target state="translated">skTemplate</target>
        </trans-unit>
        <trans-unit id="e7b95a810242da65a14e53d40a67267609eb8e33" translate="yes" xml:space="preserve">
          <source>skType</source>
          <target state="translated">skType</target>
        </trans-unit>
        <trans-unit id="f83ab981cefbcdb55ce70b7641fedf3e11885f2a" translate="yes" xml:space="preserve">
          <source>skVar</source>
          <target state="translated">skVar</target>
        </trans-unit>
        <trans-unit id="a1ad655f8e21df3a75934175672798af8c09b244" translate="yes" xml:space="preserve">
          <source>skewness (the third statistical moment)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c900a91165d267c61bb170cf8116ec7b098d9e4d" translate="yes" xml:space="preserve">
          <source>skip pattern &lt;em&gt;pat&lt;/em&gt; before trying to match other tokens; this is useful for whitespace skipping, for example: &lt;code&gt;\skip(\s*) {\ident} ':' {\ident}&lt;/code&gt; matches key value pairs ignoring whitespace around the &lt;code&gt;':'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b7003ff9778ded2254af0399efc4585deac90f" translate="yes" xml:space="preserve">
          <source>skips all the data that is pending for the socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ddcabd03512ebb3367db745bebf496e2d7e171" translate="yes" xml:space="preserve">
          <source>skips the &lt;em&gt;token&lt;/em&gt; starting at &lt;code&gt;s[start]&lt;/code&gt;. Returns the length of &lt;em&gt;token&lt;/em&gt; or 0 if there was no &lt;em&gt;token&lt;/em&gt; at &lt;code&gt;s[start]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a176d7cd20bf415c7084f05ae571ef4b49de681" translate="yes" xml:space="preserve">
          <source>skips the range information of &lt;em&gt;x&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a369de7c34e07395719cc10c588f74ffb1d9351" translate="yes" xml:space="preserve">
          <source>skips the whitespace starting at &lt;code&gt;s[start]&lt;/code&gt;. Returns the number of skipped characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33633dfad02136acc376b03a7a173433498b87f" translate="yes" xml:space="preserve">
          <source>sleeps &lt;em&gt;milsecs&lt;/em&gt; milliseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea73ac8774446cc468a49c598f42e42994939fc8" translate="yes" xml:space="preserve">
          <source>slice assignment for arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369f9b0c8d89413e3dbf460d90d41bba543f6a6b" translate="yes" xml:space="preserve">
          <source>slice assignment for sequences. If &lt;code&gt;b.len&lt;/code&gt; is not exactly the number of elements that are referred to by &lt;em&gt;x&lt;/em&gt;, a &lt;span id=&quot;splice_2&quot;&gt;splice&lt;/span&gt; is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654a946e9f21002470caf47720a0170f179195cb" translate="yes" xml:space="preserve">
          <source>slice assignment for strings. If &lt;code&gt;b.len&lt;/code&gt; is not exactly the number of elements that are referred to by &lt;em&gt;x&lt;/em&gt;, a &lt;span id=&quot;splice_1&quot;&gt;splice&lt;/span&gt; is performed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653e447b6df31fb204c0210b3d4c84e57b9300cf" translate="yes" xml:space="preserve">
          <source>slice operation for arrays. returns the inclusive range [a[x.a], a[x.b]]:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad12b7df98e316b543beeace7b16814ee091ae07" translate="yes" xml:space="preserve">
          <source>slice operation for sequences. returns the inclusive range [s[x.a], s[x.b]]:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ab31af7d23544092e842efaa8497951ad1f1e3" translate="yes" xml:space="preserve">
          <source>slice operation for strings. returns the inclusive range [s[x.a], s[x.b]]:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64c7429d841d5485e45dc5fd33aeeecc7f246ee" translate="yes" xml:space="preserve">
          <source>slope</source>
          <target state="translated">slope</target>
        </trans-unit>
        <trans-unit id="9a0e0d6652749eb5021530f1ce3f08262ae1bccc" translate="yes" xml:space="preserve">
          <source>smtp</source>
          <target state="translated">smtp</target>
        </trans-unit>
        <trans-unit id="ea0264fc1310d6d04653479e0eeccbb43459f7c6" translate="yes" xml:space="preserve">
          <source>smtp.$</source>
          <target state="translated">smtp.$</target>
        </trans-unit>
        <trans-unit id="a32504f4838d0f54bcb5f51b0f721af155ecf4f3" translate="yes" xml:space="preserve">
          <source>smtp.Smtp</source>
          <target state="translated">smtp.Smtp</target>
        </trans-unit>
        <trans-unit id="58aed19bd0137085b2e2bfcf5e5f6200a0fdda5f" translate="yes" xml:space="preserve">
          <source>socket type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d1875e4a97c10866cbda978585ea6c29d65a34" translate="yes" xml:space="preserve">
          <source>sockets</source>
          <target state="translated">sockets</target>
        </trans-unit>
        <trans-unit id="4e2629958121f5b1364069dd53128b5c98696bc5" translate="yes" xml:space="preserve">
          <source>sockets.$</source>
          <target state="translated">sockets.$</target>
        </trans-unit>
        <trans-unit id="c33bde49853f59228011d54dee3d1c3388c43929" translate="yes" xml:space="preserve">
          <source>sockets.==</source>
          <target state="translated">sockets.==</target>
        </trans-unit>
        <trans-unit id="4bc36c17284c123bdc4259129b032e412c2e16ed" translate="yes" xml:space="preserve">
          <source>sockets.Port</source>
          <target state="translated">sockets.Port</target>
        </trans-unit>
        <trans-unit id="e73c8b18f4cfd2bf3c0062d6c1a9e3960298bae7" translate="yes" xml:space="preserve">
          <source>some algorithms for nodes; this module is less important</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0a41b8ed67edf2995ce4ad74d6113113694d33" translate="yes" xml:space="preserve">
          <source>sort and sorted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525accf46a2ad3321fa2079623a99768bf906bfe" translate="yes" xml:space="preserve">
          <source>sort order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05be1c206836f3094373605c8d58cf32ff4dd091" translate="yes" xml:space="preserve">
          <source>sorts &lt;em&gt;t&lt;/em&gt; according to &lt;em&gt;cmp&lt;/em&gt;. This modifies the internal list that kept the insertion order, so insertion order is lost after this call but key lookup and insertions remain possible after &lt;em&gt;sort&lt;/em&gt; (in contrast to the &lt;em&gt;sort&lt;/em&gt; for count tables).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bef9108ef2e132783cc918bcf037551b34ea0ae" translate="yes" xml:space="preserve">
          <source>sorts the count table so that the entry with the highest counter comes first. This is destructive! You must not modify &lt;em&gt;t&lt;/em&gt; afterwards! You can use the iterators &lt;em&gt;pairs&lt;/em&gt;, &lt;em&gt;keys&lt;/em&gt;, and &lt;em&gt;values&lt;/em&gt; to iterate over &lt;em&gt;t&lt;/em&gt; in the sorted order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb89be5df7ae3fb6abbb721add58c71d7396dddc" translate="yes" xml:space="preserve">
          <source>spawns a new task if a CPU core is ready, otherwise executes the call in the calling thread. Usually it is advised to use 'spawn' in order to not block the producer for an unknown amount of time. 'call' has to be proc call 'p(...)' where 'p' is gcsafe and has a return type that is either 'void' or compatible with &lt;code&gt;FlowVar[T]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b86c5d17103f9dff6ae91332b7b381541d35ae" translate="yes" xml:space="preserve">
          <source>special magic to prohibit dynamic binding for &lt;span id=&quot;method_1&quot;&gt;method&lt;/span&gt; calls. This is similar to &lt;span id=&quot;super_1&quot;&gt;super&lt;/span&gt; in ordinary OO languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a11b75a67a1a5fc0bceff694792869a799d9258" translate="yes" xml:space="preserve">
          <source>special type that marks a macro as a &lt;span id=&quot;forminusloop-macro_1&quot;&gt;for-loop macro&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9726c3f64ff24008d66be572dda0c1cef1630da5" translate="yes" xml:space="preserve">
          <source>specifies how &lt;code&gt;bindSym&lt;/code&gt; behaves</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54e393cd5734e5cd327fb85c4f7776c17639b2f" translate="yes" xml:space="preserve">
          <source>sqlite3</source>
          <target state="translated">sqlite3</target>
        </trans-unit>
        <trans-unit id="20a24593f82e573953076a0eeaf8f3cfb817a534" translate="yes" xml:space="preserve">
          <source>ssl</source>
          <target state="translated">ssl</target>
        </trans-unit>
        <trans-unit id="8293819d34ef914a993c0c098fec809798582df5" translate="yes" xml:space="preserve">
          <source>stack traces use full file paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dae086c506bf2cd69815f869cb1cbbb441f6db" translate="yes" xml:space="preserve">
          <source>standard template filter (&lt;code&gt;#? stdtempl&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bf3fc565e22ab470b16850b18fd4c06f305443" translate="yes" xml:space="preserve">
          <source>standardDeviation</source>
          <target state="translated">standardDeviation</target>
        </trans-unit>
        <trans-unit id="87969053d366ae568b37abf04f0855fd5e7d5764" translate="yes" xml:space="preserve">
          <source>standardDeviationS (sample stddev)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e781882a962fca33b99103b0f9f399eda6ddc73" translate="yes" xml:space="preserve">
          <source>start character class definition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdb82da22af9942f049b6b6013202d9a36dfa2b" translate="yes" xml:space="preserve">
          <source>start min/max quantifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f41d4fc15a31256074d408993e22c9bd3dad56" translate="yes" xml:space="preserve">
          <source>start of alternative branch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e905a8a9e9efa4f4cfe4638b1181dc0095510fcf" translate="yes" xml:space="preserve">
          <source>start subpattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c946a5e80bce8eba8a9760385011cf5a9d6d4108" translate="yes" xml:space="preserve">
          <source>static[T]</source>
          <target state="translated">static[T]</target>
        </trans-unit>
        <trans-unit id="e350d5ce0153f3e22d5db21cf2a4eff00f3ee877" translate="yes" xml:space="preserve">
          <source>stats</source>
          <target state="translated">stats</target>
        </trans-unit>
        <trans-unit id="27eb2d3f901d1a2e5670214f62e1180e7b115016" translate="yes" xml:space="preserve">
          <source>stats.$</source>
          <target state="translated">stats.$</target>
        </trans-unit>
        <trans-unit id="593a2b64c90a1d7f4062186293a88d0434fe2a1d" translate="yes" xml:space="preserve">
          <source>stats.+</source>
          <target state="translated">stats.+</target>
        </trans-unit>
        <trans-unit id="7910bdb346895b98627522627f75cad87b6e9af6" translate="yes" xml:space="preserve">
          <source>stats.+=</source>
          <target state="translated">stats.+=</target>
        </trans-unit>
        <trans-unit id="c6412e94a27dc04b9c4c7c8f06f6a0b9d35c987c" translate="yes" xml:space="preserve">
          <source>stores &lt;em&gt;data&lt;/em&gt; into the stream &lt;em&gt;s&lt;/em&gt;. Raises &lt;em&gt;EIO&lt;/em&gt; in case of an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f92709d2240359717397d69e16ebaa4fc7bc58" translate="yes" xml:space="preserve">
          <source>stores an arbitrary IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3442496b96dd01591a8cd44b1eec1368ab728aba" translate="yes" xml:space="preserve">
          <source>str</source>
          <target state="translated">str</target>
        </trans-unit>
        <trans-unit id="0298f8ea9aaad3fa0c279e6bc0a16183c97a9d58" translate="yes" xml:space="preserve">
          <source>streams</source>
          <target state="translated">streams</target>
        </trans-unit>
        <trans-unit id="60a0fba0403aa0bc9bcff1e296b2e7da4afcce01" translate="yes" xml:space="preserve">
          <source>strformat</source>
          <target state="translated">strformat</target>
        </trans-unit>
        <trans-unit id="ecb252044b5ea0f679ee78ec1a12904739e2904d" translate="yes" xml:space="preserve">
          <source>string</source>
          <target state="translated">string</target>
        </trans-unit>
        <trans-unit id="c327c850ef37d81e1408d94a2f3de5fc343f6794" translate="yes" xml:space="preserve">
          <source>string that contains a substitution expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51c21bb437912cc1cbc6f88116535b4c66bbb0d" translate="yes" xml:space="preserve">
          <source>string type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65903d6e798dc609bf6825e9ea379bfa87040056" translate="yes" xml:space="preserve">
          <source>stringify for &lt;code&gt;Message&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049b75f321d75f3b4f41d8648accb399b68065fa" translate="yes" xml:space="preserve">
          <source>strip leading whitespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5317c29f1d2fc8af741c889886050370c12b6980" translate="yes" xml:space="preserve">
          <source>strip only the lines that start with &lt;em&gt;startswith&lt;/em&gt; (ignoring leading whitespace). If empty every line is stripped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf037986433dd46dd174d52bb09d0142c01b09e5" translate="yes" xml:space="preserve">
          <source>strip trailing whitespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fe853c190499a536c5a23dcdbdae56d3b32576" translate="yes" xml:space="preserve">
          <source>strmisc</source>
          <target state="translated">strmisc</target>
        </trans-unit>
        <trans-unit id="6bfd63466af4e40bbba8aa0a78002e467e920966" translate="yes" xml:space="preserve">
          <source>strong subset relation (A is a real subset of B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d5c8ce23fb159cb16162b490265ab80f1e32d5" translate="yes" xml:space="preserve">
          <source>strscans</source>
          <target state="translated">strscans</target>
        </trans-unit>
        <trans-unit id="ed1a590c3ceb1d3885f39290e5c189c5217fd8c6" translate="yes" xml:space="preserve">
          <source>strtabs</source>
          <target state="translated">strtabs</target>
        </trans-unit>
        <trans-unit id="9db468f704bc4c61fca58ade3381ea29a0363faa" translate="yes" xml:space="preserve">
          <source>strtabs.$</source>
          <target state="translated">strtabs.$</target>
        </trans-unit>
        <trans-unit id="d9d46061c547da246aff53dbee28e9fd51b5ed10" translate="yes" xml:space="preserve">
          <source>strtabs.%</source>
          <target state="translated">strtabs.%</target>
        </trans-unit>
        <trans-unit id="c8797602400ca375d200c783aad02962254af367" translate="yes" xml:space="preserve">
          <source>strtabs.[]</source>
          <target state="translated">strtabs.[]</target>
        </trans-unit>
        <trans-unit id="939510f93ecc1e8f021b7d690f0b2aa1cace8872" translate="yes" xml:space="preserve">
          <source>strtabs.[]=</source>
          <target state="translated">strtabs.[]=</target>
        </trans-unit>
        <trans-unit id="74120152ab074787dfdc3dde954c8cd3c98c418d" translate="yes" xml:space="preserve">
          <source>strtabs.keys</source>
          <target state="translated">strtabs.keys</target>
        </trans-unit>
        <trans-unit id="010a5d92dcc0147c4c38ebba7f22f6e6141c83a4" translate="yes" xml:space="preserve">
          <source>structured types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1436e0bdea3e5e3e6b65849a7fb49e7a5b1879" translate="yes" xml:space="preserve">
          <source>strutils</source>
          <target state="translated">strutils</target>
        </trans-unit>
        <trans-unit id="45e69f1a8008ec524193d73808d8ffc999af4a7f" translate="yes" xml:space="preserve">
          <source>strutils.%</source>
          <target state="translated">strutils.%</target>
        </trans-unit>
        <trans-unit id="88bcb789a4d5aaf0a7e5ace8c62521ba3af04469" translate="yes" xml:space="preserve">
          <source>subexes</source>
          <target state="translated">subexes</target>
        </trans-unit>
        <trans-unit id="a7f5733eed37188e2af484742480fecbb76a5d05" translate="yes" xml:space="preserve">
          <source>subexes.%</source>
          <target state="translated">subexes.%</target>
        </trans-unit>
        <trans-unit id="c72f2ac8737a63b8bb5d248c831cd25bcaa6d323" translate="yes" xml:space="preserve">
          <source>subset relation (A is subset of B or equal to B)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767a6425ed076346540f98f51f7b47595a653b9e" translate="yes" xml:space="preserve">
          <source>subtracts two colors: This uses saturated artithmetic, so that each color component cannot overflow (255 is used as a maximum).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30eef85dfdd3282c8738940920a705d71a465306" translate="yes" xml:space="preserve">
          <source>sugar</source>
          <target state="translated">sugar</target>
        </trans-unit>
        <trans-unit id="8a9ddb1130b3316800271f8b5204c36eb23dfd8c" translate="yes" xml:space="preserve">
          <source>sugar.[]</source>
          <target state="translated">sugar.[]</target>
        </trans-unit>
        <trans-unit id="913a54c13be6770ddec347029a44ae120f9e90c1" translate="yes" xml:space="preserve">
          <source>sugar.dump</source>
          <target state="translated">sugar.dump</target>
        </trans-unit>
        <trans-unit id="48243f3a08a437e4a725707ae34551880ae4bbfe" translate="yes" xml:space="preserve">
          <source>sugar.lc</source>
          <target state="translated">sugar.lc</target>
        </trans-unit>
        <trans-unit id="e9dff3557ded7414ae530834de7011f1388d202a" translate="yes" xml:space="preserve">
          <source>sum</source>
          <target state="translated">sum</target>
        </trans-unit>
        <trans-unit id="2f1e3c0726db636ea3d568c5696d19850e518579" translate="yes" xml:space="preserve">
          <source>sum, mean and standard deviation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f10825f829d3e3c7b6a43acd749317f6311d70" translate="yes" xml:space="preserve">
          <source>swaps the values &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;. This is often more efficient than &lt;code&gt;tmp = a; a = b; b = tmp&lt;/code&gt;. Particularly useful for sorting algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fb1e586b947be605d7672fcfda898d0aa16892" translate="yes" xml:space="preserve">
          <source>switch off the embedded debugger (it is &lt;strong&gt;slow&lt;/strong&gt;!)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d31bfac7db6a0e608e9ab4dc0c486c8e779c66" translate="yes" xml:space="preserve">
          <source>sym</source>
          <target state="translated">sym</target>
        </trans-unit>
        <trans-unit id="810a25d76c31e495cc070bdf42e076f7c9b0a1cd" translate="yes" xml:space="preserve">
          <source>symbol</source>
          <target state="translated">symbol</target>
        </trans-unit>
        <trans-unit id="f6c6786279aa3dd0fdba744e70db89478ef31413" translate="yes" xml:space="preserve">
          <source>syntaxes</source>
          <target state="translated">syntaxes</target>
        </trans-unit>
        <trans-unit id="317f1e761f2faa8da781a4762b9dcc2c5cad209a" translate="yes" xml:space="preserve">
          <source>system</source>
          <target state="translated">system</target>
        </trans-unit>
        <trans-unit id="ba7dc7dfdc9081b5dccd2714817825b0d2e62d2e" translate="yes" xml:space="preserve">
          <source>system.!=</source>
          <target state="translated">system.!=</target>
        </trans-unit>
        <trans-unit id="6ccbad24c59ad69711929df61a5dbced10185e49" translate="yes" xml:space="preserve">
          <source>system.$</source>
          <target state="translated">system.$</target>
        </trans-unit>
        <trans-unit id="790b62ff80b269fec9c7560366bf60d10f1a1b33" translate="yes" xml:space="preserve">
          <source>system.%%</source>
          <target state="translated">system.%%</target>
        </trans-unit>
        <trans-unit id="ace184da92454ba0ae021c8530e9db497a90ef74" translate="yes" xml:space="preserve">
          <source>system.&amp;gt;</source>
          <target state="translated">system.&amp;gt;</target>
        </trans-unit>
        <trans-unit id="edc06affa3079988a0a59b8552d72a9b8d40be55" translate="yes" xml:space="preserve">
          <source>system.&amp;lt;</source>
          <target state="translated">system.&amp;lt;</target>
        </trans-unit>
        <trans-unit id="9010b6f8b2b11bf213aa3f098f9b51cf8cee4227" translate="yes" xml:space="preserve">
          <source>system.*</source>
          <target state="translated">system.*</target>
        </trans-unit>
        <trans-unit id="2c86b0249d61001c96da7966d35a03197e0ac087" translate="yes" xml:space="preserve">
          <source>system.*%</source>
          <target state="translated">system.*%</target>
        </trans-unit>
        <trans-unit id="3957d1df0dc7b46c7c04114439dd61b2e8d6641e" translate="yes" xml:space="preserve">
          <source>system.*=</source>
          <target state="translated">system.*=</target>
        </trans-unit>
        <trans-unit id="b0de82aec69a21e894f5841d9f9880f432dad21f" translate="yes" xml:space="preserve">
          <source>system.+</source>
          <target state="translated">system.+</target>
        </trans-unit>
        <trans-unit id="36b796ab15ce7771b21c4ea401f9aebf29d3e7ba" translate="yes" xml:space="preserve">
          <source>system.+%</source>
          <target state="translated">system.+%</target>
        </trans-unit>
        <trans-unit id="306f5509297256532e72554088001af06efbdb52" translate="yes" xml:space="preserve">
          <source>system.+=</source>
          <target state="translated">system.+=</target>
        </trans-unit>
        <trans-unit id="2c603fec68ffa4bf8fd7f092105ce93157fb9544" translate="yes" xml:space="preserve">
          <source>system.-</source>
          <target state="translated">system.-</target>
        </trans-unit>
        <trans-unit id="79164ca55ed526c38837eeeb6654c6e4a62b0d04" translate="yes" xml:space="preserve">
          <source>system.-%</source>
          <target state="translated">system.-%</target>
        </trans-unit>
        <trans-unit id="0e1a507744318021c18974272d887cc956fe8290" translate="yes" xml:space="preserve">
          <source>system.-=</source>
          <target state="translated">system.-=</target>
        </trans-unit>
        <trans-unit id="95902e372d00716fb44a6652d7c5415bfd4571ef" translate="yes" xml:space="preserve">
          <source>system...</source>
          <target state="translated">system...</target>
        </trans-unit>
        <trans-unit id="38b80cffdffd6603cd8eef4e2768fc3e669e8e4b" translate="yes" xml:space="preserve">
          <source>system...^</source>
          <target state="translated">system...^</target>
        </trans-unit>
        <trans-unit id="972dd27b4ba55132cb2a62c073a053646008a100" translate="yes" xml:space="preserve">
          <source>system./</source>
          <target state="translated">system./</target>
        </trans-unit>
        <trans-unit id="7261d859e7c6a433334a842708d4939b63010db0" translate="yes" xml:space="preserve">
          <source>system./%</source>
          <target state="translated">system./%</target>
        </trans-unit>
        <trans-unit id="d1f747d43d24955c354b07d3b81c4eca504fe383" translate="yes" xml:space="preserve">
          <source>system./=</source>
          <target state="translated">system./=</target>
        </trans-unit>
        <trans-unit id="4f2227544fcd2914edceea960f1e3ab1efb57399" translate="yes" xml:space="preserve">
          <source>system.=</source>
          <target state="translated">system.=</target>
        </trans-unit>
        <trans-unit id="db6781f0e29425fe9711a04602fe4650c6f274d9" translate="yes" xml:space="preserve">
          <source>system.==</source>
          <target state="translated">system.==</target>
        </trans-unit>
        <trans-unit id="d0f549fa539616b351eec285f7840b76a026c101" translate="yes" xml:space="preserve">
          <source>system.@</source>
          <target state="translated">system.@</target>
        </trans-unit>
        <trans-unit id="d3d634b0b1e5e2f8de758770d9d3478f3e1ed286" translate="yes" xml:space="preserve">
          <source>system.File</source>
          <target state="translated">system.File</target>
        </trans-unit>
        <trans-unit id="40c14d2f494a99aadb5062abfe80e31c79f44ebb" translate="yes" xml:space="preserve">
          <source>system.Inf</source>
          <target state="translated">system.Inf</target>
        </trans-unit>
        <trans-unit id="47af2da040aa5bf7829e1cbb41ac0a3bc63339f7" translate="yes" xml:space="preserve">
          <source>system.NaN</source>
          <target state="translated">system.NaN</target>
        </trans-unit>
        <trans-unit id="80fb4e13b1e50cb63dba25c20dee307b945c80da" translate="yes" xml:space="preserve">
          <source>system.[]</source>
          <target state="translated">system.[]</target>
        </trans-unit>
        <trans-unit id="3a3a03e3dbfcf29f1738105ecc840f0f7928ee10" translate="yes" xml:space="preserve">
          <source>system.[]=</source>
          <target state="translated">system.[]=</target>
        </trans-unit>
        <trans-unit id="933251cba71b7067250984f689080ef7391b4640" translate="yes" xml:space="preserve">
          <source>system.^</source>
          <target state="translated">system.^</target>
        </trans-unit>
        <trans-unit id="7bf51139294607d5abaa5117070c4b9f9fddf869" translate="yes" xml:space="preserve">
          <source>system.addr</source>
          <target state="translated">system.addr</target>
        </trans-unit>
        <trans-unit id="152bf89741618b5cb732daa71c88b6a01a9a7ca4" translate="yes" xml:space="preserve">
          <source>system.and</source>
          <target state="translated">system.and</target>
        </trans-unit>
        <trans-unit id="b1ab188bf5519365b9440215fad69232f56f3f2f" translate="yes" xml:space="preserve">
          <source>system.any</source>
          <target state="translated">system.any</target>
        </trans-unit>
        <trans-unit id="e61573db238b5a7fc7949b34b94be1660275268a" translate="yes" xml:space="preserve">
          <source>system.auto</source>
          <target state="translated">system.auto</target>
        </trans-unit>
        <trans-unit id="515e9dc3b28791d00eaf9223040216d0f4f6a478" translate="yes" xml:space="preserve">
          <source>system.bool</source>
          <target state="translated">system.bool</target>
        </trans-unit>
        <trans-unit id="b391339f60a6b407ff599d321a9e4a9bb181b97f" translate="yes" xml:space="preserve">
          <source>system.byte</source>
          <target state="translated">system.byte</target>
        </trans-unit>
        <trans-unit id="56fa1bf9078662779653553389ab8e638f326793" translate="yes" xml:space="preserve">
          <source>system.char</source>
          <target state="translated">system.char</target>
        </trans-unit>
        <trans-unit id="57f803936dfaf8e51eccc95b852fe48efffd7978" translate="yes" xml:space="preserve">
          <source>system.cint</source>
          <target state="translated">system.cint</target>
        </trans-unit>
        <trans-unit id="c709a59346c9716d4d420af74e9c125799e8ab08" translate="yes" xml:space="preserve">
          <source>system.div</source>
          <target state="translated">system.div</target>
        </trans-unit>
        <trans-unit id="82d3062c91035319a19c376a2ba4268c6e0c7d3b" translate="yes" xml:space="preserve">
          <source>system.in</source>
          <target state="translated">system.in</target>
        </trans-unit>
        <trans-unit id="3d3a67dfb33442d92b3b884fae2cca9e60666e1c" translate="yes" xml:space="preserve">
          <source>system.int</source>
          <target state="translated">system.int</target>
        </trans-unit>
        <trans-unit id="5d75ee6a86d69ac12233ed5a37df4640392ca291" translate="yes" xml:space="preserve">
          <source>system.int8</source>
          <target state="translated">system.int8</target>
        </trans-unit>
        <trans-unit id="4680f67262be57eb7bfc91c5619bd54e16d49a10" translate="yes" xml:space="preserve">
          <source>system.is</source>
          <target state="translated">system.is</target>
        </trans-unit>
        <trans-unit id="10ddd495d3c6e5620e539a8f2c180c6b29d5a27b" translate="yes" xml:space="preserve">
          <source>system.lent</source>
          <target state="translated">system.lent</target>
        </trans-unit>
        <trans-unit id="dcb17f25bd59c6920b367636df969dd7270771a4" translate="yes" xml:space="preserve">
          <source>system.mod</source>
          <target state="translated">system.mod</target>
        </trans-unit>
        <trans-unit id="3d3ec4327850fb0261f724afebfec6243a3e7dac" translate="yes" xml:space="preserve">
          <source>system.not</source>
          <target state="translated">system.not</target>
        </trans-unit>
        <trans-unit id="59d05c15d849b900901547fcb9e7a8d0cc30af78" translate="yes" xml:space="preserve">
          <source>system.of</source>
          <target state="translated">system.of</target>
        </trans-unit>
        <trans-unit id="f7a06c2a50e9c115b3c7249f8a7dfd97e8ddad38" translate="yes" xml:space="preserve">
          <source>system.off</source>
          <target state="translated">system.off</target>
        </trans-unit>
        <trans-unit id="af5337f0fff969f34045e3617f1c479cea528719" translate="yes" xml:space="preserve">
          <source>system.on</source>
          <target state="translated">system.on</target>
        </trans-unit>
        <trans-unit id="435089dcff95d116c8e1d31bc28753243ed4084d" translate="yes" xml:space="preserve">
          <source>system.or</source>
          <target state="translated">system.or</target>
        </trans-unit>
        <trans-unit id="e534cd6aff7469e8245138fb97887df2328a48f3" translate="yes" xml:space="preserve">
          <source>system.ptr</source>
          <target state="translated">system.ptr</target>
        </trans-unit>
        <trans-unit id="5dfd39d6a2de7947ec1b8d315e5bea2172bed939" translate="yes" xml:space="preserve">
          <source>system.ref</source>
          <target state="translated">system.ref</target>
        </trans-unit>
        <trans-unit id="245fb8a17df795d7ee932eeec894b4ea81d31c71" translate="yes" xml:space="preserve">
          <source>system.seq</source>
          <target state="translated">system.seq</target>
        </trans-unit>
        <trans-unit id="73b1b557a9bfd93f74a231c47b66eea140ced9c1" translate="yes" xml:space="preserve">
          <source>system.set</source>
          <target state="translated">system.set</target>
        </trans-unit>
        <trans-unit id="44674da334b3ee007c32a92bc2f0ea9abeb34d4f" translate="yes" xml:space="preserve">
          <source>system.shl</source>
          <target state="translated">system.shl</target>
        </trans-unit>
        <trans-unit id="4ce9ac187f620fdf1fd2abbc76d98f99c69fa980" translate="yes" xml:space="preserve">
          <source>system.shr</source>
          <target state="translated">system.shr</target>
        </trans-unit>
        <trans-unit id="033adc444b80d16164f4a1382680d05b28c06bd9" translate="yes" xml:space="preserve">
          <source>system.sink</source>
          <target state="translated">system.sink</target>
        </trans-unit>
        <trans-unit id="33c5ee730ce466e50551768d83abd898c6dd0c08" translate="yes" xml:space="preserve">
          <source>system.type</source>
          <target state="translated">system.type</target>
        </trans-unit>
        <trans-unit id="05faabcd618ebb1cd9a0e331a0aecfd0a62d61e6" translate="yes" xml:space="preserve">
          <source>system.uint</source>
          <target state="translated">system.uint</target>
        </trans-unit>
        <trans-unit id="45535f34ccb0d46eca56465c49f3d2ddf85d8eb7" translate="yes" xml:space="preserve">
          <source>system.void</source>
          <target state="translated">system.void</target>
        </trans-unit>
        <trans-unit id="abdc1a60da4c6b6f6ca56c63e6bd7b8a067ded8d" translate="yes" xml:space="preserve">
          <source>system.xor</source>
          <target state="translated">system.xor</target>
        </trans-unit>
        <trans-unit id="22f01f152b4483e125e978f9a6678ea1d802d0b6" translate="yes" xml:space="preserve">
          <source>system.ze()</source>
          <target state="translated">system.ze()</target>
        </trans-unit>
        <trans-unit id="d56c3abbcaaccfc590a7c417e432cdeacab4eaa2" translate="yes" xml:space="preserve">
          <source>system.||</source>
          <target state="translated">system.||</target>
        </trans-unit>
        <trans-unit id="30b6ad3bb95d50bb1796d5e3d20eb34f7e5f3564" translate="yes" xml:space="preserve">
          <source>tab (hex 09)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca7d67ad8a5a50aa20b6376fc5c25cdf43e5388" translate="yes" xml:space="preserve">
          <source>table that counts the number of each key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ee9ebfe6649a8e575fb54cb58ed5aeaa0f3ee2" translate="yes" xml:space="preserve">
          <source>table that remembers insertion order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3915396b5fe58dce8505b3e62c31b4f79b3ccc2c" translate="yes" xml:space="preserve">
          <source>tables</source>
          <target state="translated">tables</target>
        </trans-unit>
        <trans-unit id="44b5ac06514edbd0ca1798a901edbe88c9dd0d46" translate="yes" xml:space="preserve">
          <source>tables.$</source>
          <target state="translated">tables.$</target>
        </trans-unit>
        <trans-unit id="2dfa0c58bab2aa4b5fbb237bcf3016ed6a1c45d1" translate="yes" xml:space="preserve">
          <source>tables.==</source>
          <target state="translated">tables.==</target>
        </trans-unit>
        <trans-unit id="2034c2adac7df34cf0c377e49c81c14f1b82bdbc" translate="yes" xml:space="preserve">
          <source>tables.[]</source>
          <target state="translated">tables.[]</target>
        </trans-unit>
        <trans-unit id="938366394917d1d78d0edec81f622d86bacb3362" translate="yes" xml:space="preserve">
          <source>tables.[]=</source>
          <target state="translated">tables.[]=</target>
        </trans-unit>
        <trans-unit id="1dfdc5b86ee595441e32253bacb75e7cfaf1789e" translate="yes" xml:space="preserve">
          <source>tables.keys</source>
          <target state="translated">tables.keys</target>
        </trans-unit>
        <trans-unit id="f471c19b32f8d129f27c15ea8d4e1dc953a24166" translate="yes" xml:space="preserve">
          <source>takes any Nim variable and returns its string representation. It works even for complex data graphs with cycles. This is a great debugging tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409ddda6792912b4efe9959bc11b3a53d0bd2115" translate="yes" xml:space="preserve">
          <source>temp command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3226ecbe650213a49cd03ae67140750e4f340083" translate="yes" xml:space="preserve">
          <source>template</source>
          <target state="translated">template</target>
        </trans-unit>
        <trans-unit id="7565d60f37b2e338744468651402f7489610f8d5" translate="yes" xml:space="preserve">
          <source>template instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d551dae60a987b587dac7b1441911a7045899f" translate="yes" xml:space="preserve">
          <source>terminal</source>
          <target state="translated">terminal</target>
        </trans-unit>
        <trans-unit id="1b9edeb787334aa9854c2928420db62be50f3645" translate="yes" xml:space="preserve">
          <source>terminal's background colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f4ded643e61b53da88afc37594e02468bdf08a" translate="yes" xml:space="preserve">
          <source>terminal's foreground colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adbcf2d5ef2cca1f7f4ded5bef774dfc63513e9" translate="yes" xml:space="preserve">
          <source>terminates the character class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c034600b57d7a121167232bd4c2d528dd2cdbe" translate="yes" xml:space="preserve">
          <source>test command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a53f1000d93bef4ede98b73480c7ab93c7fcb7" translate="yes" xml:space="preserve">
          <source>the Nim compiler itself; note that this code has been translated from a bootstrapping version written in Pascal, so the code is &lt;strong&gt;not&lt;/strong&gt; a poster child of good Nim code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4290bcecd8a52e42ef2e49216da2e607776be62a" translate="yes" xml:space="preserve">
          <source>the Nim library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c4fba57ad425bbd75bc7a10eba52016414e6b3" translate="yes" xml:space="preserve">
          <source>the base lexer. Inherit your lexer from this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5dc5004d9b7b711a9b00390fd6e30888df4c82f" translate="yes" xml:space="preserve">
          <source>the cache is discarded and disabled. The GC will reuse its used memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6817c7d368e18502cd32dae2008d729342048de" translate="yes" xml:space="preserve">
          <source>the cardinality of A (number of elements in A)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67901cc7f62661761a9ac78b026c740c61378bdd" translate="yes" xml:space="preserve">
          <source>the circle constant PI (Ludolph's number)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316e67f4d3b211020848ed473a029c2142a61d4b" translate="yes" xml:space="preserve">
          <source>the circle constant TAU (= 2 * PI)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8288a11ccd9460066ccdf051e3e961767eaa6cd8" translate="yes" xml:space="preserve">
          <source>the compiler should produce a .h file (FILE is optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f45965fa7c8b872dfb336cf812052f2c2dc523c" translate="yes" xml:space="preserve">
          <source>the concatenation operator for an openarray of ropes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8702fb791489aa19fb1da3c2531553cf390ffad6" translate="yes" xml:space="preserve">
          <source>the concatenation operator for ropes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2351fb580a279f2d3d672206c6eabdad18f1d82e" translate="yes" xml:space="preserve">
          <source>the detected command line token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012685c5f09c68bb9574636d961049250dd6df51" translate="yes" xml:space="preserve">
          <source>the different modes of floating point formating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b238e9f84ea76addde2994ece03046a7dd31cec" translate="yes" xml:space="preserve">
          <source>the different names for binary prefixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5adc595e9d61f1193792477c0d206fc6729a25a" translate="yes" xml:space="preserve">
          <source>the documentation; it is a bunch of reStructuredText files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55bdecce62f908de5e1bb1f1cca313780793c32" translate="yes" xml:space="preserve">
          <source>the exception that is raised, if a SCGI error occurs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb66f94a0e29b500a01080652dae009fc67802a5" translate="yes" xml:space="preserve">
          <source>the frame itself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ddac3c9351f863ba3b76ac05409c32af87eee2" translate="yes" xml:space="preserve">
          <source>the generator for C types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde05fd8aee0dea11dfc6e8a22314af5c8cc3cba" translate="yes" xml:space="preserve">
          <source>the generator for expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdb049d18298c4e01cc244741b210202425d7d6" translate="yes" xml:space="preserve">
          <source>the generator for statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51c652f435469798d0cd53b81e52bd0f57a40c3" translate="yes" xml:space="preserve">
          <source>the generic &lt;span id=&quot;unsigned-integer_1&quot;&gt;unsigned integer&lt;/span&gt; type; its size is platform dependent and has the same size as a pointer. An integer literal with the type suffix &lt;code&gt;'u&lt;/code&gt; is of this type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bc8fc1753f65daa92cbfbcd8922b9d2cd45724" translate="yes" xml:space="preserve">
          <source>the generic floating point type; its size used to be platform dependent, but now it is always mapped to &lt;code&gt;float64&lt;/code&gt;. This type should be used in general.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789552f404e13550b5798a9bf084136fd8f0ac53" translate="yes" xml:space="preserve">
          <source>the generic signed integer type; its size is platform dependent and has the same size as a pointer. This type should be used in general. An integer literal that has no type suffix is of this type if it is in the range &lt;code&gt;low(int32)..high(int32)&lt;/code&gt; otherwise the literal's type is &lt;code&gt;int64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c85565db2e4309763909589b1af50dc369c9c54" translate="yes" xml:space="preserve">
          <source>the list of known distributions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5280135eab60117feae723f9b8a29b7066387597" translate="yes" xml:space="preserve">
          <source>the match should have word boundaries (buggy for pegs!)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13758f241bcfc88d1ee6e808dafe641b6d1560c4" translate="yes" xml:space="preserve">
          <source>the number of probes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e612ff8397cdfddb88b0fd35448d4ef0d70c7d1" translate="yes" xml:space="preserve">
          <source>the operation for concatenation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f9d5acbe7f0ee9cf6b3557a03b70386a7de371" translate="yes" xml:space="preserve">
          <source>the operation that is applied to each expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b4d3162c2a2638115b7efe96247d19a11671e2" translate="yes" xml:space="preserve">
          <source>the operation to emit a string literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff5d3558835b330d137d5e1138d6ae5dfb413c7" translate="yes" xml:space="preserve">
          <source>the parser object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23ee668f9e5c5606c33e4d3b6b55b31b31b2685" translate="yes" xml:space="preserve">
          <source>the possible messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad08d8158d04f90feb28d2b37b80c3d19e67d81" translate="yes" xml:space="preserve">
          <source>the possible node kinds of an PRstNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80ff000071b4a5a671c90b6ca38a8c02a9ccfa2" translate="yes" xml:space="preserve">
          <source>the requested HttpMethod</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4624373dc47416a5874423cb7e00122fb2a230b0" translate="yes" xml:space="preserve">
          <source>the root of Nim's object hierarchy. Objects should inherit from RootObj or one of its descendants. However, objects that have no ancestor are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e93e817d3ab5ed8eed73ba457c39fc98fc1a9a3" translate="yes" xml:space="preserve">
          <source>the rope's length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9925c4480ffff1c0af77cf9823d9be9dedbf7c80" translate="yes" xml:space="preserve">
          <source>the same as 'd'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae7b4ca8f5568629d1dabee3ef25ddc843a648e" translate="yes" xml:space="preserve">
          <source>the same as &lt;code&gt;match&lt;/code&gt;, but it returns the length of the match, if there is no match, -1 is returned. Note that a match length of zero can happen. It's possible that a suffix of &lt;em&gt;s&lt;/em&gt; remains that does not belong to the match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fc849f6d10cdca9d10f5d8823bd4a267e86880" translate="yes" xml:space="preserve">
          <source>the same as &lt;code&gt;match&lt;/code&gt;, but it returns the length of the match, if there is no match, &lt;code&gt;-1&lt;/code&gt; is returned. Note that a match length of zero can happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c0ee156d0e33e702b56dbcfe5aa9fac29aaf18" translate="yes" xml:space="preserve">
          <source>the set of characters a newline terminator can start with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa091474ba44e16493b969e1ce5883a484efcd4" translate="yes" xml:space="preserve">
          <source>the set of characters an identifier can consist of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743dbe86698a8a3cb476bd853aa71bd341af2cc6" translate="yes" xml:space="preserve">
          <source>the set of characters an identifier can start with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab803034d3b047017297a0f26e0a490d7534e252" translate="yes" xml:space="preserve">
          <source>the set of digits</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
