<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="ec2973baecba84a63c51c253c497b4531e7ac1f6" translate="yes" xml:space="preserve">
          <source>The field name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c57dfed26a833323abd6ee6e781ce11eb309cd" translate="yes" xml:space="preserve">
          <source>The field name being retrieved. It can either be an integer containing the column number of the field you want; or it can be a string containing the name of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e477f8e61fa71357c16592bd445ae023827d4188" translate="yes" xml:space="preserve">
          <source>The field name for the override.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33ac69d0c9c71c7570a2a9d36496f3c49e798dc" translate="yes" xml:space="preserve">
          <source>The field name to collapse on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ccfe22096b2a37a9310195ab5894dd7fa764e9" translate="yes" xml:space="preserve">
          <source>The field name to collapse on. In order to collapse a result. The field type must be a single valued String, Int or Float.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ae2178cbabfdf0cc9de53b63a3de46b8de65e0" translate="yes" xml:space="preserve">
          <source>The field name, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ddc8fc1db0647b2017cd46bd6e083f9a8d384e" translate="yes" xml:space="preserve">
          <source>The field name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c498eb03784eae08cfdb0abdcc4ba3f33108d89a" translate="yes" xml:space="preserve">
          <source>The field number (numbered from 0), or -1 on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6cbdb742a65839bde825372c5ffe4c544216c2" translate="yes" xml:space="preserve">
          <source>The field number. Field numbering starts at 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39113516ea0520495e2a9191145f94a4db62ee8e" translate="yes" xml:space="preserve">
          <source>The field number. This value must be in the range from &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;number of fields - 1&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf8e0aa79df5efe6ef0ae17aeb3659187d35cbb" translate="yes" xml:space="preserve">
          <source>The field offset. Must be between zero and the total number of rows minus one (0..&lt;a href=&quot;mysqli-result.num-rows&quot;&gt;mysqli_num_rows()&lt;/a&gt; - 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a2c3267d1c1b552b232c18a6aa4b60b2705552e" translate="yes" xml:space="preserve">
          <source>The field printed length, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543e370deb52045e2c51691bfd5fa01333ffa48e" translate="yes" xml:space="preserve">
          <source>The field that represents the quantity being compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fec8319da0b184da0ec254973171ad162b375b" translate="yes" xml:space="preserve">
          <source>The field value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d0d2af554933f491eb881526f55a110b21be74" translate="yes" xml:space="preserve">
          <source>The fifth parameter is optional, &lt;code&gt;errcontext&lt;/code&gt;, which is an array that points to the active symbol table at the point the error occurred. In other words, &lt;code&gt;errcontext&lt;/code&gt; will contain an array of every variable that existed in the scope the error was triggered in. User error handler must not modify error context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de064419c7aff81010b69bec49651ee8edc53ce" translate="yes" xml:space="preserve">
          <source>The fifth parameter, &lt;code&gt;public_id&lt;/code&gt;, is the public identifier as specified in the entity declaration, or an empty string if none was specified; the whitespace in the public identifier will have been normalized as required by the XML spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60adcb9895c59e737955cfe81d247e78294dade" translate="yes" xml:space="preserve">
          <source>The file &lt;em&gt;project.tar&lt;/em&gt; can then be used immediately. &lt;strong&gt;PharData::buildFromIterator()&lt;/strong&gt; does not set values such as compression, metadata, and this can be done after creating the tar/zip archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af46228afe246b21638472f4c6b34f99af5e6ab0" translate="yes" xml:space="preserve">
          <source>The file URL which should be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9264847cfde1549c3be19e219ba4dfbe607ed56" translate="yes" xml:space="preserve">
          <source>The file access mode of the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb5c39cde03452e462d61cb79affe50062b75f0" translate="yes" xml:space="preserve">
          <source>The file contents to store</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbf93eef1a83b3fc24bf08307a972af9819f865" translate="yes" xml:space="preserve">
          <source>The file descriptor in the &lt;a href=&quot;class.evio&quot;&gt;EvIo&lt;/a&gt; watcher has become readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a48594e94a93d2f472152511a3327e9a6e219a" translate="yes" xml:space="preserve">
          <source>The file descriptor in the &lt;a href=&quot;class.evio&quot;&gt;EvIo&lt;/a&gt; watcher has become writable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafa353728f289df55c61b1aa997704a66eae83f" translate="yes" xml:space="preserve">
          <source>The file descriptor numbers are not limited to 0, 1 and 2 - you may specify any valid file descriptor number and it will be passed to the child process. This allows your script to interoperate with other scripts that run as &quot;co-processes&quot;. In particular, this is useful for passing passphrases to programs like PGP, GPG and openssl in a more secure manner. It is also useful for reading status information provided by those programs on auxiliary file descriptors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f05c155c09ad28ddd0981b6d6caf9c1869253aa" translate="yes" xml:space="preserve">
          <source>The file descriptor or a resource associated with the listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497fad631793ffff35a5a34759889c22586cda1a" translate="yes" xml:space="preserve">
          <source>The file descriptor, which is expected to be either a file &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; or an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;. An &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; will be assumed to be a file descriptor that can be passed directly to the underlying system call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934872c1d1354e3ebaaddb3d6ba057886727d3b2" translate="yes" xml:space="preserve">
          <source>The file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5884144bbc6fbc8e24907cfba63920b1da0f639d" translate="yes" xml:space="preserve">
          <source>The file from which to extract the last modification time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9644518b6cbae8c8d20c82d01f7a922b3cc22c" translate="yes" xml:space="preserve">
          <source>The file handle is a handle returned by &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f85fdfd8fe17e44c5e4709f762eb7505c83191" translate="yes" xml:space="preserve">
          <source>The file is automatically removed when closed (for example, by calling &lt;a href=&quot;function.fclose&quot;&gt;fclose()&lt;/a&gt;, or when there are no remaining references to the file handle returned by &lt;strong&gt;tmpfile()&lt;/strong&gt;), or when the script ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3b184a5632c4fe7750b05b9bb99be3946c0a1c" translate="yes" xml:space="preserve">
          <source>The file name containing the dump, likely from &lt;a href=&quot;function.apc-bin-dumpfile&quot;&gt;apc_bin_dumpfile()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a36329c6b65810e782b4aa195f3b0e79001d88" translate="yes" xml:space="preserve">
          <source>The file name for your private key. If not used, libcurl defaults to $HOME/.ssh/id_dsa if the HOME environment variable is set, and just &quot;id_dsa&quot; in the current directory if HOME is not set. If the file is password-protected, set the password with &lt;strong&gt;&lt;code&gt;CURLOPT_KEYPASSWD&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1151733aad665f30e85c537e4db4a329b068b92" translate="yes" xml:space="preserve">
          <source>The file name for your public key. If not used, libcurl defaults to $HOME/.ssh/id_dsa.pub if the HOME environment variable is set, and just &quot;id_dsa.pub&quot; in the current directory if HOME is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e93605761ce86cd027bd72c6e65e0b2c62fb9a3" translate="yes" xml:space="preserve">
          <source>The file name of the ZIP archive to open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8e058e84bf3bc453cf035cfc7f2bf238000df0" translate="yes" xml:space="preserve">
          <source>The file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432f89a5ae614f06635fc56d2b1cae738af5f945" translate="yes" xml:space="preserve">
          <source>The file name. This file will be opened from the filesystem and its contents written to standard output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d60c921a4fcf810c0431d62a0af825732b14f2" translate="yes" xml:space="preserve">
          <source>The file names being dumped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6f148540a73e04e517b0350c8d2d3f3ca647d9" translate="yes" xml:space="preserve">
          <source>The file owner of the file, in numerical format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863d7e4121b5d75c65b19b76759c4ad014ad19ae" translate="yes" xml:space="preserve">
          <source>The file path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657e042ba69ff0d63c3ea77ed05eb47efc07471c" translate="yes" xml:space="preserve">
          <source>The file path or URL to set metadata. Note that in the case of a URL, it must be a :// delimited URL. Other URL forms are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd89d8cccd62d822edbafe1a06dbee892a7a8dc1" translate="yes" xml:space="preserve">
          <source>The file path or URL to stat. Note that in the case of a URL, it must be a :// delimited URL. Other URL forms are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0b522f771efb3898574b40215d0b5757894b65" translate="yes" xml:space="preserve">
          <source>The file pointed to by &lt;code&gt;handle&lt;/code&gt; is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c82e5481d42bd97c5d3465ea51ddaa0e239635" translate="yes" xml:space="preserve">
          <source>The file pointer is &lt;em&gt;not&lt;/em&gt; changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24bd318ebaed15cc0cb875005fedff61cae7cf57" translate="yes" xml:space="preserve">
          <source>The file pointer must be valid, and must have been returned by a successful call to &lt;a href=&quot;function.popen&quot;&gt;popen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edff343f3e73133f11d6b22a3c5202a19f6e2c82" translate="yes" xml:space="preserve">
          <source>The file pointer must be valid, and must point to a file successfully opened by &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; or &lt;a href=&quot;function.fsockopen&quot;&gt;fsockopen()&lt;/a&gt; (and not yet closed by &lt;a href=&quot;function.fclose&quot;&gt;fclose()&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d59ec30f92d2c82c5d1f82b84867aa68aa9bb5c" translate="yes" xml:space="preserve">
          <source>The file pointer must be valid, and must point to a file successfully opened by &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; or &lt;a href=&quot;function.fsockopen&quot;&gt;fsockopen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8bc71d0579fbe32ce8e4405832c296036e1b44" translate="yes" xml:space="preserve">
          <source>The file pointer must be valid, and must point to a file successfully opened by &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; or &lt;a href=&quot;function.popen&quot;&gt;popen()&lt;/a&gt;. &lt;strong&gt;ftell()&lt;/strong&gt; gives undefined results for append-only streams (opened with &quot;a&quot; flag).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634f75c4b3ac838d02e6b989655afe3bbfc86b21" translate="yes" xml:space="preserve">
          <source>The file pointer must be valid, and must point to a file successfully opened by &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be15ca0632f425efdd773efbc6a0ef14fe3c8399" translate="yes" xml:space="preserve">
          <source>The file pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999dfc5bdd79ddb210f24c4e8c92de500a95d331" translate="yes" xml:space="preserve">
          <source>The file pointer. It must be valid and must point to a file successfully opened by &lt;a href=&quot;function.bzopen&quot;&gt;bzopen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88390910359bc42665cdfb520cf64b2e370fbac0" translate="yes" xml:space="preserve">
          <source>The file project.phar can then be used immediately. &lt;strong&gt;Phar::buildFromIterator()&lt;/strong&gt; does not set values such as compression, metadata, and this can be done after creating the phar archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436bef363cf2b914348e23dd03201b8b5ca0f339" translate="yes" xml:space="preserve">
          <source>The file that the header part of the transfer is written to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b59f976daf37066f06d1cdf00042fa5c414dd73b" translate="yes" xml:space="preserve">
          <source>The file that the transfer should be read from when uploading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f80e2c97db94caf4e399bd415c9ef9f490afa94" translate="yes" xml:space="preserve">
          <source>The file that the transfer should be written to. The default is &lt;em&gt;STDOUT&lt;/em&gt; (the browser window).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60863bfa6d7b9ac53df69a1ad68bc7921b4db75" translate="yes" xml:space="preserve">
          <source>The file that the virtual command will be performed on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84260d8c301ea582da17b383712c7592a78f6e6" translate="yes" xml:space="preserve">
          <source>The file to be repaired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2002af63b993c95c0f45227d71acaa8037633380" translate="yes" xml:space="preserve">
          <source>The file to create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a60b7bb538135954838fe29879b5dc980e0062" translate="yes" xml:space="preserve">
          <source>The file to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ec8f151e8cb1bbd12b077481e986233b8e9573" translate="yes" xml:space="preserve">
          <source>The file to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4bdc56fdd1c57f0ce7ad061ec3d7d4990a66ef4" translate="yes" xml:space="preserve">
          <source>The file which the digital signature will be written to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398ab1c00cef778bc2f963fae2295b3edb87bdcf" translate="yes" xml:space="preserve">
          <source>The file will be created with the mode specified by &lt;code&gt;create_mode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552bd26b6c475a1374de92e4954676c79da00420" translate="yes" xml:space="preserve">
          <source>The filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccac1cf7224047659fc13ec43ff687595f1dac2" translate="yes" xml:space="preserve">
          <source>The filename (URI) that's being requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbe9128f959d643d93e8f50a4e159b0a0887aa1" translate="yes" xml:space="preserve">
          <source>The filename (relative path) to look for in a Phar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5223ef04d9b6f23f0855349679470549d559c0" translate="yes" xml:space="preserve">
          <source>The filename (relative path) to modify in a Phar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb99d90d86f020b7ab97a551126625a57681b984" translate="yes" xml:space="preserve">
          <source>The filename (relative path) to modify in a tar or zip archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5ce0036f1d2b52861ebb1dac5377032323f233" translate="yes" xml:space="preserve">
          <source>The filename (relative path) to modify in the tar/zip archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae5145460e243811270c755ffab0335b8dcdae2" translate="yes" xml:space="preserve">
          <source>The filename being checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f31eb2a61575a071eed8164f09b81e3d494026" translate="yes" xml:space="preserve">
          <source>The filename being read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2cf8dc56394b2bff82a101c2f5b2f860e52c0f" translate="yes" xml:space="preserve">
          <source>The filename of the XSD schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e29ae37190cfb15b6fd452e742c8c162ddeda0c" translate="yes" xml:space="preserve">
          <source>The filename of the currently executing script, relative to the document root. For instance, &lt;var&gt;&lt;var&gt;$_SERVER['PHP_SELF']&lt;/var&gt;&lt;/var&gt; in a script at the address &lt;var&gt;http://example.com/foo/bar.php&lt;/var&gt; would be &lt;var&gt;/foo/bar.php&lt;/var&gt;. The &lt;a href=&quot;language.constants.predefined&quot;&gt;__FILE__&lt;/a&gt; constant contains the full path and filename of the current (i.e. included) file.  If PHP is running as a command-line processor this variable contains the script name since PHP 4.3.0. Previously it was not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dffe6be3be977bba5a890123b2471f4a04d6038" translate="yes" xml:space="preserve">
          <source>The filename of the file to hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0c86bf777d48a5335fa13846bc6607a8a6f27f" translate="yes" xml:space="preserve">
          <source>The filename of the file to read the hash from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3061473981b65a2ab7caefc5da57ab5febf321f" translate="yes" xml:space="preserve">
          <source>The filename of the file to read the set from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="181f7c6958c476d202c145332e854268db662920" translate="yes" xml:space="preserve">
          <source>The filename of the file to store the hash in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6526c56161f032800f208997b00bbc3b9c763b7" translate="yes" xml:space="preserve">
          <source>The filename of the ini file being parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ac5036ee3eaa2978a9a8fef9c61ab1e705bf3b" translate="yes" xml:space="preserve">
          <source>The filename of the uploaded file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb069480b93758c9d7edf22001eb53014f1434d" translate="yes" xml:space="preserve">
          <source>The filename to read the information from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9d2dfa41390cae091dc95b2658eba3b1fae1b9" translate="yes" xml:space="preserve">
          <source>The filename to resolve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7f414717377a832e6b2774a2bbdfb743eed628" translate="yes" xml:space="preserve">
          <source>The filename where the dump is being saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bad288d0733a17da3f66288e91864aac6c969f6" translate="yes" xml:space="preserve">
          <source>The filename where the error happened</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909311b03a719f19de846a1a0905588d264f5f86" translate="yes" xml:space="preserve">
          <source>The filename where the exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8769bbe62e4a04ee1b37dc43509fa79111394de" translate="yes" xml:space="preserve">
          <source>The filename where the exception was created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2e39d2c1276fecf31dccedcb3374c39a5df97f" translate="yes" xml:space="preserve">
          <source>The filename, file information, or $this depending on the set flags. See the &lt;a href=&quot;class.filesystemiterator#filesystemiterator.constants&quot;&gt;FilesystemIterator constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eafdf4fdc110200b9fcfd649ad27ee8a355476a5" translate="yes" xml:space="preserve">
          <source>The filename, or empty if the XML was loaded from a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e6fb1c6f484ae15d3065837532041a4bcf6093" translate="yes" xml:space="preserve">
          <source>The filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b679d8b0949009ef9648da81990f624b0a21539" translate="yes" xml:space="preserve">
          <source>The files context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737446b14143dc3768fd13a19e3978adf15ca281" translate="yes" xml:space="preserve">
          <source>The files to be deleted. Accepts a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; of strings, or an &lt;a href=&quot;class.apciterator&quot;&gt;APCIterator&lt;/a&gt;&lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f21eb09195f088564ad513104abf3adcf859d3" translate="yes" xml:space="preserve">
          <source>The files. Passing in &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; signals a dump of every entry, while passing in &lt;a href=&quot;function.array&quot;&gt;array()&lt;/a&gt; will dump nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f043d1dd1d96791f0bbafd5182181a3b61176851" translate="yes" xml:space="preserve">
          <source>The filesize in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9172d00a938251c62425cfed7de54bad49b30b" translate="yes" xml:space="preserve">
          <source>The fill color. A color identifier created with &lt;a href=&quot;function.imagecolorallocate&quot;&gt;imagecolorallocate()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2cc2c3c2a5ea8ef14e491bc91ad3896eccf604e" translate="yes" xml:space="preserve">
          <source>The filter experienced an unrecoverable error and cannot continue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2b4547c2fde8c606dec83e3d6bd3b4648e572b" translate="yes" xml:space="preserve">
          <source>The filter extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3e318342dff18294c2b28cfa40154b1de583a1" translate="yes" xml:space="preserve">
          <source>The filter name to be registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4ed3e17eaafbebdc081745f7f17963aafadd78" translate="yes" xml:space="preserve">
          <source>The filter name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44f4af2566cbcc48a46b693af6d2f2932584253" translate="yes" xml:space="preserve">
          <source>The filter query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3cc94c0875bd21ebda3478b42e81cd42e12068" translate="yes" xml:space="preserve">
          <source>The filter query to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43719665f2dc2becc54374f7cd3553152b58ce6c" translate="yes" xml:space="preserve">
          <source>The finfo class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5776fd8f7486aa50863dd72bbcaf56339b232c" translate="yes" xml:space="preserve">
          <source>The first array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b2bf4eb2bedf6a0fcad0835fadef872fc1ae8b" translate="yes" xml:space="preserve">
          <source>The first array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3519cd7733020ea1ea719d04e3b1fda56946e0" translate="yes" xml:space="preserve">
          <source>The first call fails because the image has no header information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c84f2a09236f2aaa4e892ddbdc5edbf12894c5c" translate="yes" xml:space="preserve">
          <source>The first call to &lt;strong&gt;ibase_trans()&lt;/strong&gt; will not return the default transaction of a connection. All transactions started by &lt;strong&gt;ibase_trans()&lt;/strong&gt; will be rolled back at the end of the script if they were not committed or rolled back by either &lt;a href=&quot;function.ibase-commit&quot;&gt;ibase_commit()&lt;/a&gt; or &lt;a href=&quot;function.ibase-rollback&quot;&gt;ibase_rollback()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bef382f0af220f48c9cbb63135d0037eefcdbb" translate="yes" xml:space="preserve">
          <source>The first call to &lt;strong&gt;imagecolorallocate()&lt;/strong&gt; fills the background color in palette-based images - images created using &lt;a href=&quot;function.imagecreate&quot;&gt;imagecreate()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b76a08119c04620742bfa0ee59eab6274343b9" translate="yes" xml:space="preserve">
          <source>The first call to &lt;strong&gt;odbc_result()&lt;/strong&gt; returns the value of the third field in the current record of the query result. The second function call to &lt;strong&gt;odbc_result()&lt;/strong&gt; returns the value of the field whose field name is &quot;val&quot; in the current record of the query result. An error occurs if a column number parameter for a field is less than one or exceeds the number of columns (or fields) in the current record. Similarly, an error occurs if a field with a name that is not one of the fieldnames of the table(s) that is(are) being queried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682d4f2df0cf19d9923e6f158fd9e6b5bc44c38a" translate="yes" xml:space="preserve">
          <source>The first child of this node. If there is no such node, this returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f2070001c4d10c64185be46594df155da45810" translate="yes" xml:space="preserve">
          <source>The first code point in the enumeration range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c59ab3dcdbc77d60f1ecf1a5ec98a8941f7c36e" translate="yes" xml:space="preserve">
          <source>The first example above would be implemented as follows in PHP 5.5 and earlier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6a1351f4b23c2514e33afb0a0be21034b740f9" translate="yes" xml:space="preserve">
          <source>The first expression (&lt;var&gt;&lt;var&gt;expr1&lt;/var&gt;&lt;/var&gt;) is evaluated (executed) once unconditionally at the beginning of the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8238385dfe08bc8ad94d017a1691889fd67025" translate="yes" xml:space="preserve">
          <source>The first filename entry is the message body. The next entries are the decoded uuencoded files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c8fc241c3bd5d4ca3bd0a2f0612e949362d7b1" translate="yes" xml:space="preserve">
          <source>The first form loops over the array given by &lt;em&gt;array_expression&lt;/em&gt;. On each iteration, the value of the current element is assigned to &lt;em&gt;$value&lt;/em&gt; and the internal array pointer is advanced by one (so on the next iteration, you'll be looking at the next element).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbb3930f8d1367edf207170ceaef64e7666af79" translate="yes" xml:space="preserve">
          <source>The first index of the returned array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9180d075a534b4354480162f18e029f56697948" translate="yes" xml:space="preserve">
          <source>The first item from the objects property table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf2c18f377ba119e3c986912065b93468809a72" translate="yes" xml:space="preserve">
          <source>The first line in the example above will try to open the &lt;em&gt;DES&lt;/em&gt; cipher from the default directory and the &lt;em&gt;ECB&lt;/em&gt; mode from the directory &lt;var&gt;/usr/lib/mcrypt-modes&lt;/var&gt;. The second example uses strings as name for the cipher and mode, this only works when the extension is linked against libmcrypt 2.4.x or 2.5.x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb08d839ddbec94ba6b01b3e3e3b808c7829e10" translate="yes" xml:space="preserve">
          <source>The first name of the new database user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3354e3b215411e624b18e41208da43c4922a4c43" translate="yes" xml:space="preserve">
          <source>The first pair in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43052e16841b0c8ff03c38458634b1e89acc1ddd" translate="yes" xml:space="preserve">
          <source>The first parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa0fc186558920ea241abacc660a7bd87a98b8d2" translate="yes" xml:space="preserve">
          <source>The first parameter, &lt;code&gt;errno&lt;/code&gt;, contains the level of the error raised, as an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f041fa9bc1724330048fd562d2f977ba5f0f589" translate="yes" xml:space="preserve">
          <source>The first parameter, parser, is a reference to the XML parser calling the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc5ffed3e11d97d450af28921524b28414854c3" translate="yes" xml:space="preserve">
          <source>The first part matches an optional opening parenthesis, and if that character is present, sets it as the first captured substring. The second part matches one or more characters that are not parentheses. The third part is a conditional subpattern that tests whether the first set of parentheses matched or not. If they did, that is, if subject started with an opening parenthesis, the condition is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, and so the yes-pattern is executed and a closing parenthesis is required. Otherwise, since no-pattern is not present, the subpattern matches nothing. In other words, this pattern matches a sequence of non-parentheses, optionally enclosed in parentheses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe385703a38cdbcc630600ca0328f51257de2553" translate="yes" xml:space="preserve">
          <source>The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or 2.5.x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9087be1793bc80dcff827f5cecdb9b3a56e389b" translate="yes" xml:space="preserve">
          <source>The first prototype is when linked against libmcrypt 2.2.x, the second when linked against libmcrypt 2.4.x or higher. The &lt;code&gt;mode&lt;/code&gt; should be either &lt;strong&gt;&lt;code&gt;MCRYPT_ENCRYPT&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;MCRYPT_DECRYPT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c9b9d328282660d2a3300f8f9a66136da8aded" translate="yes" xml:space="preserve">
          <source>The first samples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237303ada479daa08b89da756507ab7e59175afd" translate="yes" xml:space="preserve">
          <source>The first set of values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffaca13156c7c700bc6295d72a1db661bac3f97" translate="yes" xml:space="preserve">
          <source>The first string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1667f801e774176a64f4dc426d74b217a9f63595" translate="yes" xml:space="preserve">
          <source>The first string to compare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add36832d33d8d2cb188282e59f3b31140d76629" translate="yes" xml:space="preserve">
          <source>The first string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8be54600c22729b86011c690d26ba0fc6a914fe" translate="yes" xml:space="preserve">
          <source>The first summand (augent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b6b1afdcf46f9e0f179deeae587ad35450a164" translate="yes" xml:space="preserve">
          <source>The first time an instance of &lt;a href=&quot;class.yaf-application&quot;&gt;Yaf_Application&lt;/a&gt; is retrieved, &lt;strong&gt;Yaf_Loader&lt;/strong&gt; will instance a singleton, and registers itself with spl_autoload. You retrieve an instance using the &lt;a href=&quot;yaf-loader.getinstance&quot;&gt;Yaf_Loader::getInstance()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d57702f355f105e1780fb0298b794fae61bebad" translate="yes" xml:space="preserve">
          <source>The first value in the deque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd881e5968becbb7f1ee05203e31dd2ec2fcda8" translate="yes" xml:space="preserve">
          <source>The first value in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40bba688249973e7f0b724bc714bbd32dd9bd63d" translate="yes" xml:space="preserve">
          <source>The first value in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d871cefdae0967e1be399117c38d75715f27428a" translate="yes" xml:space="preserve">
          <source>The first value in the vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebb21291cac9816ffb8b5b44f5fbddccb2f0813" translate="yes" xml:space="preserve">
          <source>The first value, which was removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd0a7e181c9c6426a025442f9aac70043e43734" translate="yes" xml:space="preserve">
          <source>The flag to determine what to be calculated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000849714079a87235ed5639ab9907421dd43efa" translate="yes" xml:space="preserve">
          <source>The flags are specified by ORing the following values, or 0 for none of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5d4db1f762a913fc1fe8f872e47ceb21a0a2e7" translate="yes" xml:space="preserve">
          <source>The flags argument specifies how the name lookup should be done. Also, &lt;strong&gt;&lt;code&gt;ZipArchive::FL_UNCHANGED&lt;/code&gt;&lt;/strong&gt; may be ORed to it to request information about the original file in the archive, ignoring any changes made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c28b47d19a5d80608e97872ff6f980e25429b36" translate="yes" xml:space="preserve">
          <source>The flags for the get operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53762347c9c960db2958284eba7ac8e2381e800" translate="yes" xml:space="preserve">
          <source>The flags that you can use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8910aec2c52f9bfa80e15fb59df0b281112b93" translate="yes" xml:space="preserve">
          <source>The flags to set, a bitmask of class constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b3b158803c80e39b01e6f11253942e80236e7f" translate="yes" xml:space="preserve">
          <source>The flags to set, according to the &lt;a href=&quot;class.multipleiterator#multipleiterator.constants&quot;&gt;Flag Constants&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3982a506ef35ac13c53d0901d27f303f867870af" translate="yes" xml:space="preserve">
          <source>The flags to set, according to the &lt;a href=&quot;class.multipleiterator#multipleiterator.constants&quot;&gt;Flag Constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c952131af26b2322a94e6146d858d81a2c2ba96a" translate="yes" xml:space="preserve">
          <source>The flags to use to find the entry. The following values may be ORed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba04022c9689269b3e2239cbb62135240ca1f4a" translate="yes" xml:space="preserve">
          <source>The flags to use to open the archive. the following values may be ORed to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8927fe654acb9d2a3e8665b8b50407b7bcbaf6" translate="yes" xml:space="preserve">
          <source>The flags which you can set are &lt;em&gt;\Seen&lt;/em&gt;, &lt;em&gt;\Answered&lt;/em&gt;, &lt;em&gt;\Flagged&lt;/em&gt;, &lt;em&gt;\Deleted&lt;/em&gt;, and &lt;em&gt;\Draft&lt;/em&gt; as defined by &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2060&quot;&gt;&amp;raquo; RFC2060&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de313eea9b6ad6061c8acd778ceed689f4905aa" translate="yes" xml:space="preserve">
          <source>The flags which you can unset are &quot;\\Seen&quot;, &quot;\\Answered&quot;, &quot;\\Flagged&quot;, &quot;\\Deleted&quot;, and &quot;\\Draft&quot; (as defined by &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2060&quot;&gt;&amp;raquo; RFC2060&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0136a909a9e1038b960d67e7fd13f4a911451161" translate="yes" xml:space="preserve">
          <source>The flags. Use &lt;strong&gt;&lt;code&gt;CALL_TOSTRING&lt;/code&gt;&lt;/strong&gt; to call &lt;strong&gt;RecursiveCachingIterator::__toString()&lt;/strong&gt; for every element (the default), and/or &lt;strong&gt;&lt;code&gt;CATCH_GET_CHILD&lt;/code&gt;&lt;/strong&gt; to catch exceptions when trying to get children.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be833f3b37c4096497b2c44c62161b9a49fd161b" translate="yes" xml:space="preserve">
          <source>The flipped Gmagick object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d27f66642ff8ef3656eb87723941613ac90027d" translate="yes" xml:space="preserve">
          <source>The float value of the given variable. Empty arrays return 0, non-empty arrays return 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd756dcf70a0a745d02c76778b9e0c51a4328ca" translate="yes" xml:space="preserve">
          <source>The floating point remainder of &lt;code&gt;x&lt;/code&gt;/&lt;code&gt;y&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f588bb029c49894a0a6bccc21469360f6cc5c33" translate="yes" xml:space="preserve">
          <source>The flopped Gmagick object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d8644d812461663f5ca5a33c840b019cb27dab" translate="yes" xml:space="preserve">
          <source>The following Perl escape sequences are not supported: \l, \u, \L, \U. In fact these are implemented by Perl's general string-handling and are not part of its pattern matching engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e3288209d72aa1710046172f6c1a5fc55aa04a" translate="yes" xml:space="preserve">
          <source>The following RFCs may be useful: &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1896&quot;&gt;&amp;raquo; RFC 1896&lt;/a&gt;, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2045&quot;&gt;&amp;raquo; RFC 2045&lt;/a&gt;, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2046&quot;&gt;&amp;raquo; RFC 2046&lt;/a&gt;, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2047&quot;&gt;&amp;raquo; RFC 2047&lt;/a&gt;, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2048&quot;&gt;&amp;raquo; RFC 2048&lt;/a&gt;, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2049&quot;&gt;&amp;raquo; RFC 2049&lt;/a&gt;, and &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2822&quot;&gt;&amp;raquo; RFC 2822&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8905cfcc6695fd02ef041469ea13efde6bb64145" translate="yes" xml:space="preserve">
          <source>The following algorithms are currently supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93445ff4f88d7efaf6145c16e9c5baacfeac6f5a" translate="yes" xml:space="preserve">
          <source>The following are equivalent definitions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee99d656f07bf2843d1e7da3760a998ca0c02d7" translate="yes" xml:space="preserve">
          <source>The following character sets are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825de2e4562be939ebc1667c84169288e114f437" translate="yes" xml:space="preserve">
          <source>The following code is for PHP version 5.4.0 and above. We just show the invocation here, the full example can be seen in the &lt;a href=&quot;class.sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt; synopsis linked above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d531039d7eeb23503b78f8c45ce86c8b144470" translate="yes" xml:space="preserve">
          <source>The following code is for PHP versions less than 5.4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0e8b0d28104f15f5c09688ab3ad2a95628f661" translate="yes" xml:space="preserve">
          <source>The following code snippet allows you to write more portable PHP applications by auto-detecting the type of GD support which is available. Replace the sequence &lt;em&gt;header (&quot;Content-Type: image/gif&quot;); imagegif ($im);&lt;/em&gt; by the more flexible sequence:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d80d3f6902ae4924143b2a24c17ceec85527a4c" translate="yes" xml:space="preserve">
          <source>The following code snippet takes a date in ISO format (YYYY-MM-DD) and prints it in DD.MM.YYYY format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5828835b828d4f29f459eb9e19da9fe0fc932abf" translate="yes" xml:space="preserve">
          <source>The following constants are defined for cursortype:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712caa25ab605cc3b9031e15958fb1356b1e43e7" translate="yes" xml:space="preserve">
          <source>The following constants are defined, and represent possible &lt;strong&gt;exif_imagetype()&lt;/strong&gt; return values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c60be096612790df0766114f86761a8ee8e11d4" translate="yes" xml:space="preserve">
          <source>The following constants define the normalization form used by the normalizer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a67c9cdda50b2536b23d1d52221effb2ff94f4" translate="yes" xml:space="preserve">
          <source>The following directives are not parsed from the file: &lt;em&gt;sortlist, rotate, no-check-names, inet6, debug&lt;/em&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb713705c8ef7aa092f0fe449bcac848c84cbfd" translate="yes" xml:space="preserve">
          <source>The following drivers support this method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9aed624f312abb98403b762dfa76c2c2cc82d94" translate="yes" xml:space="preserve">
          <source>The following element may be set for the &lt;strong&gt;&lt;code&gt;SIGPOLL&lt;/code&gt;&lt;/strong&gt; signal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ead09804b89a6bb6b397490f9c4b71d60b55d0" translate="yes" xml:space="preserve">
          <source>The following elements are set for all signals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0586029d72e248a447f75ecd732997ec11ef50" translate="yes" xml:space="preserve">
          <source>The following elements may be set for the &lt;strong&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/strong&gt; signal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f425f498f319f2bcf5af90dec12eee5f7befbad4" translate="yes" xml:space="preserve">
          <source>The following elements may be set for the &lt;strong&gt;&lt;code&gt;SIGILL&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;SIGFPE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;SIGSEGV&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;SIGBUS&lt;/code&gt;&lt;/strong&gt; signals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6eb84255abc1ae2a281f44cb26269c0fa1ae648" translate="yes" xml:space="preserve">
          <source>The following error types cannot be handled with a user defined function: &lt;strong&gt;&lt;code&gt;E_ERROR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;E_PARSE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;E_CORE_ERROR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;E_CORE_WARNING&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;E_COMPILE_ERROR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;E_COMPILE_WARNING&lt;/code&gt;&lt;/strong&gt;, and most of &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; raised in the file where &lt;strong&gt;set_error_handler()&lt;/strong&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0426403090c3408ab16db813fa4e873cf1eb9587" translate="yes" xml:space="preserve">
          <source>The following example assumes that &lt;var&gt;php.ini&lt;/var&gt; contains the following entry to enable a connection to a MySQL database using only the alias &lt;em&gt;mydb&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5de2b5ac74c7e208b360f0920474ddbc3ff5475" translate="yes" xml:space="preserve">
          <source>The following example assumes that the file &lt;var&gt;/usr/local/dbconnect&lt;/var&gt; exists with file permissions that enable PHP to read the file. The file contains the PDO DSN to connect to a DB2 database through the PDO_ODBC driver:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bef5033ee06436d6e5f9afa0dd81fd22c6c6bf" translate="yes" xml:space="preserve">
          <source>The following example begins a transaction and issues two statements that modify the database before rolling back the changes. On MySQL, however, the DROP TABLE statement automatically commits the transaction so that none of the changes in the transaction are rolled back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ac048b5c065427c6b6d36d7eec84d6d39c4edc" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how &lt;strong&gt;PDOStatement::setFetchMode()&lt;/strong&gt; changes the default fetch mode for a PDOStatement object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3701b22a6540510b14f7c3d14cd4210a81f676" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to check whether or not given password matches the one defined in DN specified entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ae5ce61387e5f46c3d6253c9fa63a65f3bf291" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to create a two-dimensional array, how to specify keys for associative arrays, and how to skip-and-continue numeric indices in normal arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bdfc64431ad531f39caa444bcaf33e3aa36ada" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to retrieve a row as a stdClass object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418ce46df9af3b2e3cb49d599e859d441b0328a0" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to retrieve a row with &lt;a href=&quot;function.sqlsrv-fetch&quot;&gt;sqlsrv_fetch()&lt;/a&gt; and get the row fields with &lt;strong&gt;sqlsrv_get_field()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48433add523067674282089dc5242b39b4fb0d6" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to retrieve a row with &lt;strong&gt;sqlsrv_fetch()&lt;/strong&gt; and get the row fields with &lt;a href=&quot;function.sqlsrv-get-field&quot;&gt;sqlsrv_get_field()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8541579faf39e898958d7a97871430bec8175118" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to return all of the values of a single column from a result set, even though the SQL statement itself may return multiple columns per row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4b219ec86edd81b68315b6d0ed291101b64b4f" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to return an associative array grouped by the values of the specified column in the result set. The array contains three keys: values &lt;em&gt;apple&lt;/em&gt; and &lt;em&gt;pear&lt;/em&gt; are returned as arrays that contain two different colours, while &lt;em&gt;watermelon&lt;/em&gt; is returned as an array that contains only one colour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d153f321a15d61f9dbf78f36d9e3178d028c880d" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use &lt;a href=&quot;function.sqlsrv-begin-transaction&quot;&gt;sqlsrv_begin_transaction()&lt;/a&gt; together with &lt;a href=&quot;function.sqlsrv-commit&quot;&gt;sqlsrv_commit()&lt;/a&gt; and &lt;strong&gt;sqlsrv_rollback()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ca6465b1cea1f19d1b24fa115a4679ed48a0ef" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use &lt;strong&gt;sqlsrv_begin_transaction()&lt;/strong&gt; together with &lt;a href=&quot;function.sqlsrv-commit&quot;&gt;sqlsrv_commit()&lt;/a&gt; and &lt;a href=&quot;function.sqlsrv-rollback&quot;&gt;sqlsrv_rollback()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9270cec9fba097ea0dce04dd21c8f53a94aaa4" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use &lt;strong&gt;sqlsrv_commit()&lt;/strong&gt; together with &lt;a href=&quot;function.sqlsrv-begin-transaction&quot;&gt;sqlsrv_begin_transaction()&lt;/a&gt; and &lt;a href=&quot;function.sqlsrv-rollback&quot;&gt;sqlsrv_rollback()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a048f765cb36f476795da97aef3ea68540a6e29" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use &lt;strong&gt;stream_set_write_buffer()&lt;/strong&gt; to create an unbuffered stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d1be803d31276622c1fbcb76d1ca1aed57321c" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the behaviour of the &lt;strong&gt;&lt;code&gt;PDO::FETCH_CLASS&lt;/code&gt;&lt;/strong&gt; fetch style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491796cbb0c9e179905c9e8c05ade7488c669036" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the behaviour of the &lt;strong&gt;&lt;code&gt;PDO::FETCH_FUNC&lt;/code&gt;&lt;/strong&gt; fetch style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2d23f5006c93a7d92123b5898fd47a6f5e67cf" translate="yes" xml:space="preserve">
          <source>The following example executes a batch query that inserts into a table and then selects from the table. This produces two results on the statement: one for the rows affected by the INSERT and one for the rows returned by the SELECT. To get to the rows returned by the SELECT, &lt;strong&gt;sqlsrv_next_result()&lt;/strong&gt; must be called to move past the first result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e98b737c96cede01d5095471d447f9d29d5743" translate="yes" xml:space="preserve">
          <source>The following example incorrectly relies on the return value of &lt;strong&gt;PDO::exec()&lt;/strong&gt;, wherein a statement that affected 0 rows results in a call to &lt;a href=&quot;function.die&quot;&gt;die()&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f107e7ebbb73fb49b791e66fd0cf94ca59df1e14" translate="yes" xml:space="preserve">
          <source>The following example provides file based session storage similar to the PHP sessions default save handler &lt;code&gt;files&lt;/code&gt;. This example could easily be extended to cover database storage using your favorite PHP supported database engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004955b88889bc1b1994f441efed4724d9eb1f19" translate="yes" xml:space="preserve">
          <source>The following example should help you understand pre- and post-increment and expressions in general a bit better:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd020637c0ce3d05eb784492dc456ff673c19996" translate="yes" xml:space="preserve">
          <source>The following example shows accessing an external configuration file as if it were a path within a phar archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9ec2c6641db743936135eb50caaaa2b57aac7a" translate="yes" xml:space="preserve">
          <source>The following example shows an easy way to flush and end all output buffers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ae26a7b899cdab72c0a28af535cccf651c44b2" translate="yes" xml:space="preserve">
          <source>The following example shows an easy way to get rid of all output buffers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62314c9bb3c83516f5bb54b0bf8b5c15791737af" translate="yes" xml:space="preserve">
          <source>The following example shows how to call a stored procedure, MULTIPLE_ROWSETS, that returns three rowsets. We use a do / while loop to loop over the &lt;strong&gt;PDOStatement::nextRowset()&lt;/strong&gt; method, which returns false and terminates the loop when no more rowsets can be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6111295d1f4cfde07d498242a8813d9c0df4f156" translate="yes" xml:space="preserve">
          <source>The following example shows the results of retrieving the metadata for a single column generated by a function (COUNT) in a PDO_SQLITE driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df47035e30e5fc4175beed44bb2cb04266c2a64" translate="yes" xml:space="preserve">
          <source>The following example will add a new element node to a fresh document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593a783a66a479fdf63bbc18d62d625a742604b9" translate="yes" xml:space="preserve">
          <source>The following example will delete the &lt;em&gt;chapter&lt;/em&gt; element of our XML document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f6a4e89f3f174d0ac829985e924057eef6ac27" translate="yes" xml:space="preserve">
          <source>The following example would display a is bigger than b if &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; is bigger than &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ef19563fd2118d99821ba42f25ffe3de61f088" translate="yes" xml:space="preserve">
          <source>The following examples are based on a 32 bit system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81516ef198cf5f3df886f72653202df87c4bd5b3" translate="yes" xml:space="preserve">
          <source>The following examples are identical, and both print the numbers 1 through 10:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd556ea6ef60c9b7d83efbfc9b6af247c819f493" translate="yes" xml:space="preserve">
          <source>The following examples use &lt;var&gt;book.xml&lt;/var&gt; which contains the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d994c9a47a86b46bf5e1e6e532cc0fee61864164" translate="yes" xml:space="preserve">
          <source>The following int constants are used to specify the calendar. These calendars are all based directly on the Gregorian calendar. Non-Gregorian calendars need to be specified in locale. Examples might include locale=&quot;hi@calendar=BUDDHIST&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ad7915cdbf5aabf9ec8f4e6f650717a3e51ad5" translate="yes" xml:space="preserve">
          <source>The following options are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da7f373c3e8b4d996b97f3292cee10d3fc8ee9b" translate="yes" xml:space="preserve">
          <source>The following script combinations are legal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f835d689c7b22cc7140d775d4fc24eab381db7" translate="yes" xml:space="preserve">
          <source>The following sections describe the use of each of the meta-characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e232436b9f6734b35f37276aebe955f3d49bb1" translate="yes" xml:space="preserve">
          <source>The following statements change the values of &lt;var&gt;&lt;var&gt;$input&lt;/var&gt;&lt;/var&gt; the same way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066978fba8d3173a1a121641e041827e6fe92aec" translate="yes" xml:space="preserve">
          <source>The following table describes the elements in the array structure above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c115965d14c12b93398f90415767edeb026f8940" translate="yes" xml:space="preserve">
          <source>The following table lists the operators in order of precedence, with the highest-precedence ones at the top. Operators on the same line have equal precedence, in which case associativity decides grouping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7730585cf190a4229a3f3a2e0085ffddb4c95913" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, a, and b denotes cumurative distribution function, the value of the random variable, the lower bound and the higher bound of the uniform distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456200265b8f279c6902ed8cfea7ad26ab84c4fd" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, alpha, and beta denotes cumurative distribution function, the value of the random variable, and shape parameters of the beta distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30267bb6b9f655f20d7e1bb5e50a10c7bdb0e520" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, and k denotes cumurative distribution function, the value of the random variable, and the degree of freedom of the chi-square distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4123506bb72de0e31539c8f4730dfbb4c05d0855" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, and lambda denotes cumurative distribution function, the value of the random variable, and the parameter of the Poisson distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5f31e4fd4ecaf9c93bd7af4ad80a5af56469b7" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, and lambda denotes cumurative distribution function, the value of the random variable, and the rate parameter of the exponential distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be14b6a1c49eb4e27b227c17d19d28d758ed1e4" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, and nu denotes cumurative distribution function, the value of the random variable, and the degrees of freedom of the t-distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f595fa3609effa39470f43f1b2fe9e04ffa3e71" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, d1, and d2 denotes cumurative distribution function, the value of the random variable, and the degree of freedoms of the F distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c88d3644c8846afa1b32bebfe7b8bdf713f1af06" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, k, and lambda denotes cumurative distribution function, the value of the random variable, the degree of freedom and the non-centrality parameter of the distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1627d268fd18c9c9e75f4bc57bccdfcb9ef882fa" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, k, and lambda denotes cumurative distribution function, the value of the random variable, the shape and the scale parameter of the Weibull distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eac53f99c6b9a4074e0019f46b6c152b923b77" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, k, and theta denotes cumurative distribution function, the value of the random variable, and the shape and the scale parameter of the gamma distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ded926640c9f47aa88e8f3e71b0311e4777221d" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, mu, and b denotes cumurative distribution function, the value of the random variable, and the location and the scale parameter of the Laplace distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa4e98fd8e3e7fd4c0f7bc50fd5c875a8d1a8b1" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, mu, and s denotes cumurative distribution function, the value of the random variable, and the location and the scale parameter of the logistic distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6413a5f8c99ac1c214aa9cd1aa9880789809a4" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, mu, and sigma denotes cumurative distribution function, the value of the random variable, the mean and the standard deviation of the normal distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5b97f5b5cf04a78924cb692ec89e9100747485" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, n, and p denotes cumurative distribution function, the number of successes, the number of trials, and the success rate for each trial, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30627bc2451dc92953820dc0687a5a05bda84c3" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, nu, and mu denotes cumurative distribution function, the value of the random variable, the degrees of freedom and the non-centrality parameter of the distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ff04277f1a5ccb5bb92afe33831eb28181bd2d" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, nu1, nu2, and lambda denotes cumurative distribution function, the value of the random variable, the degree of freedoms and the non-centrality parameter of the distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d481c066f096e2aa6a6a74e6dae6423e1e6a4b76" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, r, and p denotes cumurative distribution function, the number of failure, the number of success, and the success rate for each trial, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef949142c620f16eda3a196d6dc33b3ad759367" translate="yes" xml:space="preserve">
          <source>The following table lists the return value and parameters by &lt;code&gt;which&lt;/code&gt;. CDF, x, x0, and gamma denotes cumurative distribution function, the value of the random variable, the location and the scale parameter of the Cauchy distribution, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77e1a42d835a83ae2689917917b15cb035f3c2f" translate="yes" xml:space="preserve">
          <source>The following things can be passed by reference:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2500f7a6b3917cf6acf3ec7c20afbeca28a08c" translate="yes" xml:space="preserve">
          <source>The following two examples are two different ways to write the same thing, one using a series of &lt;em&gt;if&lt;/em&gt; and &lt;em&gt;elseif&lt;/em&gt; statements, and the other using the &lt;em&gt;switch&lt;/em&gt; statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90c9b02bedec1a0120e8110e1674975fc782a15" translate="yes" xml:space="preserve">
          <source>The following two statements are functionally identical. The &lt;strong&gt;bcpowmod()&lt;/strong&gt; version however, executes in less time and can accept larger parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be44a152fd4d92562ad2086536dca57a5d36d64b" translate="yes" xml:space="preserve">
          <source>The following values are considered to be empty:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3921f3bb2ec04bfb36faea56d4f4b4a945f1c5f" translate="yes" xml:space="preserve">
          <source>The font file format is currently binary and architecture dependent. This means you should generate the font files on the same type of CPU as the machine you are running PHP on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db8da8445c179b1d6be9ed4a61b9678171817ea" translate="yes" xml:space="preserve">
          <source>The font identifier which is always bigger than 5 to avoid conflicts with built-in fonts or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc1760462683b77e5f0bcb55a9417fbd5ecfcab" translate="yes" xml:space="preserve">
          <source>The font name, size, and color are obtained from this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39f28a0e98a95b8e0be36fd4234f42856a982fe" translate="yes" xml:space="preserve">
          <source>The font size in points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1a9c2a4284a4e16e110f5e97188f9df96f4c9b" translate="yes" xml:space="preserve">
          <source>The font size to use in points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128b56098c261607ec2e355514a29b796b72f3a8" translate="yes" xml:space="preserve">
          <source>The foreign key owner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc917236e56ace12775694c67a41edbbad8b05a" translate="yes" xml:space="preserve">
          <source>The foreign key qualifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef1d937ff67c0be031e40e2331f03a88ed8c4d5" translate="yes" xml:space="preserve">
          <source>The foreign key table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95a7e184979b83087606c3d2c4437e4b6433506" translate="yes" xml:space="preserve">
          <source>The form of this version number is &lt;em&gt;main_version * 10000 + minor_version * 100 + sub_version&lt;/em&gt; (i.e. version 4.1.0 is 40100).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c308d7ddbccf6e1b719caa2c5b2c26411e09a2" translate="yes" xml:space="preserve">
          <source>The format for the &lt;code&gt;options&lt;/code&gt; and &lt;code&gt;longopts&lt;/code&gt; is almost the same, the only difference is that &lt;code&gt;longopts&lt;/code&gt; takes an array of options (where each element is the option) whereas &lt;code&gt;options&lt;/code&gt; takes a string (where each character is the option).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba01de590dd903297b737008096ee0766479134" translate="yes" xml:space="preserve">
          <source>The format of the certificate. Supported formats are &lt;em&gt;&quot;PEM&quot;&lt;/em&gt; (default), &lt;em&gt;&quot;DER&quot;&lt;/em&gt;, and &lt;em&gt;&quot;ENG&quot;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb17c15f1c99ab239dd87886658450ab3ee9523" translate="yes" xml:space="preserve">
          <source>The format of the outputted date &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;. See the formatting options below. There are also several &lt;a href=&quot;class.datetime#datetime.constants.types&quot;&gt;predefined date constants&lt;/a&gt; that may be used instead, so for example &lt;strong&gt;&lt;code&gt;DATE_RSS&lt;/code&gt;&lt;/strong&gt; contains the format string &lt;em&gt;'D, d M Y H:i:s'&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5da6892a6fab908620995afe9851df63ac49fb" translate="yes" xml:space="preserve">
          <source>The format of the outputted date &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;. See the formatting options for the &lt;a href=&quot;function.date&quot;&gt;date()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906aaa750117776f2e03ad3c06c729e6ac0ee48f" translate="yes" xml:space="preserve">
          <source>The format specification consists of the following sequence:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f755af86d2b0ce6e1bb038b76a34bdaee5610d44" translate="yes" xml:space="preserve">
          <source>The format starts with the letter &lt;em&gt;P&lt;/em&gt;, for &quot;period.&quot; Each duration period is represented by an integer value followed by a period designator. If the duration contains time elements, that portion of the specification is preceded by the letter &lt;em&gt;T&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8a2cb6ace43db8713c7aa787f42eedb97d6d3a" translate="yes" xml:space="preserve">
          <source>The format string is composed of zero or more directives: ordinary characters (excluding &lt;em&gt;%&lt;/em&gt;) that are copied directly to the result and &lt;em&gt;conversion specifications&lt;/em&gt;, each of which results in fetching its own parameter. This applies to both &lt;strong&gt;sprintf()&lt;/strong&gt; and &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9e9d3006d53916f34af33d8c7987d153e9b2fb" translate="yes" xml:space="preserve">
          <source>The format string supports argument numbering/swapping. Here is an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8425ce3a7ac3b001527a699d5f2c96cbad61088" translate="yes" xml:space="preserve">
          <source>The format that the passed in &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; should be in. See the formatting options below. In most cases, the same letters as for the &lt;a href=&quot;function.date&quot;&gt;date()&lt;/a&gt; can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc625c39aeb6f5afaae636853b9a3df8722dff7" translate="yes" xml:space="preserve">
          <source>The format used in &lt;code&gt;date&lt;/code&gt; (e.g. the same as used in &lt;a href=&quot;function.strftime&quot;&gt;strftime()&lt;/a&gt;). Note that some of the format options available to &lt;a href=&quot;function.strftime&quot;&gt;strftime()&lt;/a&gt; may not have any effect within &lt;strong&gt;strptime()&lt;/strong&gt;; the exact subset that are supported will vary based on the operating system and C library in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6c77c6859c39e2e6ec6e62126a54433d77e78f" translate="yes" xml:space="preserve">
          <source>The formatted pattern string or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d5d9d1d2c2d94da8f32b49f4d730d1b20f53ec" translate="yes" xml:space="preserve">
          <source>The formatted string or, if an error occurred, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61e148565a305110ba18dcabb7e36adb113f698" translate="yes" xml:space="preserve">
          <source>The formatted string, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a04bda2d9cd8d0bc107199a965630ff0b8927e1" translate="yes" xml:space="preserve">
          <source>The formatter &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3870f91cdb2048a7c1772b76ba9822c81096c950" translate="yes" xml:space="preserve">
          <source>The formatter resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4075a69147ea6a02a22b4bc9f578e5b0ef81b8a9" translate="yes" xml:space="preserve">
          <source>The formatter resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9b2f9a9dc648dc8cd1febbc03fcc8245500887" translate="yes" xml:space="preserve">
          <source>The formatting of this string must comply with &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2822&quot;&gt;&amp;raquo; RFC 2822&lt;/a&gt;. Some examples are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a164ba8ca1945dcbb07d9f22789c516910412505" translate="yes" xml:space="preserve">
          <source>The fourth parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13157f020d8509c053e53fb8e392905f0cf3aac4" translate="yes" xml:space="preserve">
          <source>The fourth parameter is optional, &lt;code&gt;errline&lt;/code&gt;, which contains the line number the error was raised at, as an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2900ca5cf0fdc955485e38dc50e8f3e66dbf752" translate="yes" xml:space="preserve">
          <source>The fourth parameter, &lt;code&gt;system_id&lt;/code&gt;, is the system identifier as specified in the entity declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac6bac287b363f3e2758b44d4d22ead99fa6700" translate="yes" xml:space="preserve">
          <source>The fourth use of backslash is for certain simple assertions. An assertion specifies a condition that has to be met at a particular point in a match, without consuming any characters from the subject string. The use of subpatterns for more complicated assertions is described below. The backslashed assertions are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c608b81e4193d1d0a39f8e2f0ac63ca51703cc" translate="yes" xml:space="preserve">
          <source>The framed Gmagick object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382ab52324eb7612cd29cfa46667cb70aa4977ea" translate="yes" xml:space="preserve">
          <source>The french revolution date as a string in the form &quot;month/day/year&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d884dc6c01b9775335fde4aec99e8d90397313c3" translate="yes" xml:space="preserve">
          <source>The frequency at which words will be ignored which do not occur in at least this many docs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e4bd14c76d9e3197805645b4e0542a6298986d" translate="yes" xml:space="preserve">
          <source>The frequency below which terms will be ignored in the source docs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a845e8c550ad361d5681e3db5add1c5dfbab8da8" translate="yes" xml:space="preserve">
          <source>The fruits have been sorted in alphabetical order, and the index associated with each element has been maintained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccca3a45ba7c4090e7e0e0603afcaefc3a26c9d" translate="yes" xml:space="preserve">
          <source>The fruits have been sorted in alphabetical order, and the key associated with each entry has been maintained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93206a9179cd3a2a88a159dcebec08befe243c2e" translate="yes" xml:space="preserve">
          <source>The fruits have been sorted in alphabetical order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d42a705c52b3b7992ce9c7919d7e7d5cbf50aa" translate="yes" xml:space="preserve">
          <source>The fruits have been sorted in reverse alphabetical order, and the index associated with each element has been maintained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ff19d92bb49665426ac7c8adf7cc99489aa474" translate="yes" xml:space="preserve">
          <source>The fruits have been sorted in reverse alphabetical order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0dc7ed369774b5ff413ffada0f4f19c92b6391" translate="yes" xml:space="preserve">
          <source>The fruits have been sorted like &lt;a href=&quot;function.natcasesort&quot;&gt;natcasesort()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e11a3954fbb6c7588d423b5e4b5c63ae53baf79" translate="yes" xml:space="preserve">
          <source>The full data to post in a HTTP &quot;POST&quot; operation. To post a file, prepend a filename with &lt;em&gt;@&lt;/em&gt; and use the full path. The filetype can be explicitly specified by following the filename with the type in the format '&lt;em&gt;;type=mimetype&lt;/em&gt;'. This parameter can either be passed as a urlencoded string like '&lt;em&gt;para1=val1&amp;amp;para2=val2&amp;amp;...&lt;/em&gt;' or as an array with the field name as key and field data as value. If &lt;code&gt;value&lt;/code&gt; is an array, the &lt;em&gt;Content-Type&lt;/em&gt; header will be set to &lt;em&gt;multipart/form-data&lt;/em&gt;.  As of PHP 5.2.0, &lt;code&gt;value&lt;/code&gt; must be an array if files are passed to this option with the &lt;em&gt;@&lt;/em&gt; prefix.  As of PHP 5.5.0, the &lt;em&gt;@&lt;/em&gt; prefix is deprecated and files can be sent using &lt;a href=&quot;class.curlfile&quot;&gt;CURLFile&lt;/a&gt;. The &lt;em&gt;@&lt;/em&gt; prefix can be disabled for safe passing of values beginning with &lt;em&gt;@&lt;/em&gt; by setting the &lt;strong&gt;&lt;code&gt;CURLOPT_SAFE_UPLOAD&lt;/code&gt;&lt;/strong&gt; option to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eb9b4b72429c89d9fbc98cabb5de87494b3f63" translate="yes" xml:space="preserve">
          <source>The full four-digit version of %g</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac534085486f2aa2e4ed883a1c7ecde26f30112d" translate="yes" xml:space="preserve">
          <source>The full or relative path to the directory that contains all files to add to the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ee4aa03b9245399bb34b622fefb5b1673f6d58" translate="yes" xml:space="preserve">
          <source>The full output contains these additional elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e87896810c3f09a6db4c17a7ef257d7812990f2" translate="yes" xml:space="preserve">
          <source>The full path and file name of the file in which to write the large object on the client filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963713cc939c6ed07823e02d57b458f900f8c601" translate="yes" xml:space="preserve">
          <source>The full path and file name of the file in which to write the trace log. Same as in &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d09b3748c7c797c0250734581444d04f8bc4967" translate="yes" xml:space="preserve">
          <source>The full path and file name of the file on the client filesystem from which to read the large object data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14a9617f8cd3d39f72998f84fb5748f19f52d13" translate="yes" xml:space="preserve">
          <source>The full path and filename of the file with symlinks resolved. If used inside an include, the name of the included file is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247d0b7bc3cb2ed5536f4b31b46e3c9b7f798533" translate="yes" xml:space="preserve">
          <source>The full path of where the GeoIP database is on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400505a75b493ead28350659bb029a37263c64f0" translate="yes" xml:space="preserve">
          <source>The full pathname for the &lt;code&gt;domain&lt;/code&gt; currently being set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602783436c79a84930d602d619f1dc38a105d832" translate="yes" xml:space="preserve">
          <source>The full url to retrieve a file. If you wish to retrieve the information for the file &lt;em&gt;my/file.php&lt;/em&gt; from the phar &lt;em&gt;boo.phar&lt;/em&gt;, the entry should be &lt;em&gt;phar://boo.phar/my/file.php&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83dca1034c933c3b12e896155b0ebff5139ebcaa" translate="yes" xml:space="preserve">
          <source>The fullwidth characters are: &lt;em&gt;U+1100&lt;/em&gt;-&lt;em&gt;U+115F&lt;/em&gt;, &lt;em&gt;U+11A3&lt;/em&gt;-&lt;em&gt;U+11A7&lt;/em&gt;, &lt;em&gt;U+11FA&lt;/em&gt;-&lt;em&gt;U+11FF&lt;/em&gt;, &lt;em&gt;U+2329&lt;/em&gt;-&lt;em&gt;U+232A&lt;/em&gt;, &lt;em&gt;U+2E80&lt;/em&gt;-&lt;em&gt;U+2E99&lt;/em&gt;, &lt;em&gt;U+2E9B&lt;/em&gt;-&lt;em&gt;U+2EF3&lt;/em&gt;, &lt;em&gt;U+2F00&lt;/em&gt;-&lt;em&gt;U+2FD5&lt;/em&gt;, &lt;em&gt;U+2FF0&lt;/em&gt;-&lt;em&gt;U+2FFB&lt;/em&gt;, &lt;em&gt;U+3000&lt;/em&gt;-&lt;em&gt;U+303E&lt;/em&gt;, &lt;em&gt;U+3041&lt;/em&gt;-&lt;em&gt;U+3096&lt;/em&gt;, &lt;em&gt;U+3099&lt;/em&gt;-&lt;em&gt;U+30FF&lt;/em&gt;, &lt;em&gt;U+3105&lt;/em&gt;-&lt;em&gt;U+312D&lt;/em&gt;, &lt;em&gt;U+3131&lt;/em&gt;-&lt;em&gt;U+318E&lt;/em&gt;, &lt;em&gt;U+3190&lt;/em&gt;-&lt;em&gt;U+31BA&lt;/em&gt;, &lt;em&gt;U+31C0&lt;/em&gt;-&lt;em&gt;U+31E3&lt;/em&gt;, &lt;em&gt;U+31F0&lt;/em&gt;-&lt;em&gt;U+321E&lt;/em&gt;, &lt;em&gt;U+3220&lt;/em&gt;-&lt;em&gt;U+3247&lt;/em&gt;, &lt;em&gt;U+3250&lt;/em&gt;-&lt;em&gt;U+32FE&lt;/em&gt;, &lt;em&gt;U+3300&lt;/em&gt;-&lt;em&gt;U+4DBF&lt;/em&gt;, &lt;em&gt;U+4E00&lt;/em&gt;-&lt;em&gt;U+A48C&lt;/em&gt;, &lt;em&gt;U+A490&lt;/em&gt;-&lt;em&gt;U+A4C6&lt;/em&gt;, &lt;em&gt;U+A960&lt;/em&gt;-&lt;em&gt;U+A97C&lt;/em&gt;, &lt;em&gt;U+AC00&lt;/em&gt;-&lt;em&gt;U+D7A3&lt;/em&gt;, &lt;em&gt;U+D7B0&lt;/em&gt;-&lt;em&gt;U+D7C6&lt;/em&gt;, &lt;em&gt;U+D7CB&lt;/em&gt;-&lt;em&gt;U+D7FB&lt;/em&gt;, &lt;em&gt;U+F900&lt;/em&gt;-&lt;em&gt;U+FAFF&lt;/em&gt;, &lt;em&gt;U+FE10&lt;/em&gt;-&lt;em&gt;U+FE19&lt;/em&gt;, &lt;em&gt;U+FE30&lt;/em&gt;-&lt;em&gt;U+FE52&lt;/em&gt;, &lt;em&gt;U+FE54&lt;/em&gt;-&lt;em&gt;U+FE66&lt;/em&gt;, &lt;em&gt;U+FE68&lt;/em&gt;-&lt;em&gt;U+FE6B&lt;/em&gt;, &lt;em&gt;U+FF01&lt;/em&gt;-&lt;em&gt;U+FF60&lt;/em&gt;, &lt;em&gt;U+FFE0&lt;/em&gt;-&lt;em&gt;U+FFE6&lt;/em&gt;, &lt;em&gt;U+1B000&lt;/em&gt;-&lt;em&gt;U+1B001&lt;/em&gt;, &lt;em&gt;U+1F200&lt;/em&gt;-&lt;em&gt;U+1F202&lt;/em&gt;, &lt;em&gt;U+1F210&lt;/em&gt;-&lt;em&gt;U+1F23A&lt;/em&gt;, &lt;em&gt;U+1F240&lt;/em&gt;-&lt;em&gt;U+1F248&lt;/em&gt;, &lt;em&gt;U+1F250&lt;/em&gt;-&lt;em&gt;U+1F251&lt;/em&gt;, &lt;em&gt;U+20000&lt;/em&gt;-&lt;em&gt;U+2FFFD&lt;/em&gt;, &lt;em&gt;U+30000&lt;/em&gt;-&lt;em&gt;U+3FFFD&lt;/em&gt;. All other characters are halfwidth characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1747b068905022d2da566cea7a5705c47807d72" translate="yes" xml:space="preserve">
          <source>The fully qualified class name. See also &lt;a href=&quot;language.oop5.basic#language.oop5.basic.class.class&quot;&gt;::class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace586f53416cd3d3d5f4a5ca4f25a1975910968" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;function.pg-result-error-field&quot;&gt;pg_result_error_field()&lt;/a&gt; can give much greater detail on result errors than &lt;strong&gt;pg_result_error()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b3daa17cbc0040bd2f8cbafa13c78e9d167e2f" translate="yes" xml:space="preserve">
          <source>The function &lt;a href=&quot;function.stream-socket-client&quot;&gt;stream_socket_client()&lt;/a&gt; is similar but provides a richer set of options, including non-blocking connection and the ability to provide a stream context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe904320c491a26afe3c7c4b2070ee0c1e9f62b" translate="yes" xml:space="preserve">
          <source>The function &lt;strong&gt;fscanf()&lt;/strong&gt; is similar to &lt;a href=&quot;function.sscanf&quot;&gt;sscanf()&lt;/a&gt;, but it takes its input from a file associated with &lt;code&gt;handle&lt;/code&gt; and interprets the input according to the specified &lt;code&gt;format&lt;/code&gt;, which is described in the documentation for &lt;a href=&quot;function.sprintf&quot;&gt;sprintf()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b7ccf090ca46f26735ac97b25e8d3688d873ed" translate="yes" xml:space="preserve">
          <source>The function &lt;strong&gt;ip2long()&lt;/strong&gt; generates an long integer representation of IPv4 Internet network address from its Internet standard format (dotted string) representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d76831c153ea39fbdb0d61855f815c728336ef" translate="yes" xml:space="preserve">
          <source>The function &lt;strong&gt;long2ip()&lt;/strong&gt; generates an Internet address in dotted format (i.e.: aaa.bbb.ccc.ddd) from the long integer representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88af5cb2addb8f454f3e733442b18ed945312676" translate="yes" xml:space="preserve">
          <source>The function &lt;strong&gt;money_format()&lt;/strong&gt; is only defined if the system has strfmon capabilities. For example, Windows does not, so &lt;strong&gt;money_format()&lt;/strong&gt; is undefined in Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0003277d72aa2b473d4aa3c8eaa41bb29846dcb7" translate="yes" xml:space="preserve">
          <source>The function &lt;strong&gt;realpath()&lt;/strong&gt; will not work for a file which is inside a Phar as such path would be a virtual path, not a real one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3992e0951326f7c644d412dfaff101d8473735c" translate="yes" xml:space="preserve">
          <source>The function &lt;strong&gt;socket_read()&lt;/strong&gt; reads from the socket resource &lt;code&gt;socket&lt;/code&gt; created by the &lt;a href=&quot;function.socket-create&quot;&gt;socket_create()&lt;/a&gt; or &lt;a href=&quot;function.socket-accept&quot;&gt;socket_accept()&lt;/a&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb93e296e10f79e67de3fce3f21d8228d4bb9c55" translate="yes" xml:space="preserve">
          <source>The function &lt;strong&gt;socket_send()&lt;/strong&gt; sends &lt;code&gt;len&lt;/code&gt; bytes to the socket &lt;code&gt;socket&lt;/code&gt; from &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79564d52e006c3837ab624578e50e36f82580a17" translate="yes" xml:space="preserve">
          <source>The function &lt;strong&gt;socket_sendto()&lt;/strong&gt; sends &lt;code&gt;len&lt;/code&gt; bytes from &lt;code&gt;buf&lt;/code&gt; through the socket &lt;code&gt;socket&lt;/code&gt; to the &lt;code&gt;port&lt;/code&gt; at the address &lt;code&gt;addr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff0f218e8990de094b39b4c68002b9c013cc470" translate="yes" xml:space="preserve">
          <source>The function &lt;strong&gt;socket_write()&lt;/strong&gt; writes to the &lt;code&gt;socket&lt;/code&gt; from the given &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89b92928fd0c81c4c6009cb2d3fd4f3a837a074" translate="yes" xml:space="preserve">
          <source>The function &lt;strong&gt;sscanf()&lt;/strong&gt; is the input analog of &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt;. &lt;strong&gt;sscanf()&lt;/strong&gt; reads from the string &lt;code&gt;str&lt;/code&gt; and interprets it according to the specified &lt;code&gt;format&lt;/code&gt;, which is described in the documentation for &lt;a href=&quot;function.sprintf&quot;&gt;sprintf()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a642ac8aae55fb4cafbacb546a0122c7ff1e89d" translate="yes" xml:space="preserve">
          <source>The function arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae509433c29f38737a1b9868012a87065bbc906f" translate="yes" xml:space="preserve">
          <source>The function can convert numbers that are too large to fit into the platforms &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; type, larger values are returned as &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; in that case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9212205620391a8e06accec9fd48adeab0bfdaf4" translate="yes" xml:space="preserve">
          <source>The function code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7393fecc19013c41f88d1aa70569e4e0a3379e33" translate="yes" xml:space="preserve">
          <source>The function converts the &lt;code&gt;pathname&lt;/code&gt; of an existing accessible file and a project identifier into an &lt;em&gt;integer&lt;/em&gt; for use with for example &lt;a href=&quot;function.shmop-open&quot;&gt;shmop_open()&lt;/a&gt; and other System V IPC keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edec9fe5d62a2933e32c14ac7e09bfe6b95178aa" translate="yes" xml:space="preserve">
          <source>The function creates a prepared statement named &lt;code&gt;stmtname&lt;/code&gt; from the &lt;code&gt;query&lt;/code&gt; string, which must contain a single SQL command. &lt;code&gt;stmtname&lt;/code&gt; may be &quot;&quot; to create an unnamed statement, in which case any pre-existing unnamed statement is automatically replaced; otherwise it is an error if the statement name is already defined in the current session. If any parameters are used, they are referred to in the &lt;code&gt;query&lt;/code&gt; as $1, $2, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70de594b8bffffe91ed921a225db3b047462d0b7" translate="yes" xml:space="preserve">
          <source>The function divides &lt;code&gt;n&lt;/code&gt; by &lt;code&gt;d&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3a8f0a8e3845bc5e1c2a16ec93d59ee91ccfb7" translate="yes" xml:space="preserve">
          <source>The function does not check if &lt;code&gt;key&lt;/code&gt; is indeed a private key or not. It merely compares the public materials (e.g. exponent and modulus of an RSA key) and/or key parameters (e.g. EC params of an EC key) of a key pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb39bbf9203e6c25b490bfa79d2db6f5333a3453" translate="yes" xml:space="preserve">
          <source>The function expects to be given a string containing an English date format and will try to parse that format into a Unix timestamp (the number of seconds since January 1 1970 00:00:00 UTC), relative to the timestamp given in &lt;code&gt;now&lt;/code&gt;, or the current time if &lt;code&gt;now&lt;/code&gt; is not supplied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0695bcb95cab1179252988a7f92ffb7d8d92983" translate="yes" xml:space="preserve">
          <source>The function first replaces &lt;em&gt;_&lt;/em&gt;, &lt;em&gt;-&lt;/em&gt; and &lt;em&gt;+&lt;/em&gt; with a dot &lt;em&gt;.&lt;/em&gt; in the version strings and also inserts dots &lt;em&gt;.&lt;/em&gt; before and after any non number so that for example '4.3.2RC1' becomes '4.3.2.RC.1'. Then it compares the parts starting from left to right. If a part contains special version strings these are handled in the following order: &lt;em&gt;any string not found in this list&lt;/em&gt; &amp;lt; &lt;em&gt;dev&lt;/em&gt; &amp;lt; &lt;em&gt;alpha&lt;/em&gt; = &lt;em&gt;a&lt;/em&gt; &amp;lt; &lt;em&gt;beta&lt;/em&gt; = &lt;em&gt;b&lt;/em&gt; &amp;lt; &lt;em&gt;RC&lt;/em&gt; = &lt;em&gt;rc&lt;/em&gt; &amp;lt; &lt;em&gt;#&lt;/em&gt; &amp;lt; &lt;em&gt;pl&lt;/em&gt; = &lt;em&gt;p&lt;/em&gt;. This way not only versions with different levels like '4.1' and '4.1.2' can be compared but also any PHP specific version containing development state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8d44c471e8e626aa6bcfd515e082c1344acd3a" translate="yes" xml:space="preserve">
          <source>The function name as a string, or an array consisting of an object and a method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1509a8f929478f7877e0f99fe82e2e73fb46bfde" translate="yes" xml:space="preserve">
          <source>The function name, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd88e0a29a4aed692f0ed42a9304d90f8c1ec00a" translate="yes" xml:space="preserve">
          <source>The function name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9418f05e3dd34fbed795380a91310ec2eb38348" translate="yes" xml:space="preserve">
          <source>The function named by &lt;code&gt;end_element_handler&lt;/code&gt; must accept two parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b0460412949cc4b5f25141d292d447478eab38" translate="yes" xml:space="preserve">
          <source>The function named by &lt;code&gt;handler&lt;/code&gt; must accept five parameters, and should return an integer value.If the value returned from the handler is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; (which it will be if no value is returned), the XML parser will stop parsing and &lt;a href=&quot;function.xml-get-error-code&quot;&gt;xml_get_error_code()&lt;/a&gt; will return &lt;strong&gt;&lt;code&gt;XML_ERROR_EXTERNAL_ENTITY_HANDLING&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8868eb547cac168a7c6a4e45376419b1ecfe5259" translate="yes" xml:space="preserve">
          <source>The function named by &lt;code&gt;handler&lt;/code&gt; must accept five parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310679d2da40d7aec3b75410ab2e04ce54252188" translate="yes" xml:space="preserve">
          <source>The function named by &lt;code&gt;handler&lt;/code&gt; must accept six parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2891d2767b4895a9e6f0372abd3db7160b82c690" translate="yes" xml:space="preserve">
          <source>The function named by &lt;code&gt;handler&lt;/code&gt; must accept three parameters, and should return an integer value. If the value returned from the handler is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; (which it will be if no value is returned), the XML parser will stop parsing and &lt;a href=&quot;function.xml-get-error-code&quot;&gt;xml_get_error_code()&lt;/a&gt; will return &lt;strong&gt;&lt;code&gt;XML_ERROR_EXTERNAL_ENTITY_HANDLING&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00702e446a7d6eb9883ded533ef596186dac122" translate="yes" xml:space="preserve">
          <source>The function named by &lt;code&gt;handler&lt;/code&gt; must accept three parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b62484bae3c8c677076af7c4a7a1d653615b90" translate="yes" xml:space="preserve">
          <source>The function named by &lt;code&gt;handler&lt;/code&gt; must accept two parameters, and should return an integer value. If the value returned from the handler is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; (which it will be if no value is returned), the XML parser will stop parsing and &lt;a href=&quot;function.xml-get-error-code&quot;&gt;xml_get_error_code()&lt;/a&gt; will return &lt;strong&gt;&lt;code&gt;XML_ERROR_EXTERNAL_ENTITY_HANDLING&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71214f1682a767861cbbb9e8aeddf13106e3195" translate="yes" xml:space="preserve">
          <source>The function named by &lt;code&gt;handler&lt;/code&gt; must accept two parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8127115b41a0149dcc5864e349d1ff804abe849" translate="yes" xml:space="preserve">
          <source>The function named by &lt;code&gt;start_element_handler&lt;/code&gt; must accept three parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d67a6fd38f3a242716cc29d786a1bed91bd872e" translate="yes" xml:space="preserve">
          <source>The function names &lt;a href=&quot;language.oop5.decon#object.construct&quot;&gt;__construct()&lt;/a&gt;, &lt;a href=&quot;language.oop5.decon#object.destruct&quot;&gt;__destruct()&lt;/a&gt;, &lt;a href=&quot;language.oop5.overloading#object.call&quot;&gt;__call()&lt;/a&gt;, &lt;a href=&quot;language.oop5.overloading#object.callstatic&quot;&gt;__callStatic()&lt;/a&gt;, &lt;a href=&quot;language.oop5.overloading#object.get&quot;&gt;__get()&lt;/a&gt;, &lt;a href=&quot;language.oop5.overloading#object.set&quot;&gt;__set()&lt;/a&gt;, &lt;a href=&quot;language.oop5.overloading#object.isset&quot;&gt;__isset()&lt;/a&gt;, &lt;a href=&quot;language.oop5.overloading#object.unset&quot;&gt;__unset()&lt;/a&gt;, &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt;, &lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup()&lt;/a&gt;, &lt;a href=&quot;language.oop5.magic#object.tostring&quot;&gt;__toString()&lt;/a&gt;, &lt;a href=&quot;language.oop5.magic#object.invoke&quot;&gt;__invoke()&lt;/a&gt;, &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt;, &lt;a href=&quot;language.oop5.cloning#object.clone&quot;&gt;__clone()&lt;/a&gt; and &lt;a href=&quot;language.oop5.magic#object.debuginfo&quot;&gt;__debugInfo()&lt;/a&gt; are magical in PHP classes. You cannot have functions with these names in any of your classes unless you want the magic functionality associated with them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cfa6ebd4d58fcc51b2ca4b4c0eba744200533f" translate="yes" xml:space="preserve">
          <source>The function obtains information about the entry defined by its index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa506959df27f5087db4ff9604634fcb93047ca1" translate="yes" xml:space="preserve">
          <source>The function obtains information about the entry defined by its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b112b6cedc528fc8ec94b4563f98a922cafea27" translate="yes" xml:space="preserve">
          <source>The function or method to be called. This parameter may be an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;, with the name of the class, and the method, or a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, with a function name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41771c35f983a17f5c66fab630ab52f58a39896f" translate="yes" xml:space="preserve">
          <source>The function or method to be called. This parameter may be an array, with the name of the class, and the method, or a string, with a function name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9edcecc2787fdcd694215da1510a26c56935ae3" translate="yes" xml:space="preserve">
          <source>The function parses the HTML contained in the string &lt;code&gt;source&lt;/code&gt;. Unlike loading XML, HTML does not have to be well-formed to load. This function may also be called statically to load and create a &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt; object. The static invocation may be used when no &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt; properties need to be set prior to loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5730e471ab6b3bf84e9e9c164a0becad01472467" translate="yes" xml:space="preserve">
          <source>The function parses the HTML document in the file named &lt;code&gt;filename&lt;/code&gt;. Unlike loading XML, HTML does not have to be well-formed to load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bafd8b7811d84723f4b80c606361afb21de78d9" translate="yes" xml:space="preserve">
          <source>The function returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; if the self test succeeds, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; when it fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0369b9ba4d6afba03d9fbe62c81bf69041f6d6" translate="yes" xml:space="preserve">
          <source>The function returns a character set object with the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96623ffab5687ac7e42a25fe85a2ff213105d06f" translate="yes" xml:space="preserve">
          <source>The function returns a negative value on error: -3 when the key length was incorrect, -4 when there was a memory allocation problem and any other return value is an unknown error. If an error occurs a warning will be displayed accordingly. &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned if incorrect parameters were passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba8644197a7d19497c62e851d0d324ad03fa39e" translate="yes" xml:space="preserve">
          <source>The function returns an indexed array with the coordinates of the clipping rectangle which has the following entries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3d374ce182877598d1168f1309aa9bc8249ab4" translate="yes" xml:space="preserve">
          <source>The function returns the read data or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a89c98bc3ccb7808a741bcdb716d00117f5442" translate="yes" xml:space="preserve">
          <source>The function returns the result in radians, which is between -PI and PI (inclusive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a090d9da4a41d3a1e0495c4b9326513ee176370a" translate="yes" xml:space="preserve">
          <source>The function started to validate the &lt;code&gt;timezone_identifier&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f555025cf6f9e41a781dcee157b7f22e17a3c6" translate="yes" xml:space="preserve">
          <source>The function that is to be called for each character name. The following three arguments will be passed into it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1d7bcfbfde63aeb0aa5adb94642418459e130e" translate="yes" xml:space="preserve">
          <source>The function that is to be called for each contiguous range of code points with the same general category. The following three arguments will be passed into it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe74d1b112bd20c073f9c33788fd78cc3be2346" translate="yes" xml:space="preserve">
          <source>The function to reflect parameters from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f00d0eabdaf87b3c5747616ab9097a0dcf25e7" translate="yes" xml:space="preserve">
          <source>The function tries to avoid breaking words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6991a96354bba0413b99989c53099292314d485c" translate="yes" xml:space="preserve">
          <source>The function used to be called &lt;strong&gt;pg_clientencoding()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59d889c0bde283a4141348c2a4ba54a09716abe" translate="yes" xml:space="preserve">
          <source>The function used to be called &lt;strong&gt;pg_setclientencoding()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49cc138267b251b93a92ec97889a45e6e44a674" translate="yes" xml:space="preserve">
          <source>The function uses Miller-Rabin's probabilistic test to check if a number is a prime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5522d55b67478f1f25e654d47e62b7f64b3dfae" translate="yes" xml:space="preserve">
          <source>The function uses the &lt;strong&gt;&lt;code&gt;ENABLE_VIRTUAL_TERMINAL_PROCESSING&lt;/code&gt;&lt;/strong&gt; flag implemented in the Windows 10 API, so the VT100 feature may not be available on older Windows versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84a4e83fd77c00e63d827d48ddb827f57e930ef" translate="yes" xml:space="preserve">
          <source>The function was changed to return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; when it can't use an SSL connection, instead of falling back to a non-SSL one as previously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af92caa799e8d1d92aa8b1c755daa9a33be244f" translate="yes" xml:space="preserve">
          <source>The function will return an error if the uncompressed data is more than 32768 times the length of the compressed input &lt;code&gt;data&lt;/code&gt; or more than the optional parameter &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcf867b2ae122867d816fe4d59931c6bbb42eeb" translate="yes" xml:space="preserve">
          <source>The fuzz member of image defines how much tolerance is acceptable to consider two colors as the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3826c411104d764e488dc1b590e8d1c57724af17" translate="yes" xml:space="preserve">
          <source>The gamma corrected Gmagick object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441b3f5f019fe35e6c603be903000e8c6764a3eb" translate="yes" xml:space="preserve">
          <source>The gamma value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55501e299342a9e43af28f26baa6d8610315d7a4" translate="yes" xml:space="preserve">
          <source>The garbage collector callback is invoked internally by PHP periodically in order to purge old session data. The frequency is controlled by &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.gc-probability&quot;&gt;session.gc_probability&lt;/a&gt; and &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.gc-divisor&quot;&gt;session.gc_divisor&lt;/a&gt;. The value of lifetime which is passed to this callback can be set in &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.gc-maxlifetime&quot;&gt;session.gc_maxlifetime&lt;/a&gt;. Return value should be &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; for success, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a34a03e289f5a0ad6dc6d021b36d3db8988d66" translate="yes" xml:space="preserve">
          <source>The general repetition quantifier specifies a minimum and maximum number of permitted matches, by giving the two numbers in curly brackets (braces), separated by a comma. The numbers must be less than 65536, and the first must be less than or equal to the second. For example: &lt;em&gt;z{2,4}&lt;/em&gt; matches &quot;zz&quot;, &quot;zzz&quot;, or &quot;zzzz&quot;. A closing brace on its own is not a special character. If the second number is omitted, but the comma is present, there is no upper limit; if the second number and the comma are both omitted, the quantifier specifies an exact number of required matches. Thus &lt;em&gt;[aeiou]{3,}&lt;/em&gt; matches at least 3 successive vowels, but may match many more, while &lt;em&gt;\d{8}&lt;/em&gt; matches exactly 8 digits. An opening curly bracket that appears in a position where a quantifier is not allowed, or one that does not match the syntax of a quantifier, is taken as a literal character. For example, {,6} is not a quantifier, but a literal string of four characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eac013239000e5520102ebf6597fde535d67fac" translate="yes" xml:space="preserve">
          <source>The generated ImagickKernel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49fd71bcef5b8070b91b339b94d3a15370ba990" translate="yes" xml:space="preserve">
          <source>The generated certificate will be signed by &lt;code&gt;cacert&lt;/code&gt;. If &lt;code&gt;cacert&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, the generated certificate will be a self-signed certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b562955734749fb22430882d14a382f7a8a9134" translate="yes" xml:space="preserve">
          <source>The generated token, as a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; of bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00df3b12e20947b7ddd646ee188baccf232b247f" translate="yes" xml:space="preserve">
          <source>The gid of the owner of the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d049151608dfe8c2ea5b77dc95a4d64ebae1d908" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;imap_stream&lt;/code&gt; must be opened as the mail administrator, other wise this function will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c88092cebb55874f5ab39353c6ded2c1ce6b6e8" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;imap_stream&lt;/code&gt; must be opened as the mail administrator, otherwise this function will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbf5f4bd5790ddb3eb713ff594f69c8796e8b37" translate="yes" xml:space="preserve">
          <source>The given character is mapped to its case folding equivalent; if the character has no case folding equivalent, the character itself is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e38e9d0e486d016ef27856e92b322fc8127b6b" translate="yes" xml:space="preserve">
          <source>The given character is mapped to its lowercase equivalent. If the character has no lowercase equivalent, the original character itself is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a41bed1d1e370b930fec2bf41fc2df22abc77eb" translate="yes" xml:space="preserve">
          <source>The given character is mapped to its titlecase equivalent. If the character has no titlecase equivalent, the original character itself is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ad33c2f8590aa54d1d4aacd84228819e2e14b9" translate="yes" xml:space="preserve">
          <source>The given character is mapped to its uppercase equivalent. If the character has no uppercase equivalent, the character itself is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1eafb3d7a99fcc2dcf79623ae246d2e3e6f3f35" translate="yes" xml:space="preserve">
          <source>The gravity property. Refer to the list of &lt;a href=&quot;https://secure.php.net/manual/en/imagick.constants.php#imagick.constants.gravity&quot;&gt;gravity constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1ffa901fcfc24cc4853973b78c2ddf6b6f50e1" translate="yes" xml:space="preserve">
          <source>The gregorian date as a string in the form &quot;month/day/year&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306fe0539e71603fe510da9253b233456b9c0172" translate="yes" xml:space="preserve">
          <source>The gregorian weekday as either an integer or string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b56842769d7d08713a4cb6dd023677dd815288" translate="yes" xml:space="preserve">
          <source>The group ID of the user. Use the function &lt;a href=&quot;function.posix-getgrgid&quot;&gt;posix_getgrgid()&lt;/a&gt; to resolve the group name and a list of its members.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a7ea5d2d5a6a9a21d074c768d79875a34bbe1a" translate="yes" xml:space="preserve">
          <source>The group id in numerical format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a313b8616f4917c9bf0d315599d18849482b3f" translate="yes" xml:space="preserve">
          <source>The group id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255f0f6aa4a65e35fa766b8a3ae64fc8cc7ede46" translate="yes" xml:space="preserve">
          <source>The group specified by name or number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967986ea951ff5df2b3dd52da6f39f3fc7833d85" translate="yes" xml:space="preserve">
          <source>The grouping fields contain arrays that define the way numbers should be grouped. For example, the monetary grouping field for the nl_NL locale (in UTF-8 mode with the euro sign), would contain a 2 item array with the values 3 and 3. The higher the index in the array, the farther left the grouping is. If an array element is equal to &lt;strong&gt;&lt;code&gt;CHAR_MAX&lt;/code&gt;&lt;/strong&gt;, no further grouping is done. If an array element is equal to 0, the previous element should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5749e5629d0dd84fc4282cc3d64f66678792f2" translate="yes" xml:space="preserve">
          <source>The grouping separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b656348fd31f85664bdc94d992b51ccae548b4ec" translate="yes" xml:space="preserve">
          <source>The gz-file pointer. It must be valid, and must point to a file successfully opened by &lt;a href=&quot;function.gzopen&quot;&gt;gzopen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b018b564678f3af8ae8bee39613fe5a5a0c5e01" translate="yes" xml:space="preserve">
          <source>The handle on the database server service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a240e77d6973cb243e1b9f1e552ac7f78d6c22" translate="yes" xml:space="preserve">
          <source>The handling flags to set. See the &lt;a href=&quot;class.filesystemiterator#filesystemiterator.constants&quot;&gt;FilesystemIterator constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b340d12737eb3dbfd57d11dc8d130e2239b503" translate="yes" xml:space="preserve">
          <source>The handling of a backslash followed by a digit other than 0 is complicated. Outside a character class, PCRE reads it and any following digits as a decimal number. If the number is less than 10, or if there have been at least that many previous capturing left parentheses in the expression, the entire sequence is taken as a &lt;em&gt;back reference&lt;/em&gt;. A description of how this works is given later, following the discussion of parenthesized subpatterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d982de04469de300fbfe5393b2e1d0b880ebe9a" translate="yes" xml:space="preserve">
          <source>The hard limit, in whatever unit the resource limit requires, or &lt;strong&gt;&lt;code&gt;POSIX_RLIMIT_INFINITY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef26345894cc4c8191985a38383557963fd85a5" translate="yes" xml:space="preserve">
          <source>The hash value of &lt;code&gt;addr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af91b8076b6b76288c58e94171d75763da9e05a5" translate="yes" xml:space="preserve">
          <source>The header name to be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af3be1a7d51a18f36d735ad45a99c8687d62de5" translate="yes" xml:space="preserve">
          <source>The header name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e11b877d41983192de2b99956566cc4c229dc77" translate="yes" xml:space="preserve">
          <source>The header size in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a445083c46114f7b2f0400e4331000352a7e3b02" translate="yes" xml:space="preserve">
          <source>The header string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfb0a698dc39e2b6bab76d6b8fc7c4f2dbb0191" translate="yes" xml:space="preserve">
          <source>The header to be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201333f0deca8a58dccef43f0e291f7a7e7bdfcb" translate="yes" xml:space="preserve">
          <source>The headers to be set. It could be &lt;a href=&quot;class.soapheader&quot;&gt;SoapHeader&lt;/a&gt; object or array of &lt;a href=&quot;class.soapheader&quot;&gt;SoapHeader&lt;/a&gt; objects. If not specified or set to &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, the headers will be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a58eba79f536501ae04c9f9220c1a105a0c897b" translate="yes" xml:space="preserve">
          <source>The heart of a generator function is the &lt;strong&gt;yield&lt;/strong&gt; keyword. In its simplest form, a yield statement looks much like a return statement, except that instead of stopping execution of the function and returning, yield instead provides a value to the code looping over the generator and pauses execution of the generator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce796b0f446e1e6e9e91c6e507de4b23983b075" translate="yes" xml:space="preserve">
          <source>The height in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ed3a65d115e0ce9e49f50c3566683cf7ca8057" translate="yes" xml:space="preserve">
          <source>The height of the border</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37242b80792accca9cc51216a61192467570087" translate="yes" xml:space="preserve">
          <source>The height of the crop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14976a44bd4f755235be8d091d45da25e5bfe754" translate="yes" xml:space="preserve">
          <source>The height of the extracted region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb2fd028f69e72d6af248917a135d136542bdd6" translate="yes" xml:space="preserve">
          <source>The height of the region.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16bf2057970b01c51e4d405d6224f6bee234df2" translate="yes" xml:space="preserve">
          <source>The height of the target size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3976cfd49ffddcbd5001e85b1d7e039cc9bd25e" translate="yes" xml:space="preserve">
          <source>The height to scale the image to. If omitted or negative, the aspect ratio will be preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5864ce866259c41704669b4651594582da9465" translate="yes" xml:space="preserve">
          <source>The hexadecimal string to convert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac492f11b362b9d2e4cc943680624dba5637fe05" translate="yes" xml:space="preserve">
          <source>The high point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da4a41ce40289a23810dd7868f605c03b2699b9" translate="yes" xml:space="preserve">
          <source>The highest value to be returned, which must be less than or equal to &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895fc345765501ef98a3cd4c63714138c9e95f08" translate="yes" xml:space="preserve">
          <source>The highest value to return (default: &lt;a href=&quot;function.getrandmax&quot;&gt;getrandmax()&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e112221965d8f1237d4c7ddf4820adfe8530723" translate="yes" xml:space="preserve">
          <source>The horizontal resolution in DPI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecef019c8b7563d27f82ebb2e273dec99b4c413d" translate="yes" xml:space="preserve">
          <source>The horizontal resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe7380606df048bda801f9b71ead77eabbb2736" translate="yes" xml:space="preserve">
          <source>The host IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7941274983918c33eadd9cfc9e9221c9eb057b10" translate="yes" xml:space="preserve">
          <source>The host name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5d2bcd767397ece861103b409bee822b54c76e" translate="yes" xml:space="preserve">
          <source>The hostname of the memcache server. If the hostname is invalid, data-related operations will set &lt;strong&gt;&lt;code&gt;Memcached::RES_HOST_LOOKUP_FAILURE&lt;/code&gt;&lt;/strong&gt; result code. As of version 2.0.0b1, this parameter may also specify the path of a unix socket filepath ex. &lt;em&gt;/path/to/memcached.sock&lt;/em&gt; to use UNIX domain sockets, in this case &lt;code&gt;port&lt;/code&gt; must also be set to &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d2d37650a68dbb2ad6a5a569fe483653e7cda7" translate="yes" xml:space="preserve">
          <source>The hostname or IP address whose connection type is to be looked-up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766839b85da35ebee03e13e82f1904980d2aadd2" translate="yes" xml:space="preserve">
          <source>The hostname or IP address whose location is to be looked-up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fa3fa36442931f3f2e3e7f1861be4584c6d975" translate="yes" xml:space="preserve">
          <source>The hostname or IP address whose record is to be looked-up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f2ea3d73602d3c28b9729ef7a21e0820427f38" translate="yes" xml:space="preserve">
          <source>The hostname or IP address whose region is to be looked-up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0f85ab42940b37f1e15eebd1f28dfdc3e64841" translate="yes" xml:space="preserve">
          <source>The hostname or IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853f095f9118ee3870b912169859695019510e14" translate="yes" xml:space="preserve">
          <source>The http status of the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d478ccf0daac38ab82fd3cd4e6867746116c763c" translate="yes" xml:space="preserve">
          <source>The hyperbolic cosine of &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65dd2da3698f67f7d9509b273e07e471ef3dda0" translate="yes" xml:space="preserve">
          <source>The hyperbolic sine of &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07fd2335e9cf8bdb4dcd98ee7349dc399eb137c2" translate="yes" xml:space="preserve">
          <source>The hyperbolic tangent of &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0d457bd2f9241f680371a36e0da517dda14500" translate="yes" xml:space="preserve">
          <source>The id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070c1d262523ec070b658b1b9fdc16a0a91753dd" translate="yes" xml:space="preserve">
          <source>The idea for this function was taken from Perl and all formatting codes work the same as in Perl. However, there are some formatting codes that are missing such as Perl's &quot;u&quot; format code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1122cc368caf8b4447db046aa61c7a87670beb59" translate="yes" xml:space="preserve">
          <source>The identifier for the crypto engine of the private SSL key specified in &lt;strong&gt;&lt;code&gt;CURLOPT_SSLKEY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c4cbb3b0488a40fd3feef4705866b3d282e62bf" translate="yes" xml:space="preserve">
          <source>The identifier for the crypto engine used for asymmetric crypto operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5532c21b2850990c157cea575c2ab7573d5ca097" translate="yes" xml:space="preserve">
          <source>The identifier of the new (or current, if none is specified) transparent color is returned. If &lt;code&gt;color&lt;/code&gt; is not specified, and the image has no transparent color, the returned identifier will be -1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da5fd12893c40442f6c0d0bd54922d092968b04" translate="yes" xml:space="preserve">
          <source>The identifier of the worker that accepted the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c54a7d7838b9795ea829365a721629351ab7cc6" translate="yes" xml:space="preserve">
          <source>The image being checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76b3c7aa0b5d5f44da018a2f112ac2581cbfe46" translate="yes" xml:space="preserve">
          <source>The image black point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84270dd5bd648601a413604e3cef6e795d27d37" translate="yes" xml:space="preserve">
          <source>The image colorspace: UndefinedColorspace, RGBColorspace, GRAYColorspace, TransparentColorspace, OHTAColorspace, XYZColorspace, YCbCrColorspace, YCCColorspace, YIQColorspace, YPbPrColorspace, YPbPrColorspace, YUVColorspace, CMYKColorspace, sRGBColorspace, HSLColorspace, or HWBColorspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02d08b2bb9b0075c0ae41ceb59a54b9f34b17bd" translate="yes" xml:space="preserve">
          <source>The image composite operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cedf91135e2df110712694ef2bf54e25297b3d" translate="yes" xml:space="preserve">
          <source>The image compression quality as an integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b422e19d3859e03287e5c72f688f658974f44cf0" translate="yes" xml:space="preserve">
          <source>The image data, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d4a38effcdd6cf2eaefa6d782270b03c1b3321" translate="yes" xml:space="preserve">
          <source>The image delay in 1/100th of a second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df79ade3e7c5d105bfaa1dd287514feab7deea2" translate="yes" xml:space="preserve">
          <source>The image depth in bits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6554357a874f755fafb75375c0cbca653e7aa5" translate="yes" xml:space="preserve">
          <source>The image depth in bits: 8, 16, or 32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f39f217e93a7d802def015ce8476f97339491bb" translate="yes" xml:space="preserve">
          <source>The image depth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf707e8282b0ba9b9bd7385cec2cd42ab289401" translate="yes" xml:space="preserve">
          <source>The image disposal type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d504b0d671ae17c476cbf9b469c0b3ef7bad9333" translate="yes" xml:space="preserve">
          <source>The image filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a59150bf057487cd0ef14630541d4607b00067" translate="yes" xml:space="preserve">
          <source>The image format will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9917a8c7e69305fd3c0f45cb9599d5469522d102" translate="yes" xml:space="preserve">
          <source>The image format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afcfc5d7fb75915cc18cbe5ec1453786b3da79c" translate="yes" xml:space="preserve">
          <source>The image gamma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a1e1bfbe3944665fc4a046dbafaf48d5ffeece" translate="yes" xml:space="preserve">
          <source>The image height</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5ba7edf4bab0548c0d0dfdc0f9d67a3451a0a9" translate="yes" xml:space="preserve">
          <source>The image height.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfd01b2d0e425dac1cb262297cb2fe143267cb7" translate="yes" xml:space="preserve">
          <source>The image interlace scheme: NoInterlace, LineInterlace, PlaneInterlace, PartitionInterlace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b3e96d99b557e329a7bcdc297f8e182da7f6fc" translate="yes" xml:space="preserve">
          <source>The image offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b91de1b616cad752f1d176b30d7e45af8a5d67" translate="yes" xml:space="preserve">
          <source>The image rendering intent: UndefinedIntent, SaturationIntent, PerceptualIntent, AbsoluteIntent, or RelativeIntent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297861179514f56e811d4dd68f5689021c4a271b" translate="yes" xml:space="preserve">
          <source>The image resource to be used as a tile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ca2a6b1a8209d28534ea55eadbe2bff1f6227e" translate="yes" xml:space="preserve">
          <source>The image scene number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03b7c74eb26ee94715373b53fe58eaea8e29a1a" translate="yes" xml:space="preserve">
          <source>The image type: UndefinedType, BilevelType, GrayscaleType, GrayscaleMatteType, PaletteType, PaletteMatteType, TrueColorType, TrueColorMatteType, ColorSeparationType, ColorSeparationMatteType, or OptimizeType.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb67d19ff1fc8418129d7d46aca3b1a72c9e9871" translate="yes" xml:space="preserve">
          <source>The image units of resolution : Undefinedresolution, PixelsPerInchResolution, or PixelsPerCentimeterResolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a953e6c6ada9bbffa0cda78a6994002eaccfdf2" translate="yes" xml:space="preserve">
          <source>The image white point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c1ab6ba86033afe591636d05623e2f5d15b428" translate="yes" xml:space="preserve">
          <source>The image width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c439e9342c3135258cf36c15aba1a6e7e344616" translate="yes" xml:space="preserve">
          <source>The image width.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8492126e6ab14f8b94699e2192871a6e6fcea7ff" translate="yes" xml:space="preserve">
          <source>The image will be output at half size, though better quality could be obtained using &lt;a href=&quot;function.imagecopyresampled&quot;&gt;imagecopyresampled()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe0eeaae26dbf03533e8420c61eac30b6e0bdda" translate="yes" xml:space="preserve">
          <source>The image x position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbd9e6ae2ac6fc5d11a7c474d1a248396a2d0e3" translate="yes" xml:space="preserve">
          <source>The image x resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35095f244f8ef572b80fa39e949da78f3c68de7a" translate="yes" xml:space="preserve">
          <source>The image y position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95825614a141b92fff61a9beedbf82ef3da4792" translate="yes" xml:space="preserve">
          <source>The image y resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11c3355361f4138037e3f0cf76f6cc52733fa7e" translate="yes" xml:space="preserve">
          <source>The implementation in &lt;a href=&quot;class.splobjectstorage&quot;&gt;SplObjectStorage&lt;/a&gt; returns the same value as &lt;a href=&quot;function.spl-object-hash&quot;&gt;spl_object_hash()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e771ee0e17010cc516792508acbf8f8a1afea59" translate="yes" xml:space="preserve">
          <source>The imported style sheet as a &lt;a href=&quot;class.domdocument&quot;&gt;DOMDocument&lt;/a&gt; or &lt;a href=&quot;class.simplexmlelement&quot;&gt;SimpleXMLElement&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee96643c5fdf53074e69fa0c909fea568e04820" translate="yes" xml:space="preserve">
          <source>The indentation string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91494e092c12ff0a6a50d04643467f52bb94cb5" translate="yes" xml:space="preserve">
          <source>The index at which the range starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4decd935f2b3ce496d0c4cce323beb1bb24031" translate="yes" xml:space="preserve">
          <source>The index at which the sub-deque starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32dcdbc126ce162ec44142ff1f921d3a7c937822" translate="yes" xml:space="preserve">
          <source>The index at which the sub-sequence starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7c09152cd7b716483be56636d3b4545bc1a2fe" translate="yes" xml:space="preserve">
          <source>The index at which the sub-set starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c01ac9fe0f0017ed268a774194e4a8d30d92a34" translate="yes" xml:space="preserve">
          <source>The index at which the sub-vector starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68390d73c8b2f5e7345783688e4edf511c10510b" translate="yes" xml:space="preserve">
          <source>The index at which to insert. &lt;code&gt;0 &amp;lt;= index &amp;lt;= count&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94777e30162bdc73b58002ed0b06234ff4fe833" translate="yes" xml:space="preserve">
          <source>The index being checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac50f41ca1406bd4f45e94d90e166d71cbdfaa5" translate="yes" xml:space="preserve">
          <source>The index being set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc666febd3b3d2900822fa363d2f2d43ace7a4f" translate="yes" xml:space="preserve">
          <source>The index being unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4c9b864b80f96b9ca12d480c7aebd9ee6ab466" translate="yes" xml:space="preserve">
          <source>The index can be an integer or a string corresponding to the index where to start the search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fbc82244264cf2e999a816a5b6d34bbac0e974" translate="yes" xml:space="preserve">
          <source>The index corresponding to the position of the iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c27ce13c357fd7af8778db2b9e4fbeacd09109a" translate="yes" xml:space="preserve">
          <source>The index of the bit to clear. Index 0 represents the least significant bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d6189611d113d6649a6eb1478374bca4d2fa33" translate="yes" xml:space="preserve">
          <source>The index of the bit to set. Index 0 represents the least significant bit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ae9a01eb7f3d5a61533bb1eda1ac4ec9441a6f" translate="yes" xml:space="preserve">
          <source>The index of the desired color for the text, see &lt;a href=&quot;function.imagecolorexact&quot;&gt;imagecolorexact()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8355943f13b3c45a04b69663ba60c744fad6ba8" translate="yes" xml:space="preserve">
          <source>The index of the element to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbb3d3deb4d45888fde6f1a2e646868254c54af" translate="yes" xml:space="preserve">
          <source>The index of the element to be unset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef72061769df52f67294ab4573a8b6a4ce823721" translate="yes" xml:space="preserve">
          <source>The index of the field to be retrieved. Field indices start at 0. Fields must be accessed in order. i.e. If you access field index 1, then field index 0 will not be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe8b245fa3526f19628322ab31f3be7a9452e843" translate="yes" xml:space="preserve">
          <source>The index of the value to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2af331adeb1ec09155f8a67da34ed0c4c8c9f6c" translate="yes" xml:space="preserve">
          <source>The index of the value to update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b4ca27689c51f3dd5144d1cfabff5ed80965db" translate="yes" xml:space="preserve">
          <source>The index of the value, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4719c1b6f90b086fd02785a61a32f0a27abd5b6" translate="yes" xml:space="preserve">
          <source>The index time boost for the field. Though this cannot be negative, you can still pass values less than 1.0 but they must be greater than zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec11e542a5e5ed02699cdf9569318453d1f69ba" translate="yes" xml:space="preserve">
          <source>The index time boost value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff58b953fa72ab74b6c3bef76cb34d5563acef4" translate="yes" xml:space="preserve">
          <source>The index to access, starting at 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afae530386659bbd7725e00b6fff4795d4d6c7a3" translate="yes" xml:space="preserve">
          <source>The index to set for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631eafa6aa302a9b2464edcfc6b33fd0cbd90343" translate="yes" xml:space="preserve">
          <source>The index where the new value is to be inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347d62b0a724d66509e799960ac448af85548611" translate="yes" xml:space="preserve">
          <source>The index with the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e5457a3ac2490ec27cf41335f2a5d5bf8668e6" translate="yes" xml:space="preserve">
          <source>The index-time boost value for this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cc57c0ab1df28dd9043e66d01182e63387ba10" translate="yes" xml:space="preserve">
          <source>The indexes 6, and 0 in the example output refer to the character index in the string where the error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e93bfbf82052d06435152c4716948a2f9c33f8d" translate="yes" xml:space="preserve">
          <source>The information is returned in an object or an array which will contain various data elements representing, for instance, the browser's major and minor version numbers and ID string; &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; values for features such as frames, JavaScript, and cookies; and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8100ef9e270acac731ad4b5b80bbd0fb5ae14172" translate="yes" xml:space="preserve">
          <source>The inherited methods and properties can be overridden by redeclaring them with the same name defined in the parent class. However, if the parent class has defined a method as &lt;a href=&quot;language.oop5.final&quot;&gt;final&lt;/a&gt;, that method may not be overridden. It is possible to access the overridden methods or static properties by referencing them with &lt;a href=&quot;language.oop5.paamayim-nekudotayim&quot;&gt;parent::&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b713601a3d885764e27315bf165cfaae250277ef" translate="yes" xml:space="preserve">
          <source>The initial value of the carry value. Can be &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a4b1d69dc92a1161bc1168af2b917c24419c7c" translate="yes" xml:space="preserve">
          <source>The initial value of the semaphore. This is the number of locks that may be obtained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21544be8422f428837e37854461cecdfa4b0c77c" translate="yes" xml:space="preserve">
          <source>The initial working dir for the command. This must be an &lt;em&gt;absolute&lt;/em&gt; directory path, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if you want to use the default value (the working dir of the current PHP process)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06c67d5e8adb108963ac478521a8d91944ab100" translate="yes" xml:space="preserve">
          <source>The initialization vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095f152353e6c0b8466f231c92557d4058e54a83" translate="yes" xml:space="preserve">
          <source>The inner bevel width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc074cabeff3f736dc4f13294c00fb3a9b47357" translate="yes" xml:space="preserve">
          <source>The inner iterator as passed to &lt;a href=&quot;iteratoriterator.construct&quot;&gt;IteratorIterator::__construct()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dabd96ca47519b92a932a3a2b0188515eae7147" translate="yes" xml:space="preserve">
          <source>The inner iterator for the current entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910255fbfda7a813823f3966c3c2f2667929ae10" translate="yes" xml:space="preserve">
          <source>The inner iterator passed to &lt;a href=&quot;limititerator.construct&quot;&gt;LimitIterator::__construct()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98dfe1e8809137aae6c9e4add1b6f9e448c4a31b" translate="yes" xml:space="preserve">
          <source>The inner iterator's children, as a RecursiveCachingIterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2291e2311f7aab81a9e2cc1ca5fc1a159d20e47" translate="yes" xml:space="preserve">
          <source>The inner iterator, as passed to &lt;a href=&quot;norewinditerator.construct&quot;&gt;NoRewindIterator::__construct()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ccf9c95c08883d443ad37ed25cd96c70d6ae6b0" translate="yes" xml:space="preserve">
          <source>The inner iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3025a99449443c0879458a3151d84c89ffbe856b" translate="yes" xml:space="preserve">
          <source>The inner workings of &lt;strong&gt;round()&lt;/strong&gt; was changed to conform to the C99 standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6513080caff852c5abedd84387f7cff11e407320" translate="yes" xml:space="preserve">
          <source>The input &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; being parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528560fa701c687c766a152165432c7d1064754a" translate="yes" xml:space="preserve">
          <source>The input array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9eebd6f3c2dccb825ca1eb5d3b6fff39eb990c" translate="yes" xml:space="preserve">
          <source>The input array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae397e0d243149f0eb67d123ba415fe356d53ae7" translate="yes" xml:space="preserve">
          <source>The input charset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b941f334dfce6c774093743936f754bf8137c6b" translate="yes" xml:space="preserve">
          <source>The input data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98242ea746c6aadea9e56f706e9f6b9231ed5f63" translate="yes" xml:space="preserve">
          <source>The input encoding is automatically detected, so that the &lt;code&gt;encoding&lt;/code&gt; parameter specifies only the output encoding. In PHP 5.0.0 and 5.0.1, the default output charset is ISO-8859-1, while in PHP 5.0.2 and upper is UTF-8. The supported encodings are &lt;em&gt;ISO-8859-1&lt;/em&gt;, &lt;em&gt;UTF-8&lt;/em&gt; and &lt;em&gt;US-ASCII&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337857ffda48a82db7be54dcbdabbb546348e043" translate="yes" xml:space="preserve">
          <source>The input file you are intending to digitally sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0198ddb1ae1d95ffab59391cd825e68a6fe6f4" translate="yes" xml:space="preserve">
          <source>The input gamma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96830c9b7b2708d7ae49c5adc67ebc6f9b463502" translate="yes" xml:space="preserve">
          <source>The input phrase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85125107107921a56066414a5e5b8ae9b1f39369" translate="yes" xml:space="preserve">
          <source>The input string to normalize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70feabb3da72ab33910ed47c0b6047affc1ce62a" translate="yes" xml:space="preserve">
          <source>The input string, which should be a single, UTF-8 encoded, code point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30073a0cd48fdf597d5570c096df6fadf3958c9" translate="yes" xml:space="preserve">
          <source>The input string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8fc46c7cd1e275bbd552ca99baf1284318cf394" translate="yes" xml:space="preserve">
          <source>The input string. Must be one character or longer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265344e4450d1699423771046caef4642b04f514" translate="yes" xml:space="preserve">
          <source>The input string. Must be valid UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6947da3e1dad5f7c0ae336585e90f4621afcc055" translate="yes" xml:space="preserve">
          <source>The inserted node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d5c0f07c3e6b73e14ebfdf5c345eadbe7bf323" translate="yes" xml:space="preserve">
          <source>The instance of the default event loop itself can be fetched by means of &lt;a href=&quot;evloop.defaultloop&quot;&gt;EvLoop::defaultLoop()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16563f11f1c372924d030044d93dfddb9535117" translate="yes" xml:space="preserve">
          <source>The integer component of the resultant root, as a GMP number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c97c6166e55d6914792ce9e5b7aed1d12107a8" translate="yes" xml:space="preserve">
          <source>The integer portion of the square root, as a GMP number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efd4763b36718afca7d1ea8dfc903bdf2c12c9e" translate="yes" xml:space="preserve">
          <source>The integer quotient of the division of &lt;code&gt;dividend&lt;/code&gt; by &lt;code&gt;divisor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbba135e3c0a2b66b45dbddb29e70691f300b36e" translate="yes" xml:space="preserve">
          <source>The integer value of &lt;code&gt;var&lt;/code&gt; on success, or 0 on failure. Empty arrays return 0, non-empty arrays return 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c2b1f80bc2f9b22f4d3c67e51e099a8729bd55" translate="yes" xml:space="preserve">
          <source>The integer value of the set flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6a7307789be66a5a7a58e11bc51c2ee8ad1e57" translate="yes" xml:space="preserve">
          <source>The intended use of &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; is to commit pending data or perform similar cleanup tasks. Also, the function is useful if you have very large objects which do not need to be saved completely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2cba12a67f6fe7522e1a1bfef131b6cfbe17d8" translate="yes" xml:space="preserve">
          <source>The intended use of &lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup()&lt;/a&gt; is to reestablish any database connections that may have been lost during serialization and perform other reinitialization tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ef3ea26ee86bb9ed148f98fad4daf0692a04d5" translate="yes" xml:space="preserve">
          <source>The interface name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde85af00a00bcf33ba70561faf77e3770047862" translate="yes" xml:space="preserve">
          <source>The interface name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2781fd3a45a3f18e0eb0934039bdf34801d944c" translate="yes" xml:space="preserve">
          <source>The internal LDAP result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad48c910e6a67263d17fa03bfd9cf827eafe816" translate="yes" xml:space="preserve">
          <source>The internal encoding or the character encoding specified by &lt;a href=&quot;function.mb-regex-encoding&quot;&gt;mb_regex_encoding()&lt;/a&gt; will be used as the character encoding for this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed92a9bd3a9c1c97cd24012f062b3099734a1f0" translate="yes" xml:space="preserve">
          <source>The internal field storage size (in bytes). -1 indicates a variable length field. &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d121234c2c7efa853857b4d9aef54ca7bd3f6bec" translate="yes" xml:space="preserve">
          <source>The internal path within the phar archive to use as the mounted path location. This must be a relative path within the phar archive, and must not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3f70232372adea091e81d1435a6474a9d281da" translate="yes" xml:space="preserve">
          <source>The internal randomization algorithm &lt;a href=&quot;https://secure.php.net/manual/en/migration71.incompatible.php#migration71.incompatible.rand-srand-aliases&quot;&gt;has been changed&lt;/a&gt; to use the &lt;a href=&quot;http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html&quot;&gt;&amp;raquo; Mersenne Twister&lt;/a&gt; Random Number Generator instead of the libc rand function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa9a4a07a9401524326360a9e7a31b1682d8244" translate="yes" xml:space="preserve">
          <source>The internal state of the pointer is maintained by this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387bd34492a873855b5ecac2c097390956024d3e" translate="yes" xml:space="preserve">
          <source>The internal subset as a string, or null if there is none. This does not contain the delimiting square brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe306106d5e6fa77bf473157bcb1ca264e80656c" translate="yes" xml:space="preserve">
          <source>The international currency symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58833ecc4e60d5a94cd79b2ba4218a0e11c611f" translate="yes" xml:space="preserve">
          <source>The interpolation method, which can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83484d3cba9de65dc5af0023d6e7ed7e35e8a4f8" translate="yes" xml:space="preserve">
          <source>The interpretation of object oriented keywords like &lt;em&gt;parent&lt;/em&gt; and &lt;em&gt;self&lt;/em&gt; has changed. Previously, calling them using the double colon syntax would emit an &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; warning because they were interpreted as static.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472dc219cabc0fa1f15c5bb73609e99d31b78a0a" translate="yes" xml:space="preserve">
          <source>The interpreted format for &lt;code&gt;str&lt;/code&gt;, which is described in the documentation for &lt;a href=&quot;function.sprintf&quot;&gt;sprintf()&lt;/a&gt; with following differences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f6e1c935f3fe7ecaee3526af3188dd5a29b00a" translate="yes" xml:space="preserve">
          <source>The intersection of the current instance and another &lt;code&gt;set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc91e8741fe610f610dcb1322bf50e4e3218c20" translate="yes" xml:space="preserve">
          <source>The interval between recurrences within the period.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e5afc4c50f72b83fd51414dbb46a5f523ee5b0" translate="yes" xml:space="preserve">
          <source>The inverse hyperbolic cosine of &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d718b259ef5552ded044b28e7ca040164ee37e4a" translate="yes" xml:space="preserve">
          <source>The inverse hyperbolic sine of &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391f6c49287dcd82c4c1f5dc26037d7605048e16" translate="yes" xml:space="preserve">
          <source>The iterator being constructed from. Either a &lt;a href=&quot;class.recursiveiterator&quot;&gt;RecursiveIterator&lt;/a&gt; or &lt;a href=&quot;class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fa5e17b64437fe19934b801d5e26b2d0e0e9fe" translate="yes" xml:space="preserve">
          <source>The iterator being constructed upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4345c3cd245309bf7e07e0bbb76192e43f5cd8" translate="yes" xml:space="preserve">
          <source>The iterator being copied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c76d295b96557523c86cf7a8094dfde31f4c4c" translate="yes" xml:space="preserve">
          <source>The iterator being counted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b15815d219d6b89f629d57b942a8d0326a1d6d6" translate="yes" xml:space="preserve">
          <source>The iterator being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4c0b08ed1464f05b2fb9b097d08ae6ea753a79" translate="yes" xml:space="preserve">
          <source>The iterator object to iterate over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef0900f4c1dd261306072aeda371248f862c2eb" translate="yes" xml:space="preserve">
          <source>The iterator that is being filtered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bc77fa5d7a9a348eaa9bd64fc4f515fc826ae7" translate="yes" xml:space="preserve">
          <source>The iterator to append.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98df4528a9ce9043ac8cbdbf8e440f26a75b6d6e" translate="yes" xml:space="preserve">
          <source>The iterator to apply this regex filter to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d7a9d7d3a629575bafc08b7aadffc60bacd71b" translate="yes" xml:space="preserve">
          <source>The iterator to be filtered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad40973432695e84e49299fafb1e0014fe81a61d" translate="yes" xml:space="preserve">
          <source>The iterator to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce374339883e65c9821acda98db8bb07574de0b7" translate="yes" xml:space="preserve">
          <source>The iterator to detach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4c19df75d0f60af129e04c557bdad3e0e99b56" translate="yes" xml:space="preserve">
          <source>The iterator to infinitely iterate over.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26cc66bdb23eaf9fb7c5af207088a283dab9d4e" translate="yes" xml:space="preserve">
          <source>The iterator to the next entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608d1c404b6d7ac7374f6509d06d27385b15f82d" translate="yes" xml:space="preserve">
          <source>The job handle assigned by the Gearman server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd9e25ea15a385ded6c6960ddc83b59e7194af0" translate="yes" xml:space="preserve">
          <source>The job handle for the running task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f5caa7146a9531ab26070cb81e1255dc7b51ca" translate="yes" xml:space="preserve">
          <source>The job handle for the submitted task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42ec44b4b3234fb1758e9374ae9c0d1cf435853" translate="yes" xml:space="preserve">
          <source>The job handle for the task to get status for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06525afc239462684b3fc5816c60b121db76af22" translate="yes" xml:space="preserve">
          <source>The job server host name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9677892cd282642a2cefa5c13635e1cc133c22" translate="yes" xml:space="preserve">
          <source>The job server port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a04f9fc1171a7a630137e9bdb8da0bfb46e8d9e" translate="yes" xml:space="preserve">
          <source>The julian date as a string in the form &quot;month/day/year&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c515e91f2c894c3f60c413a887e60d2f1c5961" translate="yes" xml:space="preserve">
          <source>The julian day for the given french revolution date as an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b874659a4762974e1c9bd16fc687be3a05434700" translate="yes" xml:space="preserve">
          <source>The julian day for the given gregorian date as an integer. Dates outside the valid range return &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e457bd8dc5c4ae77820a321b4c05a046666c059" translate="yes" xml:space="preserve">
          <source>The julian day for the given jewish date as an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90903c72c3389c778f85ee3b2a217602f7ecf5c" translate="yes" xml:space="preserve">
          <source>The julian day for the given julian date as an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43958bab6cd9ff222d2438468bf10ed2264d9456" translate="yes" xml:space="preserve">
          <source>The key can be optionally protected by a &lt;code&gt;passphrase&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1164d44d03ffea0685f8c6254813c829e9e0afeb" translate="yes" xml:space="preserve">
          <source>The key can either be an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; or a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;. The value can be of any type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6947d1ccad12bbb60d3ab4c6dc78599be1cd7f" translate="yes" xml:space="preserve">
          <source>The key for the current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac2e4fb71e3446c3888c29f67571fffa77a24e8" translate="yes" xml:space="preserve">
          <source>The key identifying the server to store the value on or retrieve it from. Instead of hashing on the actual key for the item, we hash on the server key when deciding which memcached server to talk to. This allows related items to be grouped together on a single server for efficiency with multi operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb6a80d470cc09e348de1719d857fc6a2a1773f" translate="yes" xml:space="preserve">
          <source>The key in string representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad827c0b0ad1958282a1a1c34808de6e36e676e" translate="yes" xml:space="preserve">
          <source>The key intersection of the current instance and another &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db2d85229e2886fe90d124441018c8e89752d06" translate="yes" xml:space="preserve">
          <source>The key is optional. If it is not specified, PHP will use the increment of the largest previously used &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536075603bfbde83125aef71312a21bbe520276c" translate="yes" xml:space="preserve">
          <source>The key is optionally protected by &lt;code&gt;passphrase&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251b7dbb5d244ffaf5672b8cfb591e9a38c76586" translate="yes" xml:space="preserve">
          <source>The key name of the module info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a75c1d77abce552faee49e66ac78da8b5fef7b6" translate="yes" xml:space="preserve">
          <source>The key object to remove from the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b393174f930d0939b234a834aa17f028088c289f" translate="yes" xml:space="preserve">
          <source>The key of the attribute to get.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97914faf166e710fa3bed75a117ea0d84e0c2e30" translate="yes" xml:space="preserve">
          <source>The key of the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24db389871dc071c8c62330b9fcd3de504f3b3f7" translate="yes" xml:space="preserve">
          <source>The key of the current iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad81892409d6ecca3ee3ee335e344cee68028bb1" translate="yes" xml:space="preserve">
          <source>The key of the entry to add or update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdacc14cd9f7c57e1463e4ec9d97eb8746a57886" translate="yes" xml:space="preserve">
          <source>The key of the entry to add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d70c68544ee9439c436b4d8cf44417ef2797b4b" translate="yes" xml:space="preserve">
          <source>The key of the entry to be inserted. If this key already exist in the database, this function will fail. Use &lt;a href=&quot;function.dba-replace&quot;&gt;dba_replace()&lt;/a&gt; if you need to replace an existent key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c5a64613bfc39d8888793b3b9d0d3edf0c36ac" translate="yes" xml:space="preserve">
          <source>The key of the entry to be replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8077c2ce1caf05e2c629b667e457f423c1a02b9a" translate="yes" xml:space="preserve">
          <source>The key of the entry to check for whether it exists in the hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eae652b03fe6aa06bf4cf9c14d1335988d5e472" translate="yes" xml:space="preserve">
          <source>The key of the entry to check for whether it exists in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457c1c1d9325935acc9826fd1a01e55e4e81019f" translate="yes" xml:space="preserve">
          <source>The key of the entry to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337f84f69b2b685d37b83174b7b8ac696a7801c6" translate="yes" xml:space="preserve">
          <source>The key of the entry which is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3a23a78701715f5034548897c156b5a6b1137e" translate="yes" xml:space="preserve">
          <source>The key of the item to decrement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fa12ba8e7267f823ec7c04ee94987ac5cc797a" translate="yes" xml:space="preserve">
          <source>The key of the item to fetch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff086d13e25897756d821f7b1afea447380309b" translate="yes" xml:space="preserve">
          <source>The key of the item to increment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc22f2182929140254839434f49bca995397950c" translate="yes" xml:space="preserve">
          <source>The key of the item to prepend the data to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a448d219ae0df2b2d75712842121f699495f0e17" translate="yes" xml:space="preserve">
          <source>The key of the item to retrieve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb28a420cd46c5a6586b63f5bfaf6ef8e4b9298" translate="yes" xml:space="preserve">
          <source>The key of the value being decreased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b504b4443588edd6cbeedea12a5e5a26e3412d" translate="yes" xml:space="preserve">
          <source>The key of the value being increased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75ec9a6a211cde6fd7a6cf38ccddcadc83cfdfb" translate="yes" xml:space="preserve">
          <source>The key of the value being updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1777906f98682ff42baca00b5ac34282c79a6ead" translate="yes" xml:space="preserve">
          <source>The key the check is performed for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088e528ec5ed6bf26a81be14700ef9ab4f9c288d" translate="yes" xml:space="preserve">
          <source>The key the data is specified by.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d4642fe85ab1ef38bf35bd27b2ebbed04c11c6" translate="yes" xml:space="preserve">
          <source>The key to associate the value with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756202e77de140f738b4ba2b5e8671e6473f767a" translate="yes" xml:space="preserve">
          <source>The key to be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0435da4d90293be7d9f53d1536da50874182a501" translate="yes" xml:space="preserve">
          <source>The key to look for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587bfda8ef884bc7213d5d14a545a7aa5b8e6ea0" translate="yes" xml:space="preserve">
          <source>The key to look up.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d0143bdb191d78186a217fbe072c2222d23c75" translate="yes" xml:space="preserve">
          <source>The key to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df50a75d3973b34ba303ed78b5d899d5a9a1fdfa" translate="yes" xml:space="preserve">
          <source>The key type of the private SSL key specified in &lt;strong&gt;&lt;code&gt;CURLOPT_SSLKEY&lt;/code&gt;&lt;/strong&gt;. Supported key types are &lt;em&gt;&quot;PEM&quot;&lt;/em&gt; (default), &lt;em&gt;&quot;DER&quot;&lt;/em&gt;, and &lt;em&gt;&quot;ENG&quot;&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6628ed8182b156b64b53b9d5e0ca47ef83818dc8" translate="yes" xml:space="preserve">
          <source>The key under which to store the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396e47a2c32f0e757cf0b1cfbb75cb1df1fac71e" translate="yes" xml:space="preserve">
          <source>The key with which the data was encrypted. If the provided key size is not supported by the cipher, the function will emit a warning and return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142c343bd2c6ea37c97109bad99925c43ba41d2f" translate="yes" xml:space="preserve">
          <source>The key with which the data will be encrypted. If the provided key size is not supported by the cipher, the function will emit a warning and return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07021616652b4190834cc6f5cd3d6a99828ab34d" translate="yes" xml:space="preserve">
          <source>The key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8a495f33439f79547c82629a0466e403f10055" translate="yes" xml:space="preserve">
          <source>The keys and values of the current instance won't be affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4b77838bdf820d3a1e145247c3b9a02aec66e4" translate="yes" xml:space="preserve">
          <source>The keys from &lt;code&gt;input_parameters&lt;/code&gt; must match the ones declared in the SQL. Before PHP 5.2.0 this was silently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84e11e34848c94342e21c68f1c6ca07ff3e7b46" translate="yes" xml:space="preserve">
          <source>The keys from the first array will be preserved. If an array key exists in both arrays, then the element from the first array will be used and the matching key's element from the second array will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba938de92ca5d120f0b6608f91328a90c3925455" translate="yes" xml:space="preserve">
          <source>The keys may represent the offset of the left boundary, right boundary, or they may just the sequence of non-negative integers. See &lt;a href=&quot;intlbreakiterator.getpartsiterator&quot;&gt;IntlBreakIterator::getPartsIterator()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3883ecf31f4d4d07463e44dae7ebb8f9161d1567" translate="yes" xml:space="preserve">
          <source>The keys to be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7def440b4543d99f82b955c460240ba00ce32fd8" translate="yes" xml:space="preserve">
          <source>The kill(2) manual page of the POSIX system, which contains additional information about negative process identifiers, the special pid 0, the special pid -1, and the signal number 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c0df0d00fa692700c410558e593d0a289145d4" translate="yes" xml:space="preserve">
          <source>The kind of codepage: either &lt;em&gt;'ansi'&lt;/em&gt; or &lt;em&gt;'oem'&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee034ce21d0b2496d86896957435f8ea96a53bc0" translate="yes" xml:space="preserve">
          <source>The label to add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c6b532a755c39811eb6c7f9923fe7508f9ba7a" translate="yes" xml:space="preserve">
          <source>The language code associated with the language or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; in case of error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5534ea51c19be50aedd97a75006434e1885df6f3" translate="yes" xml:space="preserve">
          <source>The language range to check against</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d6bfed1606aa7b0179615264062164a78c7ad1" translate="yes" xml:space="preserve">
          <source>The language tag to check</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1993d172833da427f6eff43538a6017d8af632c0" translate="yes" xml:space="preserve">
          <source>The largest number that can be converted is &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt;&lt;em&gt; * 2 + 1&lt;/em&gt; (or &lt;em&gt;-1&lt;/em&gt;): on 32-bit platforms, this will be &lt;em&gt;4294967295&lt;/em&gt; in decimal, which results in &lt;strong&gt;dechex()&lt;/strong&gt; returning &lt;em&gt;ffffffff&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca57d9febda68f8b8871170dfac7f286c52b4d2f" translate="yes" xml:space="preserve">
          <source>The largest possible random value returned by &lt;a href=&quot;function.rand&quot;&gt;rand()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb3c3baf69b67f62d3cd13b09254275027b8cd1" translate="yes" xml:space="preserve">
          <source>The last SOAP request headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9b79ae96eefb2dc4c404c7d66b0656e5a2c39a" translate="yes" xml:space="preserve">
          <source>The last SOAP request, as an XML string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb6d56be6ebf9b78d26d19bcc53a56b274be32f" translate="yes" xml:space="preserve">
          <source>The last SOAP response headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6eb1d71c8f674ff26ed274ee0eb31e78053f2f" translate="yes" xml:space="preserve">
          <source>The last SOAP response, as an XML string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2649eb2c12536d50ac31c5ae50943196be8ec15" translate="yes" xml:space="preserve">
          <source>The last change time, in a Unix timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22f7ca41613d07cbb818914e75c477b7328dbed" translate="yes" xml:space="preserve">
          <source>The last child of this node. If there is no such node, this returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079391a290a5e2c305433afbc38677965c71169f" translate="yes" xml:space="preserve">
          <source>The last day of any given month can be expressed as the &quot;0&quot; day of the next month, not the -1 day. Both of the following examples will produce the string &quot;The last day in Feb 2000 is: 29&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f127a5b8e08deda313484f87cf026a77cd523d3" translate="yes" xml:space="preserve">
          <source>The last error that occurred in any call to a function of the intl extension, including early argument errors, can be obtained with &lt;a href=&quot;function.intl-get-error-code&quot;&gt;intl_get_error_code()&lt;/a&gt;. This function resets the global error code, but not the objectʼs error code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1c49e092880a9065c628b2bde5207de46a44eb" translate="yes" xml:space="preserve">
          <source>The last example of expressions we'll deal with here is combined operator-assignment expressions. You already know that if you want to increment &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; by 1, you can simply write '&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt;++' or '++&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt;'. But what if you want to add more than one to it, for instance 3? You could write '&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt;++' multiple times, but this is obviously not a very efficient or comfortable way. A much more common practice is to write '&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; = &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; + 3'. '&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; + 3' evaluates to the value of &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; plus 3, and is assigned back into &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt;, which results in incrementing &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; by 3. In PHP, as in several other languages like C, you can write this in a shorter way, which with time would become clearer and quicker to understand as well. Adding 3 to the current value of &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; can be written '&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; += 3'. This means exactly &quot;take the value of &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt;, add 3 to it, and assign it back into &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt;&quot;. In addition to being shorter and clearer, this also results in faster execution. The value of '&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; += 3', like the value of a regular assignment, is the assigned value. Notice that it is NOT 3, but the combined value of &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; plus 3 (this is the value that's assigned into &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt;). Any two-place operator can be used in this operator-assignment mode, for example '&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; -= 5' (subtract 5 from the value of &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt;), '&lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; *= 7' (multiply the value of &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; by 7), etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774764de5f7e65b98292012a3173e9537c477710" translate="yes" xml:space="preserve">
          <source>The last item from the objects property table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bd69f043d349b43bf48659ef51de0f69678bef" translate="yes" xml:space="preserve">
          <source>The last line from the result of the command. If you need to execute a command and have all the data from the command passed directly back without any interference, use the &lt;a href=&quot;function.passthru&quot;&gt;passthru()&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fde02e813f92a890520e7dff893fbff43c2fc0" translate="yes" xml:space="preserve">
          <source>The last modification time of the file, as a Unix timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ba95e522e5b53af4c57a37040c3943baca2968" translate="yes" xml:space="preserve">
          <source>The last name of the new database user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08c941882a587aea603e9f2bad44a515400d9a4" translate="yes" xml:space="preserve">
          <source>The last pair of the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c38b7c6ed61d782cad774aeeaa4575711d9551b" translate="yes" xml:space="preserve">
          <source>The last value in the deque.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54cf52836a6cc278e4c3bbd082631b4fc352d93" translate="yes" xml:space="preserve">
          <source>The last value in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968d819696fe28688604a9ea380fce9678a2f3de" translate="yes" xml:space="preserve">
          <source>The last value in the set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89f070adc670970e4e8d041dd76d9091a84077e" translate="yes" xml:space="preserve">
          <source>The last value in the vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e0df4d534f2b57b1c4247c2d4fe4083af48dce" translate="yes" xml:space="preserve">
          <source>The left operand, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d753af7a032f657d3f16fb4e4eb272381078bc7d" translate="yes" xml:space="preserve">
          <source>The length in days of the selected month in the given calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b2f6539a87be17042d6d5b7c51ba4ef2101554" translate="yes" xml:space="preserve">
          <source>The length of data sent, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the send failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6b0a03d71ffdd6b482544aeda07dc76e21a227" translate="yes" xml:space="preserve">
          <source>The length of data to get.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7079e697d254c9b316441ecaea3021ffa5537c1" translate="yes" xml:space="preserve">
          <source>The length of strings to be used in the comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e20a642b1ffbcc5f16034dce8d7a60771b576d" translate="yes" xml:space="preserve">
          <source>The length of the &lt;code&gt;string&lt;/code&gt; on success, and &lt;em&gt;0&lt;/em&gt; if the &lt;code&gt;string&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862ec65cef60b1c1bac90423b017ec47ae11a085" translate="yes" xml:space="preserve">
          <source>The length of the authentication &lt;code&gt;tag&lt;/code&gt;. Its value can be between 4 and 16 for GCM mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d323e4688b2006aa9e739bdefaac47a9041a074f" translate="yes" xml:space="preserve">
          <source>The length of the comparison. The default value is the largest of the length of the &lt;code&gt;str&lt;/code&gt; compared to the length of &lt;code&gt;main_str&lt;/code&gt; less the &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05470783a4976e022c7f74c78ec8bd29539de1a5" translate="yes" xml:space="preserve">
          <source>The length of the contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f5224fbf493893008b2874f2274e8f6b548887" translate="yes" xml:space="preserve">
          <source>The length of the desired string of bytes. Must be a positive integer. PHP will try to cast this parameter to a non-null integer to use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb90cd758bc92b922d3d8fbd44be288faa676ee4" translate="yes" xml:space="preserve">
          <source>The length of the field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8eac743a04a49165249c9d2cf97821c1ac94d7" translate="yes" xml:space="preserve">
          <source>The length of the output string. If &lt;code&gt;raw_output&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; this corresponds to the byte-length of the derived key, if &lt;code&gt;raw_output&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; this corresponds to twice the byte-length of the derived key (as every byte of the key is returned as two hexits).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec2e7073cfaa8981c6321e6bbac69d0b33e2e4b" translate="yes" xml:space="preserve">
          <source>The length of the random string that should be returned in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d6d1a01eb460459fba8a7c5ca7e049187780b2" translate="yes" xml:space="preserve">
          <source>The length of the segment from &lt;code&gt;subject&lt;/code&gt; to examine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211c01b5fad447eac112282bdddad73ec6905b55" translate="yes" xml:space="preserve">
          <source>The length of the string on success, and 0 if the string is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcaf7e5747e619e94a6f4d77b1eb076d0d9ba46" translate="yes" xml:space="preserve">
          <source>The length of the wave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f22522e3f59de2fdbd577091f5cf6d660621a5" translate="yes" xml:space="preserve">
          <source>The length of this column. Normally &lt;em&gt;-1&lt;/em&gt; for types other than floating point decimals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d3764520c090ed08dcb7a170f0dc5996d62c620" translate="yes" xml:space="preserve">
          <source>The length to be read from the entry. If &lt;em&gt;0&lt;/em&gt;, then the entire entry is read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a5d01de5adeac2cc45ee56e4b167b49e7001a0" translate="yes" xml:space="preserve">
          <source>The level of compression. Can be given as 0 for no compression up to 9 for maximum compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc5d088667c25d1091e033909b34b9cf4dbf3b5" translate="yes" xml:space="preserve">
          <source>The level of compression. Can be given as 0 for no compression up to 9 for maximum compression. If not given, the default compression level will be the default compression level of the zlib library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae294f27a8e0688abea4d845d1a5a804fbf5468" translate="yes" xml:space="preserve">
          <source>The level of transparency: 1.0 is fully opaque and 0.0 is fully transparent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3220c54d2e9a1b00cc040e92ca31f25ed50ea3" translate="yes" xml:space="preserve">
          <source>The libXMLError class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aba278d7f683b7814994f5222643914649b618a" translate="yes" xml:space="preserve">
          <source>The limiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e61677b1094bf304be4b84a0197a3952317570" translate="yes" xml:space="preserve">
          <source>The line color. A color identifier created with &lt;a href=&quot;function.imagecolorallocate&quot;&gt;imagecolorallocate()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8d73aaf33365abc800dd1a193526f5201909be" translate="yes" xml:space="preserve">
          <source>The line ending sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28817589be3be4c8a2f1f038e59c4eb317ffd546" translate="yes" xml:space="preserve">
          <source>The line in c-space source file where exception was generated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fdf473d81e9317af4ba43f6fd8e0e02366b3e2" translate="yes" xml:space="preserve">
          <source>The line is broken using the optional &lt;code&gt;break&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073386dd52c1a8c02d41906b0860e5e1ed27390d" translate="yes" xml:space="preserve">
          <source>The line number at which the tags is located in the file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e60104946f8afa585fb1979d9be845cd43a99b3" translate="yes" xml:space="preserve">
          <source>The line number where the exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04fdb1e9d707c7c76203c5f57f949b1188ea2d1" translate="yes" xml:space="preserve">
          <source>The line number where the output started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db9264c0f0bac68ef6475fe25d07e46e237e94f" translate="yes" xml:space="preserve">
          <source>The line of code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb14319ef3fbde4c37e55eac28f5164f043cae4" translate="yes" xml:space="preserve">
          <source>The line where the error happened</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c791857d998bbf0bb74dbde8821e8c09defc3d6" translate="yes" xml:space="preserve">
          <source>The line where the error occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ba2fc03ad4d7711532d1d0ea34f1a027323aa4" translate="yes" xml:space="preserve">
          <source>The line where the exception was created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8e3f9d52d72f4d5757a61cec1a17f275e22ad8" translate="yes" xml:space="preserve">
          <source>The link identifier of the FTP connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8135a57537cd8bac29d0b3c936cfdcf16ff703f3" translate="yes" xml:space="preserve">
          <source>The link name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdc6726d014629653c91231cede85fb6b77a3ca" translate="yes" xml:space="preserve">
          <source>The list of all servers in the server pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7a57952af6850b7816687a574ec1995eff36a1" translate="yes" xml:space="preserve">
          <source>The list of allowable characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b6bb8239ed9bfa3438cf6deece6fb360c38e32" translate="yes" xml:space="preserve">
          <source>The list of supported protocols can be found in &lt;a href=&quot;https://secure.php.net/manual/en/wrappers.php&quot;&gt;Supported Protocols and Wrappers&lt;/a&gt;. Some protocols (also referred to as &lt;em&gt;wrappers&lt;/em&gt;) support &lt;em&gt;context&lt;/em&gt; and/or &lt;var&gt;php.ini&lt;/var&gt; options. Refer to the specific page for the protocol in use for a list of options which can be set. (e.g. &lt;var&gt;php.ini&lt;/var&gt; value &lt;em&gt;user_agent&lt;/em&gt; used by the &lt;em&gt;http&lt;/em&gt; wrapper).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cffb49a9b1f4cf25acad5e7c46f0a1b3e136008" translate="yes" xml:space="preserve">
          <source>The loaded &lt;var&gt;php.ini&lt;/var&gt; path, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if one is not loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce54c7ef3fe22c3745e346ee5ac27c75c3aa834" translate="yes" xml:space="preserve">
          <source>The loader is not accessed when including a file through the &lt;em&gt;phar&lt;/em&gt; stream wrapper like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ce804a1320ac900f5d3a16d7a5c8423a6cd0b9" translate="yes" xml:space="preserve">
          <source>The loader stub for a Phar archive is used whenever an archive is included directly as in this example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa0e16261a8051a97e61126369eff503d1f7d84" translate="yes" xml:space="preserve">
          <source>The local file path (will be overwritten if the file already exists).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37578733c848dbd71a75b40fb18710b25026238" translate="yes" xml:space="preserve">
          <source>The local file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efd19a9aaf7ec2025808cf5d1cc52d2a94facc5" translate="yes" xml:space="preserve">
          <source>The local name (without namespace) of the tag to match on. The special value &lt;em&gt;*&lt;/em&gt; matches all tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57046aa8d23b9f0bc2ba3ea84ddb2d61a8a6501" translate="yes" xml:space="preserve">
          <source>The local name of the XSLT parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e872ad6afca3b06f2cafee4324af72ae9a0abed" translate="yes" xml:space="preserve">
          <source>The local name of the attribute, as &lt;em&gt;prefix:tagname&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8350348697699bd6249117a8fa83f1d9ed86fac7" translate="yes" xml:space="preserve">
          <source>The local name of the elements to match on. The special value &lt;em&gt;*&lt;/em&gt; matches all local names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4833c85053a3f3fe8097468666f289ab768b0fb" translate="yes" xml:space="preserve">
          <source>The local name of the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef87be37433127486a2954c4302594f5248f223" translate="yes" xml:space="preserve">
          <source>The local name of the node to retrieve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31757f1bc3d2b48e1f6f9c9d153035125a9618aa" translate="yes" xml:space="preserve">
          <source>The local name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483bf710e9423a9b6ae878303386571f54a6b5ec" translate="yes" xml:space="preserve">
          <source>The local name. Use &lt;em&gt;*&lt;/em&gt; to return all elements within the element tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f45e245265c0c5001b8979906df5bde22f5c3b" translate="yes" xml:space="preserve">
          <source>The locale containing the required collation rules. Special values for locales can be passed in - if null is passed for the locale, the default locale collation rules will be used. If empty string (&quot;&quot;) or &quot;root&quot; are passed, &lt;a href=&quot;http://www.unicode.org/reports/tr10/&quot;&gt;&amp;raquo; UCA&lt;/a&gt; rules will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20021ff30e91716af37e2171be9b4cba2f014a6b" translate="yes" xml:space="preserve">
          <source>The locale information is maintained per process, not per thread. If you are running PHP on a multithreaded server API like IIS, HHVM or Apache on Windows, you may experience sudden changes in locale settings while a script is running, though the script itself never called &lt;strong&gt;setlocale()&lt;/strong&gt;. This happens due to other scripts running in different threads of the same process at the same time, changing the process-wide locale using &lt;strong&gt;setlocale()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a75b21bc79be82c2ad6d7e0386cc6ceac59e978" translate="yes" xml:space="preserve">
          <source>The locale keyword for which relevant values are to be queried. Only &lt;em&gt;'calendar'&lt;/em&gt; is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fb1371786b89556b7ccb930c821ff4b05a78d7" translate="yes" xml:space="preserve">
          <source>The locale name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b16fe288e70634e26c425f8d577e8d176470a5" translate="yes" xml:space="preserve">
          <source>The locale name used to create the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc74277e55191de5a182bea7e21eceac4d45098" translate="yes" xml:space="preserve">
          <source>The locale onto which the keyword/value pair are to be appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47dae0af53c69336a07d4733c50befa583d1b712" translate="yes" xml:space="preserve">
          <source>The locale settings are taken into account by this function. If &lt;em&gt;LC_CTYPE&lt;/em&gt; is e.g. &lt;em&gt;en_US.UTF-8&lt;/em&gt;, files in one-byte encodings may be read wrongly by this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a17b74fd74f997080789b3bb357c5bda8f37e26" translate="yes" xml:space="preserve">
          <source>The locale settings are taken into account by this function. If &lt;em&gt;LC_CTYPE&lt;/em&gt; is e.g. &lt;em&gt;en_US.UTF-8&lt;/em&gt;, strings in one-byte encodings may be read wrongly by this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70e153be4bcc841e56866994c606cdb0a4a87b9" translate="yes" xml:space="preserve">
          <source>The locale to extract the keywords from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643adf64ccd002dc054d8bd2f5975dc9105b007d" translate="yes" xml:space="preserve">
          <source>The locale to extract the primary language code from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6518d9b6a764d2e9f852a86311303158d796edc6" translate="yes" xml:space="preserve">
          <source>The locale to extract the region code from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21c577f60146336cb508a6f6d5bca3ec966ff44" translate="yes" xml:space="preserve">
          <source>The locale to extract the script code from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f06c1c4897b2a34908106b96dd998ce4873b0b4" translate="yes" xml:space="preserve">
          <source>The locale to extract the subtag array from. Note: The 'variant' and 'private' subtags can take maximum 15 values whereas 'extlang' can take maximum 3 values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6efb5d3cfbad002f13593bcda749cf4db896693" translate="yes" xml:space="preserve">
          <source>The locale to extract the variants from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b53f519cde3d3750bcda0025471196f4c49a06" translate="yes" xml:space="preserve">
          <source>The locale to return a display language for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b457fb56e89a7b619161a836e2d8dba91e7908" translate="yes" xml:space="preserve">
          <source>The locale to return a display name for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e714ee76c16763e997f5537c90f6dabae470cb" translate="yes" xml:space="preserve">
          <source>The locale to return a display region for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c17ae66313ddc233de92ffc6c7c1ccebe7c9bd" translate="yes" xml:space="preserve">
          <source>The locale to return a display script for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f3400e17d898391b07642e384b7f7f3a5448f6" translate="yes" xml:space="preserve">
          <source>The locale to return a display variant for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49dfaf68212bf630a129182d843e75685d02f0ef" translate="yes" xml:space="preserve">
          <source>The locale to use as the language range when matching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de834ee68268535f987daf49af26aac09dca4586" translate="yes" xml:space="preserve">
          <source>The locale to use for formatting locale-dependent parts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b726b7d72999e07cc50088b3fd7552da51c036f5" translate="yes" xml:space="preserve">
          <source>The locale to use for parsing locale-dependent parts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9b2b2d93487c5fc8767fdc7a40369c52e6993a" translate="yes" xml:space="preserve">
          <source>The locale to use if no match is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0973129241cea67f88c19b8280b18e9b2cc58f" translate="yes" xml:space="preserve">
          <source>The locale to use when formatting arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b8eb80c5bbe16ee35d3b37e10efcdc234abf8a" translate="yes" xml:space="preserve">
          <source>The locale to use, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; to use the &lt;a href=&quot;https://secure.php.net/manual/en/intl.configuration.php#ini.intl.default-locale&quot;&gt;default one&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f4fc01c88f0f5e76820c262cec7424c56bb4e0" translate="yes" xml:space="preserve">
          <source>The locale whose collation rules should be used. Special values for locales can be passed in - if null is passed for the locale, the default locale's collation rules will be used. If &quot;root&quot; is passed, UCA rules will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41a2da4b03deddae9587728b0c01e5153c32390" translate="yes" xml:space="preserve">
          <source>The location of the document or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8329af9d5451977b99ccd86bcb874104c4e5c7" translate="yes" xml:space="preserve">
          <source>The location of the image file. This can either be a path to the file (stream wrappers are also supported as usual) or a stream &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0b6a897bdfbc23c3fddda0d5c5e94224fa6f7f" translate="yes" xml:space="preserve">
          <source>The location of the image file. This can either be a path to the file or a stream &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7630621bda307814e0ff7cf2e214bd043bb8c7c8" translate="yes" xml:space="preserve">
          <source>The location of the script to run when a file is not found. This script should output the proper HTTP 404 headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531fad7c1255c42a5a38fc688b4d08be0c78ecfa" translate="yes" xml:space="preserve">
          <source>The location parameter of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41d69e35cd9e2887bca6159d6dd6c73dee30209" translate="yes" xml:space="preserve">
          <source>The location within the phar of the directory index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120dc3571c35094d7bee237f63100c744d176e1a" translate="yes" xml:space="preserve">
          <source>The logarithm of &lt;code&gt;arg&lt;/code&gt; to &lt;code&gt;base&lt;/code&gt;, if given, or the natural logarithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852d6a66603cb04088a677813397843bc8199c98" translate="yes" xml:space="preserve">
          <source>The login name of the database user to modify.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990e1026b096c5d3474a67ebe89086e1b63e8c9a" translate="yes" xml:space="preserve">
          <source>The login name of the new database user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9292834879ad32ecab1e067bb9e8c3ca65bbd11a" translate="yes" xml:space="preserve">
          <source>The login name of the user you want to delete from the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867f53d9086ce972c2b226b51636111cbd6842ad" translate="yes" xml:space="preserve">
          <source>The low point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b30a604967ba515c62ad00df2b43523a9fe8015" translate="yes" xml:space="preserve">
          <source>The lower bound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f67b7c0c7330b914a693f95ed5160cc6991dfa" translate="yes" xml:space="preserve">
          <source>The lower bound (inclusive)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f73394b04aefd980ab5121cf28fffcd03f3dc96" translate="yes" xml:space="preserve">
          <source>The lower bound Term</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b29a5af25f5014a3a63e66349aad2305afba6a1" translate="yes" xml:space="preserve">
          <source>The lower bound of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35e03ad3c88a1ef03b5f618848f78bcf030b626" translate="yes" xml:space="preserve">
          <source>The lowercased name of the class (and namespace) being instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad19c0051efbf979d55f58b0d84e7c48c9e1b7c" translate="yes" xml:space="preserve">
          <source>The lowest value to be returned, which must be &lt;strong&gt;&lt;code&gt;PHP_INT_MIN&lt;/code&gt;&lt;/strong&gt; or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732a6d3647804019fce52250a4a80dc27f644cfb" translate="yes" xml:space="preserve">
          <source>The lowest value to return (default: 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb7315bfe40a3776ca7793064d73f96f4725540" translate="yes" xml:space="preserve">
          <source>The lucene phrase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fc8831efad7d01dba1f0aa3f3dfd1d2da84946" translate="yes" xml:space="preserve">
          <source>The mail addresses being sent to. Multiple recipients may be specified by putting a comma between each address in &lt;code&gt;to&lt;/code&gt;. This parameter is not automatically encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c73caaec7003866607be6e3e5c6b8111707f549" translate="yes" xml:space="preserve">
          <source>The mail body, see &lt;a href=&quot;function.imap-mail-compose&quot;&gt;imap_mail_compose()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9314821feddcd1e11d775cee0b944153f83b90e7" translate="yes" xml:space="preserve">
          <source>The mail subject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa40ff9dcc056045cbc46b82e9be06695c51693" translate="yes" xml:space="preserve">
          <source>The mailbox name, see &lt;a href=&quot;function.imap-open&quot;&gt;imap_open()&lt;/a&gt; for more information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9f81a1c12124000786bcd7da66b100289c2688" translate="yes" xml:space="preserve">
          <source>The mailbox name, see &lt;a href=&quot;function.imap-open&quot;&gt;imap_open()&lt;/a&gt; for more information. Names containing international characters should be encoded by &lt;a href=&quot;function.imap-utf7-encode&quot;&gt;imap_utf7_encode()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a661e95aa6ecf2c618480a80a46297e73eff540c" translate="yes" xml:space="preserve">
          <source>The mailbox to have a quota set. This should follow the IMAP standard format for a mailbox: &lt;em&gt;user.name&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26dc3ac2da88e9c7523de4599e316279b9cec8f" translate="yes" xml:space="preserve">
          <source>The main difference between &lt;strong&gt;sqlsrv_cancel()&lt;/strong&gt; and &lt;a href=&quot;function.sqlsrv-free-stmt&quot;&gt;sqlsrv_free_stmt()&lt;/a&gt; is that a statement resource cancelled with &lt;strong&gt;sqlsrv_cancel()&lt;/strong&gt; can be re-executed if it was created with &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare()&lt;/a&gt;. A statement resource cancelled with &lt;strong&gt;sqlsrv_free_statement()&lt;/strong&gt; cannot be re-executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6ccc74e5118a2bb82f0c5a68f6c3ade82a86eb" translate="yes" xml:space="preserve">
          <source>The main difference between &lt;strong&gt;sqlsrv_free_stmt()&lt;/strong&gt; and &lt;a href=&quot;function.sqlsrv-cancel&quot;&gt;sqlsrv_cancel()&lt;/a&gt; is that a statement resource cancelled with &lt;a href=&quot;function.sqlsrv-cancel&quot;&gt;sqlsrv_cancel()&lt;/a&gt; can be re-executed if it was created with &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare()&lt;/a&gt;. A statement resource cancelled with &lt;strong&gt;sqlsrv_free_statement()&lt;/strong&gt; cannot be re-executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08aa8dfabba4ebb6a95fc501795796799d5a58c" translate="yes" xml:space="preserve">
          <source>The main purpose is to integrate other event mechanisms into &lt;em&gt;libev&lt;/em&gt; and their use is somewhat advanced. They could be used, for example, to track variable changes, implement custom watchers, integrate net-snmp or a coroutine library and lots more. They are also occasionally useful to cache some data and want to flush it before blocking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475f6580b29d6e3275320bf5525017611bc8d783" translate="yes" xml:space="preserve">
          <source>The main string being compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3329eec2c98633834c77806bff87764a96dd9c" translate="yes" xml:space="preserve">
          <source>The main use for &lt;strong&gt;apache_note()&lt;/strong&gt; is to pass information from one module to another within the same request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9231158d60cecb6641224ac9e447941164eb51" translate="yes" xml:space="preserve">
          <source>The major device kernel identifier (required to pass when using &lt;strong&gt;&lt;code&gt;S_IFCHR&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;S_IFBLK&lt;/code&gt;&lt;/strong&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eed08012f54b2fc7352646c5505dbd51bff9917" translate="yes" xml:space="preserve">
          <source>The major differences to &lt;em&gt;echo&lt;/em&gt; are that &lt;em&gt;print&lt;/em&gt; only accepts a single argument and always returns 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548d26ebb030dd508ece2dbd193366a19e8d8cb9" translate="yes" xml:space="preserve">
          <source>The major differences to &lt;em&gt;print&lt;/em&gt; are that &lt;em&gt;echo&lt;/em&gt; accepts an argument list and doesn't have a return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33274c9750b0970edc28b2e2360da50c6132fb89" translate="yes" xml:space="preserve">
          <source>The map containing the keys to exclude in the resulting map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6596157d466892855dfcbc295337809ca40022" translate="yes" xml:space="preserve">
          <source>The markers are legal only in certain places in SQL statements. For example, they are allowed in the &lt;em&gt;VALUES()&lt;/em&gt; list of an &lt;em&gt;INSERT&lt;/em&gt; statement (to specify column values for a row), or in a comparison with a column in a &lt;em&gt;WHERE&lt;/em&gt; clause to specify a comparison value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac66d8d9c1e0dd1475ff34f5d22bb441fb66032" translate="yes" xml:space="preserve">
          <source>The markers are legal only in certain places in SQL statements. For example, they are allowed in the VALUES() list of an INSERT statement (to specify column values for a row), or in a comparison with a column in a WHERE clause to specify a comparison value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785598f2196b99770d32a1e154c1d2b778ce5c92" translate="yes" xml:space="preserve">
          <source>The matrix containing the color values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086069bb791e2791207c03624c2885e053624a43" translate="yes" xml:space="preserve">
          <source>The maximum accepted depth, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if any depth is allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9aa25279aedce4080aa5bf00bb5452fa6f7e42" translate="yes" xml:space="preserve">
          <source>The maximum allowed depth. &lt;em&gt;-1&lt;/em&gt; is used for any depth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761c88374b564be89d30f4508baf4824568e6106" translate="yes" xml:space="preserve">
          <source>The maximum amount of HTTP redirections to follow. Use this option alongside &lt;strong&gt;&lt;code&gt;CURLOPT_FOLLOWLOCATION&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f286b8a662c311df913611bbcf566c34ce35250" translate="yes" xml:space="preserve">
          <source>The maximum amount of memory (in bytes, default is 2 MB) for the temporary file to use. If the temporary file exceeds this size, it will be moved to a file in the system's temp directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a9e1a017d8cd7a4f8f409e4ff99bc83bac29bf" translate="yes" xml:space="preserve">
          <source>The maximum amount of persistent connections that are allowed. When the limit is reached, &lt;strong&gt;&lt;code&gt;CURLOPT_CLOSEPOLICY&lt;/code&gt;&lt;/strong&gt; is used to determine which connection to close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36aed97f1ccc48b475227ff85feb1e61d7290294" translate="yes" xml:space="preserve">
          <source>The maximum body size in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67077090e8ab248a1c08013f2ccdd65b2ddbcc86" translate="yes" xml:space="preserve">
          <source>The maximum bytes to read. Defaults to -1 (read all the remaining buffer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dac6e2bae537255d9bba364508c5688bbdb64b" translate="yes" xml:space="preserve">
          <source>The maximum distance within which to consider these colors as similar. The theoretical maximum for this value is the square root of three (1.732).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83286a588b452d3e5a9bb219fe163a622392692a" translate="yes" xml:space="preserve">
          <source>The maximum document frequency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b869dfc712642537ced4ce1c90324e446a45f8d8" translate="yes" xml:space="preserve">
          <source>The maximum execution time, in seconds. If set to zero, no time limit is imposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9480090f99db60e16380199c432416d346dc2ea6" translate="yes" xml:space="preserve">
          <source>The maximum header size in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9efdda3d365d08b509de802892d66ebf4c74a9f" translate="yes" xml:space="preserve">
          <source>The maximum length after the specified offset to search for the substring. It outputs a warning if the offset plus the length is greater than the &lt;code&gt;haystack&lt;/code&gt; length. A negative length counts from the end of &lt;code&gt;haystack&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78d7230d71d0130865cb3fc250103d20e508ef7" translate="yes" xml:space="preserve">
          <source>The maximum length of a line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27742224c3aa4a5ef426557ddd1deb61c985918b" translate="yes" xml:space="preserve">
          <source>The maximum length of a subject string is the largest positive number that an integer variable can hold. However, PCRE uses recursion to handle subpatterns and indefinite repetition. This means that the available stack space may limit the size of a subject string that can be processed by certain patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b1f021cd369f1fae77064ba9c1e80451dbc7fd" translate="yes" xml:space="preserve">
          <source>The maximum length of data to decode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9373583a9dbd9f9939998616847b440ce539aa1e" translate="yes" xml:space="preserve">
          <source>The maximum length of the key should be the one obtained by calling &lt;a href=&quot;function.mcrypt-enc-get-key-size&quot;&gt;mcrypt_enc_get_key_size()&lt;/a&gt; and every value smaller than this is legal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3938eda99e3ea1e3c094ac7928706a629b1349a3" translate="yes" xml:space="preserve">
          <source>The maximum number of Workers this Pool can create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a7a84eb99a98357a03e6afc14c0a7d7790f611" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes allowed in one message queue. On Linux, this value may be read and modified via &lt;var&gt;/proc/sys/kernel/msgmnb&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2590dccec965fdce6dba655d89075859261d0c" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes of memory that may be locked into RAM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a19c1d950eb4a852b4f8115f607dbce418d757" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes read is specified by the &lt;code&gt;length&lt;/code&gt; parameter. Otherwise you can use &lt;strong&gt;&lt;code&gt;\r&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;\n&lt;/code&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;code&gt;\0&lt;/code&gt;&lt;/strong&gt; to end reading (depending on the &lt;code&gt;type&lt;/code&gt; parameter, see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e423f4c2b9d97fc08e0651d8f2117b2aa5e1637b" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c3c4af710cec69ffe8baa9d93ef16ade93923a" translate="yes" xml:space="preserve">
          <source>The maximum number of characters to analyze from a field when using the regex fragmenter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6315be702c134863dd9534c0aa96d8af5a5faad" translate="yes" xml:space="preserve">
          <source>The maximum number of characters to be stored in the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f90dc6487bfbbde074b3384b33f52beb7fbbed3" translate="yes" xml:space="preserve">
          <source>The maximum number of constraint counts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="affc712e5e598f9a4ba8c74df48f30751f34918b" translate="yes" xml:space="preserve">
          <source>The maximum number of digits (n) expected to the left of the decimal character (e.g. the decimal point). It is used usually to keep formatted output aligned in the same columns, using the fill character if the number of digits is less than n. If the number of actual digits is bigger than n, then this specification is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e12906c2759c13e9dfb42bf46d67e971afe2c1e" translate="yes" xml:space="preserve">
          <source>The maximum number of highlighted snippets to generate per field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4486207202d1a6036562d1f2566257a074c1f906" translate="yes" xml:space="preserve">
          <source>The maximum number of milliseconds to allow cURL functions to execute. If libcurl is built to use the standard system name resolver, that portion of the connect will still use full-second resolution for timeouts with a minimum timeout allowed of one second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b6a29a1b7d6f99c0454516c56835772c8b6d26" translate="yes" xml:space="preserve">
          <source>The maximum number of processes that can be created for the real user ID of the calling process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3113c78d97ca3c61bf9481989831c2bbb30742" translate="yes" xml:space="preserve">
          <source>The maximum number of query terms that will be included in any generated query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e490c0601780ceb04f7ec24bfa896e20686a283" translate="yes" xml:space="preserve">
          <source>The maximum number of rows to return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9ebefc3ae4b658875dd84942056bc37cfb7b25" translate="yes" xml:space="preserve">
          <source>The maximum number of seconds to allow cURL functions to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9d656756af97b25d981620dfaf7f8716c1df05" translate="yes" xml:space="preserve">
          <source>The maximum number of terms to return. All the terms will be returned if the limit is negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bae0d896cfb6971d14d8a85d9d44dd47a0bec8e" translate="yes" xml:space="preserve">
          <source>The maximum number of tokens to parse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7550c72fc7325122c1720a22e4f10b9dacc45259" translate="yes" xml:space="preserve">
          <source>The maximum number of virtual pages resident in RAM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b335635ec2149bcc67563fec24e538dd3357391" translate="yes" xml:space="preserve">
          <source>The maximum number of workers for this pool to create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2fa7ba17005e11ea059c4e4ff7cc34884a9469" translate="yes" xml:space="preserve">
          <source>The maximum number passed to the &lt;code&gt;backlog&lt;/code&gt; parameter highly depends on the underlying platform. On Linux, it is silently truncated to &lt;strong&gt;&lt;code&gt;SOMAXCONN&lt;/code&gt;&lt;/strong&gt;. On win32, if passed &lt;strong&gt;&lt;code&gt;SOMAXCONN&lt;/code&gt;&lt;/strong&gt;, the underlying service provider responsible for the socket will set the backlog to a maximum &lt;em&gt;reasonable&lt;/em&gt; value. There is no standard provision to find out the actual backlog value on this platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e95bb9e4162d906d833b1c40063ec13b5a04ce" translate="yes" xml:space="preserve">
          <source>The maximum possible replacements for each pattern in each &lt;code&gt;subject&lt;/code&gt; string. Defaults to &lt;em&gt;-1&lt;/em&gt; (no limit).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463d55f6d85227a618c85ac5122ce8fd7d76e119" translate="yes" xml:space="preserve">
          <source>The maximum size (in KB) for the &lt;code&gt;quota_root&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dddda2269754bd4bcb5c3ad7f6d78e70bd97e5d" translate="yes" xml:space="preserve">
          <source>The maximum size of message to be accepted is specified by the &lt;code&gt;maxsize&lt;/code&gt;; if the message in the queue is larger than this size the function will fail (unless you set &lt;code&gt;flags&lt;/code&gt; as described below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4beb4f0c00a7a73daed85d14a5bbde4b4db755b1" translate="yes" xml:space="preserve">
          <source>The maximum size of the core file. When 0, not core files are created. When core files are larger than this size, they will be truncated at this size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8554a5f2c911a181a162df9002cd39d2483ee13" translate="yes" xml:space="preserve">
          <source>The maximum size of the data segment for the process, in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17098b3bf0c0ae6e2ce267552c1e39ec2be7c46c" translate="yes" xml:space="preserve">
          <source>The maximum size of the memory of the process, in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8684caba516688f000fc6a21618e9d4deda734c3" translate="yes" xml:space="preserve">
          <source>The maximum size of the process stack, in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0563e5c45c2c11f4dac03e8d9439682d90d9b48" translate="yes" xml:space="preserve">
          <source>The maximum size of the virtual memory for the process, in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513c65ba7842eb098b1dcea97eb11503160bf5a6" translate="yes" xml:space="preserve">
          <source>The maximum stack depth has been exceeded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587e3f058ae71a0048cf758a105f09d417f672b6" translate="yes" xml:space="preserve">
          <source>The maximum value depends on the system. 32 bit systems have a maximum signed integer range of -2147483648 to 2147483647. So for example on such a system, &lt;em&gt;intval('1000000000000')&lt;/em&gt; will return 2147483647. The maximum signed integer value for 64 bit systems is 9223372036854775807.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a27cd3d0057ed56e25ea3207887bb2fcbab4404" translate="yes" xml:space="preserve">
          <source>The maximum value returned by &lt;a href=&quot;intlchar.getintpropertyvalue&quot;&gt;IntlChar::getIntPropertyValue()&lt;/a&gt; for a Unicode property. &lt;em&gt;&amp;lt;=0&lt;/em&gt; if the property selector is out of range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3d61481e1227b9d6d08a479ad902ad958f6038" translate="yes" xml:space="preserve">
          <source>The maximum width of the field for the result set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc2d0519631827e9c3b012bbc6794cdbff6e890" translate="yes" xml:space="preserve">
          <source>The maximum word length above which words will be ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d4a9516f00ae9d6472fe5c8e969199fb054438" translate="yes" xml:space="preserve">
          <source>The mean of the distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbb2c0c51697b40d81b43a97fff30db31b7820f" translate="yes" xml:space="preserve">
          <source>The mean of the normal distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635687af027d6dde1faa77c6b3d9ff88c8d267c5" translate="yes" xml:space="preserve">
          <source>The mean offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd73d13943fcdc6b4bca0fe28f88f0d8a53cbb46" translate="yes" xml:space="preserve">
          <source>The meaning of a &lt;em&gt;while&lt;/em&gt; statement is simple. It tells PHP to execute the nested statement(s) repeatedly, as long as the &lt;em&gt;while&lt;/em&gt; expression evaluates to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;. The value of the expression is checked each time at the beginning of the loop, so even if this value changes during the execution of the nested statement(s), execution will not stop until the end of the iteration (each time PHP runs the statements in the loop is one iteration). Sometimes, if the &lt;em&gt;while&lt;/em&gt; expression evaluates to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; from the very beginning, the nested statement(s) won't even be run once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa71af0d572fed2f6fba7b7b93a0a59b0b55b35" translate="yes" xml:space="preserve">
          <source>The meaning of dollar can be changed so that it matches only at the very end of the string, by setting the &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOLLAR_ENDONLY&lt;/a&gt; option at compile or matching time. This does not affect the \Z assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27095bed479d48eea7dc3e9adc9bea50157c8a75" translate="yes" xml:space="preserve">
          <source>The meaning of this value is dependent on the specific wrapper in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52761d4904230bd359eba8e468cf50e820649f63" translate="yes" xml:space="preserve">
          <source>The meanings of the circumflex and dollar characters are changed if the &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_MULTILINE&lt;/a&gt; option is set. When this is the case, they match immediately after and immediately before an internal &quot;\n&quot; character, respectively, in addition to matching at the start and end of the subject string. For example, the pattern /^abc$/ matches the subject string &quot;def\nabc&quot; in multiline mode, but not otherwise. Consequently, patterns that are anchored in single line mode because all branches start with &quot;^&quot; are not anchored in multiline mode. The &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_DOLLAR_ENDONLY&lt;/a&gt; option is ignored if &lt;a href=&quot;reference.pcre.pattern.modifiers&quot;&gt;PCRE_MULTILINE&lt;/a&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d92c301154565be664eb12fab524c75cd64af5f" translate="yes" xml:space="preserve">
          <source>The memory size. If not provided, default to the &lt;em&gt;sysvshm.init_mem&lt;/em&gt; in the &lt;var&gt;php.ini&lt;/var&gt;, otherwise 10000 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706d394f30bc5168ee0ad023e79bd99ae56018eb" translate="yes" xml:space="preserve">
          <source>The message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c0db70e797b987f835d6961759691ed71bf585" translate="yes" xml:space="preserve">
          <source>The message UID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a71e126b2fb145aae56cd906d0ecfefce7c7414" translate="yes" xml:space="preserve">
          <source>The message being translated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13bb433c9a1f13e15792493102cb65c2b2f4d68" translate="yes" xml:space="preserve">
          <source>The message formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7848a5d594ff4ad9f37e3588606fccba59739ecd" translate="yes" xml:space="preserve">
          <source>The message number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d788ad3300b7fbb6dfd19c49f1f5315210a56e" translate="yes" xml:space="preserve">
          <source>The message number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061e3a8f4c5415d7ab80bf1bb8a6c439cecd3dfc" translate="yes" xml:space="preserve">
          <source>The message of the mail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb94152a4aedfd3739e213d527e25de399d6bc2" translate="yes" xml:space="preserve">
          <source>The message to be append, as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3352d8771ea520c2b900bbdc9f1e90c897a30e3" translate="yes" xml:space="preserve">
          <source>The message to send, except that the two characters &lt;em&gt;%m&lt;/em&gt; will be replaced by the error message string (strerror) corresponding to the present value of errno.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787302ec1e21f9ac3b092035f9ecef0334fb95bd" translate="yes" xml:space="preserve">
          <source>The method is one of the &lt;strong&gt;&lt;code&gt;Imagick::INTERPOLATE_*&lt;/code&gt;&lt;/strong&gt; constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd121539032d1aa634563f13cd1d7bb73f83b33" translate="yes" xml:space="preserve">
          <source>The method name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d2558586ba6e1b76ef957f0423abb364d9525e" translate="yes" xml:space="preserve">
          <source>The method name being called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee273124ac63f9d7dee4390f0d623250a904a25e" translate="yes" xml:space="preserve">
          <source>The method name to reflect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a903d04db022d004f08cc98591b434b6a65c4c" translate="yes" xml:space="preserve">
          <source>The method of image distortion. See &lt;a href=&quot;https://secure.php.net/manual/en/imagick.constants.php#imagick.constants.distortion&quot;&gt;distortion constants&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d30e3d436368e504f051fbc355f5400e2016cd1" translate="yes" xml:space="preserve">
          <source>The method returns a &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt; object on success and throws an exception on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc679c196f1ee50952164fac5362c4843b999f3f" translate="yes" xml:space="preserve">
          <source>The method returns a &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt; object on success and throws an exception on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fb3a8f460813c2ec95b3ab5109bf526aa67937" translate="yes" xml:space="preserve">
          <source>The method to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73e52be26638830ab688a78842fc96143e7a2da" translate="yes" xml:space="preserve">
          <source>The method was deprecated in favour of the &lt;a href=&quot;language.oop5.cloning&quot;&gt;clone&lt;/a&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67440bc2c283d307bcd3cd4957b6435be7585a16" translate="yes" xml:space="preserve">
          <source>The methods return value, if used, will be ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff105c6e4edf57cdb477dae56ad3202cc4a4eb04" translate="yes" xml:space="preserve">
          <source>The microseconds part of the timeout to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85761535448b6c036ba5bd91b64b74fee052a723" translate="yes" xml:space="preserve">
          <source>The middle name of the new database user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef35b6fb4e1d441bf2984a0b0a00475886296211" translate="yes" xml:space="preserve">
          <source>The milliseconds to sleep. Setting this value to a value less than or equal to zero, will turn off an already set timeout handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f561b5b3697051317a27fd651453b24c5e2cc8e8" translate="yes" xml:space="preserve">
          <source>The minimum count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bd8336f90efcd4ecad2985e64f97940d5fe194" translate="yes" xml:space="preserve">
          <source>The minimum frequency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4dbc503eb8f989f106e69241bdda29635d3a78" translate="yes" xml:space="preserve">
          <source>The minimum value returned by &lt;a href=&quot;intlchar.getintpropertyvalue&quot;&gt;IntlChar::getIntPropertyValue()&lt;/a&gt; for a Unicode property. &lt;em&gt;0&lt;/em&gt; if the property selector is out of range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592bc93e46e9ead0b313bc2cb87d766c3a002fd4" translate="yes" xml:space="preserve">
          <source>The minimum word length below which words will be ignored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd43c6b5d3eda3335f58332ed662ca48ca338a1" translate="yes" xml:space="preserve">
          <source>The minor device kernel identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa176d51fe913231125665fa5cfbfd740baf929" translate="yes" xml:space="preserve">
          <source>The minus (hyphen) character can be used to specify a range of characters in a character class. For example, [d-m] matches any letter between d and m, inclusive. If a minus character is required in a class, it must be escaped with a backslash or appear in a position where it cannot be interpreted as indicating a range, typically as the first or last character in the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb829d38c4a822d1615052fd82742d1bcafcca5" translate="yes" xml:space="preserve">
          <source>The minus sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3441a14da4a2b6d69e3ea436e7106f647876614d" translate="yes" xml:space="preserve">
          <source>The mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de83e3afeb31736ec85ba539313fda39b83fdcae" translate="yes" xml:space="preserve">
          <source>The mode for opening the file. See the &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; documentation for descriptions of possible modes. The default is read only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ca3d0e6920cf9e0c39a64fa8ec613f962ce6fc" translate="yes" xml:space="preserve">
          <source>The mode in which to open the file. See &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; for a list of allowed modes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61060fb6f28cf80d821aa99a279789716d1ad1b2" translate="yes" xml:space="preserve">
          <source>The mode is 0777 by default, which means the widest possible access. For more information on modes, read the details on the &lt;a href=&quot;function.chmod&quot;&gt;chmod()&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44d53c1590825df8571bcc8ebee48b06b904151" translate="yes" xml:space="preserve">
          <source>The mode of the conversion. It can be one of &lt;strong&gt;&lt;code&gt;MB_CASE_UPPER&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;MB_CASE_LOWER&lt;/code&gt;&lt;/strong&gt;, or &lt;strong&gt;&lt;code&gt;MB_CASE_TITLE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6323d82844a9c1f490bb741996238a3950e6e711" translate="yes" xml:space="preserve">
          <source>The mode to check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bf46b7163465c79b584f86d5bffcc40c7733dd" translate="yes" xml:space="preserve">
          <source>The mode to use to open the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07255c5e71bd5f32b9f4d46cd6af3198cbde710d" translate="yes" xml:space="preserve">
          <source>The mode used to open the file, as detailed for &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab0d2428309362a1166a0606afc0848defabc9d" translate="yes" xml:space="preserve">
          <source>The modes 'r' (read), and 'w' (write) are supported. Everything else will cause &lt;strong&gt;bzopen()&lt;/strong&gt; to return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff109cf7345f0696d3aaac3e9f337e85a3b6ee3" translate="yes" xml:space="preserve">
          <source>The modified string is returned. If no matches are found in &lt;code&gt;string&lt;/code&gt;, then it will be returned unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b16bd1cadd960eba6901aaf5386828e8bea9c3" translate="yes" xml:space="preserve">
          <source>The module name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862355dca70ef218f5b850d90a5bfed4cc6ad96b" translate="yes" xml:space="preserve">
          <source>The modulo that is being evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14205bcb5b01fde7377ba60ee159aa6391d247ae" translate="yes" xml:space="preserve">
          <source>The modulo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b2113f9f94b7432ea06758d4075432e9074fe8" translate="yes" xml:space="preserve">
          <source>The modulus, as an integral string (i.e. the scale has to be zero).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee2428a4c5d184e67d93ba30af139b4e4263918" translate="yes" xml:space="preserve">
          <source>The monetary grouping separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874ef7137a694374d8e8b80ad7569d35941826bb" translate="yes" xml:space="preserve">
          <source>The monetary separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9393e8f59b263dd70271056fb4e21f59a1ca92" translate="yes" xml:space="preserve">
          <source>The month as a number from 1 (for January) to 12 (for December)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e8aa66d7b0844c8234feee3989882e5e8a1425" translate="yes" xml:space="preserve">
          <source>The month as a number from 1 (for Vend&amp;eacute;miaire) to 13 (for the period of 5-6 days at the end of each year)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92abe1433e425b4d01df330cd386c479e5b2ca22" translate="yes" xml:space="preserve">
          <source>The month as a number from &lt;em&gt;1&lt;/em&gt; to &lt;em&gt;13&lt;/em&gt;, where &lt;em&gt;1&lt;/em&gt; means &lt;em&gt;Tishri&lt;/em&gt;, &lt;em&gt;13&lt;/em&gt; means &lt;em&gt;Elul&lt;/em&gt;, and &lt;em&gt;6&lt;/em&gt;&lt;em&gt;and&lt;/em&gt;&lt;em&gt;7&lt;/em&gt; mean &lt;em&gt;Adar&lt;/em&gt; in regular years, but &lt;em&gt;Adar I&lt;/em&gt; and &lt;em&gt;Adar II&lt;/em&gt;, respectively, in leap years.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994e090d2f38c856686f88871b88679c35fff950" translate="yes" xml:space="preserve">
          <source>The month as a number, the valid range depends on the &lt;code&gt;calendar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9cf7c6ff05fb5ced2a7ffb24b97d28dba21d47" translate="yes" xml:space="preserve">
          <source>The month is between 1 and 12 inclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d946b200f0bb147c96e5a1dcfd0438f7decf6a" translate="yes" xml:space="preserve">
          <source>The month name for the given Julian Day and &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ae3dc4ef2ca28377f2bee263213ece86efc0bd" translate="yes" xml:space="preserve">
          <source>The most basic forms of expressions are constants and variables. When you type &quot;&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; = 5&quot;, you're assigning '5' into &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt;. '5', obviously, has the value 5, or in other words '5' is an expression with the value of 5 (in this case, '5' is an integer constant).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b25fdd6d9c9ce3599808f23d8d50af6a39644b7" translate="yes" xml:space="preserve">
          <source>The most important feature of double-quoted &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s is the fact that variable names will be expanded. See &lt;a href=&quot;language.types.string#language.types.string.parsing&quot;&gt;string parsing&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e67cd7f380fc60fc35e7a183084681379d9df9e" translate="yes" xml:space="preserve">
          <source>The most noticeable effect is that as long as any &lt;em&gt;idle&lt;/em&gt; watchers are active, the process will &lt;em&gt;not&lt;/em&gt; block when waiting for new events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8bad0ed2f1bfe85cd3c49c26dda5e05267ef64" translate="yes" xml:space="preserve">
          <source>The most relevant case is when packing unsigned numbers that would be representable with the &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; type if it were unsigned. In systems where the &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; type has a 32-bit size, the cast usually results in the same byte pattern as if the &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; were unsigned (although this relies on implementation-defined unsigned to signed conversions, as per the C standard). In systems where the &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; type has 64-bit size, the &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; most likely does not have a mantissa large enough to hold the value without loss of precision. If those systems also have a native 64-bit C &lt;em&gt;int&lt;/em&gt; type (most UNIX-like systems don't), the only way to use the &lt;em&gt;I&lt;/em&gt; pack format in the upper range is to create &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; negative values with the same byte representation as the desired unsigned value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443bd980d1089b60ac99b9166f032e48969296d9" translate="yes" xml:space="preserve">
          <source>The multicast loopback policy for IPv4 packets, which determines whether multicast packets sent by this socket also reach receivers in the same host that have joined the same multicast group on the outgoing interface used by this socket. This is the case by default. (added in PHP 5.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855b3bea0e9d68fbdb244f611d72ec56ccc11ab2" translate="yes" xml:space="preserve">
          <source>The mutable &lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt; object that you want to convert to an immutable version. This object is not modified, but instead a new &lt;a href=&quot;class.datetimeimmutable&quot;&gt;DateTimeImmutable&lt;/a&gt; object is created containing the same date time and timezone information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2d09c69c3ff1625d04331c78e386330f384376" translate="yes" xml:space="preserve">
          <source>The mysqli class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64436a7a8438c891bd9685cf832db2b5db8cc89" translate="yes" xml:space="preserve">
          <source>The mysqli exception handling class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be679242dc801e35e6a222e73d15fe47bd9fd1c6" translate="yes" xml:space="preserve">
          <source>The mysqli-&amp;gt;connect_error property only works properly as of PHP versions 5.2.9 and 5.3.0. Use the &lt;strong&gt;mysqli_connect_error()&lt;/strong&gt; function if compatibility with earlier PHP versions is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8863cb75ef527a0bd2efc0ebc67b8e87ad86b245" translate="yes" xml:space="preserve">
          <source>The mysqli_driver class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="538c903f47a6827f1fede1c3ee2bcfa3323c1c94" translate="yes" xml:space="preserve">
          <source>The mysqli_result class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9f222f1e6ccd3408d768ff03ac3a5dc7dce418" translate="yes" xml:space="preserve">
          <source>The mysqli_sql_exception class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c56b9d11d93cdebf4d76b47f70206f198e9e5f" translate="yes" xml:space="preserve">
          <source>The mysqli_stmt class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8aa889ab3592c6964190dac6be3b773b4208a29" translate="yes" xml:space="preserve">
          <source>The mysqli_warning class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85ed47b36115427d787311b16ce53a563e74240" translate="yes" xml:space="preserve">
          <source>The name &lt;em&gt;word&lt;/em&gt; is a Perl extension, and &lt;em&gt;blank&lt;/em&gt; is a GNU extension from Perl 5.8. Another Perl extension is negation, which is indicated by a &lt;em&gt;^&lt;/em&gt; character after the colon. For example, &lt;em&gt;[12[:^digit:]]&lt;/em&gt; matches &quot;1&quot;, &quot;2&quot;, or any non-digit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5847690c494e4d7ac0e4aa98f19e5f2670c7d12e" translate="yes" xml:space="preserve">
          <source>The name element contains the name of the group. This is a short, usually less than 16 character &quot;handle&quot; of the group, not the real, full name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccd95b85c9ab9c0a90f3dcf4e4039b4015da022" translate="yes" xml:space="preserve">
          <source>The name element contains the name of the group. This is a short, usually less than 16 character &quot;handle&quot; of the group, not the real, full name. This should be the same as the &lt;code&gt;name&lt;/code&gt; parameter used when calling the function, and hence redundant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca670d53d20e488a23fdeac9f5a2530f5743efa" translate="yes" xml:space="preserve">
          <source>The name element contains the username of the user. This is a short, usually less than 16 character &quot;handle&quot; of the user, not the real, full name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf3ef5ae736cde1a290f6263eef08b21d01663c" translate="yes" xml:space="preserve">
          <source>The name element contains the username of the user. This is a short, usually less than 16 character &quot;handle&quot; of the user, not the real, full name. This should be the same as the &lt;code&gt;username&lt;/code&gt; parameter used when calling the function, and hence redundant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390f19809260351efab1c83da5edcd7586de4f93" translate="yes" xml:space="preserve">
          <source>The name is matched exactly and completely. If the name does not correspond to a code point, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f14f92540d2010992090a0c9f0dd69d84c34843" translate="yes" xml:space="preserve">
          <source>The name of DTD; i.e., the name immediately following the &lt;em&gt;DOCTYPE&lt;/em&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7b7b7bda486d802a013b257106b2c48df0185c" translate="yes" xml:space="preserve">
          <source>The name of a PHP function or user-defined function to apply as a callback at the end of the aggregate data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be80498f7b0ea8c727d405321d6da9c942f814f2" translate="yes" xml:space="preserve">
          <source>The name of a PHP function or user-defined function to apply as a callback for every item in the aggregate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ebd6193b8af36a215d29000b4b2e8bdf0c1ce3" translate="yes" xml:space="preserve">
          <source>The name of a PHP function or user-defined function to apply as a callback, defining the behavior of the SQL function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a695c2616d736dcd4b27b2f5d778ef3c2f827c9" translate="yes" xml:space="preserve">
          <source>The name of a PHP function or user-defined function to apply as a callback, defining the behavior of the collation. It should accept two strings and return as &lt;a href=&quot;function.strcmp&quot;&gt;strcmp()&lt;/a&gt; does, i.e. it should return -1, 1, or 0 if the first string sorts before, sorts after, or is equal to the second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3c6e961c30e5c29c58bfc1f0dd6e3195507546" translate="yes" xml:space="preserve">
          <source>The name of a constant follows the same rules as any label in PHP. A valid constant name starts with a letter or underscore, followed by any number of letters, numbers, or underscores. As a regular expression, it would be expressed thusly: &lt;em&gt;[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6d61bed4149d318b3aafe76ff70a52f8badfab" translate="yes" xml:space="preserve">
          <source>The name of a file containing a PEM formatted certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f868f326708780e2e583bdc5d3cc34efe3870e13" translate="yes" xml:space="preserve">
          <source>The name of a file containing a private SSL key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8a9b0791269ebebba4f539c8af314cb86c6b2c" translate="yes" xml:space="preserve">
          <source>The name of a file holding one or more certificates to verify the peer with. This only makes sense when used in combination with &lt;strong&gt;&lt;code&gt;CURLOPT_SSL_VERIFYPEER&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869457e2ff6248ef10883a1c6f31759a67716205" translate="yes" xml:space="preserve">
          <source>The name of a file or directory to extract, or an array of files/directories to extract</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb69e09f0cf1a629191a8dd5e2db3904dba0c7c8" translate="yes" xml:space="preserve">
          <source>The name of a file or directory to extract, or an array of files/directories to extract, &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; to skip this param</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978619c9feeb66e0d494ad7e51c33f518059cbd2" translate="yes" xml:space="preserve">
          <source>The name of a file to save all internal cookies to when the handle is closed, e.g. after a call to curl_close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb00da9e5db12a89b0beaf19be7774ab20e18807" translate="yes" xml:space="preserve">
          <source>The name of a function to register with the job server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ed501dc34a81ece5e75ed58da9cd9fdde4edb2" translate="yes" xml:space="preserve">
          <source>The name of a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590835436f7ddeeb301843a3ea0762ecacc560e8" translate="yes" xml:space="preserve">
          <source>The name of key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d98af11b24517a69475d4d86c9bfd383516166" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;https://secure.php.net/manual/en/dba.requirements.php&quot;&gt;handler&lt;/a&gt; which shall be used for accessing &lt;code&gt;path&lt;/code&gt;. It is passed all optional parameters given to &lt;strong&gt;dba_open()&lt;/strong&gt; and can act on behalf of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b6a3d1b0f00fbd70211dbe3bc7ed94c6e3e471" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;https://secure.php.net/manual/en/dba.requirements.php&quot;&gt;handler&lt;/a&gt; which shall be used for accessing &lt;code&gt;path&lt;/code&gt;. It is passed all optional parameters given to &lt;strong&gt;dba_popen()&lt;/strong&gt; and can act on behalf of them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2373a64d01a8448bfb85edf157bca4126b076749" translate="yes" xml:space="preserve">
          <source>The name of the DTD attribute list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdff654e94e3aa7083b0aeca49edf76d2d9709a" translate="yes" xml:space="preserve">
          <source>The name of the DTD element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76884d1f6599f3857e45bffd1d59e96007c36684" translate="yes" xml:space="preserve">
          <source>The name of the HTML node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a56a7a910706c8df3c08293fbfff5002fb67b3e" translate="yes" xml:space="preserve">
          <source>The name of the SOAP function to call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3adc57c77aa1fe125c36d917af41b8183625ddd" translate="yes" xml:space="preserve">
          <source>The name of the SoapHeader object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c581e78cd7685c5d96e558fabdf02224468302cf" translate="yes" xml:space="preserve">
          <source>The name of the TrueType font file (can be a URL). Depending on which version of the GD library that PHP is using, it may attempt to search for files that do not begin with a leading '/' by appending '.ttf' to the filename and searching along a library-defined font path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb69b394675e73c477548aacc0e82719b7cba92" translate="yes" xml:space="preserve">
          <source>The name of the account owner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f0cf04f036ddc7e54eb4e8bd1c3f07b3ce4617" translate="yes" xml:space="preserve">
          <source>The name of the artifact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbd3e774c0d6e984e69833cd0c2ccf63cc4a207" translate="yes" xml:space="preserve">
          <source>The name of the artifact to delete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d2e11235855fab2d67d717fdf33aaa4aa7634f" translate="yes" xml:space="preserve">
          <source>The name of the attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e04f14a08346548ada815040515f98074beffe" translate="yes" xml:space="preserve">
          <source>The name of the attribute to add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569558438a7cc57c2331b399397533f2c882c337" translate="yes" xml:space="preserve">
          <source>The name of the attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621936f5a5c99f3f18c0ab5abfad95668525f202" translate="yes" xml:space="preserve">
          <source>The name of the backup field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f577a1e21853b0de4e9b1c93e031336498f07e5" translate="yes" xml:space="preserve">
          <source>The name of the child element to add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7889c864041d6127c13dfdd28250b9dd10e5023" translate="yes" xml:space="preserve">
          <source>The name of the class constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f82f000b5b6fa6fb7df1439ee111ace1583730f" translate="yes" xml:space="preserve">
          <source>The name of the class to instantiate, set the properties of and return. If not specified, a &lt;strong&gt;stdClass&lt;/strong&gt; object is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ba8a29569823254e1862e4f265ec8b95d6b0b6" translate="yes" xml:space="preserve">
          <source>The name of the class to instantiate. If no class name is specified, stdClass is instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c15edec87bb8d344200119a7dc2a4a142ddf00" translate="yes" xml:space="preserve">
          <source>The name of the column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716d0f3091d353336b9e58abd66b10296077df02" translate="yes" xml:space="preserve">
          <source>The name of the constant being checked for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb952c84e1b69841f3f88373e53e31db5ead869" translate="yes" xml:space="preserve">
          <source>The name of the constant set (that was stored with &lt;a href=&quot;function.apc-define-constants&quot;&gt;apc_define_constants()&lt;/a&gt;) to be retrieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa60c10f1cb65ee0552af457bf2e526a3e8f002" translate="yes" xml:space="preserve">
          <source>The name of the constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0e82e792056159c3d15446c1c3ba19cf054ab2" translate="yes" xml:space="preserve">
          <source>The name of the cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d7d5ae6f77d3c1705d0feb087fa17a530bfbb8" translate="yes" xml:space="preserve">
          <source>The name of the current namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1c7ffc81a2b7d1d908ad251257e6e6800d9289" translate="yes" xml:space="preserve">
          <source>The name of the date field to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c65a3d42a357ac412703abb889a8c219980eb5" translate="yes" xml:space="preserve">
          <source>The name of the date field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc8614008e67b0a8037f454e51392a1239bf32d" translate="yes" xml:space="preserve">
          <source>The name of the directory entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b011ea88eeae4112ba09b4f50c7fb1a6c7721f6" translate="yes" xml:space="preserve">
          <source>The name of the directory that will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50aaf3ecb7c93ae7c0e17511fffac794b4a2254" translate="yes" xml:space="preserve">
          <source>The name of the empty directory to create in the phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71de9d23e4d087de2b47f498f297a3836b204187" translate="yes" xml:space="preserve">
          <source>The name of the entity reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f5cd69c8064182b57a6b56d3f69153faf01893" translate="yes" xml:space="preserve">
          <source>The name of the entity that is about to be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d6f3b8c4207b3258c6fdf35439ec4e64a6b33f" translate="yes" xml:space="preserve">
          <source>The name of the entity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc1831cbc1bef02fa9fedf6e1834e135fbe2685" translate="yes" xml:space="preserve">
          <source>The name of the entry to create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a35341c2672b1c1460e66bd80854263f78ffde8" translate="yes" xml:space="preserve">
          <source>The name of the entry to look up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bcdcefce17a7ec194186af43e05a7d6cb3c9dd" translate="yes" xml:space="preserve">
          <source>The name of the entry to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d529e07f4253e92f6a22eb27366dec060332cd" translate="yes" xml:space="preserve">
          <source>The name of the event if this is a named event object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c928d29ed3cc05de685e0ea71d4892bdadf41dc" translate="yes" xml:space="preserve">
          <source>The name of the exported class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d19e56f5e2dad4c65b73011ff5b2785a1b8ab57" translate="yes" xml:space="preserve">
          <source>The name of the extension which defined the class, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for user-defined classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4b6b80ac823cc285e4223aedfe5633bda0ef3a" translate="yes" xml:space="preserve">
          <source>The name of the fault. This can be used to select a name from a WSDL file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa319e490764a843f0e4938206f7675b7a079354" translate="yes" xml:space="preserve">
          <source>The name of the field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5bc0d9698fbcfda77e230b6e63f6cf7a0aedd94" translate="yes" xml:space="preserve">
          <source>The name of the field by which to group results. The field must be single-valued, and either be indexed or a field type that has a value source and works in a function query, such as ExternalFileField. It must also be a string-based field, such as StrField or TextField Uses group.field parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc1ffb0ad6e9fa5cc5c799d50ad810cb8d92e1c" translate="yes" xml:space="preserve">
          <source>The name of the field to override for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1337a27f0621f6aa51fd275a4459ada2f94a39" translate="yes" xml:space="preserve">
          <source>The name of the field to override for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba3f12645007f8b22839353e971677d9bb80e37" translate="yes" xml:space="preserve">
          <source>The name of the field we are overriding this setting for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603c0a5d2c15b9cea557f9daa63c49955d94d328" translate="yes" xml:space="preserve">
          <source>The name of the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829f22e05e7ea06d9c4df1d8fbd80bea9c290659" translate="yes" xml:space="preserve">
          <source>The name of the file being checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bae031760e19426b59559feeaa562cf2b76ca8" translate="yes" xml:space="preserve">
          <source>The name of the file being touched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f9a473c89876679812f20d557392285272fbed" translate="yes" xml:space="preserve">
          <source>The name of the file containing the cookie data. The cookie file can be in Netscape format, or just plain HTTP-style headers dumped into a file. If the name is an empty string, no cookies are loaded, but cookie handling is still enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e1692edd46c03804f09cc783f80d4fcabe1e3f" translate="yes" xml:space="preserve">
          <source>The name of the file in the upload data (defaults to the &lt;var&gt;&lt;var&gt;name&lt;/var&gt;&lt;/var&gt; property).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299908d957d8043caa81b9967e9b3aefd6e54649" translate="yes" xml:space="preserve">
          <source>The name of the file to be tested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4541c33370aeb2b3064a6c8180d0f10da93bbcc2" translate="yes" xml:space="preserve">
          <source>The name of the file to open, or an existing stream resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad344fe17dd2a14904db4973b176912708c76e2" translate="yes" xml:space="preserve">
          <source>The name of the function to reflect or a &lt;a href=&quot;functions.anonymous&quot;&gt;closure&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d24347b639fc5c1199b8f3590bff6a146e13c82" translate="yes" xml:space="preserve">
          <source>The name of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b211abee3ce79856f8ef6b71b1c71b994017068c" translate="yes" xml:space="preserve">
          <source>The name of the group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48cf7edc6a380edba9fab5e3c89c9db295ad4634" translate="yes" xml:space="preserve">
          <source>The name of the library to load. The library must be located in the directory specified in the configure option sqlite3.extension_dir.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e939af9a61b6cf9a409df4e9cacf8ba4f3b6cf7e" translate="yes" xml:space="preserve">
          <source>The name of the method to add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8828aa1364306ebe78c09b4d4e22b1824dd15598" translate="yes" xml:space="preserve">
          <source>The name of the method to redefine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a476e2809554e130e11d0a20ec9592a412758d7" translate="yes" xml:space="preserve">
          <source>The name of the method to remove</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe96a3136f082def3e55f57a30a593124a997fb" translate="yes" xml:space="preserve">
          <source>The name of the method to rename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4df51158142b789c528724b9ca7a3517809170" translate="yes" xml:space="preserve">
          <source>The name of the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6a44e2297300eb3d357938ebc8c095a1022d67" translate="yes" xml:space="preserve">
          <source>The name of the mutex if this is a named mutex object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f6960635892fa8d8b67b9c76f28af88fa66309" translate="yes" xml:space="preserve">
          <source>The name of the next node to move to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0960b2801b48cde3b83382cce5c946ab246ec109" translate="yes" xml:space="preserve">
          <source>The name of the note.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c373fe7a1696d3743967de6310334985d4be95c" translate="yes" xml:space="preserve">
          <source>The name of the object passed to Javascript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a698ea7b091fcb330b52ada20c3f0565a863616" translate="yes" xml:space="preserve">
          <source>The name of the option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba062867168cce28fb361443cdcc43b366dad6da" translate="yes" xml:space="preserve">
          <source>The name of the outgoing network interface to use. This can be an interface name, an IP address or a host name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a64f909c1c428320f52ac482a8515417ecb899" translate="yes" xml:space="preserve">
          <source>The name of the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c0a7b8f3cf3380ca8baa34897ab3da1ca7890b" translate="yes" xml:space="preserve">
          <source>The name of the path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82206943bf9259713a5952fb9ca9fd5c64f97d14" translate="yes" xml:space="preserve">
          <source>The name of the prepared statement to execute. if &quot;&quot; is specified, then the unnamed statement is executed. The name must have been previously prepared using &lt;a href=&quot;function.pg-prepare&quot;&gt;pg_prepare()&lt;/a&gt;, &lt;a href=&quot;function.pg-send-prepare&quot;&gt;pg_send_prepare()&lt;/a&gt; or a &lt;em&gt;PREPARE&lt;/em&gt; SQL command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb66dc6a3fef44d57cfb606bac81b88e71954dba" translate="yes" xml:space="preserve">
          <source>The name of the profile to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c073def6e58b831d03e16b1cfadae287d06032" translate="yes" xml:space="preserve">
          <source>The name of the property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92aa52c7ce33dfacf7921c902379cc86ae7c3f83" translate="yes" xml:space="preserve">
          <source>The name of the property being reflected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235ab09f56b64bdab2d8e76874f5e3073c6207b7" translate="yes" xml:space="preserve">
          <source>The name of the property to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3506b2a41d26429a561490d65dccec37908ee6" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1266137fb72409760372047e8d12fdda4443375e" translate="yes" xml:space="preserve">
          <source>The name of the reader-writer if this is a named reader-writer object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e3bdb44fb90e9f9160f21b1181ef4389c0556f" translate="yes" xml:space="preserve">
          <source>The name of the reflected parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7dc4e5ed2be906bf80461b6ec325788f6d53f6" translate="yes" xml:space="preserve">
          <source>The name of the reflected property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9682e68688b9b0ea091f67c998ccd16dd7f2f7" translate="yes" xml:space="preserve">
          <source>The name of the semaphore if this is a named semaphore object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72f027b23097c5950a08fcd0636f8815fad54cc" translate="yes" xml:space="preserve">
          <source>The name of the server host under which the current script is executing. If the script is running on a virtual host, this will be the value defined for that virtual host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246c4e15239bb18466bed7bb8335b1cbe99589d7" translate="yes" xml:space="preserve">
          <source>The name of the server to which a connection is established. To connect to a specific instance, follow the server name with a backward slash and the instance name (e.g. serverName\sqlexpress).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7378886b96bfe67472d1e34960bf0874e12ef1c" translate="yes" xml:space="preserve">
          <source>The name of the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e816cfec0a0215b246db9e79275fef2369629ca" translate="yes" xml:space="preserve">
          <source>The name of the setting for which the value is returned. For a list of configurable settings, see &lt;a href=&quot;function.sqlsrv-configure&quot;&gt;sqlsrv_configure()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd5ec73b694f6a469ebbe220f84b383a304b3e2" translate="yes" xml:space="preserve">
          <source>The name of the setting to set. The possible values are &quot;WarningsReturnAsErrors&quot;, &quot;LogSubsystems&quot;, and &quot;LogSeverity&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45c4505200b41be3febbb2799bc42d92787a93d" translate="yes" xml:space="preserve">
          <source>The name of the shared memory object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d83b5d8a9ba9fa83aeccf93ab76e913055b72df" translate="yes" xml:space="preserve">
          <source>The name of the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48caeb004c55940881d86fd5f03d4d6d84d815e4" translate="yes" xml:space="preserve">
          <source>The name of the static property for which to return a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e931fff82a9bd1d6fa11740d773c5cebbc8c68f8" translate="yes" xml:space="preserve">
          <source>The name of the table this field belongs to (if not calculated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bdc797aad3e657271b859b7dc8d873a1c5776b" translate="yes" xml:space="preserve">
          <source>The name of the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006863f5e94e06237f4603476e3ecce5078ae3ee" translate="yes" xml:space="preserve">
          <source>The name of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84a2a288263212cc67f93bcb364b9436b07ef4c" translate="yes" xml:space="preserve">
          <source>The name of this column as returned by the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb33d81404aa41fc0c7f7066d0ab3b14cd0b233" translate="yes" xml:space="preserve">
          <source>The name of this column's table as returned by the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79676994dcee3ecaff7d18218d0b77e20a576022" translate="yes" xml:space="preserve">
          <source>The name or full path to a phar archive not yet created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf49604f44f3044005e3fe4e2b02f240de9f279" translate="yes" xml:space="preserve">
          <source>The name to be assigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae38819e76574fa03665d1b7231e6e562f49ec7" translate="yes" xml:space="preserve">
          <source>The name to give the prepared statement. Must be unique per-connection. If &quot;&quot; is specified, then an unnamed statement is created, overwriting any previously defined unnamed statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f7bafd72bb97fbbe48697605fce46bfd663fa9" translate="yes" xml:space="preserve">
          <source>The name. Accepts search patterns ('%' to match zero or more characters and '_' to match a single character).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a1cf764ebffbc4496e332db854df44f4612476" translate="yes" xml:space="preserve">
          <source>The name. Accepts the following search patterns: ('%' to match zero or more characters and '_' to match a single character)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ffd6c6f963d681b8517ab234d5527abe70780f" translate="yes" xml:space="preserve">
          <source>The name. This parameter accepts the following search patterns: &quot;%&quot; to match zero or more characters, and &quot;_&quot; to match a single character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c97335129b5ce3362c02ab57a86150eea4520d2" translate="yes" xml:space="preserve">
          <source>The named profile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f36d92e8ad31d8a9dfdfe0068cc758ba977d9a3" translate="yes" xml:space="preserve">
          <source>The names of the different keys of the returning associative array are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755aa90c18ce167c9a0c3c4ea8fadfd9ed15333f" translate="yes" xml:space="preserve">
          <source>The nameserver string, either as an IPv4 address, an IPv6 address, an IPv4 address with a port ( &lt;em&gt;IPv4:Port&lt;/em&gt; ), or an IPv6 address with a port ( &lt;em&gt;[IPv6]:Port&lt;/em&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02cb770fd985b570d020777672b55e979518862a" translate="yes" xml:space="preserve">
          <source>The namespace URI of the XSLT parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81a52e3c383d892a9f635f5a13ec02d34490a54" translate="yes" xml:space="preserve">
          <source>The namespace URI of the attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c3ba5a6f7b73b464864efcf9a6596dc03c2653" translate="yes" xml:space="preserve">
          <source>The namespace URI of the document element to create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850b2f6c13951f45ecc739135cdba67df91453dc" translate="yes" xml:space="preserve">
          <source>The namespace URI of the elements to match on. The special value &lt;em&gt;*&lt;/em&gt; matches all namespaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a9ae3a1b667fa821240170a41bcc332d169f5c" translate="yes" xml:space="preserve">
          <source>The namespace URI of the node to retrieve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95a717d6bf2dc35241dc72b49b07967f7dc980a" translate="yes" xml:space="preserve">
          <source>The namespace URI of the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84508f50f7ac33a419218f9368d858e50399398" translate="yes" xml:space="preserve">
          <source>The namespace URI of this node, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if it is unspecified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad06883ec06c745425cfbc6532efa90f1e0c610" translate="yes" xml:space="preserve">
          <source>The namespace URI to look for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d70c53646d4f75c4ee9c12d39847a1e516b604" translate="yes" xml:space="preserve">
          <source>The namespace URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1784c92c29ac944b21ce33cdc9fad441052c9fe" translate="yes" xml:space="preserve">
          <source>The namespace name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2f2252c3f31e6c1b107cba8c3e3994c96ad8f4" translate="yes" xml:space="preserve">
          <source>The namespace of the SOAP header element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80003337b9356bc024a33e36664351c2b5a16240" translate="yes" xml:space="preserve">
          <source>The namespace of the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca203e5747eb8ca2b264ff90e7525f9ecb1a2b7b" translate="yes" xml:space="preserve">
          <source>The namespace prefix of this node, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if it is unspecified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e9559b2075ea6b71b6962a29db0ef6bc020346" translate="yes" xml:space="preserve">
          <source>The namespace prefix to use in the XPath query for the namespace given in &lt;code&gt;ns&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a9c0229f0293461c2eee25e1786e7166feb1e9" translate="yes" xml:space="preserve">
          <source>The namespace prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce89629094e0a8144cfc77de55da321d7978fe9c" translate="yes" xml:space="preserve">
          <source>The namespace to use for the XPath query. This must match a namespace in use by the XML document or the XPath query using &lt;code&gt;prefix&lt;/code&gt; will not return any results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd181da9b3f300b1c656d001759896c1b32d577f" translate="yes" xml:space="preserve">
          <source>The nesting limit was increased from 20 to 128</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf7c1f5043926ef7d320bfa491f380135cf412c" translate="yes" xml:space="preserve">
          <source>The new (raised) number, as a GMP number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7f989bc3a8a77e81b13744cb52477d19404669" translate="yes" xml:space="preserve">
          <source>The new (raised) number, as a GMP number. The case of &lt;em&gt;0^0&lt;/em&gt; yields 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7516f1612fb14b6af767deeb3eb5896bb17b1539" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;class.domattr&quot;&gt;DOMAttr&lt;/a&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error occurred.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
