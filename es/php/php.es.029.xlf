<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="81da4afe66afc0e52cd697f70f2e19504e76f85f" translate="yes" xml:space="preserve">
          <source>EvIo::set</source>
          <target state="translated">EvIo::set</target>
        </trans-unit>
        <trans-unit id="aec9dde9345b54cf6c9a1f1b89d17046ceb2781f" translate="yes" xml:space="preserve">
          <source>EvIo::set &amp;mdash; Configures the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1faafc7f3dfc771842b4dd378fed78d2903db6b" translate="yes" xml:space="preserve">
          <source>EvIo::set &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035396f5735c00fe70d69970bd54430aa7eea178" translate="yes" xml:space="preserve">
          <source>EvLoop &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73631f2b2ce331ed55cae349c75a3828fadf663e" translate="yes" xml:space="preserve">
          <source>EvLoop (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec08d0d66500a6c0239f1ae73e5b8180f378848" translate="yes" xml:space="preserve">
          <source>EvLoop::__construct</source>
          <target state="translated">EvLoop::__construct</target>
        </trans-unit>
        <trans-unit id="b3573e9fd5f2fe357f9078a9a59cbca0a2ae3465" translate="yes" xml:space="preserve">
          <source>EvLoop::__construct &amp;mdash; Constructs the event loop object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bb52fe56cb9c14e8f20ad7c73c646d4930688b" translate="yes" xml:space="preserve">
          <source>EvLoop::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f931d1660ae5bb9d8213938465b84028dd5c1e3" translate="yes" xml:space="preserve">
          <source>EvLoop::backend</source>
          <target state="translated">EvLoop::backend</target>
        </trans-unit>
        <trans-unit id="cbb87941b7c3a45ab49b2c16a49923a2364aaf3d" translate="yes" xml:space="preserve">
          <source>EvLoop::backend &amp;mdash; Returns an integer describing the backend used by libev</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f236fcc6a0fc9bf53e7c597c720065228daeeb" translate="yes" xml:space="preserve">
          <source>EvLoop::backend &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d949d0bf2300503427e1e93acf473360e4323a85" translate="yes" xml:space="preserve">
          <source>EvLoop::check</source>
          <target state="translated">EvLoop::check</target>
        </trans-unit>
        <trans-unit id="f76d37679e751f94213ab5fb87ad01952cfcc6c0" translate="yes" xml:space="preserve">
          <source>EvLoop::check &amp;mdash; Creates EvCheck object associated with the current event loop instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b115101f5dac76bad6e79ce61d88645be35a64" translate="yes" xml:space="preserve">
          <source>EvLoop::check &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79e191781c70d94dcd1126ce8e2ffd64ab6303a" translate="yes" xml:space="preserve">
          <source>EvLoop::child</source>
          <target state="translated">EvLoop::child</target>
        </trans-unit>
        <trans-unit id="d4c9795c565d04c99ef794debe256fb9eb5b2b04" translate="yes" xml:space="preserve">
          <source>EvLoop::child &amp;mdash; Creates EvChild object associated with the current event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490a545d7e9ddf5d1a153aa90fd7407e09350f4a" translate="yes" xml:space="preserve">
          <source>EvLoop::child &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc48ae038d5096e01c459529788b3aac67afdb38" translate="yes" xml:space="preserve">
          <source>EvLoop::defaultLoop</source>
          <target state="translated">EvLoop::defaultLoop</target>
        </trans-unit>
        <trans-unit id="39e2b31ab7596a81209a74ced270b1bc220adf12" translate="yes" xml:space="preserve">
          <source>EvLoop::defaultLoop &amp;mdash; Returns or creates the default event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02fd93d642fc5b3e7b798c9e3c13921076b08a2" translate="yes" xml:space="preserve">
          <source>EvLoop::defaultLoop &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee351e9e8af9e5cad78e750ff2866b79a98acd1" translate="yes" xml:space="preserve">
          <source>EvLoop::embed</source>
          <target state="translated">EvLoop::embed</target>
        </trans-unit>
        <trans-unit id="f6a57e1a0c8e3f9beea9fbeb1e6aed765cac5094" translate="yes" xml:space="preserve">
          <source>EvLoop::embed &amp;mdash; Creates an instance of EvEmbed watcher associated with the current EvLoop object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ec2371cfb50ded1ecf3c904d48b4b46e920b80" translate="yes" xml:space="preserve">
          <source>EvLoop::embed &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6af5dd1379b1406a628ab2707da93d375e0925c" translate="yes" xml:space="preserve">
          <source>EvLoop::fork</source>
          <target state="translated">EvLoop::fork</target>
        </trans-unit>
        <trans-unit id="0640bc5faa8755d7c43c7b51629a3f006eb7b286" translate="yes" xml:space="preserve">
          <source>EvLoop::fork &amp;mdash; Creates EvFork watcher object associated with the current event loop instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37be9c4e9cee0056cbb02a6707f55cb744a9046c" translate="yes" xml:space="preserve">
          <source>EvLoop::fork &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592fb0a3213bf7b1b2f9a409b7203b926dc954a0" translate="yes" xml:space="preserve">
          <source>EvLoop::idle</source>
          <target state="translated">EvLoop::idle</target>
        </trans-unit>
        <trans-unit id="9b368944f1a928aa8f27114924b852d2742f3e2c" translate="yes" xml:space="preserve">
          <source>EvLoop::idle &amp;mdash; Creates EvIdle watcher object associated with the current event loop instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9df020c2311745a8d8e1bc9e72201cf4440786" translate="yes" xml:space="preserve">
          <source>EvLoop::idle &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bf7197cbd8eb1e02a47623f31ec6157b725e46" translate="yes" xml:space="preserve">
          <source>EvLoop::invokePending</source>
          <target state="translated">EvLoop::invokePending</target>
        </trans-unit>
        <trans-unit id="dec07f0885c65b95595bee78e909462a5346317b" translate="yes" xml:space="preserve">
          <source>EvLoop::invokePending &amp;mdash; Invoke all pending watchers while resetting their pending state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532dcb6e4c13490691d43047b46dcfdcdcb5767d" translate="yes" xml:space="preserve">
          <source>EvLoop::invokePending &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63919e3b4893ddd9b5fce1700d16d8c93c2302be" translate="yes" xml:space="preserve">
          <source>EvLoop::io</source>
          <target state="translated">EvLoop::io</target>
        </trans-unit>
        <trans-unit id="9f6fc99ff3ba0f2028c9a6b7d15d24f2220d2d1f" translate="yes" xml:space="preserve">
          <source>EvLoop::io &amp;mdash; Create EvIo watcher object associated with the current event loop instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487ef67b6b77c01f652a8371e024d37d1af63556" translate="yes" xml:space="preserve">
          <source>EvLoop::io &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c45a17cf99b26314376d86c6b09190a09d8f98" translate="yes" xml:space="preserve">
          <source>EvLoop::loopFork</source>
          <target state="translated">EvLoop::loopFork</target>
        </trans-unit>
        <trans-unit id="06ef388f627218925be46f00abcc62d01af2cf9e" translate="yes" xml:space="preserve">
          <source>EvLoop::loopFork &amp;mdash; Must be called after a fork</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2709d452ec85718b13ecf74a9fb48c753f455e" translate="yes" xml:space="preserve">
          <source>EvLoop::loopFork &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50ab2b6b0a84714b96a31d2dbbbe9f21e20404d" translate="yes" xml:space="preserve">
          <source>EvLoop::now</source>
          <target state="translated">EvLoop::now</target>
        </trans-unit>
        <trans-unit id="bc34f198c5947f4a418f2ffa7e0e5548c7c6588d" translate="yes" xml:space="preserve">
          <source>EvLoop::now &amp;mdash; Returns the current &quot;event loop time&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41924057db01f59700d7b089181e07c5cd7bc576" translate="yes" xml:space="preserve">
          <source>EvLoop::now &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a781f83ac021cf0ed80e8bd5cf65068241236fb1" translate="yes" xml:space="preserve">
          <source>EvLoop::nowUpdate</source>
          <target state="translated">EvLoop::nowUpdate</target>
        </trans-unit>
        <trans-unit id="8b5e18cbca92663c0a0b318019867cbcc76623b1" translate="yes" xml:space="preserve">
          <source>EvLoop::nowUpdate &amp;mdash; Establishes the current time by querying the kernel, updating the time returned by EvLoop::now in the progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e30a2fab7a7ea518481179537a1a8df0d8a84b" translate="yes" xml:space="preserve">
          <source>EvLoop::nowUpdate &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dbaefc6ebfe550180fa185633fc38fbe60cc09" translate="yes" xml:space="preserve">
          <source>EvLoop::periodic</source>
          <target state="translated">EvLoop::periodic</target>
        </trans-unit>
        <trans-unit id="27ea5dd16d6665d06bb7b12f8a4607b55b2db4b6" translate="yes" xml:space="preserve">
          <source>EvLoop::periodic &amp;mdash; Creates EvPeriodic watcher object associated with the current event loop instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78da58ca03beed1065053fa010e55c60c9266e0f" translate="yes" xml:space="preserve">
          <source>EvLoop::periodic &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5aaf7e0f8b69c6f8837b2e719847a9f0cf1eb31" translate="yes" xml:space="preserve">
          <source>EvLoop::prepare</source>
          <target state="translated">EvLoop::prepare</target>
        </trans-unit>
        <trans-unit id="468d8b451c10b827184fb140fd1ee825f830aa4e" translate="yes" xml:space="preserve">
          <source>EvLoop::prepare &amp;mdash; Creates EvPrepare watcher object associated with the current event loop instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f64b6176f4ce35a5ef727be98747915d99342a" translate="yes" xml:space="preserve">
          <source>EvLoop::prepare &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b9c37cb47445115bc848b5792518e98a02041c" translate="yes" xml:space="preserve">
          <source>EvLoop::resume</source>
          <target state="translated">EvLoop::resume</target>
        </trans-unit>
        <trans-unit id="c3f59222a1bee1dbe3de1d736065595d12aaf2b3" translate="yes" xml:space="preserve">
          <source>EvLoop::resume &amp;mdash; Resume previously suspended default event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae4de854d0b6f14b1038c2b42e9aa5d8db39889" translate="yes" xml:space="preserve">
          <source>EvLoop::resume &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0727a31edf7b1c1c4321edbddeaea795ddcf66" translate="yes" xml:space="preserve">
          <source>EvLoop::run</source>
          <target state="translated">EvLoop::run</target>
        </trans-unit>
        <trans-unit id="c6230c6b33a9c713d5844aafef0adc9c90abb550" translate="yes" xml:space="preserve">
          <source>EvLoop::run &amp;mdash; Begin checking for events and calling callbacks for the loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4878401cdce7561ebe54566376f3db4a06e0db29" translate="yes" xml:space="preserve">
          <source>EvLoop::run &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcbd27726a0f519b6cf5fde82a2d41706f54f2b" translate="yes" xml:space="preserve">
          <source>EvLoop::signal</source>
          <target state="translated">EvLoop::signal</target>
        </trans-unit>
        <trans-unit id="2d6bd0e38df62d570424c6bd9c6d7e2d5e29d810" translate="yes" xml:space="preserve">
          <source>EvLoop::signal &amp;mdash; Creates EvSignal watcher object associated with the current event loop instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7657e2d80eb7ce9e56e3a0783f7dffce3e0810" translate="yes" xml:space="preserve">
          <source>EvLoop::signal &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c50159fc096c2ab4e204ab80a0c5e01f2d867ab5" translate="yes" xml:space="preserve">
          <source>EvLoop::stat</source>
          <target state="translated">EvLoop::stat</target>
        </trans-unit>
        <trans-unit id="794b5723827f3cb71e93f28546dd8884938e6372" translate="yes" xml:space="preserve">
          <source>EvLoop::stat &amp;mdash; Creates EvStat watcher object associated with the current event loop instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fbfa1497fbd932878a1c3fe7df153ad72bebcc" translate="yes" xml:space="preserve">
          <source>EvLoop::stat &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032922c596dbf3e3fdd86fc5d127b51c45778b8e" translate="yes" xml:space="preserve">
          <source>EvLoop::stop</source>
          <target state="translated">EvLoop::stop</target>
        </trans-unit>
        <trans-unit id="f11ad327171cc2de76c4df3b0590dab1ac5fb959" translate="yes" xml:space="preserve">
          <source>EvLoop::stop &amp;mdash; Stops the event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3d9b768ab99dd4865b42937f4ddfa696a2862d" translate="yes" xml:space="preserve">
          <source>EvLoop::stop &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bcf0bebaf354bf420d2f45b5f8434cad25aba4" translate="yes" xml:space="preserve">
          <source>EvLoop::suspend</source>
          <target state="translated">EvLoop::suspend</target>
        </trans-unit>
        <trans-unit id="3a57798bd89befdea3cf09accd279c539a7e88d6" translate="yes" xml:space="preserve">
          <source>EvLoop::suspend &amp;mdash; Suspend the loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2006cc865b7630c7cbc9ddd2e434ac2bbea0cafe" translate="yes" xml:space="preserve">
          <source>EvLoop::suspend &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f0d600a7a8d0ccfe64a4617dbaf99342d98095" translate="yes" xml:space="preserve">
          <source>EvLoop::timer</source>
          <target state="translated">EvLoop::timer</target>
        </trans-unit>
        <trans-unit id="8bda59f52d83bf435bfceb45da6603cf630d7bc4" translate="yes" xml:space="preserve">
          <source>EvLoop::timer &amp;mdash; Creates EvTimer watcher object associated with the current event loop instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838ccbbe708b40dedacc0e31b216a8091c727721" translate="yes" xml:space="preserve">
          <source>EvLoop::timer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58484cbd5a611be19777cd393c66953603959f6" translate="yes" xml:space="preserve">
          <source>EvLoop::verify</source>
          <target state="translated">EvLoop::verify</target>
        </trans-unit>
        <trans-unit id="578a5eb0cb625411146817088596e7e136941019" translate="yes" xml:space="preserve">
          <source>EvLoop::verify &amp;mdash; Performs internal consistency checks(for debugging)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad100c9756dfd7f8dcbd02b077f5305423bc229c" translate="yes" xml:space="preserve">
          <source>EvLoop::verify &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdee978fa044775400f22327a679725362d5c14e" translate="yes" xml:space="preserve">
          <source>EvPeriodic</source>
          <target state="translated">EvPeriodic</target>
        </trans-unit>
        <trans-unit id="8754ba4a34e73e782d20cb0387fce21d90383ed0" translate="yes" xml:space="preserve">
          <source>EvPeriodic &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a1f2b7172538bef2077814b609af3d9fdf53da" translate="yes" xml:space="preserve">
          <source>EvPeriodic (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb09af08af4c8cee3de224548fd3902a1c8f1808" translate="yes" xml:space="preserve">
          <source>EvPeriodic::__construct</source>
          <target state="translated">EvPeriodic::__construct</target>
        </trans-unit>
        <trans-unit id="9421596b4c80533744ff5d8afed8a4d142fc56c2" translate="yes" xml:space="preserve">
          <source>EvPeriodic::__construct &amp;mdash; Constructs EvPeriodic watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99936017060ab81b5c985d132b63e26d0556197f" translate="yes" xml:space="preserve">
          <source>EvPeriodic::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4c28f0f80b659b10ba02202181fb1b4f5fe159" translate="yes" xml:space="preserve">
          <source>EvPeriodic::again</source>
          <target state="translated">EvPeriodic::again</target>
        </trans-unit>
        <trans-unit id="48d812acd497a19e04f5e4fa7c5cd37e0392244e" translate="yes" xml:space="preserve">
          <source>EvPeriodic::again &amp;mdash; Simply stops and restarts the periodic watcher again</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc308d2cc01b4c097aa99e15e13abd25e3fd5290" translate="yes" xml:space="preserve">
          <source>EvPeriodic::again &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96df8f7107c599b40b62117dd628ac0dd3776829" translate="yes" xml:space="preserve">
          <source>EvPeriodic::at</source>
          <target state="translated">EvPeriodic::at</target>
        </trans-unit>
        <trans-unit id="0e59924afe9c7edd63264587bad408e311329fb6" translate="yes" xml:space="preserve">
          <source>EvPeriodic::at &amp;mdash; Returns the absolute time that this watcher is supposed to trigger next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d9b3a0e9ebd3a05cbf706f90809a5ac73a9730" translate="yes" xml:space="preserve">
          <source>EvPeriodic::at &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffe6809747635d9f3ab6a370354064afa045b68" translate="yes" xml:space="preserve">
          <source>EvPeriodic::createStopped</source>
          <target state="translated">EvPeriodic::createStopped</target>
        </trans-unit>
        <trans-unit id="a7151553e62ab1f522015a40081a1f7c0766b275" translate="yes" xml:space="preserve">
          <source>EvPeriodic::createStopped &amp;mdash; Create a stopped EvPeriodic watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f347c67be1288c0bd26eb2c750ab5dd8c7dc242" translate="yes" xml:space="preserve">
          <source>EvPeriodic::createStopped &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae84bc88f5e69f9ead74953a9c1955213da6ee7" translate="yes" xml:space="preserve">
          <source>EvPeriodic::set</source>
          <target state="translated">EvPeriodic::set</target>
        </trans-unit>
        <trans-unit id="667d49d7b27c0d952922f90585b701d034166a5d" translate="yes" xml:space="preserve">
          <source>EvPeriodic::set &amp;mdash; Configures the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da86ba20dad64606662709ff708a4fbf14e03c3b" translate="yes" xml:space="preserve">
          <source>EvPeriodic::set &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eab341184644422e6deac99c71e389c935db0a4" translate="yes" xml:space="preserve">
          <source>EvPrepare</source>
          <target state="translated">EvPrepare</target>
        </trans-unit>
        <trans-unit id="da5ef06982dcd8e92970b5e11870f00bf24db9f7" translate="yes" xml:space="preserve">
          <source>EvPrepare &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c421736cd1bef64914ce6b20a05f7a0f73fe06eb" translate="yes" xml:space="preserve">
          <source>EvPrepare (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c706e021933405774a0fbdbb18b95e92b15a56b" translate="yes" xml:space="preserve">
          <source>EvPrepare::__construct</source>
          <target state="translated">EvPrepare::__construct</target>
        </trans-unit>
        <trans-unit id="e550c6157d7340fe575e38a196a04bebb9136250" translate="yes" xml:space="preserve">
          <source>EvPrepare::__construct &amp;mdash; Constructs EvPrepare watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b055e03580bbe9fb35ce9e8f02f6ccb526a0488c" translate="yes" xml:space="preserve">
          <source>EvPrepare::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea70f1ff618072cbe24d0e9d8523325f56d6e5c" translate="yes" xml:space="preserve">
          <source>EvPrepare::createStopped</source>
          <target state="translated">EvPrepare::createStopped</target>
        </trans-unit>
        <trans-unit id="317a03d674a4fde2dee6d9000faf08b1a2e17bb1" translate="yes" xml:space="preserve">
          <source>EvPrepare::createStopped &amp;mdash; Creates a stopped instance of EvPrepare watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57ef078446cda6626de0b342ece6c402c8b6974" translate="yes" xml:space="preserve">
          <source>EvPrepare::createStopped &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b3408f4b0e6258ed8ee7f03b3baca253455e63" translate="yes" xml:space="preserve">
          <source>EvSignal &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1955c5f01e7722073571d0d112b9d06cfb56f56a" translate="yes" xml:space="preserve">
          <source>EvSignal (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49724b6ef3a4605cdfd4be47c78227ee91a3fde8" translate="yes" xml:space="preserve">
          <source>EvSignal::__construct</source>
          <target state="translated">EvSignal::__construct</target>
        </trans-unit>
        <trans-unit id="cc76c7d4c8b283689dc2c2bb2fab0e0cc22b7804" translate="yes" xml:space="preserve">
          <source>EvSignal::__construct &amp;mdash; Constructs EvSignal watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15945435993811900be14831e34e1a0cef2e5fc1" translate="yes" xml:space="preserve">
          <source>EvSignal::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7fb88038b07b7a715e0c764d7c7a921e2a047c" translate="yes" xml:space="preserve">
          <source>EvSignal::createStopped</source>
          <target state="translated">EvSignal::createStopped</target>
        </trans-unit>
        <trans-unit id="011e9e4df6f607db684e51bdd6fb2f2603b9dcc1" translate="yes" xml:space="preserve">
          <source>EvSignal::createStopped &amp;mdash; Create stopped EvSignal watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd64168cadc11e86bb1c48d72a4c16c83c0ef96c" translate="yes" xml:space="preserve">
          <source>EvSignal::createStopped &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7d429273ac83f22d32366c8fd6c2bfbc2a6c51" translate="yes" xml:space="preserve">
          <source>EvSignal::set</source>
          <target state="translated">EvSignal::set</target>
        </trans-unit>
        <trans-unit id="a46f3d736b5f684ef7da3b0f8f3a1808e4f63353" translate="yes" xml:space="preserve">
          <source>EvSignal::set &amp;mdash; Configures the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801fb92b7afbfeb30e62eff16409ec1b6d88228e" translate="yes" xml:space="preserve">
          <source>EvSignal::set &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052697daf74ea9cac973232dee0ce0b139ca45dc" translate="yes" xml:space="preserve">
          <source>EvStat &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2756fdb5faafe82c7ff8a01514d669a96983ac" translate="yes" xml:space="preserve">
          <source>EvStat (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b68ebb696f54b673704264211386060e617877" translate="yes" xml:space="preserve">
          <source>EvStat::__construct</source>
          <target state="translated">EvStat::__construct</target>
        </trans-unit>
        <trans-unit id="8df5ae7d4fbfe576aea5bc7cde7f00a82e59e492" translate="yes" xml:space="preserve">
          <source>EvStat::__construct &amp;mdash; Constructs EvStat watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463156a91ac34a32e45e6aa8a36f79477bc3c0b3" translate="yes" xml:space="preserve">
          <source>EvStat::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1786978424e9849c0670365b3639d83a9b41ef" translate="yes" xml:space="preserve">
          <source>EvStat::attr</source>
          <target state="translated">EvStat::attr</target>
        </trans-unit>
        <trans-unit id="663bcdbc0c232306c15004512a36eb37896e8609" translate="yes" xml:space="preserve">
          <source>EvStat::attr &amp;mdash; Returns the values most recently detected by Ev</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27be60f29a6daba93c5ee6f0dc14e24656e9f05" translate="yes" xml:space="preserve">
          <source>EvStat::attr &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949905686ef2951a08f7fb5cff5b71eab074770f" translate="yes" xml:space="preserve">
          <source>EvStat::createStopped</source>
          <target state="translated">EvStat::createStopped</target>
        </trans-unit>
        <trans-unit id="d83cf74eeb36fe6eccd1d00d3c91059eaba67ffd" translate="yes" xml:space="preserve">
          <source>EvStat::createStopped &amp;mdash; Create a stopped EvStat watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789dbc3d8d5447c7d303bd8e6a1fd15d40e1d0f3" translate="yes" xml:space="preserve">
          <source>EvStat::createStopped &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70869fe79ade23ef131400db8799111b0230526c" translate="yes" xml:space="preserve">
          <source>EvStat::prev</source>
          <target state="translated">EvStat::prev</target>
        </trans-unit>
        <trans-unit id="c33d781cb75e97bb77721850cbe0792702cf6559" translate="yes" xml:space="preserve">
          <source>EvStat::prev &amp;mdash; Returns the previous set of values returned by EvStat::attr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc72b3961718893b67fc18510001392bac3b333c" translate="yes" xml:space="preserve">
          <source>EvStat::prev &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e7d48ab96ef3d015a9b4674f7f3abea70d5d12" translate="yes" xml:space="preserve">
          <source>EvStat::set</source>
          <target state="translated">EvStat::set</target>
        </trans-unit>
        <trans-unit id="f5afa968d93d78b5cf394fa67d8f13b79168f532" translate="yes" xml:space="preserve">
          <source>EvStat::set &amp;mdash; Configures the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5529f1b957adab2df1b17a7e4dd9e8df255a0711" translate="yes" xml:space="preserve">
          <source>EvStat::set &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df0d1c0d5ed42b524336cdb1c97f805eda49c86" translate="yes" xml:space="preserve">
          <source>EvStat::stat</source>
          <target state="translated">EvStat::stat</target>
        </trans-unit>
        <trans-unit id="f2a2d2cccedaa1172367e146602db92409c24e41" translate="yes" xml:space="preserve">
          <source>EvStat::stat &amp;mdash; Initiates the stat call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6756bb3ed242c2f62871ba4d3015665aa5750486" translate="yes" xml:space="preserve">
          <source>EvStat::stat &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee6700a993ae3d83bb2767c9a4e74dbf63beaa2" translate="yes" xml:space="preserve">
          <source>EvTimer</source>
          <target state="translated">EvTimer</target>
        </trans-unit>
        <trans-unit id="7f8a64f35a93dfd9822d2bd3e1da433bb0e828d1" translate="yes" xml:space="preserve">
          <source>EvTimer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8f129dc15b8df2eddb4addd3e35f000879bb9e" translate="yes" xml:space="preserve">
          <source>EvTimer (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb44fb48f76dfac86b3c8d152d343bfc1924b23e" translate="yes" xml:space="preserve">
          <source>EvTimer::__construct</source>
          <target state="translated">EvTimer::__construct</target>
        </trans-unit>
        <trans-unit id="1527b2986dacbb7d25b2ab0e86c126c45a37d77d" translate="yes" xml:space="preserve">
          <source>EvTimer::__construct &amp;mdash; Constructs an EvTimer watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edc8ad6f7f1ff4859dff0964f347a134d46b149" translate="yes" xml:space="preserve">
          <source>EvTimer::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8ced6d8d3a7c102b181e073dd3ad90a6501985" translate="yes" xml:space="preserve">
          <source>EvTimer::again</source>
          <target state="translated">EvTimer::again</target>
        </trans-unit>
        <trans-unit id="4d0ee0bb10a4f6575cbd8d22668cbb96bf832d54" translate="yes" xml:space="preserve">
          <source>EvTimer::again &amp;mdash; Restarts the timer watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b34ebe72721a5a3674c4a1976fc427acc6713b8" translate="yes" xml:space="preserve">
          <source>EvTimer::again &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2691db1b2465f1eea6a18a319564d6be85936f50" translate="yes" xml:space="preserve">
          <source>EvTimer::createStopped</source>
          <target state="translated">EvTimer::createStopped</target>
        </trans-unit>
        <trans-unit id="1c417a5042dd10029cb1544ba71108300530382c" translate="yes" xml:space="preserve">
          <source>EvTimer::createStopped &amp;mdash; Creates EvTimer stopped watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7f76516d0e14ffb40fa1a72ed3c877e9804f4b" translate="yes" xml:space="preserve">
          <source>EvTimer::createStopped &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6155215dd93b371d682794ff540b696f244276d9" translate="yes" xml:space="preserve">
          <source>EvTimer::set</source>
          <target state="translated">EvTimer::set</target>
        </trans-unit>
        <trans-unit id="87ef2622ce8a5bd6625e091605bb87a381382cb2" translate="yes" xml:space="preserve">
          <source>EvTimer::set &amp;mdash; Configures the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39a6c2600d1020ad16e3308728202db17e0a375" translate="yes" xml:space="preserve">
          <source>EvTimer::set &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9df40e19841b8d3db70a11aa595b37d41d77265" translate="yes" xml:space="preserve">
          <source>EvWatcher &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb951d241978d464c24083d7e9463cbed17ead22" translate="yes" xml:space="preserve">
          <source>EvWatcher (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b8c5438c2c720845c1a2013c8ac9fe49e18fb8" translate="yes" xml:space="preserve">
          <source>EvWatcher::__construct</source>
          <target state="translated">EvWatcher::__construct</target>
        </trans-unit>
        <trans-unit id="34885bb7c15f6e1defbd4d2798f29bbe349b8eee" translate="yes" xml:space="preserve">
          <source>EvWatcher::__construct &amp;mdash; Abstract constructor of a watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3875282948a66d3f43d0a318eecba4f06493e9" translate="yes" xml:space="preserve">
          <source>EvWatcher::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080c45a83a248326040d0002fbadaffd0907a04b" translate="yes" xml:space="preserve">
          <source>EvWatcher::clear</source>
          <target state="translated">EvWatcher::clear</target>
        </trans-unit>
        <trans-unit id="02d9577719a90f9daeed7589ee745239330d3f89" translate="yes" xml:space="preserve">
          <source>EvWatcher::clear &amp;mdash; Clear watcher pending status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2455987b504f54f380ad95b36ca810728e4c2cb6" translate="yes" xml:space="preserve">
          <source>EvWatcher::clear &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f29c707e282012c5f5f41e467d44ba1bd07e52" translate="yes" xml:space="preserve">
          <source>EvWatcher::feed</source>
          <target state="translated">EvWatcher::feed</target>
        </trans-unit>
        <trans-unit id="2f261d4116ad64b34b297ccf2e46d7a98320581c" translate="yes" xml:space="preserve">
          <source>EvWatcher::feed &amp;mdash; Feeds the given revents set into the event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e238bc77d92fd979f302203cc8a6f569c23646f" translate="yes" xml:space="preserve">
          <source>EvWatcher::feed &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5bf3ecadd04c188376ff5f70bd0f8dffdfb7d4" translate="yes" xml:space="preserve">
          <source>EvWatcher::getLoop</source>
          <target state="translated">EvWatcher::getLoop</target>
        </trans-unit>
        <trans-unit id="60ade5a5eb215baf64d2a3db34e85e7414ceeba8" translate="yes" xml:space="preserve">
          <source>EvWatcher::getLoop &amp;mdash; Returns the loop responsible for the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd5000020d2c511545dc92d916af7302d3776ee" translate="yes" xml:space="preserve">
          <source>EvWatcher::getLoop &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934756039c1be99b44a5d5b4cf4db57b93787222" translate="yes" xml:space="preserve">
          <source>EvWatcher::invoke</source>
          <target state="translated">EvWatcher::invoke</target>
        </trans-unit>
        <trans-unit id="7e8522398f5db894ff9e9b7ffb49c64ba664260b" translate="yes" xml:space="preserve">
          <source>EvWatcher::invoke &amp;mdash; Invokes the watcher callback with the given received events bit mask</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd2acfff63c302ef000ddf75d1802e8342b889f" translate="yes" xml:space="preserve">
          <source>EvWatcher::invoke &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8106397dd22065aa8272caaac85083d976aa717c" translate="yes" xml:space="preserve">
          <source>EvWatcher::keepalive</source>
          <target state="translated">EvWatcher::keepalive</target>
        </trans-unit>
        <trans-unit id="abc6912d843e44e513fe4cf48052092cde12ac5b" translate="yes" xml:space="preserve">
          <source>EvWatcher::keepalive &amp;mdash; Configures whether to keep the loop from returning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91c5233c95a3bc437c3e1017b3ce84a88dc49ec" translate="yes" xml:space="preserve">
          <source>EvWatcher::keepalive &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d06881d8a31de4a18c9878699dc8b75f0d9d58f" translate="yes" xml:space="preserve">
          <source>EvWatcher::setCallback</source>
          <target state="translated">EvWatcher::setCallback</target>
        </trans-unit>
        <trans-unit id="03012e6cc8f0b29cc83032f9b1a9cc1cccf0805b" translate="yes" xml:space="preserve">
          <source>EvWatcher::setCallback &amp;mdash; Sets new callback for the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d91ab6af6773a1b300080cadb33420fd99dfaf" translate="yes" xml:space="preserve">
          <source>EvWatcher::setCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d932763726dc2e185768da1693216a8e7741c664" translate="yes" xml:space="preserve">
          <source>EvWatcher::start</source>
          <target state="translated">EvWatcher::start</target>
        </trans-unit>
        <trans-unit id="25ec11b0df41e39685a847ed51aef2996af00e90" translate="yes" xml:space="preserve">
          <source>EvWatcher::start &amp;mdash; Starts the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d5525c5196d4d521030883d9bf5ffe3c4199c9" translate="yes" xml:space="preserve">
          <source>EvWatcher::start &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3022ffad9cf275b080da6060d5ed6160520f34" translate="yes" xml:space="preserve">
          <source>EvWatcher::stop</source>
          <target state="translated">EvWatcher::stop</target>
        </trans-unit>
        <trans-unit id="09c29571b246bec33c13dc26dece831534dbdf31" translate="yes" xml:space="preserve">
          <source>EvWatcher::stop &amp;mdash; Stops the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718409cfc3207b8392ec050cc8a7ff81e9b2a9fe" translate="yes" xml:space="preserve">
          <source>EvWatcher::stop &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48a72d32ff61f680c9bc9637cf1aaf36235d22b" translate="yes" xml:space="preserve">
          <source>Evaluate expression for each pixel in the image. Consult &lt;a href=&quot;http://www.imagemagick.org/script/fx.php&quot;&gt;&amp;raquo; The Fx Special Effects Image Operator&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9fddd3de2ffe6d6bea3ec40036740deecbf882" translate="yes" xml:space="preserve">
          <source>Evaluates the given &lt;code&gt;code&lt;/code&gt; as PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339961afbf39d04d2285ec0df53b53afb2afaf9d" translate="yes" xml:space="preserve">
          <source>Even an &lt;a href=&quot;class.infiniteiterator&quot;&gt;InfiniteIterator&lt;/a&gt; stops if its inner &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00b9fc43d521957d22cf7457f4277e6cedc0231" translate="yes" xml:space="preserve">
          <source>Even the browser may buffer its input before displaying it. Netscape, for example, buffers text until it receives an end-of-line or the beginning of a tag, and it won't render tables until the &amp;lt;/table&amp;gt; tag of the outermost table is seen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f345de784947b4915eb5cef674521dec80c230" translate="yes" xml:space="preserve">
          <source>Even though both the superglobal and &lt;em&gt;HTTP_*_VARS&lt;/em&gt; can exist at the same time; they are not identical, so modifying one will not change the other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="10737a7e6c129f87c9eee46a03487fd816d54a88" translate="yes" xml:space="preserve">
          <source>Event &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f10fe0a0d5ec19bee080b45484d151538cea08c" translate="yes" xml:space="preserve">
          <source>Event base that should be associated with the new buffer event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b39cf348f8e7df4767018d9b01d6079cda83fff" translate="yes" xml:space="preserve">
          <source>Event base.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7bffef0255d0b8c5380bcdea5bd57dce02c089" translate="yes" xml:space="preserve">
          <source>Event buffers are meant to be generally useful for doing the &quot;buffer&quot; part of buffered network I/O.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3561e8a75f43bcd4d3794fec1817a8a490e1f8e" translate="yes" xml:space="preserve">
          <source>Event flags. See &lt;a href=&quot;https://secure.php.net/manual/en/event.flags.php&quot;&gt;Event flags&lt;/a&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9246490f7fe6d62be8832ef99084afce96f4011" translate="yes" xml:space="preserve">
          <source>Event-driven parsing (based on the expat library) can get complicated when you have an XML document that is complex. This function does not produce a DOM style object, but it generates structures amenable of being transversed in a tree fashion. Thus, we can create objects representing the data in the XML file easily. Let's consider the following XML file representing a small database of aminoacids information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da54bbe5d154b2077a3c0a0009f48786d4d25a0c" translate="yes" xml:space="preserve">
          <source>Event::__construct</source>
          <target state="translated">Event::__construct</target>
        </trans-unit>
        <trans-unit id="eec79ecdd195ceaeff4f8e6c39167bb833a6df3e" translate="yes" xml:space="preserve">
          <source>Event::__construct &amp;mdash; Constructs Event object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7d24de2db557aadc3d95d1206fbabad5eab9ac" translate="yes" xml:space="preserve">
          <source>Event::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591f5653de3281160eda59dfe584b336b36b00bc" translate="yes" xml:space="preserve">
          <source>Event::add</source>
          <target state="translated">Event::add</target>
        </trans-unit>
        <trans-unit id="daa251b68572dffee43eab8f723f4d147c9ed7f7" translate="yes" xml:space="preserve">
          <source>Event::add &amp;mdash; Makes event pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77280547d53f0e6f60b6b3a6f3aab7bd5423c004" translate="yes" xml:space="preserve">
          <source>Event::add &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ffaf685df7fcc94d713d25deaa174fabefe22c" translate="yes" xml:space="preserve">
          <source>Event::addSignal</source>
          <target state="translated">Event::addSignal</target>
        </trans-unit>
        <trans-unit id="ebbb28223af89412adef9a90f52f72a09f4c5fed" translate="yes" xml:space="preserve">
          <source>Event::addSignal &amp;mdash; Makes signal event pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b185177e3715a3805fca18c1ac212769f706443" translate="yes" xml:space="preserve">
          <source>Event::addSignal &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f5fd49dd9708bc4010eca6e41c464eea620fd4" translate="yes" xml:space="preserve">
          <source>Event::addTimer</source>
          <target state="translated">Event::addTimer</target>
        </trans-unit>
        <trans-unit id="80555c43c647d980643afed61331feff2417b0f7" translate="yes" xml:space="preserve">
          <source>Event::addTimer &amp;mdash; Makes timer event pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472dacd47b5ed88068dc8db64a95f14a8fdfc317" translate="yes" xml:space="preserve">
          <source>Event::addTimer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371dd6d6228a0acb48e032ca8ae5d9e639c2311b" translate="yes" xml:space="preserve">
          <source>Event::del</source>
          <target state="translated">Event::del</target>
        </trans-unit>
        <trans-unit id="2c085b7544cea1070ef044fd87593b548f02dbca" translate="yes" xml:space="preserve">
          <source>Event::del &amp;mdash; Makes event non-pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d246ab23a49b2faead24a600c00b7fd92b5ec1d" translate="yes" xml:space="preserve">
          <source>Event::del &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3878f05d44fc17b90ca7b15124b98d35f5198fd3" translate="yes" xml:space="preserve">
          <source>Event::delSignal</source>
          <target state="translated">Event::delSignal</target>
        </trans-unit>
        <trans-unit id="12184d3ad1c094d046cccc457b51cb7320c7b16d" translate="yes" xml:space="preserve">
          <source>Event::delSignal &amp;mdash; Makes signal event non-pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007593828d5e8bf16dee83e8d264eb6a8f2c6852" translate="yes" xml:space="preserve">
          <source>Event::delSignal &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50672604c4edd06351ac936427357659f438588e" translate="yes" xml:space="preserve">
          <source>Event::delTimer</source>
          <target state="translated">Event::delTimer</target>
        </trans-unit>
        <trans-unit id="6a05b927e64e092058a06d3504f77780dd7b7b90" translate="yes" xml:space="preserve">
          <source>Event::delTimer &amp;mdash; Makes timer event non-pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6169e1266682ae0a6230e171454d67feb01a6a3" translate="yes" xml:space="preserve">
          <source>Event::delTimer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d654414295e41fd77eb44d159c37838ce83488e" translate="yes" xml:space="preserve">
          <source>Event::free</source>
          <target state="translated">Event::free</target>
        </trans-unit>
        <trans-unit id="5e9a4159b4a0350386012aab719f8027604a9120" translate="yes" xml:space="preserve">
          <source>Event::free &amp;mdash; Make event non-pending and free resources allocated for this event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e013ed3415089ddab6c4e9ab55f847de565519" translate="yes" xml:space="preserve">
          <source>Event::free &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6895bae341a568aa7613c71e4037ed187e9518e" translate="yes" xml:space="preserve">
          <source>Event::getSupportedMethods</source>
          <target state="translated">Event::getSupportedMethods</target>
        </trans-unit>
        <trans-unit id="e177cbb5203b6747ceafbb3f5b35e88738956de1" translate="yes" xml:space="preserve">
          <source>Event::getSupportedMethods &amp;mdash; Returns array with of the names of the methods supported in this version of Libevent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751f28dbe84816c8182c0b03e4d1a525c160c510" translate="yes" xml:space="preserve">
          <source>Event::getSupportedMethods &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09714082899506e6fdd3f0376beb2314334e4f9d" translate="yes" xml:space="preserve">
          <source>Event::pending</source>
          <target state="translated">Event::pending</target>
        </trans-unit>
        <trans-unit id="81fb21b3180666d86ec840b42ae81154760ce83e" translate="yes" xml:space="preserve">
          <source>Event::pending &amp;mdash; Detects whether event is pending or scheduled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0aa993022097e7d7e435127aef86c785d2f2d63" translate="yes" xml:space="preserve">
          <source>Event::pending &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b9ed47d8106fd603862b01423ab226b333f6e9" translate="yes" xml:space="preserve">
          <source>Event::set</source>
          <target state="translated">Event::set</target>
        </trans-unit>
        <trans-unit id="4d64d82089999a51a3d6cc8ad95eb22025d443b3" translate="yes" xml:space="preserve">
          <source>Event::set &amp;mdash; Re-configures event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04761a959e02d5f0997079244cc487384953da1" translate="yes" xml:space="preserve">
          <source>Event::set &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c40b616fdad4aeed2fd8248ffeae9b93096e60" translate="yes" xml:space="preserve">
          <source>Event::setPriority</source>
          <target state="translated">Event::setPriority</target>
        </trans-unit>
        <trans-unit id="45b62f6acaeae8f90f233d6ab2f642dc4ab1ede7" translate="yes" xml:space="preserve">
          <source>Event::setPriority &amp;mdash; Set event priority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467c9df53a3110e3947255eacf469009e9de1d4f" translate="yes" xml:space="preserve">
          <source>Event::setPriority &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bd47b8b1f606f51671aafb04ef265a6b4cfc6d" translate="yes" xml:space="preserve">
          <source>Event::setTimer</source>
          <target state="translated">Event::setTimer</target>
        </trans-unit>
        <trans-unit id="c6976e17938939737d26a6cb62e98242d2966010" translate="yes" xml:space="preserve">
          <source>Event::setTimer &amp;mdash; Re-configures timer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea72bc9a5ae1365a4a5d077d9707bccb75767802" translate="yes" xml:space="preserve">
          <source>Event::setTimer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319bef10c16b7d6ec582e6beb486bf1943b74b3d" translate="yes" xml:space="preserve">
          <source>Event::signal</source>
          <target state="translated">Event::signal</target>
        </trans-unit>
        <trans-unit id="051c49c1c9c2168cfddec5c78e2ee3f1baf035ea" translate="yes" xml:space="preserve">
          <source>Event::signal &amp;mdash; Constructs signal event object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7632dfaede88a5bd700c885148a3509fb6d31d0e" translate="yes" xml:space="preserve">
          <source>Event::signal &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc76d4d4763c143709c7c6f0dbe86b3bea1ef24" translate="yes" xml:space="preserve">
          <source>Event::timer</source>
          <target state="translated">Event::timer</target>
        </trans-unit>
        <trans-unit id="da6f7046d589e6470869f8bd72ec5839713bbc3e" translate="yes" xml:space="preserve">
          <source>Event::timer &amp;mdash; Constructs timer event object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a887a38f3b8252c195490115d14a184b0ff4e1a" translate="yes" xml:space="preserve">
          <source>Event::timer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c100702e9de9280ecf405b3c1bfa379394e9b332" translate="yes" xml:space="preserve">
          <source>EventBase &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e85f446d7550e4e4f29982c556bdf480ab9683" translate="yes" xml:space="preserve">
          <source>EventBase::__construct</source>
          <target state="translated">EventBase::__construct</target>
        </trans-unit>
        <trans-unit id="928049ac8a413d43fc67e969d9121efc30d1b16e" translate="yes" xml:space="preserve">
          <source>EventBase::__construct &amp;mdash; Constructs EventBase object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e1e77b01cff7dfd8821a3a181ac1748f092172" translate="yes" xml:space="preserve">
          <source>EventBase::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3b4f168f6b8f61909c52c6aa350cb7d3f5be24" translate="yes" xml:space="preserve">
          <source>EventBase::dispatch</source>
          <target state="translated">EventBase::dispatch</target>
        </trans-unit>
        <trans-unit id="7e95fa629fa4f27151dd0642ad07d8d2ff0bb104" translate="yes" xml:space="preserve">
          <source>EventBase::dispatch &amp;mdash; Dispatch pending events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fd5695b28a3e681352e00519f24c78fddde146" translate="yes" xml:space="preserve">
          <source>EventBase::dispatch &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ae80c5b1443c2ed80d14feb2a40ad311f67b64" translate="yes" xml:space="preserve">
          <source>EventBase::exit</source>
          <target state="translated">EventBase::exit</target>
        </trans-unit>
        <trans-unit id="be97dfeab1781219a047f12766392b8b33be4cb5" translate="yes" xml:space="preserve">
          <source>EventBase::exit &amp;mdash; Stop dispatching events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc87446f235742c14a5ec293bd305b75d9c5888" translate="yes" xml:space="preserve">
          <source>EventBase::exit &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ceced5aa5b74178aaf67c38e6e429f26afd34f5" translate="yes" xml:space="preserve">
          <source>EventBase::free</source>
          <target state="translated">EventBase::free</target>
        </trans-unit>
        <trans-unit id="c661cbf93fb6bbc66dc00c7aa93e7444db552edd" translate="yes" xml:space="preserve">
          <source>EventBase::free &amp;mdash; Free resources allocated for this event base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1844433591fb0374f3de672058cf1428db366b8d" translate="yes" xml:space="preserve">
          <source>EventBase::free &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a591eb1f5c0f79b2f5eb587cc0ff6f42fa76d5" translate="yes" xml:space="preserve">
          <source>EventBase::getFeatures</source>
          <target state="translated">EventBase::getFeatures</target>
        </trans-unit>
        <trans-unit id="6254d2426484fd7a53446c63ec5b69fe0d0e4f6c" translate="yes" xml:space="preserve">
          <source>EventBase::getFeatures &amp;mdash; Returns bitmask of features supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc37016d71d9875b7c2b48e42d7a28a7b84f23be" translate="yes" xml:space="preserve">
          <source>EventBase::getFeatures &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5ee65cdd266089d9adcc6d142ba2a708060ee2" translate="yes" xml:space="preserve">
          <source>EventBase::getMethod</source>
          <target state="translated">EventBase::getMethod</target>
        </trans-unit>
        <trans-unit id="a87e719391fe684f49959035549d4c5e9eb74cbb" translate="yes" xml:space="preserve">
          <source>EventBase::getMethod &amp;mdash; Returns event method in use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90eab4c7e26b4a2997600dc47f6b91350f2f3f46" translate="yes" xml:space="preserve">
          <source>EventBase::getMethod &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a1eacace764247c961f43ca7756ca81a4de990" translate="yes" xml:space="preserve">
          <source>EventBase::getTimeOfDayCached</source>
          <target state="translated">EventBase::getTimeOfDayCached</target>
        </trans-unit>
        <trans-unit id="8446fc0381b1a83f04d00802a78b23a74cd23aae" translate="yes" xml:space="preserve">
          <source>EventBase::getTimeOfDayCached &amp;mdash; Returns the current event base time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06f5594e0be14db1b5befb896dd5573bf5fac48" translate="yes" xml:space="preserve">
          <source>EventBase::getTimeOfDayCached &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3907e49f774f6e2f2bf3ddd99c8bd115df4c8c6c" translate="yes" xml:space="preserve">
          <source>EventBase::gotExit</source>
          <target state="translated">EventBase::gotExit</target>
        </trans-unit>
        <trans-unit id="10529403cc7c67cc99e73779f934022e6f68460f" translate="yes" xml:space="preserve">
          <source>EventBase::gotExit &amp;mdash; Checks if the event loop was told to exit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24072950200d7e1c8f940e15c41e4799b0fb0b6d" translate="yes" xml:space="preserve">
          <source>EventBase::gotExit &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4821ac141061164ef099bd83b363f7422b9533" translate="yes" xml:space="preserve">
          <source>EventBase::gotStop</source>
          <target state="translated">EventBase::gotStop</target>
        </trans-unit>
        <trans-unit id="8db7ac76dc9c4652a5850513e74c6000e338fca5" translate="yes" xml:space="preserve">
          <source>EventBase::gotStop &amp;mdash; Checks if the event loop was told to exit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="451e52f7ded13a7cc53ac3b8d7dabb836acb8630" translate="yes" xml:space="preserve">
          <source>EventBase::gotStop &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc284f548b67137ba744f1645134eda20173df3" translate="yes" xml:space="preserve">
          <source>EventBase::loop</source>
          <target state="translated">EventBase::loop</target>
        </trans-unit>
        <trans-unit id="917466ef3babebe78ba3e0af8d48d82463386f53" translate="yes" xml:space="preserve">
          <source>EventBase::loop &amp;mdash; Dispatch pending events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a102da77709a0957ff86a822b82a6192ade16bab" translate="yes" xml:space="preserve">
          <source>EventBase::loop &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212807be13ac864a4402677e10da19e2c041f96e" translate="yes" xml:space="preserve">
          <source>EventBase::priorityInit</source>
          <target state="translated">EventBase::priorityInit</target>
        </trans-unit>
        <trans-unit id="3c9db5f3f6916b546bf9ca4227dd5b652bc185b1" translate="yes" xml:space="preserve">
          <source>EventBase::priorityInit &amp;mdash; Sets number of priorities per event base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7f006c9be0498aeb08bcfc3cda08cecbbe70a3" translate="yes" xml:space="preserve">
          <source>EventBase::priorityInit &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db62c39b15029a9955e11638fef9bf2aa26493e" translate="yes" xml:space="preserve">
          <source>EventBase::reInit</source>
          <target state="translated">EventBase::reInit</target>
        </trans-unit>
        <trans-unit id="ce2a6cdadc9a42211ca6a53ecb39c9774094ebe1" translate="yes" xml:space="preserve">
          <source>EventBase::reInit &amp;mdash; Re-initialize event base(after a fork)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f2241d0efc3d8dde1f15dd0a063b905b13e81a" translate="yes" xml:space="preserve">
          <source>EventBase::reInit &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f7059969b62b86c18d846d9dda89a99f043fbf" translate="yes" xml:space="preserve">
          <source>EventBase::stop</source>
          <target state="translated">EventBase::stop</target>
        </trans-unit>
        <trans-unit id="e1fe97cab631d7d72627e87c9571c0ba754d41ef" translate="yes" xml:space="preserve">
          <source>EventBase::stop &amp;mdash; Tells event_base to stop dispatching events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db090fb67bee3c08280b10e979cb9e3f0c9d6530" translate="yes" xml:space="preserve">
          <source>EventBase::stop &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38f3cc71f32aeff5efba696089424f372bdfc7c" translate="yes" xml:space="preserve">
          <source>EventBuffer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465ea4bd8ebaae6de6dda25fdf06e80036a06724" translate="yes" xml:space="preserve">
          <source>EventBuffer::__construct</source>
          <target state="translated">EventBuffer::__construct</target>
        </trans-unit>
        <trans-unit id="619f7053a654c8f6ad7ce36ee5fc5864db31b9f1" translate="yes" xml:space="preserve">
          <source>EventBuffer::__construct &amp;mdash; Constructs EventBuffer object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d64d5a79b749e43853d0175b65020ca11cb6fc" translate="yes" xml:space="preserve">
          <source>EventBuffer::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aecbaa395d540680a75421f9c87929dcd1eaafae" translate="yes" xml:space="preserve">
          <source>EventBuffer::add</source>
          <target state="translated">EventBuffer::add</target>
        </trans-unit>
        <trans-unit id="f84fd3a733f70bf919ef48fe235b9fec8c41f920" translate="yes" xml:space="preserve">
          <source>EventBuffer::add &amp;mdash; Append data to the end of an event buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112098133363c0afa706cd70d674b1f85d7c864a" translate="yes" xml:space="preserve">
          <source>EventBuffer::add &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fed1a215672c0482abebed530c3462a6e7bcac" translate="yes" xml:space="preserve">
          <source>EventBuffer::addBuffer</source>
          <target state="translated">EventBuffer::addBuffer</target>
        </trans-unit>
        <trans-unit id="5495c98b65fec57e878c3af9fab4d703ee2fe97c" translate="yes" xml:space="preserve">
          <source>EventBuffer::addBuffer &amp;mdash; Move all data from a buffer provided to the current instance of EventBuffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23e3a9e274384d4cbb868186a77855695e45c28" translate="yes" xml:space="preserve">
          <source>EventBuffer::addBuffer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf55675d756be5851b2fb6164d8b0abf1de5f7c" translate="yes" xml:space="preserve">
          <source>EventBuffer::appendFrom</source>
          <target state="translated">EventBuffer::appendFrom</target>
        </trans-unit>
        <trans-unit id="dbe4f546f4a737a447ec33850addd6d9bd0ee400" translate="yes" xml:space="preserve">
          <source>EventBuffer::appendFrom &amp;mdash; Moves the specified number of bytes from a source buffer to the end of the current buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf65ebe7ffed099debd5a406dbac46382a0339e" translate="yes" xml:space="preserve">
          <source>EventBuffer::appendFrom &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efcc7289526f60539a94ee711a735189b6727a5" translate="yes" xml:space="preserve">
          <source>EventBuffer::copyout</source>
          <target state="translated">EventBuffer::copyout</target>
        </trans-unit>
        <trans-unit id="58196f86749716a3aadf27a1038f4d3f39396a16" translate="yes" xml:space="preserve">
          <source>EventBuffer::copyout &amp;mdash; Copies out specified number of bytes from the front of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4276f27924b1589f0e4583dd380c002d063de6b2" translate="yes" xml:space="preserve">
          <source>EventBuffer::copyout &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51f90958d2e5a87aafe57649a855afdceb59523" translate="yes" xml:space="preserve">
          <source>EventBuffer::drain</source>
          <target state="translated">EventBuffer::drain</target>
        </trans-unit>
        <trans-unit id="de24569c8522f5d2b47e50f2fbc8608a314441a1" translate="yes" xml:space="preserve">
          <source>EventBuffer::drain &amp;mdash; Removes specified number of bytes from the front of the buffer without copying it anywhere</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d86b7d15c1066f24e761e9d61244380f34b75c" translate="yes" xml:space="preserve">
          <source>EventBuffer::drain &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db00eb133c818f84a4eb66cc1cbdf8546dd9d683" translate="yes" xml:space="preserve">
          <source>EventBuffer::enableLocking</source>
          <target state="translated">EventBuffer::enableLocking</target>
        </trans-unit>
        <trans-unit id="cdcde96d74cd323d891c4ac4e71e73f560c24249" translate="yes" xml:space="preserve">
          <source>EventBuffer::enableLocking &amp;mdash;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4c5b646075d899ecf26fdf270e73aaf87dab19" translate="yes" xml:space="preserve">
          <source>EventBuffer::enableLocking &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c535215fa6dcb12fe5bc928d16d7cabb04740b13" translate="yes" xml:space="preserve">
          <source>EventBuffer::expand</source>
          <target state="translated">EventBuffer::expand</target>
        </trans-unit>
        <trans-unit id="59eba956ceaac1ea41845b0d368999fb918383b9" translate="yes" xml:space="preserve">
          <source>EventBuffer::expand &amp;mdash; Reserves space in buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9906713c935c7a341c30bd639869203eb5d8eb" translate="yes" xml:space="preserve">
          <source>EventBuffer::expand &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89e802d42464b88fdb797311128b6451821825d" translate="yes" xml:space="preserve">
          <source>EventBuffer::freeze</source>
          <target state="translated">EventBuffer::freeze</target>
        </trans-unit>
        <trans-unit id="1c60f173f3743d3de63039ada09174569f70c995" translate="yes" xml:space="preserve">
          <source>EventBuffer::freeze &amp;mdash; Prevent calls that modify an event buffer from succeeding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5433bc2ec42275368130575c46728c75ec883f92" translate="yes" xml:space="preserve">
          <source>EventBuffer::freeze &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931b8ea031ba3d2b375eef4e5229f3332f91bf74" translate="yes" xml:space="preserve">
          <source>EventBuffer::lock</source>
          <target state="translated">EventBuffer::lock</target>
        </trans-unit>
        <trans-unit id="5dcc38f8f2de5012fd781d11bdc5541977748db5" translate="yes" xml:space="preserve">
          <source>EventBuffer::lock &amp;mdash; Acquires a lock on buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b6fc93244535aaa44cf5b81eded4a34ec6c896" translate="yes" xml:space="preserve">
          <source>EventBuffer::lock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08def165611b33a67bd43514234dac31a6f8614" translate="yes" xml:space="preserve">
          <source>EventBuffer::prepend</source>
          <target state="translated">EventBuffer::prepend</target>
        </trans-unit>
        <trans-unit id="c05c68efcaad2ae862fa995b309967b70baf8756" translate="yes" xml:space="preserve">
          <source>EventBuffer::prepend &amp;mdash; Prepend data to the front of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b592122041665132454c5c6789d7a2eb53a70a42" translate="yes" xml:space="preserve">
          <source>EventBuffer::prepend &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f207124e237810410a9c586051c6c4bc342178f3" translate="yes" xml:space="preserve">
          <source>EventBuffer::prependBuffer</source>
          <target state="translated">EventBuffer::prependBuffer</target>
        </trans-unit>
        <trans-unit id="a4b0d9af8955e8588a911492334a2021ecc71a61" translate="yes" xml:space="preserve">
          <source>EventBuffer::prependBuffer &amp;mdash; Moves all data from source buffer to the front of current buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56d98e1934d47bd22c52556eaed065d14760c71" translate="yes" xml:space="preserve">
          <source>EventBuffer::prependBuffer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912a6ec47568c8485282ebdbf6d6828a5976d0b5" translate="yes" xml:space="preserve">
          <source>EventBuffer::pullup</source>
          <target state="translated">EventBuffer::pullup</target>
        </trans-unit>
        <trans-unit id="162851cec032d72cf433d7179c4d1fe838f84e2a" translate="yes" xml:space="preserve">
          <source>EventBuffer::pullup &amp;mdash; Linearizes data within buffer and returns it's contents as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f00e3ed752834a74a7c4b055c5b780d324c76a" translate="yes" xml:space="preserve">
          <source>EventBuffer::pullup &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73730e6850ba200b9226f6faf38a4a2313227021" translate="yes" xml:space="preserve">
          <source>EventBuffer::read</source>
          <target state="translated">EventBuffer::read</target>
        </trans-unit>
        <trans-unit id="4cb822eafd5bba2ab5636abd3b88c673b102105e" translate="yes" xml:space="preserve">
          <source>EventBuffer::read &amp;mdash; Read data from an evbuffer and drain the bytes read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be645039ccf04e07792f263c2cbf2d55b63a5fba" translate="yes" xml:space="preserve">
          <source>EventBuffer::read &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886845a3f8b78a0a937fa4b7a4c1d2a0ec049988" translate="yes" xml:space="preserve">
          <source>EventBuffer::readFrom</source>
          <target state="translated">EventBuffer::readFrom</target>
        </trans-unit>
        <trans-unit id="ee2edc7613cf92a12d18edbde159b72435b4b136" translate="yes" xml:space="preserve">
          <source>EventBuffer::readFrom &amp;mdash; Read data from a file onto the end of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d0a1d08b4966583a7e985fed8511346c7cbada" translate="yes" xml:space="preserve">
          <source>EventBuffer::readFrom &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347e15f52310de02a951fcb7d66341d751def261" translate="yes" xml:space="preserve">
          <source>EventBuffer::readLine</source>
          <target state="translated">EventBuffer::readLine</target>
        </trans-unit>
        <trans-unit id="cd20d8791da8407e347f49d2c900c9039d494695" translate="yes" xml:space="preserve">
          <source>EventBuffer::readLine &amp;mdash; Extracts a line from the front of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c4658ebac15e2c5f559aab131c65fd189dcf4c" translate="yes" xml:space="preserve">
          <source>EventBuffer::readLine &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf9653cc838e3dac5546997cd10f92b5a8d1ae5" translate="yes" xml:space="preserve">
          <source>EventBuffer::search</source>
          <target state="translated">EventBuffer::search</target>
        </trans-unit>
        <trans-unit id="a863af26521a9e9eaf77ab95092efddb9a0155d4" translate="yes" xml:space="preserve">
          <source>EventBuffer::search &amp;mdash; Scans the buffer for an occurrence of a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48a6e2b155fee95e5dc9d297ddeb3a7a1a4d484" translate="yes" xml:space="preserve">
          <source>EventBuffer::search &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ce0728206a96d854e641361fb47ccf4de33d99" translate="yes" xml:space="preserve">
          <source>EventBuffer::searchEol</source>
          <target state="translated">EventBuffer::searchEol</target>
        </trans-unit>
        <trans-unit id="ee4e9356a4437ab8361cbb087a799bdbd24cbfa2" translate="yes" xml:space="preserve">
          <source>EventBuffer::searchEol &amp;mdash; Scans the buffer for an occurrence of an end of line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bbd6149be1dba5184bcd19c704db2efbedcac6" translate="yes" xml:space="preserve">
          <source>EventBuffer::searchEol &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="310ad8ee3a92137748601c4bd89b524da978c5cd" translate="yes" xml:space="preserve">
          <source>EventBuffer::substr</source>
          <target state="translated">EventBuffer::substr</target>
        </trans-unit>
        <trans-unit id="e0d817b32d5adc0d271877f3aa741712cbbb043f" translate="yes" xml:space="preserve">
          <source>EventBuffer::substr &amp;mdash; Substracts a portion of the buffer data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b245a8623d39508f02b8547df53b7bd9e590b4a5" translate="yes" xml:space="preserve">
          <source>EventBuffer::substr &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e52c920d2dc2892c7eab8dba5d37881f869230" translate="yes" xml:space="preserve">
          <source>EventBuffer::unfreeze</source>
          <target state="translated">EventBuffer::unfreeze</target>
        </trans-unit>
        <trans-unit id="0f022d8538aa069b95e1cb026c192752110c853d" translate="yes" xml:space="preserve">
          <source>EventBuffer::unfreeze &amp;mdash; Re-enable calls that modify an event buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa837337dd8be88ee3b132ec781abc33b4aed15" translate="yes" xml:space="preserve">
          <source>EventBuffer::unfreeze &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c161e74a8585de1ac266fa0328d14bc4dbbb1c70" translate="yes" xml:space="preserve">
          <source>EventBuffer::unlock</source>
          <target state="translated">EventBuffer::unlock</target>
        </trans-unit>
        <trans-unit id="49a9ed7d2be83d8e0060cae77a7374d35f9197c2" translate="yes" xml:space="preserve">
          <source>EventBuffer::unlock &amp;mdash; Releases lock acquired by EventBuffer::lock</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bb40778552b9a7f229ec6e06c87ec5d883b251" translate="yes" xml:space="preserve">
          <source>EventBuffer::unlock &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8733aecbd2243ee778fb75653ec81247dbe5af" translate="yes" xml:space="preserve">
          <source>EventBuffer::write</source>
          <target state="translated">EventBuffer::write</target>
        </trans-unit>
        <trans-unit id="425e08b4e067111de9cb194a6b5168c07cd22596" translate="yes" xml:space="preserve">
          <source>EventBuffer::write &amp;mdash; Write contents of the buffer to a file or socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193b800a36b69d39bfd77ae5e6bf5998b3393206" translate="yes" xml:space="preserve">
          <source>EventBuffer::write &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8119064572e2a379e9461cd597b393a818b5bc2" translate="yes" xml:space="preserve">
          <source>EventBufferEvent &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2569e63c0a3ad78dbe0baf8b367db7b814df2ae" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::__construct</source>
          <target state="translated">EventBufferEvent::__construct</target>
        </trans-unit>
        <trans-unit id="f065380d28c8018175182d1ec981463dbf078292" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::__construct &amp;mdash; Constructs EventBufferEvent object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569cdeb387bd20cb69046901559610fccb615be8" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b89e780adbb9deb7fcf2e3db082b7862fad055" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::close</source>
          <target state="translated">EventBufferEvent::close</target>
        </trans-unit>
        <trans-unit id="6b7bf3d81bf76d0b8247e428d5e1500cf6689886" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::close &amp;mdash; Closes file descriptor associated with the current buffer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada9b2ec8a5d8a76d1f6dcb238a3db24e11a6b0e" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::close &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e4e4df9a46db7fa8895c5bc99e0d13924a1bc3" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::connect</source>
          <target state="translated">EventBufferEvent::connect</target>
        </trans-unit>
        <trans-unit id="c816917d9560b4201c9663cd3923a7cc36e78b07" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::connect &amp;mdash; Connect buffer event's file descriptor to given address or UNIX socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf17a24d9a211e3eb1e426ad65f0734b5f54c91" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::connect &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba7c16469b7c63d7585694fd07f8a3941c62db0" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::connectHost</source>
          <target state="translated">EventBufferEvent::connectHost</target>
        </trans-unit>
        <trans-unit id="a5169497a54f6a0005a17be5e5875d2089009fb7" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::connectHost &amp;mdash; Connects to a hostname with optionally asyncronous DNS resolving</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c581996c89aed9a8baa999498731171b493ea36" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::connectHost &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb10b257e1acc3f37ae9772ce6cd9646ef495c7f" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::createPair</source>
          <target state="translated">EventBufferEvent::createPair</target>
        </trans-unit>
        <trans-unit id="3e71917f55025865bb643b7e4680e0dbfbc9c5e1" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::createPair &amp;mdash; Creates two buffer events connected to each other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31601171c7cef65e7b0737f247b29ffba9c288e" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::createPair &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e630d0bac74195f6d8d98d2c8964a47e714bd6ad" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::disable</source>
          <target state="translated">EventBufferEvent::disable</target>
        </trans-unit>
        <trans-unit id="fd6a6dcf084e9d11249eb50b724c671e3192e83a" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::disable &amp;mdash; Disable events read, write, or both on a buffer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff3d246c217e207f03a567d184da1e0597dd664" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::disable &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a3a7db51c506a19f3bdb3ef40dba8034d24917e" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::enable</source>
          <target state="translated">EventBufferEvent::enable</target>
        </trans-unit>
        <trans-unit id="df090d59c4d94e6b931b3e4a68211b5e794f5941" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::enable &amp;mdash; Enable events read, write, or both on a buffer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169cfefcb7e4c7d8c30549ab995f16aefc825abc" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::enable &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47ada797578c475b95fe6218a729160341e4e34" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::free</source>
          <target state="translated">EventBufferEvent::free</target>
        </trans-unit>
        <trans-unit id="ecfbe769dab54564a326cc5a39d68092aee77aac" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::free &amp;mdash; Free a buffer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f17ec86f979dcc03249f7e373e78fc57287db4" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::free &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce63ddd046317095c10e90ae4b0112ce911f1da5" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getDnsErrorString</source>
          <target state="translated">EventBufferEvent::getDnsErrorString</target>
        </trans-unit>
        <trans-unit id="cbc730822cf1be399ede33fbb3aac042efbce247" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getDnsErrorString &amp;mdash; Returns string describing the last failed DNS lookup attempt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355c27fd5ab99870c6653902f8a0fbbadb8d2244" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getDnsErrorString &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fc46e043e8f1dd273e94860fcdb9749218fb19" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getEnabled</source>
          <target state="translated">EventBufferEvent::getEnabled</target>
        </trans-unit>
        <trans-unit id="9a2abb61da306e09c2e290d1bde79463c7d9af93" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getEnabled &amp;mdash; Returns bitmask of events currently enabled on the buffer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fa1a36b9628770cfd6df3317ca31c3ab622085" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getEnabled &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c09258bf28bd3ae31523494975c3203bcfa6f39" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getInput</source>
          <target state="translated">EventBufferEvent::getInput</target>
        </trans-unit>
        <trans-unit id="cb82703dd7effb6c619d466915590b931e9f0517" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getInput &amp;mdash; Returns underlying input buffer associated with current buffer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd8d5cc1b04b5beab15c23cbb079170d9977c24" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getInput &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ed19e9ae16774cb562c8b557fc0caadfd10ad4" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getOutput</source>
          <target state="translated">EventBufferEvent::getOutput</target>
        </trans-unit>
        <trans-unit id="d7db3a3ea760d1cfb2910821a879b447a60c5a0d" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getOutput &amp;mdash; Returns underlying output buffer associated with current buffer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a419d609957ae8ee8a622c686738d744e7501a" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::getOutput &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df581567bf902c03f9207d666cffab12d2bd2cf" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::read</source>
          <target state="translated">EventBufferEvent::read</target>
        </trans-unit>
        <trans-unit id="d6c5c4ead6da3aceec5675576ba1f019fe108689" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::read &amp;mdash; Read buffer's data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a15d22f3546f28357b4ff6692ff16c3faf3890" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::read &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555af7bec8e92be1a70d728bf95eb4fbe5c9348d" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::readBuffer</source>
          <target state="translated">EventBufferEvent::readBuffer</target>
        </trans-unit>
        <trans-unit id="97183eccb00cff02739c4f4ad90206b908f7fda0" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::readBuffer &amp;mdash; Drains the entire contents of the input buffer and places them into buf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5234639324769a6630b77f2eac1cbbbd0d8d204" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::readBuffer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b1b2143236a5daeff4705faf2be25080362e33" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setCallbacks</source>
          <target state="translated">EventBufferEvent::setCallbacks</target>
        </trans-unit>
        <trans-unit id="cea86bdcfa36103dd13d2461666b88a1d97288e6" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setCallbacks &amp;mdash; Assigns read, write and event(status) callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5f68beb0fa0968636b586efd06e83f8e2d95d2" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setCallbacks &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae995f9b01bf186a8cdb9922dcc579595348bde" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setPriority</source>
          <target state="translated">EventBufferEvent::setPriority</target>
        </trans-unit>
        <trans-unit id="c76b202e3880c21a447609cfb724f460ca584e55" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setPriority &amp;mdash; Assign a priority to a bufferevent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9782ee0ef716b23f0bfe972e301dc956ff1ee88" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setPriority &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fe71754cff282f805efdd01a72a3d3ef6a87c4" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setTimeouts</source>
          <target state="translated">EventBufferEvent::setTimeouts</target>
        </trans-unit>
        <trans-unit id="7dd7f0deb779e731412e5ad1f0ad4b26097967f7" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setTimeouts &amp;mdash; Set the read and write timeout for a buffer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b956eb2fde699d9799cf10acc672a43dfbd611c" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setTimeouts &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28cd7d48801fe32087e48ea420c332b03519de1b" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setWatermark</source>
          <target state="translated">EventBufferEvent::setWatermark</target>
        </trans-unit>
        <trans-unit id="69975882936964a21a0e173a9c27c62745c04a30" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setWatermark &amp;mdash; Adjusts read and/or write watermarks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629fc04717dd6305cbdb2262d1485506c17ca8bf" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::setWatermark &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f293a00bc186e0ad15d84c92946b41b414f4c4f2" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslError</source>
          <target state="translated">EventBufferEvent::sslError</target>
        </trans-unit>
        <trans-unit id="51a93063d76f1680911243c84333cb1a9706847e" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslError &amp;mdash; Returns most recent OpenSSL error reported on the buffer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2abaa28e246a27f34d2e9b9c598213dcd7c478" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslError &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb5267b421d888c27f74dca6e1e15730061745f" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslFilter</source>
          <target state="translated">EventBufferEvent::sslFilter</target>
        </trans-unit>
        <trans-unit id="a4052098f450717c6ae6ac766426414364f161b6" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslFilter &amp;mdash; Create a new SSL buffer event to send its data over another buffer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21a3996cb0fb1f61289c96257bc2ef059c0c819" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslFilter &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc188d1d8075650c8afa3e32404d0ee4680e50fc" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetCipherInfo</source>
          <target state="translated">EventBufferEvent::sslGetCipherInfo</target>
        </trans-unit>
        <trans-unit id="7a86253255ff40a3eba2cf467b18e3c19e8ad0f3" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetCipherInfo &amp;mdash; Returns a textual description of the cipher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990d7e58adab9ff6ca4746b63e433487b18847f6" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetCipherInfo &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c58f9bf1c8c0aee0e93a4d3275924c2322aee7" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetCipherName</source>
          <target state="translated">EventBufferEvent::sslGetCipherName</target>
        </trans-unit>
        <trans-unit id="2d6bcc8dde10f71c4217711956e27f3512658138" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetCipherName &amp;mdash; Returns the current cipher name of the SSL connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375bcde982c89157e27faa90b382300dd576af7d" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetCipherName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467c955c9f92aac141a050e06a4c2df61e425c8b" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetCipherVersion</source>
          <target state="translated">EventBufferEvent::sslGetCipherVersion</target>
        </trans-unit>
        <trans-unit id="bfe9fcf4615cdcbb975b567c98d544cf464b3b2a" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetCipherVersion &amp;mdash; Returns version of cipher used by current SSL connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f417500597347174a1b8fe39131c08177498d5d" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetCipherVersion &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e86d6b9e3462387b0268e0f0947a2df45e5bc8" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetProtocol</source>
          <target state="translated">EventBufferEvent::sslGetProtocol</target>
        </trans-unit>
        <trans-unit id="4a580de740d5af72d90dce7a4d6b277300a7aaba" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetProtocol &amp;mdash; Returns the name of the protocol used for current SSL connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0d918d060506f4b9c51f95966137e0e1c59a21" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslGetProtocol &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552374ad9a88969b9eb2a47e09b6635892446171" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslRenegotiate</source>
          <target state="translated">EventBufferEvent::sslRenegotiate</target>
        </trans-unit>
        <trans-unit id="b582c437e60c9d3f978766bd3aa9e12d388a8522" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslRenegotiate &amp;mdash; Tells a bufferevent to begin SSL renegotiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8223e3de188fd5db6e13096d3a506d01bb449b30" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslRenegotiate &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c79f221766834998ebc49a3427f2f64c0bdc99b" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslSocket</source>
          <target state="translated">EventBufferEvent::sslSocket</target>
        </trans-unit>
        <trans-unit id="28057e9fa560f3c4e7df95e5a9b4779a989590f1" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslSocket &amp;mdash; Creates a new SSL buffer event to send its data over an SSL on a socket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f775ceee8979861ac636954715476ecfd63f73dd" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::sslSocket &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754b04933df2a89b81a98fbf781cc234ec0dc570" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::write</source>
          <target state="translated">EventBufferEvent::write</target>
        </trans-unit>
        <trans-unit id="15828a8ec60762d1ffb09f6885648cf1f75af8b7" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::write &amp;mdash; Adds data to a buffer event's output buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e8dc5674ef1869565374530167743f41807a813" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::write &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e0b7106403f8a3fa7120d1469b423861abac5b" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::writeBuffer</source>
          <target state="translated">EventBufferEvent::writeBuffer</target>
        </trans-unit>
        <trans-unit id="c8c46a2b54a8856d3c22bcbd3b47a5057f442042" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::writeBuffer &amp;mdash; Adds contents of the entire buffer to a buffer event's output buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0ad44485fe7e7ce5fb28f713c594ceb16fb22b" translate="yes" xml:space="preserve">
          <source>EventBufferEvent::writeBuffer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4501d293754923e0e265db91f665835afe689df4" translate="yes" xml:space="preserve">
          <source>EventConfig</source>
          <target state="translated">EventConfig</target>
        </trans-unit>
        <trans-unit id="360787b4e11f76613f66e718ccbc2ebe4e5246d0" translate="yes" xml:space="preserve">
          <source>EventConfig::__construct</source>
          <target state="translated">EventConfig::__construct</target>
        </trans-unit>
        <trans-unit id="c82a8a1d2d5288a5f2084ef0b968a928c3dd86ba" translate="yes" xml:space="preserve">
          <source>EventConfig::__construct &amp;mdash; Constructs EventConfig object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0b4bf451d8507e780338796276ad9d8e310839" translate="yes" xml:space="preserve">
          <source>EventConfig::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241112541e96ef02ffae45a01ae82c19a5d9b6ef" translate="yes" xml:space="preserve">
          <source>EventConfig::avoidMethod</source>
          <target state="translated">EventConfig::avoidMethod</target>
        </trans-unit>
        <trans-unit id="f0ed55941a3a3927ba649a473bacd1819c71b540" translate="yes" xml:space="preserve">
          <source>EventConfig::avoidMethod &amp;mdash; Tells libevent to avoid specific event method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc97aafca6a5ae23816d1cdd8e2adabce6d7bcf" translate="yes" xml:space="preserve">
          <source>EventConfig::avoidMethod &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed4591c2bdc0b0c2563d4d6e1a689de161fb51f" translate="yes" xml:space="preserve">
          <source>EventConfig::requireFeatures</source>
          <target state="translated">EventConfig::requireFeatures</target>
        </trans-unit>
        <trans-unit id="557ff2adf0ff4e28a3f4051cd0f1e631e1418cd6" translate="yes" xml:space="preserve">
          <source>EventConfig::requireFeatures &amp;mdash; Enters a required event method feature that the application demands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a4932c36205319e7f24af0242f75a493822abde" translate="yes" xml:space="preserve">
          <source>EventConfig::requireFeatures &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc003f9656b7ea1dfef46b6bf48cb2ac497f6a8" translate="yes" xml:space="preserve">
          <source>EventConfig::setMaxDispatchInterval</source>
          <target state="translated">EventConfig::setMaxDispatchInterval</target>
        </trans-unit>
        <trans-unit id="6a1f29f19545e430dcea04faef5ae654b95b200a" translate="yes" xml:space="preserve">
          <source>EventConfig::setMaxDispatchInterval &amp;mdash; Prevents priority inversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db006e21fa2186d56d386635d7debeb1c02b8c3a" translate="yes" xml:space="preserve">
          <source>EventConfig::setMaxDispatchInterval &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b658650f42f4f65030b7ece400f508a5dc06ee6" translate="yes" xml:space="preserve">
          <source>EventDnsBase &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1738c41d06028b094e8b8d88558c2803e58aa73" translate="yes" xml:space="preserve">
          <source>EventDnsBase::__construct</source>
          <target state="translated">EventDnsBase::__construct</target>
        </trans-unit>
        <trans-unit id="1f8e930a55cc9a9b3de93cfb87350a9eaa6003bc" translate="yes" xml:space="preserve">
          <source>EventDnsBase::__construct &amp;mdash; Constructs EventDnsBase object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90caed257ee27d40e182f25d2ce8ea8e6851958c" translate="yes" xml:space="preserve">
          <source>EventDnsBase::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e614ed6bb2961f6d420a43bf95b4343cd6c49aa2" translate="yes" xml:space="preserve">
          <source>EventDnsBase::addNameserverIp</source>
          <target state="translated">EventDnsBase::addNameserverIp</target>
        </trans-unit>
        <trans-unit id="198a8f587f93f6dbbadd942e40ec1cd98ded0067" translate="yes" xml:space="preserve">
          <source>EventDnsBase::addNameserverIp &amp;mdash; Adds a nameserver to the DNS base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df385a29d162fd9ff518d990311604945a9da2f3" translate="yes" xml:space="preserve">
          <source>EventDnsBase::addNameserverIp &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0859248a2da2dea8789422410b2b83a9cca38a66" translate="yes" xml:space="preserve">
          <source>EventDnsBase::addSearch</source>
          <target state="translated">EventDnsBase::addSearch</target>
        </trans-unit>
        <trans-unit id="1de9ad540b710c7f4924f6fb2479c8d89a0c5650" translate="yes" xml:space="preserve">
          <source>EventDnsBase::addSearch &amp;mdash; Adds a domain to the list of search domains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bdbcdc7b40bacbaf06f369141cc621fb70111f" translate="yes" xml:space="preserve">
          <source>EventDnsBase::addSearch &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6b72387a6339bf90f821b24f8dd49095930732" translate="yes" xml:space="preserve">
          <source>EventDnsBase::clearSearch</source>
          <target state="translated">EventDnsBase::clearSearch</target>
        </trans-unit>
        <trans-unit id="3463f4befb2e200de97b848efeee19906ae2ca09" translate="yes" xml:space="preserve">
          <source>EventDnsBase::clearSearch &amp;mdash; Removes all current search suffixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c8554bd163eff9ab3bd8fcc9aef4a13ace8f4a" translate="yes" xml:space="preserve">
          <source>EventDnsBase::clearSearch &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a78cf4b8e91a7d78b818f3bac853de9afe1c8c" translate="yes" xml:space="preserve">
          <source>EventDnsBase::countNameservers</source>
          <target state="translated">EventDnsBase::countNameservers</target>
        </trans-unit>
        <trans-unit id="6c3aaa9e8f932f43ae52cd0b5052cc38cdfa64d2" translate="yes" xml:space="preserve">
          <source>EventDnsBase::countNameservers &amp;mdash; Gets the number of configured nameservers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b484527af202403223486d4a73fa4e035ae7ae8" translate="yes" xml:space="preserve">
          <source>EventDnsBase::countNameservers &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfd58c51595dc2a35f5769df188138fe6b1e18c" translate="yes" xml:space="preserve">
          <source>EventDnsBase::loadHosts</source>
          <target state="translated">EventDnsBase::loadHosts</target>
        </trans-unit>
        <trans-unit id="5a4e33e19e595b29e5f5a14b4dcc15462ee9fa06" translate="yes" xml:space="preserve">
          <source>EventDnsBase::loadHosts &amp;mdash; Loads a hosts file (in the same format as /etc/hosts) from hosts file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5e96c3a701598c7ca2583df954ee8241fb87c8" translate="yes" xml:space="preserve">
          <source>EventDnsBase::loadHosts &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6a7e0f44f52403c7c57fd36e0f4d7e46a91d83" translate="yes" xml:space="preserve">
          <source>EventDnsBase::parseResolvConf</source>
          <target state="translated">EventDnsBase::parseResolvConf</target>
        </trans-unit>
        <trans-unit id="1efe92be721fef6802f3f8e9778995abaa19e2d9" translate="yes" xml:space="preserve">
          <source>EventDnsBase::parseResolvConf &amp;mdash; Scans the resolv.conf-formatted file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882afa0da854c48c347ef43c9e6741ca6603ad5d" translate="yes" xml:space="preserve">
          <source>EventDnsBase::parseResolvConf &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1e7a82b7e4714118f7415d741d029bbfeea84e" translate="yes" xml:space="preserve">
          <source>EventDnsBase::setOption</source>
          <target state="translated">EventDnsBase::setOption</target>
        </trans-unit>
        <trans-unit id="89607c3dc3533bd63121331be7cff3eec65ea7e0" translate="yes" xml:space="preserve">
          <source>EventDnsBase::setOption &amp;mdash; Set the value of a configuration option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce878317d88567dec7735d1211a57cb4f19c46a" translate="yes" xml:space="preserve">
          <source>EventDnsBase::setOption &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1219e73110f417f0180cae7e51f8edcf79f67f" translate="yes" xml:space="preserve">
          <source>EventDnsBase::setSearchNdots</source>
          <target state="translated">EventDnsBase::setSearchNdots</target>
        </trans-unit>
        <trans-unit id="626bf197088e29596f8826c233a9791f033cb913" translate="yes" xml:space="preserve">
          <source>EventDnsBase::setSearchNdots &amp;mdash; Set the 'ndots' parameter for searches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a2f11440adec41e5850c82ac9f1896bfd656d6" translate="yes" xml:space="preserve">
          <source>EventDnsBase::setSearchNdots &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdaf1085c9fff91594213c743e1ad10d44f360a0" translate="yes" xml:space="preserve">
          <source>EventHttp &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7529a5d2b8f86ab731cabe135aa9932e72254966" translate="yes" xml:space="preserve">
          <source>EventHttp::__construct</source>
          <target state="translated">EventHttp::__construct</target>
        </trans-unit>
        <trans-unit id="2931b8bfc2387551e95a477e1cae9ceb10462e44" translate="yes" xml:space="preserve">
          <source>EventHttp::__construct &amp;mdash; Constructs EventHttp object(the HTTP server)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8529f1729ee2d2aca706b243caf9c325a8fd65f3" translate="yes" xml:space="preserve">
          <source>EventHttp::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97228bca71f19d855f9ba54a089721a28da0efb" translate="yes" xml:space="preserve">
          <source>EventHttp::accept</source>
          <target state="translated">EventHttp::accept</target>
        </trans-unit>
        <trans-unit id="dfa1f9b458cb4c519826245ab535b14bbf925a95" translate="yes" xml:space="preserve">
          <source>EventHttp::accept &amp;mdash; Makes an HTTP server accept connections on the specified socket stream or resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6178c3a8d81b4744986586f6d5c15e2565d6d3d1" translate="yes" xml:space="preserve">
          <source>EventHttp::accept &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dfdbeebbb1d756fdfbef45ed355d218226336e" translate="yes" xml:space="preserve">
          <source>EventHttp::addServerAlias</source>
          <target state="translated">EventHttp::addServerAlias</target>
        </trans-unit>
        <trans-unit id="a146c65d85699aedf2a30637ed2a6791d2ba2c89" translate="yes" xml:space="preserve">
          <source>EventHttp::addServerAlias &amp;mdash; Adds a server alias to the HTTP server object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e16de021912c7b63f2e602a5a7a4cffb701ffe" translate="yes" xml:space="preserve">
          <source>EventHttp::addServerAlias &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326f657766442a9991d3115ac63b9924952c71d8" translate="yes" xml:space="preserve">
          <source>EventHttp::bind</source>
          <target state="translated">EventHttp::bind</target>
        </trans-unit>
        <trans-unit id="dec94d865c5ff435d2362fcc8bf74e8a75bc2eef" translate="yes" xml:space="preserve">
          <source>EventHttp::bind &amp;mdash; Binds an HTTP server on the specified address and port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c2afc23dd3df6ef909076f19cf16f50da7cd07" translate="yes" xml:space="preserve">
          <source>EventHttp::bind &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1cb79d5f9408cec94ce421ccd9af025c32f0134" translate="yes" xml:space="preserve">
          <source>EventHttp::removeServerAlias</source>
          <target state="translated">EventHttp::removeServerAlias</target>
        </trans-unit>
        <trans-unit id="3d74758202f82a6eee50cee8fd134c816b64a50f" translate="yes" xml:space="preserve">
          <source>EventHttp::removeServerAlias &amp;mdash; Removes server alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb84d3c03904d381895d1c638a1e3e52e8e66cb3" translate="yes" xml:space="preserve">
          <source>EventHttp::removeServerAlias &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981e6b4b73cdcae21f4b016a7e55d6939c1e9f0c" translate="yes" xml:space="preserve">
          <source>EventHttp::setAllowedMethods</source>
          <target state="translated">EventHttp::setAllowedMethods</target>
        </trans-unit>
        <trans-unit id="a3c7f9c9a0988fabb079053126e6eba7bb237d3d" translate="yes" xml:space="preserve">
          <source>EventHttp::setAllowedMethods &amp;mdash; Sets the what HTTP methods are supported in requests accepted by this server, and passed to user callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1375ef0e24e6d2470fe84f636da079556cad78" translate="yes" xml:space="preserve">
          <source>EventHttp::setAllowedMethods &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410ba91fc54c6b2cd8e6c0e48eedf6917b4dd469" translate="yes" xml:space="preserve">
          <source>EventHttp::setCallback</source>
          <target state="translated">EventHttp::setCallback</target>
        </trans-unit>
        <trans-unit id="d179127078b2e16dba6375374a410859630f5e46" translate="yes" xml:space="preserve">
          <source>EventHttp::setCallback &amp;mdash; Sets a callback for specified URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bcca12d55672b9c007232a944a7ab5b5e23f4fd" translate="yes" xml:space="preserve">
          <source>EventHttp::setCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f107f0afd07f1b35c050ab197dcd5ff0d837ab" translate="yes" xml:space="preserve">
          <source>EventHttp::setDefaultCallback</source>
          <target state="translated">EventHttp::setDefaultCallback</target>
        </trans-unit>
        <trans-unit id="1cc22ee790701fbbf38bf3d24728da2f565092eb" translate="yes" xml:space="preserve">
          <source>EventHttp::setDefaultCallback &amp;mdash; Sets default callback to handle requests that are not caught by specific callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585fb6989827e2614d0ab356bd66f4866437cdbd" translate="yes" xml:space="preserve">
          <source>EventHttp::setDefaultCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f04461fb5c0a219168a5f3bb5d50c0807b3561" translate="yes" xml:space="preserve">
          <source>EventHttp::setMaxBodySize</source>
          <target state="translated">EventHttp::setMaxBodySize</target>
        </trans-unit>
        <trans-unit id="088176ce430fe728d6fc2bb40576253e0322b6b6" translate="yes" xml:space="preserve">
          <source>EventHttp::setMaxBodySize &amp;mdash; Sets maximum request body size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237afa11eec89ad6db97b97dd2b415673cd74420" translate="yes" xml:space="preserve">
          <source>EventHttp::setMaxBodySize &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0f775ab9b821765362d165f60526bca158a2d4" translate="yes" xml:space="preserve">
          <source>EventHttp::setMaxHeadersSize</source>
          <target state="translated">EventHttp::setMaxHeadersSize</target>
        </trans-unit>
        <trans-unit id="f6b6af5de8d36a7910926237cc6edea8eb2b9a57" translate="yes" xml:space="preserve">
          <source>EventHttp::setMaxHeadersSize &amp;mdash; Sets maximum HTTP header size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e651d41aa6d18420d0c20411dc1e6bc04a24310e" translate="yes" xml:space="preserve">
          <source>EventHttp::setMaxHeadersSize &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e69e1d2c06de5e4e3c167e1bd13b53a94d903fe" translate="yes" xml:space="preserve">
          <source>EventHttp::setTimeout</source>
          <target state="translated">EventHttp::setTimeout</target>
        </trans-unit>
        <trans-unit id="5942f41ba9d7f430d2cadea9690b9d46f6c0fb3d" translate="yes" xml:space="preserve">
          <source>EventHttp::setTimeout &amp;mdash; Sets the timeout for an HTTP request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdef687f0075a46c16414edbadcdf2930537974" translate="yes" xml:space="preserve">
          <source>EventHttp::setTimeout &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756e2add391a4d0787dc5517d540120398c213b5" translate="yes" xml:space="preserve">
          <source>EventHttpConnection &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58d3a3e367738e5908881574f32aead6a845647" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::__construct</source>
          <target state="translated">EventHttpConnection::__construct</target>
        </trans-unit>
        <trans-unit id="4e21381a9931295c4b08f89f26bf33e68806391d" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::__construct &amp;mdash; Constructs EventHttpConnection object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e1e2bc5c253cae717c692790e519df95fee7c7" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108ccbe67f25557625b49f81ef85468d8f2b628c" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::getBase</source>
          <target state="translated">EventHttpConnection::getBase</target>
        </trans-unit>
        <trans-unit id="8df44b3418e46f13a4419ede0f6b2938a6b994b3" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::getBase &amp;mdash; Returns event base associated with the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a518f4c481158ced137de0702571f35ab45c58e" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::getBase &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8aea8f19db1f0de20caf81de9d47234e52fc54" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::getPeer</source>
          <target state="translated">EventHttpConnection::getPeer</target>
        </trans-unit>
        <trans-unit id="a2dbc1294f0875ad51d2863a2911adaeaabda74f" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::getPeer &amp;mdash; Gets the remote address and port associated with the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fdc3ec314b2b0e9d4298516d78a36e04fcee5f" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::getPeer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34377a82292ceb5a339cf6adf1edca1f3f32a1fe" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::makeRequest</source>
          <target state="translated">EventHttpConnection::makeRequest</target>
        </trans-unit>
        <trans-unit id="a68312b0b00d083db7d53137eee6c40ae4527313" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::makeRequest &amp;mdash; Makes an HTTP request over the specified connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec295ad603216d90c2919af691d0b6ed7bc8902" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::makeRequest &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d308d056ffbf62fcb42cc332a32105caed80c30f" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setCloseCallback</source>
          <target state="translated">EventHttpConnection::setCloseCallback</target>
        </trans-unit>
        <trans-unit id="b0c4f2f5918cb95d4be48a888f8479471bd100a1" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setCloseCallback &amp;mdash; Set callback for connection close</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9b2663d8529beca6f76ff2f5c4c6f3db31f0b4" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setCloseCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b1e0693d39431c4dfca228124b68b13a01c69b" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setLocalAddress</source>
          <target state="translated">EventHttpConnection::setLocalAddress</target>
        </trans-unit>
        <trans-unit id="a3b2bff669ded3eb52cd50a7b1b86bfbaad8b65e" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setLocalAddress &amp;mdash; Sets the IP address from which HTTP connections are made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fbcb18274ebec7934661855b6a37311a6c65b4" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setLocalAddress &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccbae69c92d3887393bfb8f66277234e089c17f" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setLocalPort</source>
          <target state="translated">EventHttpConnection::setLocalPort</target>
        </trans-unit>
        <trans-unit id="41b66a43b7a9fe07ed43d76cd72bd06c74548a68" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setLocalPort &amp;mdash; Sets the local port from which connections are made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c543e995ba88de3f42c8f324f833c060dbc999" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setLocalPort &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63527f7caf67864eeb84182ada2ac9613fe9c896" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setMaxBodySize</source>
          <target state="translated">EventHttpConnection::setMaxBodySize</target>
        </trans-unit>
        <trans-unit id="04653e90cbe8703cf77af24006ae289d0bea8571" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setMaxBodySize &amp;mdash; Sets maximum body size for the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be426ddcc1d6de9f9e875a998573bc7e863080f8" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setMaxBodySize &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6692cf0bdaca3859062f70f1a0c8da4c227219" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setMaxHeadersSize</source>
          <target state="translated">EventHttpConnection::setMaxHeadersSize</target>
        </trans-unit>
        <trans-unit id="682e6bb5d212567e1bef4ac4d975504d9c2c65fd" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setMaxHeadersSize &amp;mdash; Sets maximum header size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0df4e42e55424dd71371d476d45edc848c74e23" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setMaxHeadersSize &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e855057ef7d50ee1eba7050d2e770dd88f3325" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setRetries</source>
          <target state="translated">EventHttpConnection::setRetries</target>
        </trans-unit>
        <trans-unit id="8c15b41d23d74631501e5ca224b61d1738f52569" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setRetries &amp;mdash; Sets the retry limit for the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab75736b044c7b5476e8fea24c2910e49865ed07" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setRetries &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7479910c525d629d14c3b67de105b9f439486ee" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setTimeout</source>
          <target state="translated">EventHttpConnection::setTimeout</target>
        </trans-unit>
        <trans-unit id="017e6ed8b6b7275e46a4625706768202784a8cf8" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setTimeout &amp;mdash; Sets the timeout for the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787c1d2e457e0376b0d8177ce3d00f8e9326cdab" translate="yes" xml:space="preserve">
          <source>EventHttpConnection::setTimeout &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8118e4eeef969172edec7930453c65dc483c146c" translate="yes" xml:space="preserve">
          <source>EventHttpRequest &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48bba2ca545daa02f311647150637f08c64f29a" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::__construct</source>
          <target state="translated">EventHttpRequest::__construct</target>
        </trans-unit>
        <trans-unit id="bf490e0e709fb64ec49b333dae9ad22ed8de58f9" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::__construct &amp;mdash; Constructs EventHttpRequest object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e54e26639b73792e0483e93a3f18710bcbe26b" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037d92467d324b36e945eb28e914c52138c471bf" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::addHeader</source>
          <target state="translated">EventHttpRequest::addHeader</target>
        </trans-unit>
        <trans-unit id="b89e8658bd40910c65e4d554a836141af4298a6b" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::addHeader &amp;mdash; Adds an HTTP header to the headers of the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d71007d93b9c0bfd59a193af6b564ecf8c2d995" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::addHeader &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b31b900e450f8213e5ba8da469b77476e34f59" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::cancel</source>
          <target state="translated">EventHttpRequest::cancel</target>
        </trans-unit>
        <trans-unit id="333bb7b3d1ef66cbb4916480e76c2f939f0f11c8" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::cancel &amp;mdash; Cancels a pending HTTP request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609f928f9075c78f581b2923311a7c64ee1feb50" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::cancel &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a858b8714d5c743b9c811543f14b7332b2f77c1d" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::clearHeaders</source>
          <target state="translated">EventHttpRequest::clearHeaders</target>
        </trans-unit>
        <trans-unit id="44a275005f1622e6aef019f3f9c1601c150388cf" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::clearHeaders &amp;mdash; Removes all output headers from the header list of the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48379428ade4cc5e653b27f4aa14381205abc1c1" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::clearHeaders &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab799345b9ef2ed52ca97aa220cdbe0c5447125" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::closeConnection</source>
          <target state="translated">EventHttpRequest::closeConnection</target>
        </trans-unit>
        <trans-unit id="196884776560a7ab5779646f42664ca2978f1688" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::closeConnection &amp;mdash; Closes associated HTTP connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ec565ef62a211b0b62cedddaa5979017270fce" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::closeConnection &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab6ac4e3a350b770edf7d61972e7346cd88dc77" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::findHeader</source>
          <target state="translated">EventHttpRequest::findHeader</target>
        </trans-unit>
        <trans-unit id="41cd1a402b163e13825744fa3bf6f662825a2263" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::findHeader &amp;mdash; Finds the value belonging a header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eef8349e602adec11fefe96d63735c603c04683" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::findHeader &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf1aaa16dd875fa75835947eda5dd80656f93df" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::free</source>
          <target state="translated">EventHttpRequest::free</target>
        </trans-unit>
        <trans-unit id="86d89e86435a59b974f7ded50e1eb9239343cfcf" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::free &amp;mdash; Frees the object and removes associated events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1daff55654bfff4efe7a1c59dc7fac7c428f53ae" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::free &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644cdef2085489c2bd255515fc77b5824173d027" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getBufferEvent</source>
          <target state="translated">EventHttpRequest::getBufferEvent</target>
        </trans-unit>
        <trans-unit id="27d52cf3ac9b744d2b64face5aa0c9e9d94ab1d4" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getBufferEvent &amp;mdash; Returns EventBufferEvent object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5fce61a7be71eb6ad9c75720fdb76994b8bf5f" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getBufferEvent &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14a69eaa1ccdd69323d1f350ff79853fa0f2a6e" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getCommand</source>
          <target state="translated">EventHttpRequest::getCommand</target>
        </trans-unit>
        <trans-unit id="93eb91b6cb0cc8aea9901ae04faffdf82e677567" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getCommand &amp;mdash; Returns the request command(method)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8516acc03708fe2e3795af929a6272c60026843e" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getCommand &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72e3a201f76b9df99646666bc0618c23d592498" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getConnection</source>
          <target state="translated">EventHttpRequest::getConnection</target>
        </trans-unit>
        <trans-unit id="6013d5d9512c5552c983fa2de93f453bf2e0c625" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getConnection &amp;mdash; Returns EventHttpConnection object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400ca9a6d17560951fa2df5413ac89ff2e5f6b48" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getConnection &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76da9f8a4a4c57c3e0aaed5c7392d4169031b1f2" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getConnection()</source>
          <target state="translated">EventHttpRequest::getConnection()</target>
        </trans-unit>
        <trans-unit id="0b3b446b6a3d125c240e02f32b706c233764511c" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getHost</source>
          <target state="translated">EventHttpRequest::getHost</target>
        </trans-unit>
        <trans-unit id="6d50d3a9bd40b84115fb7f2d604885a2b938ac64" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getHost &amp;mdash; Returns the request host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717bab7971b2e1cee4ee3ba5388abceddc934f89" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getHost &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d798b90a840a61a7344308a624e2071edfc7cd9f" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getInputBuffer</source>
          <target state="translated">EventHttpRequest::getInputBuffer</target>
        </trans-unit>
        <trans-unit id="fd730f737f80653c0736f0d029777c52349f9b20" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getInputBuffer &amp;mdash; Returns the input buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50aa8138bf71ec2c0555724b63b41586d62440ec" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getInputBuffer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286e7e55e5ad5a6f872d20f630c8fefa247023f3" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getInputHeaders</source>
          <target state="translated">EventHttpRequest::getInputHeaders</target>
        </trans-unit>
        <trans-unit id="4aa14e5cdc9eb08af928079f3bb72abcf7f5d4f2" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getInputHeaders &amp;mdash; Returns associative array of the input headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44853d9f01017b75cb8ce2a36936a3d28ad6efff" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getInputHeaders &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad526c0d8e0cbaf61641e9b5ba05440083f014d" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getOutputBuffer</source>
          <target state="translated">EventHttpRequest::getOutputBuffer</target>
        </trans-unit>
        <trans-unit id="c2c1ef798b4536094f2dbd4993e03935a7786047" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getOutputBuffer &amp;mdash; Returns the output buffer of the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbe86c01554fd786922e1e6e9352649db2d9453" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getOutputBuffer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422d995e77a464b239ba40c959f199e9e3c2a0fb" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getOutputHeaders</source>
          <target state="translated">EventHttpRequest::getOutputHeaders</target>
        </trans-unit>
        <trans-unit id="32a7bae5cdafedffb9e11a54b4c986606f6ee1cf" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getOutputHeaders &amp;mdash; Returns associative array of the output headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12090025d90437801845af93ca2480a347f7113" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getOutputHeaders &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23eee0f30c3686d4af04fdaf7848a670267f0e4" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getResponseCode</source>
          <target state="translated">EventHttpRequest::getResponseCode</target>
        </trans-unit>
        <trans-unit id="e319b5446a16c57feec5736da5e6111604981161" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getResponseCode &amp;mdash; Returns the response code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e440005363ec2c49030c3c9e9e0780b4d518661" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getResponseCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80db478bc36ac49adcc235c13ea5ef37a130bdd" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getUri</source>
          <target state="translated">EventHttpRequest::getUri</target>
        </trans-unit>
        <trans-unit id="734b63d25d8e1d7f383a5aab9dc3e2967df36def" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getUri &amp;mdash; Returns the request URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fe218f4a7354d15097bc95a148bf63468bb2dc" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::getUri &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f434993f652f573f1b5c22b0cdcbceb1d0e27b7" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::removeHeader</source>
          <target state="translated">EventHttpRequest::removeHeader</target>
        </trans-unit>
        <trans-unit id="7d2ece149e8991be7d8671139fa6aa1d2641a61d" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::removeHeader &amp;mdash; Removes an HTTP header from the headers of the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdb5ebfe08e249516244dcfeea6de047c762bca" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::removeHeader &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04833cfd719ab6662778841a467541bc74de799a" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendError</source>
          <target state="translated">EventHttpRequest::sendError</target>
        </trans-unit>
        <trans-unit id="df6747645a66bb8daab7dc21e477eddcaf87c2e9" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendError &amp;mdash; Send an HTML error message to the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33936b6992e9be60e661f0d40439509764a8f49d" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendError &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c630b152aafa0a9ff139d1dc6892c80f2ea684" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReply</source>
          <target state="translated">EventHttpRequest::sendReply</target>
        </trans-unit>
        <trans-unit id="ad2d88abdda9039673fc43d5212cef08666f21af" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReply &amp;mdash; Send an HTML reply to the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1bf68fb7bbba0039b7af7ea92c1a91e016143e" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReply &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5787b50291feadf2c7579bbf46217e3e69205e79" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReplyChunk</source>
          <target state="translated">EventHttpRequest::sendReplyChunk</target>
        </trans-unit>
        <trans-unit id="95700a76eccc01cc417019ae98345f98c6d341a0" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReplyChunk &amp;mdash; Send another data chunk as part of an ongoing chunked reply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106f8cc23fbadc08fba5ee8bf6c5d26c7aba9bd9" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReplyChunk &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67287e9d8773ffb497a28b9972bc9809cf1da3fa" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReplyEnd</source>
          <target state="translated">EventHttpRequest::sendReplyEnd</target>
        </trans-unit>
        <trans-unit id="81093022756fc065705c5895e629ffce940c20e5" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReplyEnd &amp;mdash; Complete a chunked reply, freeing the request as appropriate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44ebba3b1e88eaae706e69c7a54e0d40cc4a741" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReplyEnd &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923850f558276354b209898753d7c88d6287a20a" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReplyStart</source>
          <target state="translated">EventHttpRequest::sendReplyStart</target>
        </trans-unit>
        <trans-unit id="7bd440e48e895bae6c0c44e2c8692d465ebb0ba0" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReplyStart &amp;mdash; Initiate a chunked reply</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdfb983dbdd12130cfcd8c607fe5e3988b2199d" translate="yes" xml:space="preserve">
          <source>EventHttpRequest::sendReplyStart &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7a75234911a1d0cb6dea935a3b74ffc28aacad" translate="yes" xml:space="preserve">
          <source>EventListener &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847c174c1aef057dd32316df58723ade8b961c1e" translate="yes" xml:space="preserve">
          <source>EventListener::__construct</source>
          <target state="translated">EventListener::__construct</target>
        </trans-unit>
        <trans-unit id="55b8dc9e07978ab0f940a605760cfcc3cb0b7273" translate="yes" xml:space="preserve">
          <source>EventListener::__construct &amp;mdash; Creates new connection listener associated with an event base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff4a220094aa6e21119429bd6cf4a8bce5dc915" translate="yes" xml:space="preserve">
          <source>EventListener::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42733e4b41d1b97e2cc1713aaa119e512e988d25" translate="yes" xml:space="preserve">
          <source>EventListener::disable</source>
          <target state="translated">EventListener::disable</target>
        </trans-unit>
        <trans-unit id="3d220338c75c8d2420f978ad52d2be7cf218f38b" translate="yes" xml:space="preserve">
          <source>EventListener::disable &amp;mdash; Disables an event connect listener object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad48a94341fad65d881470c371b9667c6378ad5b" translate="yes" xml:space="preserve">
          <source>EventListener::disable &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d99b2ff5c772928d9d5b5cb020335633507a681" translate="yes" xml:space="preserve">
          <source>EventListener::enable</source>
          <target state="translated">EventListener::enable</target>
        </trans-unit>
        <trans-unit id="3a3305bb4c92721644c9f9b66b992a9877282890" translate="yes" xml:space="preserve">
          <source>EventListener::enable &amp;mdash; Enables an event connect listener object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0f3d91187a799f7b815fd8bcee7647f84115eb" translate="yes" xml:space="preserve">
          <source>EventListener::enable &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5602698ffc0674f2ad3371d5b5fd8bee1cd5bd7b" translate="yes" xml:space="preserve">
          <source>EventListener::getBase</source>
          <target state="translated">EventListener::getBase</target>
        </trans-unit>
        <trans-unit id="3e3221b9213fd2d15352eae418ee28b7539b009d" translate="yes" xml:space="preserve">
          <source>EventListener::getBase &amp;mdash; Returns event base associated with the event listener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009463064b615d329213a2738607687ec311da3b" translate="yes" xml:space="preserve">
          <source>EventListener::getBase &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edabc4aae6fad91598ea16f79efd1decebe238bd" translate="yes" xml:space="preserve">
          <source>EventListener::getSocketName</source>
          <target state="translated">EventListener::getSocketName</target>
        </trans-unit>
        <trans-unit id="94aea0317ac76d620db8c8ce7c5490379cb378e1" translate="yes" xml:space="preserve">
          <source>EventListener::getSocketName &amp;mdash; Retreives the current address to which the listener's socket is bound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d403a11b8f3ae88062b686de2986b1f0d9403ee3" translate="yes" xml:space="preserve">
          <source>EventListener::getSocketName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ea7136daa2269daac8d96679dde68ba9159d0b" translate="yes" xml:space="preserve">
          <source>EventListener::setCallback</source>
          <target state="translated">EventListener::setCallback</target>
        </trans-unit>
        <trans-unit id="ec61444caa5e794f3eed940d0e0786b4c5675cf8" translate="yes" xml:space="preserve">
          <source>EventListener::setCallback &amp;mdash; The setCallback purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72727a04639dae98d8c9e79166c3535f0836c157" translate="yes" xml:space="preserve">
          <source>EventListener::setCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="617a288c1d70ac0b71a917e82dfc90372a7ec90c" translate="yes" xml:space="preserve">
          <source>EventListener::setErrorCallback</source>
          <target state="translated">EventListener::setErrorCallback</target>
        </trans-unit>
        <trans-unit id="4bb83ef8b7e35055cd228f1ef7ea66e78cbfdfe2" translate="yes" xml:space="preserve">
          <source>EventListener::setErrorCallback &amp;mdash; Set event listener's error callback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7867b340ef5d07cc32692a32012bc91b3b6a609" translate="yes" xml:space="preserve">
          <source>EventListener::setErrorCallback &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5c724aa5d8d11beffad36c6169bbcd0b4e6d77" translate="yes" xml:space="preserve">
          <source>EventSslContext &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a37988d4d6abcdff452dc19af73371eaa70fff" translate="yes" xml:space="preserve">
          <source>EventSslContext::__construct</source>
          <target state="translated">EventSslContext::__construct</target>
        </trans-unit>
        <trans-unit id="55cc9abb2b595865065e694efa1485559c35f39e" translate="yes" xml:space="preserve">
          <source>EventSslContext::__construct &amp;mdash; Constructs an OpenSSL context for use with Event classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0eeabe55d38d6de4bc4816ed28ac9d48073488" translate="yes" xml:space="preserve">
          <source>EventSslContext::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34df4e8462361123dd4f7267dfbdc00b218c470e" translate="yes" xml:space="preserve">
          <source>EventUtil &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76a5b4cebb9fcb20eadb8b6d8a1786513f4c8db" translate="yes" xml:space="preserve">
          <source>EventUtil::__construct</source>
          <target state="translated">EventUtil::__construct</target>
        </trans-unit>
        <trans-unit id="7da174ad7a4fb08541450425dd01d6d43da4c7b7" translate="yes" xml:space="preserve">
          <source>EventUtil::__construct &amp;mdash; The abstract constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ba59632d4c0a799f387872adaaa40d2806ee3c" translate="yes" xml:space="preserve">
          <source>EventUtil::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8552dcbe1e6ce4dddfce4db075a3d09bb91f3882" translate="yes" xml:space="preserve">
          <source>EventUtil::getLastSocketErrno</source>
          <target state="translated">EventUtil::getLastSocketErrno</target>
        </trans-unit>
        <trans-unit id="fa2eda25f1e8c7f779be50d24cf01266853ca03c" translate="yes" xml:space="preserve">
          <source>EventUtil::getLastSocketErrno &amp;mdash; Returns the most recent socket error number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ee3a7a7710a61af5b2442d1ba2521ecaaaf4ef" translate="yes" xml:space="preserve">
          <source>EventUtil::getLastSocketErrno &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328d8060c3860e2a9d7ae0b12112ff130be66b79" translate="yes" xml:space="preserve">
          <source>EventUtil::getLastSocketError</source>
          <target state="translated">EventUtil::getLastSocketError</target>
        </trans-unit>
        <trans-unit id="c147e78c9c9749ef1da9c3e04703fd938978fbf7" translate="yes" xml:space="preserve">
          <source>EventUtil::getLastSocketError &amp;mdash; Returns the most recent socket error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20777c051009b1a11870896e05afc5c18a310fc3" translate="yes" xml:space="preserve">
          <source>EventUtil::getLastSocketError &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5653ccce9678dc8fb7da80aa0ff1d2a16aa293" translate="yes" xml:space="preserve">
          <source>EventUtil::getSocketFd</source>
          <target state="translated">EventUtil::getSocketFd</target>
        </trans-unit>
        <trans-unit id="713a1c82242916cce61e58720eef43a496dc18d9" translate="yes" xml:space="preserve">
          <source>EventUtil::getSocketFd &amp;mdash; Returns numeric file descriptor of a socket, or stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22993274ae03284d4036f8e02e5f198cff2da243" translate="yes" xml:space="preserve">
          <source>EventUtil::getSocketFd &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77c6c446b2a8f847b3f2caead643c3bd43c064f" translate="yes" xml:space="preserve">
          <source>EventUtil::getSocketName</source>
          <target state="translated">EventUtil::getSocketName</target>
        </trans-unit>
        <trans-unit id="35f1d11e97930e7d3a9722ed9bd4e77de68b78d5" translate="yes" xml:space="preserve">
          <source>EventUtil::getSocketName &amp;mdash; Retreives the current address to which the socket is bound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4089efb6545b47a3facf35ee72d4d1b482a937ca" translate="yes" xml:space="preserve">
          <source>EventUtil::getSocketName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988035ec7c5ff751551cb43a8302bec0730d92b2" translate="yes" xml:space="preserve">
          <source>EventUtil::setSocketOption</source>
          <target state="translated">EventUtil::setSocketOption</target>
        </trans-unit>
        <trans-unit id="8580df59bb85e1a09ba8bdec543258fe44a00789" translate="yes" xml:space="preserve">
          <source>EventUtil::setSocketOption &amp;mdash; Sets socket options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448299126e3c507a8003ada023c4161c3aad32f8" translate="yes" xml:space="preserve">
          <source>EventUtil::setSocketOption &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb7f38e43017b93c00fbd9032098f0e957e8d08" translate="yes" xml:space="preserve">
          <source>EventUtil::sslRandPoll</source>
          <target state="translated">EventUtil::sslRandPoll</target>
        </trans-unit>
        <trans-unit id="b650cd348c10b6c0c9fa2dc0379411f0269c59f1" translate="yes" xml:space="preserve">
          <source>EventUtil::sslRandPoll &amp;mdash; Generates entropy by means of OpenSSL's RAND_poll()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a6c89cbd716a58bdb4083b1155e6fe16ac1cb0" translate="yes" xml:space="preserve">
          <source>EventUtil::sslRandPoll &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333b28f11848fa5077a1840b37831f045e8f4ba2" translate="yes" xml:space="preserve">
          <source>Events to watch for. See &lt;a href=&quot;https://secure.php.net/manual/en/inotify.constants.php&quot;&gt;Predefined Constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140812a4d9cdcd5e4eb8d295c8f83fb469cca16b" translate="yes" xml:space="preserve">
          <source>Every array has an internal pointer to its &quot;current&quot; element, which is initialized to the first element inserted into the array.</source>
          <target state="translated">Cada matriz tiene un puntero interno a su elemento &quot;actual&quot;,que se inicializa con el primer elemento insertado en la matriz.</target>
        </trans-unit>
        <trans-unit id="0bf1e0beb8478907ac0b06053c669439c858d6d0" translate="yes" xml:space="preserve">
          <source>Every call to a date/time function will generate a &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; if the time zone is not valid, and/or a &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; message if using the system settings or the &lt;var&gt;&lt;var&gt;TZ&lt;/var&gt;&lt;/var&gt; environment variable. See also &lt;a href=&quot;function.date-default-timezone-set&quot;&gt;date_default_timezone_set()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2cd175f7b35d90fb57f53eeb258f02aea599cd" translate="yes" xml:space="preserve">
          <source>Every custom controller shall inherit &lt;strong&gt;Yaf_Controller_Abstract&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06f40833a8f97133ea74f7a02560a410c7a904a" translate="yes" xml:space="preserve">
          <source>Every error that PHP generates includes a type. A &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.constants.php&quot;&gt;list of these types&lt;/a&gt; is available, along with a short description of their behaviour and how they can be caused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cef4020eefe2d6fbb51e14b997cc4d4f33c5476" translate="yes" xml:space="preserve">
          <source>Every event is associated with &lt;a href=&quot;class.eventbase&quot;&gt;EventBase&lt;/a&gt; . However, event will never fire until it is &lt;em&gt;added&lt;/em&gt; (via &lt;a href=&quot;event.add&quot;&gt;Event::add()&lt;/a&gt; ). An added event remains in &lt;em&gt;pending&lt;/em&gt; state until the registered event occurs, thus turning it to &lt;em&gt;active&lt;/em&gt; state. To handle events user may register a callback which is called when event becomes active. If event is configured &lt;em&gt;persistent&lt;/em&gt; , it remains pending. If it is not persistent, it stops being pending when it's callback runs. &lt;a href=&quot;event.del&quot;&gt;Event::del()&lt;/a&gt; method &lt;em&gt;deletes&lt;/em&gt; event, thus making it non-pending. By means of &lt;a href=&quot;event.add&quot;&gt;Event::add()&lt;/a&gt; method it could be added again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197c46b5b3ed0c0f2b052f5ffbd09d86a344da76" translate="yes" xml:space="preserve">
          <source>Every message in the current mailbox will be represented by three entries in the resulting array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fec08a0f4364640265b2cac1f69159fb33ef068" translate="yes" xml:space="preserve">
          <source>Every other value is considered &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; (including any &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; and &lt;strong&gt;&lt;code&gt;NAN&lt;/code&gt;&lt;/strong&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fdac8a50f34c373c8d179a1f9c0d338d5be7a9" translate="yes" xml:space="preserve">
          <source>Everything outside of a pair of opening and closing tags is ignored by the PHP parser which allows PHP files to have mixed content. This allows PHP to be embedded in HTML documents, for example to create templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39b2f29c564ba6a511bc8d5fd61b22d212c5850" translate="yes" xml:space="preserve">
          <source>Examine the target and initialize and return a proxy of the appropriate sort. If the target is for a local PHP component the returned proxy will be an SCA_LocalProxy. If the target is for a WSDL file, the returned proxy will be a SCA_SoapProxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="223d8f27b6c0d7597dbba84170333f3f1f95208b" translate="yes" xml:space="preserve">
          <source>Example 2 in the &lt;a href=&quot;https://secure.php.net/manual/en/dba.examples.php&quot;&gt;DBA examples&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec872db3df4a34b30158d50e9ab3afee01186b13" translate="yes" xml:space="preserve">
          <source>Example class registered as stream wrapper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb91a4d85314d943d7ed8d0eb363de15a4cfd5d" translate="yes" xml:space="preserve">
          <source>Example data:</source>
          <target state="translated">Datos de ejemplo:</target>
        </trans-unit>
        <trans-unit id="f65abf775d0fc00db73442f2ce391b84ff6f789b" translate="yes" xml:space="preserve">
          <source>Example of using Imagick::chopImage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61de3f6700220a5a3ec7e4dac021e2694a3e84b" translate="yes" xml:space="preserve">
          <source>Example of using Imagick::setFont</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f62432eaf6a72b863aec3a33c50d2fa78fff398" translate="yes" xml:space="preserve">
          <source>Example of using Imagick::setPointSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8512a0550465419a171fbec6d15539c5b71592b" translate="yes" xml:space="preserve">
          <source>Example parsable values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abee3aa642422fbfc059b32cee405f09b0be7a70" translate="yes" xml:space="preserve">
          <source>Example result string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c5539c73e336d22e3d8eeb460fff2c5bdd5139" translate="yes" xml:space="preserve">
          <source>Example returned values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d740ba0d36c863c8e42f21816dc821bb56b4473f" translate="yes" xml:space="preserve">
          <source>Example values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="94def64aa956cd5bf4257a1ad669832fc7b7ea86" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;*&lt;/em&gt; in &lt;em&gt;Y-*-d&lt;/em&gt; with the string &lt;em&gt;2009-aWord-08&lt;/em&gt; will match &lt;em&gt;aWord&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4db48093a606a97637abef5703a1160aae81165" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;+0200&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0361a1247ba34b532a06847cc39717ec36297dce" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;+02:00&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af1d764b9026420fddc8fbf8ba6846172ee821e" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;-0500&lt;/em&gt; for US Eastern Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f97b24ce2d2c5b2d98fce9c8145727af438a61" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;-&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2d1511208ecaa5729bb31533a854754f05b298" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;/&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76b12f72c9da5f074b6b06f9eb1bba82bb4a696" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;00:35&lt;/em&gt; for 12:35 AM, &lt;em&gt;16:44&lt;/em&gt; for 4:44 PM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5782644a4a9aa9b73ecbba145eb0c391c3d62b" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;02/05/09&lt;/em&gt; for February 5, 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa02d7a9f8a4593d33f7f2b25bc7f999b115b2d" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;03:59:16&lt;/em&gt; or &lt;em&gt;15:59:16&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0079c7e86f25e6b350ed8d18e8f2b3bbfc8cf4d" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;09:34:17 PM&lt;/em&gt; for 21:34:17</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7cc5db3d76723d06259985ee0b62020b9032e56" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;09&lt;/em&gt; for 2009, &lt;em&gt;79&lt;/em&gt; for 1979</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb7e0c9e7c6d5d558a1c8d6c1c4fdf9ebb5dfbf" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;09&lt;/em&gt; for the week of January 6, 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04960c32ee85df285b30a1631399ef695c0170d6" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;1292177455&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d2f58d5cbb489ed5d6c2a9e4cac91522ed8092" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;2008&lt;/em&gt; for the week of January 3, 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0084330b10bb674e0f8e7adfe587c14e0c420fc5" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;2009-02-05&lt;/em&gt; for February 5, 2009</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a4038df4960bf0a7dc0f3e347e48115173e0df" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;2038&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b568cb54eefabd379bfcb20b36cf21636794b339" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;21:34:17&lt;/em&gt; for 09:34:17 PM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427d1ce057d0a5510c9d6172a7310f40e8926d1e" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;305815200&lt;/em&gt; for September 10, 1979 08:40:00 AM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239d25045bf7f5fc8911c053fd266e52a76ff7a3" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;42&lt;/em&gt; (the 42nd week in the year)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8536ab0b7d82e1e1da667f1b06a663a4956f455f" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;45&lt;/em&gt;, &lt;em&gt;654321&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddbea6c25a5f0f9bb0f99b28ce13376e7cae68f" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;654321&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e978d24b71bbdd59f604842b3aaf013f75769d8f" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;654&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf60ccf6f6f2c6e5ecc3e4482de522bc10497131" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;AM&lt;/em&gt; for 00:31, &lt;em&gt;PM&lt;/em&gt; for 22:23</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51f772bd00414a6e5509ff852105006e08b752f" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;EST&lt;/em&gt; for Eastern Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a5672c71bff9d02dd1b958374301f61c439514" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;Thu, 21 Dec 2000 16:01:07 +0200&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4e1e792debbdb69f876312cf59b8fff0498c5e" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;Tue Feb 5 00:45:10 2009&lt;/em&gt; for February 5, 2009 at 12:45:10 AM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c46e49555bfcefa34a39aa53b725a0007fd91e2" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;^&lt;/em&gt; (Be aware that for UTF-8 characters you might need more than one &lt;em&gt;?&lt;/em&gt;. In this case, using &lt;em&gt;*&lt;/em&gt; is probably what you want instead)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe228e901091dd70eb80d0afb9f61ed5ea69a6d" translate="yes" xml:space="preserve">
          <source>Example: &lt;em&gt;am&lt;/em&gt; for 00:31, &lt;em&gt;pm&lt;/em&gt; for 22:23</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="5a0eddb5baccd0cfb1d6f3366bed011901d8c52d" translate="yes" xml:space="preserve">
          <source>Examples &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e1992397311946099bec7ccbdd4da4732b00b4" translate="yes" xml:space="preserve">
          <source>Examples of identifiers include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5d1b113bf2e3b1c07f8f481f2d308dc4455052" translate="yes" xml:space="preserve">
          <source>Examples: &lt;em&gt;1999&lt;/em&gt; or &lt;em&gt;2003&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625363c22fba38c0616677b397911e388dbf6d3e" translate="yes" xml:space="preserve">
          <source>Examples: &lt;em&gt;99&lt;/em&gt; or &lt;em&gt;03&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ccda1b3611d87ab6c05cfaa0a742240932d6c7" translate="yes" xml:space="preserve">
          <source>Examples: &lt;em&gt;99&lt;/em&gt; or &lt;em&gt;03&lt;/em&gt; (which will be interpreted as &lt;em&gt;1999&lt;/em&gt; and &lt;em&gt;2003&lt;/em&gt;, respectively)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d06948ddcdc94381b89541bad6277648d4e8ed" translate="yes" xml:space="preserve">
          <source>Examples: &lt;em&gt;EST&lt;/em&gt;, &lt;em&gt;MDT&lt;/em&gt; ...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95913f986f8eae48038267611d36ad0357417b42" translate="yes" xml:space="preserve">
          <source>Examples: &lt;em&gt;UTC&lt;/em&gt;, &lt;em&gt;GMT&lt;/em&gt;, &lt;em&gt;Atlantic/Azores&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72909f9973fce49a0924f432a891ed6d9662b098" translate="yes" xml:space="preserve">
          <source>Examples: &lt;em&gt;UTC&lt;/em&gt;, &lt;em&gt;GMT&lt;/em&gt;, &lt;em&gt;Atlantic/Azores&lt;/em&gt; or &lt;em&gt;+0200&lt;/em&gt; or &lt;em&gt;+02:00&lt;/em&gt; or &lt;em&gt;EST&lt;/em&gt;, &lt;em&gt;MDT&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="d8e24c62be99a32a4999257012bbfb3419be145e" translate="yes" xml:space="preserve">
          <source>Exception (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad9018d59fd713370124edcef485724de4fbeb4" translate="yes" xml:space="preserve">
          <source>Exception class for intl errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd5439187e74e2d14296951c894d77d85c566de" translate="yes" xml:space="preserve">
          <source>Exception that represents error in the program logic. This kind of exception should lead directly to a fix in your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714471975444ad61dd15c497ede97e5d574a0fd6" translate="yes" xml:space="preserve">
          <source>Exception thrown if a callback refers to an undefined function or if some arguments are missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11127849fbbd208330d0f440c3a68bfdfcd1b42" translate="yes" xml:space="preserve">
          <source>Exception thrown if a callback refers to an undefined method or if some arguments are missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b85a33d132cfcdcaac5e592c7457d0ef6dc4fc" translate="yes" xml:space="preserve">
          <source>Exception thrown if a length is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffe4b16563e89fd5f48ee4273d8c21f3ba9a0fd" translate="yes" xml:space="preserve">
          <source>Exception thrown if a value does not adhere to a defined valid data domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e6efe88fe8dad3fb26cb51f9cfe28383bcde01" translate="yes" xml:space="preserve">
          <source>Exception thrown if a value does not match with a set of values. Typically this happens when a function calls another function and expects the return value to be of a certain type or value not including arithmetic or buffer related errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fcce56214224512e19c72a0155d3bb68c3722bc" translate="yes" xml:space="preserve">
          <source>Exception thrown if a value is not a valid key. This represents errors that cannot be detected at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f55245a8a5b17090f04eceb92c47d88a714940e" translate="yes" xml:space="preserve">
          <source>Exception thrown if an argument is not of the expected type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d62270d0f28c21f97c414a6115ac06507d2fec9" translate="yes" xml:space="preserve">
          <source>Exception thrown if an error which can only be found on runtime occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36174330845524e6776ac6b1199de4225a066bf" translate="yes" xml:space="preserve">
          <source>Exception thrown to indicate range errors during program execution. Normally this means there was an arithmetic error other than under/overflow. This is the runtime version of &lt;a href=&quot;class.domainexception&quot;&gt;DomainException&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d056d26061225e72eba2481d5831b27986aa98f" translate="yes" xml:space="preserve">
          <source>Exception thrown when adding an element to a full container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d33e141dfd6256aac02a401cbf25c21f638f65" translate="yes" xml:space="preserve">
          <source>Exception thrown when an illegal index was requested. This represents errors that should be detected at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc989d444606f8eb0da15a839d0648947af9682" translate="yes" xml:space="preserve">
          <source>Exception thrown when performing an invalid operation on an empty container, such as removing an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92c66a3259ad2237220ad26055b4974b841a0f7" translate="yes" xml:space="preserve">
          <source>Exception to throw into the generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab3f37b5dc8d1b3ab0ada5c912da3f53e8676f5" translate="yes" xml:space="preserve">
          <source>Exception::__clone</source>
          <target state="translated">Exception::__clone</target>
        </trans-unit>
        <trans-unit id="129c6dd3f7ae6c45b65836655f1e24170f3553f6" translate="yes" xml:space="preserve">
          <source>Exception::__clone &amp;mdash; Clone the exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b6a27c95a5bcb72847c91a6c53640f459612f9" translate="yes" xml:space="preserve">
          <source>Exception::__clone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6266bad33bf4d3791cbc10f446a465f0fd8b5295" translate="yes" xml:space="preserve">
          <source>Exception::__construct</source>
          <target state="translated">Exception::__construct</target>
        </trans-unit>
        <trans-unit id="34c4e185d4648ae6f98a3228cd6a1e2411f0eaf5" translate="yes" xml:space="preserve">
          <source>Exception::__construct &amp;mdash; Construct the exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3aa525483cdef283035f2ec27437900ef1ad4e5" translate="yes" xml:space="preserve">
          <source>Exception::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c1c25d099c01910f8e75c56c18f6bb971225e6" translate="yes" xml:space="preserve">
          <source>Exception::__toString</source>
          <target state="translated">Exception::__toString</target>
        </trans-unit>
        <trans-unit id="1d8bde30a473c26a3194bc9fb740565bcbab58f5" translate="yes" xml:space="preserve">
          <source>Exception::__toString &amp;mdash; String representation of the exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f03885fa819b0d1aca6c336cbebbef73f04718" translate="yes" xml:space="preserve">
          <source>Exception::__toString &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdce50bb5b58e0a9fa59024c2904e34e1e46188" translate="yes" xml:space="preserve">
          <source>Exception::getCode</source>
          <target state="translated">Exception::getCode</target>
        </trans-unit>
        <trans-unit id="18971c428d0be5173c4abeda202a4b3629c50e6a" translate="yes" xml:space="preserve">
          <source>Exception::getCode &amp;mdash; Gets the Exception code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e771b9efc4228d446b444b39ef7c8bd434db2df" translate="yes" xml:space="preserve">
          <source>Exception::getCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583cc58e0ee3b92ed34e20569c26b3f72c41707e" translate="yes" xml:space="preserve">
          <source>Exception::getFile</source>
          <target state="translated">Exception::getFile</target>
        </trans-unit>
        <trans-unit id="b89d8c7fe94d922ad50846424d27fb4c79b4380a" translate="yes" xml:space="preserve">
          <source>Exception::getFile &amp;mdash; Gets the file in which the exception was created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6fac80214a7ff150fe8061522c6ea8d1d6a391" translate="yes" xml:space="preserve">
          <source>Exception::getFile &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b721dd0b6bfd10642b13b888763a7db9d8d7e015" translate="yes" xml:space="preserve">
          <source>Exception::getInternalInfo</source>
          <target state="translated">Exception::getInternalInfo</target>
        </trans-unit>
        <trans-unit id="f6ba3b5caff4f2d9d4b05085ed9bd33d4e8b821a" translate="yes" xml:space="preserve">
          <source>Exception::getJsFileName</source>
          <target state="translated">Exception::getJsFileName</target>
        </trans-unit>
        <trans-unit id="747df201e2a13c3e7fb63e51f8e823c2c84568fd" translate="yes" xml:space="preserve">
          <source>Exception::getJsLineNumber</source>
          <target state="translated">Exception::getJsLineNumber</target>
        </trans-unit>
        <trans-unit id="4659abea8ee74332d0f64caa5d392dca5e29fe7f" translate="yes" xml:space="preserve">
          <source>Exception::getJsSourceLine</source>
          <target state="translated">Exception::getJsSourceLine</target>
        </trans-unit>
        <trans-unit id="97240f5a9d0d0056d60069c1d6fa8f16f13b55ee" translate="yes" xml:space="preserve">
          <source>Exception::getJsTrace</source>
          <target state="translated">Exception::getJsTrace</target>
        </trans-unit>
        <trans-unit id="63746a765f5bcebf18064c2b910d851827296222" translate="yes" xml:space="preserve">
          <source>Exception::getLine</source>
          <target state="translated">Exception::getLine</target>
        </trans-unit>
        <trans-unit id="0ab38b8a04490f228a37eb9c2f7ee417dd72cacf" translate="yes" xml:space="preserve">
          <source>Exception::getLine &amp;mdash; Gets the line in which the exception was created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dee1b7c3a3ac8ea2c1557b8674a48fa40328b85" translate="yes" xml:space="preserve">
          <source>Exception::getLine &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82401f6d4c05806846a206473583e7259a39b607" translate="yes" xml:space="preserve">
          <source>Exception::getMessage</source>
          <target state="translated">Exception::getMessage</target>
        </trans-unit>
        <trans-unit id="1210dca88d19d5c3febe14d9a578007c5e592ddc" translate="yes" xml:space="preserve">
          <source>Exception::getMessage &amp;mdash; Gets the Exception message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349d0b3a025784f8854642f8b3be3678c6d51c0d" translate="yes" xml:space="preserve">
          <source>Exception::getMessage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235d8441e032a076347509850f8360ff08d61fce" translate="yes" xml:space="preserve">
          <source>Exception::getPrevious</source>
          <target state="translated">Exception::getPrevious</target>
        </trans-unit>
        <trans-unit id="9d33aebe4186fb8c2a2964fc47a822698c259cb8" translate="yes" xml:space="preserve">
          <source>Exception::getPrevious &amp;mdash; Returns previous Exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189c1e834f7910600b0677131cbcbba53d2cc654" translate="yes" xml:space="preserve">
          <source>Exception::getPrevious &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fec79d7b667654517f9fcbb955f475e8ff498f" translate="yes" xml:space="preserve">
          <source>Exception::getTrace</source>
          <target state="translated">Exception::getTrace</target>
        </trans-unit>
        <trans-unit id="0de99e4c481237aefea1c7a7bcc3fefbe044a387" translate="yes" xml:space="preserve">
          <source>Exception::getTrace &amp;mdash; Gets the stack trace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be0a8c2a1675b4a79d72e415276e612848e7d58" translate="yes" xml:space="preserve">
          <source>Exception::getTrace &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc529b733439189bdae57491a06de9660ffc3ce" translate="yes" xml:space="preserve">
          <source>Exception::getTraceAsString</source>
          <target state="translated">Exception::getTraceAsString</target>
        </trans-unit>
        <trans-unit id="ff195479226f2dbdaccf9a5a93afd3e24d57685c" translate="yes" xml:space="preserve">
          <source>Exception::getTraceAsString &amp;mdash; Gets the stack trace as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da9014fd6df4d6fb30a3dff7c2b8e257bdd633a" translate="yes" xml:space="preserve">
          <source>Exception::getTraceAsString &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="4e44582a4398f4245d13bf5473084070ff4f073f" translate="yes" xml:space="preserve">
          <source>Exceptions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d3fd4c03fcc7faf2b22827f4c04c35ae22a72e" translate="yes" xml:space="preserve">
          <source>Exceptions are &lt;em&gt;not&lt;/em&gt; clonable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6a44cbcd5efab8fb0d5282c130312364208138" translate="yes" xml:space="preserve">
          <source>Exceptions cannot be cloned. Attempting to &lt;a href=&quot;language.oop5.cloning&quot;&gt;clone&lt;/a&gt; an Exception will result in a fatal &lt;strong&gt;&lt;code&gt;E_ERROR&lt;/code&gt;&lt;/strong&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d691e4130098449fa52670dffb45f4675053b2" translate="yes" xml:space="preserve">
          <source>Exchange the current &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; with another &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635373cfff1fe454b33343b31d2d159cc5c1cb5f" translate="yes" xml:space="preserve">
          <source>Exclamation marks are replaced by spaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd01c0dc5162d4ecc95a3dcf236d390e68b27622" translate="yes" xml:space="preserve">
          <source>Exclude start date, used in &lt;a href=&quot;dateperiod.construct&quot;&gt;DatePeriod::__construct()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a9b93d57928e286da2faff9ed943b3aa1497d7" translate="yes" xml:space="preserve">
          <source>Exclude the header from the returned results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29046eb2ab96486b9adecceda63b4d75e59fd849" translate="yes" xml:space="preserve">
          <source>Execute a command at the remote end and allocate a channel for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ab543e5b5ae40caeaf8377b6324d51f68536ce" translate="yes" xml:space="preserve">
          <source>Execute a query prepared by &lt;a href=&quot;function.ibase-prepare&quot;&gt;ibase_prepare()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471a890d245c6f4bd7f6fa5e130a8c097338af7c" translate="yes" xml:space="preserve">
          <source>Execute the &lt;a href=&quot;https://secure.php.net/manual/en/pdo.prepared-statements.php&quot;&gt;prepared statement&lt;/a&gt;. If the prepared statement included parameter markers, either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5103ea9afb785c9b9ee753b593787353da440f" translate="yes" xml:space="preserve">
          <source>Execute the given cURL session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca5e2bc5b2a55bd377ec05db6059d92139d9db9" translate="yes" xml:space="preserve">
          <source>Executes a prepared statement and returns a result set object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0d6821c8fd4619eac3f407e6fb648b84e19dad" translate="yes" xml:space="preserve">
          <source>Executes a query and returns a single result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972bfacccbb4e25f9db0e07aadd9ca525de2e0e1" translate="yes" xml:space="preserve">
          <source>Executes a query that has been previously prepared using the &lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli_prepare()&lt;/a&gt; function. When executed any parameter markers which exist will automatically be replaced with the appropriate data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89334929aa611b247aa2d04abda93bd6d59ce8b" translate="yes" xml:space="preserve">
          <source>Executes a result-less query against a given database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba981adb3c313555e8aa08f6761ad895c59bbb8" translate="yes" xml:space="preserve">
          <source>Executes a single query against the database whose result can then be retrieved or stored using the &lt;a href=&quot;mysqli.store-result&quot;&gt;mysqli_store_result()&lt;/a&gt; or &lt;a href=&quot;mysqli.use-result&quot;&gt;mysqli_use_result()&lt;/a&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7550d0a36cbd851a6bc024d046f859d46226101c" translate="yes" xml:space="preserve">
          <source>Executes a statement prepared with &lt;a href=&quot;function.odbc-prepare&quot;&gt;odbc_prepare()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52ffa886604da15184439e2748f9c47053227f5" translate="yes" xml:space="preserve">
          <source>Executes a statement prepared with &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare()&lt;/a&gt;. This function is ideal for executing a prepared statement multiple times with different parameter values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ba360b53473a33481ac96ce843fdb45bbfe2ee" translate="yes" xml:space="preserve">
          <source>Executes an SQL query, returning an &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt; object. If the query does not yield a result (such as DML statements) the returned &lt;a href=&quot;class.sqlite3result&quot;&gt;SQLite3Result&lt;/a&gt; object is not really usable. Use &lt;a href=&quot;sqlite3.exec&quot;&gt;SQLite3::exec()&lt;/a&gt; for such queries instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a3040f9e1e06b4aad2a8f13f7c21a1f138583c0" translate="yes" xml:space="preserve">
          <source>Executes one or multiple queries which are concatenated by a semicolon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ba3ce79e91f9f28b39337142bcd01ab1205399" translate="yes" xml:space="preserve">
          <source>Executes the block while retaining the referenced objects synchronization lock for the calling context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcda0f5fbc6978ee94fa9cffd857f34020db306" translate="yes" xml:space="preserve">
          <source>Executes the case insensitive regular expression match with multibyte support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d346c9984fc168dc1d5c680f5ffb414803ed99" translate="yes" xml:space="preserve">
          <source>Executes the given XPath &lt;code&gt;expression&lt;/code&gt; and returns a typed result if possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f06d82af6cbd8eb008ce79adf7aa627647dc2e" translate="yes" xml:space="preserve">
          <source>Executes the given XPath &lt;code&gt;expression&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafcbe5381ba5da6a35d76afaa18fdc93ab60070" translate="yes" xml:space="preserve">
          <source>Executes the program with the given arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8e6c4a4138f78f1c5d0d420740e95b5beb5d57" translate="yes" xml:space="preserve">
          <source>Executes the regular expression match with multibyte support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c49a76e76fd47a6406bd5d4822cdad43977809" translate="yes" xml:space="preserve">
          <source>Executing the example above with: &lt;em&gt;php -n fetch.php http://no2.php.net/get/php-5-LATEST.tar.bz2/from/this/mirror php-latest.tar.bz2&lt;/em&gt; will output something similar too:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c7bb8f8413806d14a8303793c6ba0ad47c2c95" translate="yes" xml:space="preserve">
          <source>Executing this function without a valid MySQLi connection passed in will return &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; and emit &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; level errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c887c644d8d1d9272578a6bb3bb05905901fa9" translate="yes" xml:space="preserve">
          <source>Execution Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957c17a7d52f7390dd3e43a8577205c86df9c410" translate="yes" xml:space="preserve">
          <source>Execution Operators &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0c35ff2a3fc20981fc4ed9010f834b625e9013" translate="yes" xml:space="preserve">
          <source>Execution flags. This value must be one of the &lt;em&gt;V8Js::FLAG_*&lt;/em&gt; constants, defaulting to &lt;strong&gt;&lt;code&gt;V8Js::FLAG_NONE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce9a430047077ffdcc32a350e8dfdfb87d2fbb4" translate="yes" xml:space="preserve">
          <source>Expect &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8dfaf0c1012ec782e71e446bbf7157c7322fdd1" translate="yes" xml:space="preserve">
          <source>Expectations (PHP 7 only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb570bf5a2c10a02a8d648948d06ac3b21529e82" translate="yes" xml:space="preserve">
          <source>Expects a valid signed public key and challenge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f8d1fdf4b35d36a1c1b82e88a303aaab3a1184" translate="yes" xml:space="preserve">
          <source>Explanation of those data structures is beyond the scope of this manual, but at least one example is provided for each of them. For more information, look towards the considerable literature that exists about this broad topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3005b93d7daa6921c62f97f26998aedd1ce9355e" translate="yes" xml:space="preserve">
          <source>Explicit data type for the parameter using the &lt;a href=&quot;https://secure.php.net/manual/en/pdo.constants.php&quot;&gt;&lt;em&gt;PDO::PARAM_*&lt;/em&gt; constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a716cae78749a8625868e12238e6088cb63de48" translate="yes" xml:space="preserve">
          <source>Explicit data type for the parameter using the &lt;a href=&quot;https://secure.php.net/manual/en/pdo.constants.php&quot;&gt;&lt;em&gt;PDO::PARAM_*&lt;/em&gt; constants&lt;/a&gt;. To return an INOUT parameter from a stored procedure, use the bitwise OR operator to set the PDO::PARAM_INPUT_OUTPUT bits for the &lt;code&gt;data_type&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d165ee97f26b031b938fc12621899c47ca3e7175" translate="yes" xml:space="preserve">
          <source>Exponentiation</source>
          <target state="translated">Exponentiation</target>
        </trans-unit>
        <trans-unit id="ab43d7383ab6a3fc10d5f39e6b34736478025f8b" translate="yes" xml:space="preserve">
          <source>Export a GMP number to a binary string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df30ee5e23b0ca15645a7bf1ac40285f5815a459" translate="yes" xml:space="preserve">
          <source>Export image pixels into an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a984043b54333012d3979cc896d310f2b98c92" translate="yes" xml:space="preserve">
          <source>Exports PEM formatted public key from encoded signed public key and challenge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32851e5789537042b1c6cb89ff94eb8a64daae7" translate="yes" xml:space="preserve">
          <source>Exports a Reflected function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e700c952c384fb07a89f413c0504e8e90a4f9f" translate="yes" xml:space="preserve">
          <source>Exports a ReflectionMethod.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4a352567b125e09d4ba3f3a0204aa4eb550bf0" translate="yes" xml:space="preserve">
          <source>Exports a reflected class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2661561af8cd8accad303a3555130e72838373ea" translate="yes" xml:space="preserve">
          <source>Exports a reflected extension and returns it as a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;. This is the same as the &lt;a href=&quot;reflectionextension.export&quot;&gt;ReflectionExtension::export()&lt;/a&gt; with the &lt;code&gt;return&lt;/code&gt; set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae37eb181aced51967d25fe5a2f0036f63fc219f" translate="yes" xml:space="preserve">
          <source>Exports a reflected extension. The output format of this function is the same as the CLI argument &lt;em&gt;--re [extension]&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b498cfb06f54569ca5b3d4c3d15820bfd43fe7" translate="yes" xml:space="preserve">
          <source>Exports a reflection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74795c91ecfaaf3236dcd1e1d8f90967be943d68" translate="yes" xml:space="preserve">
          <source>Exports all methods from specified class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ff69c94851b85fb717c036d635304470c3c711" translate="yes" xml:space="preserve">
          <source>Exports challenge from encoded signed public key and challenge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bceccd8b4d85833d69d10170fab7d26e5ce3a2" translate="yes" xml:space="preserve">
          <source>Exports image pixels into an array. The map defines the ordering of the exported pixels. The size of the returned array is &lt;em&gt;width * height * strlen(map)&lt;/em&gt;. This method is available if Imagick has been compiled against ImageMagick version 6.4.7 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87113e020dc93b8a295a632403af3bc77c75cc4b" translate="yes" xml:space="preserve">
          <source>Exports one or more functions for remote clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f890f6ae374816f196e88db26b7a819a6f29d455" translate="yes" xml:space="preserve">
          <source>Exports the &lt;a href=&quot;class.arrayobject&quot;&gt;ArrayObject&lt;/a&gt; to an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72fc45cf7a9ca1814627a38f3f691299aae5589" translate="yes" xml:space="preserve">
          <source>Exports.</source>
          <target state="translated">Exports.</target>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="3f3db03c31e493b2670e3daec28e4d7d57fb3ce3" translate="yes" xml:space="preserve">
          <source>Expressions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15eb54fecbb4c0660e4a4bd461cb2098e7199da9" translate="yes" xml:space="preserve">
          <source>Expressions are the most important building blocks of PHP. In PHP, almost anything you write is an expression. The simplest yet most accurate way to define an expression is &quot;anything that has a value&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e88d5c4c376d215ea5a845e5891e81f560b7c6d" translate="yes" xml:space="preserve">
          <source>Extend or condense a font (&lt;code&gt;font_index&lt;/code&gt;), if the value of the &lt;code&gt;extend&lt;/code&gt; parameter is less than one you will be condensing the font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b607fbef798e21064198d6b767d451d76f0422" translate="yes" xml:space="preserve">
          <source>Extended language subtag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fbd5aff54c3abd960d6bd11e5c629c49dec64ff" translate="yes" xml:space="preserve">
          <source>Extended properties such as &lt;em&gt;InMusicalSymbols&lt;/em&gt; are not supported by PCRE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625a150ba4657e02eef8544e3d0ca900dde48bd8" translate="yes" xml:space="preserve">
          <source>Extending Exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46eab993533d070765326bfe50fabcacc29a671b" translate="yes" xml:space="preserve">
          <source>Extending Exceptions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27545573fdb70ac2b501ab94703428b9183a858" translate="yes" xml:space="preserve">
          <source>Extension (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512495568338a88a48386611c4ea2f4034f330b3" translate="yes" xml:space="preserve">
          <source>Extension Loading Directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed643962ea0996be20783c8108d0fca9370e816" translate="yes" xml:space="preserve">
          <source>Extension value, must be greater than 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53408e31274565bb781bf10af8b876771dabe650" translate="yes" xml:space="preserve">
          <source>Extension::__clone</source>
          <target state="translated">Extension::__clone</target>
        </trans-unit>
        <trans-unit id="aee6c4bf64b4a90f7abae7ef448adc93a68a341f" translate="yes" xml:space="preserve">
          <source>Extension::__construct</source>
          <target state="translated">Extension::__construct</target>
        </trans-unit>
        <trans-unit id="5bb822b05d791a0210998b30138b182b7964e93c" translate="yes" xml:space="preserve">
          <source>Extension::__toString</source>
          <target state="translated">Extension::__toString</target>
        </trans-unit>
        <trans-unit id="53f5fcf8ca9fe0a1ab54be32a52daa462d44406b" translate="yes" xml:space="preserve">
          <source>Extension::export</source>
          <target state="translated">Extension::export</target>
        </trans-unit>
        <trans-unit id="9afbcc45d07ea14480034de2d03d3036c02fd393" translate="yes" xml:space="preserve">
          <source>Extension::getClassNames</source>
          <target state="translated">Extension::getClassNames</target>
        </trans-unit>
        <trans-unit id="6ba66912f79391fb0a050835f24e77bdf94d2183" translate="yes" xml:space="preserve">
          <source>Extension::getClasses</source>
          <target state="translated">Extension::getClasses</target>
        </trans-unit>
        <trans-unit id="7b84c274975e175dbd76fabdf0a0eff7d978da6b" translate="yes" xml:space="preserve">
          <source>Extension::getConstants</source>
          <target state="translated">Extension::getConstants</target>
        </trans-unit>
        <trans-unit id="ea4a5224fe53a3f04fa29d1e730bdf6076d33fe5" translate="yes" xml:space="preserve">
          <source>Extension::getDependencies</source>
          <target state="translated">Extension::getDependencies</target>
        </trans-unit>
        <trans-unit id="c1ef5a86f316f01986c410c33301d4b74d6c9114" translate="yes" xml:space="preserve">
          <source>Extension::getFunctions</source>
          <target state="translated">Extension::getFunctions</target>
        </trans-unit>
        <trans-unit id="ba7e1a51a9dc6a9130c492f9067e79290eb2ee48" translate="yes" xml:space="preserve">
          <source>Extension::getINIEntries</source>
          <target state="translated">Extension::getINIEntries</target>
        </trans-unit>
        <trans-unit id="afdd925b256c3daeb72fcfb12d42e2afb47bf258" translate="yes" xml:space="preserve">
          <source>Extension::getName</source>
          <target state="translated">Extension::getName</target>
        </trans-unit>
        <trans-unit id="0b6f427a6888aff188823d4ed6ca6f4fd9be22ea" translate="yes" xml:space="preserve">
          <source>Extension::getVersion</source>
          <target state="translated">Extension::getVersion</target>
        </trans-unit>
        <trans-unit id="66f9a51f59ad0bc22a2bcd971ee90b788d88c70f" translate="yes" xml:space="preserve">
          <source>Extension::info</source>
          <target state="translated">Extension::info</target>
        </trans-unit>
        <trans-unit id="3085d5586c607ceb8bffa037123d3605afe97625" translate="yes" xml:space="preserve">
          <source>Extension::isPersistent</source>
          <target state="translated">Extension::isPersistent</target>
        </trans-unit>
        <trans-unit id="5b0870495c24bf4c4d011267c80845004d23d393" translate="yes" xml:space="preserve">
          <source>Extension::isTemporary</source>
          <target state="translated">Extension::isTemporary</target>
        </trans-unit>
        <trans-unit id="d2d536b4a1fa5ceaf2700db5a029bf1c13ed0654" translate="yes" xml:space="preserve">
          <source>ExtensionVer</source>
          <target state="translated">ExtensionVer</target>
        </trans-unit>
        <trans-unit id="7145d6650d98dc71324924699ed9e57126188f97" translate="yes" xml:space="preserve">
          <source>Extensions can define own rules for their objects comparison (&lt;em&gt;==&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81377d69268e0b6bc4d2d08a4cf3a02a678280b2" translate="yes" xml:space="preserve">
          <source>Extensions registered to be enabled automatically do not need to be listed in this array. Also if an extension has dependencies, those dependencies can be omitted as well. Defaults to empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59aa2b30ebbb3fdda4bdd5e9de39d064297381a3" translate="yes" xml:space="preserve">
          <source>Extra Columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8ef25d87ea9d44229ad200101165eec1449903" translate="yes" xml:space="preserve">
          <source>Extra parameters to send with the request for the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032fd8bc63dea15df901dcd20fcc5a5bc77f1c66" translate="yes" xml:space="preserve">
          <source>Extract all files within a phar archive to disk. Extracted files and directories preserve permissions as stored in the archive. The optional parameters allow optional control over which files are extracted, and whether existing files on disk can be overwritten. The second parameter &lt;code&gt;files&lt;/code&gt; can be either the name of a file or directory to extract, or an array of names of files and directories to extract. By default, this method will not overwrite existing files, the third parameter can be set to true to enable overwriting of files. This method is similar to &lt;a href=&quot;ziparchive.extractto&quot;&gt;ZipArchive::extractTo()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020ed529efb450e6084ea9cd31b05c59b9315ffc" translate="yes" xml:space="preserve">
          <source>Extract all files within a tar/zip archive to disk. Extracted files and directories preserve permissions as stored in the archive. The optional parameters allow optional control over which files are extracted, and whether existing files on disk can be overwritten. The second parameter &lt;em&gt;files&lt;/em&gt; can be either the name of a file or directory to extract, or an array of names of files and directories to extract. By default, this method will not overwrite existing files, the third parameter can be set to true to enable overwriting of files. This method is similar to &lt;a href=&quot;ziparchive.extractto&quot;&gt;ZipArchive::extractTo()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94863777e03b5974e8b7098730d4fb36d12eae06" translate="yes" xml:space="preserve">
          <source>Extract pattern used by the formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84403c407570823be12da7e07e155f3695b179c7" translate="yes" xml:space="preserve">
          <source>Extract the complete archive or the given files to the specified destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8915ce7c184c3022da5961b69df6595e51de096" translate="yes" xml:space="preserve">
          <source>Extracts a line from the front of the buffer and returns it in a newly allocated string. If there is not a whole line to read, the function returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;. The line terminator is not included in the copied string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b3d97610ad9210e5f4dadba239d64484e99741" translate="yes" xml:space="preserve">
          <source>Extracts a region of the image and returns it as a a new wand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560b5f7d9b9394bbf0b7af08eb743c6117065651" translate="yes" xml:space="preserve">
          <source>Extracts a region of the image and returns it as a new Imagick object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c866003dc2b698023b18b25223c16b3c83355a" translate="yes" xml:space="preserve">
          <source>Extracts a region of the image and returns it as a new wand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3bd36c7f59e5b863d1f8761d26645227a457a0" translate="yes" xml:space="preserve">
          <source>Extracts a region of the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6412c49f494e163012a0f1b8d7630d281e41a3" translate="yes" xml:space="preserve">
          <source>Extracts keywords from &lt;code&gt;query&lt;/code&gt; using tokenizer settings for the given &lt;code&gt;index&lt;/code&gt;, optionally with per-keyword occurrence statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779915db6f6b6315d360e97ed65d0e6a0ba71ee2" translate="yes" xml:space="preserve">
          <source>Extracts the associated PEM formatted public key issued from the &amp;lt;keygen&amp;gt; element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f12e7a19c45af64a324daf823ee311938cf2ae4" translate="yes" xml:space="preserve">
          <source>Extracts the associated PEM formatted public key or NULL on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e00ced1a7bbd42acf07df23ace72d12aafba43" translate="yes" xml:space="preserve">
          <source>Extracts the associated challenge string issued from the &amp;lt;keygen&amp;gt; element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9cace938b930c8159f8f3210d70de1e8832c58" translate="yes" xml:space="preserve">
          <source>Extracts the associated challenge string or NULL on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5822fbf95bab15fcb97b3927b485d55b8a306a" translate="yes" xml:space="preserve">
          <source>Extracts the top node from the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc6650db1989b03f32f20c10fa9975461e386aa" translate="yes" xml:space="preserve">
          <source>Extracts variables as references. This effectively means that the values of the imported variables are still referencing the values of the &lt;code&gt;array&lt;/code&gt; parameter. You can use this flag on its own or combine it with any other flag by OR'ing the &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29270435910ba6f670b114194bd89f01e5f1266a" translate="yes" xml:space="preserve">
          <source>Extracts/decodes a message section from the supplied filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0a378b42a0f339cf069e08552c041001433379" translate="yes" xml:space="preserve">
          <source>F=OFF cote &amp;lt; cot&amp;eacute; &amp;lt; c&amp;ocirc;te &amp;lt; c&amp;ocirc;t&amp;eacute;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f58e85423194941eb342f9972bc4c40ec9703b2" translate="yes" xml:space="preserve">
          <source>F=ON cote &amp;lt; c&amp;ocirc;te &amp;lt; cot&amp;eacute; &amp;lt; c&amp;ocirc;t&amp;eacute;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02821837b7fb7e82023533e1f6690d91b721657a" translate="yes" xml:space="preserve">
          <source>FAM &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de758540df53552e3d3823220167f655900dc98" translate="yes" xml:space="preserve">
          <source>FANN &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8acf8f420f433402e6e692d4f624411bbb2c199" translate="yes" xml:space="preserve">
          <source>FAQ: things you need to know about namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9649293a78aa580258e880e680ddedb2e6cacb35" translate="yes" xml:space="preserve">
          <source>FAQ: things you need to know about namespaces &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf1cf512aa61ee4112690255abc71e49d783f8a" translate="yes" xml:space="preserve">
          <source>FIFO node type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4915d3a7ef82abdf96f2b5042452a69b2ea344c" translate="yes" xml:space="preserve">
          <source>FILE</source>
          <target state="translated">FILE</target>
        </trans-unit>
        <trans-unit id="5e66f6d7eafff50f62c4671b71743367a4b91e3c" translate="yes" xml:space="preserve">
          <source>FILLRULE_ constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc62f42dfb302099cf59ebb3bb25fdd06663bc8d" translate="yes" xml:space="preserve">
          <source>FILTER_CONDITION</source>
          <target state="translated">FILTER_CONDITION</target>
        </trans-unit>
        <trans-unit id="29f08884f0b4b804ed830d5a0194abe06708fd54" translate="yes" xml:space="preserve">
          <source>FKCOLUMN_NAME</source>
          <target state="translated">FKCOLUMN_NAME</target>
        </trans-unit>
        <trans-unit id="c7aa9a266d16e661af2b652e0499f4610421c94b" translate="yes" xml:space="preserve">
          <source>FKTABLE_NAME</source>
          <target state="translated">FKTABLE_NAME</target>
        </trans-unit>
        <trans-unit id="dce91b4f2653fee249c93709f7ff604a2771307b" translate="yes" xml:space="preserve">
          <source>FKTABLE_OWNER</source>
          <target state="translated">FKTABLE_OWNER</target>
        </trans-unit>
        <trans-unit id="72ba08965f953663a69d5298a081381ea9244cd6" translate="yes" xml:space="preserve">
          <source>FKTABLE_QUALIFIER</source>
          <target state="translated">FKTABLE_QUALIFIER</target>
        </trans-unit>
        <trans-unit id="43187b724ed4a7e09c4838d4df7206af9015543b" translate="yes" xml:space="preserve">
          <source>FK_NAME</source>
          <target state="translated">FK_NAME</target>
        </trans-unit>
        <trans-unit id="3c4327c3d43884102e93bdca807dcb4aff3a8a55" translate="yes" xml:space="preserve">
          <source>FLAGGED - match messages with the \\FLAGGED (sometimes referred to as Important or Urgent) flag set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eae39dfc2f5b76a080454a69dd0640c4ec475c5" translate="yes" xml:space="preserve">
          <source>FROM &quot;string&quot; - match messages with &quot;string&quot; in the From: field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb28212fba0272ee990cebd571ebe09b463312e" translate="yes" xml:space="preserve">
          <source>FTP</source>
          <target state="translated">FTP</target>
        </trans-unit>
        <trans-unit id="5e3210e06f7e8c90ac87b8c37a8356d6668317c7" translate="yes" xml:space="preserve">
          <source>Failing to do this will result in an error message similar to &lt;em&gt;Warning: mail(): &quot;sendmail_from&quot; not set in php.ini or custom &quot;From:&quot; header missing&lt;/em&gt;. The &lt;em&gt;From&lt;/em&gt; header sets also &lt;em&gt;Return-Path&lt;/em&gt; under Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7dc83da1766c839de586bdbe44cc3006105a6ba" translate="yes" xml:space="preserve">
          <source>Fairly obviously, PCRE does not support the (?{code}) and (??{code}) construction. However, there is support for recursive patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97c85673eb72fc95a924afaae240c893dc40cb6" translate="yes" xml:space="preserve">
          <source>FastCGI Process Manager &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a7e3a1aeaac51d0772fe866ce508ad76f2e30c" translate="yes" xml:space="preserve">
          <source>Feed signal event into the default loop. Ev will react to this call as if the signal specified by &lt;code&gt;signal&lt;/code&gt; had occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ccd16d468e5cd279ee6213d1e68ca2c1f3a76b" translate="yes" xml:space="preserve">
          <source>Feeds the given revents set into the event loop, as if the specified event had happened for the watcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b806820a178ecb70f0e9ed361870335af96d1025" translate="yes" xml:space="preserve">
          <source>Fetch DNS Resource Records associated with the given &lt;code&gt;hostname&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4825cb7786aaa76b80df626aaa0e968118d4cdf" translate="yes" xml:space="preserve">
          <source>Fetch a request token, secret and any additional response parameters from the service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73115cce19de19fb19d7028ed75013b1362c0e91" translate="yes" xml:space="preserve">
          <source>Fetch a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6578ed788686c71eb27232d3b64db6d4ab49f9" translate="yes" xml:space="preserve">
          <source>Fetch a result row from a query as an associative array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f117f4cf9af3367a3ab52eee870f231da79285b5" translate="yes" xml:space="preserve">
          <source>Fetch all HTTP response headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cffc2d5b7cb83272191709149634822a7ba444" translate="yes" xml:space="preserve">
          <source>Fetch an &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; from an ODBC query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbfea827cd99ce6c21cf775952ed77cfab5e1a4" translate="yes" xml:space="preserve">
          <source>Fetch an access token, secret and any additional response parameters from the service provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d21e68c15213b972790e7e64b6c86b7b99411b" translate="yes" xml:space="preserve">
          <source>Fetch an associative &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; from an ODBC query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd48d26321b77baaa85ab49579efe1222d462cf" translate="yes" xml:space="preserve">
          <source>Fetch of a particular section of the body of the specified messages. Body parts are not decoded by this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39b4f2a353bf6b7beda492032e294a20d5d9487" translate="yes" xml:space="preserve">
          <source>Fetch one result row into &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9188d1dda1bd6deac81d0ec468e0e145bf07ddf2" translate="yes" xml:space="preserve">
          <source>Fetch the Apache version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9190fd08a32ab0f1af050a335f24de186319ae9b" translate="yes" xml:space="preserve">
          <source>Fetch the MIME headers of a particular section of the body of the specified messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c994e3e4b6a6eee48d2c173cfdb20ba6efd70b" translate="yes" xml:space="preserve">
          <source>Fetch the result from a prepared statement into the variables bound by &lt;a href=&quot;mysqli-stmt.bind-result&quot;&gt;mysqli_stmt_bind_result()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce36b953d1590ea5f9c9e35f18e8e35c0ccd64f" translate="yes" xml:space="preserve">
          <source>Fetches a chunk of the objects property table of the given size, optionally preserving keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2a26a0216e3b9f3618d37738333d81331bf47a" translate="yes" xml:space="preserve">
          <source>Fetches a result row as an associative or numerically indexed array or both. By default, fetches as both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1ed310eefd0f6b17f7e269361918f0533a2964" translate="yes" xml:space="preserve">
          <source>Fetches a row as a pseudo-object from a given result identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36140f40f54516275a00461e561862ea6644ab35" translate="yes" xml:space="preserve">
          <source>Fetches a row from a result set associated with a PDOStatement object. The &lt;code&gt;fetch_style&lt;/code&gt; parameter determines how PDO returns the row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9098a865a28d1c6c6027cb800ff96ea89bee4ab5" translate="yes" xml:space="preserve">
          <source>Fetches a row of the data that was returned by &lt;a href=&quot;function.odbc-do&quot;&gt;odbc_do()&lt;/a&gt; or &lt;a href=&quot;function.odbc-exec&quot;&gt;odbc_exec()&lt;/a&gt;. After &lt;strong&gt;odbc_fetch_row()&lt;/strong&gt; is called, the fields of that row can be accessed with &lt;a href=&quot;function.odbc-result&quot;&gt;odbc_result()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66dcda148ebdd0edef924b5d2327198c03003c92" translate="yes" xml:space="preserve">
          <source>Fetches all HTTP headers from the current request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c27fe4916754f330be592734a69642565c2b13" translate="yes" xml:space="preserve">
          <source>Fetches all HTTP request headers from the current request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="082e092cdbde82e24d22f678554c8801fb525a54" translate="yes" xml:space="preserve">
          <source>Fetches all the structured information for a given message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b2a706b5b4db8fa88e3f7ad5f3cd5f90477173" translate="yes" xml:space="preserve">
          <source>Fetches an alternate substream associated with an SSH2 channel stream. The SSH2 protocol currently defines only one substream, STDERR, which has a substream ID of &lt;strong&gt;&lt;code&gt;SSH2_STREAM_STDERR&lt;/code&gt;&lt;/strong&gt; (defined as 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a692a0edb89c9129f10d2bc29b6fac9db23691db" translate="yes" xml:space="preserve">
          <source>Fetches one row of data from the result set and returns it as an enumerated array, where each column is stored in an array offset starting from 0 (zero). Each subsequent call to this function will return the next row within the result set, or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if there are no more rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1c93e8feb852c69df0bce76f96ee88913883a7" translate="yes" xml:space="preserve">
          <source>Fetches the filtered children of the inner iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b35b045719cb239853fb436f717d3ad7c4d75f2" translate="yes" xml:space="preserve">
          <source>Fetches the next row and returns it as an object. This function is an alternative to &lt;a href=&quot;pdostatement.fetch&quot;&gt;PDOStatement::fetch()&lt;/a&gt; with &lt;strong&gt;&lt;code&gt;PDO::FETCH_CLASS&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;PDO::FETCH_OBJ&lt;/code&gt;&lt;/strong&gt; style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c047e1560047670ad3d395ca4ceb15e58c3c6e65" translate="yes" xml:space="preserve">
          <source>Fetchs a stored variable from the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe2442909e77194a6cc355d2c34eaeac046c100" translate="yes" xml:space="preserve">
          <source>Fetchs an entry from the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b4173db741c7c8ab07b81ef7c0b04c3c4b2385" translate="yes" xml:space="preserve">
          <source>Field Boost</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae2da294e748510b8f34a37a1971b9e8c9991bb" translate="yes" xml:space="preserve">
          <source>Field Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836e7e5ff39bbf8d77d8bddcf1143b13dd49ac53" translate="yes" xml:space="preserve">
          <source>Field Slop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97263f1285487d09fcf1678eb8028161b6dc6a3e" translate="yes" xml:space="preserve">
          <source>Field indices start from 1. Regarding the way binary or long column data is returned refer to &lt;a href=&quot;function.odbc-binmode&quot;&gt;odbc_binmode()&lt;/a&gt; and &lt;a href=&quot;function.odbc-longreadlen&quot;&gt;odbc_longreadlen()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08ab394a08fab914fec4dcbe3d645010ddc09f8" translate="yes" xml:space="preserve">
          <source>Field name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e3ad468e1f3cfda924b75c7520c2fa106f672e" translate="yes" xml:space="preserve">
          <source>Field number (starting from 0) as an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; or the field name as a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0647754ecbcbc412a7d5a672f8ef462def0a593a" translate="yes" xml:space="preserve">
          <source>Field number, starting from 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ae0d15ee1a150626e2874e3f24a43e1e5e2a73" translate="yes" xml:space="preserve">
          <source>Field offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208c722557ea9ffb4b119cc5e424b28b8fefbc28" translate="yes" xml:space="preserve">
          <source>Field value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672dcf6273ed2a5bfb6e49f11892c71f1ca7059d" translate="yes" xml:space="preserve">
          <source>Field width</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd03578ef6a3dfb753aadb2f053a927cd0262b0" translate="yes" xml:space="preserve">
          <source>Field-property matching occurs regardless of access modifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7285130d75798df11ba1c9824f5af7cbd693e344" translate="yes" xml:space="preserve">
          <source>Field-property name matching is case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bb6a878b3b7eb2debafd07d721f8fea5eb06fe" translate="yes" xml:space="preserve">
          <source>Fields boosts (slops)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6d29f2e17e8afc8f6d309ebd11d83741a1f938" translate="yes" xml:space="preserve">
          <source>Fields names separated by space</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b062b6a8685e5e0ee25353aaf2825ac367acd81c" translate="yes" xml:space="preserve">
          <source>Fields, boosts [, slops]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2409443081774c93535429d62ce588ebb57afcd" translate="yes" xml:space="preserve">
          <source>Figures out the best way of encoding the content read from the given file pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cefa699a086269720d2318a37aca98e8bbaf42" translate="yes" xml:space="preserve">
          <source>File Handling &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a926222b8bec34819e069693ffbdca4d0b2f8b69" translate="yes" xml:space="preserve">
          <source>File System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2f72dd97dbd9d4bbd1eb031567cbd3a3e059c3" translate="yes" xml:space="preserve">
          <source>File already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa9e8c20a8f8b75fc3e2639b1999ecd53c306e7" translate="yes" xml:space="preserve">
          <source>File containing PHP Code to be lint checked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f81f051a9dc3a8ec732292cd98e1797ad93c79" translate="yes" xml:space="preserve">
          <source>File descriptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9161bdcc07a79755020939f08cb1844b4ecf3f06" translate="yes" xml:space="preserve">
          <source>File name in the file system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8111ea8e357be27a216863190c117e9e5b2b4a5" translate="yes" xml:space="preserve">
          <source>File or directory to watch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1214946f7d95ef7612951c5654019274eb30d8ea" translate="yes" xml:space="preserve">
          <source>File path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e78c7e7399ec965a9cf42c8a02fd09d6ddbae7d" translate="yes" xml:space="preserve">
          <source>File reading is now subject to &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe mode&lt;/a&gt; and &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.open-basedir&quot;&gt;open-basedir&lt;/a&gt; restrictions in &lt;code&gt;parameters_array&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5355eab1b79a448c49cbee412ee4316cd2fc0f7" translate="yes" xml:space="preserve">
          <source>FileInfo (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e1e182df2895b8036a2eee2ddba2df2f030a7a" translate="yes" xml:space="preserve">
          <source>FileInfo::__construct</source>
          <target state="translated">FileInfo::__construct</target>
        </trans-unit>
        <trans-unit id="5e2bbeccb6ea81ea4abe70166c0ec5f45c23d1fc" translate="yes" xml:space="preserve">
          <source>FileInfo::chmod</source>
          <target state="translated">FileInfo::chmod</target>
        </trans-unit>
        <trans-unit id="7b68f733eb18e3481e837ffce8a0863c1eab33b1" translate="yes" xml:space="preserve">
          <source>FileInfo::compress</source>
          <target state="translated">FileInfo::compress</target>
        </trans-unit>
        <trans-unit id="a555cefb70906f7276e5b501ab5f02c359866ceb" translate="yes" xml:space="preserve">
          <source>FileInfo::decompress</source>
          <target state="translated">FileInfo::decompress</target>
        </trans-unit>
        <trans-unit id="5f88c93816a9edea22a55923d74a7bb4adbaa6da" translate="yes" xml:space="preserve">
          <source>FileInfo::delMetadata</source>
          <target state="translated">FileInfo::delMetadata</target>
        </trans-unit>
        <trans-unit id="dfbbb910ae9c595ffe8fd039fb38f8b152ad8197" translate="yes" xml:space="preserve">
          <source>FileInfo::getCRC32</source>
          <target state="translated">FileInfo::getCRC32</target>
        </trans-unit>
        <trans-unit id="0a0771b23e97a77ffc40efb415c65abfb4cbf317" translate="yes" xml:space="preserve">
          <source>FileInfo::getCompressedSize</source>
          <target state="translated">FileInfo::getCompressedSize</target>
        </trans-unit>
        <trans-unit id="319210859bd2689c81c7f4edb4409802c7f7dcfe" translate="yes" xml:space="preserve">
          <source>FileInfo::getContent</source>
          <target state="translated">FileInfo::getContent</target>
        </trans-unit>
        <trans-unit id="0d9137fd4edadb6ce0e2f6cf4d88ce09d5a4bda3" translate="yes" xml:space="preserve">
          <source>FileInfo::getMetadata</source>
          <target state="translated">FileInfo::getMetadata</target>
        </trans-unit>
        <trans-unit id="fc9700400934c38ae4198999b06caff6eddb4681" translate="yes" xml:space="preserve">
          <source>FileInfo::getPharFlags</source>
          <target state="translated">FileInfo::getPharFlags</target>
        </trans-unit>
        <trans-unit id="d636c7f8d7682f1668e08131b01831be41392a9d" translate="yes" xml:space="preserve">
          <source>FileInfo::hasMetadata</source>
          <target state="translated">FileInfo::hasMetadata</target>
        </trans-unit>
        <trans-unit id="3c1fbb78aef49d4c974df910eb83f81335a2bb1d" translate="yes" xml:space="preserve">
          <source>FileInfo::isCRCChecked</source>
          <target state="translated">FileInfo::isCRCChecked</target>
        </trans-unit>
        <trans-unit id="e0212ef720c6b1ffe5dd450bca0669c5ab5e024f" translate="yes" xml:space="preserve">
          <source>FileInfo::isCompressed</source>
          <target state="translated">FileInfo::isCompressed</target>
        </trans-unit>
        <trans-unit id="0a10ddb995745597d497656b47541d03aa57c91b" translate="yes" xml:space="preserve">
          <source>FileInfo::isCompressedBZIP2</source>
          <target state="translated">FileInfo::isCompressedBZIP2</target>
        </trans-unit>
        <trans-unit id="2352e545718eae124d4568f280033b9ea45eff42" translate="yes" xml:space="preserve">
          <source>FileInfo::isCompressedGZ</source>
          <target state="translated">FileInfo::isCompressedGZ</target>
        </trans-unit>
        <trans-unit id="8e8e713b8350e8522855df1e95e8f129f125bca9" translate="yes" xml:space="preserve">
          <source>FileInfo::setCompressedBZIP2</source>
          <target state="translated">FileInfo::setCompressedBZIP2</target>
        </trans-unit>
        <trans-unit id="bf984e0611b097c5803f9f93266bfd8a5dabb43d" translate="yes" xml:space="preserve">
          <source>FileInfo::setCompressedGZ</source>
          <target state="translated">FileInfo::setCompressedGZ</target>
        </trans-unit>
        <trans-unit id="1af306ae82acd53538b1e10ccaf22b1c651c0b01" translate="yes" xml:space="preserve">
          <source>FileInfo::setMetadata</source>
          <target state="translated">FileInfo::setMetadata</target>
        </trans-unit>
        <trans-unit id="a60ba218d9bfaa01e002f08808ba3bfa8783007c" translate="yes" xml:space="preserve">
          <source>FileInfo::setUncompressed</source>
          <target state="translated">FileInfo::setUncompressed</target>
        </trans-unit>
        <trans-unit id="52b11eddba4a42eaf0cfcda56267a83e4fb9512f" translate="yes" xml:space="preserve">
          <source>FileName, FileSize, FileDateTime, SectionsFound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2747f6cad031d5f4db5314e40a7beeb44821e6f8" translate="yes" xml:space="preserve">
          <source>Filehandle where to write the image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee39a8f08aeb745f92b3bf14c2ff9fe119258fd" translate="yes" xml:space="preserve">
          <source>Filehandle where to write the images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e04f60297e16c70561c3543e5d917c44d1296f" translate="yes" xml:space="preserve">
          <source>Fileinfo &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221d823a8af82371c6eaf720e79c6fc45bc44569" translate="yes" xml:space="preserve">
          <source>Fileinfo resource returned by &lt;a href=&quot;function.finfo-open&quot;&gt;finfo_open()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075c889bab3cbe62f3c09113dd40635daafb4e7a" translate="yes" xml:space="preserve">
          <source>Filename to be used in POST data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2474b80c15e5f319ebea1790097d3246faa452cf" translate="yes" xml:space="preserve">
          <source>Filename to import function and class definitions from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6fe1df8c44a1dc9db3ff0dfeeabe0899c50b77" translate="yes" xml:space="preserve">
          <source>Filename where to write the image. The extension of the filename defines the type of the file. Format can be forced regardless of file extension using format: prefix, for example &quot;jpg:test.png&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3f946b55efec60099c277d3495957041354757" translate="yes" xml:space="preserve">
          <source>Files are included based on the file path given or, if none is given, the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt; specified. If the file isn't found in the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.include-path&quot;&gt;include_path&lt;/a&gt;, &lt;em&gt;include&lt;/em&gt; will finally check in the calling script's own directory and the current working directory before failing. The &lt;em&gt;include&lt;/em&gt; construct will emit a &lt;a href=&quot;function.include&quot;&gt;warning&lt;/a&gt; if it cannot find a file; this is different behavior from &lt;a href=&quot;function.require&quot;&gt;require&lt;/a&gt;, which will emit a &lt;a href=&quot;function.include&quot;&gt;fatal error&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a2aa00e7fa9a075d3016cb1fcb7c9c1dc897a4" translate="yes" xml:space="preserve">
          <source>Files that are included or required multiple times only show up once in the returned array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699a5326538f524799cdfcb58c844ecbfcf8104e" translate="yes" xml:space="preserve">
          <source>Filesystem &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dae69a0b1418fca79337b72f4cd1d8266843a87" translate="yes" xml:space="preserve">
          <source>Filesystem- (not document root-) based path to the current script, after the server has done any virtual-to-real mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17190a05c59799c821c488cdfc2ec3086190c22b" translate="yes" xml:space="preserve">
          <source>FilesystemIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b4fbcf1b2b9a221bf2dff9b717b0a13a329136" translate="yes" xml:space="preserve">
          <source>FilesystemIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad397b1521e33f35604fe72f451770c097defa2" translate="yes" xml:space="preserve">
          <source>FilesystemIterator constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648b1551c0b6a972ad71bdc1862a28aa0b418d2c" translate="yes" xml:space="preserve">
          <source>FilesystemIterator predefined constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ea0a0ededa089b0f097d1c2c11c33b3beb12bd" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::__construct</source>
          <target state="translated">FilesystemIterator::__construct</target>
        </trans-unit>
        <trans-unit id="3673258172335ac3b88546d8f9a30257f570b066" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::__construct &amp;mdash; Constructs a new filesystem iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417ddf15249bb74f1651d61f0056e9f67c6f2c44" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2699ac834b6234816f032473d32ad8bff7de0a00" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::current</source>
          <target state="translated">FilesystemIterator::current</target>
        </trans-unit>
        <trans-unit id="11c3a88329c2bed7ba514dd5468496c5d22ff656" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::current &amp;mdash; The current file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494712f616cccbf34162879a4c70a6fadcebfd35" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::current &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975980feb0ec23daea929fa583896c08bb4d8c29" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::getFlags</source>
          <target state="translated">FilesystemIterator::getFlags</target>
        </trans-unit>
        <trans-unit id="e1f294d646cbde4ab105aea0fb79196605748677" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::getFlags &amp;mdash; Get the handling flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa2344c82408e19bc63ef53cdeeeca3ee585b8c" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::getFlags &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae331efb474b5221928600f78c912d067c702438" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::key</source>
          <target state="translated">FilesystemIterator::key</target>
        </trans-unit>
        <trans-unit id="ad20884b92856e6fd207f5a16c6f6495eb541b49" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::key &amp;mdash; Retrieve the key for the current file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83706736acba2344c3df7bbe3e28e07cb53c008c" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::key &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113dd385f4f1a3650b393de4b055b4c5fa084f61" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::next</source>
          <target state="translated">FilesystemIterator::next</target>
        </trans-unit>
        <trans-unit id="1c7355beb8db05700b47057733f0cfbddb59de1a" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::next &amp;mdash; Move to the next file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f4eb601e8647f52709e22fa30796d1b54d4051" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd6f0a759327bd501307f9d86d4e75d8887a3ad" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::rewind</source>
          <target state="translated">FilesystemIterator::rewind</target>
        </trans-unit>
        <trans-unit id="d75418f10b7f454ce9364b04f4de5c05d861056e" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::rewind &amp;mdash; Rewinds back to the beginning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39142b52ac07cc7348f433f7bd76db3d937b163d" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::rewind &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0ee5b505e853e4c031a153e51fde463d6ed0c2" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::setFlags</source>
          <target state="translated">FilesystemIterator::setFlags</target>
        </trans-unit>
        <trans-unit id="ddc8fa3127ace5bbd9163c4d09e4122d470a7ac7" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::setFlags &amp;mdash; Sets handling flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8368f406d21a4fa166c79d06eb3ebe44832090c7" translate="yes" xml:space="preserve">
          <source>FilesystemIterator::setFlags &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7b9a208b5edfcb8abd970849e73e89fddd34ab" translate="yes" xml:space="preserve">
          <source>Fill opacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba44f4b363b3170c5180d4204997ae646456c24b" translate="yes" xml:space="preserve">
          <source>Fills an array with &lt;code&gt;num&lt;/code&gt; entries of the value of the &lt;code&gt;value&lt;/code&gt; parameter, keys starting at the &lt;code&gt;start_index&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
