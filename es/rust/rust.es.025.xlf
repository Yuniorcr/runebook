<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="rust">
    <body>
      <group id="rust">
        <trans-unit id="9717679d631a302dbb9bb4e57fe62cbe2f951c7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Err(ParseFloatError)&lt;/code&gt; if the string did not represent a valid number. Otherwise, &lt;code&gt;Ok(n)&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the floating-point number represented by &lt;code&gt;src&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307cd046af1477ab94fd9bb2c35318cd3465af83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Error&lt;/code&gt; is a trait representing the basic expectations for error values, i.e., values of type &lt;code&gt;E&lt;/code&gt; in &lt;a href=&quot;../result/enum.result&quot;&gt;&lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;/code&gt;&lt;/a&gt;. Errors must describe themselves through the &lt;a href=&quot;../fmt/trait.display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../fmt/trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; traits, and may provide cause chain information:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012ad78246c1fa110e17ab8f856ccc0b016e8f11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;em&gt;contravariant&lt;/em&gt; over &lt;code&gt;T&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; being a subtype of &lt;code&gt;U&lt;/code&gt; implies that &lt;code&gt;F&amp;lt;U&amp;gt;&lt;/code&gt; is a subtype of &lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ab5ae87cb46b770f2fa820713b250d85127832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;em&gt;covariant&lt;/em&gt; over &lt;code&gt;T&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; being a subtype of &lt;code&gt;U&lt;/code&gt; implies that &lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is a subtype of &lt;code&gt;F&amp;lt;U&amp;gt;&lt;/code&gt; (subtyping &quot;passes through&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315e125a4dab44bf13aa67b5d693feeda29652db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;em&gt;invariant&lt;/em&gt; over &lt;code&gt;T&lt;/code&gt; otherwise (no subtyping relation can be derived)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa85583181bde0bf3cf500699554c0e1c383e48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt; will be converted to &lt;code&gt;Stdio&lt;/code&gt; using &lt;code&gt;Stdio::from&lt;/code&gt; under the hood.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e343104a7dd587d988d170bbd65468574b149f58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fn&lt;/code&gt; borrows values from the environment immutably.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab03fe793e9caead41d64f21baf551347ae2bf93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fn&lt;/code&gt; is implemented automatically by closures which only take immutable references to captured variables or don't capture anything at all, as well as (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (with some caveats, see their documentation for more details). Additionally, for any type &lt;code&gt;F&lt;/code&gt; that implements &lt;code&gt;Fn&lt;/code&gt;, &lt;code&gt;&amp;amp;F&lt;/code&gt; implements &lt;code&gt;Fn&lt;/code&gt;, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17b9ef6427d46f1dc1986b48a964061a03c5df5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnMut&lt;/code&gt; can change the environment because it mutably borrows values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16ca4384cdcbb62b89f104fad6fb04c2fa786f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnMut&lt;/code&gt; is implemented automatically by closures which take mutable references to captured variables, as well as all types that implement &lt;a href=&quot;trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;, e.g., (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (since &lt;code&gt;FnMut&lt;/code&gt; is a supertrait of &lt;a href=&quot;trait.fn&quot;&gt;&lt;code&gt;Fn&lt;/code&gt;&lt;/a&gt;). Additionally, for any type &lt;code&gt;F&lt;/code&gt; that implements &lt;code&gt;FnMut&lt;/code&gt;, &lt;code&gt;&amp;amp;mut F&lt;/code&gt; implements &lt;code&gt;FnMut&lt;/code&gt;, too.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c000f4207e0d7915b5876998e9f4fb9b80cc61ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnOnce&lt;/code&gt; consumes the variables it captures from its enclosing scope, known as the closure&amp;rsquo;s &lt;em&gt;environment&lt;/em&gt;. To consume the captured variables, the closure must take ownership of these variables and move them into the closure when it is defined. The &lt;code&gt;Once&lt;/code&gt; part of the name represents the fact that the closure can&amp;rsquo;t take ownership of the same variables more than once, so it can be called only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9ddc6fdbd0ced3f264442be06b3b6029a50311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FnOnce&lt;/code&gt; is implemented automatically by closure that might consume captured variables, as well as all types that implement &lt;a href=&quot;trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;, e.g., (safe) &lt;a href=&quot;../primitive.fn&quot;&gt;function pointers&lt;/a&gt; (since &lt;code&gt;FnOnce&lt;/code&gt; is a supertrait of &lt;a href=&quot;trait.fnmut&quot;&gt;&lt;code&gt;FnMut&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc3723b12142bb271d60846686451751ed275c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foo&amp;lt;..., T, ...&amp;gt;&lt;/code&gt; is &lt;code&gt;Unsize&amp;lt;Foo&amp;lt;..., U, ...&amp;gt;&amp;gt;&lt;/code&gt; if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89a48c2bbd2b9e10fe4404a5df11694f8370b513" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foo&amp;lt;..., T, ...&amp;gt;&lt;/code&gt; to &lt;code&gt;Foo&amp;lt;..., U, ...&amp;gt;&lt;/code&gt;, when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8923a3fc2992a13f6053d0f427a95dc645f28026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foo&lt;/code&gt; is a struct.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33267139b253d547e3f89cef15fd011011eee07d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&amp;lt;T&amp;gt; for U&lt;/code&gt; implies &lt;a href=&quot;trait.into&quot;&gt;&lt;code&gt;Into&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddbebe3d839f7eb2b3864ae9f444a47906242efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; is reflexive, which means that &lt;code&gt;From&amp;lt;T&amp;gt; for T&lt;/code&gt; is implemented</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383319f7f95c134a88460b2ead3c30903bc8d0ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromIterator&lt;/code&gt;'s &lt;a href=&quot;#tymethod.from_iter&quot;&gt;&lt;code&gt;from_iter&lt;/code&gt;&lt;/a&gt; is rarely called explicitly, and is instead used through &lt;a href=&quot;trait.iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;trait.iterator#method.collect&quot;&gt;&lt;code&gt;collect&lt;/code&gt;&lt;/a&gt; method. See &lt;a href=&quot;trait.iterator#method.collect&quot;&gt;&lt;code&gt;collect&lt;/code&gt;&lt;/a&gt;'s documentation for more examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75846f53aff08074ef6c72fc49fa1c4fe8797481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromStr&lt;/code&gt; does not have a lifetime parameter, and so you can only parse types that do not contain a lifetime parameter themselves. In other words, you can parse an &lt;code&gt;i32&lt;/code&gt; with &lt;code&gt;FromStr&lt;/code&gt;, but not a &lt;code&gt;&amp;amp;i32&lt;/code&gt;. You can parse a struct that contains an &lt;code&gt;i32&lt;/code&gt;, but not one that contains an &lt;code&gt;&amp;amp;i32&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66aa0c9e89ef02c67092cfddaaec72bd30d8b28d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FromStr&lt;/code&gt;'s &lt;a href=&quot;#tymethod.from_str&quot;&gt;&lt;code&gt;from_str&lt;/code&gt;&lt;/a&gt; method is often used implicitly, through &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt; method. See &lt;a href=&quot;../primitive.str#method.parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt;'s documentation for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c26176925aefb6818763fda5280ee8ce487f67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Greater&lt;/code&gt; becomes &lt;code&gt;Less&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655598f674f605df53f4d9a6bfe46ada76406c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash&lt;/code&gt; and &lt;code&gt;Eq&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe79dedf221cf2858e17af245fc79b091ba756e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HashMap&lt;/code&gt; also implements an &lt;a href=&quot;#method.entry&quot;&gt;&lt;code&gt;Entry API&lt;/code&gt;&lt;/a&gt;, which allows for more complex methods of getting, setting, updating and removing keys and their values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b19dbc4b9c8d751ad4499657d279e35039800d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hasher&lt;/code&gt; provides a fairly basic interface for retrieving the generated hash (with &lt;a href=&quot;#tymethod.finish&quot;&gt;&lt;code&gt;finish&lt;/code&gt;&lt;/a&gt;), and writing integers as well as slices of bytes into an instance (with &lt;a href=&quot;#tymethod.write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method.write_u8&quot;&gt;&lt;code&gt;write_u8&lt;/code&gt;&lt;/a&gt; etc.). Most of the time, &lt;code&gt;Hasher&lt;/code&gt; instances are used in conjunction with the &lt;a href=&quot;trait.hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fb536154c8819c191606675325456145440dc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntoIterator&lt;/code&gt;, &lt;code&gt;Iterator&lt;/code&gt; and &lt;code&gt;Option&lt;/code&gt; are always the standard library items here, not whatever those names resolve to in the current scope. The variable names &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;iter&lt;/code&gt; and &lt;code&gt;val&lt;/code&gt; are for exposition only, they do not actually have names the user can type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a588c668ba26d92c7b732ba0ff06810bcb85062d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IpAddrKind&lt;/code&gt; is now a custom data type that we can use elsewhere in our code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7f415c5a109455a86645cb6ea78d4911189621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ipv4Addr&lt;/code&gt; provides a &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation. The four octets are in decimal notation, divided by &lt;code&gt;.&lt;/code&gt; (this is called &quot;dot-decimal notation&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d3a7db8b0872ae22dd1527ee4728bd11774d7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ipv6Addr&lt;/code&gt; provides a &lt;a href=&quot;../str/trait.fromstr&quot;&gt;&lt;code&gt;FromStr&lt;/code&gt;&lt;/a&gt; implementation. There are many ways to represent an IPv6 address in text, but in general, each segments is written in hexadecimal notation, and segments are separated by &lt;code&gt;:&lt;/code&gt;. For more information, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5952&quot;&gt;IETF RFC 5952&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc39b9ce26cf3dd51514d0ac255e7e6d7f67fd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Layout&lt;/code&gt; queries and calculations in general must be correct. Callers of this trait are allowed to rely on the contracts defined on each method, and implementors must ensure such contracts remain true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83555e7cbe36ad60ad279ac0629e9090346e6073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Less&lt;/code&gt; becomes &lt;code&gt;Greater&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0178329d137f2adfc18f37f0a346d39d244bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MBE&lt;/code&gt;: macro-by-example, a macro defined by &lt;code&gt;macro_rules&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12cc17b8174f7d8693a6ae17cb026ece822fccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ManuallyDrop&amp;lt;T&amp;gt;&lt;/code&gt; is subject to the same layout optimizations as &lt;code&gt;T&lt;/code&gt;. As a consequence, it has &lt;em&gt;no effect&lt;/em&gt; on the assumptions that the compiler makes about all values being initialized at their type. In particular, initializing a &lt;code&gt;ManuallyDrop&amp;lt;&amp;amp;mut T&amp;gt;&lt;/code&gt; with &lt;a href=&quot;fn.zeroed&quot;&gt;&lt;code&gt;mem::zeroed&lt;/code&gt;&lt;/a&gt; is undefined behavior. If you need to handle uninitialized data, use &lt;a href=&quot;union.maybeuninit&quot;&gt;&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7be5255721703bf2a7217d3b0692596360f6da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; can be used to initialize a large array element-by-element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31daa1c8e82b9004085b19cefd5259e1e13e6df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; is guaranteed to have the same size, alignment, and ABI as &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0367dbf80d1202f89cd18ec11ce47396c22ecf8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaybeUninit&amp;lt;T&amp;gt;&lt;/code&gt; serves to enable unsafe code to deal with uninitialized data. It is a signal to the compiler indicating that the data here might &lt;em&gt;not&lt;/em&gt; be initialized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33ad928c15c4da9b0715ea0b6157806e30e123a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Move&lt;/code&gt; includes an anonymous struct inside it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa57fa54bfe82ae00367e667533cb5dc06e6bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mul&lt;/code&gt;tipliable rational numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7959a136ea4b63039b7e2f3e911b1544014ef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NAN&lt;/code&gt; if the number is &lt;code&gt;NAN&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db30cc3f5c77b82d9c32d074801cc91e5a3c601" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NT&lt;/code&gt;: non-terminal, the various &quot;meta-variables&quot; or repetition matchers that can appear in a matcher, specified in MBE syntax with a leading &lt;code&gt;$&lt;/code&gt; character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af4fad001f4ddd0b0dc1936058a444336074665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NonNull&lt;/code&gt; pointers are not &lt;code&gt;Send&lt;/code&gt; because the data they reference may be aliased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783f4012f263c6d38d1e6e5902a75bd66d94c784" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NonNull&lt;/code&gt; pointers are not &lt;code&gt;Sync&lt;/code&gt; because the data they reference may be aliased.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11aafbb7d832b9c7331aeec723b4939e40d973e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; if &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23eeefc5377ad42d7348cfcb4d65bd70faa5f4b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt; will be mapped to &lt;code&gt;Ok(None)&lt;/code&gt;. &lt;code&gt;Some(Ok(_))&lt;/code&gt; and &lt;code&gt;Some(Err(_))&lt;/code&gt; will be mapped to &lt;code&gt;Ok(Some(_))&lt;/code&gt; and &lt;code&gt;Err(_)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915fe41279fa519186a0735c633ac7fe9d481748" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;None&lt;/code&gt;: the end of the input was reached unexpectedly. &lt;code&gt;self.valid_up_to()&lt;/code&gt; is 1 to 3 bytes from the end of the input. If a byte stream (such as a file or a network socket) is being decoded incrementally, this could be a valid &lt;code&gt;char&lt;/code&gt; whose UTF-8 byte sequence is spanning multiple chunks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b8d9eda27eb8d4bd5f3d04ac9401f4b91750c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ok(None)&lt;/code&gt; will be mapped to &lt;code&gt;None&lt;/code&gt;. &lt;code&gt;Ok(Some(_))&lt;/code&gt; and &lt;code&gt;Err(_)&lt;/code&gt; will be mapped to &lt;code&gt;Some(Ok(_))&lt;/code&gt; and &lt;code&gt;Some(Err(_))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50d3586e6c9243f2516d60ce5cb260352ecca01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ord&lt;/code&gt; requires that the type also be &lt;code&gt;PartialOrd&lt;/code&gt; and &lt;code&gt;Eq&lt;/code&gt; (which requires &lt;code&gt;PartialEq&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156171edab2619ca1f591634d596d0390d1448a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsString&lt;/code&gt; and &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;OsStr&lt;/code&gt;&lt;/a&gt; bridge this gap by simultaneously representing Rust and platform-native string values, and in particular allowing a Rust string to be converted into an &quot;OS&quot; string with no cost if possible. A consequence of this is that &lt;code&gt;OsString&lt;/code&gt; instances are &lt;em&gt;not&lt;/em&gt;&lt;code&gt;NUL&lt;/code&gt; terminated; in order to pass to e.g., Unix system call, you should create a &lt;a href=&quot;struct.cstr&quot;&gt;&lt;code&gt;CStr&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab6ecc524aeedeb6977fa8e601878b3f968350c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsString&lt;/code&gt; is to &lt;a href=&quot;struct.osstr&quot;&gt;&lt;code&gt;&amp;amp;OsStr&lt;/code&gt;&lt;/a&gt; as &lt;a href=&quot;../string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is to &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt;: the former in each pair are owned strings; the latter are borrowed references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d78c5d1c02d65262ec97b4d65b29498f3d873b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsStringExt&lt;/code&gt; and &lt;code&gt;OsStrExt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a4a583cad72c98dc82bd9bdcd03b3c1ffc4439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PanicInfo&lt;/code&gt; structure is passed to a panic hook set by the &lt;a href=&quot;fn.set_hook&quot;&gt;&lt;code&gt;set_hook&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5355736e95ea9f89f34c24a16f0da9ff491cc24c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialOrd&lt;/code&gt; only requires implementation of the &lt;code&gt;partial_cmp&lt;/code&gt; method, with the others generated from default implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c163a31b293bc0f90dbc0d3d9ad213bf0fa8b3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PartialOrd&lt;/code&gt; requires your type to be &lt;code&gt;PartialEq&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0000dadfbd8d07c0837fb6341b4995596c3f66f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Quit&lt;/code&gt; has no data associated with it at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477368f614c73c4be43d992ee9d7a086ded6132f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RandomState&lt;/code&gt; is the default state for &lt;a href=&quot;struct.hashmap&quot;&gt;&lt;code&gt;HashMap&lt;/code&gt;&lt;/a&gt; types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300e865358f1f64dc664450490b9d983ca1d9f7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RangeBounds&lt;/code&gt; is implemented by Rust's built-in range types, produced by range syntax like &lt;code&gt;..&lt;/code&gt;, &lt;code&gt;a..&lt;/code&gt;, &lt;code&gt;..b&lt;/code&gt;, &lt;code&gt;..=c&lt;/code&gt;, &lt;code&gt;d..e&lt;/code&gt;, or &lt;code&gt;f..=g&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1faca3408d5c131744d9b932a5c73012f3d7de47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RangeFull&lt;/code&gt; is primarily used as a &lt;a href=&quot;../slice/trait.sliceindex&quot;&gt;slicing index&lt;/a&gt;, its shorthand is &lt;code&gt;..&lt;/code&gt;. It cannot serve as an &lt;a href=&quot;../iter/trait.intoiterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; because it doesn't have a starting point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a42f09004e96cf6202905726dbe7dcd6ccc932c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; automatically dereferences to &lt;code&gt;T&lt;/code&gt; (via the &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt; trait), so you can call &lt;code&gt;T&lt;/code&gt;'s methods on a value of type &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt;. To avoid name clashes with &lt;code&gt;T&lt;/code&gt;'s methods, the methods of &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;&lt;/a&gt; itself are associated functions, called using function-like syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f7a75054dc4c36a2bc2db0dffdcdd788f598ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt; enables multiple owners of the same data; &lt;code&gt;Box&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; have single owners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831558b739e532085ab6201badbe8889d3c9e71f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rc&amp;lt;T&amp;gt;&lt;/code&gt;, a reference counting type that enables multiple ownership</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978d0ef1c9d7d27ecdcc7b7ab39455a46f40b737" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ref&amp;lt;T&amp;gt;&lt;/code&gt; and &lt;code&gt;RefMut&amp;lt;T&amp;gt;&lt;/code&gt;, accessed through &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;, a type that enforces the borrowing rules at runtime instead of compile time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2052eaf25ad74826ae3983e8206bd7160340800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; uses Rust's lifetimes to implement 'dynamic borrowing', a process whereby one can claim temporary, exclusive, mutable access to the inner value. Borrows for &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt;s are tracked 'at runtime', unlike Rust's native reference types which are entirely tracked statically, at compile time. Because &lt;code&gt;RefCell&amp;lt;T&amp;gt;&lt;/code&gt; borrows are dynamic it is possible to attempt to borrow a value that is already mutably borrowed; when this happens it results in thread panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50836f42761b93ecdbdac8100e6aca1a0f43b1f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Result&lt;/code&gt; is a type that represents either success (&lt;a href=&quot;enum.result#variant.Ok&quot;&gt;&lt;code&gt;Ok&lt;/code&gt;&lt;/a&gt;) or failure (&lt;a href=&quot;enum.result#variant.Err&quot;&gt;&lt;code&gt;Err&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d8e6a1f4953bc20e73c3f8710d8ad67773fb16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt; - a type alias for the type implementing a trait</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ad95f6e9cfdf323163cfd3b048d2504d3f7047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt; can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d693ccf52aaf5695067d6c3c0bed48de9af9b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Self&lt;/code&gt;, with a capital &quot;S&quot;, is used to refer to the implementing type within &lt;a href=&quot;items/traits&quot;&gt;traits&lt;/a&gt; and &lt;a href=&quot;items/implementations&quot;&gt;implementations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a098ae52f47bddf77e085753871e1316217a9a15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sized&lt;/code&gt; or &lt;a href=&quot;../trait-bounds#sized&quot;&gt;&lt;code&gt;?Sized&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b74787cd7ab814efe04b896e2616124e83aff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Some(len)&lt;/code&gt;: an unexpected byte was encountered. The length provided is that of the invalid byte sequence that starts at the index given by &lt;code&gt;valid_up_to()&lt;/code&gt;. Decoding should resume after that sequence (after inserting a &lt;a href=&quot;../char/constant.replacement_character&quot;&gt;&lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt;&lt;/a&gt;) in case of lossy decoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f4ec3935609d0a1340a6fe98f067507f55e64b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Some(t)&lt;/code&gt; if &lt;code&gt;predicate&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; (where &lt;code&gt;t&lt;/code&gt; is the wrapped value), and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb371bcb42db156cc20c9b2539c5bd112f770f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s are always valid UTF-8. This has a few implications, the first of which is that if you need a non-UTF-8 string, consider &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;&lt;code&gt;OsString&lt;/code&gt;&lt;/a&gt;. It is similar, but without the UTF-8 constraint. The second implication is that you cannot index into a &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ca11bc923ad94c1f81ca12133091fdf7fb3e9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s have an internal buffer to hold their data. The capacity is the length of that buffer, and can be queried with the &lt;a href=&quot;#method.capacity&quot;&gt;&lt;code&gt;capacity&lt;/code&gt;&lt;/a&gt; method. This method creates an empty &lt;code&gt;String&lt;/code&gt;, but one with an initial buffer that can hold &lt;code&gt;capacity&lt;/code&gt; bytes. This is useful when you may be appending a bunch of data to the &lt;code&gt;String&lt;/code&gt;, reducing the number of reallocations it needs to do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d31a0f49bc10c2c8b7f59ea2435dec22c6da899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;s implement &lt;a href=&quot;../ops/trait.deref&quot;&gt;&lt;code&gt;Deref&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;Target=str&amp;gt;&lt;/code&gt;, and so inherit all of &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;'s methods. In addition, this means that you can pass a &lt;code&gt;String&lt;/code&gt; to a function which takes a &lt;a href=&quot;../primitive.str&quot;&gt;&lt;code&gt;&amp;amp;str&lt;/code&gt;&lt;/a&gt; by using an ampersand (&lt;code&gt;&amp;amp;&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616f59747afb4096178feec1378bc12c2c0ee16f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sub&lt;/code&gt;tractable points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a9778b6f44e77e521ded615fc1882560f44a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T: 'a&lt;/code&gt; means that all lifetime parameters of &lt;code&gt;T&lt;/code&gt; outlive &lt;code&gt;'a&lt;/code&gt;. For example if &lt;code&gt;'a&lt;/code&gt; is an unconstrained lifetime parameter then &lt;code&gt;i32: 'static&lt;/code&gt; and &lt;code&gt;&amp;amp;'static str: 'a&lt;/code&gt; are satisfied but &lt;code&gt;Vec&amp;lt;&amp;amp;'a ()&amp;gt;: 'static&lt;/code&gt; is not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459321b2a9a0d46f2b93aa237d46d7fa1575a399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;Unsize&amp;lt;U&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df70334b96e838c208442527493940829a7f1e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; implicitly implements all the (immutable) methods of the type &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d4eb013434bfef79667e4806b748592289401e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; implicitly implements all the (mutable) methods of the type &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8a68b56cb5c034ba3c86ed6d0f7016d3a97d31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is &lt;code&gt;Unsize&amp;lt;dyn Trait&amp;gt;&lt;/code&gt; when &lt;code&gt;T: Trait&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7121c00e015ba8b560db77196ee3ca1b24ea1e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is not part of the type of any other fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61515edc51de8ef5e91841306c65e35babceaccf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; is a subtype of &lt;code&gt;U&lt;/code&gt; (&lt;em&gt;reflexive case&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b3e0994f3c0ba54fa6a0a7c157de1659a4226e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; to &lt;code&gt;U&lt;/code&gt;, when &lt;code&gt;U&lt;/code&gt; is a trait object type and either &lt;code&gt;T&lt;/code&gt; implements &lt;code&gt;U&lt;/code&gt; or &lt;code&gt;T&lt;/code&gt; is a trait object for a subtrait of &lt;code&gt;U&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298803983d7a40457357f8582fc151ce8dd27899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt;'s inherent methods (methods implemented directly on &lt;code&gt;T&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b132400d295073db220415b7d295816af763bfd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T_1&lt;/code&gt; to &lt;code&gt;T_3&lt;/code&gt; where &lt;code&gt;T_1&lt;/code&gt; coerces to &lt;code&gt;T_2&lt;/code&gt; and &lt;code&gt;T_2&lt;/code&gt; coerces to &lt;code&gt;T_3&lt;/code&gt; (&lt;em&gt;transitive case&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717ecb3d8358231a31f184dade54b32195c64495" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TraitObject&lt;/code&gt; is guaranteed to match layouts, but it is not the type of trait objects (e.g., the fields are not directly accessible on a &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt;) nor does it control that layout (changing the definition will not change the layout of a &lt;code&gt;&amp;amp;SomeTrait&lt;/code&gt;). It is only designed to be used by unsafe code that needs to manipulate the low-level details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2614973a3f96d521b7753283f54483e26f0f27d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TryFrom&amp;lt;T&amp;gt; for U&lt;/code&gt; implies &lt;a href=&quot;trait.tryinto&quot;&gt;&lt;code&gt;TryInto&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;U&amp;gt; for T&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262c3578f5bc85ed6705e91099903717cf6ab0ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TryFrom&amp;lt;T&amp;gt;&lt;/code&gt; can be implemented as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f500c3e10d9f1c53160e520c60fcf93d9f0d8dc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+0009&lt;/code&gt; (horizontal tab, &lt;code&gt;'\t'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eee371b065164c50fc78edf6a91510999663db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000A&lt;/code&gt; (line feed, &lt;code&gt;'\n'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e254e5f09bc8e41e5fff183f48730d4887bab90d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000B&lt;/code&gt; (vertical tab)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b67d8e4ab5ad057e66f3ef97b1b20995c8e588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000C&lt;/code&gt; (form feed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13303bc8e2167053bc8b070c03cbab754f8efc31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+000D&lt;/code&gt; (carriage return, &lt;code&gt;'\r'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffedd7f81712ec4095c8437506cc5c5d894b252b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+0020&lt;/code&gt; (space, &lt;code&gt;' '&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6e484290e68200d792b8e5c7559c03888b646b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+0085&lt;/code&gt; (next line)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b098899ac0fd9b28e8a3283063bef0993f71a603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+200E&lt;/code&gt; (left-to-right mark)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7387c90d6570a18e4ef3f831c6218976f9de9544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+200F&lt;/code&gt; (right-to-left mark)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b820fd5b508f4cad2f1823a9001f061008054109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+2028&lt;/code&gt; (line separator)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef829c2c981395adf912e910538e5a3686cb3a80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+2029&lt;/code&gt; (paragraph separator)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8cead9a1dbbe85fed8f27401392602cee3455e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U+FFFD REPLACEMENT CHARACTER&lt;/code&gt; (�) is used in Unicode to represent a decoding error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6195c16a97daf5384a4b9aed4a907cef021630de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unpin&lt;/code&gt; has no consequence at all for non-pinned data. In particular, &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; happily moves &lt;code&gt;!Unpin&lt;/code&gt; data (it works for any &lt;code&gt;&amp;amp;mut T&lt;/code&gt;, not just when &lt;code&gt;T: Unpin&lt;/code&gt;). However, you cannot use &lt;a href=&quot;../mem/fn.replace&quot;&gt;&lt;code&gt;mem::replace&lt;/code&gt;&lt;/a&gt; on data wrapped inside a &lt;a href=&quot;../pin/struct.pin&quot;&gt;&lt;code&gt;Pin&amp;lt;P&amp;gt;&lt;/code&gt;&lt;/a&gt; because you cannot get the &lt;code&gt;&amp;amp;mut T&lt;/code&gt; you need for that, and &lt;em&gt;that&lt;/em&gt; is what makes this system work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efff079b40f2baf685ae584c91dd28f267624b15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; is a type that wraps some &lt;code&gt;T&lt;/code&gt; and indicates unsafe interior operations on the wrapped type. Types with an &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; field are considered to have an 'unsafe interior'. The &lt;code&gt;UnsafeCell&amp;lt;T&amp;gt;&lt;/code&gt; type is the only legal way to obtain aliasable data that is considered mutable. In general, transmuting an &lt;code&gt;&amp;amp;T&lt;/code&gt; type into an &lt;code&gt;&amp;amp;mut T&lt;/code&gt; is considered undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4346125b6b7807fdd36f09c881261f6029bbe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unsize&lt;/code&gt; is implemented for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d63e0fbda6d98ae184316db47dce145c405831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Unsize&lt;/code&gt; is used along with &lt;a href=&quot;../ops/trait.coerceunsized&quot;&gt;&lt;code&gt;ops::CoerceUnsized&lt;/code&gt;&lt;/a&gt; to allow &quot;user-defined&quot; containers such as &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;rc::Rc&lt;/code&gt;&lt;/a&gt; to contain dynamically-sized types. See the &lt;a href=&quot;https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md&quot;&gt;DST coercion RFC&lt;/a&gt; and &lt;a href=&quot;https://doc.rust-lang.org/nomicon/coercions.html&quot;&gt;the nomicon entry on coercion&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c038f2912a5d6313a3fd98da687fed06b926624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; does not currently guarantee the order in which elements are dropped. The order has changed in the past and may change again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0842430b9dc722bdd51043a8a8a1dedc6cfbc53f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; does not guarantee any particular growth strategy when reallocating when full, nor when &lt;a href=&quot;struct.vec#method.reserve&quot;&gt;&lt;code&gt;reserve&lt;/code&gt;&lt;/a&gt; is called. The current strategy is basic and it may prove desirable to use a non-constant growth factor. Whatever strategy is used will of course guarantee &lt;code&gt;O(1)&lt;/code&gt; amortized &lt;a href=&quot;struct.vec#method.push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2045d6d707efc5c8342c60437b1aef36bf90f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; will never automatically shrink itself, even if completely empty. This ensures no unnecessary allocations or deallocations occur. Emptying a &lt;code&gt;Vec&lt;/code&gt; and then filling it back up to the same &lt;a href=&quot;struct.vec#method.len&quot;&gt;&lt;code&gt;len&lt;/code&gt;&lt;/a&gt; should incur no calls to the allocator. If you wish to free up unused memory, use &lt;a href=&quot;struct.vec#method.shrink_to_fit&quot;&gt;&lt;code&gt;shrink_to_fit&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c138e62037a41259d18bb337a8b3813b4503afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; will never perform a &quot;small optimization&quot; where elements are actually stored on the stack for two reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1995a9cd88dc9bc07c96596b6994906d449977" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Vec&lt;/code&gt; will not specifically overwrite any data that is removed from it, but also won't specifically preserve it. Its uninitialized memory is scratch space that it may use however it wants. It will generally just do whatever is most efficient or otherwise easy to implement. Do not rely on removed data to be erased for security purposes. Even if you drop a &lt;code&gt;Vec&lt;/code&gt;, its buffer may simply be reused by another &lt;code&gt;Vec&lt;/code&gt;. Even if you zero a &lt;code&gt;Vec&lt;/code&gt;'s memory first, that may not actually happen because the optimizer does not consider this a side-effect that must be preserved. There is one case which we will not break, however: using &lt;code&gt;unsafe&lt;/code&gt; code to write to the excess capacity, and then increasing the length to match, is always valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb3b0e05d73114df2df4ae4191f2651cf500746" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Weak&lt;/code&gt; is a version of &lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt; that holds a non-owning reference to the managed value. The value is accessed by calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Weak&lt;/code&gt; pointer, which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.arc&quot;&gt;&lt;code&gt;Arc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c854167f674817e7e2de19bb245e924fdad956f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Weak&lt;/code&gt; is a version of &lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt; that holds a non-owning reference to the managed value. The value is accessed by calling &lt;a href=&quot;struct.weak#method.upgrade&quot;&gt;&lt;code&gt;upgrade&lt;/code&gt;&lt;/a&gt; on the &lt;code&gt;Weak&lt;/code&gt; pointer, which returns an &lt;a href=&quot;../option/enum.option&quot;&gt;&lt;code&gt;Option&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb59f191736e86bda790823d721bf254904d63c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Write&lt;/code&gt; includes a single &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8baa7d8ca586d34e346b689f942a7f8f4bf972c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.upperhex&quot;&gt;&lt;code&gt;UpperHex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a8b92bdff1c5b19de16d72892759bdc4ccc055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff29fd323ba01b60e1508eddcf6f34256380d29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X?&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.debug&quot;&gt;&lt;code&gt;Debug&lt;/code&gt;&lt;/a&gt; with upper-case hexadecimal integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc583d8cf6721f3d3948d82304abe45ae3702d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;ArrayElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../attributes&quot;&gt;&lt;em&gt;InnerAttribute&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;*&lt;/sup&gt;&lt;em&gt;ArrayElements&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="429917b2fa19fc7d9c387c7fea97018669352a19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f74d282f16d5a862c7eba2396135aaf979e09b75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65c13c020f3ab6f9ac3bfc9026ccfce808c33adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt; (&lt;code&gt;,&lt;/code&gt;&lt;a href=&quot;patterns#patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;)&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;,&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e6133de9165856bec31a963923494e952b07a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f98369e91ab28104a3ef6d5c09ad0caf7644282c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[T; N]&lt;/code&gt; is &lt;code&gt;Unsize&amp;lt;[T]&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[T; N]&lt;/code&gt; is &lt;code&gt;Unsize&amp;lt;[T]&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="850e65c4e16490294eac7e4adabff47857d4f401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[T; n]&lt;/code&gt; to &lt;code&gt;[T]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[T; n]&lt;/code&gt; to &lt;code&gt;[T]&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="20de50777f1e5c511744c9e88dd1c983a0dfc8f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[T]&lt;/code&gt; and &lt;code&gt;[T; n]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[T]&lt;/code&gt; and &lt;code&gt;[T; n]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="846683b8124bfad974b84f7fc9e39451ea401d22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\'&lt;/code&gt; | &lt;code&gt;\&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\'&lt;/code&gt; | &lt;code&gt;\&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0188d46c969099ec650ba736f85a9eff66c95ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\&lt;/code&gt;&lt;em&gt;followed by&lt;/em&gt; \n</source>
          <target state="translated">&lt;code&gt;\&lt;/code&gt;&lt;em&gt;followed by&lt;/em&gt; \n</target>
        </trans-unit>
        <trans-unit id="e1e0c067924632f3f30abfaccf8c2bbb3ddf0077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u{&lt;/code&gt; ( HEX_DIGIT &lt;code&gt;_&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt; )&lt;sup&gt;1..6&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\u{&lt;/code&gt; ( HEX_DIGIT &lt;code&gt;_&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt; )&lt;sup&gt;1..6&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7bfa60964b39253167d48d4743520e2dbebadd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x&lt;/code&gt; HEX_DIGIT HEX_DIGIT</source>
          <target state="translated">&lt;code&gt;\x&lt;/code&gt; HEX_DIGIT HEX_DIGIT</target>
        </trans-unit>
        <trans-unit id="776836237567e80ae21f14d79d75a578ed148885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\x&lt;/code&gt; OCT_DIGIT HEX_DIGIT</source>
          <target state="translated">&lt;code&gt;\x&lt;/code&gt; OCT_DIGIT HEX_DIGIT</target>
        </trans-unit>
        <trans-unit id="00300a7210e800449737f4642ef57d12724ef0ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;^&lt;/code&gt; - the argument is center-aligned in &lt;code&gt;width&lt;/code&gt; columns</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; - the argument is center-aligned in &lt;code&gt;width&lt;/code&gt; columns</target>
        </trans-unit>
        <trans-unit id="01c21f9f1ecd54e3162bbf94eb10f3ea34601934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_first&lt;/code&gt; is declared first and &lt;code&gt;_second&lt;/code&gt; is declared second, so &lt;code&gt;main&lt;/code&gt; will print &lt;code&gt;Declared second!&lt;/code&gt; and then &lt;code&gt;Declared first!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_first&lt;/code&gt; is declared first and &lt;code&gt;_second&lt;/code&gt; is declared second, so &lt;code&gt;main&lt;/code&gt; will print &lt;code&gt;Declared second!&lt;/code&gt; and then &lt;code&gt;Declared first!&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="ead7d5541adaf8ebdf41a6d508ba49b3657a05af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a.clone_from(&amp;amp;b)&lt;/code&gt; is equivalent to &lt;code&gt;a = b.clone()&lt;/code&gt; in functionality, but can be overridden to reuse the resources of &lt;code&gt;a&lt;/code&gt; to avoid unnecessary allocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffa81ddece0c699f61e73446e0e7a7aa7574e23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addr&lt;/code&gt; is an address of the remote host. Anything which implements &lt;a href=&quot;trait.tosocketaddrs&quot;&gt;&lt;code&gt;ToSocketAddrs&lt;/code&gt;&lt;/a&gt; trait can be supplied for the address; see this trait documentation for concrete examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc47904170ab5b0947d6455163b2615103c6272c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;advance_n_and_return_first&lt;/code&gt; is the equivalent of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7334bdce0fb332ca2b9eb380c9d263285a648deb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;align&lt;/code&gt; must be a power of two,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f86fa079c8f6138b2948bc3a466198e0c28aaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;align&lt;/code&gt; must not be zero,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fab09c70c7b6a56c907190780229e35909a10b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;false&lt;/code&gt;, given that no matter what else happens, the result will also be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fdfe232439033a2e4566ec9bed261742cfd878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if they all return &lt;code&gt;true&lt;/code&gt;, then so does &lt;code&gt;all()&lt;/code&gt;. If any of them return &lt;code&gt;false&lt;/code&gt;, it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1ea7e4ca546145c30e0a3fd9f9951b3652afa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all()&lt;/code&gt; with a comma separated list of configuration predicates. It is false if at least one predicate is false. If there are no predicates, it is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f015cbe9a59d008db093f857475ae77d4f61b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;all&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b46b8ce0cfccf0e88b3ec867444fdf83d7309de1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;allow(C)&lt;/code&gt; overrides the check for &lt;code&gt;C&lt;/code&gt; so that violations will go unreported,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab10c9c448596fc24766cf727d854d069d7fbd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as it finds a &lt;code&gt;true&lt;/code&gt;, given that no matter what else happens, the result will also be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45232bdd9c1061a33a2956e0f63f7a3b670af6e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if any of them return &lt;code&gt;true&lt;/code&gt;, then so does &lt;code&gt;any()&lt;/code&gt;. If they all return &lt;code&gt;false&lt;/code&gt;, it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8003eeaf86431d6298a4799cddebf1b8310bb6fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any()&lt;/code&gt; with a comma separated list of configuration predicates. It is true if at least one predicate is true. If there are no predicates, it is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8252602ecba2599bff29ba4c7c605c0da224c55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicateList&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6f7408dc17f99f8be4ae7d8fca02fa880f9bdb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8b787affc576d7693662632771a998f7ba8558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; - perform primitive casting, disambiguate the specific trait containing an item, or rename items in &lt;code&gt;use&lt;/code&gt; and &lt;code&gt;extern crate&lt;/code&gt; statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeaa965c6322de30e3e4c0f88de200e922739361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; can be used to explicitly perform &lt;a href=&quot;../type-coercions&quot;&gt;coercions&lt;/a&gt;, as well as the following additional casts. Here &lt;code&gt;*T&lt;/code&gt; means either &lt;code&gt;*const T&lt;/code&gt; or &lt;code&gt;*mut T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd35a3eaa74331985536515255fb948db60d6b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt; is most commonly used to turn primitive types into other primitive types, but it has other uses that include turning pointers into addresses, addresses into pointers, and pointers into other pointers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0475a9c790352afea85606e3a2f0253eafd3d770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&quot;&lt;/code&gt; ( ASCII_FOR_STRING | BYTE_ESCAPE | STRING_CONTINUE )&lt;sup&gt;*&lt;/sup&gt;&lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357cc0ea4f6c2e9ad4f7141bf09487897efa2375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b'&lt;/code&gt; ( ASCII_FOR_CHAR | BYTE_ESCAPE ) &lt;code&gt;'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b35ff15cc54c4c0deeedc5a4e82da6015895f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.binary&quot;&gt;&lt;code&gt;Binary&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0613c183b879d81b0e8fae69d3fd046a9b6a2887" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;b&lt;/code&gt; formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89206d3ef618fadc40cb3722fac94c14af954f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; must be byte positions within the string slice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2c09c340ed2826d14ffd0dbef2f7454022fbb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; must lie on UTF-8 sequence boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3e233163d179b69b52a9ca206e309212607ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt; must come before &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdce75ceab50c820ea00390df58dce8a3fe576b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; | &lt;code&gt;expr&lt;/code&gt; | &lt;code&gt;ident&lt;/code&gt; | &lt;code&gt;item&lt;/code&gt; | &lt;code&gt;lifetime&lt;/code&gt; | &lt;code&gt;literal&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23d2e85acbaa31cd6476f62fbdac21e846aa86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt;: a &lt;a href=&quot;expressions/block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6af537efa449f86652366dbccb6b304bc9b013d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; implements various traits, such as &lt;a href=&quot;ops/trait.bitand&quot;&gt;&lt;code&gt;BitAnd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ops/trait.bitor&quot;&gt;&lt;code&gt;BitOr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ops/trait.not&quot;&gt;&lt;code&gt;Not&lt;/code&gt;&lt;/a&gt;, etc., which allow us to perform boolean operations using &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;|&lt;/code&gt; and &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c868f2edb1830849f09690bfbf6074c6cf7e4a4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;char&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69c0189a6ed72034cc572024f62efafca7e9350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;br&quot;...&quot;&lt;/code&gt;, &lt;code&gt;br#&quot;...&quot;#&lt;/code&gt;, &lt;code&gt;br##&quot;...&quot;##&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3495df73aacf73612f41eef0eae4d64842977c4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;br&lt;/code&gt; RAW_BYTE_STRING_CONTENT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1415f75d8141c087ecbb64adf109fe5800330af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; - exit a loop immediately</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4163b08d828dcfb747f95cc2ffb4d2aedbbb408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; and &lt;code&gt;continue&lt;/code&gt; keywords can be used as normal inside closures as long as they are also contained within a loop. To halt the execution of a closure you should instead use a return statement. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879c6cd1cd83ed4c5e732ee5de34df4cca12090e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; and loop values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8d47f15ad7f4c5aad4feabd00f8d968cb73853" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef76ab866ec310493cb4db41e682cd8d8b9ce839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; must include a label when used in the condition of a &lt;code&gt;while&lt;/code&gt; loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367aea6a45bacadea76f3d04aaf6f94a411b972d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt; and &lt;code&gt;return&lt;/code&gt; expressions also have type &lt;code&gt;!&lt;/code&gt;. For example we are allowed to write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa523fa95169e180a28c499ce226b2602b4f994e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;break&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="56c451f1ed7f4e9f32871e1b89f15458878ceff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt;'s File Location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6621293517f69acbfc27071a2e1bc022f97cb122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt;'s Module Path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ec0f562729ffc6b7935d10cab9335e027674fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_once&lt;/code&gt; was called, but has not yet completed,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddd88f28edefd6a01cc85e1dd075eae23df30a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call_once&lt;/code&gt; was not called at all,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7e7debfc26cbb9d1a6b86d7f8f085262ebce65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capacity&lt;/code&gt; needs to be the capacity that the pointer was allocated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec326518d31ce666e8a53c21a4b0c6e6f5844a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;capacity&lt;/code&gt; needs to be the correct value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45d1df9ba27e19707e079c2120795b398f3983f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfg&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cfg&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca23ba2a4dbea64080c773166d35b0ed16d74a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cfg_attr&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;,&lt;/code&gt;&lt;em&gt;CfgAttrs&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;cfg_attr&lt;/code&gt;&lt;code&gt;(&lt;/code&gt;&lt;em&gt;ConfigurationPredicate&lt;/em&gt;&lt;code&gt;,&lt;/code&gt;&lt;em&gt;CfgAttrs&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c3bf2408893e79c0578315d534c26bc24b41dfe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chain()&lt;/code&gt; will return a new iterator which will first iterate over values from the first iterator and then over values from the second iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad66e7abb0a2d2a54689cb041c669b7c7fc9711e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char::Searcher&lt;/code&gt; is a &lt;code&gt;DoubleEndedSearcher&lt;/code&gt; because searching for a &lt;code&gt;char&lt;/code&gt; only requires looking at one at a time, which behaves the same from both ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e26a30a33af896db21fcd418384804b3ae0828c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt; casts to the value of the code point, then uses a numeric cast if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b719e31245d824b02c35e8d26f7746c620db22a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt; is always four bytes in size. This is a different representation than a given character would have as part of a &lt;a href=&quot;string/struct.string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d274791f61f08274ced2ead9795968e9729f1af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;bool&lt;/code&gt; and &lt;a href=&quot;types/never&quot;&gt;&lt;code&gt;!&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cbac6d455a56de8f9eacec13e52059b85da18d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collect()&lt;/code&gt; can take anything iterable, and turn it into a relevant collection. This is one of the more powerful methods in the standard library, used in a variety of contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2669bb73e6b1d612983f6cd72c4c2b94cc9b68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_and_swap&lt;/code&gt; also takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. Notice that even when using &lt;a href=&quot;enum.ordering#variant.AcqRel&quot;&gt;&lt;code&gt;AcqRel&lt;/code&gt;&lt;/a&gt;, the operation might fail and hence just perform an &lt;code&gt;Acquire&lt;/code&gt; load, but not have &lt;code&gt;Release&lt;/code&gt; semantics. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; if it happens, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb78629997fe1d57ec115a672b2032c050ad20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_exchange&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering if the operation succeeds while the second describes the required ordering when the operation fails. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; as success ordering makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the successful load &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;. The failure ordering can only be &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; and must be equivalent to or weaker than the success ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45f64040fa6d1dde8548ee9d2d6b5ff234606cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compare_exchange_weak&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering if the operation succeeds while the second describes the required ordering when the operation fails. Using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; as success ordering makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the successful load &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;. The failure ordering can only be &lt;a href=&quot;enum.ordering#variant.SeqCst&quot;&gt;&lt;code&gt;SeqCst&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt; and must be equivalent to or weaker than the success ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e1cf70d1ca30178a0d573e5ad551798d54df2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiler_fence&lt;/code&gt; does not emit any machine code, but restricts the kinds of memory re-ordering the compiler is allowed to do. Specifically, depending on the given &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; semantics, the compiler may be disallowed from moving reads or writes from before or after the call to the other side of the call to &lt;code&gt;compiler_fence&lt;/code&gt;. Note that it does &lt;strong&gt;not&lt;/strong&gt; prevent the &lt;em&gt;hardware&lt;/em&gt; from doing such re-ordering. This is not a problem in a single-threaded, execution context, but when other threads may modify memory at the same time, stronger synchronization primitives such as &lt;a href=&quot;fn.fence&quot;&gt;&lt;code&gt;fence&lt;/code&gt;&lt;/a&gt; are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad798660616379b0e659fc9aea1fbd6cc6514d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compiler_fence&lt;/code&gt; is generally only useful for preventing a thread from racing &lt;em&gt;with itself&lt;/em&gt;. That is, if a given thread is executing one piece of code, and is then interrupted, and starts executing code elsewhere (while still in the same thread, and conceptually still on the same core). In traditional programs, this can only occur when a signal handler is registered. In more low-level code, such situations can also arise when handling interrupts, when implementing green threads with pre-emption, etc. Curious readers are encouraged to read the Linux kernel's discussion of &lt;a href=&quot;https://www.kernel.org/doc/Documentation/memory-barriers.txt&quot;&gt;memory barriers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02e4bab50b4f981a1c7e7e32d74e516ea367f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;complex NT&lt;/code&gt;: a repetition matching non-terminal, specified via repetition operators (&lt;code&gt;\*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3869485a500fc75cacbdba4b9f8c404da090dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; ( &lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt; | &lt;code&gt;_&lt;/code&gt; ) &lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1549ff374b5ebdcea81375e3f343804f5b3c5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; - define constant items or constant raw pointers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340758aa22cfd73950ac0e13e516bd1cec191c38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; and &lt;code&gt;static&lt;/code&gt; mean different things. A &lt;code&gt;const&lt;/code&gt; is a compile-time constant, an alias for a literal value. This property means you can match it directly within a pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61e289f776ced5df93e5b0a37771110bf9fc3d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; items looks remarkably similar to &lt;code&gt;static&lt;/code&gt; items, which introduces some confusion as to which one should be used at which times. To put it simply, constants are inlined wherever they're used, making using them identical to simply replacing the name of the const with its value. Static variables on the other hand point to a single location in memory, which all accesses share. This means that, unlike with constants, they can't have destructors, and act as a single value across the entire codebase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f67751d6c2a0da9be462a3eb2622352c2bd588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;code&gt;:&lt;/code&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;Type&lt;/em&gt;&lt;/a&gt; ( &lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt; )&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841cbcdeeab66fb4722b7b0400f1bb8e2de851cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;unsafe&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt; (&lt;code&gt;extern&lt;/code&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;)&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edbd1e6db32e0b534caaa28cd5a2bec38d70299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;container[index]&lt;/code&gt; is actually syntactic sugar for &lt;code&gt;*container.index(index)&lt;/code&gt;, but only when used as an immutable value. If a mutable value is requested, &lt;a href=&quot;trait.indexmut&quot;&gt;&lt;code&gt;IndexMut&lt;/code&gt;&lt;/a&gt; is used instead. This allows nice things such as &lt;code&gt;let value = v[index]&lt;/code&gt; if the type of &lt;code&gt;value&lt;/code&gt; implements &lt;a href=&quot;../marker/trait.copy&quot;&gt;&lt;code&gt;Copy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7922f6af9504dc9e782af79c29fcec29f07a47bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;container[index]&lt;/code&gt; is actually syntactic sugar for &lt;code&gt;*container.index_mut(index)&lt;/code&gt;, but only when used as a mutable value. If an immutable value is requested, the &lt;a href=&quot;trait.index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; trait is used instead. This allows nice things such as &lt;code&gt;v[index] = value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffabd242f9d8704e26604953ecba9b24de0815e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; - continue to the next loop iteration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0696cb116b57c6eb9b11a807f253157cd13a3a7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0beeb61ae0d4aaed192160e85d023c0240a1ddb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt;&lt;a href=&quot;../tokens#lifetimes-and-loop-labels&quot;&gt;LIFETIME_OR_LABEL&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="2138b0c04148fc58311ffc550ac7f06c1bdc9071" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copy&lt;/code&gt; is semantically equivalent to C's &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memmove&quot;&gt;&lt;code&gt;memmove&lt;/code&gt;&lt;/a&gt;, but with the argument order swapped. Copying takes place as if the bytes were copied from &lt;code&gt;src&lt;/code&gt; to a temporary array and then copied from the array to &lt;code&gt;dst&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5280138888afc90db0844cf27c061078c4fda42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copy_nonoverlapping&lt;/code&gt; is semantically equivalent to C's &lt;a href=&quot;https://en.cppreference.com/w/c/string/byte/memcpy&quot;&gt;&lt;code&gt;memcpy&lt;/code&gt;&lt;/a&gt;, but with the argument order swapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3b0484871a409017a3046e83cc932f818725ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt; is in units of T; e.g., a &lt;code&gt;count&lt;/code&gt; of 3 represents a pointer offset of &lt;code&gt;3 * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e364d3d805cbae7765e75b78c4fcbd794d85ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; - link an external crate or a macro variable representing the crate in which the macro is defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1b1a11c74c128aef1900df332f0bcea17de4bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; is also used as in conjunction with &lt;code&gt;pub&lt;/code&gt; to signify that the item it's attached to is public only to other members of the same crate it's in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffb90a99ca4ad20d943dc5f20252cb967816477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;crate&lt;/code&gt; resolves the path relative to the current crate. &lt;code&gt;crate&lt;/code&gt; can only be used as the first segment, without a preceding &lt;code&gt;::&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d894a77e0c2b3d3320a6b0b693417d5746924d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; must be non-null and aligned, even for zero-length slices. One reason for this is that enum layout optimizations may rely on references (including slices of any length) being aligned and non-null to distinguish them from other data. You can obtain a pointer that is usable as &lt;code&gt;data&lt;/code&gt; for zero-length slices using &lt;a href=&quot;../ptr/struct.nonnull#method.dangling&quot;&gt;&lt;code&gt;NonNull::dangling()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d4673a84f7b28e406f0fc9af95309afee4bdc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimited sequence&lt;/code&gt;: a sequence of token trees with appropriate open- and close-delimiters at the start and end of the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a79f15887cb90c07b9ee24e25d320935f6738e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delimiter token&lt;/code&gt;: a token that is meant to divide the end of one fragment and the start of the next fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73c7ab087b23c5e5dec3f19d99f0f663fa6e00d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deny(C)&lt;/code&gt; signals an error after encountering a violation of &lt;code&gt;C&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b817753a2a3c36dba0b52cb148a1d21d3330091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated = &quot;message&quot;&lt;/code&gt; &amp;mdash; Includes the given string in the deprecation message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8feb3b2ad69d6c31751b70259c15452b126e5e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deprecated&lt;/code&gt; &amp;mdash; Issues a generic message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62cbd52bbe281b1702d615a7e288f1d94adb2da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;doc&lt;/code&gt; &amp;mdash; Specifies documentation. See &lt;a href=&quot;https://doc.rust-lang.org/rustdoc/the-doc-attribute.html&quot;&gt;The Rustdoc Book&lt;/a&gt; for more information. &lt;a href=&quot;comments#doc-comments&quot;&gt;Doc comments&lt;/a&gt; are transformed into &lt;code&gt;doc&lt;/code&gt; attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43933bacc6b89a9f817b7115ae0c9b2c7936ef8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;../ptr/index#safety&quot;&gt;valid&lt;/a&gt; for writes of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b028ef783ca568905a249a0d460a81e83c0bc5a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for writes of &lt;code&gt;count * size_of::&amp;lt;T&amp;gt;()&lt;/code&gt; bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4ab832bf8bb7436095248fbd5bba34d72eb11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be &lt;a href=&quot;index#safety&quot;&gt;valid&lt;/a&gt; for writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e81d94a5cf609b14de81727277d5527705074d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be properly aligned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9e5a1b33f89214de414f25bebe0ad6bc131388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dst&lt;/code&gt; must be properly aligned. Use &lt;a href=&quot;fn.write_unaligned&quot;&gt;&lt;code&gt;write_unaligned&lt;/code&gt;&lt;/a&gt; if this is not the case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6acc52d89a95930039e7e1e99b5e670f54ac7ca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dylib&lt;/code&gt; &amp;mdash; Indicates a dynamic library. This is the default if &lt;code&gt;kind&lt;/code&gt; is not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034a6ce0d70ca3e940a1fc63bf893f750f9f1711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn 'static + Trait&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827f9f7bd5f1051a386e0868226b58eb2eda3f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt; - dynamic dispatch to a trait object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a10f1bed70878fd0ba7e8e9181ab78c7bfe373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../trait-bounds&quot;&gt;&lt;em&gt;TraitBound&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6bb65230c2b93b9d2d927f2b34828791b16e81e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;dyn&lt;/code&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;../types#type-expressions&quot;&gt;&lt;em&gt;TypeParamBounds&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ddba4749cbc07e8be9397562ec53f287ea168934" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt; &amp;rArr; &lt;a href=&quot;trait.lowerexp&quot;&gt;&lt;code&gt;LowerExp&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1452095a075a24ee1ad4d6d68ffe669400e190" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt; formatting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6a572ec5fe3819e41313ce8ae770420befd475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;else&lt;/code&gt; - fallback for &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;if let&lt;/code&gt; control flow constructs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b8fd749dd504215bb0cdf1bb6624abc4dc8440" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;empty fragment&lt;/code&gt;: The class of invisible Rust syntax that separates tokens, i.e. whitespace, or (in some lexical contexts), the empty token sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4355176137b0192fb3f628dd27ea1caed4fe3f93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt; - define an enumeration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8832e95d01a4faaf4212c64c70282a2c070cf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enum&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;em&gt;EnumItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;enum&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;a href=&quot;generics#where-clauses&quot;&gt;&lt;em&gt;WhereClause&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;&lt;em&gt;EnumItems&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea3e56fd591be6044f03d9bd0d61079d7ba5b448" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enumerate()&lt;/code&gt; keeps its count as a &lt;a href=&quot;../primitive.usize&quot;&gt;&lt;code&gt;usize&lt;/code&gt;&lt;/a&gt;. If you want to count by a different sized integer, the &lt;a href=&quot;#method.zip&quot;&gt;&lt;code&gt;zip&lt;/code&gt;&lt;/a&gt; function provides similar functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd2e5af21d049a4452c5fb8ab4704b5f8208c2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exec&lt;/code&gt; not returning has the same implications as calling &lt;a href=&quot;../../../process/fn.exit&quot;&gt;&lt;code&gt;process::exit&lt;/code&gt;&lt;/a&gt; &amp;ndash; no destructors on the current stack or any other thread&amp;rsquo;s stack will be run. Therefore, it is recommended to only call &lt;code&gt;exec&lt;/code&gt; at a point where it is fine to not run any destructors. Note, that the &lt;code&gt;execvp&lt;/code&gt; syscall independently guarantees that all memory is freed and all file descriptors with the &lt;code&gt;CLOEXEC&lt;/code&gt; option (set by default on all file descriptors opened by the standard library) are closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab28125fd037c386267b67a9a34848916b30f004" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;export_name&lt;/code&gt; attributes may not contain null characters (&lt;code&gt;\0&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c417cae1cabbe8c4d775d30bddeccbba842d7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr.0&lt;/code&gt;, &lt;code&gt;expr.1&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1abeb015eeec94ebb32cf39bdbed03229503438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr&lt;/code&gt; and &lt;code&gt;stmt&lt;/code&gt; may only be followed by one of: &lt;code&gt;=&amp;gt;&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, or &lt;code&gt;;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a909b8761907098afd07f60822603767fd676c6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr&lt;/code&gt;: an &lt;a href=&quot;expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cc4ba05cbcfdd985069e0752d2e3e53bb2f4be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr[..]&lt;/code&gt;, &lt;code&gt;expr[a..]&lt;/code&gt;, &lt;code&gt;expr[..b]&lt;/code&gt;, &lt;code&gt;expr[a..b]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43776c58871f631946b9d5f6b5d715885ee8184c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;C&quot;&lt;/code&gt; -- This is the same as &lt;code&gt;extern fn foo()&lt;/code&gt;; whatever the default your C compiler supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b334c4a5aeb36c61ea7f5a6818b2713eb85d492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;Rust&quot;&lt;/code&gt; -- The default ABI when you write a normal &lt;code&gt;fn foo()&lt;/code&gt; in any Rust code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735f8df84f7dac6186d48a60dde78f9b38763118" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;aapcs&quot;&lt;/code&gt; -- The default for ARM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0970f24833633c0d00ee34ad271a2a4c723a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;cdecl&quot;&lt;/code&gt; -- The default for x86_32 C code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e9d24e2f4403852a174e00b796145c7f315402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;fastcall&quot;&lt;/code&gt; -- The &lt;code&gt;fastcall&lt;/code&gt; ABI -- corresponds to MSVC's &lt;code&gt;__fastcall&lt;/code&gt; and GCC and clang's &lt;code&gt;__attribute__((fastcall))&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f0cebe929c94d3119bff41cd45a3d2c03bccd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;platform-intrinsic&quot;&lt;/code&gt; -- Specific platform intrinsics -- like, for example, &lt;code&gt;sqrt&lt;/code&gt; -- have this ABI. You should never have to deal with it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428786e953acb8b96029b0dccd4c593f0d095153" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-call&quot;&lt;/code&gt; -- The ABI of the Fn::call trait functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d661ceb0aed3aa193f98f99dda38ad58d52f5a1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;rust-intrinsic&quot;&lt;/code&gt; -- The ABI of rustc intrinsics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1c12cdae3f4c1ed808e5f5f909374b6fe94167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;stdcall&quot;&lt;/code&gt; -- The default for the Win32 API on x86_32.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="582098149272d3e61d4dbad6f8da32061f8d22d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;system&quot;&lt;/code&gt; -- Usually the same as &lt;code&gt;extern &quot;C&quot;&lt;/code&gt;, except on Win32, in which case it's &lt;code&gt;&quot;stdcall&quot;&lt;/code&gt;, or what you should use to link to the Windows API itself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569db8c0e4f6efa7eb6a5332cb6d307342fdd23c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;sysv64&quot;&lt;/code&gt; -- The default for C code on non-Windows x86_64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153147a056a8508db6fa16a89d5f9f14114c629e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;vectorcall&quot;&lt;/code&gt; -- The &lt;code&gt;vectorcall&lt;/code&gt; ABI -- corresponds to MSVC's &lt;code&gt;__vectorcall&lt;/code&gt; and clang's &lt;code&gt;__attribute__((vectorcall))&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a787bb78fff68ce38f6681f8b3b78c7d578cf9c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern &quot;win64&quot;&lt;/code&gt; -- The default for C code on x86_64 Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153d6d8fe757226499396ffcefb6e51783cd0ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern crate&lt;/code&gt; declarations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b8f128f80d62929b887ea9b46a530971f6a396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; - link an external crate, function, or variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fc48f7e4b779695041bd9e280cac32de319ba0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681614578876835068081e0c5a8a64ca3637d9f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt; is used in two different contexts within FFI. The first is in the form of external blocks, for declaring function interfaces that Rust code can call foreign code by.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfd6b1bcda6eb33f7e94c519a6cd4fc28e3475e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt;&lt;a href=&quot;functions&quot;&gt;&lt;em&gt;Abi&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58b6ac8604fa45768a7e53ca42728a3ba2b55999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;extern&lt;/code&gt;&lt;code&gt;crate&lt;/code&gt;&lt;em&gt;CrateRef&lt;/em&gt;&lt;em&gt;AsClause&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;extern&lt;/code&gt;&lt;code&gt;crate&lt;/code&gt;&lt;em&gt;CrateRef&lt;/em&gt;&lt;em&gt;AsClause&lt;/em&gt;&lt;sup&gt;?&lt;/sup&gt;&lt;code&gt;;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34e5016203ba56bf279e73ecef5551a33aa074d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f32&lt;/code&gt; | &lt;code&gt;f64&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2140d9054ef990bc25506d73da564cfaf9a368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f32&lt;/code&gt;, &lt;code&gt;f64&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4711a5f48e98b2dde4c760b6dc9bc8f0b89eb745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - Boolean false literal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3d6551e1901ed6879f8189236628146c6e0b8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; casts to &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; casts to &lt;code&gt;1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7178d13c12363318fa78ea24f5512ec134b9cf53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;feature&lt;/code&gt; &amp;mdash; Used to enable unstable or experimental compiler features. See &lt;a href=&quot;https://doc.rust-lang.org/unstable-book/index.html&quot;&gt;The Unstable Book&lt;/a&gt; for features implemented in &lt;code&gt;rustc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa9e9cd828ae38380f8bd8601a8c31b914c4db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_add&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c59e533b3d06a5d947c681280ea9e78733da4a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_and&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d9ace641701080aaea3228bb93bb99a39b32d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_max&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd82f562fc0ea950b7943c47003a6708273f1d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_min&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c1ac608c51edf9a6a68131d1c3f36902e7f133" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_nand&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02b89baa32a94ffc60d1b1d20326ac55aa3b73a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_or&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831e311e7133bfc96d832f51d13479a90fa5f6ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_sub&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678e4e22af7936d0f120f5f8f5890cfe9fe36c3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_update&lt;/code&gt; takes two &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; arguments to describe the memory ordering of this operation. The first describes the required ordering for loads and failed updates while the second describes the required ordering when the operation finally succeeds. Beware that this is different from the two modes in &lt;a href=&quot;#method.compare_exchange&quot;&gt;&lt;code&gt;compare_exchange&lt;/code&gt;&lt;/a&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a93055d2678cf2b8c8cb6f50fb72a30b7ce3724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fetch_xor&lt;/code&gt; takes an &lt;a href=&quot;enum.ordering&quot;&gt;&lt;code&gt;Ordering&lt;/code&gt;&lt;/a&gt; argument which describes the memory ordering of this operation. All ordering modes are possible. Note that using &lt;a href=&quot;enum.ordering#variant.Acquire&quot;&gt;&lt;code&gt;Acquire&lt;/code&gt;&lt;/a&gt; makes the store part of this operation &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;, and using &lt;a href=&quot;enum.ordering#variant.Release&quot;&gt;&lt;code&gt;Release&lt;/code&gt;&lt;/a&gt; makes the load part &lt;a href=&quot;enum.ordering#variant.Relaxed&quot;&gt;&lt;code&gt;Relaxed&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76488373fdd9cdeeb3a1412d0e027eed75bc39dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find()&lt;/code&gt; is short-circuiting; in other words, it will stop processing as soon as the closure returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4493e45dcee50fa0f542cf4d41d7d6d6298031" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find()&lt;/code&gt; takes a closure that returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. It applies this closure to each element of the iterator, and if any of them return &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;find()&lt;/code&gt; returns &lt;a href=&quot;../option/enum.option#variant.Some&quot;&gt;&lt;code&gt;Some(element)&lt;/code&gt;&lt;/a&gt;. If they all return &lt;code&gt;false&lt;/code&gt;, it returns &lt;a href=&quot;../option/enum.option#variant.None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f27ba1c533216075116e91c889637e3dd866059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fmt::Display&lt;/code&gt; vs &lt;code&gt;fmt::Debug&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4770a4b7d247ea24b93c53f9b1eb72acfc82aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn(...) -&amp;gt; type&lt;/code&gt;, &lt;code&gt;|...| -&amp;gt; type&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93489572b804e19c4eb27fc35cea15ac14d5c4d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt; - define a function or the function pointer type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0c58b385393f4514450c4818cb48e210258291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt;&lt;a href=&quot;../identifiers&quot;&gt;IDENTIFIER&lt;/a&gt;&lt;a href=&quot;generics&quot;&gt;&lt;em&gt;Generics&lt;/em&gt;&lt;/a&gt;&lt;sup&gt;?&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="7ffaa6b1c889e903c48abe62352e52d307445710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fold()&lt;/code&gt; takes two arguments: an initial value, and a closure with two arguments: an 'accumulator', and an element. The closure returns the value that the accumulator should have for the next iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022a68ed9d31802db057a2092973b729ee2fe1c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; - loop over items from an iterator, implement a trait, or specify a higher-ranked lifetime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75bfe64f0911479a20f0864930bab55b60791be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8568ff1d56fd8eb306fd830fe0d12c11f9da5698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; is also used for &lt;a href=&quot;../reference/trait-bounds#higher-ranked-trait-bounds&quot;&gt;higher-ranked trait bounds&lt;/a&gt; as in &lt;code&gt;for&amp;lt;'a&amp;gt; &amp;amp;'a T: PartialEq&amp;lt;i32&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c702989909708dc6cee5ad288ab508b974366e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; is used in for-in-loops (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768eec21a68716e5a2354141f8333755e0d897c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; is used when implementing traits as in &lt;code&gt;impl Trait for Type&lt;/code&gt; (see &lt;a href=&quot;keyword.impl&quot;&gt;&lt;code&gt;impl&lt;/code&gt;&lt;/a&gt; for more info on that).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfafbe21537ea9306eabdfc8aeb928f0c389278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt;&lt;a href=&quot;../patterns&quot;&gt;&lt;em&gt;Pattern&lt;/em&gt;&lt;/a&gt;&lt;code&gt;in&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;except struct expression&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fb40476c660c0ca61c3193486f2f6b4e372355" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;generics#type-and-lifetime-parameters&quot;&gt;&lt;em&gt;LifetimeParams&lt;/em&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;a href=&quot;generics#type-and-lifetime-parameters&quot;&gt;&lt;em&gt;LifetimeParams&lt;/em&gt;&lt;/a&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3319071d4a728d86275ce5fd07dd271dbc64444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forbid(C)&lt;/code&gt; is the same as &lt;code&gt;deny(C)&lt;/code&gt;, but also forbids changing the lint level afterwards,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237f8cf19332ae629c0a08e3243717bfd455722f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forget&lt;/code&gt; is not marked as &lt;code&gt;unsafe&lt;/code&gt;, because Rust's safety guarantees do not include a guarantee that destructors will always run. For example, a program can create a reference cycle using &lt;a href=&quot;../rc/struct.rc&quot;&gt;&lt;code&gt;Rc&lt;/code&gt;&lt;/a&gt;, or call &lt;a href=&quot;../process/fn.exit&quot;&gt;&lt;code&gt;process::exit&lt;/code&gt;&lt;/a&gt; to exit without running destructors. Thus, allowing &lt;code&gt;mem::forget&lt;/code&gt; from safe code does not fundamentally change Rust's safety guarantees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8755472424c76ce823afb53390730d2a9fd8c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format!&lt;/code&gt; panics if a formatting trait implementation returns an error. This indicates an incorrect implementation since &lt;code&gt;fmt::Write for String&lt;/code&gt; never returns an error itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a9923ab3a5a60fcd1ea89aac70677a55d7297a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fragment specifier&lt;/code&gt;: The identifier in a simple NT that specifies which fragment the NT accepts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e27dab4c746b740ff99baeee48870a644eb338" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fragment&lt;/code&gt;: The class of Rust syntax that a given matcher will accept (or &quot;match&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969192426651697d2828cdfe63c88ba78e988bca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;framework&lt;/code&gt; &amp;mdash; Indicates a macOS framework. This is only valid for macOS targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dabdfd19dab475c5b8adad5d5ca3efe76bc670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; are on separate filesystems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1288d860893f8fe2fb071010874cc196e0ba3d90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt; does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f46800ac0d672a558d1801dfa45d8eb541f6e35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from_digit()&lt;/code&gt; will return &lt;code&gt;None&lt;/code&gt; if the input is not a digit in the given radix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72033ae4f158081c5f326dd3f03df35a1ec8c3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; may be equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85c2b2321d3ad607afb09dc4f13b4ace9fc3387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ident!(...)&lt;/code&gt;, &lt;code&gt;ident!{...}&lt;/code&gt;, &lt;code&gt;ident![...]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8cf7e148322e77e58474c62eedb05577d98d7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ident&lt;/code&gt;: an &lt;a href=&quot;identifiers&quot;&gt;IDENTIFIER_OR_KEYWORD&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118a8a46d6092c490cf12c72f69ff351270ac6ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if let&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b0ba1cf8c4dff23615b10da79f768b1271e81e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; - branch based on the result of a conditional expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9533afd44b842fb73c41aa28ed7365c496c5897a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; always demands a &lt;code&gt;bool&lt;/code&gt; value. &lt;a href=&quot;macro.assert&quot;&gt;&lt;code&gt;assert!&lt;/code&gt;&lt;/a&gt;, being an important macro in testing, checks whether an expression returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299583c0c857881502d26a8558031acb94df8401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; and &lt;code&gt;if let&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fcca45caa23d0993c745880073d397bd2e5de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; and &lt;code&gt;if let&lt;/code&gt; expressions can be intermixed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990ff0496e7e31994dbbc79f153958a09349a49d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5995a7b5ef25db3fd33921ae5aebea75e31d9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt; is a familiar construct to most programmers, and is the main way you'll often do logic in your code. However, unlike in most languages, &lt;code&gt;if&lt;/code&gt; blocks can also act as expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3af4031810a4b15a2e0c243465be4ecf2097a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;if&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e13d04273a84bb1440a08e887f4f4b7422dcc20a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;except struct expression&lt;/em&gt;&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d766aea95312f6d0c74f33cdc4978dba6d614c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;if&lt;/code&gt;&lt;code&gt;let&lt;/code&gt;&lt;a href=&quot;match-expr&quot;&gt;&lt;em&gt;MatchArmPatterns&lt;/em&gt;&lt;/a&gt;&lt;code&gt;=&lt;/code&gt;&lt;a href=&quot;../expressions&quot;&gt;&lt;em&gt;Expression&lt;/em&gt;&lt;/a&gt;&lt;sub&gt;&lt;em&gt;except struct or lazy boolean operator expression&lt;/em&gt;&lt;/sub&gt;&lt;a href=&quot;block-expr&quot;&gt;&lt;em&gt;BlockExpression&lt;/em&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72f72d99d6a4ca659f4876d9c49e3666ed5ae0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl !&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.args&quot;&gt;Args&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#739&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb978592cb76129aa0e044d3c25e2adb48a55ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl !&lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; for &lt;a href=&quot;struct.argsos&quot;&gt;ArgsOs&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#776&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddc6607fa7977db6272cd8d9776b6336b37789c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl !&lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.args&quot;&gt;Args&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#742&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88fb03c8067b88c22f7f12f16ed44932d6ef98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl !&lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.argsos&quot;&gt;ArgsOs&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#779&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b6442d904b92c040edea15c3a9dc03f6bdb225" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl !&lt;a href=&quot;trait.unpin&quot;&gt;Unpin&lt;/a&gt; for &lt;a href=&quot;struct.phantompinned&quot;&gt;PhantomPinned&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/marker.rs.html#650&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245055856bb4b6fdb8d27f965d5ca2848131247e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl !Send for &lt;a href=&quot;../env/struct.args&quot;&gt;Args&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#739&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17a34432a4ab8feb1f338867cc4dd41452b030e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl !Send for &lt;a href=&quot;../env/struct.argsos&quot;&gt;ArgsOs&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#776&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560b759844e888f0fc2a468805e2eb3c90e5e589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl !Sync for &lt;a href=&quot;../env/struct.args&quot;&gt;Args&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#742&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c16002e8b16b8b400a51264137fd89f2dc6e065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl !Sync for &lt;a href=&quot;../env/struct.argsos&quot;&gt;ArgsOs&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#779&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7c6cc70caecefc9dc66e7794d5e36bf7889b16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl !Unpin for &lt;a href=&quot;struct.phantompinned&quot;&gt;PhantomPinned&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/marker.rs.html#650&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdeedf3b75c8a1760aff8e525b614f190a537e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e2367e45adc994254913349c5249a74a2c8e64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/os/linux/raw.rs.html#225&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523b9c7599a527bd6066d5a5b8cd870f361b8976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#220-228&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7cb23bf073e6f4d857a9064da06dbbaf2bc74a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.unixdatagram&quot;&gt;UnixDatagram&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#999-1011&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded513e7b2b90703a5e4254484d3c4352502c97b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.unixlistener&quot;&gt;UnixListener&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#720-729&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a218d5c4d3be6c6cb25b7b38e0d6beee509f67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.unixstream&quot;&gt;UnixStream&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#260-272&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00de4e5819d42c33a0e6355239ad570e5d42a27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../../io/trait.read&quot;&gt;Read&lt;/a&gt; for &lt;a href=&quot;struct.unixstream&quot;&gt;UnixStream&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#548-561&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3a3d2deccb48c0defb69c732008e64f334750d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../../io/trait.write&quot;&gt;Write&lt;/a&gt; for &lt;a href=&quot;struct.unixstream&quot;&gt;UnixStream&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sys/unix/ext/net.rs.html#580-592&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3772751bf92dbfa8b47777c66997836a0cf4e664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0173db282c298deafb1d4136d45cffd6e88e978d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.recvtimeouterror&quot;&gt;RecvTimeoutError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#600&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf638b0b8d23c64e147ff2bd190427d11af07ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#66&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc597a60312f027618d247ca56872911cfb5d442" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.tryrecverror&quot;&gt;TryRecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#579&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf78bda3ae3e934835be5e716512ba183dd8e1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.defaulthasher&quot;&gt;DefaultHasher&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#2479&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21777be797f24f5f992a257c5055a66e35ef9603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#2415&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ba9158c61e2b3f9efa1a0111421361e3c41698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.recverror&quot;&gt;RecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#568&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f89fba0faac549c0c689bf2b84149c131e1d3d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093d209ada5c2aff0bc52b369f88f28d5c190672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.recvtimeouterror&quot;&gt;RecvTimeoutError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#600&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d27a397f2fd1460785f015e90af0ba3b4a52c51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#66&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba4866e1643819b8711c01cecbd7e5bb6eca12b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.tryrecverror&quot;&gt;TryRecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#579&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0bb03253c6c16d46bc05eb5a64690bd6936f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.recverror&quot;&gt;RecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#568&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a17292eb4877f1ecf404af72edc5863f50abad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021d32e863d2a7a2ebb870422475a28253a7bf56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.recvtimeouterror&quot;&gt;RecvTimeoutError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.recvtimeouterror&quot;&gt;RecvTimeoutError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#600&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b02511b979bd101dd9f0083e5eda9d79d14c3b0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#66&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d7c149afc41e1e788d4650f4bad36679ba08e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.tryrecverror&quot;&gt;TryRecvError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.tryrecverror&quot;&gt;TryRecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#579&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637a039f08144031fddd251467d14ab762462b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.recverror&quot;&gt;RecvError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.recverror&quot;&gt;RecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#568&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2417b8f5d9435ceff621bd1bbd410c66b943594b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.bool&quot;&gt;bool&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomicbool&quot;&gt;AtomicBool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1114-1126&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e404116528d66dcb8d3f8f0ba023a7025e28b3a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.i16&quot;&gt;i16&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomici16&quot;&gt;AtomicI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1185-1192&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdb255ee82b61904c58d63e51725c307a7716ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.i32&quot;&gt;i32&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomici32&quot;&gt;AtomicI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1185-1192&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4151eb86d46645f19c48ab04bd94047db3359a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.i64&quot;&gt;i64&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomici64&quot;&gt;AtomicI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1185-1192&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb87b4196ca2afd2dde633c4f009a856127623d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.i8&quot;&gt;i8&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomici8&quot;&gt;AtomicI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1185-1192&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152ff1e77fe9b74dd9decc86925dc54bb42cd0ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.isize&quot;&gt;isize&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomicisize&quot;&gt;AtomicIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1185-1192&quot;&gt;[src]&lt;/a&gt;1.23.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba139c7772f58787f62c0204b2ee0339a88cda7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.u16&quot;&gt;u16&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomicu16&quot;&gt;AtomicU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1185-1192&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8e6a7f626fda75e4f864ce5e998e6feead0753" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomicu32&quot;&gt;AtomicU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1185-1192&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e7d5c16d325da10ec8565ad2100009fb57a09b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.u64&quot;&gt;u64&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomicu64&quot;&gt;AtomicU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1185-1192&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1612fdbe2afc2fed61bc67edb911d582fa4770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomicu8&quot;&gt;AtomicU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1185-1192&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebdb392ac8d16851d694db6ad107f2947c135d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../../primitive.usize&quot;&gt;usize&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.atomicusize&quot;&gt;AtomicUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1185-1192&quot;&gt;[src]&lt;/a&gt;1.23.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb37bb593303b28845558a4876ea6712239dda6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.recverror&quot;&gt;RecvError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.recvtimeouterror&quot;&gt;RecvTimeoutError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1736-1742&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33224e4bbc019c55dd7dae3422b70e1081206681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.recverror&quot;&gt;RecvError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.tryrecverror&quot;&gt;TryRecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1695-1701&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631b24796e3112c2c20b972668fffb6263fd514c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomicbool&quot;&gt;AtomicBool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#169-174&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3097d6ca960b846651de27ee26777f302ff23049" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomici16&quot;&gt;AtomicI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b8386c71b697a3c1089bb185f3acf0fada4817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomici32&quot;&gt;AtomicI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ec4b9d1e8ab17fe3678a284f26ac8c7b82ae3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomici64&quot;&gt;AtomicI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064ec469845c86f1075b770ac0ab23e9b77f79fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomici8&quot;&gt;AtomicI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8f7cf3e69614678c215fe27bef26d781cd61c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomicisize&quot;&gt;AtomicIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5569f50ab53cc87bd296adcf71bae582724ba20b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomicu16&quot;&gt;AtomicU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ace7e6c879538b8d8c71a7389089eb07a29832f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomicu32&quot;&gt;AtomicU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6522f4b5bc1add9f10b67ce36cec2c6954a61904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomicu64&quot;&gt;AtomicU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ea092c749dff04e035a88afad9f690096b181f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomicu8&quot;&gt;AtomicU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6061951411b5ea26d8081bd6fbe077aefb7456e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.atomicusize&quot;&gt;AtomicUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1178-1182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c623012c2457b611d1fb1f5b7da7cf1ea8346e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.defaulthasher&quot;&gt;DefaultHasher&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#2496-2505&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aebec63cbde69699fc82430f9552f9ec040ca10f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#2521-2527&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afeafd619a6d03d5c47c78dbcad1f81ba5ee9df6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;enum.recvtimeouterror&quot;&gt;RecvTimeoutError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1718-1733&quot;&gt;[src]&lt;/a&gt;1.15.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d854904a9f64d8ff44beead4537ccc61fcaab7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;enum.tryrecverror&quot;&gt;TryRecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1676-1692&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90916566a462c33bbfddcaaf282b3a7418cf2739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.recverror&quot;&gt;RecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1650-1659&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b492dfebc71457d042bf4502d62d117bb20e39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9513c2e424f62771ca2968477dc57e24c37c9dcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.recvtimeouterror&quot;&gt;RecvTimeoutError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#600&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a941a36999c231d1ea082c5955e35f4d40e9ad88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#66&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e105565e93ca14c359c95afff03fb907a1ccb79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.tryrecverror&quot;&gt;TryRecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#579&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff22b24853ac3d41ac0ff0ac0fb78874560ff135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomicbool&quot;&gt;AtomicBool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#2508-2512&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374c31c705fb54daa60ab86e639b514d4ded58fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomici16&quot;&gt;AtomicI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1195-1199&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5542753a91d3756e6f4b0f8923803f994970823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomici32&quot;&gt;AtomicI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1195-1199&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edff80408aa716977aa14dbfa729493ad23af37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomici64&quot;&gt;AtomicI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1195-1199&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9766d41f7d1975ae04d1528286f2b1df5b179b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomici8&quot;&gt;AtomicI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1195-1199&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e0aabe62863a3b74f7a7d28cc896ee14078479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomicisize&quot;&gt;AtomicIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1195-1199&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0308eb41fc5bbae53b16b299fb5258c1d414635" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomicu16&quot;&gt;AtomicU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1195-1199&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349089092e2cb4fdf3a4596d80fe807548eb4a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomicu32&quot;&gt;AtomicU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1195-1199&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c186f640b634b67e57cdd0314721a7283d607e13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomicu64&quot;&gt;AtomicU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1195-1199&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533cb5453813311cac2dab3e56977c85c4dd916d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomicu8&quot;&gt;AtomicU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1195-1199&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8220fafcc5fc0dfda271a7a2ed1f09807eca03d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.atomicusize&quot;&gt;AtomicUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1195-1199&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787bd4e7a8844f48094562fbaa95b56149b3a23b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.defaulthasher&quot;&gt;DefaultHasher&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#2479&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af57394bbd8cd82a88b7e52c4dcf20205f08098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#2530-2534&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4920641645437a432e88de8728f57f130315d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.recverror&quot;&gt;RecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#568&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12539a514e45c49312be1fd07cf637c26b4c01e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.display&quot;&gt;Display&lt;/a&gt; for &lt;a href=&quot;enum.recvtimeouterror&quot;&gt;RecvTimeoutError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1704-1715&quot;&gt;[src]&lt;/a&gt;1.15.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39eb57c59e998b35d49666212ae14357d0366356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.display&quot;&gt;Display&lt;/a&gt; for &lt;a href=&quot;enum.tryrecverror&quot;&gt;TryRecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1662-1673&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9984fca3d484e272ac77a73ea88a25387f246ef2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../fmt/trait.display&quot;&gt;Display&lt;/a&gt; for &lt;a href=&quot;struct.recverror&quot;&gt;RecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#1643-1647&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a957b0987cc936e37bacb9ec7b3e123e900518b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../hash/trait.buildhasher&quot;&gt;BuildHasher&lt;/a&gt; for &lt;a href=&quot;struct.randomstate&quot;&gt;RandomState&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#2461-2468&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038268d89e60de5c53cae81cfec89a2e959d3832" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../hash/trait.hash&quot;&gt;Hash&lt;/a&gt; for &lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b736f3bd4be0e0036284ff9342747928b99a18f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../hash/trait.hasher&quot;&gt;Hasher&lt;/a&gt; for &lt;a href=&quot;struct.defaulthasher&quot;&gt;DefaultHasher&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/collections/hash/map.rs.html#2508-2518&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483f96fbc02a6ca24f43b2e0f3f8d76974378f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#226&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421c3213b450791ae72c25796d7a1dacacfc7529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.recvtimeouterror&quot;&gt;RecvTimeoutError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#600&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e948fb5ab26d1289fe8cac7cebfa78469acf28d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.searchstep&quot;&gt;SearchStep&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/pattern.rs.html#66&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be8308181361549b7651cadb693f5b6956238f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;enum.tryrecverror&quot;&gt;TryRecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#579&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5236e788d50dcca6bc353a7e371ac056b6bcd400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.copy&quot;&gt;Copy&lt;/a&gt; for &lt;a href=&quot;struct.recverror&quot;&gt;RecvError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/mpsc/mod.rs.html#568&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2675e0ced50589c784d2acec17c536ec9df50c3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomicbool&quot;&gt;AtomicBool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#179&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2355b86814c8c318ed5df6c05a99525e3ab327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomici16&quot;&gt;AtomicI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9845a8e023e548ab8a74b49c23cdcb655e809f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomici32&quot;&gt;AtomicI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730b0956f7ce13f1ee766d85c73bdbbaa441e6c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomici64&quot;&gt;AtomicI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a723a7e81e92d1a65c861736812903ea31ba1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomici8&quot;&gt;AtomicI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620db23e1bdfc949e76a85382140d6ab875fcaac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomicisize&quot;&gt;AtomicIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110c6751b9c64dab77c97e10ce01b2eb98acd36c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomicu16&quot;&gt;AtomicU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a09aeb9e97be00afc717145ac92c08aa7afe9d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomicu32&quot;&gt;AtomicU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e288f09a027c8f54956d87fe7ccb5ff3949650ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomicu64&quot;&gt;AtomicU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f11f077fe646bc9ef6558d1a5bb0f046ac09301" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomicu8&quot;&gt;AtomicU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e761acb8b2aa8e1197853567fc36f0c9cf3499a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../marker/trait.sync&quot;&gt;Sync&lt;/a&gt; for &lt;a href=&quot;struct.atomicusize&quot;&gt;AtomicUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/sync/atomic.rs.html#1203&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4f4db529e70037d4add05220fad6fef589c566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomicbool&quot;&gt;AtomicBool&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#283&quot;&gt;[src]&lt;/a&gt;1.14.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104d01f4e91350494efd016cd9065b7d493363ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomici16&quot;&gt;AtomicI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#251&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9008c3042b1268b0bb46c28ae80743d16501c860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomici32&quot;&gt;AtomicI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#254&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316291eafe5fa327c2becf16e067528e4ef75882" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomici64&quot;&gt;AtomicI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#257&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e614d3ac8f541b05631e31ad864dcba34b7516a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomici8&quot;&gt;AtomicI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#248&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe9364ea95ccbee46240137fe7df4bc1c5713b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomicisize&quot;&gt;AtomicIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#245&quot;&gt;[src]&lt;/a&gt;1.14.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd429d7dc326e5e3a597248b7b25101e3d9d071f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomicu16&quot;&gt;AtomicU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#270&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446474799d1bf199bdb6e3653fa1be336ee8fdfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomicu32&quot;&gt;AtomicU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#273&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f3a759a9969f8a81001fead1bde3c93af15210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomicu64&quot;&gt;AtomicU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#276&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45148023211ca8971022d2b99e7d05eb0e737fc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomicu8&quot;&gt;AtomicU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#267&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9a6db6fc9420e83896e51c4075744a45a80824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../../panic/trait.refunwindsafe&quot;&gt;RefUnwindSafe&lt;/a&gt; for &lt;a href=&quot;struct.atomicusize&quot;&gt;AtomicUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/panic.rs.html#264&quot;&gt;[src]&lt;/a&gt;1.14.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd50c5b56e1ceac48a44dc17706494adb0a9d61f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;Borrow&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/str.rs.html#182-187&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4ecb3c2b7970983e064c2891b2aa8cb88fcf25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;Borrow&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#681-684&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54acb33e144cabe75c99cf5c9b8e6205b60dfae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;Borrow&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#908-910&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7e62e1dc8ecb2afbccbd5907845ba0a71138f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../borrow/trait.borrow&quot;&gt;Borrow&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1577-1581&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d29e62e58dc012b92fb91d086836e8f0a153c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../borrow/trait.borrowmut&quot;&gt;BorrowMut&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/str.rs.html#190-195&quot;&gt;[src]&lt;/a&gt;1.36.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8645c0782c8a636ddee879890c11a093d6dd415b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../borrow/trait.toowned&quot;&gt;ToOwned&lt;/a&gt; for &lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1267-1273&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0643427ad4214fdc1bd991e35731394e808ab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../borrow/trait.toowned&quot;&gt;ToOwned&lt;/a&gt; for &lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#913-922&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af98fd77d8d1409d5ac49fd55ec85cb6d3acb35d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../borrow/trait.toowned&quot;&gt;ToOwned&lt;/a&gt; for &lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1663-1671&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2510677da38a7af656602bc754d5ed06924193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/mod.rs.html#47&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b2975d24362630c7d9e5d367c97d933a8ed53e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.errorkind&quot;&gt;ErrorKind&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/error.rs.html#87&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f794be64b5c3aa723f027a142d84985fd4ddc52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.fpcategory&quot;&gt;FpCategory&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4633&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1450f1e2a599622a5a6dfa12228828ce66b42e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#660-664&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ae05c2130016b6959d063e1b112f43ed53c389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.interrorkind&quot;&gt;IntErrorKind&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#5035&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25e836fbd82bc4bf0c22e6e69171abc35450fda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#38&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7683c66fc722b59c81eed7761685d94c007e4d97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.ipv6multicastscope&quot;&gt;Ipv6MulticastScope&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#122&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f756d916fa9ac06934cbf4eb305686dbd16548d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#286&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828bc4d74c919d6b53151b6a14b60502b5055149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.seekfrom&quot;&gt;SeekFrom&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1456&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3fb6ecd49c61c47dd568132384b020fae0a6f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.shutdown&quot;&gt;Shutdown&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/mod.rs.html#57&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23063068b32afd133dfe0306fa0755102725a23e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#39&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1266bc3506e2deaaf195c74aaaf6fbc233d53626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;enum.varerror&quot;&gt;VarError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85e0be599962407386e2e77276ffdc2d70d7747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.addrparseerror&quot;&gt;AddrParseError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/parser.rs.html#389&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e16a6fb29183c5c174a77c3561245373e52c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.allocerr&quot;&gt;AllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64ed54bc095235249f50b62452cd8895d305227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#715-720&quot;&gt;[src]&lt;/a&gt;1.29.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a53e64af771bdaeab10b6bcbadc9cf9eb67ad4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#691-696&quot;&gt;[src]&lt;/a&gt;1.29.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77418bea84c16b297109c915f64995e8642ccdf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1491-1496&quot;&gt;[src]&lt;/a&gt;1.29.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb23c9cf85ef838074c76b680eea0d83abcf045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#396-404&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039360cde92987340a50be2046c2ba380f41b50a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.cannotreallocinplace&quot;&gt;CannotReallocInPlace&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#366&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8e02258d3b594995f11eaf3d7c3f658c0d91f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.chartryfromerror&quot;&gt;CharTryFromError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/convert.rs.html#238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34843f43921e56709bd00ec23811565e7bb295ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#116&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745c643db2afaec9cac35f08846b073e10801241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.decodeutf16error&quot;&gt;DecodeUtf16Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/decode.rs.html#19&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e311fc64c7e9d7adc3e0437e16a6e84c661af130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0e3750866b6224ebc2fcc852b098e8e7509c87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#94&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c61424bd3304c95da93a78c6a02a86c2b7d54af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.escapedebug&quot;&gt;EscapeDebug&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/mod.rs.html#352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8675b96bd6615ea584fa3fe62865fd7c9ec7391f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.escapedefault&quot;&gt;EscapeDefault&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/mod.rs.html#238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca15ea14c9dd6583f4a0a49771f35accd5f74326" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.escapeunicode&quot;&gt;EscapeUnicode&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/mod.rs.html#117&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397c570a48f0bcb33dfbe2454a58811bdddf6f60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.exitcode&quot;&gt;ExitCode&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91143dcb585a40a5a4852483617625eaace8f31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4253bd1ab75a01d02f4f48e51b8d68bd02dcdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.filetype&quot;&gt;FileType&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#206&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201e26d4a64b81d3280777bcb174742311fef83a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.frombyteswithnulerror&quot;&gt;FromBytesWithNulError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#247&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647324f124ac9aee9ca9bda0cf7fa9cb5dd194b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.global&quot;&gt;Global&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#44&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8888bfc53204c34f328d04a960822082ac60b1e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#62&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eea782ed5cbf8e45e3ecf4fd1b3ad91f95e4028" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.intostringerror&quot;&gt;IntoStringError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#285&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fea69c81cd579ae1a391e84dabaae11d3cea97f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#871-873&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c84af3eacb1bda2ea9ca6888b4c330f22850fa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1601-1603&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0908f92f347ddc6cadf36a3f763e4b5e6781e482" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44293a11aaa3904408983a7a40ea7e5a27a3e1bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.layouterr&quot;&gt;LayoutErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#333&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209204ab276f18c85e32245e5b113dff73c69085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.metadata&quot;&gt;Metadata&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#107&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9002c4b4042973ae045693fa9e22486a86fe634e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.noneerror&quot;&gt;NoneError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#1410&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c412f2a75f04eabfdf8fb0e893ca5160fd9b6de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0337dfa70008160d443324b868824cb96e0277b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb005cd88ac00a4638073290c21cae49cddea78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093b60a9528f18eec3df87676ba27a7cc3662fba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f7f34fd726047254a7331379bf3d16290b4663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9651bdbeb0dda3077832b59e195c05ac6f5f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78952962025f76bc88390f2de49b968c53a89e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a430a892aace3a5352af23c5e2e206721cad87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ac7b5cef93a51d92098eb0a783a2155cbdf101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9636075bf66f08194026bc3b3f15f40521cba7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ff114e056c8af14b1608ae7c895beb30b4f53a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d07eebc548edb943ea639f3409c505ffed780ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c777480a03b7682ff42dde489dccd64b6f7a3a29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.nulerror&quot;&gt;NulError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7fcc815a5ce0fce72e19c84c11852839e1b58a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.openoptions&quot;&gt;OpenOptions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b5150d1789acffe3548251ed3f07e5207ea956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#78&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcb332454315697faedb3c96e6d165ad427e63d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#855&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4deaa33ce4dc74bfbc28de9cd29b79ef1d065875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.parseboolerror&quot;&gt;ParseBoolError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#145&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949e4b62f4ed0e4d949e84af35db6375cbb297c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.parsecharerror&quot;&gt;ParseCharError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/convert.rs.html#168&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53295f6ab575f6ecde4ae15b9b7aa6130f753a22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.parsefloaterror&quot;&gt;ParseFloatError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/dec2flt/mod.rs.html#171&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ba50f5b645127314552ba70a7ce9eba2581126" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#5024&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1151540a9ba8a419d3ad8e308a2cf75020c49ac4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1124&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e5bf7d06231e60774e838c618d6ba64ae90c8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.permissions&quot;&gt;Permissions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#197&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ccec1cccd1f9d8bc23b7aa8e9e8962efa36dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.phantompinned&quot;&gt;PhantomPinned&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/marker.rs.html#646&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3492a5558bce077860b5546b6f2f3f78cd4b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#42&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c43b748e7df76d870752ba4797f2dfd270e36ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.rawwakervtable&quot;&gt;RawWakerVTable&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#63&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9bea3ae7287e30f20e8aa5ac53deda0174c55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.siphasher&quot;&gt;SipHasher&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/sip.rs.html#51&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb8700872d2de38b9c6b0ff6a35b012905c95ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#640-642&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a8a232a1b9a830406ca9cc7258cdc296809b62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#644-646&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c3401d9949932e82d2fbeddb987f188bfb5dcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1692-1700&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17d187fb9a9806fde261bad9058c8e320c6f694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.stripprefixerror&quot;&gt;StripPrefixError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1760&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18645ace9353a3f2ec229e086653d1172cda96f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.system&quot;&gt;System&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7601a520ee1d6f625e36f546276dd95ac9f375e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#117&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd790829b74a64c111238efffec6da7d604856c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.systemtimeerror&quot;&gt;SystemTimeError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#139&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5dc2959cf1354b86c9b167ad5a85d9e965b3ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.thread&quot;&gt;Thread&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/mod.rs.html#1084&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1647fbe897f7a3a004a8079fb50e99aeb1c50c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.threadid&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/mod.rs.html#1041&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dba1f8849201fa03bb49c6f00f76268a151b99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.tolowercase&quot;&gt;ToLowercase&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/mod.rs.html#383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1fb8490a6a966a16596f1874777cbab783a03f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.touppercase&quot;&gt;ToUppercase&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/mod.rs.html#411&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1eb4c6384664eecf2f1c0c741b5fca3e35343dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.traitobject&quot;&gt;TraitObject&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/raw.rs.html#80&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c7557902ec5fa4d35069797832cb8456649be9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4672&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f6a439e32a497a4bcf975afe2b41bfde54d51d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8bde7e0bb7cc150b006f64d1124659dd7b0db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#421&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040b49e968700aec1cb891784a3745391892fccb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.unicodeversion&quot;&gt;UnicodeVersion&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/unicode/version.rs.html#4&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0031846016d7b23c7013d38be6feff836d0fb71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.utf8error&quot;&gt;Utf8Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#201&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f734947b21cfa632a0ccc08161ea68a52cae663e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.waittimeoutresult&quot;&gt;WaitTimeoutResult&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/condvar.rs.html#15&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb001d0f19b77310252220e7e0ea8db60216d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../clone/trait.clone&quot;&gt;Clone&lt;/a&gt; for &lt;a href=&quot;struct.waker&quot;&gt;Waker&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#301-311&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643ae77adfd8deaf52212ecd26d9307838a067ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/mod.rs.html#47&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b73ce2764e189e00383fcb77e7c1bb6149358b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.errorkind&quot;&gt;ErrorKind&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/error.rs.html#87&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34ebb83f9951877924e7266f3739a6e6cd14a54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.fpcategory&quot;&gt;FpCategory&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4633&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e94d51b1a43b091e11643cfe46d62d026b7f090e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#688&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8880591583b02eafb343966627ae4bda86e2c2ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.interrorkind&quot;&gt;IntErrorKind&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#5035&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc334533cf02d2cb80018e1ec7c5e64bc386e62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#38&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c8e5fd3c1ba4ebbc6ec507c4c28c3a46f27d20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.ipv6multicastscope&quot;&gt;Ipv6MulticastScope&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#122&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33956346d7b95a8a749df51926ae18700ce70324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.seekfrom&quot;&gt;SeekFrom&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1456&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b1e3bc30edc2e31274461d22036290148fad71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.shutdown&quot;&gt;Shutdown&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/mod.rs.html#57&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a692aead8746a0552fb6a304621b80f574cab4f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#39&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05db1ac6566f038ceaba0d1345125c32838a1eb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;enum.varerror&quot;&gt;VarError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0232a18e40c63106e268ec45567a4d8bc71eccfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.addrparseerror&quot;&gt;AddrParseError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/parser.rs.html#389&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdce33ae221b2252c85a515a1fb778e8b0f1a11a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.allocerr&quot;&gt;AllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b53064f57eb8b4e79a06c81315207597afe1883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.cannotreallocinplace&quot;&gt;CannotReallocInPlace&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#366&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d760b6efe04743e02e2f0ad9319be7068d8b399c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.chartryfromerror&quot;&gt;CharTryFromError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/convert.rs.html#238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa0b0d1608d6f2b7b5323c2ac7346c2ca4b9bbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1252&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c249c66a22ad95a1795a522e915f05d5d103f52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#116&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151015c1f56c468408e2b99d82071703bd939c83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.decodeutf16error&quot;&gt;DecodeUtf16Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/decode.rs.html#19&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85738474bd02ef9d1b668a4ee2a68e92fd63408b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6081b82f88e0a2227df32b9ee9bdfa66fdbbb00d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#94&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4350d0b7bf9eaafb1c183d3da18cdfab3d5eef9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9203041166027363f18b43538f70efe7dc32741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.filetype&quot;&gt;FileType&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#206&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f8acfb6c12d379544224203a942564528f370f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.frombyteswithnulerror&quot;&gt;FromBytesWithNulError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#247&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250a02df7f4d03c2b16dd796eed2fa0a312d0f26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#62&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47544c8af740d8ada2d2f6fded7b832e7bb0c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.intostringerror&quot;&gt;IntoStringError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#285&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc5bf90d69515e50298532a7b6e90ccd537e235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#903&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300292a5363bca8dcc281d1b4fe21d14c586db65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1633&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5120e06db7a262b5367137e26bdc5938f8528d83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57308eb815a72397eab5fd0a834aa89578ba9e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.layouterr&quot;&gt;LayoutErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#333&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd9119516d34978d5d50ed9d590f1c766f0d7b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.noneerror&quot;&gt;NoneError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#1410&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a6d1aad8fee96ec57f8f47810818240b960438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91eee0869d0f0f770219e8fb08f2501fa977eaad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ee52123091fb45b2fd735c13ad2b31d6027aad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc19b941d0dff9b22f9c6b47d257ff7d7b042bcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035e4d8eedd9f9b734dfedec45cd691ed63ea0f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2544093a66ef49c300ee90b3fe8885ea09252d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee08a383e4b859aaaf22069e41b84e25bf3c9af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a90cb52bfe66df84876c5af2cbd200953a8719d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57a84c72fbf0c709661181ea2a4749722516baa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166dbe93ad609cdacf67c7201a1e270d4ef82761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53523143cd07817862485b7ecfe0fc4d6676ccd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc3681593373da193e186d309fb41d896bc3e58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ce7d733e7489f8027ede0aeab0564175ac6c41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.nulerror&quot;&gt;NulError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5c28a470055e85fba4696a476e205b106f31bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#813&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03e4963c9c37d0e41e6e47c3a0cd153e2ed93ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#440&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e52c6e8438664984013d6e10e10fbec3995522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#855&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d01e90740222d00c895817eacbd2ba0795c1ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.parseboolerror&quot;&gt;ParseBoolError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#145&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738c6abd460d717a6271731e8bbead08cbd39a22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.parsecharerror&quot;&gt;ParseCharError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/convert.rs.html#168&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ee52376e7bd53402df708d9e63067be60edf357" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.parsefloaterror&quot;&gt;ParseFloatError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/dec2flt/mod.rs.html#171&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da39c59b94c8e2ff7e71b5c8df6927113050b6b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#5024&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0523b7cc78c0687ef966ff4a6c4cbcdf743da363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2642&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74686cf349603d7711907cd78b2b3d341ea3665a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1688&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0aa7691dd15f68e56f428120036dc8b6ba4bc9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.permissions&quot;&gt;Permissions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#197&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e467f47331e56eedc29436f15afbd6185c9bee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.phantompinned&quot;&gt;PhantomPinned&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/marker.rs.html#646&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a258f4a631ed9c65f55c6cbeac89dbd8d1dfcb5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#42&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2ef9196e1291b01131633e86a0b92869d131b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#665&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8797d81f2b4a4801ea26a20e93d116da4e3690ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#667&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfbeae99959cd6b2c24a52516295f49f47744a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#281&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55514e8ef169f93a93e654f7df12643c866c173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.stripprefixerror&quot;&gt;StripPrefixError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1760&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22ecd96857df0e534046f39f882b3d0364288eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#117&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2916c6ce1643d26a95fd27f9e5a81ec1f9d43bda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.threadid&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/mod.rs.html#1041&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a227e55597abf9e3041e589d68ceddd981e307" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4672&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600cc8c20dd4fa6e11650308987496e1a70eb6d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#421&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aba38f0279016a02f77883ae1a5c6c19ed03c0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.unicodeversion&quot;&gt;UnicodeVersion&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/unicode/version.rs.html#4&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7a34ee8d0d7863248ddad115fafe84c0d2890f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.utf8error&quot;&gt;Utf8Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#201&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e833568746c59a21d741bb142b252da08a9f99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.eq&quot;&gt;Eq&lt;/a&gt; for &lt;a href=&quot;struct.waittimeoutresult&quot;&gt;WaitTimeoutResult&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/condvar.rs.html#15&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e489ed9a630e68e308bed503f9155ba8ec3bbb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;enum.errorkind&quot;&gt;ErrorKind&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/error.rs.html#87&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3258df21c7acdb13132c6ecb5de56963f8ae31e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#698-702&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2380d84454c49856cfd4fd1ecb8ff566358940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#38&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7ba0a12eb9b15e7f01e5e0ffd24a6a7a9bd2b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1260-1264&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52428a667ac098cdac23bafb3ef2a410acc1dee6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#116&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bc751ece3321408ffb3033e4073e5ee13d7847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cbb4834ec603a76f9cec1ab9f477c347d13aa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#94&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38098c1daa1b0302161ebf033fa2bdc708778151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#62&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9daab1526c6f71fffd24c609956e08ba5def82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#941-945&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224d1e30ec60e6aa53cfc7e4868d5aeaf69b8467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1670-1674&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e161bdd6608bd60e202c4304a942b9ecd20d8531" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.noneerror&quot;&gt;NoneError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#1410&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3a2b5169be16a965757ba5ab7f1c15216512d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2777eb70e197f31c15a7509c95213a7bebb38b5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5affa6a7d4d97d7a8ba3f9276ae0821bc54e12c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be5aebebdd3739c6cc4d5dacc18f8011942db90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c531422f283c84058e474ce420293295e3a242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5f422fe52b9d89f89ca5b353a2a5a7947c6e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ef1bc4937742ed6ce4dcf46a68d00aee44e36e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d28b15ce5aac0a9239bcd54ceaa089ca3f6ebd10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0089132af0a7b220cfabe45fce78c41af95406bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1bad5a9f28b050f4bc3f518c6c365b5aa70cfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee8741a9b774df42491101c122ebf16178148738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb170f83a59ad88ab8ccd698c36c8eba05d0540" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047a772083f37188c78560b06006f67377db6e42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#843-846&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143c3e9bfac005267e936b7e53c14f76aed7c224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#467-472&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e6272b800ecac2dd6ae550853efaa260e2ad2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2652-2656&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f81732efe41d3df64648c49885274ac234c9f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1698-1702&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10756163bda02790019fa1a5bc9c174ef9ee46b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.phantompinned&quot;&gt;PhantomPinned&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/marker.rs.html#646&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff3c7736d61ced4cf45f00f7277bd8f592c7e43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#281&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bfd871b5c4322659fc23bcfa88379bdb2cca31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#117&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eaef4193a8b6aa8a17dc34651428b4a78fdf630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#421&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfa648dc05a38b0ee28270391fc833dd39c6d47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.ord&quot;&gt;Ord&lt;/a&gt; for &lt;a href=&quot;struct.unicodeversion&quot;&gt;UnicodeVersion&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/unicode/version.rs.html#4&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb716bdc14648f2b4543803c5fc494037b4e837" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#799-803&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0391c383cdf9875e83a05a1d642a56985429200" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#412-416&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd579b1fbefa6f0ee5a5719282d73f3b5b06a35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/mod.rs.html#47&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2a3a60f23da4005618e7ef264770dabbfe4c3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.errorkind&quot;&gt;ErrorKind&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.errorkind&quot;&gt;ErrorKind&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/error.rs.html#87&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3ae83b357bd81966a7b54de8f4d11a8bffc3f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.fpcategory&quot;&gt;FpCategory&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.fpcategory&quot;&gt;FpCategory&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4633&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd46186d59bbd45eaaf3c3fd12e923ccaa3eb55f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#681-685&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79dedda555244cba57356d2605d6be4e405b111a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.interrorkind&quot;&gt;IntErrorKind&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.interrorkind&quot;&gt;IntErrorKind&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#5035&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7492a319d0c4c11a9cc7bcc88d2d113fa1863ed4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#38&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee37dae8baa1bf06a20db78c53ccefcb61eab22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#893-900&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a66de15e974ae06546c9fbac3512e59cc69e7af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1613-1620&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d377649e5ba2880174901fbc5060165f72208a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.ipv6multicastscope&quot;&gt;Ipv6MulticastScope&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipv6multicastscope&quot;&gt;Ipv6MulticastScope&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#122&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba3a9a016dc0fd008f8be08affc55cc95b6683d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.seekfrom&quot;&gt;SeekFrom&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.seekfrom&quot;&gt;SeekFrom&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1456&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7511c990f93fabdc28839aa88cc730554caba3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.shutdown&quot;&gt;Shutdown&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.shutdown&quot;&gt;Shutdown&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/mod.rs.html#57&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0b2b580f1edb8576fd81fba5c5011c8c62c797" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#39&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debea36bb95210ba6621f64f92c09a4af365906a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.varerror&quot;&gt;VarError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.varerror&quot;&gt;VarError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6bec9bb03681533346a79cf526e40cafb020ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.addrparseerror&quot;&gt;AddrParseError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.addrparseerror&quot;&gt;AddrParseError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/parser.rs.html#389&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f9d3d3526d7caf7d88161219d9859281cf5f84a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.allocerr&quot;&gt;AllocErr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.allocerr&quot;&gt;AllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba3143b475ec8160006e6c007686bdf6946883d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cannotreallocinplace&quot;&gt;CannotReallocInPlace&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.cannotreallocinplace&quot;&gt;CannotReallocInPlace&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#366&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b901a7d4a8a24186e402f2d38f548f0e7c6180" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.chartryfromerror&quot;&gt;CharTryFromError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.chartryfromerror&quot;&gt;CharTryFromError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/convert.rs.html#238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61932018df655594da79a63b1a6f7c76ed89cc1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1246-1250&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3305c717c82e1c9ed6b59babca03a4da32d441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#116&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f757d4da4d5662d6e9273788e4a6751b75d480a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.decodeutf16error&quot;&gt;DecodeUtf16Error&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.decodeutf16error&quot;&gt;DecodeUtf16Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/decode.rs.html#19&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cbec813c9460a4dc9cfdaf7eada878a08032cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39840112ab30cc1be86e68fa5903ead363f023f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#94&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361d00bdabcfbcb2fdb31a92121563a92a9755ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2bf2627dbeb7891a8d11fd72b06cd956b66286d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.filetype&quot;&gt;FileType&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.filetype&quot;&gt;FileType&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#206&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774b184b39a6f59f44d0cd449b1304beea6dff06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.frombyteswithnulerror&quot;&gt;FromBytesWithNulError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.frombyteswithnulerror&quot;&gt;FromBytesWithNulError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#247&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0062e2fb235b09d193e18087ab73de3e1c39ec2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.instant&quot;&gt;Instant&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#62&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7838daebd1f4ca37b75cae9f4afac07da5e31267" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.intostringerror&quot;&gt;IntoStringError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.intostringerror&quot;&gt;IntoStringError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#285&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6a151ac5faffe101e0b1737776fbbbd30e566f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#883-890&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1728601ab0ccabe98e19d30659350b92b100bae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#876-880&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6966fe371630f36cad54d8e40a9b9857fb533d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1623-1630&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30ad24da4bcb63610e38a01ed83af09c1bc969a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1606-1610&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4fe70d4fe1e9bdeefc1b272f6ed0f7bef82df6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3948ec70e11b1f3b4216339fbf9aef3a89d2d48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.layouterr&quot;&gt;LayoutErr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.layouterr&quot;&gt;LayoutErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#333&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b10a6d40ae4efce26257078e8ae7198681ec337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.noneerror&quot;&gt;NoneError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.noneerror&quot;&gt;NoneError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#1410&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d77a776979892db26c9c7bf526e0649488d0d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769afe78088d6a0d0496ced16b8f9c22e984ef73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd57a18f5571c3ad17d863f316c7b52313eba32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab6097138d3428ee8723aa02e41e296828ed9a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9889fa951ea80c766c8722f904fbab65fc7741ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d67f24a973aee4620bf074077bf9512fb24b204" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d631249f2955166d51f5924ca552ff7d439936e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693d67a4006cf6d9a315c4fb85193ad27272a8a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a26daa17b144c7bd173c5aab90f7e4b99942d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="badc93a2482d2bfef49ed538ded474b7853cf9fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a0984a838c7f83d42a5a4eccefa65c45536b736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972fd80d1479beba107694e1f4eeb7a5d4c082c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0850dc3cd3f17e173642b99e533739b3f24c5f3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nulerror&quot;&gt;NulError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nulerror&quot;&gt;NulError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901c5f0da2fc619a457d8e31e1be2e7f128302de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#806-810&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0d86a6f057ed787fcb6251175d3fec5b2cc1e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#792-796&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce8773a4f6e03bd4dc3eb66583601fd6a23cabf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#419-423&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073d1979adea07b85bcd2541cb3208009681857c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#405-409&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912cf59917194b25c1bc4233b9f14432b1f230d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.output&quot;&gt;Output&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#855&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48efa7359fc475f6214ef8b4f11f4c1c4f7e196a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.parseboolerror&quot;&gt;ParseBoolError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.parseboolerror&quot;&gt;ParseBoolError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#145&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7db04406b441a4c3df2ac5b1110b5fb37fe54d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.parsecharerror&quot;&gt;ParseCharError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.parsecharerror&quot;&gt;ParseCharError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/convert.rs.html#168&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f84d42cd02c58e54a6b0c8cacb342865df7896c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.parsefloaterror&quot;&gt;ParseFloatError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.parsefloaterror&quot;&gt;ParseFloatError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/dec2flt/mod.rs.html#171&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f04eb18b6e96bb4838f9bd7b53e210812ddcfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#5024&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0a96d7140d997ce756e5a6464af4c4ad22c495" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2626-2630&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95815b5195b3a47045280ca3f2bc3dddbf6493c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1674-1678&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd85551b6480dd8ec6708b9b2c4c1407c18b4657" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.permissions&quot;&gt;Permissions&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.permissions&quot;&gt;Permissions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#197&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288a46867e41a736a842b5077850a95706bf2272" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.phantompinned&quot;&gt;PhantomPinned&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.phantompinned&quot;&gt;PhantomPinned&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/marker.rs.html#646&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfb4b14c21ad6d3ab9e03470a3c62f1b7927a7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#42&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2170742e94c04b8f14896424c3468ee9126b0438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rawwaker&quot;&gt;RawWaker&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.rawwaker&quot;&gt;RawWaker&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#15&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f45669ba7764ac91da9d9bd848eface38cecfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.rawwakervtable&quot;&gt;RawWakerVTable&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.rawwakervtable&quot;&gt;RawWakerVTable&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#63&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d03e9369a9ad5035f3d3acb7fe0c556da7a0d48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#649-654&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c492e6360df181b05d06a4721feccb1f674d69b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#656-663&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a765f9b9722c44635775f6c94614c95f94d866" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1827-1836&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c284f8417b4a0f5c95b76a8fe552f365cf0c9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.stripprefixerror&quot;&gt;StripPrefixError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.stripprefixerror&quot;&gt;StripPrefixError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1760&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6fb1919bfec0eaba1330e2bd03bb2c247ff580" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#117&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e3b2cc27d23fdf300a7be8bb2853e4b394f0d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.threadid&quot;&gt;ThreadId&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.threadid&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/mod.rs.html#1041&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea93ba9cd7c46dbfa83ea567a626e553eb02b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4672&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac978d97d687b097c876f33c506a8fe7869eae5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#421&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e368462a972fa41d6e7ef9484bd793dad275b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.unicodeversion&quot;&gt;UnicodeVersion&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.unicodeversion&quot;&gt;UnicodeVersion&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/unicode/version.rs.html#4&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ee310c06997b6554a80618b694b95c6d149430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.utf8error&quot;&gt;Utf8Error&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.utf8error&quot;&gt;Utf8Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#201&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43599bfebf0327ac2deb6906bb499b996954750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialeq&quot;&gt;PartialEq&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.waittimeoutresult&quot;&gt;WaitTimeoutResult&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.waittimeoutresult&quot;&gt;WaitTimeoutResult&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/condvar.rs.html#15&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1840a1544fca772abed10938eb388bcbc55aa8eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#832-837&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ca22f9e94fbe8d842ad008ae8960e50137d93c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#459-464&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b6463939741144b66f10b5975d1fd2644fb3a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.errorkind&quot;&gt;ErrorKind&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.errorkind&quot;&gt;ErrorKind&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/error.rs.html#87&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89e9afcb63f63b42d99a3b9dc30faace8744f97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#691-695&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475c6bc85974ab0882d1c4366b1ebc936ed730ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#38&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fe2bb7e3f0e1dbe1cca7d120b0a272738edee7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#931-938&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1ae4785b48816e218323bd77964a3f004e2d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1660-1667&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a3be5944b42f2583a3c0e61dc96e5bfda25d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1254-1258&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc655076d877c63bdf8770af360a9a22f18c96b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#116&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9903d12853876c373ab9eb9758094459a9d457" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a93f7eb3a9de581f8c79b661aa0b2a5792c563" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#94&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6d854a7c87132371741d0ef72339c848a30897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.instant&quot;&gt;Instant&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#62&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5d92040461418a0461391fe0869f800e12677a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#921-928&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881ca483b4d4068db470c03d70242e04a6b74954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#914-918&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a532fff5f86df49be6262ddac50d4a94d28938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1650-1657&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b632b3f219827b4f448c5223754b6c96067d8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1643-1647&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef54db993e7708d261193b0f52e375e337906224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.noneerror&quot;&gt;NoneError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.noneerror&quot;&gt;NoneError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#1410&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be487d2d93570c9509d9c7e029dae1e647bd0eb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d99d09fab403a5e30648ca6509bde3c7c979f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0249cbb1c51fcf3852a19e053e509ae02c400ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106216bb578de7526d6df4fa6a8ed730e181a1e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8e6f85194aaa104fd6174706e31edb8d2e8498" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4624739790970b57bb48b6ed032c585d444b48b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad4838aa11c1dbb4b3d7731613215f7eb0a9e6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b34c3027266e08ed2fa9bbd73fb69563c9ac451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfcea14e7dbc9e09550fe98d8ce470b1cb0904f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a0c8e098e03284b77e03de275b1c9ab7f9143e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcacca67a408d8f809f17d87551b82bec68c38d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a97340750913c5c7ce0ce16b7f38b3a6d04e3e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#50&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b738f69a7c246d47f65729d0b7f29cb870987729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#816-829&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844f0c0454d73b644c9c7e3431c3c0bbb7139a35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#443-456&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a28ca7e212e3ac768f56345ead83aacec95339ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2645-2649&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12497532aa40c85fd507a6deb55f887696c7579a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1691-1695&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c665f4f8ad5d4bd0fc5230bf0d9c69d7c510a9e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.phantompinned&quot;&gt;PhantomPinned&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.phantompinned&quot;&gt;PhantomPinned&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/marker.rs.html#646&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627b62b5d3a03ee0aebde14d381a64022e361353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#281&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5ff83f9ece12d2fdd87826743f7c072b950c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#117&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dff0d78c23a611a1fc74ef54245c80daf122ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.typeid&quot;&gt;TypeId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/any.rs.html#421&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f863afd7afe1bda6d746b098eb2e21df686502e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../cmp/trait.partialord&quot;&gt;PartialOrd&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.unicodeversion&quot;&gt;UnicodeVersion&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.unicodeversion&quot;&gt;UnicodeVersion&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/unicode/version.rs.html#4&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5066301b4c70fec39551e687840e975b0e842f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2573-2577&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364ea1bb167787a5bcc749cb34f9734dae36aba6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1705-1709&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e90172893d891dc7075e474c887a085f934f58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#946-950&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5a9ee587ac040d8614b26e4f23a8e14bdeaa62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2666-2670&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe43d4f6158debb15c01207272c50b153cca0893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2680-2684&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fa96812b12cfeba25ee5ced6ba08bf4d5f8907" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2694-2698&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b125a79622eb0d417f69000cebf47a6a5b469e22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2177-2182&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdea2c935f3eb238ed2222f2b5eb0116b82560a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2169-2174&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77bc00dd3fb0a7282a20cbf326422f55c0b298f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1293-1298&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2301e0d059a5ca8221128063ddb75d7bd58fc7d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#1301-1306&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6729e3eced4eb64f3f25c83a1903c13cd494f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2573-2577&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f55d7d2355530cbd870378076b646162d081faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../path/struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1705-1709&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e813e584781c1eca48131482ac6eea9c2dadcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#939-943&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e6f5c3d16cbd455fef92bbdaa89d0147a5609a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#946-950&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151dbe8f22f76f3ad476afc78aa93d99c2845381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#925-929&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8624284f2bfd500bad5c8c3639cf609d5ac9152b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#932-936&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a79e07fa81cec30bd0defe46f93a6bf4f17acd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2666-2670&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21d6f26e998b4f0ae080baf39dc5a89bf8cf9b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2680-2684&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3121c67d6ad4dd229d04adaf9c32c02db2314e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2687-2691&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adce61826819c1dac8c1f9ea9a386ccfd8a5205c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2694-2698&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eabe82365e8b12c1dd578f880b1ebad486d8eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2659-2663&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4532e21e9a531b9a22fa718074a8378554da98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.asref&quot;&gt;AsRef&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2701-2705&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1566be99ee4f97aa7f073c01958a72b0c20615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../alloc/struct.allocerr&quot;&gt;AllocErr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/mod.rs.html#58-63&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad536dbc664db95ecf7710fd7a5cd0fbb4d1d6d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../alloc/struct.layouterr&quot;&gt;LayoutErr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/mod.rs.html#66-71&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80168db8bbcb8aba3bdb6374711f712398985c8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2203-2221&quot;&gt;[src]&lt;/a&gt;1.18.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4db983dc7e6581c222f3475cf0c2633aba1fb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt;&amp;gt; for &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#703-712&quot;&gt;[src]&lt;/a&gt;1.18.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f4348b2c6ae6d3f4a53b6fd9666094080731af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&amp;gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#669-677&quot;&gt;[src]&lt;/a&gt;1.18.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d55ee11b86a16c21f85177d94e3952e20341284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt;&amp;gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1470-1477&quot;&gt;[src]&lt;/a&gt;1.18.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6522ea7bda7396595ca3f98d9858fea192f6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../convert/enum.infallible&quot;&gt;Infallible&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4694-4698&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a366ffb684fce66a03034a36055658dea0d8e1cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../convert/enum.infallible&quot;&gt;Infallible&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#78-82&quot;&gt;[src]&lt;/a&gt;1.36.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d88bfde17b06b424f7b78cb93569dc71f9dec49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.cstring&quot;&gt;CString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#759-769&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47849b00d47cf1f79362d1b8db3aac4b417cc387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.cstring&quot;&gt;CString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#723-732&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9908d052cb87d13930c1349475adf9a8ab6bb1b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.cstring&quot;&gt;CString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#781-791&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99ba85c9d175ba14625e6f2bb65223c426979a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.cstring&quot;&gt;CString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#639-650&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60844f9a39cc940dfb4cfbd6373aa0b96dc2fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.nulerror&quot;&gt;NulError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#858-867&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64538571ecfa3d555d12f6ba8e2c6fa4a6730bc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#699-709&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc820b52a26f17f3221b103c72db270a2d310c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#680-688&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e6c0ebf5d7a27a9bde5d08f63e9cd22d512917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1506-1513&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a54f107273daa9597ac78481e03d711bf0d6735c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#721-731&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1694fb23f0232267cbd0fd7381d76e1ecbf6fda2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../fs/struct.file&quot;&gt;File&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1126-1150&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d30e111e28060a97f6b27c2d1297bc11ca000b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1623-1630&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c93775e8e34821a1ca7481adf503fc255c22e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1480-1488&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82473596dba7398bb9048773934e9d5b3d8b81cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1516-1523&quot;&gt;[src]&lt;/a&gt;1.14.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55cc42a24071325a289aef22512ffd09c583e0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1643-1650&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee3dc0af7c413e4761891f3d9468381270ad3b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;a href=&quot;../primitive.array&quot;&gt;; 8]&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1773-1798&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3df2e94a1842f1bb4d0f0cba4b2a616294e559" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;a href=&quot;../primitive.array&quot;&gt;; 8]&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1736-1741&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb461539d425a7d4960ad4c954f182969d5c1bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.array&quot;&gt;; 16]&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1745-1770&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc74796f675b610f84c871c1d0e904a192e1f79a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.array&quot;&gt;; 16]&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1728-1733&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1badfee0e4ff467ce9cfa22b90ce3d75c1796a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.array&quot;&gt;; 4]&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1007-1021&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4e069774b48399deb6c70b469ea17c91a4825b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.array&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.array&quot;&gt;; 4]&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#992-1004&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce11b1c1165b30fac19b09a3167a6315758c42ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.never&quot;&gt;!&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4701-4708&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56cdcefda73c821c11fc5851ec502b1ad202b4eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1706-1725&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fb80f7cfc5cd09fb09a43e5260d49a3fc6c749" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#975-989&quot;&gt;[src]&lt;/a&gt;1.1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e134bc7fac1f43a2b9b348c7efafd324a2452f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#1758-1763&quot;&gt;[src]&lt;/a&gt;1.21.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb90ebc450854ae8573aee3054781dc9c5ee3c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2224-2241&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6255e94a4ae97670f1d5c391ef41f27ce04201" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;dyn &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#300-338&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b78a00bed3a0573511f0a10dc6e8c588b35af9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;dyn &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#341-361&quot;&gt;[src]&lt;/a&gt;1.6.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfeeb4a6e6f913443aac101c635e4accdc0812ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#350-359&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46b4c0578bca15ac8ba31f3234e9331f4b1b813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1526-1533&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99824658f942b09fa6ce8f05fca32b072babdaf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#1186-1191&quot;&gt;[src]&lt;/a&gt;1.21.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b7948efef6e28981a778f4e6efecd491e33d86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2296-2314&quot;&gt;[src]&lt;/a&gt;1.14.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3829002e7c660d3a5256081b565c5e8d56ab30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;enum.errorkind&quot;&gt;ErrorKind&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/error.rs.html#204-227&quot;&gt;[src]&lt;/a&gt;1.14.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706d5de413193800e9748cc18f46360cc4e09587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.allocerr&quot;&gt;AllocErr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../collections/enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/mod.rs.html#58-63&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a324de5b481b18790da089a8a1f41977bcfbc1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt;&amp;gt; for &lt;a href=&quot;../ffi/struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#703-712&quot;&gt;[src]&lt;/a&gt;1.18.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8eaba7d5b963a926527db80003e3834db39baa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&amp;gt; for &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#669-677&quot;&gt;[src]&lt;/a&gt;1.18.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e52b450c5a26a08bb4755da2b918cdf61938397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../path/struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt;&amp;gt; for &lt;a href=&quot;../path/struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1470-1477&quot;&gt;[src]&lt;/a&gt;1.18.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a175a6e3f4ad068d3c1e20adc778b63b402b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt; for &lt;a href=&quot;../string/struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2203-2221&quot;&gt;[src]&lt;/a&gt;1.18.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09afa7d9dabe55050d7472888a9830ee638db504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&amp;gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.slice&quot;&gt;[&lt;/a&gt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;a href=&quot;../primitive.slice&quot;&gt;]&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#576-597&quot;&gt;[src]&lt;/a&gt;1.19.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57776869eb95f2ca52b38a3eda9c991d473df556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstderr&quot;&gt;ChildStderr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1095-1123&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69282cff51ee6035c498d2cd0bbbca02fd5f87c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdin&quot;&gt;ChildStdin&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1037-1063&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275b1b1c923b3f72a043cd0feef59577ea9e6424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.childstdout&quot;&gt;ChildStdout&lt;/a&gt;&amp;gt; for &lt;a href=&quot;struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1066-1092&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5f1f093640d8af7d971bf84c7a8fe519f22805" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#723-732&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da21a60bbabb9a55568429c39a6b32f0cd9e01bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../rc/struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#781-791&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a843130461c4befa8209f5322366f2f5f0c352be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../sync/struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#759-769&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e624905f25128855e1df737797c97e45ea602de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#639-650&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b4c15a7355b2d0c9e49be3747727122d6efdb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.file&quot;&gt;File&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../process/struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1126-1150&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a95c5ff562c75b50276297dca0c5f78fd668cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#957-972&quot;&gt;[src]&lt;/a&gt;1.1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a903e0533d9cc8c0e00a57227914f6bbdc200f76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#842-846&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0de7ba0165b621ec6c33ca43f9fa5ce1a371ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1686-1704&quot;&gt;[src]&lt;/a&gt;1.26.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bccb5e0782c8079817cae01daec71c886ffd5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#849-853&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129df0b9f2403582d83123c6794781ef8250e7fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.layouterr&quot;&gt;LayoutErr&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../collections/enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/mod.rs.html#66-71&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70126812d1a278ad174a232bebab7dbf80bdd3a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.i128&quot;&gt;i128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45deeaa5284fe526e683e2df5cd56e3d14856f40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.i16&quot;&gt;i16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4e28f2f74d2c622a8bccbdcc480496b190c1e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.i32&quot;&gt;i32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512cdc2d21b4ce46f14740a233e16575f9f6de24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.i64&quot;&gt;i64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a46ad85939fec4ba51dbf6530cfe3f9ec32e18d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.i8&quot;&gt;i8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d06e6377b67d8a47591e7e249529f2d7e22a2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.isize&quot;&gt;isize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a15d25d558a4e666c73f139688536283a3c0940" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.u128&quot;&gt;u128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14f906fb10229f9ec67af8ff08e639fea307f19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.u16&quot;&gt;u16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87b88bf96cdf3f3dcc3eabc08e6c70e6fdd28a01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.u32&quot;&gt;u32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f37a99873e314fc2b386af2d971de21a5960dc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.u64&quot;&gt;u64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6f58ded6b06e83ba18afeecf5daa5eb7746636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca767cd6179f32748c3dac26d278dcd17676161b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../primitive.usize&quot;&gt;usize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#90-94&quot;&gt;[src]&lt;/a&gt;1.31.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac6ef40d1cacba408d22622ebdc74842ead9ed8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.nulerror&quot;&gt;NulError&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../io/struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#858-867&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777cc78cc8c911823a50ea16eb0314d8e0707a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#680-688&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa07b689c517b8b713d2fd5e0a41f048a3d1f410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../path/struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1506-1513&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8032a0e06db23c8037eeaf6702f32dbdba8d4554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../rc/struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#721-731&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b169a7db7ef467b19a64958789485ad74a0bf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../sync/struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#699-709&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4847f892d8e6507dd01a67c984ea6c785019c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1480-1488&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa42cda5b87e286da85f182a83abc93e5c5af4d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1516-1523&quot;&gt;[src]&lt;/a&gt;1.14.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5a7b55aed1e7cf30381748b65ccf147935be84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../rc/struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1643-1650&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0c9559e42dbb6fe41913daca424dd6f0cbfcf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../sync/struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1623-1630&quot;&gt;[src]&lt;/a&gt;1.24.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84c82fb9ffe0ec7dfe8cf5cbd5da759014c9840" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#547-555&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8874b28c55eda6c11a39ae4ad50739d6c08e5c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;&amp;gt; for &lt;a href=&quot;enum.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#558-566&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c51df88649d2ee29968c165c77743fc710bde1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2224-2241&quot;&gt;[src]&lt;/a&gt;1.20.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a16b1d1a3f79e601965c0628b04e781c9ac8177" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;dyn &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; + &lt;a href=&quot;../marker/trait.send&quot;&gt;Send&lt;/a&gt; + &lt;a href=&quot;../marker/trait.sync&quot;&gt;Sync&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#300-338&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7318363bd966239d4f3db54336e826c53defa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../boxed/struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;dyn &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#341-361&quot;&gt;[src]&lt;/a&gt;1.6.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0622b128b2200348c64ee4eefc2abd7bb81764ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../ffi/struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#350-359&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388c7dca650014c603c5b600675045a5a950a363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../path/struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1526-1533&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d4743a2b583eeb7f58aa6ba176900c066f57d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../rc/struct.rc&quot;&gt;Rc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/rc.rs.html#1186-1191&quot;&gt;[src]&lt;/a&gt;1.21.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bd9e5298e21352ecbf3615ff336acf9be49ff7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../sync/struct.arc&quot;&gt;Arc&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/sync.rs.html#1758-1763&quot;&gt;[src]&lt;/a&gt;1.21.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733a6819ab9b61775ab77be4aa641532948c9e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../convert/trait.from&quot;&gt;From&lt;/a&gt;&amp;lt;&lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&amp;gt; for &lt;a href=&quot;../vec/struct.vec&quot;&gt;Vec&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.u8&quot;&gt;u8&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#2296-2314&quot;&gt;[src]&lt;/a&gt;1.14.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f4a543cddf01660734ca4df6e3109f682be34a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.cstr&quot;&gt;CStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#803-808&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498946665ace005cba2c6980ef086e17fa0bc378" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../ffi/struct.osstr&quot;&gt;OsStr&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#775-780&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8ef088e49ef13857bd37e104ca07e6edd6e8e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.box&quot;&gt;Box&lt;/a&gt;&amp;lt;&lt;a href=&quot;../primitive.str&quot;&gt;str&lt;/a&gt;&amp;gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/boxed.rs.html#355-359&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6117dadc81d9edccae50d20052768a1ac3fa5376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.condvar&quot;&gt;Condvar&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/condvar.rs.html#598-603&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44dd6b312faf2669769b64dfcbedec6fe115cc63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#672-678&quot;&gt;[src]&lt;/a&gt;1.10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a382167083532fe13f9bc42b6eba7ad54a5bf09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba37dbc30bc7942fe1d8f6d721948d9ba396312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/fmt/mod.rs.html#94&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f422f39fde2cb7e4a71c0fe8bdcc2a2fa8faadb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.global&quot;&gt;Global&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#44&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bb81e3763269993139855425a304c5c96c494c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#389-395&quot;&gt;[src]&lt;/a&gt;1.9.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143eae688813f99107f6bab09945be97dc1bb4aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1584-1588&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bc6b01d41d7ef5f6ed1a934636241d7b82c051d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.siphasher&quot;&gt;SipHasher&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/sip.rs.html#51&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9391dd404b47e6da6e01ba82980af137b4974b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1866-1872&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb41420c94748e12997aec93d2e4a28cceb5c32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../default/trait.default&quot;&gt;Default&lt;/a&gt; for &lt;a href=&quot;struct.system&quot;&gt;System&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1664b112ef94d11a484a55b5cf9ea56bd64108a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;enum.varerror&quot;&gt;VarError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#267-274&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a50ae1e360bd1ad6193df6f9efe0562aabc8d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.addrparseerror&quot;&gt;AddrParseError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/parser.rs.html#400-404&quot;&gt;[src]&lt;/a&gt;1.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa821329487d0e3de3c958d5b2f89f7a11508cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.allocerr&quot;&gt;AllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#461-465&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db0bc9dc8ef93351b23129ad43d59e37e7e42bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.borrowerror&quot;&gt;BorrowError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#577-581&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af451d2dd265e2fab65876769d3bead58d100960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.borrowmuterror&quot;&gt;BorrowMutError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#584-588&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20016f3a9c6462918158b8e3cdf39937c0b13333" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.cannotreallocinplace&quot;&gt;CannotReallocInPlace&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#479-483&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc82f08c618154d0327fb671bf4f6a050268e503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.chartryfromerror&quot;&gt;CharTryFromError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#591-595&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5bcd2862df6a53baf771bb1e7049fa0320aed8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.decodeutf16error&quot;&gt;DecodeUtf16Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#547-551&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe03b9e33ef19f35474f0925d5c2576172b9d99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#570-574&quot;&gt;[src]&lt;/a&gt;1.11.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e99d93866e3e48f5c060a8819a36e874b4fee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/error.rs.html#543-567&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe9f12c05484281fbbde692250ecfab0c8fbb6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.frombyteswithnulerror&quot;&gt;FromBytesWithNulError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#870-879&quot;&gt;[src]&lt;/a&gt;1.17.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec5d1068b781af223f9c8fa220a5fe707de75b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.fromutf16error&quot;&gt;FromUtf16Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#533-537&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dab281b9013dfb99589abd78d8f6e3994c8e266" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.fromutf8error&quot;&gt;FromUtf8Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#526-530&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbbdc887a489e31f3d21dbd73a73b8a01eef383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.intostringerror&quot;&gt;IntoStringError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#910-918&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fece7e2c899abd435a9614a79b1c1db4a2870b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.joinpathserror&quot;&gt;JoinPathsError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#505-507&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686f6c4c2dd5d5297781d310df4c9a2adc3b9bdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.layouterr&quot;&gt;LayoutErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#470-474&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83b449f1f183c309f2d56dc269a97cab04440a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.nulerror&quot;&gt;NulError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#846-848&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20c9e98e3b96add131484b2ecfdb98053b763bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.parseboolerror&quot;&gt;ParseBoolError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#486-488&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61df751fc7166fa7b5c91e6d9fd0879446a9c3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.parsecharerror&quot;&gt;ParseCharError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#598-602&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3042fe786010b98cde1633a3f6e13d57a65a8d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.parsefloaterror&quot;&gt;ParseFloatError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#519-523&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d518e6ce7c064321002471653c77e438fd722e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#498-502&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7fd84eb496a5c3f87373356fa52677e5892466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.stripprefixerror&quot;&gt;StripPrefixError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2814-2816&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4f66052fd330d95922205943d9b9cbf2ebc7c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.systemtimeerror&quot;&gt;SystemTimeError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#578-580&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0c2ec0b7b511d4efd4b4aa49def8d489077f5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#505-509&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16fbb3d15fdd2c4b53e6d0c887fc48cb79337dfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#512-516&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7682f6978e811804bfbec98bc75ad1128639f640" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;struct.utf8error&quot;&gt;Utf8Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#491-495&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db985ba5914d24a362c567f9972bc5b5c56571b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../error/trait.error&quot;&gt;Error&lt;/a&gt; for &lt;a href=&quot;type.parseerror&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/error.rs.html#540-544&quot;&gt;[src]&lt;/a&gt;1.8.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addc762fcd6d0bf2fee3ca1e7c35e4bb2f77f93e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52496270b76755033cb5f454f1b0bc1eea75684" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5f23630819f244a7daeddc5e6ad778b8850f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44c7d27977fecb3d7f209bde62badab822a448d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ca74567bb00dbe67e9858544345a911db5d061" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a2177c2ca7431bdf939a8e25e26c65d4917cdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348e7951914fdebdfc480549bc4ea9766c79daa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36c0ef3ea3e1acf9f5596c19f4ec3ebecef954a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971d3bfb1d1884648f7c0084c1e585c67a9942fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5c5f12d14f719876a819ab36e1e69c05a1eaf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea27c19b5c496f3ddb6283234ba2955be0c7956d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4752764eba605e7b3e6b2648289743abe8870877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.binary&quot;&gt;Binary&lt;/a&gt; for &lt;a href=&quot;struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650d1086e0c328fcee71a15040f46ab06385562c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.c_void&quot;&gt;c_void&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ffi.rs.html#43-47&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db77a964745a3ef1010767ef81d1878fa65eadcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.collectionallocerr&quot;&gt;CollectionAllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/collections/mod.rs.html#47&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33311ccaabfe5147abeaf4fd97947a8b200cd87e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.errorkind&quot;&gt;ErrorKind&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/error.rs.html#87&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18138455cd7cd786807815a1c6744c655938f4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.fpcategory&quot;&gt;FpCategory&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4633&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d077d1d8a497108d0e6d33aa04848c86316cd654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.infallible&quot;&gt;Infallible&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/convert.rs.html#667-671&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4456410534167837ad535f1d86a4145c90599020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.interrorkind&quot;&gt;IntErrorKind&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#5035&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051acefdb79c592aac1b91da86f27ecbac9602ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.ipaddr&quot;&gt;IpAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#38&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eeb75e232eacb06668e72311fef53ada8433cd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.ipv6multicastscope&quot;&gt;Ipv6MulticastScope&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#122&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c953503755933c6c5fe96a284faa151dc9260c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.ordering&quot;&gt;Ordering&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cmp.rs.html#286&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f245fd9540f05beacae1c1709febc9c3e7615de6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.seekfrom&quot;&gt;SeekFrom&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1456&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518368588b36d0700cd2c1c2158d85439ee95696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.shutdown&quot;&gt;Shutdown&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/mod.rs.html#57&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ffed2d868755a59ee3f539726a9fa041dcd6c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.socketaddr&quot;&gt;SocketAddr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#39&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81db3df16c7c3b52dc49a1fe267a8efa2152599d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;enum.varerror&quot;&gt;VarError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#239&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251cd6427eb3208777c62b4112fcab8127d0ef93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.accesserror&quot;&gt;AccessError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/local.rs.html#197-201&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a712191d223d61a725b97c8ce723bf6a71a6589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.addrparseerror&quot;&gt;AddrParseError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/parser.rs.html#389&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8442c9bf80a13ec456330e61efb0bb9174eee2e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.allocerr&quot;&gt;AllocErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#351&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdec920e1698a6a0bca5daad71b4dfc210525f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.args&quot;&gt;Args&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#767-773&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44333e6354fdafb8a64944ff94b151158837cc87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.argsos&quot;&gt;ArgsOs&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#800-806&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1fcd428b63ba622c6eff036de0f18653326a0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.barrier&quot;&gt;Barrier&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/barrier.rs.html#61-65&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae085e1f78bb0516af60817e422c62184d6191d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.barrierwaitresult&quot;&gt;BarrierWaitResult&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/barrier.rs.html#153-159&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ddf764c99cf4d3decff7c022694a3ccd8417f30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.borrowerror&quot;&gt;BorrowError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cell.rs.html#575-579&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191672b415f5c76e094a9763cce4d4c61f502c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.borrowmuterror&quot;&gt;BorrowMutError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/cell.rs.html#595-599&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dab8a8924ab1f4946379458b9042441f719ce71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/mod.rs.html#253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4da12c830523210d59bb64485f355045d2d5a1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.cannotreallocinplace&quot;&gt;CannotReallocInPlace&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#366&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a038b4f0442370141f4fdcc1d4a56daad6c304" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.chartryfromerror&quot;&gt;CharTryFromError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/convert.rs.html#238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0456eda9e708266151106528eb6e6ef4da1c9b63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.child&quot;&gt;Child&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#208-216&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80657779dc338575d38552bf557557348eb7d12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.childstderr&quot;&gt;ChildStderr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#368-372&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bba33a4fbd8ba7e728d9c04853b4f469f782c54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.childstdin&quot;&gt;ChildStdin&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#264-268&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7b237f4955b0a36d012aaedd101d6c3faab976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.childstdout&quot;&gt;ChildStdout&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#316-320&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9630abf11c212f08144e010d5d5098036c67bc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.command&quot;&gt;Command&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#828-835&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26d9eccb6e26abd5eff08fa7e3a10926b807acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.condvar&quot;&gt;Condvar&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/condvar.rs.html#591-595&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca11cf629e90a98c40833f0f16d5d3bfc936449" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.cstr&quot;&gt;CStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#653-661&quot;&gt;[src]&lt;/a&gt;1.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b945fae32dcf721ba512b2976c9560a096ede6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.cstring&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#632-636&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64697632ccc19103b2d85774b1f3db947c3fa26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.decodeutf16error&quot;&gt;DecodeUtf16Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/decode.rs.html#19&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6d085037eefbc7ad8b7f308edefb7ebd56c03a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.dirbuilder&quot;&gt;DirBuilder&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#213&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145d28531f5017393af508643a412fab94449b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.direntry&quot;&gt;DirEntry&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#1430-1436&quot;&gt;[src]&lt;/a&gt;1.13.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776278298db1b6178e40082cffe3c94e686145fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.duration&quot;&gt;Duration&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/time.rs.html#849-962&quot;&gt;[src]&lt;/a&gt;1.27.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690799b07cd5948e87029f0ec32432f4e1a47370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.empty&quot;&gt;Empty&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#113-117&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524e97357713bb87e61ceaa112c647f53035586a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/error.rs.html#61-65&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5d154d04a7a1a89fdaa93da8573fb14dd0f0aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.escapedebug&quot;&gt;EscapeDebug&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/mod.rs.html#352&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91f44e69f252120b7f4782eee90658349f865e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.escapedefault&quot;&gt;EscapeDefault&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ascii.rs.html#133-137&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c0af36a77f2f4b008a9d54a4b135886da668e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.escapedefault&quot;&gt;EscapeDefault&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/mod.rs.html#238&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058b1fbd7edc1a565140a52a68392705c2b2decf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.escapeunicode&quot;&gt;EscapeUnicode&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/mod.rs.html#117&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3837839d73a95419b625dde37f263ef8c494df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.excess&quot;&gt;Excess&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#15&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c08f706dfc4e624d436fb8621a280fd9586873" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.exitcode&quot;&gt;ExitCode&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1253&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e307439817d6eece4ab370b29d8d2519d43264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.exitstatus&quot;&gt;ExitStatus&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1163&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34234d47f43aa74680291b70b7895c4ea7354b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.file&quot;&gt;File&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#608-612&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2f017a683ec7e6f4c028c7d74d320fb706ad77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.filetype&quot;&gt;FileType&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#206&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e548e3858007a288364c18a932cd37317fd383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.frombyteswithnulerror&quot;&gt;FromBytesWithNulError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#247&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d081a7d20c3a5bbbc7c896f9e8a19f1126fa735" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.fromutf16error&quot;&gt;FromUtf16Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#348&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650032d9dc199983c5c6f2b3e7a529d6419bc539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.fromutf8error&quot;&gt;FromUtf8Error&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#323&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0509d844b8f6dfabb015c857f1759e4fed0163a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.global&quot;&gt;Global&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/alloc.rs.html#44&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee008819fb6e163333adf56881411939ec5c85b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.initializer&quot;&gt;Initializer&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/mod.rs.html#1006&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c737d9589dd1f3c3c718726475515517a27a5fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.instant&quot;&gt;Instant&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#351-355&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4654b571e00d9ed4e2ee8444c05d3afa2ef1ab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.intostringerror&quot;&gt;IntoStringError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#285&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ff14fe30d89e93e278feb0a5117d68c69ba8a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.ipv4addr&quot;&gt;Ipv4Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#864-868&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9635d53930e70ce68c26d2f49010c8cc9e8a8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.ipv6addr&quot;&gt;Ipv6Addr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/ip.rs.html#1594-1598&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157d2201a78b58a6914861396840c157941aeccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.joinpathserror&quot;&gt;JoinPathsError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/env.rs.html#418&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e0c81fba493027543778f18dc54585c28a856e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.layout&quot;&gt;Layout&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#36&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1622cd901c2a2e77309e3ff6379f72fb5894340" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.layouterr&quot;&gt;LayoutErr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/alloc.rs.html#333&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748a186c483720b28541fb70755ae0fed67c1a73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.metadata&quot;&gt;Metadata&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#1119-1131&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7baa3063cab105f6f344d212adfc5c471ecb1017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.noneerror&quot;&gt;NoneError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/option.rs.html#1410&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b6359e81bdc0830147ea0f71e8857346842cd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi128&quot;&gt;NonZeroI128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e9bdcf4ab10d7a1083d179252770a2b9e322b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi16&quot;&gt;NonZeroI16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc6f0fd47415b8614c3799c07fa680ede54f89a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi32&quot;&gt;NonZeroI32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28a471e058c2cfc44dd2f49e7923a05768db931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi64&quot;&gt;NonZeroI64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a1143ddc8e675a62e10b09d73c3a2f2527fa8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroi8&quot;&gt;NonZeroI8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4975e41bc7c73f533723c95ed73b9eff29462c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzeroisize&quot;&gt;NonZeroIsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625308c5e675d8b30e3f4d9e337471f424e84a01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou128&quot;&gt;NonZeroU128&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e71321d30bee755fb6e54c69f06c999eeaf1a41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou16&quot;&gt;NonZeroU16&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3906154bbb2284dc07085ff7351e2fa91bd978f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou32&quot;&gt;NonZeroU32&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4fbc9b06034aaa81cc8b342e80324c65273716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou64&quot;&gt;NonZeroU64&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9985fa9ac2b586f434b85f52f7c3f98dd6fe496" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzerou8&quot;&gt;NonZeroU8&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c46d2df4b9293e980e6115ea12f9b93ce29d47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nonzerousize&quot;&gt;NonZeroUsize&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#18-23&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51b83bf0fb090ad6e6821743425e4e1a5282021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.nulerror&quot;&gt;NulError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/c_str.rs.html#224&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefb433bcf332b25b0f77dbe6d5da4c95d118e04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.once&quot;&gt;Once&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/once.rs.html#438-442&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265aab0ba60b835d08f6c7d44566e297a6f12dc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.oncestate&quot;&gt;OnceState&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/sync/once.rs.html#101&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c209f29972f8d706a936aa4e9c7b33ce9a3e59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.openoptions&quot;&gt;OpenOptions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#184&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a6ebd7a9f85f2eaaad80a06dc5aece875e6c1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.osstr&quot;&gt;OsStr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#895-899&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e495b36321e127222963bb971533aeba71334de8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.osstring&quot;&gt;OsString&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/ffi/os_str.rs.html#398-402&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a445447c4e028574a958f0e84daf9dd4bf9987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#872-893&quot;&gt;[src]&lt;/a&gt;1.7.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548bac22108984bf977ddef6459526c91c40ce08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.parseboolerror&quot;&gt;ParseBoolError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/str/mod.rs.html#145&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf17c12baa7fd023bf8ccf597f351087077ed3de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.parsecharerror&quot;&gt;ParseCharError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/convert.rs.html#168&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5e8d45db8b8c370484348d4b5e7f19cb233bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.parsefloaterror&quot;&gt;ParseFloatError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/dec2flt/mod.rs.html#171&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c1ed3feb1cc67a86a04389d272ddfbf1c299a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.parseinterror&quot;&gt;ParseIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#5024&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98ad8647363df6482f41be2936a903169d5f8ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.path&quot;&gt;Path&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#2580-2584&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5467fae5798f9cc6fc5a665fc1e54f8d654d6117" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.pathbuf&quot;&gt;PathBuf&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1561-1565&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30f54b19a854c62f4758b820c49a2bde527ba0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.permissions&quot;&gt;Permissions&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#197&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a243cd53132454547b711ce28ea22c5a97af84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.phantompinned&quot;&gt;PhantomPinned&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/marker.rs.html#646&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13ac10fcd88c5f239a18c028e4bf75f21c6679c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.rangefull&quot;&gt;RangeFull&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/ops/range.rs.html#47-51&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8decffa8ac27ede0c0d9dde0fed9ba87ae6c8d7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.rawwaker&quot;&gt;RawWaker&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#15&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bf2e3e8dc3a0d1971b9cdf8542279d5622cdfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.rawwakervtable&quot;&gt;RawWakerVTable&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/task/wake.rs.html#63&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395593e03ad4bdf18dc85e9f92cf970db8aeabb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.readdir&quot;&gt;ReadDir&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/fs.rs.html#127&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd42b7225f8351ca49e702b67f28d1732f6498f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.repeat&quot;&gt;Repeat&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#171-175&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d86c35d3d1ba68d7f9b4198491de9a9771c3ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.sink&quot;&gt;Sink&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/util.rs.html#219-223&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b379f5d157dc2c2bb6ff91552d382e6b8b914f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.siphasher&quot;&gt;SipHasher&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/hash/sip.rs.html#51&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe45f64a72d85c154585d73b7aab2a680a2b74a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.socketaddrv4&quot;&gt;SocketAddrV4&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#619-623&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f18850041421b9236871a84531d9441cb154801" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.socketaddrv6&quot;&gt;SocketAddrV6&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/addr.rs.html#633-637&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5c7c2ea2441236a3876aa18fc52f10986dd405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.stderr&quot;&gt;Stderr&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#671-675&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e632d6a4c1887b13b2ec3ce4760af734dbac796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.stdin&quot;&gt;Stdin&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#326-330&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaaec9c2dd09f013d00dc486541bbe6d9a6ca492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.stdio&quot;&gt;Stdio&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/process.rs.html#1030-1034&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00868a14405f1d205c8505cb5a86579d9298d2e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.stdout&quot;&gt;Stdout&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/io/stdio.rs.html#512-516&quot;&gt;[src]&lt;/a&gt;1.16.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f539877c0d321a2356b2b828e74e44c0bd5ff409" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.string&quot;&gt;String&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/alloc/string.rs.html#1883-1888&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c2786d4ee691c2796acff7a6cc8861023c906d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.stripprefixerror&quot;&gt;StripPrefixError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/path.rs.html#1760&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c68cf16f69f16844b3c4038f8531b49f9481d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.system&quot;&gt;System&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/alloc.rs.html#133&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6f2b4e9bd6901efe96c191aa6c92e6debd7929" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.systemtime&quot;&gt;SystemTime&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#515-519&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa932f6cf9170ca138c84423f345505f4991b906" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.systemtimeerror&quot;&gt;SystemTimeError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/time.rs.html#139&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9fcdea4c720e31da532dc9d27a58d15ed5e59f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.tcplistener&quot;&gt;TcpListener&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#924-928&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66098a7da2530ab550314e5c1f704a747239970e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.tcpstream&quot;&gt;TcpStream&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/net/tcp.rs.html#628-632&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f1e1ef003524dc8b6f7df65f01d2d94d3268a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.thread&quot;&gt;Thread&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/mod.rs.html#1260-1267&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10330154524b72a9b6c59ecadf509551092420c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.threadid&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/std/thread/mod.rs.html#1041&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3ba4aaefbddac9d970512e11f8c68af397a42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.tolowercase&quot;&gt;ToLowercase&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/mod.rs.html#383&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37aade49a01a47e5f4dd83aabcca5602092151dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.touppercase&quot;&gt;ToUppercase&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/char/mod.rs.html#411&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96632ec67676bab494a95526d0e52573852c2f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.tryfrominterror&quot;&gt;TryFromIntError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/num/mod.rs.html#4672&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdfc6154413b31363367228f7f60c26328ab7d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;impl &lt;a href=&quot;../fmt/trait.debug&quot;&gt;Debug&lt;/a&gt; for &lt;a href=&quot;struct.tryfromsliceerror&quot;&gt;TryFromSliceError&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;https://doc.rust-lang.org/src/core/array.rs.html#54&quot;&gt;[src]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
