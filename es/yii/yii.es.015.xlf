<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="yii">
    <body>
      <group id="yii">
        <trans-unit id="7df7dfef18d5493b69d325ca86a6c10fb7e0851b" translate="yes" xml:space="preserve">
          <source>List of action IDs that this filter will be applied to, but auth failure will not lead to error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0dfadd600025e4dd6b0c346534594768c99190" translate="yes" xml:space="preserve">
          <source>List of action IDs that this filter will be applied to, but auth failure will not lead to error. It may be used for actions, that are allowed for public, but return some additional data for authenticated users. Defaults to empty, meaning authentication is not optional for any action. Since version 2.0.10 action IDs can be specified as wildcards, e.g. &lt;code&gt;site/*&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152a9fe68b16f152869045f6c018f04fefaaa3a8" translate="yes" xml:space="preserve">
          <source>List of action IDs that this rule applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b78a91149fbe26c0127a8f72803140ce9685c7a" translate="yes" xml:space="preserve">
          <source>List of action IDs that this rule applies to. The comparison is case-sensitive. If not set or empty, it means this rule applies to all actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129c418ecf8aa64e677a1e6d841e45803b573e85" translate="yes" xml:space="preserve">
          <source>List of actions that should be excluded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb24e8bd507e4119b7eab51bfff8ad2deba6adf" translate="yes" xml:space="preserve">
          <source>List of actions that should be excluded. Any action found in this array will NOT have its URL rules created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f51278c9205c9a219b0a2f4784ec4f7f0fd4a64" translate="yes" xml:space="preserve">
          <source>List of aggregations to add to this query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1202c89bf9eb9276e6c8ef242c2a6b9a2c75c005" translate="yes" xml:space="preserve">
          <source>List of arrays or json strings that become parts of a query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a7bc684f47493b91f5ebcc5baaa0d5f382bd42" translate="yes" xml:space="preserve">
          <source>List of asset bundle configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e6852dec98eb934118f8e72c5bca7c273c977a" translate="yes" xml:space="preserve">
          <source>List of asset bundle configurations. This property is provided to customize asset bundles. When a bundle is being loaded by &lt;a href=&quot;yii-web-assetmanager#getBundle()-detail&quot;&gt;getBundle()&lt;/a&gt;, if it has a corresponding configuration specified here, the configuration will be applied to the bundle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c7b720a29a60fa36a9dad0daa97271a3da55b3" translate="yes" xml:space="preserve">
          <source>List of asset bundle names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8e5c17f7c4bc5b2460ab447fff8f3e44f13040" translate="yes" xml:space="preserve">
          <source>List of asset bundles to be compressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50815a612889f6b1583b7ec58d7c6cd506034a15" translate="yes" xml:space="preserve">
          <source>List of asset bundles to be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65560ef28dd3609859318fdab34a5bb727fda70e" translate="yes" xml:space="preserve">
          <source>List of asset bundles, which represents output compressed files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0d499ebeec48c416c287b8332ca44f7e8dcf97" translate="yes" xml:space="preserve">
          <source>List of asset bundles, which represents output compressed files. You can specify the name of the output compressed file using 'css' and 'js' keys: For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ca87eb6f8b5bc71768cd2f644027f40ad9e537" translate="yes" xml:space="preserve">
          <source>List of attribute names that need to be saved. Defaults to &lt;code&gt;null&lt;/code&gt;, meaning all attributes that are loaded from DB will be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bbd555b915fe1c2e34f006d546310509a41b6b" translate="yes" xml:space="preserve">
          <source>List of attribute names that need to be saved. Defaults to null, meaning all attributes that are loaded from DB will be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd9f107e2f8d47d7a98a219f6a35c68cad7902f" translate="yes" xml:space="preserve">
          <source>List of attribute names that should be type-casted. If this parameter is empty, it means any attribute listed in the &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#%24attributeTypes-detail&quot;&gt;$attributeTypes&lt;/a&gt; should be type-casted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a60621cce88b5baef7f5dc0ebfb398005604470" translate="yes" xml:space="preserve">
          <source>List of attribute names that should be validated. If this parameter is empty, it means any attribute listed in the applicable validation rules should be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163002ffbeeac28fdbd0655c309a8ac7a187142d" translate="yes" xml:space="preserve">
          <source>List of attribute names, which should be requested from API to initialize user attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01575b9e468844a61ff05a5e2da09bd6b04f297" translate="yes" xml:space="preserve">
          <source>List of attribute names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f1528cadf4b3d7d8a77264f2257be8528075820" translate="yes" xml:space="preserve">
          <source>List of attribute names. Must be a subset of &lt;a href=&quot;yii-elasticsearch-activerecord#attributes()-detail&quot;&gt;attributes()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fcd5c5b9e4b992707b7586415eeb791dd69a9a" translate="yes" xml:space="preserve">
          <source>List of attributes that are allowed to be sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87640af00d31e7e5587f61feaa393e546f32df10" translate="yes" xml:space="preserve">
          <source>List of attributes that are allowed to be sorted. Its syntax can be described using the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd183cb34931255535541cb0e96f9172b2a0323a" translate="yes" xml:space="preserve">
          <source>List of attributes that are to be automatically filled with the value specified via &lt;a href=&quot;yii-behaviors-attributebehavior#%24value-detail&quot;&gt;$value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24236503bcb0fc1c4a23a36f0cf1389d433221f8" translate="yes" xml:space="preserve">
          <source>List of attributes that are to be automatically filled with the value specified via &lt;a href=&quot;yii-behaviors-attributebehavior#%24value-detail&quot;&gt;$value&lt;/a&gt;. The array keys are the ActiveRecord events upon which the attributes are to be updated, and the array values are the corresponding attribute(s) to be updated. You can use a string to represent a single attribute, or an array to represent a list of attributes. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2526efeb737fd3c815a8c790a53293376d3028" translate="yes" xml:space="preserve">
          <source>List of attributes that need to be saved. Defaults to &lt;code&gt;null&lt;/code&gt;, meaning all attributes that are loaded from DB will be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f954ab67883a491502dcf20476ef3924c449a1bd" translate="yes" xml:space="preserve">
          <source>List of attributes that need to be saved. Defaults to null, meaning all attributes that are loaded from DB will be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4f7072f1ff8766ea7045fc6b1a6466414cb45d" translate="yes" xml:space="preserve">
          <source>List of attributes that need to be saved. Defaults to null, meaning all attributes that are loaded from index will be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad19957e1c0123a4ffd4523f4965ee9fcb86bff" translate="yes" xml:space="preserve">
          <source>List of attributes that need to be saved. Defaults to null, meaning all attributes that are loaded will be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351bae45daa055a5cc99d2fdcb243b59d5d4e8d0" translate="yes" xml:space="preserve">
          <source>List of attributes that need to be saved. Defaults to null, meaning all attributes will be saved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7fedd875dd949c8931de1327f3d7050cc29fd1" translate="yes" xml:space="preserve">
          <source>List of attributes that should be validated. If this parameter is empty, it means any attribute listed in the applicable validation rules should be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9980c2f0e9a2314d9f9cd8167506c70d1384f093" translate="yes" xml:space="preserve">
          <source>List of attributes to be validated. This can be either an array of the attribute names or a string of comma-separated attribute names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8062195ee408f0c098f046241549a67ad067a6a1" translate="yes" xml:space="preserve">
          <source>List of attributes whose value needs to be returned. Defaults to null, meaning all attributes listed in &lt;a href=&quot;yii-base-model#attributes()-detail&quot;&gt;attributes()&lt;/a&gt; will be returned. If it is an array, only the attributes in the array will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daebdbacb9a16577730ae7a01d63b3310015119b" translate="yes" xml:space="preserve">
          <source>List of attributes whose value should NOT be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eaf691579c4a7cbaad3ee9ac1f08c5758a360b" translate="yes" xml:space="preserve">
          <source>List of attributes, which always should be returned from server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbb6cb11b9d1736313b74e485ebcca3f24c5011" translate="yes" xml:space="preserve">
          <source>List of attributes, which always should be returned from server. Attribute names should be always specified in AX format. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6389d50787aa8d71f98be06498a0f1eedee697ef" translate="yes" xml:space="preserve">
          <source>List of attributes, which could be returned from server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65002629508e48004003b323dfc6cfd9e6b9acfa" translate="yes" xml:space="preserve">
          <source>List of attributes, which could be returned from server. Attribute names should be always specified in AX format. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c66aef52e6247aec04b221669b0344b55fb6e4" translate="yes" xml:space="preserve">
          <source>List of auth clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa5b91827fe3beffd341bad9fd420f11729e46b" translate="yes" xml:space="preserve">
          <source>List of auth clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f587006c30f3b75babd7359f24b77e3659bc0a" translate="yes" xml:space="preserve">
          <source>List of available redis commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674c38cbca5cda047910905ee287f116595ce425" translate="yes" xml:space="preserve">
          <source>List of behaviors attached to this component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3487a0ab8f1f4b23cb49cafc7e9df4014b794b2" translate="yes" xml:space="preserve">
          <source>List of behaviors to be attached to the component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2eb690adb989e89e2f8188bbff19236802fb7f" translate="yes" xml:space="preserve">
          <source>List of built-in validators (name =&amp;gt; class or configuration)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ab5bd8bb7bee1af8d9399ad6e26087b0076778" translate="yes" xml:space="preserve">
          <source>List of bundle class names that this bundle depends on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1599e3bdab603d8934c0c28ed976c7993bc7974a" translate="yes" xml:space="preserve">
          <source>List of buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac37ebaaa59ff594ab236f9b8b72712a889c7b8" translate="yes" xml:space="preserve">
          <source>List of buttons. Each array element represents a single button which can be specified as a string or an array of the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee492d941037e6b81a845b8323aa4f2ff186030" translate="yes" xml:space="preserve">
          <source>List of cached values corresponding to the specified keys. The array is returned in terms of (key, value) pairs. If a value is not cached or expired, the corresponding array value will be false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a2573a1fc74b8468866392210849b671b8b0427" translate="yes" xml:space="preserve">
          <source>List of categories that you are interested in. You can use an asterisk at the end of a category to do a prefix match. For example, 'yii\db*' will match categories starting with 'yii\db\', such as 'yii\db\Connection'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5929d513ec691aac198bbbe4c4fbf1def5fc021" translate="yes" xml:space="preserve">
          <source>List of categories that you want to exclude</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5e9e1f7b823c699c2a4874fa1404adb5cc3028" translate="yes" xml:space="preserve">
          <source>List of code template files that are required. They should be file paths relative to &lt;a href=&quot;yii-gii-generator#%24templatePath-detail&quot;&gt;$templatePath&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf02cd905f1c499acf7987295ff7de6ca8de0c4b" translate="yes" xml:space="preserve">
          <source>List of collapsible items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7297aba5161e7f4f0e54e553272d54d45cff6cae" translate="yes" xml:space="preserve">
          <source>List of collapsible items. Each item can be an array of the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9edd0f890c191e090608660aa0c634f0bdad9a9" translate="yes" xml:space="preserve">
          <source>List of column names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc76b85c37436c8718fdc946cce645791653dd63" translate="yes" xml:space="preserve">
          <source>List of components that should be run during the application &lt;a href=&quot;yii-base-application#bootstrap()-detail&quot;&gt;bootstrapping process&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8a96f73ac6d670a9fb7c019a3124f540124899" translate="yes" xml:space="preserve">
          <source>List of database schemas that the test tables may reside in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d73bcf33b2c25e15670da3f0c9d11b4157cdc8" translate="yes" xml:space="preserve">
          <source>List of database schemas that the test tables may reside in. Defaults to &lt;code&gt;['']&lt;/code&gt;, meaning using the default schema (an empty string refers to the default schema). This property is mainly used when turning on and off integrity checks so that fixture data can be populated into the database without causing problem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0066310e9c2fcb0ee150efc405660a338cdcfa9" translate="yes" xml:space="preserve">
          <source>List of debug panels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5825ef138c5e69912c3993b1398fa185ea432fea" translate="yes" xml:space="preserve">
          <source>List of debug panels. The array keys are the panel IDs, and values are the corresponding panel class names or configuration arrays. This will be merged with &lt;a href=&quot;yii-debug-module#corePanels()-detail&quot;&gt;corePanels()&lt;/a&gt;. You may reconfigure a core panel via this property by using the same panel ID. You may also disable a core panel by setting it to be false in this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d97c7c172c1e74e013624a702e7dba884d7f90" translate="yes" xml:space="preserve">
          <source>List of default &lt;a href=&quot;yii-authclient-baseclient#%24viewOptions-detail&quot;&gt;$viewOptions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f35ed9c4b9822cfdb68cd333d34a82045f8837" translate="yes" xml:space="preserve">
          <source>List of dependencies that this dependency is composed of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae3eb0de13c97cebfbd13cd8112100ddeef2db5" translate="yes" xml:space="preserve">
          <source>List of dependencies that this dependency is composed of. Each array element must be a dependency object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612c45c58b692e940ea3ac7fdac94a16e279c0c2" translate="yes" xml:space="preserve">
          <source>List of email messages, which should be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18afd348dcddc5347b3a310e67368893f4a0784e" translate="yes" xml:space="preserve">
          <source>List of expression parameter values indexed by parameter placeholders. For example, &lt;code&gt;[':name' =&amp;gt; 'Dan', ':age' =&amp;gt; 31]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ef50590fe65eb30eb0c3d9c231919fad2bcded" translate="yes" xml:space="preserve">
          <source>List of extra parameters, which should be used, while requesting user attributes from Twitter API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567786561978d8ac314cd68f1105bd7c883c756f" translate="yes" xml:space="preserve">
          <source>List of extra parameters, which should be used, while requesting user attributes from Twitter API. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b64caf4659a5de1714b6050d5b9c3dae7b61406" translate="yes" xml:space="preserve">
          <source>List of factors that would cause the variation of the content being cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a6805c9b3c24e2b1f9d4a041cd2e7daf02717f" translate="yes" xml:space="preserve">
          <source>List of factors that would cause the variation of the content being cached. Each factor is a string representing a variation (e.g. the language, a GET parameter). The following variation setting will cause the content to be cached in different versions according to the current application language:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff8e6faaea8e0e935f469566fb786bdb81f47a0" translate="yes" xml:space="preserve">
          <source>List of global variables is defined in &lt;a href=&quot;yii-web-errorhandler#%24displayVars-detail&quot;&gt;$displayVars&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48aea6b661ac04e89b24ec089b0a41e767c3495b" translate="yes" xml:space="preserve">
          <source>List of groups in the collapse widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a742ac9f7ed0b62e3ac83eeff9cb8558c186147" translate="yes" xml:space="preserve">
          <source>List of groups in the collapse widget. Each array element represents a single group with the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2067fd34c63e6f79680a9b22edddbb11dc83e087" translate="yes" xml:space="preserve">
          <source>List of host names, which are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2e4d8e0d10c1ceff6ae2b0332fff0174fe8471" translate="yes" xml:space="preserve">
          <source>List of host names, which are allowed. Each host can be specified as a wildcard pattern. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa5ebe32207353fa9eb5eaa88c7b3adb6691e1d" translate="yes" xml:space="preserve">
          <source>List of index names, which affected by query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441a49e87b7dbe847b631ec7ccb49a142dc4f7b1" translate="yes" xml:space="preserve">
          <source>List of indexes info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588ea5aff9a914bfe7d86c8fb3a776ae100ae911" translate="yes" xml:space="preserve">
          <source>List of indexes, which affected by query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61100f8667e42eb3eb33529a23652467829b0fa" translate="yes" xml:space="preserve">
          <source>List of inserted IDs, &lt;code&gt;false&lt;/code&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076299dfcd3bc78670c5e821f3a90685a4decc0f" translate="yes" xml:space="preserve">
          <source>List of installed Yii extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103cc118c80e3b68e46bc6497f86d60d2e1876b6" translate="yes" xml:space="preserve">
          <source>List of installed Yii extensions. Each array element represents a single extension with the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3aba90851ff69153a091a0ae8186529a7a5f699" translate="yes" xml:space="preserve">
          <source>List of items in the nav widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c779d06b4d7c75628453187e619927f2929fb58" translate="yes" xml:space="preserve">
          <source>List of items in the nav widget. Each array element represents a single menu item which can be either a string or an array with the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695378a1335f394a71ea534ce66796475784211d" translate="yes" xml:space="preserve">
          <source>List of links to appear in the breadcrumbs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0f3cbc59213c0f365cf7be8f84b740ca0463ef" translate="yes" xml:space="preserve">
          <source>List of links to appear in the breadcrumbs. If this property is empty, the widget will not render anything. Each array element represents a single link in the breadcrumbs with the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bc66fad2f654064ead217ff010a3f21e31a47b" translate="yes" xml:space="preserve">
          <source>List of loaded modules indexed by their class names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033115926f44c4a114b4b83c54a602aa4017dc00" translate="yes" xml:space="preserve">
          <source>List of master connection configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f05527e8c7db65b812171d1599983a4ab906d2" translate="yes" xml:space="preserve">
          <source>List of master connection configurations. Each configuration is used to create a master DB connection. When &lt;a href=&quot;yii-db-connection#open()-detail&quot;&gt;open()&lt;/a&gt; is called, one of these configurations will be chosen and used to create a DB connection which will be used by this object. Note that when this property is not empty, the connection setting (e.g. &quot;dsn&quot;, &quot;username&quot;) of this object will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a9e2e958824923136036bc8f1e719521708b9c" translate="yes" xml:space="preserve">
          <source>List of match expression parameter values indexed by parameter placeholders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce682e9e6355fa885eb5f991c8c31ceb9ede5fb2" translate="yes" xml:space="preserve">
          <source>List of match expression parameter values indexed by parameter placeholders. For example, &lt;code&gt;[':name' =&amp;gt; 'Dan', ':age' =&amp;gt; 31]&lt;/code&gt;. These parameters will be automatically escaped using &lt;a href=&quot;yii-sphinx-connection#escapeMatchValue()-detail&quot;&gt;yii\sphinx\Connection::escapeMatchValue()&lt;/a&gt; and inserted into MATCH expression as a quoted strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ff61901c7cc1a46e157d225f4870d9da328ed2" translate="yes" xml:space="preserve">
          <source>List of memcache or memcached server configurations. Each element must be an array with the following keys: host, port, persistent, weight, timeout, retryInterval, status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b771da4e514171e673474e3dc521ef3faeccc07" translate="yes" xml:space="preserve">
          <source>List of memcache server configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f20006010e4a28cea88d34431566d647946192" translate="yes" xml:space="preserve">
          <source>List of menu items in the dropdown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9d081ba6f1897984ad26e441fb07b19c7196d1" translate="yes" xml:space="preserve">
          <source>List of menu items in the dropdown. Each array element can be either an HTML string, or an array representing a single menu with the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0d615109abce2cce8e93da7a9d4587fab95096" translate="yes" xml:space="preserve">
          <source>List of menu items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1943d29c00f5f6f1d5ede6b6182e3bfe4a8c066" translate="yes" xml:space="preserve">
          <source>List of menu items. Each menu item should be an array of the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353e8c30ebb0cdab093dad74c0e0ae6a5cce054c" translate="yes" xml:space="preserve">
          <source>List of message categories that this target is NOT interested in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb368235759434bce6a20a6bc9baa49f79c7f6cb" translate="yes" xml:space="preserve">
          <source>List of message categories that this target is NOT interested in. Defaults to empty, meaning no uninteresting messages. If this property is not empty, then any category listed here will be excluded from &lt;a href=&quot;yii-log-target#%24categories-detail&quot;&gt;$categories&lt;/a&gt;. You can use an asterisk at the end of a category so that the category can be used to match those categories sharing the same common prefix. For example, 'yii\db*' will match categories starting with 'yii\db\', such as 'yii\db\Connection'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d4ac01773ff9b19dfe969c7c14b283a0b18bd1" translate="yes" xml:space="preserve">
          <source>List of message categories that this target is interested in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068ee5ba6d7039636e1f9359843ca80d900013ff" translate="yes" xml:space="preserve">
          <source>List of message categories that this target is interested in. Defaults to empty, meaning all categories. You can use an asterisk at the end of a category so that the category may be used to match those categories sharing the same common prefix. For example, 'yii\db*' will match categories starting with 'yii\db\', such as 'yii\db\Connection'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee84a1d68e0c562702a1afef2729f26b43e0f08c" translate="yes" xml:space="preserve">
          <source>List of namespaces containing the migration classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3d60be05723dc42d27faee48721e0390422be0" translate="yes" xml:space="preserve">
          <source>List of new migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2491e82e5186146ed3c9361612716063882df88" translate="yes" xml:space="preserve">
          <source>List of options in format: optionName =&amp;gt; optionValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991993152fb3a4c4aecd75f529b2bcf8d131098d" translate="yes" xml:space="preserve">
          <source>List of options in format: optionName =&amp;gt; optionValue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae438687fb781f8040fa2e54cc1632b2874c3194" translate="yes" xml:space="preserve">
          <source>List of options that will passed to commands created by this query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ff7b4f30b2e911ee23ea90eb6bb7fa6157e500" translate="yes" xml:space="preserve">
          <source>List of output asset bundles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ca94aafa699bee89d56b50fd2bb821160754ee" translate="yes" xml:space="preserve">
          <source>List of parameters for the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77951195b99e11af8c3d48c124016721d3376d03" translate="yes" xml:space="preserve">
          <source>List of parameters that should be bound for this expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f953b3f6c4591787d6bb492cbf745ddbdf87a680" translate="yes" xml:space="preserve">
          <source>List of parameters that should be bound for this expression. The keys are placeholders appearing in &lt;a href=&quot;yii-db-expression#%24expression-detail&quot;&gt;$expression&lt;/a&gt; and the values are the corresponding parameter values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565e430cef5887085ac2e5d7a20562968d7ebd9c" translate="yes" xml:space="preserve">
          <source>List of parameters to be passed to the template file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5890df1ffe1a8de1194834b736b953435e0a12" translate="yes" xml:space="preserve">
          <source>List of parent item names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16939c3a21247ed233289019e5adcbb5421cd492" translate="yes" xml:space="preserve">
          <source>List of path aliases to be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690385fe98fe6ad92c4ff88cdbfc7f29b6c151fe" translate="yes" xml:space="preserve">
          <source>List of path aliases to be defined. The array keys are alias names (must start with &lt;code&gt;@&lt;/code&gt;) and the array values are the corresponding paths or aliases. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044ff9bc9a4fef3ae7c2c21c3b00fcdec82b68db" translate="yes" xml:space="preserve">
          <source>List of patterns that specify which files (not directories) should be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d65ab836be5c592d26e9e7133b0f99931c29ec1" translate="yes" xml:space="preserve">
          <source>List of patterns that specify which files (not directories) should be processed. If empty or not set, all files will be processed. See helpers/FileHelper::findFiles() description for pattern matching rules. If a file/directory matches both a pattern in &quot;only&quot; and &quot;except&quot;, it will NOT be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8188adc89e22dccd60bf6636b11556e7167ea0" translate="yes" xml:space="preserve">
          <source>List of patterns that specify which files/directories should NOT be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb346c9b105e121f74b2d1d95a02293690b4c33" translate="yes" xml:space="preserve">
          <source>List of patterns that specify which files/directories should NOT be processed. If empty or not set, all files/directories will be processed. See helpers/FileHelper::findFiles() description for pattern matching rules. If a file/directory matches both a pattern in &quot;only&quot; and &quot;except&quot;, it will NOT be processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd9988158de8a2c13e75f8e440da7c40967a999" translate="yes" xml:space="preserve">
          <source>List of pipeline operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b583dda22851a8509e47def4bde23bcaa32127a" translate="yes" xml:space="preserve">
          <source>List of placeholders for matching parameters names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb62658e2ecb8490d40bebacebec9fe5ce1e5e69" translate="yes" xml:space="preserve">
          <source>List of placeholders for matching parameters names. Used in &lt;a href=&quot;yii-web-urlrule#parseRequest()-detail&quot;&gt;parseRequest()&lt;/a&gt;, &lt;a href=&quot;yii-web-urlrule#createUrl()-detail&quot;&gt;createUrl()&lt;/a&gt;. On the rule initialization, the &lt;a href=&quot;yii-web-urlrule#%24pattern-detail&quot;&gt;$pattern&lt;/a&gt; parameters names will be replaced with placeholders. This array contains relations between the original parameters names and their placeholders. The array keys are the placeholders and the values are the original names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b530f0ef55f01e251cc2a2a85e4abdfeb5e12f" translate="yes" xml:space="preserve">
          <source>List of possible patterns and the corresponding actions for creating the URL rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ceae8d4e8941610b94dd90e3b58d72a69e5dde8" translate="yes" xml:space="preserve">
          <source>List of possible patterns and the corresponding actions for creating the URL rules. The keys are the patterns and the values are the corresponding actions. The format of patterns is &lt;code&gt;Verbs Pattern&lt;/code&gt;, where &lt;code&gt;Verbs&lt;/code&gt; stands for a list of HTTP verbs separated by comma (without space). If &lt;code&gt;Verbs&lt;/code&gt; is not specified, it means all verbs are allowed. &lt;code&gt;Pattern&lt;/code&gt; is optional. It will be prefixed with &lt;a href=&quot;yii-rest-urlrule#%24prefix-detail&quot;&gt;$prefix&lt;/a&gt;/&lt;a href=&quot;yii-rest-urlrule#%24controller-detail&quot;&gt;$controller&lt;/a&gt;/, and tokens in it will be replaced by &lt;a href=&quot;yii-rest-urlrule#%24tokens-detail&quot;&gt;$tokens&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e57ccf22aad95413236bbe1a32aa169cae681b" translate="yes" xml:space="preserve">
          <source>List of query parameter values indexed by parameter placeholders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1943b28eaaad5b2cd3afd281c565386d3e5c00" translate="yes" xml:space="preserve">
          <source>List of query parameter values indexed by parameter placeholders. For example, &lt;code&gt;[':name' =&amp;gt; 'Dan', ':age' =&amp;gt; 31]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d81691b5b8ce7cd809b8d816a44df658f49106a" translate="yes" xml:space="preserve">
          <source>List of request methods (e.g. &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;) that this rule applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7f0e4c94bbbc1e5abd30b8f279d16d7f960860" translate="yes" xml:space="preserve">
          <source>List of request methods (e.g. &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;) that this rule applies to. If not set or empty, it means this rule applies to all request methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5f86f8b9abb6fcc4cc59925f401ff0a871f088" translate="yes" xml:space="preserve">
          <source>List of roles that this rule applies to (requires properly configured User component).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb00e61be212839210d46868546bddb76773329" translate="yes" xml:space="preserve">
          <source>List of roles that this rule applies to (requires properly configured User component). Two special roles are recognized, and they are checked via &lt;a href=&quot;yii-web-user#%24isGuest-detail&quot;&gt;yii\web\User::$isGuest&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42867ce357c1054d8af727e92dc37bb5229a91c2" translate="yes" xml:space="preserve">
          <source>List of safe attributes of &lt;a href=&quot;yii-gii-generators-form-generator#%24modelClass-detail&quot;&gt;$modelClass&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31bde1d9931c3b12bc42806fdf70d5972f52ff88" translate="yes" xml:space="preserve">
          <source>List of selectable items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e154cbbad0f15945218a00153066d6cd9dce2811" translate="yes" xml:space="preserve">
          <source>List of selectable items. Each item can be a string representing the item content or an array of the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dacbac551ae8d91095a47ba0cb7d6ef6e1f00fa" translate="yes" xml:space="preserve">
          <source>List of slave connection configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257a2ede515f2b6bc3e5cb4e501e34a0b3044896" translate="yes" xml:space="preserve">
          <source>List of slave connection configurations. Each configuration is used to create a slave DB connection. When &lt;a href=&quot;yii-db-connection#%24enableSlaves-detail&quot;&gt;$enableSlaves&lt;/a&gt; is true, one of these configurations will be chosen and used to create a DB connection for performing read queries only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43079ce19c686e5ba53db03c71bccf431f2974c0" translate="yes" xml:space="preserve">
          <source>List of slides in the carousel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de950a647dcc5457691900b0aae9c250b1a3a57" translate="yes" xml:space="preserve">
          <source>List of slides in the carousel. Each array element represents a single slide with the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f9a8c41ab91cab549ebdd50afcf8fda807e390" translate="yes" xml:space="preserve">
          <source>List of sortable items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c584b5cb783eb503a8852eb03d98c17370aa3271" translate="yes" xml:space="preserve">
          <source>List of sortable items. Each item can be a string representing the item content or an array of the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b62b2927c62d198de5939fc5806a76ad316560" translate="yes" xml:space="preserve">
          <source>List of source asset bundles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265cc16f9992e7915afde099596f3d0de537ae5b" translate="yes" xml:space="preserve">
          <source>List of source file names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef9edb8ce019c860efa9a572e5e31084ce602a6" translate="yes" xml:space="preserve">
          <source>List of sticky attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978f8d78efdabcf6fe525ecc9a525035f4738e73" translate="yes" xml:space="preserve">
          <source>List of string keys identifying the cached values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37c84a6b00a245f1b4233efc4acd8a7ee4a179e3" translate="yes" xml:space="preserve">
          <source>List of suggesters to add to this query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc644cbe936743ad060132a0647098cbf05e8d1" translate="yes" xml:space="preserve">
          <source>List of supported response formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3f943af46cc5436041e695aeabb7794af8bd93" translate="yes" xml:space="preserve">
          <source>List of supported response formats. The keys are MIME types (e.g. &lt;code&gt;application/json&lt;/code&gt;) while the values are the corresponding formats (e.g. &lt;code&gt;html&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;) which must be supported as declared in &lt;a href=&quot;yii-web-response#%24formatters-detail&quot;&gt;yii\web\Response::$formatters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cd00dc94fdec93d68f88ae7c7e623904db89a3" translate="yes" xml:space="preserve">
          <source>List of tab items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540c66db5e51722a3c6b60ae0f136a43cfe16ae7" translate="yes" xml:space="preserve">
          <source>List of tab items. Each item can be an array of the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2445954dd8a79c8a2a93b4c4c503f8382c09291" translate="yes" xml:space="preserve">
          <source>List of tables whose metadata should NOT be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87aa196db28df5cc34183304bd5be72da67e9a0c" translate="yes" xml:space="preserve">
          <source>List of tables whose metadata should NOT be cached. Defaults to empty array. The table names may contain schema prefix, if any. Do not quote the table names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2886ba18af607c5e31360d6c30ea0c5dfdaba21d" translate="yes" xml:space="preserve">
          <source>List of tabs in the tabs widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03500851b7d5d51c467a3ef5b0eb51ca31d05ef" translate="yes" xml:space="preserve">
          <source>List of tabs in the tabs widget. Each array element represents a single tab with the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c98cc22f8db201ae16d20a2c051a9006d76469" translate="yes" xml:space="preserve">
          <source>List of tag attributes that should be specially handled when their values are of array type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe60b93663c555d42ed21c056bc60b95e8ed7ab" translate="yes" xml:space="preserve">
          <source>List of tag attributes that should be specially handled when their values are of array type. In particular, if the value of the &lt;code&gt;data&lt;/code&gt; attribute is &lt;code&gt;['name' =&amp;gt; 'xyz', 'age' =&amp;gt; 13]&lt;/code&gt;, two attributes will be generated instead of one: &lt;code&gt;data-name=&quot;xyz&quot; data-age=&quot;13&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f3c87eaa7cced85f1ed36e2fb6bdd979ea5d22" translate="yes" xml:space="preserve">
          <source>List of the PHP predefined variables that should be displayed on the error page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12bd49e51e587fc29eba20fe2563d7e3c09ed86" translate="yes" xml:space="preserve">
          <source>List of the PHP predefined variables that should be displayed on the error page. Note that a variable must be accessible via &lt;code&gt;$GLOBALS&lt;/code&gt;. Otherwise it won't be displayed. Defaults to &lt;code&gt;['_GET', '_POST', '_FILES', '_COOKIE', '_SESSION']&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09ddb598b5c158eb71042e6f5013bd697b2b6fc" translate="yes" xml:space="preserve">
          <source>List of the PHP predefined variables that should be logged in a message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cc4a95c06f4fed6ef2c736db24f0452037bd3c" translate="yes" xml:space="preserve">
          <source>List of the PHP predefined variables that should be logged in a message. Note that a variable must be accessible via &lt;code&gt;$GLOBALS&lt;/code&gt;. Otherwise it won't be logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038b3e1376db713d91efc7bdc3c05d9c02889add" translate="yes" xml:space="preserve">
          <source>List of the attributes that support sorting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c0154c5b8616ecb8ae7a81bbefb808d286caac" translate="yes" xml:space="preserve">
          <source>List of the attributes that support sorting. If not set, it will be determined using &lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;yii\data\Sort::$attributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7762346dfb437580b63d07e43c19c08ad8dbf683" translate="yes" xml:space="preserve">
          <source>List of the controller IDs that this rule applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d530b0908d449c6f9858476274bc512ceea5f69" translate="yes" xml:space="preserve">
          <source>List of the registered asset bundles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7f46730fb94af6ca4ac1add46035b206168709" translate="yes" xml:space="preserve">
          <source>List of the registered asset bundles. The keys are the bundle names, and the values are the registered &lt;a href=&quot;yii-web-assetbundle&quot;&gt;yii\web\AssetBundle&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305c193a452bb3341dc832645d46843733148c83" translate="yes" xml:space="preserve">
          <source>List of the request methods, which require adding 'Authorization' header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129be1203c50dc56d9fa11f5d99ad96a7273d3c9" translate="yes" xml:space="preserve">
          <source>List of the request methods, which require adding 'Authorization' header. By default only POST requests will have 'Authorization' header. You may set this option to &lt;code&gt;null&lt;/code&gt; in order to make all requests to use 'Authorization' header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442a14b4587fc4f2be6c8aacd2dbe4935eb77c5b" translate="yes" xml:space="preserve">
          <source>List of tokens that should be replaced for each pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80d698f3af287a5bbfb7fc5387d348906e5f182" translate="yes" xml:space="preserve">
          <source>List of tokens that should be replaced for each pattern. The keys are the token names, and the values are the corresponding replacements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ba8061f829568b58defa3f29ec91e86807a34c" translate="yes" xml:space="preserve">
          <source>List of user IP addresses that this rule applies to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727afd02dfe42b48216b51cae91d62659e011928" translate="yes" xml:space="preserve">
          <source>List of user IP addresses that this rule applies to. An IP address can contain the wildcard &lt;code&gt;*&lt;/code&gt; at the end so that it matches IP addresses with the same prefix. For example, '192.168.*' matches all IP addresses in the segment '192.168.'. If not set or empty, it means this rule applies to all IP addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffd2999dafea483fea235572279648db25d9994" translate="yes" xml:space="preserve">
          <source>List of user attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db18a71b8f8c08800cf1a589a6ac767076d6ab2" translate="yes" xml:space="preserve">
          <source>List of void elements (element name =&amp;gt; 1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192847b15c33bd4913e8c554131ed60b7aeaed65" translate="yes" xml:space="preserve">
          <source>ListView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9ce6efb56c5f53ec301a6ce49c073a86a205e2" translate="yes" xml:space="preserve">
          <source>Listen messages panels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="811f8c6bb550b5142de8290908628a2db3440df2" translate="yes" xml:space="preserve">
          <source>Listens categories of the messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b84184cc81f70ddc4f27241525b66e137bfea8e" translate="yes" xml:space="preserve">
          <source>Listing Migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c9502a7d7d48fd4a86b45fefb2b163491c3ae1" translate="yes" xml:space="preserve">
          <source>Lists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94083dc1a7695b92085fa4cf4793f85789e39594" translate="yes" xml:space="preserve">
          <source>Lists all available fixtures template files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f758bc9e14d26d46e71d180b39d9ce56636051" translate="yes" xml:space="preserve">
          <source>Lists the caches that can be flushed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618c6438a053ba085306700c1fef76930afa1b75" translate="yes" xml:space="preserve">
          <source>Load application configuration;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbeabecdb753dc931a69462a291edcfa782060ff" translate="yes" xml:space="preserve">
          <source>Load fixtures: clean up the relevant DB tables and populate them with fixture data;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bfd7b39c8acd4aca7f2cf66fc33f5747c23e33" translate="yes" xml:space="preserve">
          <source>Loading fixtures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b202b3f583d6cebda73109509bce5620383a6b4c" translate="yes" xml:space="preserve">
          <source>Loading fixtures to different storage such as: RDBMS, NoSQL, etc;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f9338583d1bec7e4baaeb0a692fac77eee0c72" translate="yes" xml:space="preserve">
          <source>Loads MIME types from the specified file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78415bfbe7c1b7eba9678ebcfcc9a31fc9430ff1" translate="yes" xml:space="preserve">
          <source>Loads asset bundle class by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b80ad352fd1f6b960afd0d6a0971baa80b5622e" translate="yes" xml:space="preserve">
          <source>Loads asset bundle dependencies recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df166e0d3dc4ffe0a2c12b87df882b61e8d85d5" translate="yes" xml:space="preserve">
          <source>Loads authorization data from persistent storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cfec33a718db68703dfd0c7a532c7e1d1dac90" translate="yes" xml:space="preserve">
          <source>Loads data from cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c3b6ca4e0df8b3c60fbff763dfb5a1b0ba2016" translate="yes" xml:space="preserve">
          <source>Loads data into the panel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03e5cbbe3dfa1dd397ef928cef86bca5e8d2f2f" translate="yes" xml:space="preserve">
          <source>Loads default values from database table schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6861460913172b5f3026306a39e1302ddcead8d5" translate="yes" xml:space="preserve">
          <source>Loads dummy bundle by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab7a612b7149aab6dd1bacf00c6e9ea4a732c57" translate="yes" xml:space="preserve">
          <source>Loads messages from a PO file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa6257c1eb624cc6c2d32370f3fdfc5718d2249" translate="yes" xml:space="preserve">
          <source>Loads messages from a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4161f3d997cc07445c25b1da4dd87f65bf088b87" translate="yes" xml:space="preserve">
          <source>Loads messages from an MO file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd64cfb0fde06a5924de7fea85c6998dc7a7aff" translate="yes" xml:space="preserve">
          <source>Loads sticky attributes from an internal file and populates them into the generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f400dda45a56051bb0a1e538be8add1f884ab3" translate="yes" xml:space="preserve">
          <source>Loads the CSRF token from cookie or session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf0a4616705cfdc794bf7c13190032725c7c031" translate="yes" xml:space="preserve">
          <source>Loads the authorization data from a PHP script file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1cad9a189e0d38e071208adc2e376b18cbf7df" translate="yes" xml:space="preserve">
          <source>Loads the column information into a &lt;a href=&quot;yii-db-columnschema&quot;&gt;yii\db\ColumnSchema&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e5a415fade40a354722099355535ecd19def6c" translate="yes" xml:space="preserve">
          <source>Loads the column information into a &lt;a href=&quot;yii-sphinx-columnschema&quot;&gt;yii\sphinx\ColumnSchema&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe37e1fcb0381735d46cadfbfa824f1408762fc2" translate="yes" xml:space="preserve">
          <source>Loads the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e510bc6242c280a2fb20b6da69c50d95ab7cb79f" translate="yes" xml:space="preserve">
          <source>Loads the fixture data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2beeef3a38600fe89e7feff738e3b13f1fc832" translate="yes" xml:space="preserve">
          <source>Loads the fixture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a152bb43bd9485014905e308e00db51354dd2f" translate="yes" xml:space="preserve">
          <source>Loads the generator with the specified ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616926742202d178f5ab0d08e58c791d67423295" translate="yes" xml:space="preserve">
          <source>Loads the message translation for the specified $language and $category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903513b6457b18ab974759151a61ecb07aab008b" translate="yes" xml:space="preserve">
          <source>Loads the message translation for the specified language and category or returns null if file doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ab72890e8e5384ce8d9477b6d4e430e988ba22" translate="yes" xml:space="preserve">
          <source>Loads the message translation for the specified language and category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2f3afebdd45699383a339f9de59e9ae3d1c7ff" translate="yes" xml:space="preserve">
          <source>Loads the messages from MongoDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b98cf318add2dcccbc2fbfce5c823ba9bb0f25a" translate="yes" xml:space="preserve">
          <source>Loads the messages from database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fb164627e3d97d8997ef0a062f14f9823b389a" translate="yes" xml:space="preserve">
          <source>Loads the metadata for the specified index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18a662df0fa7d34ab090e0468b75e203dfd1c46" translate="yes" xml:space="preserve">
          <source>Loads the metadata for the specified table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7a7140433cf37486be5e44e27290dc31c37693" translate="yes" xml:space="preserve">
          <source>Loads the number of allowed requests and the corresponding timestamp from a persistent storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ad988a243d160aa6492e8c6caa4623f8993f77" translate="yes" xml:space="preserve">
          <source>Loads the specified fixture data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a58a6bc83a993d0c0f19e0b9c320e36243d728" translate="yes" xml:space="preserve">
          <source>Loads the specified fixtures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8970f0e691a0a23a47517698017c997507efd496" translate="yes" xml:space="preserve">
          <source>Locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1d3ccca6ff2e5300b1fbc0e02bdbe6fa959ef7" translate="yes" xml:space="preserve">
          <source>Locale and Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79aef1a3d73262b7844a636b03ea4fdd2435d06" translate="yes" xml:space="preserve">
          <source>Locale is a set of parameters that defines the user's language, country and any special variant preferences that the user wants to see in their user interface. It is usually identified by an ID consisting of a language ID and a region ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7456053e4c45b0b698b99ca3cd9f89547f039ee" translate="yes" xml:space="preserve">
          <source>Localizing Data Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7eb297ad852964f287a55b325bab36fb2267e90" translate="yes" xml:space="preserve">
          <source>Lock acquiring result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398629e82520eb8dccd1942bdc5cf17aa64b039a" translate="yes" xml:space="preserve">
          <source>Lock mode to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a32480caef0d739e018be717cc4489c6f37dbb" translate="yes" xml:space="preserve">
          <source>Lock release result: &lt;code&gt;false&lt;/code&gt; in case named lock was not found or Redis command failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a0884263369b9f897c851009e912577b588723" translate="yes" xml:space="preserve">
          <source>Lock release result: false in case named lock was not found..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc46ce0d74e6b800c9d5af7b7a1f984e05a2aa9" translate="yes" xml:space="preserve">
          <source>Log Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada5e01956299e7e12e23dea8774f7284bf2e57f" translate="yes" xml:space="preserve">
          <source>Log Targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0370dade08cbf166c74355ef25d09e8fb7c5abf2" translate="yes" xml:space="preserve">
          <source>Log category</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074cbb854d1cc4600f655d96bee1b815c80dffcd" translate="yes" xml:space="preserve">
          <source>Log file path or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed490c3fa3323dc4678457fbb3fd83939d89c058" translate="yes" xml:space="preserve">
          <source>Log file path or &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt;. If not set, it will use the &quot;@runtime/logs/app.log&quot; file. The directory containing the log files will be automatically created if not existing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5b210e671edd7da6a02cad7af9d38accbd37c9" translate="yes" xml:space="preserve">
          <source>Log messages to be processed. See &lt;a href=&quot;yii-log-logger#%24messages-detail&quot;&gt;yii\log\Logger::$messages&lt;/a&gt; for the structure of each message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c270f3093387006b192dd7900b12a6f8102b16" translate="yes" xml:space="preserve">
          <source>Log messages. See \yii\debug\models\timeline\Logger::messages for the structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3c60d157c900f13cb2f1bdafd7de2fb11bf8d1" translate="yes" xml:space="preserve">
          <source>Log targets export the filtered log messages in a certain format. For example, if you install a log target of the class &lt;a href=&quot;yii-log-filetarget&quot;&gt;yii\log\FileTarget&lt;/a&gt;, you may find a log message similar to the following in the &lt;code&gt;runtime/log/app.log&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d3a9aeea45dc6325effa004aa81b959b83a1c3" translate="yes" xml:space="preserve">
          <source>Log token, &lt;code&gt;false&lt;/code&gt; if log is not enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcf94628a836c8b5a229a100b8313e104d773b0" translate="yes" xml:space="preserve">
          <source>Log token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838225e725651afbcf6ee851e33c7685b1f35d63" translate="yes" xml:space="preserve">
          <source>Logged messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52463c4fda548206ce472a203fd474f7c2b8b390" translate="yes" xml:space="preserve">
          <source>Logged messages. This property is managed by &lt;a href=&quot;yii-log-logger#log()-detail&quot;&gt;log()&lt;/a&gt; and &lt;a href=&quot;yii-log-logger#flush()-detail&quot;&gt;flush()&lt;/a&gt;. Each log message is of the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e135fbdc9cb3462dd64b23dceaaf4ec858cccfc" translate="yes" xml:space="preserve">
          <source>Logged rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d51dd2fa602ddc5171a9e217c2d79c5bc8e746" translate="yes" xml:space="preserve">
          <source>Logged rules. &lt;code&gt;`&lt;/code&gt;php [ [</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f2a9bb8784a17851710628597c519d11507941" translate="yes" xml:space="preserve">
          <source>Logger records logged messages in memory and sends them to different targets if &lt;a href=&quot;yii-log-logger#%24dispatcher-detail&quot;&gt;$dispatcher&lt;/a&gt; is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468a4079b53102878465082b2e953e8a3a420f76" translate="yes" xml:space="preserve">
          <source>Logs a message with the given type and category.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b587415217c5407b8b7eb3c613bf5e61d04dd589" translate="yes" xml:space="preserve">
          <source>Logs a trace message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f285f97af4e85c90120c456b1bce9cedc8d1aeef" translate="yes" xml:space="preserve">
          <source>Logs a warning message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25a9314514d900aacc22fbb93de516450433e79" translate="yes" xml:space="preserve">
          <source>Logs an error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da4c18e4f2f0266410e3461738f996be2e7086f" translate="yes" xml:space="preserve">
          <source>Logs an informative message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130992ebf63a20aa6136d305e13a172332939344" translate="yes" xml:space="preserve">
          <source>Logs in a user by cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94aea82710236212442d03732ff656d387162e3" translate="yes" xml:space="preserve">
          <source>Logs in a user by the given access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567b4be2666e853d5465ed7f1b2db225cbdeb96a" translate="yes" xml:space="preserve">
          <source>Logs in a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81223feae70b49466b5ef708518746cf7f3f2ffe" translate="yes" xml:space="preserve">
          <source>Logs out the current user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3ea5bad566f67349316c4cac02d4b8d53cbbaa" translate="yes" xml:space="preserve">
          <source>Logs the command data if logging is enabled at &lt;a href=&quot;yii-mongodb-command#%24db-detail&quot;&gt;$db&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1eaf122c671d0f78bbdd6227293792e3461a25" translate="yes" xml:space="preserve">
          <source>Logs the given exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398d9d963ec1c7c4bb9dfae7c37067932719adc3" translate="yes" xml:space="preserve">
          <source>Logs the incoming message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4257b8b7af901b14a89e82b76a791e9b994c6b" translate="yes" xml:space="preserve">
          <source>Long-live access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3761c198c3b9334a923ad84f17c9bac6c80b68" translate="yes" xml:space="preserve">
          <source>Long-live client-specific access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e65ef4ceb8b069633d052eb201af82159f0f8c" translate="yes" xml:space="preserve">
          <source>Look-up table of block sizes and key sizes for each supported OpenSSL cipher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a708cec100512a502d065a65dc7821a4dc2587c9" translate="yes" xml:space="preserve">
          <source>Lower limit of the date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96a5be354d79e7ce0bf6bb1247687f4673f323e" translate="yes" xml:space="preserve">
          <source>Lower limit of the date. Defaults to null, meaning no lower limit. This can be a unix timestamp or a string representing a date time value. If this property is a string, &lt;a href=&quot;yii-validators-datevalidator#%24format-detail&quot;&gt;$format&lt;/a&gt; will be used to parse it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31468b023be2d38d6d0760b5d214f54f2c975af9" translate="yes" xml:space="preserve">
          <source>Lower limit of the number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b656566e460953bcbcbd6593f42db2a6b383ce41" translate="yes" xml:space="preserve">
          <source>Lower limit of the number. Defaults to null, meaning no lower limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53dde039600b11ceb7d5c40b7d4708ab0be18748" translate="yes" xml:space="preserve">
          <source>MATCH expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7b36fce59bf72ffcfa076c213d82e4bcd47e44" translate="yes" xml:space="preserve">
          <source>MATCH expression. For example: &lt;code&gt;['title' =&amp;gt; 'Yii', 'content' =&amp;gt; 'Sphinx']&lt;/code&gt;. Note: being specified as a plain string this value will not be quoted or escaped, do not pass possible unsecured values (like the ones obtained from HTTP request) as a direct value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d74d7b94fd2e3c811de2562d22ff4a06145f8e" translate="yes" xml:space="preserve">
          <source>MATCH specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cda182ca8ddbf0970ca5beeba9d28639236bbde" translate="yes" xml:space="preserve">
          <source>MIME types for which this component should redirect to the &lt;a href=&quot;yii-web-user#%24loginUrl-detail&quot;&gt;$loginUrl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2c8688c8c27404145a05bf00384444c0f36536" translate="yes" xml:space="preserve">
          <source>MODE_BEGIN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05097ba1302bbd5879e88ac271fc09ce24657ee6" translate="yes" xml:space="preserve">
          <source>MODE_DEFAULT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f4392e721854e18ab68b82c594c1f1cef517e0" translate="yes" xml:space="preserve">
          <source>MODE_NL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab4bb5a49949a58087a8e46ef5f995205172a4e" translate="yes" xml:space="preserve">
          <source>MODE_S</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e240ba53197048542529fc3a68db2bdd10b7f8f1" translate="yes" xml:space="preserve">
          <source>MODE_SS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a2813f81d9898d1a85273a443d23015242d6a9" translate="yes" xml:space="preserve">
          <source>MODE_SSX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fcdf699eed3d65a7fbdac84a050ad431daa3c7" translate="yes" xml:space="preserve">
          <source>MODE_SX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d72ece4f0718970f1d8bfd4f5d4ba12c11da68e" translate="yes" xml:space="preserve">
          <source>MODE_X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3970a8c4417d0b347ef4bd4b01d45cdb9b21dd" translate="yes" xml:space="preserve">
          <source>MO_FILE_EXT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eec99373788cef09c69f9ea74d681c384b99c8f" translate="yes" xml:space="preserve">
          <source>MS SQL Server (via dblib driver): &lt;code&gt;dblib:host=localhost;dbname=mydatabase&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32aaf1ee822f3103e1d8db007ebe214bf3cb54d2" translate="yes" xml:space="preserve">
          <source>MS SQL Server (via mssql driver): &lt;code&gt;mssql:host=localhost;dbname=mydatabase&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb958d2d7eae94cd726d1ccb2b01cde52a843bdd" translate="yes" xml:space="preserve">
          <source>MS SQL Server (via sqlsrv driver): &lt;code&gt;sqlsrv:Server=localhost;Database=mydatabase&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73129c6787fd6878e52f5c535ce96958f035de58" translate="yes" xml:space="preserve">
          <source>MSSQL: BLOB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10917249f1c6c2cfdc6f1026444ec679a191c278" translate="yes" xml:space="preserve">
          <source>Magic method to turn a cookie object into a string without having to explicitly access &lt;a href=&quot;yii-web-cookie#%24value-detail&quot;&gt;$value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a375b18ee809226f9ea0be5b4c7c56d41ab9a4" translate="yes" xml:space="preserve">
          <source>Mail component configuration depends on the extension you have chosen. In general your application configuration should look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a78ac1486c1a4dc0a58d151c11bb1944956d78" translate="yes" xml:space="preserve">
          <source>MailEvent represents the event parameter used for events triggered by &lt;a href=&quot;yii-mail-basemailer&quot;&gt;yii\mail\BaseMailer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321530249c78430c39a54a1be1296e845e90bda9" translate="yes" xml:space="preserve">
          <source>Mailer instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ec5ecfdb520432d5d8f176dab62438a20a90a4" translate="yes" xml:space="preserve">
          <source>MailerInterface is the interface that should be implemented by mailer classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b021f972afbe812cbac8ac2665f8326a264f8c" translate="yes" xml:space="preserve">
          <source>Mailing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e052e032d3949f912aa4fe5f57545b4b5780e49" translate="yes" xml:space="preserve">
          <source>Main exception processed in &lt;a href=&quot;yii-base-errorhandler#handleException()-detail&quot;&gt;handleException()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494f16677a20bda334f386ff05447c80b180dfd2" translate="yes" xml:space="preserve">
          <source>Make a Package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39943b784fcf35be6c3ae3cead25ffca141852d" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;compinit&lt;/code&gt; is loaded or do it by adding in &lt;code&gt;~/.zshrc&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9caba9dd2b7e0651e8fb6ffeaad82985385f4ff4" translate="yes" xml:space="preserve">
          <source>Make sure bash completion is installed. For most of installations it is available by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfeb67bf9950dd3ad53c7318c4f6d5e700146616" translate="yes" xml:space="preserve">
          <source>Make sure empty input is stored as &lt;code&gt;null&lt;/code&gt; in the database; we differentiate between a value being &quot;not set&quot; and the actual value &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;null&lt;/code&gt; is not allowed you can set another default value here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb69633c05cb7adf284214450106220c712fae2" translate="yes" xml:space="preserve">
          <source>Make sure the record has been fetched with a \yii\elasticsearch\version before. This is only the case for records fetched via &lt;a href=&quot;yii-elasticsearch-activerecord#get()-detail&quot;&gt;get()&lt;/a&gt; and &lt;a href=&quot;yii-elasticsearch-activerecord#mget()-detail&quot;&gt;mget()&lt;/a&gt; by default. For normal queries, the &lt;code&gt;_version&lt;/code&gt; field has to be fetched explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00aedc507d9ac0b23c84e4e00951a0016023027c" translate="yes" xml:space="preserve">
          <source>Make sure the value is of type integer, e.g. casting a string &lt;code&gt;'42'&lt;/code&gt; to integer &lt;code&gt;42&lt;/code&gt;. Here we set &lt;a href=&quot;yii-validators-filtervalidator#%24skipOnEmpty-detail&quot;&gt;$skipOnEmpty&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;, which is &lt;code&gt;false&lt;/code&gt; by default on the &lt;a href=&quot;yii-validators-filtervalidator&quot;&gt;filter&lt;/a&gt; validator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9466e5c7f639628ec5b0c47e6e1d8969317f9d84" translate="yes" xml:space="preserve">
          <source>Make sure to read carefully what CORS does and does not. CORS do not secure your API, but allow the developer to grant access to third party code (ajax calls from external domain).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77946549d787d5277e70835e434d3b93ad01f1da" translate="yes" xml:space="preserve">
          <source>Make sure you are using this method whenever composing 'MATCH' search statement. Note: this method does not perform quoting, you should place the result in the quotes an perform additional escaping for it manually, the best way to do it is using PDO parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35531a9d91c1063acdfa593813b5dfd351ef19c6" translate="yes" xml:space="preserve">
          <source>Make sure you set &lt;a href=&quot;yii-web-user#%24loginUrl-detail&quot;&gt;$loginUrl&lt;/a&gt; so that the user browser can be redirected to the specified login URL after calling this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be25ebb527cd65cc24417d4b2f27c07dd8b99901" translate="yes" xml:space="preserve">
          <source>Makes field auto completable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a279ad4f43209df9cd46c2bb31a4ac26da09247" translate="yes" xml:space="preserve">
          <source>Makes field remember its value between page reloads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b44c597df51ba9321547d7f2d64fc8e3edd895" translate="yes" xml:space="preserve">
          <source>Makes sure abandoned upload is cancelled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efe7cc9fae90160e9f0151ea5e9fe5ed8354166" translate="yes" xml:space="preserve">
          <source>Makes sure that indexes, which are crucial for the file processing, exist at this collection and &lt;a href=&quot;yii-mongodb-file-collection#%24chunkCollection-detail&quot;&gt;$chunkCollection&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838b88c460896b451c68d9377694a94d69cafecb" translate="yes" xml:space="preserve">
          <source>Makes sure that the behaviors declared in &lt;a href=&quot;yii-base-component#behaviors()-detail&quot;&gt;behaviors()&lt;/a&gt; are attached to this component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41f573cdd37cdaa0180d3f8077cca38c78f00af" translate="yes" xml:space="preserve">
          <source>Manager uses 3 collections for the RBAC data storage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b03677e3fec4a0163668d0f979aef0574838458" translate="yes" xml:space="preserve">
          <source>Manages application migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38529d3399d4b00190e4bf7735505dea9054bf78" translate="yes" xml:space="preserve">
          <source>Manages fixture data loading and unloading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb9b0b0a29cd5d87159dc9f102dfc89c2558670" translate="yes" xml:space="preserve">
          <source>Managing Fixtures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ee5bcbc1e133acd016c6485956a713b0830d83" translate="yes" xml:space="preserve">
          <source>Manually specifies the primary key for this table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd38acfd3a9c01698d0e16ba1b190ebcc9298a8a" translate="yes" xml:space="preserve">
          <source>Many &lt;a href=&quot;guide-tutorial-core-validators&quot;&gt;core validators&lt;/a&gt; support client-side validation out-of-the-box. All you need to do is just use &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt; to build your HTML forms. For example, &lt;code&gt;LoginForm&lt;/code&gt; below declares two rules: one uses the &lt;a href=&quot;guide-tutorial-core-validators#required&quot;&gt;required&lt;/a&gt; core validator which is supported on both client and server-sides; the other uses the &lt;code&gt;validatePassword&lt;/code&gt; inline validator which is only supported on the server side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a5323c2e3b2f2829eaca6f84c0c81af6370fef" translate="yes" xml:space="preserve">
          <source>Many DBMS support &lt;a href=&quot;http://en.wikipedia.org/wiki/Replication_(computing)#Database_replication&quot;&gt;database replication&lt;/a&gt; to get better database availability and faster server response time. With database replication, data are replicated from the so-called &lt;em&gt;master servers&lt;/em&gt; to &lt;em&gt;slave servers&lt;/em&gt;. All writes and updates must take place on the master servers, while reads may also take place on the slave servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca7bd388ec5d177fa8f6095711c0d1b8a1eeef4" translate="yes" xml:space="preserve">
          <source>Many PHP functions qualify this signature (e.g. &lt;code&gt;trim()&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28934d8944f1b9de28d69d071cb627030c70bed4" translate="yes" xml:space="preserve">
          <source>Map of DB errors and corresponding exceptions If left part is found in DB error message exception class from the right part is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a6b1e6edd39b2ddf27762b5c0f1ec159ed503a" translate="yes" xml:space="preserve">
          <source>Map of MATCH keywords to builder methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159828d810a713aca7af3c09ac88bc3a6354c162" translate="yes" xml:space="preserve">
          <source>Map of MATCH keywords to builder methods. These methods are used by &lt;a href=&quot;yii-sphinx-matchbuilder#buildMatch()-detail&quot;&gt;buildMatch()&lt;/a&gt; to build MATCH expression from array syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3537f25d8b994dd9ee96fa38511e9bb8b4e59ac" translate="yes" xml:space="preserve">
          <source>Map of MATCH operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f58423fed70087166aeba84ff6ce331558e1882" translate="yes" xml:space="preserve">
          <source>Map of MATCH operators. These operators are used for replacement of verbose operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2512e0d55e0ee3a93a414ba38751b6a9bc6d8321" translate="yes" xml:space="preserve">
          <source>Map of chars to their replacements in LIKE conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e33ef9b797c69ef08f016ed347af5e0bd838f32" translate="yes" xml:space="preserve">
          <source>Map of chars to their replacements in LIKE conditions. By default it's configured to escape &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt; with &lt;code&gt;\&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a854801ecf48b9ba5bebdd74a4d02dae7f200295" translate="yes" xml:space="preserve">
          <source>Map of matches between AX and SREG attribute names in format: axAttributeName =&amp;gt; sregAttributeName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14194660b7cd274779c88f75e0e87711e4bedcdf" translate="yes" xml:space="preserve">
          <source>Map of query condition to builder methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="119c850c5825228046533a6809e6ade2e16435c1" translate="yes" xml:space="preserve">
          <source>Map of query condition to builder methods. These methods are used by &lt;a href=&quot;yii-db-querybuilder#buildCondition()-detail&quot;&gt;buildCondition()&lt;/a&gt; to build SQL conditions from array syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753d267f085e6faf77e5748562673450e661ab64" translate="yes" xml:space="preserve">
          <source>Map of query condition to builder methods. These methods are used by &lt;a href=&quot;yii-sphinx-querybuilder#buildCondition()-detail&quot;&gt;buildCondition()&lt;/a&gt; to build SQL conditions from array syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a3be67074feb2b795fa25b975a17b497de7869" translate="yes" xml:space="preserve">
          <source>Mapping between PDO driver names and &lt;a href=&quot;yii-db-schema&quot;&gt;yii\db\Schema&lt;/a&gt; classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d1412595facbf35aba4d653d8ca6db80d2eb77" translate="yes" xml:space="preserve">
          <source>Mapping between PDO driver names and &lt;a href=&quot;yii-db-schema&quot;&gt;yii\db\Schema&lt;/a&gt; classes. The keys of the array are PDO driver names while the values the corresponding schema class name or configuration. Please refer to &lt;a href=&quot;yii-baseyii#createObject()-detail&quot;&gt;Yii::createObject()&lt;/a&gt; for details on how to specify a configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9533d8660e8ea21a8d0396895a0fd5ae1807b857" translate="yes" xml:space="preserve">
          <source>Mapping between PDO driver names and &lt;a href=&quot;yii-sphinx-schema&quot;&gt;yii\sphinx\Schema&lt;/a&gt; classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a575169867f97b4ad360214dc01807ba47fe1263" translate="yes" xml:space="preserve">
          <source>Mapping between PDO driver names and &lt;a href=&quot;yii-sphinx-schema&quot;&gt;yii\sphinx\Schema&lt;/a&gt; classes. The keys of the array are PDO driver names while the values the corresponding schema class name or configuration. Please refer to \yii\sphinx\Yii::createObject() for details on how to specify a configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed8ecd68176e86cc5af23024e7d5e0a406c0e20" translate="yes" xml:space="preserve">
          <source>Mapping between message categories and the corresponding message file paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85af66b12f632eb86c3b04d09bcfff4a173f9fc" translate="yes" xml:space="preserve">
          <source>Mapping between message categories and the corresponding message file paths. The file paths are relative to &lt;a href=&quot;yii-i18n-phpmessagesource#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaef66b5c0d4e8da864a501a4faef3eb3ea2d09" translate="yes" xml:space="preserve">
          <source>Mapping from abstract column types (keys) to physical column types (values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb6c8c68ee41f3c61243ac50fafb2d06bb272b8" translate="yes" xml:space="preserve">
          <source>Mapping from controller ID to controller configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18dac7d194b092627b5ae1efd604eaf2757a8fe4" translate="yes" xml:space="preserve">
          <source>Mapping from controller ID to controller configurations. Each name-value pair specifies the configuration of a single controller. A controller configuration can be either a string or an array. If the former, the string should be the fully qualified class name of the controller. If the latter, the array must contain a &lt;code&gt;class&lt;/code&gt; element which specifies the controller's fully qualified class name, and the rest of the name-value pairs in the array are used to initialize the corresponding controller properties. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5300b8e3c8c7e637ee4a1aa9662f95af8b64b9df" translate="yes" xml:space="preserve">
          <source>Mapping from physical column types (keys) to abstract column types (values)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3c0faed22000f721cbba0966ffd301bbf38035" translate="yes" xml:space="preserve">
          <source>Mapping from physical column types (keys) to abstract column types (values) Please refer to &lt;a href=&quot;http://www.cubrid.org/manual/91/en/sql/datatype.html&quot;&gt;CUBRID manual&lt;/a&gt; for details on data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a3b8f184830a18921f6966d9722946318b097d" translate="yes" xml:space="preserve">
          <source>Mapping from physical column types (keys) to abstract column types (values) Please refer to [CUBRID manual](&lt;a href=&quot;http://www&quot;&gt;http://www&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024ee816bf3b554b4774272047edef703381ae6c" translate="yes" xml:space="preserve">
          <source>Mapping from source asset files (keys) to target asset files (values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42507e65e68442446b0923891e077351b1b7970a" translate="yes" xml:space="preserve">
          <source>Mapping of abstract column types (keys) to type categories (values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f00002bb6ad2eec19a19de8a03c7d6fad15adff" translate="yes" xml:space="preserve">
          <source>MariaDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb250b93253b6f44f8bf64743627aca7ae60f966" translate="yes" xml:space="preserve">
          <source>Markdown provides an ability to transform markdown into HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee946bfa0667124fbf974d9d5afe78c0d071f06" translate="yes" xml:space="preserve">
          <source>Marks a specified table schema to be refreshed after command execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33636bc5b60ae4aad32c7ca4a09a7d5bf830edd9" translate="yes" xml:space="preserve">
          <source>Marks an attribute dirty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4fbd433af5683314a0986a06ce3b5835fa8093" translate="yes" xml:space="preserve">
          <source>Marks column as unsigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5a763cf5da3f53b13d869846c45e860b90c0ba" translate="yes" xml:space="preserve">
          <source>Marks the beginning of a code block for profiling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfe1d8d1c190e8dcc8791231445918fe921172e" translate="yes" xml:space="preserve">
          <source>Marks the beginning of a page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9365d903840037858593c9866918e84eed2f04" translate="yes" xml:space="preserve">
          <source>Marks the beginning of an HTML body section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd96ee848fe721e6414ecd61de65c606bc9e2ed" translate="yes" xml:space="preserve">
          <source>Marks the end of a code block for profiling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcfcebcf1e31861c6ea6ec84d867942505c5ccc" translate="yes" xml:space="preserve">
          <source>Marks the end of content to be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98da573b2a4f44c96fc69b6bb39354edb2f58f5" translate="yes" xml:space="preserve">
          <source>Marks the end of content to be cleaned from whitespace characters between HTML tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571b6c963de5117352fd4396b7280dfd4d9072f9" translate="yes" xml:space="preserve">
          <source>Marks the ending of a page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbc0a4396a14d3001c4cf40ec8ccdaed4d6f39e" translate="yes" xml:space="preserve">
          <source>Marks the ending of an HTML body section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5043920b1fc089e9d6388563ee4016f4bd325c" translate="yes" xml:space="preserve">
          <source>Marks the ending of an HTML page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9ce70c9d05b250a0544d2f47ec834aec67b681" translate="yes" xml:space="preserve">
          <source>Marks the position of an HTML head section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9d0f7b28879a8daad20c0723596830496fe1b2" translate="yes" xml:space="preserve">
          <source>MaskedInput generates a masked text input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60b8511abaf165f8bb2c02d6997fc6b367dbd39" translate="yes" xml:space="preserve">
          <source>MaskedInput is similar to &lt;a href=&quot;yii-helpers-basehtml#textInput()-detail&quot;&gt;yii\helpers\Html::textInput()&lt;/a&gt; except that an input mask will be used to force users to enter properly formatted data, such as phone numbers, social security numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a28c5f68110b86439fa329ee9ee03b768b62fff" translate="yes" xml:space="preserve">
          <source>Masks a token to make it uncompressible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b699f2cd56d91a3a82338de32ff0f15373db38" translate="yes" xml:space="preserve">
          <source>Massive Assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8845bcd014c261cb3d5325154bc9f3dfd786c4e" translate="yes" xml:space="preserve">
          <source>Massive assignment is a convenient way of populating a model with user inputs using a single line of code. It populates the attributes of a model by assigning the input data directly to the &lt;a href=&quot;yii-base-model#%24attributes-detail&quot;&gt;yii\base\Model::$attributes&lt;/a&gt; property. The following two pieces of code are equivalent, both trying to assign the form data submitted by end users to the attributes of the &lt;code&gt;ContactForm&lt;/code&gt; model. Clearly, the former, which uses massive assignment, is much cleaner and less error prone than the latter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa6dd5bf956c40c8a239a5b428f8479311aefa5" translate="yes" xml:space="preserve">
          <source>Massive assignment only applies to the so-called &lt;em&gt;safe attributes&lt;/em&gt; which are the attributes listed in &lt;a href=&quot;yii-base-model#scenarios()-detail&quot;&gt;yii\base\Model::scenarios()&lt;/a&gt; for the current &lt;a href=&quot;yii-base-model#%24scenario-detail&quot;&gt;scenario&lt;/a&gt; of a model. For example, if the &lt;code&gt;User&lt;/code&gt; model has the following scenario declaration, then when the current scenario is &lt;code&gt;login&lt;/code&gt;, only the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; can be massively assigned. Any other attributes will be kept untouched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9354dc56a3cc9fa8741354e70a8ef2dd27f9483f" translate="yes" xml:space="preserve">
          <source>Match builder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c22bededda367b5ee4a04d29831608c006bc68" translate="yes" xml:space="preserve">
          <source>Match condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3398898817ca2dc404ff023a1a7b3386da978f7c" translate="yes" xml:space="preserve">
          <source>Max X coordinate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d643f0e59253297302e0c9a4f1f236c95fed97a6" translate="yes" xml:space="preserve">
          <source>Max Y coordinate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af5a0108d071822bd3836fa9ad86e1c8141d782" translate="yes" xml:space="preserve">
          <source>Max number of characters of the SQL outputted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d36282c7f873da0e5d54e396550c59a19677ea9" translate="yes" xml:space="preserve">
          <source>Max number of characters of the SQL outputted. Useful for reduction of long statements and making console output more compact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d3e1d723548370097ada166f708141f26d08ec" translate="yes" xml:space="preserve">
          <source>Maximum depth that the dumper should go into the variable. Defaults to 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e18e53612f2778202e8938791bed9ede8e1266" translate="yes" xml:space="preserve">
          <source>Maximum length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a7155905c76640a15dd7451d1a2c203b637634" translate="yes" xml:space="preserve">
          <source>Maximum length. If not set, it means no maximum length limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0c805fd3a0ed63e8fe1e74d95be32f38184c04" translate="yes" xml:space="preserve">
          <source>Maximum log file size, in kilo-bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f893986b8f01ca844a4a7202d08c83805c8bde31" translate="yes" xml:space="preserve">
          <source>Maximum log file size, in kilo-bytes. Defaults to 10240, meaning 10MB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d6faf9234c063fc5b38d1e947450683eb790bb" translate="yes" xml:space="preserve">
          <source>Maximum number of page buttons that can be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede5e3f705ef8dec941dba46a4206e6b3bcfed54" translate="yes" xml:space="preserve">
          <source>Maximum number of page buttons that can be displayed. Defaults to 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc58a88af0b86845ff7a1533f49e25950901370" translate="yes" xml:space="preserve">
          <source>Maximum number of records to be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184aac33035a7cd9c16b7e8ad524ff5010322227" translate="yes" xml:space="preserve">
          <source>Maximum number of records to be returned. May be an instance of &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt;. If not set or less than 0, it means no limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed7362da31d25da2e336e9593e93a05e3753bd1" translate="yes" xml:space="preserve">
          <source>Maximum number of source code lines to be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a76356375a3e7455002873e6914b6b5df00443f" translate="yes" xml:space="preserve">
          <source>Maximum number of source code lines to be displayed. Defaults to 19.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6356f8e0d5b9cc7e3274746f09727898851abd26" translate="yes" xml:space="preserve">
          <source>Maximum number of trace source code lines to be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7601c086cae61e2bd6161c4686aa622bf9966a" translate="yes" xml:space="preserve">
          <source>Maximum number of trace source code lines to be displayed. Defaults to 13.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3ad9e45eeb6b3521a283414a078d14b9d624a5" translate="yes" xml:space="preserve">
          <source>Maximum symbols count of the request content, which should be taken to compose a log and profile messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b7d2d9b180a777eea1f9e3c3ea2070f9a36828" translate="yes" xml:space="preserve">
          <source>Maximum symbols count of the request content, which should be taken to compose a log and profile messages. Exceeding content will be truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d235dbe1ab6989855a0b5487b8965d886d51141d" translate="yes" xml:space="preserve">
          <source>Maximum upload files count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2736939828176ad87d11b7a03e9925d86d4bc361" translate="yes" xml:space="preserve">
          <source>Mechanism to pass a widget's tag name to the callback function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="205c64b75d693711d171499fde40825fcbb1e459" translate="yes" xml:space="preserve">
          <source>MemCache can be configured with a list of memcache servers by settings its &lt;a href=&quot;yii-caching-memcache#%24servers-detail&quot;&gt;$servers&lt;/a&gt; property. By default, MemCache assumes there is a memcache server running on localhost at port 11211.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17f6b68f34c744bd9010e643491ad9e9d92528e" translate="yes" xml:space="preserve">
          <source>MemCache implements a cache application component based on &lt;a href=&quot;http://pecl.php.net/package/memcache&quot;&gt;memcache&lt;/a&gt; and &lt;a href=&quot;http://pecl.php.net/package/memcached&quot;&gt;memcached&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d6a673ad401f88747cddffdac84507cd24a725" translate="yes" xml:space="preserve">
          <source>MemCache supports both &lt;a href=&quot;http://pecl.php.net/package/memcache&quot;&gt;memcache&lt;/a&gt; and &lt;a href=&quot;http://pecl.php.net/package/memcached&quot;&gt;memcached&lt;/a&gt;. By setting &lt;a href=&quot;yii-caching-memcache#%24useMemcached-detail&quot;&gt;$useMemcached&lt;/a&gt; to be true or false, one can let MemCache to use either memcached or memcache, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab1d5e5fe5e2d6d05bff489b6076dc6055b3187" translate="yes" xml:space="preserve">
          <source>MemCacheServer represents the configuration data for a single memcache or memcached server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f26e4999df14bfdaf3aa7635aa2364fc8ee6ee6" translate="yes" xml:space="preserve">
          <source>Memcache server hostname or IP address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4471485363b18c65369608fd001223300c7650" translate="yes" xml:space="preserve">
          <source>Memcache server port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3916e2c1782b78d24da2d1d54e2090babcca09fb" translate="yes" xml:space="preserve">
          <source>Memcached sasl password.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cad3e490be9d6111fafc6ccd0c8d2228867fa33" translate="yes" xml:space="preserve">
          <source>Memcached sasl password. This property is used only when &lt;a href=&quot;yii-caching-memcache#%24useMemcached-detail&quot;&gt;$useMemcached&lt;/a&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f49999f76a4ba395df70919275b693485c21dd" translate="yes" xml:space="preserve">
          <source>Memcached sasl username.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d37fa4e4ae494adccc506a51c03a57f8453719" translate="yes" xml:space="preserve">
          <source>Memcached sasl username. This property is used only when &lt;a href=&quot;yii-caching-memcache#%24useMemcached-detail&quot;&gt;$useMemcached&lt;/a&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80b60986bbeaea8286d950c8ed079e3d85f386c" translate="yes" xml:space="preserve">
          <source>Memory peak in request, bytes. (obtained by memory_get_peak_usage())</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38234f9842c447915174725b0879c6c964a2b56" translate="yes" xml:space="preserve">
          <source>Menu checks the current route and request parameters to toggle certain menu items with active state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca73b4f85af52afc65704e76d6a2bf99355241b" translate="yes" xml:space="preserve">
          <source>Menu displays a multi-level menu using nested HTML lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ec34a4e2c1e46d4af69cb3ce3921b9fdc5f05d" translate="yes" xml:space="preserve">
          <source>Merges the user-specified constructor parameters with the ones registered via &lt;a href=&quot;yii-di-container#set()-detail&quot;&gt;set()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e041c7bec64dcd0740c252efca538105f09fc9d5" translate="yes" xml:space="preserve">
          <source>Merges two or more arrays into one recursively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee352746a8a37a9e615d4f78deda3321333e1f1" translate="yes" xml:space="preserve">
          <source>Merging Arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c9e2d97748386d509945195e352738c1baaa27" translate="yes" xml:space="preserve">
          <source>Message Filtering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc45c41713c438d171f02deedd2abd4c58543bb" translate="yes" xml:space="preserve">
          <source>Message Flushing and Exporting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0eb37d987caeb7f4241b1ced601aa550809378c" translate="yes" xml:space="preserve">
          <source>Message Formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184cfeb3bcc9652c7d9e20a573d2784f1f71454f" translate="yes" xml:space="preserve">
          <source>Message HTML content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a891cc727f6033272ca0343a5ebb09d5977544" translate="yes" xml:space="preserve">
          <source>Message Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f07409841e2b60d72a1ef72a077ee6f852aace" translate="yes" xml:space="preserve">
          <source>Message Trace Level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa4741ab34043c3c6e479022e08d6134dcf7d6c2" translate="yes" xml:space="preserve">
          <source>Message Translation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd02d913cb119cdff7ac06cbea49847fd6a6957" translate="yes" xml:space="preserve">
          <source>Message attribute input search value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100b9a15b3505d18b47cd482911ba305f5d05d12" translate="yes" xml:space="preserve">
          <source>Message catalog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c168823ae33ee1c6bbb64b9aea9107c9a68ccaa" translate="yes" xml:space="preserve">
          <source>Message categories to ignore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997f1bf889aa92623e07b3a1a34604dddfce979d" translate="yes" xml:space="preserve">
          <source>Message categories to ignore. For example, 'yii', 'app*', 'widgets/menu', etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5e57ac8af3eb8144ab700d974ccab1c6610193" translate="yes" xml:space="preserve">
          <source>Message categories to ignore. This parameter is available since version 2.0.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2489a972af3ca280f82e4b3bfbdf5bc49ae645" translate="yes" xml:space="preserve">
          <source>Message category</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024713379b542a256fd94842ec98b60110f94859" translate="yes" xml:space="preserve">
          <source>Message context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5486b4cd5ff09311a33720530756f20b290c638" translate="yes" xml:space="preserve">
          <source>Message default class name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e4a2088a390aa0f85d6499efb7955da10c790e" translate="yes" xml:space="preserve">
          <source>Message instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bf570375713e1d045933b910314ee409cead2e" translate="yes" xml:space="preserve">
          <source>Message levels that this target is interested in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65edf0ef8e06c4ee831c3d779c9d3193902064f" translate="yes" xml:space="preserve">
          <source>Message logger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217943aced2d4411216308e8dcc55f8cd3ef6991" translate="yes" xml:space="preserve">
          <source>Message plain text content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3649d342d6f2b23956d6785a3a20ab94c46100d2" translate="yes" xml:space="preserve">
          <source>Message subject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8cd571af47a168d5a967ef60c0fff91864a4b9" translate="yes" xml:space="preserve">
          <source>Message to be decoded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab6e7ff7859a60779c902bb6d1575010611d09c" translate="yes" xml:space="preserve">
          <source>Message to be encoded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78e70f8804ba770c221a1ef325e20127268638d" translate="yes" xml:space="preserve">
          <source>Message to be logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8133ff1a7c025c524c2a9d79642524191774fd17" translate="yes" xml:space="preserve">
          <source>Message translations. Array keys are source messages and array values are translated messages: source message =&amp;gt; translated message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73dcd58e6b36b3bd39c317c5bb52e7d5f4986b7b" translate="yes" xml:space="preserve">
          <source>Message translations. Array keys are source messages and array values are translated messages: source message =&amp;gt; translated message. Note if the message has a context, the message ID must be prefixed with the context with chr(4) as the separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce897f41808e4f2264b1d929e4b2bfbd046b0983" translate="yes" xml:space="preserve">
          <source>MessageFormatter allows formatting messages via &lt;a href=&quot;http://userguide.icu-project.org/formatparse/messages&quot;&gt;ICU message format&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d0f3340c275e524d91dd67e69229041be7f26c" translate="yes" xml:space="preserve">
          <source>MessageInterface is the interface that should be implemented by mail message classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bef465595297aa0286e7d09163b71e894a7d71" translate="yes" xml:space="preserve">
          <source>MessageSource is the base class for message translation repository classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1702b4686278becffc88baabe6f4b7a8355532c" translate="yes" xml:space="preserve">
          <source>Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6d62d1f5a7833f644534930289d579c58821d3" translate="yes" xml:space="preserve">
          <source>Messages are sent by a &lt;a href=&quot;yii-mail-mailerinterface&quot;&gt;mailer&lt;/a&gt;, like the following,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe3a542eaadfb8129f06d26f45817a5219e5257" translate="yes" xml:space="preserve">
          <source>Messages to be filtered. The message structure follows that in &lt;a href=&quot;yii-log-logger#%24messages-detail&quot;&gt;yii\log\Logger::$messages&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf626a38d983023ec94738c0420ca1e4feef575f" translate="yes" xml:space="preserve">
          <source>Messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea14da0542c7b76a797d9d7a8d658159eb07935" translate="yes" xml:space="preserve">
          <source>Metadata of the named column. Null if the named column does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b0b12227818d22bc738166177258514bf814c7" translate="yes" xml:space="preserve">
          <source>Method &lt;a href=&quot;yii-web-multipartformdataparser#parse()-detail&quot;&gt;parse()&lt;/a&gt; of this parser automatically populates &lt;code&gt;$_FILES&lt;/code&gt; with the files parsed from raw body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa5ddf28092af5ca59f2b6bbac9a334682e0337" translate="yes" xml:space="preserve">
          <source>Method Details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2b394af636e54cb732f37f241456f842cb339d" translate="yes" xml:space="preserve">
          <source>Method Injection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18754adb324b714a265e93bb8a9892892ff9ee0a" translate="yes" xml:space="preserve">
          <source>Method arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95f3f474af009b1b1a7345bde3ce528a76d9bb96" translate="yes" xml:space="preserve">
          <source>Method attribute input search value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d43528c9bf44ddb297747ddeabf298f0d34af8" translate="yes" xml:space="preserve">
          <source>Method call arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd6d1d93e55c6332fc6b4993ab5241220f498ff" translate="yes" xml:space="preserve">
          <source>Method combines both &lt;a href=&quot;yii-caching-cache#set()-detail&quot;&gt;set()&lt;/a&gt; and &lt;a href=&quot;yii-caching-cache#get()-detail&quot;&gt;get()&lt;/a&gt; methods to retrieve value identified by a $key, or to store the result of $callable execution if there is no cache available for the $key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216c35d20b6bd350728278edcba10a2e486c2f75" translate="yes" xml:space="preserve">
          <source>Method combines both &lt;a href=&quot;yii-caching-cacheinterface#set()-detail&quot;&gt;set()&lt;/a&gt; and &lt;a href=&quot;yii-caching-cacheinterface#get()-detail&quot;&gt;get()&lt;/a&gt; methods to retrieve value identified by a $key, or to store the result of $callable execution if there is no cache available for the $key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77396e7c9593c87b4e117ff0aa74ea8e2661745e" translate="yes" xml:space="preserve">
          <source>Method injection;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1389e0e832a05337d6ccb31e50ea1425ca91a8" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c05510ff980922d54b445c72f0a95f66d839b3" translate="yes" xml:space="preserve">
          <source>Method name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919c991015ea5f5e52f18b282ab592b93a5fc969" translate="yes" xml:space="preserve">
          <source>Method of PDOStatement to be called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b1e018911c71558a4452995257607611c50240" translate="yes" xml:space="preserve">
          <source>Method of the input search value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0569dc6d87e2a3a8e065207bfeaf825a3ee91498" translate="yes" xml:space="preserve">
          <source>Method parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050e8011659a22b85e98a14d747d5e8ce61daf6f" translate="yes" xml:space="preserve">
          <source>Method result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203550256ccbdb5e82c4cca7be2ab977ca1ba780" translate="yes" xml:space="preserve">
          <source>Method tries to load the $category messages for the $fallbackLanguage and adds them to the $messages array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efc0cffc449052f8667943391112f47814b72ea" translate="yes" xml:space="preserve">
          <source>Method which should be invoked in over the &lt;a href=&quot;yii-caching-dbquerydependency#%24query-detail&quot;&gt;$query&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e7e3d571baab94d7652799eb1501ee4cd00a3b" translate="yes" xml:space="preserve">
          <source>MethodNotAllowedHttpException represents a &quot;Method Not Allowed&quot; HTTP exception with status code 405.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6da2ea97887949e5063028b593733239ca1523" translate="yes" xml:space="preserve">
          <source>Microsoft SQL Server 2008 or later: via &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648413ee59232cd8a3cbbba0ccd984c161d4a27f" translate="yes" xml:space="preserve">
          <source>Migrates to the certain version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9f600b4c90293498d1c36fb499f16dee775240" translate="yes" xml:space="preserve">
          <source>Migrates to the specified apply time in the past.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d921b9b1d84b08fabcaf6905efe6026376fdbc7f" translate="yes" xml:space="preserve">
          <source>Migrating Multiple Databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7178aa90664b760fada02725d15343af71ec5748" translate="yes" xml:space="preserve">
          <source>Migration classes located at this path should be declared without a namespace. Use &lt;a href=&quot;yii-console-controllers-basemigratecontroller#%24migrationNamespaces-detail&quot;&gt;$migrationNamespaces&lt;/a&gt; property in case you are using namespaced migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9751f707883375225265447a161782b418b890" translate="yes" xml:space="preserve">
          <source>Migration could be applied by using &lt;code&gt;yii migrate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39977b354c971f5244a3e4284b1cda44e745b7dd" translate="yes" xml:space="preserve">
          <source>Migration is designed to be used together with the &quot;yii migrate&quot; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b438bbc7f01014f2ebcacc807c08fe2592c17fae" translate="yes" xml:space="preserve">
          <source>Migration is the base class for representing a database migration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ed3a71f7adb95363934e19697f70354c0e7e97" translate="yes" xml:space="preserve">
          <source>Migration namespaces should be resolvable as a &lt;a href=&quot;guide-concept-aliases&quot;&gt;path alias&lt;/a&gt; if prefixed with &lt;code&gt;@&lt;/code&gt;, e.g. if you specify the namespace &lt;code&gt;app\migrations&lt;/code&gt;, the code &lt;code&gt;Yii::getAlias('@app/migrations')&lt;/code&gt; should be able to return the file path to the directory this namespace refers to. This corresponds with the &lt;a href=&quot;guide-concept-autoloading&quot;&gt;autoloading conventions&lt;/a&gt; of Yii.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db144189e4571981562609fab84058ed99ef28b" translate="yes" xml:space="preserve">
          <source>Migration provides a set of convenient methods for manipulating MongoDB data and schema. For example, the &lt;a href=&quot;yii-mongodb-migration#createIndex()-detail&quot;&gt;createIndex()&lt;/a&gt; method can be used to create a collection index. Compared with the same methods in &lt;a href=&quot;yii-mongodb-collection&quot;&gt;yii\mongodb\Collection&lt;/a&gt;, these methods will display extra information showing the method parameters and execution time, which may be useful when applying migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0712e30f2f68e37fdcdae01bc3addfd02406d98" translate="yes" xml:space="preserve">
          <source>Migration provides a set of convenient methods for manipulating database data and schema. For example, the &lt;a href=&quot;yii-db-migration#insert()-detail&quot;&gt;insert()&lt;/a&gt; method can be used to easily insert a row of data into a database table; the &lt;a href=&quot;yii-db-migration#createTable()-detail&quot;&gt;createTable()&lt;/a&gt; method can be used to create a database table. Compared with the same methods in &lt;a href=&quot;yii-db-command&quot;&gt;yii\db\Command&lt;/a&gt;, these methods will display extra information showing the method parameters and execution time, which may be useful when applying migrations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99296e1daec768790ce1faf3b29ae022112d6675" translate="yes" xml:space="preserve">
          <source>Migration version name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10a6ed63460de6764aa8c6c22ea99ff4d00a410" translate="yes" xml:space="preserve">
          <source>Minimum length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382b5759bf4af1bc64abf19aad17cce1dff27586" translate="yes" xml:space="preserve">
          <source>Minimum length. If not set, it means no minimum length limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84ff01a0ecf8483e9a3e02cb9f81e0f14080034" translate="yes" xml:space="preserve">
          <source>MissingTranslationEvent represents the parameter for the &lt;a href=&quot;yii-i18n-messagesource#EVENT_MISSING_TRANSLATION-detail&quot;&gt;yii\i18n\MessageSource::EVENT_MISSING_TRANSLATION&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c145c97ac27f6b1633bbac6e2e668df67e5f409" translate="yes" xml:space="preserve">
          <source>Mocks up the application instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178f4d8b7c7dd029d4ced14d95e182f82b936cce" translate="yes" xml:space="preserve">
          <source>Mode used to open the file, as detailed for &lt;code&gt;fopen()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a4abf088c427bdd1c6dc920dd1ba4cf08e6308" translate="yes" xml:space="preserve">
          <source>Model Class: &lt;code&gt;Country&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f342704ef30e183489897a503016feaa21f7cd2e" translate="yes" xml:space="preserve">
          <source>Model Class: &lt;code&gt;app\models\Country&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78950cc6018a22a70891a88176a7337d2d7e334e" translate="yes" xml:space="preserve">
          <source>Model also raises the following events when performing data validation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c50a52e37f37cf36d50b0367ba6a6de78bc1abc" translate="yes" xml:space="preserve">
          <source>Model class name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8d78bd8e5bd8547c4c02d64cb08f6fcc9fb039" translate="yes" xml:space="preserve">
          <source>Model column names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f90654a566c8b0d33f8200e380311e45bc9a1f" translate="yes" xml:space="preserve">
          <source>Model implements the following commonly used features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfa9ce793d5d232a5a8bcf18bd84b5ec6ba6d81" translate="yes" xml:space="preserve">
          <source>Model is the base class for data models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6755657f0ec9c00d8b7bc844f8b2ddea3f2b18f2" translate="yes" xml:space="preserve">
          <source>ModelEvent represents the parameter needed by &lt;a href=&quot;yii-base-model&quot;&gt;yii\base\Model&lt;/a&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2a0ddc2ed667d81629671072caa92027e657b1" translate="yes" xml:space="preserve">
          <source>Models are part of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC&lt;/a&gt; architecture. They are objects representing business data, rules and logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e0dd053e92b02fdfef9ce726fd5c0493055a18" translate="yes" xml:space="preserve">
          <source>Models are the central places to represent business data, rules and logic. They often need to be reused in different places. In a well-designed application, models are usually much fatter than &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a78843d6dc2747a056be4fde55097dd46d4ba45" translate="yes" xml:space="preserve">
          <source>Models often need to be exported in different formats. For example, you may want to convert a collection of models into JSON or Excel format. The exporting process can be broken down into two independent steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b44901d350d0e94ca9e7ef8f54169c6f35e594" translate="yes" xml:space="preserve">
          <source>Models represent business data in terms of &lt;em&gt;attributes&lt;/em&gt;. Each attribute is like a publicly accessible property of a model. The method &lt;a href=&quot;yii-base-model#attributes()-detail&quot;&gt;yii\base\Model::attributes()&lt;/a&gt; specifies what attributes a model class has.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4ede80b41077e361bc7e4022e205c6142177e7" translate="yes" xml:space="preserve">
          <source>Models: &lt;code&gt;models/Country.php&lt;/code&gt; and &lt;code&gt;models/CountrySearch.php&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7138a218d643a8f843cd2d3d54165bcca637d45c" translate="yes" xml:space="preserve">
          <source>Modern web applications, additionally to static HTML pages that are rendered and sent to the browser, contain JavaScript that is used to modify the page in the browser by manipulating existing elements or loading new content via AJAX. This section describes methods provided by Yii for adding JavaScript and CSS to a website as well as dynamically adjusting these.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893279482e600b7d7fea4337f34c24dbef94cce0" translate="yes" xml:space="preserve">
          <source>Modifies the migration history to the specified version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7568a3743bef33cad1b38eed2e207be217d97b" translate="yes" xml:space="preserve">
          <source>Modify the &lt;code&gt;composer.json&lt;/code&gt; file of your application or extension and list the package in the &lt;code&gt;require&lt;/code&gt; entry. You should use &lt;code&gt;bower-asset/PackageName&lt;/code&gt; (for Bower packages) or &lt;code&gt;npm-asset/PackageName&lt;/code&gt; (for NPM packages) to refer to the library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5affcda22dabe47436bb1ef8a6a1235142d6b783" translate="yes" xml:space="preserve">
          <source>Modify the &lt;code&gt;config/web.php&lt;/code&gt; file by entering a secret key for the &lt;code&gt;cookieValidationKey&lt;/code&gt; configuration item (this is done automatically if you are installing Yii using Composer):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54759f7c06f1edb5d8acc41bfc2babc09fe6626e" translate="yes" xml:space="preserve">
          <source>Modify the Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9746c63b2974350ead4cdd17f21e81f9686705" translate="yes" xml:space="preserve">
          <source>Modifying Migration History</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6c38e7636779a17094f60b0a5fad955d3ad3a1" translate="yes" xml:space="preserve">
          <source>Module Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b03a1d69294e05e84b01cc914e06267dc35e9ab" translate="yes" xml:space="preserve">
          <source>Module ID (case-sensitive). To retrieve grand child modules, use ID path relative to this module (e.g. &lt;code&gt;admin/content&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d667bb3874326bc179d49ad90fbe916c0aaecf" translate="yes" xml:space="preserve">
          <source>Module ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a223099ac00fa206155362bb423087ad674425d8" translate="yes" xml:space="preserve">
          <source>Module ID. For grand child modules, use ID path relative to this module (e.g. &lt;code&gt;admin/content&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b024000617ede4c3d88c73c69fa8105e5a122f7" translate="yes" xml:space="preserve">
          <source>Module is the base class for module and application classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f9ee1b271194163c18c88cf2b41477dbb7987f" translate="yes" xml:space="preserve">
          <source>Modules (id =&amp;gt; module configuration or instances).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37e80fe50aba9e761d1b52579ee17e400381916" translate="yes" xml:space="preserve">
          <source>Modules are also a good way of reusing code at the feature group level. Some commonly used features, such as user management, comment management, can all be developed in terms of modules so that they can be reused easily in future projects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cf0a51796655c0d6be109fe4b786c1a72aa0a9" translate="yes" xml:space="preserve">
          <source>Modules are best used in large applications whose features can be divided into several groups, each consisting of a set of closely related features. Each such feature group can be developed as a module which is developed and maintained by a specific developer or team.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde1ea1f8e226fdc4ac358436cfa5fce2f38aceb" translate="yes" xml:space="preserve">
          <source>Modules are self-contained software units that consist of &lt;a href=&quot;guide-structure-models&quot;&gt;models&lt;/a&gt;, &lt;a href=&quot;guide-structure-views&quot;&gt;views&lt;/a&gt;, &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt;, and other supporting components. End users can access the controllers of a module when it is installed in &lt;a href=&quot;guide-structure-applications&quot;&gt;application&lt;/a&gt;. For these reasons, modules are often viewed as mini-applications. Modules differ from &lt;a href=&quot;guide-structure-applications&quot;&gt;applications&lt;/a&gt; in that modules cannot be deployed alone and must reside within applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49da2590cb202398aa5ea0716d769af08ce08c2" translate="yes" xml:space="preserve">
          <source>Modules can be nested in unlimited levels. That is, a module can contain another module which can contain yet another module. We call the former &lt;em&gt;parent module&lt;/em&gt; while the latter &lt;em&gt;child module&lt;/em&gt;. Child modules must be declared in the &lt;a href=&quot;yii-base-module#%24modules-detail&quot;&gt;modules&lt;/a&gt; property of their parent modules. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a951f26136601e3c97f98912783c7c17c55eb3" translate="yes" xml:space="preserve">
          <source>Mongo DB: &lt;a href=&quot;yii-mongodb-activefixture&quot;&gt;yii\mongodb\ActiveFixture&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3940791c610d524cec91779cda4ad22094afca3" translate="yes" xml:space="preserve">
          <source>Mongo GridFS collection instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb72a36f8f94914039c2f68fc3065f1df1a2c462" translate="yes" xml:space="preserve">
          <source>Mongo GridFS collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ac5d1be85c8a4910418569eac4765c10ef09cb" translate="yes" xml:space="preserve">
          <source>Mongo collection instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4446bea57796931ac565c6887e2e442229b16818" translate="yes" xml:space="preserve">
          <source>Mongo connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1950977bbb1a6c4fb5e7ddaa24959804647672" translate="yes" xml:space="preserve">
          <source>Mongo cursor instance to fetch data from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8b543baa5edc81afdf0c61303b1e3985e6c91a" translate="yes" xml:space="preserve">
          <source>Mongo cursor instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6534dd97665876e04ff36ae1939505ff614c86c" translate="yes" xml:space="preserve">
          <source>MongoDB 1.3.0 or later: via &lt;a href=&quot;yii-mongodb-activerecord&quot;&gt;yii\mongodb\ActiveRecord&lt;/a&gt;, requires the &lt;code&gt;yii2-mongodb&lt;/code&gt; extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa9ae0fca9eb9021d9c32f537b4e8c7f71790c2" translate="yes" xml:space="preserve">
          <source>MongoDB connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6d0c4fd77cb0d593b347e7727e3dc9c6d36013" translate="yes" xml:space="preserve">
          <source>MongoDB database instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0aacf2e335982bcea72012d8e821bc44d2f068" translate="yes" xml:space="preserve">
          <source>MongoDB driver manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d112984c58fc0ec73fcd6ea522186e295c595f2f" translate="yes" xml:space="preserve">
          <source>MongoDB uses JSON format to specify query conditions with quite specific syntax. However &lt;a href=&quot;yii-mongodb-querybuilder#buildCondition()-detail&quot;&gt;buildCondition()&lt;/a&gt; method provides the ability of &quot;translating&quot; common condition format used &quot;yii\db*&quot; into MongoDB condition. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1d7b4222ac92430b250fb85def9e2bdef63b24" translate="yes" xml:space="preserve">
          <source>More details about configuring the &lt;code&gt;components&lt;/code&gt; property of an application can be found in the &lt;a href=&quot;guide-structure-applications&quot;&gt;Applications&lt;/a&gt; section and the &lt;a href=&quot;guide-concept-service-locator&quot;&gt;Service Locator&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f40f32bb2e41f0a05af34f14c496b802949533" translate="yes" xml:space="preserve">
          <source>More details about this property can be found in the &lt;a href=&quot;guide-tutorial-i18n&quot;&gt;Internationalization&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823c5126f814cc35211cebad1836dea9ba5eb2df" translate="yes" xml:space="preserve">
          <source>Moreover, some Web servers need to be properly configured so that the linked assets are accessible to Web users. For example, for Apache Web server, the following configuration directive should be added for the Web folder:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec34e5905579fa72ee13de3ac89ad8e1e6a03c5" translate="yes" xml:space="preserve">
          <source>Most JavaScript/CSS packages are managed by &lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; and/or &lt;a href=&quot;https://www.npmjs.org/&quot;&gt;NPM&lt;/a&gt; package managers. In PHP world we have Composer, that manages PHP dependencies, but it is possible to load both Bower and NPM packages using &lt;code&gt;composer.json&lt;/code&gt; just as PHP packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edaee58c3aa382b2670a923e19b3246fceb21a3c" translate="yes" xml:space="preserve">
          <source>Most JavaScript/CSS packages are managed using &lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; and/or &lt;a href=&quot;https://www.npmjs.org/&quot;&gt;NPM&lt;/a&gt;, instead of Composer. Yii uses the &lt;a href=&quot;https://github.com/francoispluchino/composer-asset-plugin&quot;&gt;Composer asset plugin&lt;/a&gt; to enable managing these kinds of packages through Composer. If your extension depends on a Bower package, you can simply list the dependency in &lt;code&gt;composer.json&lt;/code&gt; like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e387032cbf787601fbcc5c2b7bc9eee1d766d342" translate="yes" xml:space="preserve">
          <source>Most RESTful API features provided by &lt;a href=&quot;yii-rest-controller&quot;&gt;yii\rest\Controller&lt;/a&gt; are implemented in terms of &lt;a href=&quot;guide-structure-filters&quot;&gt;filters&lt;/a&gt;. In particular, the following filters will be executed in the order they are listed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fd7a78b631d21d906e3053b56c4a5fff4aa470" translate="yes" xml:space="preserve">
          <source>Most developers know that passwords cannot be stored in plain text, but many developers believe it's still safe to hash passwords using &lt;code&gt;md5&lt;/code&gt; or &lt;code&gt;sha1&lt;/code&gt;. There was a time when using the aforementioned hashing algorithms was sufficient, but modern hardware makes it possible to reverse such hashes and even stronger ones very quickly using brute force attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae06800861edaddbb16ceae7e8f44aaab673246e" translate="yes" xml:space="preserve">
          <source>Most layouts should call the following methods like shown in the above code. These methods mainly trigger events about the rendering process so that scripts and tags registered in other places can be properly injected into the places where these methods are called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be82e9064aca69f6c1cea4b6d8dc872d9dba1e3" translate="yes" xml:space="preserve">
          <source>Most of the time using GridView header filters is enough, but in case you need a separate filter form, you can easily add it as well. You can create partial view &lt;code&gt;_search.php&lt;/code&gt; with the following contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f15ec1630c0623e25fea68cd39e0ac92c9a8fe" translate="yes" xml:space="preserve">
          <source>Most responses should have a body which gives the content that you want to show to end users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e97c7448630d38bd42abaa14e3593a8dfc8b2b" translate="yes" xml:space="preserve">
          <source>Most validators have default error messages that will be added to the model being validated when its attributes fail the validation. For example, the &lt;a href=&quot;yii-validators-requiredvalidator&quot;&gt;required&lt;/a&gt; validator will add a message &quot;Username cannot be blank.&quot; to a model when the &lt;code&gt;username&lt;/code&gt; attribute fails the rule using this validator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23495f402bc820f37dc740a859110efb46574042" translate="yes" xml:space="preserve">
          <source>Moves the cursor to an absolute position given as column and row by sending ANSI control code CUP or CHA to the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf005a95c182dcac3f6bbb4951cc7e5dd09d871a" translate="yes" xml:space="preserve">
          <source>Moves the internal pointer to the next array element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1240268e600f29c90357c50d4599c68485cfeea2" translate="yes" xml:space="preserve">
          <source>Moves the internal pointer to the next dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6a1d1904a4a65af0d90b0d5490f990d2734c02" translate="yes" xml:space="preserve">
          <source>Moves the internal pointer to the next row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c805e90d88c977dd1b9be19e4277670ba6eb68bf" translate="yes" xml:space="preserve">
          <source>Moves the terminal cursor backward by sending ANSI control code CUB to the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a33e68da50cecb326aa8bac0bf1c1759a69db5" translate="yes" xml:space="preserve">
          <source>Moves the terminal cursor down by sending ANSI control code CUD to the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea1b5394e86dbb75db17159e398abdddec7e81f" translate="yes" xml:space="preserve">
          <source>Moves the terminal cursor forward by sending ANSI control code CUF to the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6396bb81b4cf0be394568ab4d856d1697c6f005" translate="yes" xml:space="preserve">
          <source>Moves the terminal cursor to the beginning of the next line by sending ANSI control code CNL to the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0e8ba392b4369149c607bdf8a31820e3455ea6" translate="yes" xml:space="preserve">
          <source>Moves the terminal cursor to the beginning of the previous line by sending ANSI control code CPL to the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0ab2aedf2c3a6a25f280df88b197fda73afe1e" translate="yes" xml:space="preserve">
          <source>Moves the terminal cursor up by sending ANSI control code CUU to the terminal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b7b29d6e557041b365af1e20243c6a09a7def0" translate="yes" xml:space="preserve">
          <source>MultiFieldSession is the base class for session storage implementations with multi-field data storage support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa0c53d8d309784ba9e277502e73470567828a1" translate="yes" xml:space="preserve">
          <source>Multidimensional Sorting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b708a39630037ce63a6a0ae12e9f3ad83b4d3b2" translate="yes" xml:space="preserve">
          <source>MultipartFormDataParser parses content encoded as 'multipart/form-data'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85168ea0c53d4d4ada8ce84d5b3a05620211d117" translate="yes" xml:space="preserve">
          <source>Multiple Attributes Validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6adb19fe0e6115093ac97b0909a5645ec50a3045" translate="yes" xml:space="preserve">
          <source>Multiple GridViews on one page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9494a9a33be79c0542eb668e15e08c9dec91d9" translate="yes" xml:space="preserve">
          <source>Mutex name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d5198e67ae1397b4522679e38e6ecfa09483cd" translate="yes" xml:space="preserve">
          <source>MySQL 4.1 or later: via &lt;a href=&quot;yii-db-activerecord&quot;&gt;yii\db\ActiveRecord&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e80678a27ebcb29759956ad4ced9bf83575e04c" translate="yes" xml:space="preserve">
          <source>MySQL implementation of batch queries relies on the PDO driver library. By default, MySQL queries are &lt;a href=&quot;http://php.net/manual/en/mysqlinfo.concepts.buffering.php&quot;&gt;&lt;code&gt;buffered&lt;/code&gt;&lt;/a&gt;. This defeats the purpose of using the cursor to get the data, because it doesn't prevent the whole result set from being loaded into the client's memory by the driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4a31c1c0e4d25f5be7b7c916d0ba9dd6e9160a" translate="yes" xml:space="preserve">
          <source>MySQL, MariaDB: &lt;code&gt;mysql:host=localhost;dbname=mydatabase&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecd710b5b2c7a52c71488152d23c7ba986860a6" translate="yes" xml:space="preserve">
          <source>MySQL: LONGBLOB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c1c746290c1bef141af29e73fd797dd8a5fb1e" translate="yes" xml:space="preserve">
          <source>MysqlMutex implements mutex &quot;lock&quot; mechanism via MySQL locks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdfd5e387afeaa3ae3c7304bf6d999c5e26e576" translate="yes" xml:space="preserve">
          <source>NEGATION_CHAR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe31337a17d47868155397501ff1971e128baa03" translate="yes" xml:space="preserve">
          <source>NEGATIVE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b3708ac89844eb91c11156fb4896eeaaf484e6" translate="yes" xml:space="preserve">
          <source>NORMAL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81772e3009adc987ded3f6572433b4229170d81d" translate="yes" xml:space="preserve">
          <source>NOTE: elasticsearch limits the number of records returned to 10 records by default. If you expect to get more records you should specify limit explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e89c8784664a917b45a03fe085d3c6f9ea58084" translate="yes" xml:space="preserve">
          <source>Name in the full format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561010d378f9ae9f919f24145c45615991ead86f" translate="yes" xml:space="preserve">
          <source>Name of a class to use for rendering dropdowns within this widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc86b6b81dbe4f27a3741988a47c0e3496b09d41" translate="yes" xml:space="preserve">
          <source>Name of a class to use for rendering dropdowns within this widget. Defaults to &lt;a href=&quot;yii-bootstrap-dropdown&quot;&gt;yii\bootstrap\Dropdown&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1b0e932023848a63a2c52ad81710c5df7a46c1" translate="yes" xml:space="preserve">
          <source>Name of a class to use for rendering dropdowns withing this widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2017909fc9c8f145334d27a56535e36a96d9a982" translate="yes" xml:space="preserve">
          <source>Name of a class to use for rendering dropdowns withing this widget. Defaults to &lt;a href=&quot;yii-bootstrap-dropdown&quot;&gt;yii\bootstrap\Dropdown&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131a6694ef32d02467ddefa9c4fb7080bd281ec1" translate="yes" xml:space="preserve">
          <source>Name of array key or object property to retrieve value from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c74b92c0549bc73f12bc068893e7ff915d235c9" translate="yes" xml:space="preserve">
          <source>Name of the DB driver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53be1c96e976ce8ee489990f79ae11972ec880c0" translate="yes" xml:space="preserve">
          <source>Name of the DB table to store cache content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347edc07209cef4c56f295c6ff3326a757711939" translate="yes" xml:space="preserve">
          <source>Name of the DB table to store cache content. Defaults to &quot;log&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b711b5e48080b8b3b08e4fb45692b6aea62a78" translate="yes" xml:space="preserve">
          <source>Name of the DB table to store cache content. The table should be pre-created as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03005c489fec4c85c50681e5c6b970746f029f4" translate="yes" xml:space="preserve">
          <source>Name of the GET param , which should be used to passed auth client id to URL defined by &lt;a href=&quot;yii-authclient-widgets-authchoice#%24baseAuthUrl-detail&quot;&gt;$baseAuthUrl&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fb1f70b717fb67ea3efd30a77d01a333ac7457" translate="yes" xml:space="preserve">
          <source>Name of the GET param, which is used to passed auth client id to this action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5a2a7f22592d63c11c36ea6321404e6119006b" translate="yes" xml:space="preserve">
          <source>Name of the GET param, which is used to passed auth client id to this action. Note: watch for the naming, make sure you do not choose name used in some auth protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39433d274c6c00413d1900e4999e5ba96007224d" translate="yes" xml:space="preserve">
          <source>Name of the PHP variable to which the column will be bound.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c86f9c2b8aab31c24dea88942b8b06ca9daf22f" translate="yes" xml:space="preserve">
          <source>Name of the attribute to select</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5372697b07789deed27683f4c6f49657670b6f1" translate="yes" xml:space="preserve">
          <source>Name of the auth client collection application component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ee2b0230726cc43d1657a25fae5c67a7100779" translate="yes" xml:space="preserve">
          <source>Name of the auth client collection application component. It should point to &lt;a href=&quot;yii-authclient-collection&quot;&gt;yii\authclient\Collection&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bf574d882b48fb8d2d839959b8e27997a7b99c" translate="yes" xml:space="preserve">
          <source>Name of the auth client collection application component. This component will be used to fetch services value if it is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9101fb3ef00344a5519364eff2ef1e08845c725d" translate="yes" xml:space="preserve">
          <source>Name of the bundle to register</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d89d1d1f417316a34b44997e08540e72508719" translate="yes" xml:space="preserve">
          <source>Name of the catalog (database) that this table belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcec6fdc8623d2b75f418adfd524325121b584ae" translate="yes" xml:space="preserve">
          <source>Name of the catalog (database) that this table belongs to. Defaults to null, meaning no catalog (or the current database).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d69adeb712afdc9254f53c178e088401122c1f" translate="yes" xml:space="preserve">
          <source>Name of the class, which should serve as a stream wrapper for &lt;a href=&quot;yii-mongodb-connection#%24fileStreamProtocol-detail&quot;&gt;$fileStreamProtocol&lt;/a&gt; protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec15b21a9bce7378f3d109619b3b40a807697af" translate="yes" xml:space="preserve">
          <source>Name of the code generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3942664fb553462cf9d789f619da51cc3d4fbf6" translate="yes" xml:space="preserve">
          <source>Name of the collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e1e63795eff1e118a02139b5c314a2a645fffe" translate="yes" xml:space="preserve">
          <source>Name of the collection to be dropped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8a4df1e7172c4d4399a43f05507bddc75e7e44" translate="yes" xml:space="preserve">
          <source>Name of the collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c03a6c546adff92668f748407ba921d205132fb" translate="yes" xml:space="preserve">
          <source>Name of the column</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bab1676eeb9269a3a3f0d0edbf998e2add10d2f" translate="yes" xml:space="preserve">
          <source>Name of the column to select</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f4766b35cfde51d9cd95af8173cb42225badf2" translate="yes" xml:space="preserve">
          <source>Name of the cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89a55bca4a7894deafc08bf69f54320343b11a5" translate="yes" xml:space="preserve">
          <source>Name of the database that this command is associated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a33597f221b9e1948b312d475692ef0e332e28" translate="yes" xml:space="preserve">
          <source>Name of the directory to write to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49cf08bd30dbb66e355b3e84cd1f90005c8bf943" translate="yes" xml:space="preserve">
          <source>Name of the file that will be used for translations for &quot;po&quot; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a019c5e66a4693a744090ac6f111c33327428d" translate="yes" xml:space="preserve">
          <source>Name of the file to extract messages from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805a0b2a3241e1c9b9c029f61449961c5cb312fd" translate="yes" xml:space="preserve">
          <source>Name of the file to store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f5dbc66c14a4d4122dd290c9337ddaa1a4f9d4" translate="yes" xml:space="preserve">
          <source>Name of the file to write to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a555596256bd0764edfb9e2c1247afc88d78e156" translate="yes" xml:space="preserve">
          <source>Name of the function used to translate messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715d374041443a25d1183628d56f3dad267f440b" translate="yes" xml:space="preserve">
          <source>Name of the index, from which to take the text processing settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c67a76b38907bd48a0c1af613bea42e71b9b58f" translate="yes" xml:space="preserve">
          <source>Name of the missing method to execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bec81bb3fe1c21660acf57598c3641b57ae7da9" translate="yes" xml:space="preserve">
          <source>Name of the model class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4216ba598bb006a6b264b278ead7459dc64b38f6" translate="yes" xml:space="preserve">
          <source>Name of the optional magic database file (or alias), usually something like &lt;code&gt;/path/to/magic.mime&lt;/code&gt;. This will be passed as the second parameter to &lt;a href=&quot;http://php.net/manual/en/function.finfo-open.php&quot;&gt;finfo_open()&lt;/a&gt; when the &lt;code&gt;fileinfo&lt;/code&gt; extension is installed. If the MIME type is being determined based via &lt;a href=&quot;yii-helpers-basefilehelper#getMimeTypeByExtension()-detail&quot;&gt;getMimeTypeByExtension()&lt;/a&gt; and this is null, it will use the file specified by &lt;a href=&quot;yii-helpers-basefilehelper#%24mimeMagicFile-detail&quot;&gt;$mimeMagicFile&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b61a22627491ba9e873313109ac81285ab45ba" translate="yes" xml:space="preserve">
          <source>Name of the panel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e7c6d6114d1bdd7f3d2fc62395b78838c76dac" translate="yes" xml:space="preserve">
          <source>Name of the parameter storing the current page index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ef87e4bbb8a2b6c4c998ccf337913e9af259cf" translate="yes" xml:space="preserve">
          <source>Name of the parameter storing the page size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554bc3dbb0efb1bb20d00ac137bd31f1f3d8f41d" translate="yes" xml:space="preserve">
          <source>Name of the physical file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7d0b9ec860804a6a5135eb110d8ba58a50073b" translate="yes" xml:space="preserve">
          <source>Name of the protocol to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af3f2e193120d3784f19bbb42833c5508f25d25" translate="yes" xml:space="preserve">
          <source>Name of the protocol, which should be used for the GridFS stream wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3c495f77e18622ffc6b9cddb948dd66dbbdc1b" translate="yes" xml:space="preserve">
          <source>Name of the protocol, which should be used for the GridFS stream wrapper. Only alphanumeric values are allowed: do not use any URL special characters, such as '/', '&amp;amp;', ':' etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b21df6f05be5644085376c1f5e74dc28cbd99ee" translate="yes" xml:space="preserve">
          <source>Name of the role to file child roles for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9925f240e492b6f8909c2d07f5500b72331d8a" translate="yes" xml:space="preserve">
          <source>Name of the rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9a4ac7080b8ac1057fe7b7332f4e73dd508554" translate="yes" xml:space="preserve">
          <source>Name of the rule associated with this item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f782eb59a6940cebf7034188ea1f46f2df5b863" translate="yes" xml:space="preserve">
          <source>Name of the sequence object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad58157e073769886a4af989a3dab24b96c75350" translate="yes" xml:space="preserve">
          <source>Name of the sequence object (required by some DBMS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09dfb93e5d1dcc603adaa0eb487d1abfa32dde1" translate="yes" xml:space="preserve">
          <source>Name of the source index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9698ae96b5526221676cce8ad66385a891813f" translate="yes" xml:space="preserve">
          <source>Name of the source tag attribute, which should contain $matchAttributeValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356c8da0f2546123d9fb0ef79c6413b3acd400a5" translate="yes" xml:space="preserve">
          <source>Name of the source tag attribute, which should contain searched value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9ee3d656258d410fa3219da9efea8c368256ee" translate="yes" xml:space="preserve">
          <source>Name of the source tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6786c24e193bc384ac3a75c5812ab7fb87af8f24" translate="yes" xml:space="preserve">
          <source>Name of the table, which schema should be refreshed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3d82216a5ec3403845ef640527a0651b7fc219" translate="yes" xml:space="preserve">
          <source>Name of the uploaded file to store. This should correspond to the file field's name attribute in the HTML form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f0bf9bddf72bc80ecd44afb635dbb3becab3ac" translate="yes" xml:space="preserve">
          <source>Name of this collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a376a0c171248a5a094f61ad49b7ee7ffc116469" translate="yes" xml:space="preserve">
          <source>Name of this column (without quotes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7970b4f35526496cec563661d5fdaf9a0fcd9274" translate="yes" xml:space="preserve">
          <source>Name of this database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc74cc91bc34b262ac8eb434ca3c1a3c47a80e5" translate="yes" xml:space="preserve">
          <source>Name of this index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc33bda13c58474d9e1ff569d1d332e0c1932a11" translate="yes" xml:space="preserve">
          <source>Name or alias of the view file, which should be rendered in order to perform redirection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9c1a7ec02d1d623483f010dd37974f05df003a" translate="yes" xml:space="preserve">
          <source>Name or alias of the view file, which should be rendered in order to perform redirection. If not set - default one will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff0e817019778e483a73cc4f5518b086f60f48f" translate="yes" xml:space="preserve">
          <source>Name to be checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc14238133487784ae95886be73115d035d915d" translate="yes" xml:space="preserve">
          <source>Name where call has happened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c42681e2bd9915079f37fc24b5b5e9199a278a" translate="yes" xml:space="preserve">
          <source>Name-value pairs that will be passed to the rules associated with the roles and permissions assigned to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f5040981342128031f7f944db9ad8433cd7c5b" translate="yes" xml:space="preserve">
          <source>Name-value pairs that will be used to initialize the object properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d15f06b33581cdc3a964180f15960ba48b66918e" translate="yes" xml:space="preserve">
          <source>Name-value pairs that will be used to initialize the object properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d63abd36e8dfb5760d3b0f6668fb2793c5e4e63" translate="yes" xml:space="preserve">
          <source>Name-value pairs that will be used to initialize the object properties. Note that the configuration must contain both &lt;a href=&quot;yii-base-module#%24id-detail&quot;&gt;$id&lt;/a&gt; and &lt;a href=&quot;yii-base-module#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5f3d263b61371d96a08c24470ca6131b80272b" translate="yes" xml:space="preserve">
          <source>Name-value pairs that will be used to initialize the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8d858ec757beb8b121c00e41f7efcc2f1c1254" translate="yes" xml:space="preserve">
          <source>Name-value pairs that would be passed to rules associated with the tasks and roles assigned to the user. A param with name 'user' is added to this array, which holds the value of &lt;code&gt;$userId&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffca3c26dc1ab8b186580ec48fe74d4bce0b3da9" translate="yes" xml:space="preserve">
          <source>Name-value pairs that would be passed to the rules associated with the roles and permissions assigned to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff5ae1f547bf7b0197719b6b0d1047ddc6cb4c3" translate="yes" xml:space="preserve">
          <source>Named Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4baaa726aeae2df5efab33c30dccfc59484a03" translate="yes" xml:space="preserve">
          <source>Named Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f3c7d392b2059ef303b1063e3c408938687b18" translate="yes" xml:space="preserve">
          <source>Namespace variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cb9b62ff18fbddbae393ca1d79c0ee182603e5" translate="yes" xml:space="preserve">
          <source>Namespaced Migrations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be09a63bd1995e99cd22064cdc39a4bae464033d" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b2c7689e56b0e8a4a82aabab597981b5dc7268" translate="yes" xml:space="preserve">
          <source>Namespaces and classes to import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1540744464bcef71541d8cdcbe2e55139ddf65a" translate="yes" xml:space="preserve">
          <source>Nearly all of the methods in this class allow setting additional html attributes for the html tags they generate. You can specify, for example, &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;style&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt; for an html element using the &lt;code&gt;$options&lt;/code&gt; parameter. See the documentation of the &lt;a href=&quot;yii-helpers-basehtml#tag()-detail&quot;&gt;tag()&lt;/a&gt; method for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef550d682230a7516fdc7b2f3f812c8be1ef7c6" translate="yes" xml:space="preserve">
          <source>Negation char. Used to negate &lt;a href=&quot;yii-validators-ipvalidator#%24ranges-detail&quot;&gt;$ranges&lt;/a&gt; or &lt;a href=&quot;yii-validators-ipvalidator#%24networks-detail&quot;&gt;$networks&lt;/a&gt; or to negate validating value when &lt;a href=&quot;yii-validators-ipvalidator#%24negation-detail&quot;&gt;$negation&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde680790d4a2124c5c25c504d04fe95eeb614f3" translate="yes" xml:space="preserve">
          <source>Negotiates the application language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36046ea6422162af8e8305982f9540ffa9660d9" translate="yes" xml:space="preserve">
          <source>Negotiates the response format and application language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0b98f4027356295664d9425774ace99b20412a" translate="yes" xml:space="preserve">
          <source>Negotiates the response format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3339e86b1c4b26ea383ff18deb3dca5c84f4a24" translate="yes" xml:space="preserve">
          <source>Nested Caching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224c55f63d61acaa2c03c99f294c7e2e305bf5b6" translate="yes" xml:space="preserve">
          <source>Nested Layouts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96c12475e7d88617c8ea0a25da6c5f631552cb1" translate="yes" xml:space="preserve">
          <source>Nested Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352ff602b84222359f85bb8237384a42775b5aa5" translate="yes" xml:space="preserve">
          <source>Nesting Transactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c382212f588fd9e8f69f3c0b2dff3b71eaac555d" translate="yes" xml:space="preserve">
          <source>New Instance Life Cycle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4573a33497f38e6cb49f589f614b7abdb9db08cf" translate="yes" xml:space="preserve">
          <source>New auth token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edaa2d3fb23b76156d1843b9a04eab71ef23a69f" translate="yes" xml:space="preserve">
          <source>New error message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d1eb255bb388b7540f31c13242d62cc01aa273" translate="yes" xml:space="preserve">
          <source>New lines are added at the bottom. This is not supported by ANSI.SYS used in windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5257736b3cf6209ba71843e235c0f2fc656d0217" translate="yes" xml:space="preserve">
          <source>New lines are added at the top. This is not supported by ANSI.SYS used in windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42651eb21616db39318b69758fef2ab345221f5e" translate="yes" xml:space="preserve">
          <source>New record ID instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b655060ce3db5ca4b8089d7ad2efcac024f918d" translate="yes" xml:space="preserve">
          <source>New record id instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afaaf16cac0294b8250fe4dcfbf52d38372c994" translate="yes" xml:space="preserve">
          <source>New slug value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184786a02ec0c834b13537b92a147ab342c832be" translate="yes" xml:space="preserve">
          <source>Newly assigned generators will be merged with the &lt;a href=&quot;yii-gii-module#coreGenerators()-detail&quot;&gt;core ones&lt;/a&gt;, and the former takes precedence in case when they have the same generator ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4310ef673d4df435c7b1e5ea318594c3e18bf458" translate="yes" xml:space="preserve">
          <source>Next, actually modify the structure and contents of the application as you would like the default to be. Finally, update the README file to be applicable to your template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf15a7a6724aabd5599dcc2537fe811dbe8988c" translate="yes" xml:space="preserve">
          <source>Next, click on the &quot;Preview&quot; button. You will see &lt;code&gt;models/Country.php&lt;/code&gt; is listed in the resulting class file to be created. You may click on the name of the class file to preview its content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ba334942c7d9d59c22d0a2ad8d6eb0ecbdf1e2" translate="yes" xml:space="preserve">
          <source>Next, click on the &quot;Preview&quot; button. You will see a list of files to be generated, as shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adeb1f71bf5ccf2769e5c45f8220db0151060518" translate="yes" xml:space="preserve">
          <source>Next, configure &lt;code&gt;authManager&lt;/code&gt; by listing the two roles in &lt;a href=&quot;yii-rbac-basemanager#%24defaultRoles-detail&quot;&gt;yii\rbac\BaseManager::$defaultRoles&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d203be7a22e6182eeb3ba6fe1d8bc61a5ac5dc6" translate="yes" xml:space="preserve">
          <source>Next, create a file input in a view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b2af740665e1e787664fc024f6ef2b640337e9" translate="yes" xml:space="preserve">
          <source>Next, you need to register your package for Composer's sake. For public templates, the package should be registered at &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt;. For private templates, it is a bit more tricky to register the package. For instructions, see the &lt;a href=&quot;https://getcomposer.org/doc/05-repositories.md#hosting-your-own&quot;&gt;Composer documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9045415c4328acfe52bcad473ff570a8f814d8ef" translate="yes" xml:space="preserve">
          <source>Next, you will see a confirmation page indicating the code has been successfully generated. If you had an existing file, you'll also see a message indicating that it was overwritten with the newly generated code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb4a23875fba4a29b2033240096f807a286984c" translate="yes" xml:space="preserve">
          <source>Next, you'll want to modify the &lt;code&gt;composer.json&lt;/code&gt; to reflect your template. Change the &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;keywords&lt;/code&gt;, &lt;code&gt;homepage&lt;/code&gt;, &lt;code&gt;license&lt;/code&gt;, and &lt;code&gt;support&lt;/code&gt; values to describe your new template. Also adjust the &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;require-dev&lt;/code&gt;, &lt;code&gt;suggest&lt;/code&gt;, and other options to match your template's requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020bf81b6a688bef7ebf0aee7556a7fd43f11d41" translate="yes" xml:space="preserve">
          <source>Nginx: &lt;a href=&quot;http://wiki.nginx.org/XSendfile&quot;&gt;X-Accel-Redirect&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f72a3006fd9450ad043a04af7810da26c2fa815" translate="yes" xml:space="preserve">
          <source>Nginx: &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/examples/server_blocks/&quot;&gt;https://www.nginx.com/resources/wiki/start/topics/examples/server_blocks/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dec04b5380fdd35b08721643efc607983f77b24" translate="yes" xml:space="preserve">
          <source>No actual migration will be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48166a748b764ceb22cb7c2e6056f053c1c7cd1" translate="yes" xml:space="preserve">
          <source>Nonce value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e64502eae67c257e625f97493c8ef9dfac0bdc0" translate="yes" xml:space="preserve">
          <source>Normal Query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48366ea5dcbefbc99d4c20847366a6efb114a39b" translate="yes" xml:space="preserve">
          <source>Normalize URL by ensuring that it use specified scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8657d4c6ee1ea8060b6e628154d601ae17531cfa" translate="yes" xml:space="preserve">
          <source>Normalize attribute map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682b209798098bf430643a83d0dcef055f6fb6a0" translate="yes" xml:space="preserve">
          <source>Normalize given user attributes according to &lt;a href=&quot;yii-authclient-baseclient#%24normalizeUserAttributeMap-detail&quot;&gt;$normalizeUserAttributeMap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab2d94243072e03a06a44b04aa5737eea4c2452" translate="yes" xml:space="preserve">
          <source>Normalize user attribute map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b08c10b41f3e63c8544c765763153e7d580453" translate="yes" xml:space="preserve">
          <source>Normalized attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295b9bf386f61137159cc6ebc68b5b67c2374c35" translate="yes" xml:space="preserve">
          <source>Normalized id(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09993c11b02dc414b0278584d02214563573ab25" translate="yes" xml:space="preserve">
          <source>Normalized options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726562c12025618ddd0543d6a1ac4f83873549b4" translate="yes" xml:space="preserve">
          <source>Normalized path info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba320a4f2657d70fa2f5b1d6db4a640ddae16639" translate="yes" xml:space="preserve">
          <source>Normalized pathInfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a437609d885ffbbce6db94e82d2f87d0a5b25c1b" translate="yes" xml:space="preserve">
          <source>Normalized requirement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1030c7ce49b947a98939fde236a14e6b79ef1aa" translate="yes" xml:space="preserve">
          <source>Normalized route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28197953f0cdbc1182c3afc07abf394e873a2d01" translate="yes" xml:space="preserve">
          <source>Normalized route suitable for UrlManager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c838a2763d9817755f1d99b0a5a9c81879e36af2" translate="yes" xml:space="preserve">
          <source>Normalized select fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378f3b7897f824de6d26c9b656e7f1d9485853ec" translate="yes" xml:space="preserve">
          <source>Normalized sort fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe5ae3fdf3a3e155d1a51b44a361860c8b8482c" translate="yes" xml:space="preserve">
          <source>Normalizes &lt;a href=&quot;yii-gii-generators-controller-generator#%24actions-detail&quot;&gt;$actions&lt;/a&gt; into an array of action IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6340bf4f05df067ddc7ce3fa0e0da9922fd784" translate="yes" xml:space="preserve">
          <source>Normalizes a file/directory path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50e3935919fd1bbb804ec231e81aaaf12336bb8" translate="yes" xml:space="preserve">
          <source>Normalizes a numeric input value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4a54cea297eae7339c96c7840590a4fc403145" translate="yes" xml:space="preserve">
          <source>Normalizes dropdown item options by removing tab specific keys &lt;code&gt;content&lt;/code&gt; and &lt;code&gt;contentOptions&lt;/code&gt;, and also configure &lt;code&gt;panes&lt;/code&gt; accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d4a90fc4596da1852c0778dda700aa2da63645" translate="yes" xml:space="preserve">
          <source>Normalizes fields list for the MongoDB select composition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5dff326b3db07f20744f7943877ee8b750b572" translate="yes" xml:space="preserve">
          <source>Normalizes fields list for the MongoDB sort composition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7057689afc8341e34da2a644bb6324ff7f667320" translate="yes" xml:space="preserve">
          <source>Normalizes format of ORDER BY data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b4318645ee093f041533ee7afd0d2c91c24fc6" translate="yes" xml:space="preserve">
          <source>Normalizes requirement ensuring it has correct format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8066736a605b1ab562a0554220bdad996ab154c" translate="yes" xml:space="preserve">
          <source>Normalizes route and makes it suitable for UrlManager. Absolute routes are staying as is while relative routes are converted to absolute ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1350eeed6b83144afa7ffd854b8b473d184db1b2" translate="yes" xml:space="preserve">
          <source>Normalizes specified pathInfo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbdea3b2260c88e6b8fafc1353018dbc9907893" translate="yes" xml:space="preserve">
          <source>Normalizes the &lt;a href=&quot;yii-data-sort#%24attributes-detail&quot;&gt;$attributes&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92126e8c4a96e8b37ad48b37d63bfc87576618ac" translate="yes" xml:space="preserve">
          <source>Normalizes the &lt;a href=&quot;yii-widgets-menu#%24items-detail&quot;&gt;$items&lt;/a&gt; property to remove invisible items and activate certain items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b3f322a95a3327ae01851278ec9dc18317701f" translate="yes" xml:space="preserve">
          <source>Normalizes the attribute specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01a280d994919a36d1f8d0fbda6e68a2c8a96ef" translate="yes" xml:space="preserve">
          <source>Normalizes the class definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b641a12f9d29fd883f5731d0d02dadfcb1de9b37" translate="yes" xml:space="preserve">
          <source>Normalizes the given datetime value as a DateTime object that can be taken by various date/time formatting methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1d0d14243273d8f9503c8285817db08af0a34c" translate="yes" xml:space="preserve">
          <source>Normally is called from &lt;a href=&quot;yii-i18n-dbmessagesource#loadMessagesFromDb()-detail&quot;&gt;loadMessagesFromDb()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4528c96bcf78c4c46b60db95cf5913b06f7978" translate="yes" xml:space="preserve">
          <source>Normally used to generate a response to AJAX request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f960beca62acbe742691fbcb6049c6f677d2994c" translate="yes" xml:space="preserve">
          <source>NotAcceptableHttpException represents a &quot;Not Acceptable&quot; HTTP exception with status code 406</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e49adbccc72268314b7d2951e968d3867af01dc" translate="yes" xml:space="preserve">
          <source>NotFoundHttpException represents a &quot;Not Found&quot; HTTP exception with status code 404.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372d24544046a3acd36da76ccae4599345377353" translate="yes" xml:space="preserve">
          <source>NotInstantiableException represents an exception caused by incorrect dependency injection container configuration or usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5899adc06eaaa92a6e1535207ec0493c9b027871" translate="yes" xml:space="preserve">
          <source>NotSupportedException represents an exception caused by accessing features that are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169c9c9e32878cfc80d0646105939cc514109ea2" translate="yes" xml:space="preserve">
          <source>Note that ArrayAccessTrait requires the class using it contain a property named &lt;code&gt;data&lt;/code&gt; which should be an array. The data will be exposed by ArrayAccessTrait to support accessing the class object like an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3f5ec26217fd18e53640af8051de6d9f389ee4" translate="yes" xml:space="preserve">
          <source>Note that CaptchaAction requires either GD2 extension or ImageMagick PHP extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a6b326cf0a8fe647e93d04e51ba9e0cb7d6b24" translate="yes" xml:space="preserve">
          <source>Note that HtmlPurifier processing is quite heavy so consider adding caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f447cb40e51d3038a7471170383a59decfa10de9" translate="yes" xml:space="preserve">
          <source>Note that LinkPager only generates the necessary HTML markups. In order for it to look like a real pager, you should provide some CSS styles for it. With the default configuration, LinkPager should look good using Twitter Bootstrap CSS framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ade23d185beacd61efad9ff1e5ba194ead4bb18" translate="yes" xml:space="preserve">
          <source>Note that Menu only renders the HTML tags about the menu. It does do any styling. You are responsible to provide CSS styles to make it look like a real menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec04cc5a8cc5b45b8c8fafa28afdf48f3cc306d0" translate="yes" xml:space="preserve">
          <source>Note that PhpManager is not compatible with facebooks &lt;a href=&quot;http://hhvm.com/&quot;&gt;HHVM&lt;/a&gt; because it relies on writing php files and including them afterwards which is not supported by HHVM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbd453b62a0bf8e3e23c57bd36fb5b9b4b48be1" translate="yes" xml:space="preserve">
          <source>Note that RateLimiter requires &lt;a href=&quot;yii-filters-ratelimiter#%24user-detail&quot;&gt;$user&lt;/a&gt; to implement the &lt;a href=&quot;yii-filters-ratelimitinterface&quot;&gt;yii\filters\RateLimitInterface&lt;/a&gt;. RateLimiter will do nothing if &lt;a href=&quot;yii-filters-ratelimiter#%24user-detail&quot;&gt;$user&lt;/a&gt; is not set or does not implement &lt;a href=&quot;yii-filters-ratelimitinterface&quot;&gt;yii\filters\RateLimitInterface&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa7b7243df9964a0cb6ce170dc21da6e2d7d53b" translate="yes" xml:space="preserve">
          <source>Note that User only maintains the user authentication status. It does NOT handle how to authenticate a user. The logic of how to authenticate a user should be done in the class implementing &lt;a href=&quot;yii-web-identityinterface&quot;&gt;yii\web\IdentityInterface&lt;/a&gt;. You are also required to set &lt;a href=&quot;yii-web-user#%24identityClass-detail&quot;&gt;$identityClass&lt;/a&gt; with the name of this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2696daf41402f4019eaa4b4394db48a654351d98" translate="yes" xml:space="preserve">
          <source>Note that a UNIX timestamp is always in UTC by its definition. That means that specifying a default time zone different from UTC has no effect on date values given as UNIX timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9765109ca6163c83bdcb9e41b9dcdcd313a35b06" translate="yes" xml:space="preserve">
          <source>Note that a behavior class must extend from &lt;a href=&quot;yii-base-behavior&quot;&gt;yii\base\Behavior&lt;/a&gt;. Behaviors can be attached using a name or anonymously. When a name is used as the array key, using this name, the behavior can later be retrieved using &lt;a href=&quot;yii-base-component#getBehavior()-detail&quot;&gt;getBehavior()&lt;/a&gt; or be detached using &lt;a href=&quot;yii-base-component#detachBehavior()-detail&quot;&gt;detachBehavior()&lt;/a&gt;. Anonymous behaviors can not be retrieved or detached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3443bf62c48d1190801f8271f409db15063d1fe0" translate="yes" xml:space="preserve">
          <source>Note that a behavior class must extend from \yii\rest\Behavior. Behaviors can be attached using a name or anonymously. When a name is used as the array key, using this name, the behavior can later be retrieved using &lt;a href=&quot;yii-base-component#getBehavior()-detail&quot;&gt;getBehavior()&lt;/a&gt; or be detached using &lt;a href=&quot;yii-base-component#detachBehavior()-detail&quot;&gt;detachBehavior()&lt;/a&gt;. Anonymous behaviors can not be retrieved or detached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe14aa32df3ad5c66e39c0aea9d65ab3a20c3e7b" translate="yes" xml:space="preserve">
          <source>Note that according to the php.ini setting of &lt;code&gt;session.hash_function&lt;/code&gt;, you may need to adjust the length of the &lt;code&gt;id&lt;/code&gt; column. For example, if &lt;code&gt;session.hash_function=sha256&lt;/code&gt;, you should use length 64 instead of 40.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df89e13e73a2c95b945794ffe1efc21f0d371331" translate="yes" xml:space="preserve">
          <source>Note that an array should be returned even for a collection with single primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c3da3963b49ce96a02de87a98425163ddf498f" translate="yes" xml:space="preserve">
          <source>Note that an array should be returned even for a table with single primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c600a7563b2cbf6e97b564689e45187bd1ef2c2" translate="yes" xml:space="preserve">
          <source>Note that an array should be returned even when it is a single primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6423ae3790ebb7bdc08b80aeb2a565be9d4dc3" translate="yes" xml:space="preserve">
          <source>Note that an array should be returned even when the record only has a single primary key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24051d9a66b39362f7f08273f1d8d9b60d69fc1f" translate="yes" xml:space="preserve">
          <source>Note that an auth method class must implement the &lt;a href=&quot;yii-filters-auth-authinterface&quot;&gt;yii\filters\auth\AuthInterface&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7625d8952bdeb82fdb3d44720aeb17b2be0518" translate="yes" xml:space="preserve">
          <source>Note that an empty array will NOT be considered associative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2fb3308987e3870bbc702514afaed16e819f59" translate="yes" xml:space="preserve">
          <source>Note that an empty array will be considered indexed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51342c9fac3c827b915ff6097c567893c6594144" translate="yes" xml:space="preserve">
          <source>Note that and empty string (&lt;code&gt;''&lt;/code&gt;) and &lt;code&gt;null&lt;/code&gt; will result in an empty text field while &lt;code&gt;0&lt;/code&gt; will be interpreted as a UNIX timestamp and result in a date displayed as &lt;code&gt;1970-01-01&lt;/code&gt;. It is recommended to add a validation filter in your model that sets the value to &lt;code&gt;null&lt;/code&gt; in case when no date has been entered:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3152138f39fc3b591387f16f0da6361be5f2c5" translate="yes" xml:space="preserve">
          <source>Note that attribute typecast is performed only during populating ActiveRecord instance from query result. There is no automatic conversion for the values loaded from HTTP request or set directly via property access. The table schema will also be used while preparing SQL statements for the ActiveRecord data saving, ensuring values are bound to the query with correct type. However, ActiveRecord instance attribute values will not be converted during saving process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb5640fb67c315911597aa8d7c74157d5aefa42" translate="yes" xml:space="preserve">
          <source>Note that because a JOIN query will be performed, you are responsible to disambiguate column names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ce3711f64e7b1fe66260053f163aa78d509e70" translate="yes" xml:space="preserve">
          <source>Note that because the SQL statement is already specified, calling additional query modification methods (such as &lt;code&gt;where()&lt;/code&gt;, &lt;code&gt;order()&lt;/code&gt;) on the created &lt;a href=&quot;yii-db-activequery&quot;&gt;yii\db\ActiveQuery&lt;/a&gt; instance will have no effect. However, calling &lt;code&gt;with()&lt;/code&gt;, &lt;code&gt;asArray()&lt;/code&gt; or &lt;code&gt;indexBy()&lt;/code&gt; is still fine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f604cfa3d314eaa014a4a333091efc4b95b64829" translate="yes" xml:space="preserve">
          <source>Note that because the SQL statement is already specified, calling additional query modification methods (such as &lt;code&gt;where()&lt;/code&gt;, &lt;code&gt;order()&lt;/code&gt;) on the created &lt;a href=&quot;yii-sphinx-activequery&quot;&gt;yii\sphinx\ActiveQuery&lt;/a&gt; instance will have no effect. However, calling &lt;code&gt;with()&lt;/code&gt;, &lt;code&gt;asArray()&lt;/code&gt; or &lt;code&gt;indexBy()&lt;/code&gt; is still fine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64ee2a608f2339b2836524ebd15fca488721a39" translate="yes" xml:space="preserve">
          <source>Note that because the class name is already given, the configuration array should NOT have the &lt;code&gt;class&lt;/code&gt; key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6b2817595d52f0bd0d85ba69bf3c16f9fbbcea" translate="yes" xml:space="preserve">
          <source>Note that by enabling RBAC cache, all auth items, rules and auth item parent-child relationships will be cached and loaded into memory. This will improve the performance of RBAC permission check. However, it does require extra memory and as a result may not be appropriate if your RBAC system contains too many auth items. You should seek other RBAC implementations (e.g. RBAC based on Redis storage) in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37827c28c9143d677452d17d9563280bb74a8209" translate="yes" xml:space="preserve">
          <source>Note that child roles that are not assigned directly to the user will not be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48422db5a756b4ed30ca895ab4311eb4760d9fbf" translate="yes" xml:space="preserve">
          <source>Note that data encoded as JSON must be UTF-8 encoded according to the JSON specification. You must ensure strings passed to this method have proper encoding before passing them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f99817834eeb688e54c96e6adabac0419b64e3" translate="yes" xml:space="preserve">
          <source>Note that elasticsearch only supports &lt;em&gt;one&lt;/em&gt; attribute to be the primary key. However to match the signature of the &lt;a href=&quot;yii-db-activerecordinterface&quot;&gt;ActiveRecordInterface&lt;/a&gt; this methods returns an array instead of a single string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bcd1579d2cc3c0d74ddc07f42418cc5e5e4c45" translate="yes" xml:space="preserve">
          <source>Note that even if there is no validation error, this method will still return an empty error tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1627303416dc57802c422e635d0519f8db4d6feb" translate="yes" xml:space="preserve">
          <source>Note that flash messages and normal session variables share the same name space. If you have a normal session variable using the same name, it will be removed by this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3bc6829eb0d80e060f29befbae5e14c7bbae84" translate="yes" xml:space="preserve">
          <source>Note that for date values that are before year 1901 or after 2038, they will not be localized on 32-bit systems, even if the intl extension is installed. This is because in this case ICU is using 32-bit UNIX timestamps to date values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e5a6796b0b3a2d04846d7cf490619bc4c54859" translate="yes" xml:space="preserve">
          <source>Note that if &lt;a href=&quot;yii-web-urlmanager#%24enablePrettyUrl-detail&quot;&gt;$enablePrettyUrl&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;, this method will do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0febed5900986088d7d9511c004b8cd5ef16287" translate="yes" xml:space="preserve">
          <source>Note that if a cookie is marked for deletion from browser, this method will return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175ce8e39c4edd1db2678e3ec992b5790fa1462b" translate="yes" xml:space="preserve">
          <source>Note that if the &lt;a href=&quot;yii-grid-gridview#%24columns-detail&quot;&gt;columns&lt;/a&gt; part of the configuration isn't specified, Yii tries to show all possible columns of the data provider's model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d52551d735cf25ab69268c8227fe09acff4614" translate="yes" xml:space="preserve">
          <source>Note that if the Sort object is already created, you can only use the full format to configure every attribute. Each attribute must include these elements: &lt;code&gt;asc&lt;/code&gt; and &lt;code&gt;desc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425684f24e5beb7431f6ee2879db56e48cf0ed1d" translate="yes" xml:space="preserve">
          <source>Note that if the class is declared to be singleton by calling &lt;a href=&quot;yii-di-container#setSingleton()-detail&quot;&gt;setSingleton()&lt;/a&gt;, the same instance of the class will be returned each time this method is called. In this case, the constructor parameters and object configurations will be used only if the class is instantiated the first time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e172bcfddc396cbac882ba903af2fb949dd4bcb" translate="yes" xml:space="preserve">
          <source>Note that if the filter is attached to a module, the action IDs should also include child module IDs (if any) and controller IDs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f7d3333866c0760db0d474cce9917feeaabb50" translate="yes" xml:space="preserve">
          <source>Note that if the module is an application, an empty string will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5e20b7bfabd36bbfb4880f44c4cc7dbf1aad05" translate="yes" xml:space="preserve">
          <source>Note that if the parameter is not a string, it will be returned without change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d589c61c4cc522787f6e7d49122a19f3645603" translate="yes" xml:space="preserve">
          <source>Note that if the property is not defined, false will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64982f4107bb2ffa6fb63003a1713a56c41c0724" translate="yes" xml:space="preserve">
          <source>Note that if the property is not defined, this method will do nothing. If the property is read-only, it will throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed8cefb030a8c5c2ad1538a2c31db151d2465cf" translate="yes" xml:space="preserve">
          <source>Note that if you are connecting with a database via ODBC, you should configure the &lt;a href=&quot;yii-db-connection#%24driverName-detail&quot;&gt;yii\db\Connection::$driverName&lt;/a&gt; property so that Yii can know the actual database type. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3259aadf256b3542b9cea5f114d7d8b73c3704a9" translate="yes" xml:space="preserve">
          <source>Note that if you are selecting an expression like &lt;code&gt;CONCAT(first_name, ' ', last_name)&lt;/code&gt;, you should use an array to specify the columns. Otherwise, the expression may be incorrectly split into several parts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f4ae5721bd8df076aa1d64c5ebd55cde23f467" translate="yes" xml:space="preserve">
          <source>Note that if you call &lt;a href=&quot;yii-web-view#registerMetaTag()-detail&quot;&gt;yii\web\View::registerMetaTag()&lt;/a&gt; multiple times, it will register multiple meta tags, regardless whether the meta tags are the same or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4076bb74e02ec3320809d035d82c2e9cb2c224bc" translate="yes" xml:space="preserve">
          <source>Note that if you modify this property after the UrlManager object is created, make sure you populate the array with rule objects instead of rule configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61caba26247e84f0b59b2251e640a13826642d7" translate="yes" xml:space="preserve">
          <source>Note that if you set a custom &lt;code&gt;id&lt;/code&gt; for the input element, you may need to adjust the value of &lt;a href=&quot;yii-widgets-activefield#%24selectors-detail&quot;&gt;$selectors&lt;/a&gt; accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7064d318cc7f67891b809bfd006874c3d9f489e" translate="yes" xml:space="preserve">
          <source>Note that if you use &lt;a href=&quot;yii-web-session#addFlash()-detail&quot;&gt;addFlash()&lt;/a&gt;, &lt;code&gt;$message&lt;/code&gt; will be an array, and you will have to adjust the above code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a7589272dc041f22c4bc5b207ef0662a54cd1a" translate="yes" xml:space="preserve">
          <source>Note that if you're replacing array parameters with &lt;code&gt;[]&lt;/code&gt; at the end you should specify &lt;code&gt;$params&lt;/code&gt; as nested arrays. For a &lt;code&gt;PostSearchForm&lt;/code&gt; model where parameter names are &lt;code&gt;PostSearchForm[id]&lt;/code&gt; and &lt;code&gt;PostSearchForm[src]&lt;/code&gt; the syntax would be the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c57a279a3375cc24155677638e5a56a6a1ce811" translate="yes" xml:space="preserve">
          <source>Note that if your group-by is an expression containing commas, you should always use an array to represent the group-by information. Otherwise, the method will not be able to correctly determine the group-by columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678b79f1bbefcd00875d4b7cc2dfba8c0d31cad2" translate="yes" xml:space="preserve">
          <source>Note that if your order-by is an expression containing commas, you should always use an array to represent the order-by information. Otherwise, the method will not be able to correctly determine the order-by columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f727845373a556d0a4afde672665fdfa341a4eb" translate="yes" xml:space="preserve">
          <source>Note that in general you should not try to detach an anonymous function unless you store it somewhere when it is attached to the event. In the above example, it is assumed that the anonymous function is stored as a variable &lt;code&gt;$anonymousFunction&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170c29ba8182d3eab3696082d5cf91c30306c8d3" translate="yes" xml:space="preserve">
          <source>Note that in order for this method to return a value, you must define an alias for the root namespace of &lt;a href=&quot;yii-base-module#%24controllerNamespace-detail&quot;&gt;$controllerNamespace&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b61b8e02d6b69c2a0104d07e8e1ee1080f1453" translate="yes" xml:space="preserve">
          <source>Note that in order to show an input field for filtering, a column must have its &lt;a href=&quot;yii-grid-datacolumn#%24attribute-detail&quot;&gt;yii\grid\DataColumn::$attribute&lt;/a&gt; property set and the attribute should be active in the current scenario of $filterModel or have &lt;a href=&quot;yii-grid-datacolumn#%24filter-detail&quot;&gt;yii\grid\DataColumn::$filter&lt;/a&gt; set as the HTML code for the input field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1fb3dce25cffa2b01762e855de24d0422fd9b6" translate="yes" xml:space="preserve">
          <source>Note that in the above example, we assume the default URL format is being used. If the pretty URL format is enabled, the created URLs will be different, according to the &lt;a href=&quot;yii-web-urlmanager#%24rules-detail&quot;&gt;URL rules&lt;/a&gt; in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0983dbb6d9d7b68742983d5ac91d0a07e1d72d7d" translate="yes" xml:space="preserve">
          <source>Note that in the above, because &quot;author&quot; is added as a child of &quot;admin&quot;, when you implement the &lt;code&gt;execute()&lt;/code&gt; method of the rule class, you need to respect this hierarchy as well. That is why when the role name is &quot;author&quot;, the &lt;code&gt;execute()&lt;/code&gt; method will return &lt;code&gt;true&lt;/code&gt; if the user group is either 1 or 2 (meaning the user is in either &quot;admin&quot; group or &quot;author&quot; group).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707d4d43a45fea2c72cf113f9843102f730b7c5c" translate="yes" xml:space="preserve">
          <source>Note that in the above, the 'customer_id' key in the &lt;code&gt;$link&lt;/code&gt; parameter refers to an attribute name in the related class &lt;code&gt;Order&lt;/code&gt;, while the 'id' value refers to an attribute name in the current AR class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f139a3cbf7442cd7989de464a6298287054c9c" translate="yes" xml:space="preserve">
          <source>Note that in the above, the 'id' key in the &lt;code&gt;$link&lt;/code&gt; parameter refers to an attribute name in the related class &lt;code&gt;Country&lt;/code&gt;, while the 'country_id' value refers to an attribute name in the current AR class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89039d19b3c4b3da2b615b7b0875d1f4d356aa7e" translate="yes" xml:space="preserve">
          <source>Note that it does not guarantee that any of the required/optional parameters will be present, or that there will be no other attributes besides those specified. In other words. OP may provide whatever information it wants to. SREG names will be mapped to AX names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27026d46ef45ab092897dcb297052eb475f43cd5" translate="yes" xml:space="preserve">
          <source>Note that it is possible the update does not affect any row in the table. In this case, this method will return 0. For this reason, you should use the following code to check if update() is successful or not:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe20089ecaf3426e458057e80743c70d28baa703" translate="yes" xml:space="preserve">
          <source>Note that jQuery doesn't set the header in case of cross domain requests: &lt;a href=&quot;https://stackoverflow.com/questions/8163703/cross-domain-ajax-doesnt-send-x-requested-with-header&quot;&gt;https://stackoverflow.com/questions/8163703/cross-domain-ajax-doesnt-send-x-requested-with-header&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad77a9169f2894f1f0060ac84ad5dd207348173" translate="yes" xml:space="preserve">
          <source>Note that logging out a user is only meaningful when session is enabled. The method will clean up the user authentication status from both memory and session. And by default, it will also destroy &lt;em&gt;all&lt;/em&gt; user session data. If you want to keep the session data, you should call &lt;code&gt;Yii::$app-&amp;gt;user-&amp;gt;logout(false)&lt;/code&gt;, instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898edad1add1d0a9c6bcbe0a5e3142fca6894d70" translate="yes" xml:space="preserve">
          <source>Note that no automatic type conversion performed by default. You may use &lt;a href=&quot;yii-behaviors-attributetypecastbehavior&quot;&gt;yii\behaviors\AttributeTypecastBehavior&lt;/a&gt; to facilitate attribute typecasting. See &lt;a href=&quot;guide-db-active-record#attributes-typecasting&quot;&gt;http://www.yiiframework.com/doc-2.0/guide-db-active-record.html#attributes-typecasting&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8c56fdf0847a979e942dce4f1ca0b3270d6504" translate="yes" xml:space="preserve">
          <source>Note that once CAPTCHA validation succeeds, a new CAPTCHA will be generated automatically. As a result, CAPTCHA validation should not be used in AJAX validation mode because it may fail the validation even if a user enters the same code as shown in the CAPTCHA image which is actually different from the latest CAPTCHA code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b553ccdb891b4b7b3c76cf9c362c2b83eb23d7" translate="yes" xml:space="preserve">
          <source>Note that only a forward slash &quot;/&quot; should be used as directory separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fbe3dacc807afa0c20e4520bdbabfdea2a5cd63" translate="yes" xml:space="preserve">
          <source>Note that output may not be ASCII.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8d2df6f12e2a810625814c9c4b7d1938bc7ed4" translate="yes" xml:space="preserve">
          <source>Note that query cache is only meaningful for queries that return results. For queries performed with &lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;yii\db\Command::execute()&lt;/a&gt;, query cache will not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60db7bd7a38dd1795663e1913233023703f53dd9" translate="yes" xml:space="preserve">
          <source>Note that since DataReader is a forward-only stream, you can only traverse it once. Doing it the second time will throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a934a941e0264a958b6fea16fb1236e36542f6" translate="yes" xml:space="preserve">
          <source>Note that some DB queries in some DBMS cannot be put into a transaction. For some examples, please refer to &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html&quot;&gt;implicit commit&lt;/a&gt;. If this is the case, you should still implement &lt;code&gt;up()&lt;/code&gt; and &lt;code&gt;down()&lt;/code&gt;, instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e8ef7d1f9a65541a4dd0b9c1ab39aa06da4d71" translate="yes" xml:space="preserve">
          <source>Note that some DBMS allow setting the isolation level only for the whole connection. Any subsequent transactions will get the same isolation level even if you do not specify any. When using this feature you may need to set the isolation level for all transactions explicitly to avoid conflicting settings. At the time of this writing, only MSSQL and SQLite are affected by this limitation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc0baa49926372c7b78db86dec186b519e71037" translate="yes" xml:space="preserve">
          <source>Note that some elements use slightly different defaults for &lt;a href=&quot;yii-widgets-activefield#%24template-detail&quot;&gt;$template&lt;/a&gt; and other options. You may want to override those predefined templates for checkboxes, radio buttons, checkboxLists and radioLists in the &lt;a href=&quot;yii-widgets-activeform#%24fieldConfig-detail&quot;&gt;fieldConfig&lt;/a&gt; of the &lt;a href=&quot;yii-widgets-activeform&quot;&gt;yii\widgets\ActiveForm&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8240cc85eff2a647b381bce2092796b12ae8570d" translate="yes" xml:space="preserve">
          <source>Note that some validators may introduce other properties for error messages used when specific validation conditions are not met. Please refer to individual class API documentation for details about these properties. By convention, this property represents the primary error message used when the most important validation condition is not met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ba90a2f528b380aff5aecb25030a5eabaeae8b" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;yii-web-response&quot;&gt;response&lt;/a&gt; component also triggers some events while it is sending out response content to end users. Those events are triggered &lt;em&gt;after&lt;/em&gt; this event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17098f6150a7f4667396212cc0342bdd92574d3" translate="yes" xml:space="preserve">
          <source>Note that the actual fixtures used for a test case will include both &lt;a href=&quot;yii-test-fixturetrait#globalFixtures()-detail&quot;&gt;globalFixtures()&lt;/a&gt; and &lt;a href=&quot;yii-test-fixturetrait#fixtures()-detail&quot;&gt;fixtures()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecec8c3c0ce83d373c9a765185cfe399bf75e5d" translate="yes" xml:space="preserve">
          <source>Note that the aforementioned methods only create the query and you always have to call &lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;execute()&lt;/a&gt; to actually run them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f64982427b58dae58b10f38bb780b764b5b437c" translate="yes" xml:space="preserve">
          <source>Note that the array format of &lt;a href=&quot;yii-db-query#where()-detail&quot;&gt;where()&lt;/a&gt; is designed to match columns to values instead of columns to columns, so the following would &lt;strong&gt;not&lt;/strong&gt; work as expected: &lt;code&gt;['post.author_id' =&amp;gt; 'user.id']&lt;/code&gt;, it would match the &lt;code&gt;post.author_id&lt;/code&gt; column value against the string &lt;code&gt;'user.id'&lt;/code&gt;. It is recommended to use the string syntax here which is more suited for a join:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe24cef97b574571d479356ea0290de8b0cb5426" translate="yes" xml:space="preserve">
          <source>Note that the array format of &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt; is designed to match columns to values instead of columns to columns, so the following would &lt;strong&gt;not&lt;/strong&gt; work as expected: &lt;code&gt;['post.author_id' =&amp;gt; 'user.id']&lt;/code&gt;, it would match the &lt;code&gt;post.author_id&lt;/code&gt; column value against the string &lt;code&gt;'user.id'&lt;/code&gt;. It is recommended to use the string syntax here which is more suited for a join:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4c1a99db406bfd452328e1cdd0d2b1fe83d09f" translate="yes" xml:space="preserve">
          <source>Note that the code template will be used as a PHP file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a4345bebfa40a707393ec462923dcc246cb8d5" translate="yes" xml:space="preserve">
          <source>Note that the command uses cache components defined in your console application configuration file. If components configured are different from web application, web application cache won't be cleared. In order to fix it please duplicate web application cache components in console config. You can use any component names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1947e3ebbef68695b08112dc3b6f41a5be5c8f" translate="yes" xml:space="preserve">
          <source>Note that the container and the sub-menus are not rendered here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3a789307b3cd20a053b356e8ac80f8d55de4d2" translate="yes" xml:space="preserve">
          <source>Note that the created command is not executed until &lt;a href=&quot;yii-db-command#execute()-detail&quot;&gt;execute()&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a8a81e04fa096d4eb112b917de4c496d0971ff" translate="yes" xml:space="preserve">
          <source>Note that the default time zone for input data is assumed to be UTC by default if no time zone is included in the input date value. If you store your data in a different time zone in the database, you have to adjust &lt;a href=&quot;yii-i18n-formatter#%24defaultTimeZone-detail&quot;&gt;$defaultTimeZone&lt;/a&gt; accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fe35ddb6e29c1b3ed2af860ac37b840f2049d7" translate="yes" xml:space="preserve">
          <source>Note that the development version of Yii should not be used for production as it may break your running code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4e46419de36d1cfb79b2dbfbac1fb6cdbaeab0" translate="yes" xml:space="preserve">
          <source>Note that the method will NOT perform CSRF validation if &lt;a href=&quot;yii-web-request#%24enableCsrfValidation-detail&quot;&gt;$enableCsrfValidation&lt;/a&gt; is false or the HTTP method is among GET, HEAD or OPTIONS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1561b10909dc27186d4b99100f464f3fbc9933" translate="yes" xml:space="preserve">
          <source>Note that the newly created permission is not added to the RBAC system yet. You must fill in the needed data and call &lt;a href=&quot;yii-rbac-basemanager#add()-detail&quot;&gt;add()&lt;/a&gt; to add it to the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5890d0e464fea1219797c44f6259ba4ab4792fb" translate="yes" xml:space="preserve">
          <source>Note that the newly created permission is not added to the RBAC system yet. You must fill in the needed data and call &lt;a href=&quot;yii-rbac-managerinterface#add()-detail&quot;&gt;add()&lt;/a&gt; to add it to the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="930daf2560e7c8b92b91a77dc0fb79e47ccd5059" translate="yes" xml:space="preserve">
          <source>Note that the newly created role is not added to the RBAC system yet. You must fill in the needed data and call &lt;a href=&quot;yii-rbac-basemanager#add()-detail&quot;&gt;add()&lt;/a&gt; to add it to the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc85ce6cf86a7887eb9b126fe1154203f79bc80d" translate="yes" xml:space="preserve">
          <source>Note that the newly created role is not added to the RBAC system yet. You must fill in the needed data and call &lt;a href=&quot;yii-rbac-managerinterface#add()-detail&quot;&gt;add()&lt;/a&gt; to add it to the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d67b54db7f15e828fb1415ea22ec6f6c1f772e" translate="yes" xml:space="preserve">
          <source>Note that the rendering result of the widget is directly echoed out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b59db7a18455e148c3e8b5e8d7c4da5c5576a6f" translate="yes" xml:space="preserve">
          <source>Note that the return value of this method should mainly be used for logging purpose. It is likely that this method returns an invalid SQL due to improper replacement of parameter placeholders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7be01f6251a741e238bb192108ff555fc652674" translate="yes" xml:space="preserve">
          <source>Note that the same &lt;code&gt;afterAction&lt;/code&gt; event is also triggered by &lt;a href=&quot;guide-structure-modules&quot;&gt;modules&lt;/a&gt; and &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt;. These objects trigger this event in the reverse order as for that of &lt;code&gt;beforeAction&lt;/code&gt;. That is, controllers are the first objects triggering this event, followed by modules (if any), and finally applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6deb9f9d5b891e803f1fb7f7e1f0bdfcd9b634" translate="yes" xml:space="preserve">
          <source>Note that the same &lt;code&gt;beforeAction&lt;/code&gt; event is also triggered by &lt;a href=&quot;guide-structure-modules&quot;&gt;modules&lt;/a&gt; and &lt;a href=&quot;guide-structure-controllers&quot;&gt;controllers&lt;/a&gt;. Application objects are the first ones triggering this event, followed by modules (if any), and finally controllers. If an event handler sets &lt;a href=&quot;yii-base-actionevent#%24isValid-detail&quot;&gt;yii\base\ActionEvent::$isValid&lt;/a&gt; to be &lt;code&gt;false&lt;/code&gt;, all of the subsequent events will NOT be triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5efb597676ce39cdb8f99809f6d9fefb99fb20" translate="yes" xml:space="preserve">
          <source>Note that the target asset files should be absolute URLs, domain relative URLs (starting from '/') or paths relative to &lt;a href=&quot;yii-web-assetmanager#%24baseUrl-detail&quot;&gt;$baseUrl&lt;/a&gt; and &lt;a href=&quot;yii-web-assetmanager#%24basePath-detail&quot;&gt;$basePath&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb824113f205fa28adbf450104e0a987d934fc9" translate="yes" xml:space="preserve">
          <source>Note that the user-specified view name must start with a word character and can only contain word characters, forward slashes, dots and dashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de84e27fa4609ef1948a878f7a45838600ff02f" translate="yes" xml:space="preserve">
          <source>Note that the values in each row must match the corresponding column names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7dcd0f871853f2fbafe087940fa1f05e06ade0a" translate="yes" xml:space="preserve">
          <source>Note that the values setting via options are not available until &lt;a href=&quot;yii-base-controller#beforeAction()-detail&quot;&gt;beforeAction()&lt;/a&gt; is being called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52b3242f7eb1bfd09451307a8c83d879251c5b5" translate="yes" xml:space="preserve">
          <source>Note that the values setting via options are not available until &lt;a href=&quot;yii-console-controllers-basemigratecontroller#beforeAction()-detail&quot;&gt;beforeAction()&lt;/a&gt; is being called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f710dc175e0eec654b9e344bd9a4b7f7308992e3" translate="yes" xml:space="preserve">
          <source>Note that the values setting via options are not available until &lt;a href=&quot;yii-console-controllers-migratecontroller#beforeAction()-detail&quot;&gt;beforeAction()&lt;/a&gt; is being called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5331e8d7dbdc42ed05b597d0d9453247df92be8" translate="yes" xml:space="preserve">
          <source>Note that the values setting via options are not available until &lt;a href=&quot;yii-faker-fixturecontroller#beforeAction()-detail&quot;&gt;beforeAction()&lt;/a&gt; is being called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d39d927e3ada12bf22320fa33289343ff849cd3" translate="yes" xml:space="preserve">
          <source>Note that the values setting via options are not available until &lt;a href=&quot;yii-mongodb-console-controllers-migratecontroller#beforeAction()-detail&quot;&gt;beforeAction()&lt;/a&gt; is being called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e67647a92dee8c78058a6199547d57a7a45dad" translate="yes" xml:space="preserve">
          <source>Note that the view name is resolved into the view file by the current context of the &lt;a href=&quot;yii-base-widget#%24view-detail&quot;&gt;$view&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51e3f47067dec722ceaee8fc6c533d112b5ce1c" translate="yes" xml:space="preserve">
          <source>Note that the widget must have both &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;attribute&lt;/code&gt; properties. They will be initialized with &lt;a href=&quot;yii-widgets-activefield#%24model-detail&quot;&gt;$model&lt;/a&gt; and &lt;a href=&quot;yii-widgets-activefield#%24attribute-detail&quot;&gt;$attribute&lt;/a&gt; of this field, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64d32b859be3fc45d483f5969a38c96d8ee1fbc" translate="yes" xml:space="preserve">
          <source>Note that there should be no space after &lt;code&gt;duration,&lt;/code&gt; and before &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b084bdd168fcbb188c4e51197ff5a4b292e2c5c6" translate="yes" xml:space="preserve">
          <source>Note that there should be no space after &lt;code&gt;ordinal,&lt;/code&gt; and before &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1743ee8bf95160d977efc07e12dc7c2294c719b2" translate="yes" xml:space="preserve">
          <source>Note that there should be no space after &lt;code&gt;spellout,&lt;/code&gt; and before &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145aae730462a27d9c5444e05fc509729de8cc2e" translate="yes" xml:space="preserve">
          <source>Note that this condition is applied in case of a join as well as when fetching the related records. Thus only fields of the related table can be used in the condition. Trying to access fields of the primary record will cause an error in a non-join-query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd81b69828a2f16f445d9a6a3ab61b1c92db704" translate="yes" xml:space="preserve">
          <source>Note that this is for English only! For example, 'apple' will become 'apples', and 'child' will become 'children'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bf3666cc1324ccea0fb603cd1e981625ed3604" translate="yes" xml:space="preserve">
          <source>Note that this is not used by the &lt;a href=&quot;yii-grid-datacolumn&quot;&gt;yii\grid\DataColumn&lt;/a&gt; if a data item is &lt;code&gt;null&lt;/code&gt;. In that case the &lt;a href=&quot;yii-i18n-formatter#%24nullDisplay-detail&quot;&gt;nullDisplay&lt;/a&gt; property of the &lt;a href=&quot;yii-grid-gridview#%24formatter-detail&quot;&gt;$formatter&lt;/a&gt; will be used to indicate an empty data value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb33891a3e0f342cbc803b50f4215f67902f9530" translate="yes" xml:space="preserve">
          <source>Note that this method differs from &lt;a href=&quot;yii-db-baseactiverecord#updateAllCounters()-detail&quot;&gt;updateAllCounters()&lt;/a&gt; in that it only saves counters for the current AR object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5515cf5570a2248c7431cf439c6ada3e30cec3" translate="yes" xml:space="preserve">
          <source>Note that this method does not check &lt;a href=&quot;yii-base-module#%24modules-detail&quot;&gt;$modules&lt;/a&gt; or &lt;a href=&quot;yii-base-module#%24controllerMap-detail&quot;&gt;$controllerMap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d134264e99b44cef8eb58da0c66b1de1cc268926" translate="yes" xml:space="preserve">
          <source>Note that this method does not check if the given path exists or not. All it does is to associate the alias with the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd38cbda7e061aaa82d8175e30a6194cc8acd1c" translate="yes" xml:space="preserve">
          <source>Note that this method does not check if the relation exists or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88428f25a3b756a98f848bf5aab23891f5476589" translate="yes" xml:space="preserve">
          <source>Note that this method does not check if the scenario exists or not. The method &lt;a href=&quot;yii-base-model#validate()-detail&quot;&gt;validate()&lt;/a&gt; will perform this check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc857ce5aa25dec31cff2e8c6c646ed26c35bdd9" translate="yes" xml:space="preserve">
          <source>Note that this method does not deal with session or cookie. You should usually use &lt;a href=&quot;yii-web-user#switchIdentity()-detail&quot;&gt;switchIdentity()&lt;/a&gt; to change the identity of the current user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87cb430633e1b04ec7b592b93e4821a71e73053" translate="yes" xml:space="preserve">
          <source>Note that this method is provided for completeness. In most cases because you do not need to validate a hidden input, you should not need to use this method. Instead, you should use &lt;a href=&quot;yii-helpers-basehtml#activeHiddenInput()-detail&quot;&gt;yii\helpers\Html::activeHiddenInput()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449c26f36524a2e11a4a482a8a556a521e3c63ec" translate="yes" xml:space="preserve">
          <source>Note that this method only prepares the response for file sending. The file is not sent until &lt;a href=&quot;yii-web-response#send()-detail&quot;&gt;send()&lt;/a&gt; is called explicitly or implicitly. The latter is done after you return from a controller action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef698dc064b17836a9027feef6bc46e5eff294cf" translate="yes" xml:space="preserve">
          <source>Note that this method requires an active &lt;a href=&quot;yii-db-command#%24pdoStatement-detail&quot;&gt;$pdoStatement&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bbd4548f8465a83c92e33fd23b8d202b3ab1fe" translate="yes" xml:space="preserve">
          <source>Note that this method requires that the primary key value is not null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cae990f8f9364468ed0d77ad77d62e9268cd88b" translate="yes" xml:space="preserve">
          <source>Note that this method uses php's move_uploaded_file() method. If the target file &lt;code&gt;$file&lt;/code&gt; already exists, it will be overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fd9f2c4e17e78a270ae4d1d57b1f17ee328444" translate="yes" xml:space="preserve">
          <source>Note that this method will &lt;strong&gt;not&lt;/strong&gt; perform data validation and will &lt;strong&gt;not&lt;/strong&gt; trigger events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d29bcd08122f3d5fce604cc82d80f9e79d1db6b" translate="yes" xml:space="preserve">
          <source>Note that this method will also check all parent classes to see if there is any handler attached to the named event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47713addbd5004dd74fbe05b8ea28fbb718f16eb" translate="yes" xml:space="preserve">
          <source>Note that this method will not trigger any events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be17c5749f24cd7c8631cb5a36eeeecb9bbc5ebe" translate="yes" xml:space="preserve">
          <source>Note that this method will not trigger any events. If you need &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_DELETE-detail&quot;&gt;EVENT_BEFORE_DELETE&lt;/a&gt; or &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_DELETE-detail&quot;&gt;EVENT_AFTER_DELETE&lt;/a&gt; to be triggered, you need to &lt;a href=&quot;yii-db-activerecord#find()-detail&quot;&gt;find&lt;/a&gt; the models first and then call &lt;a href=&quot;yii-db-activerecord#delete()-detail&quot;&gt;delete()&lt;/a&gt; on each of them. For example an equivalent of the example above would be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df562b44dd913ddc37423f463062895e17f291b" translate="yes" xml:space="preserve">
          <source>Note that this method will not trigger any events. If you need &lt;a href=&quot;yii-db-baseactiverecord#EVENT_BEFORE_UPDATE-detail&quot;&gt;EVENT_BEFORE_UPDATE&lt;/a&gt; or &lt;a href=&quot;yii-db-baseactiverecord#EVENT_AFTER_UPDATE-detail&quot;&gt;EVENT_AFTER_UPDATE&lt;/a&gt; to be triggered, you need to &lt;a href=&quot;yii-db-activerecord#find()-detail&quot;&gt;find&lt;/a&gt; the models first and then call &lt;a href=&quot;yii-db-activerecord#update()-detail&quot;&gt;update()&lt;/a&gt; on each of them. For example an equivalent of the example above would be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabc6493379baccd3f661c0bf2ff259e3c00ff01" translate="yes" xml:space="preserve">
          <source>Note that this method will success for already long-live token, but will not actually prolong it any further. Pay attention, that this method will fail on already expired access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d389aa1da8b0834c60316a9221407a1c6c2e57" translate="yes" xml:space="preserve">
          <source>Note that this validator only checks if the URL scheme and host part are correct. It does not check the remaining parts of a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09aaf1fb08f7bee6ac75530af6bb395572b1db9" translate="yes" xml:space="preserve">
          <source>Note that to destroy the relationship without removing records make sure your keys can be set to null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ccf37c38f65f2f232f3b86a2e66b4b773df48c" translate="yes" xml:space="preserve">
          <source>Note that to synchronize database you now need to run multiple commands instead of one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65abc368fe726e0fe9041b7a15bbf92483362e3f" translate="yes" xml:space="preserve">
          <source>Note that unless &lt;a href=&quot;yii-i18n-messagesource#%24forceTranslation-detail&quot;&gt;$forceTranslation&lt;/a&gt; is true, if the target language is the same as the &lt;a href=&quot;yii-i18n-messagesource#%24sourceLanguage-detail&quot;&gt;source language&lt;/a&gt;, the message will NOT be translated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6040f2b7b897136f305afa364f1d618b3702dc" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;yii-base-widget#widget()-detail&quot;&gt;yii\base\Widget::widget()&lt;/a&gt; which returns the rendering result of a widget, the method &lt;a href=&quot;yii-base-widget#begin()-detail&quot;&gt;yii\base\Widget::begin()&lt;/a&gt; returns an instance of the widget which you can use to build the widget content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c11cf5933d02626f34cb41880818a1a60e732b" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;yii-db-query#having()-detail&quot;&gt;having()&lt;/a&gt;, you cannot pass binding parameters to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14051a9dbfcc93ae587c7ab0346de1bf5db4e46" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;yii-db-querytrait#where()-detail&quot;&gt;where()&lt;/a&gt;, you cannot pass binding parameters to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfefebd4b3f48c137edea2d5377af1635bdf5f4" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;yii-helpers-baseurl#toRoute()-detail&quot;&gt;yii\helpers\Url::toRoute()&lt;/a&gt;, this method always treats the given route as an absolute route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d0da8ede0f1c219a561302543d132f9b707105" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;yii-sphinx-matchexpression#match()-detail&quot;&gt;match()&lt;/a&gt;, you cannot pass binding parameters to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e128422c66f901d6c2879878802dec7005750a" translate="yes" xml:space="preserve">
          <source>Note that update analyzers required to \yii\elasticsearch\close() the index first and \yii\elasticsearch\open() it after the changes are made, use &lt;a href=&quot;yii-elasticsearch-command#updateAnalyzers()-detail&quot;&gt;updateAnalyzers()&lt;/a&gt; for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e191fb0198f6bb0e64bc256a672a9eda8679c46a" translate="yes" xml:space="preserve">
          <source>Note that usually when you perform multiple DB operations in &lt;code&gt;safeUp()&lt;/code&gt;, you should reverse their execution order in &lt;code&gt;safeDown()&lt;/code&gt;. In the above example we first create the table and then insert a row in &lt;code&gt;safeUp()&lt;/code&gt;; while in &lt;code&gt;safeDown()&lt;/code&gt; we first delete the row and then drop the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f85b7f67c8080eaaaf60227f1ffcca035579e4" translate="yes" xml:space="preserve">
          <source>Note that we can't use all validated attributes (&lt;code&gt;['personalSalary', 'spouseSalary', 'childrenCount']&lt;/code&gt;) when attaching validator. This is because the same validator will run for each attribute (3 times in total) and we only need to run it once for the whole attribute set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e018e57b60482ae47273ebd7d28cdb883ffb58be" translate="yes" xml:space="preserve">
          <source>Note that when &lt;a href=&quot;yii-web-user#%24loginUrl-detail&quot;&gt;$loginUrl&lt;/a&gt; is set, calling this method will NOT terminate the application execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f393ac47c4ab733bb7c4e656ab10d27b22add5" translate="yes" xml:space="preserve">
          <source>Note that when a Migration object is created by the &lt;code&gt;migrate&lt;/code&gt; command, this property will be overwritten by the command. If you do not want to use the DB connection provided by the command, you may override the &lt;a href=&quot;yii-db-migration#init()-detail&quot;&gt;init()&lt;/a&gt; method like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c1277eb54c4684ddaa9eb92b0a5836b1071318" translate="yes" xml:space="preserve">
          <source>Note that when the validator has a conditional validation applied using &lt;a href=&quot;yii-validators-validator#%24when-detail&quot;&gt;$when&lt;/a&gt; this method will return &lt;code&gt;false&lt;/code&gt; regardless of the &lt;code&gt;when&lt;/code&gt; condition because it may be called be before the model is loaded with data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f26f0a25ea09055af4bbff13e04b26e9300e89" translate="yes" xml:space="preserve">
          <source>Note that when the value is empty, no comparison expression will be added to the search condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3711d7c4604c3209728009fd2903ffb0f3d7fce4" translate="yes" xml:space="preserve">
          <source>Note that you may need to install &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt; if you do not have it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a498b8b120d5c78f04222de6384221c04c3682" translate="yes" xml:space="preserve">
          <source>Note that you must configure &quot;authManager&quot; application component in order to use this method. Otherwise it will always return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c6412f6c70a0ac7d357be3f71958f0695132d0" translate="yes" xml:space="preserve">
          <source>Note that you should also list these modules in &lt;a href=&quot;yii-web-application#bootstrap()-detail&quot;&gt;yii\web\Application::bootstrap()&lt;/a&gt; so that they can participate the &lt;a href=&quot;guide-runtime-bootstrapping&quot;&gt;bootstrapping&lt;/a&gt; process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387874dcadca0517702c3945ae0c6ca7d5025d21" translate="yes" xml:space="preserve">
          <source>Note that you should call &lt;a href=&quot;yii-data-basedataprovider#prepare()-detail&quot;&gt;prepare()&lt;/a&gt; or &lt;a href=&quot;yii-data-basedataprovider#getModels()-detail&quot;&gt;getModels()&lt;/a&gt; first to get correct values of &lt;a href=&quot;yii-data-pagination#%24totalCount-detail&quot;&gt;yii\data\Pagination::$totalCount&lt;/a&gt; and &lt;a href=&quot;yii-data-pagination#%24pageCount-detail&quot;&gt;yii\data\Pagination::$pageCount&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2878dee0fb10524ff36a373401077155ac9f1119" translate="yes" xml:space="preserve">
          <source>Note that you should enable &lt;code&gt;fileinfo&lt;/code&gt; PHP extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311c2846eb8f152de340a8f1f1dfabd1ce13a312" translate="yes" xml:space="preserve">
          <source>Note that, in this case, &lt;code&gt;$event-&amp;gt;sender&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; instead of an object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cf8f6a7beedbf6342fbe23cc30890a18238c84" translate="yes" xml:space="preserve">
          <source>Note that, in this case, the configuration array should not contain a &lt;code&gt;class&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e39c5fa9d0ba53b0443b3052ba0fda37b92f22" translate="yes" xml:space="preserve">
          <source>Note, even there's no row in the reader, this still gives correct column number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8faa23cb014148bcc5c622107c9cb0a36fe236" translate="yes" xml:space="preserve">
          <source>Note, in order to inherit hints defined in the parent class, a child class needs to merge the parent hints with child hints using functions such as &lt;code&gt;array_merge()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371f7c804f3505b7bc5d0077c61ea8578c1d58b2" translate="yes" xml:space="preserve">
          <source>Note, in order to inherit labels defined in the parent class, a child class needs to merge the parent labels with child labels using functions such as &lt;code&gt;array_merge()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfad88ab885c2e0c5934148bca0522cc0a5112cb" translate="yes" xml:space="preserve">
          <source>Note, in order to inherit rules defined in the parent class, a child class needs to merge the parent rules with child rules using functions such as &lt;code&gt;array_merge()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618defe67c63a857f10f72bff87fd08df7b3dece" translate="yes" xml:space="preserve">
          <source>Note, most DBMS may not give a meaningful count. In this case, use &quot;SELECT COUNT(*) FROM tableName&quot; to obtain the number of rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c98ae4783fd36460a25582f9b85a9aae6bb461" translate="yes" xml:space="preserve">
          <source>Note, never use this method with &lt;code&gt;pre&lt;/code&gt; or &lt;code&gt;textarea&lt;/code&gt; tags. It's not that trivial to deal with such tags as it may seem at first sight. For this case you should consider using &lt;a href=&quot;http://tidy.sourceforge.net/&quot;&gt;HTML Tidy Project&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2545b56e72f30f77ed88ccfb2609967930a7757" translate="yes" xml:space="preserve">
          <source>Note, that if &lt;a href=&quot;yii-db-query#select()-detail&quot;&gt;select()&lt;/a&gt; has not been specified before, you should include &lt;code&gt;*&lt;/code&gt; explicitly if you want to select all remaining columns too:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a4d68683d4000f63d18def96eda743711fc14b1" translate="yes" xml:space="preserve">
          <source>Note, that the data being populated is subject to the safety check by &lt;a href=&quot;yii-base-model#setAttributes()-detail&quot;&gt;setAttributes()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e802d56f25077a1f169c3720df7f684750990db" translate="yes" xml:space="preserve">
          <source>Note, that when using &lt;code&gt;timestampAttribute&lt;/code&gt;, the input value will be converted to a unix timestamp, which by definition is in UTC, so a conversion from the &lt;a href=&quot;yii-validators-datevalidator#%24timeZone-detail&quot;&gt;input time zone&lt;/a&gt; to UTC will be performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5aaeb1b216f075b3dee237ca942d8f6105b8b1" translate="yes" xml:space="preserve">
          <source>Note, that when using this property, the input value will be converted to a unix timestamp, which by definition is in UTC, so a conversion from the &lt;a href=&quot;yii-validators-datevalidator#%24timeZone-detail&quot;&gt;input time zone&lt;/a&gt; to UTC will be performed. When defining &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttributeFormat-detail&quot;&gt;$timestampAttributeFormat&lt;/a&gt; you can control the conversion by setting &lt;a href=&quot;yii-validators-datevalidator#%24timestampAttributeTimeZone-detail&quot;&gt;$timestampAttributeTimeZone&lt;/a&gt; to a different value than &lt;code&gt;'UTC'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ccf376d93b9b8fbf5db2df7eef624a6a544056e" translate="yes" xml:space="preserve">
          <source>Note, the child item is not deleted. Only the parent-child relationship is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9412908bc3b30931688bdd36027bee79c83e39f" translate="yes" xml:space="preserve">
          <source>Note, the children items are not deleted. Only the parent-child relationships are removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb9fe8bfd7fdeee670b72f93a6a44b4cf88fcf8" translate="yes" xml:space="preserve">
          <source>Note, the values and labels will be automatically HTML-encoded by this method, and the blank spaces in the labels will also be HTML-encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2f98abfb5a87d4cb18accd8c40d99ebdbdc112" translate="yes" xml:space="preserve">
          <source>Note, there is no security measure to protected data in memcache. All data in memcache can be accessed by any process running in the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2cc387ff6deca52a73ab2d71543b16c331ac4f9" translate="yes" xml:space="preserve">
          <source>Note, this feature requires that the user client accepts cookie. Also, to use this feature, forms submitted via POST method must contain a hidden input whose name is specified by &lt;a href=&quot;yii-web-request#%24csrfParam-detail&quot;&gt;$csrfParam&lt;/a&gt;. You may use &lt;a href=&quot;yii-helpers-basehtml#beginForm()-detail&quot;&gt;yii\helpers\Html::beginForm()&lt;/a&gt; to generate his hidden input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408ae8b19aef76470b149b00148ba974e040441a" translate="yes" xml:space="preserve">
          <source>Note, this method does not check if the returned path exists or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897fb0c0685f90ce4ad65feb89ce57f57b5827fc" translate="yes" xml:space="preserve">
          <source>Note, this validator should only be used with string-typed attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2a37093f3261b1ff70a2acc0da8a27d4f8a8b8" translate="yes" xml:space="preserve">
          <source>Note: If the migration name is of a special form, for example create_xxx or drop_xxx, then the generated migration file will contain extra code, in this case for creating/dropping tables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656889ab98e7bbb551d0aea79273998e62010151" translate="yes" xml:space="preserve">
          <source>Note: Mongo creates new collections automatically on the first demand, this method makes sense only for the migration script or for the case you need to create collection with the specific options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed620ef285a479ccd0bef1f5a8db6286c7bdb0d8" translate="yes" xml:space="preserve">
          <source>Note: Multilevel dropdowns beyond Level 1 are not supported in Bootstrap 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505506593a8cab2c9473f549317eee0ee3df2b71" translate="yes" xml:space="preserve">
          <source>Note: MySQL, Oracle and Cubrid support only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ae9e6a421a6508aba47c85c55db7f2bc486a37" translate="yes" xml:space="preserve">
          <source>Note: Not all DBMS support transactions. And some DB queries cannot be put into a transaction. For some examples, please refer to &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html&quot;&gt;implicit commit&lt;/a&gt;. If this is the case, you should still implement &lt;code&gt;up()&lt;/code&gt; and &lt;code&gt;down()&lt;/code&gt;, instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ac591fdeaff218f25a26c9482560a3e1ee5bf4" translate="yes" xml:space="preserve">
          <source>Note: On rare scenario, a race condition can develop that will lead to a one-time-manifestation of a non-critical problem in the creation of the directory that holds the published assets. This problem can be avoided altogether by 'requesting' in advance all the resources that are supposed to trigger a 'publish()' call, and doing that in the application deployment phase, before system goes live. See more in the following discussion: &lt;a href=&quot;http://code.google.com/p/yii/issues/detail?id=2579&quot;&gt;http://code.google.com/p/yii/issues/detail?id=2579&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dcde8833f97ca3e5baab913985340750a06fed" translate="yes" xml:space="preserve">
          <source>Note: \yii\mongodb\file\newFileContent always takes precedence over \yii\mongodb\file\file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980691bbc6281bb3bd910eefe68e63104b4c826d" translate="yes" xml:space="preserve">
          <source>Note: because pagination offset and limit may exceed Sphinx 'max_matches' bounds, data provider will set 'max_matches' option automatically based on those values. However, if &lt;a href=&quot;yii-sphinx-query#showMeta()-detail&quot;&gt;yii\sphinx\Query::showMeta()&lt;/a&gt; is set, such adjustment is not performed as it will break total count calculation, so you'll have to deal with 'max_matches' bounds on your own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd96bee46a5c141984169c15f24d62befc7fa48c" translate="yes" xml:space="preserve">
          <source>Note: by default this command relies on an external tools to perform actual files compression, check &lt;a href=&quot;yii-console-controllers-assetcontroller#%24jsCompressor-detail&quot;&gt;$jsCompressor&lt;/a&gt; and &lt;a href=&quot;yii-console-controllers-assetcontroller#%24cssCompressor-detail&quot;&gt;$cssCompressor&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be2e654de816ea965b0fbc182deea24b2e5eae2" translate="yes" xml:space="preserve">
          <source>Note: class, which uses this trait must declare public field named &lt;code&gt;options&lt;/code&gt; with the array default value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b289060ea4ab68e92ac7ec85271a07fb22bf0b57" translate="yes" xml:space="preserve">
          <source>Note: condition values for the key '_id' will be automatically cast to \MongoDB\BSON\ObjectID instance, even if they are plain strings. However, if you have other columns, containing \MongoDB\BSON\ObjectID, you should take care of possible typecast on your own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb7e231ec33ab6eda3a75dafb0c61119f2d162b" translate="yes" xml:space="preserve">
          <source>Note: do not use this class directly - its instance will be created and maintained by PHP internally once corresponding stream resource is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c09fe19a7f5d72f5393d8e0fa766150bd49b33c" translate="yes" xml:space="preserve">
          <source>Note: each invocation of this method will create new file resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5eba43859545a5118d08ad9e5ded3ffb6e9e25" translate="yes" xml:space="preserve">
          <source>Note: for &quot;multi&quot; mode Mongo requires explicit strategy &quot;$set&quot; or &quot;$inc&quot; to be specified for the &quot;newData&quot;. If no strategy is passed &quot;$set&quot; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aa0e9f12c665d4875d1fc675028f4ad8b98a97" translate="yes" xml:space="preserve">
          <source>Note: for &quot;multiple&quot; mode Mongo requires explicit strategy &quot;$set&quot; or &quot;$inc&quot; to be specified for the &quot;newData&quot;. If no strategy is passed &quot;$set&quot; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dc45514ef15e11cf5c2ad36b75d555aabfd0ca" translate="yes" xml:space="preserve">
          <source>Note: if you are using well-trusted OpenIdConnect provider, you may disable &lt;a href=&quot;yii-authclient-openidconnect#%24validateJws-detail&quot;&gt;$validateJws&lt;/a&gt;, making installation of &lt;code&gt;spomky-labs/jose&lt;/code&gt; library redundant, however it is not recommended as it violates the protocol specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6765fcc0c79a9c274cc2f5e0a3e78cc216286f4" translate="yes" xml:space="preserve">
          <source>Note: if you specify custom select for the facet, ensure facet name has corresponding column inside it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2614614f639897e4f41ca66513c851e693637b89" translate="yes" xml:space="preserve">
          <source>Note: if you want to use the pagination feature, you must configure the &lt;a href=&quot;yii-data-basedataprovider#%24totalCount-detail&quot;&gt;$totalCount&lt;/a&gt; property to be the total number of rows (without pagination). And if you want to use the sorting feature, you must configure the &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;$sort&lt;/a&gt; property so that the provider knows which columns can be sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4ee0adabc441bf3fa74f9a17db6aaa569e5f1b" translate="yes" xml:space="preserve">
          <source>Note: if you want to use the sorting feature, you must configure the &lt;a href=&quot;yii-data-basedataprovider#%24sort-detail&quot;&gt;$sort&lt;/a&gt; property so that the provider knows which columns can be sorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e284e0a09ed2b3b70461f67daffd5592630401" translate="yes" xml:space="preserve">
          <source>Note: in order to function correctly state storage should vary depending on application session, e.g. different web users should not share state with the same name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619feefc240f29c789d6f5f7f6186e9abfaba167" translate="yes" xml:space="preserve">
          <source>Note: in the console environment some &lt;a href=&quot;guide-concept-aliases&quot;&gt;path aliases&lt;/a&gt; like &lt;code&gt;@webroot&lt;/code&gt; and &lt;code&gt;@web&lt;/code&gt; may not exist, so corresponding paths inside the configuration should be specified directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48b8ccf8c65d256a0ec3b5578cd97623c142aae" translate="yes" xml:space="preserve">
          <source>Note: instance of this class is 'single use' only. Do not attempt to use same &lt;code&gt;Upload&lt;/code&gt; instance for multiple file upload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf45f6aea32041f0a89bab71b51e60b19244eda" translate="yes" xml:space="preserve">
          <source>Note: only runtime indexes are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b0b4d0da2e3c991471e3ffcbbbd354ce7fb8b2" translate="yes" xml:space="preserve">
          <source>Note: parameters passed via &lt;a href=&quot;yii-sphinx-matchexpression#params()-detail&quot;&gt;params()&lt;/a&gt; or generated from array conditions will be automatically escaped using &lt;a href=&quot;yii-sphinx-connection#escapeMatchValue()-detail&quot;&gt;yii\sphinx\Connection::escapeMatchValue()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4931217ce31aa128c6f969a393d31a9594b6e243" translate="yes" xml:space="preserve">
          <source>Note: primary key is added automatically and is named id by default. If you want to use another name you may specify it explicitly like &lt;code&gt;--fields=&quot;id_key:primaryKey,name:string(12):notNull:unique&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d13392b01d985a61df994c698598b9ef0f75eb3" translate="yes" xml:space="preserve">
          <source>Note: this class definition does not match ordinary Yii style, because it should match PHP 4.3 and should not use features from newer PHP versions!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd57d1c4e84ba945e1116fbfc87ad56cb6a82bf3" translate="yes" xml:space="preserve">
          <source>Note: this component can maintain the locks only for the single web server, it probably will not suffice to your in case you are using cloud server solution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da3db2a7317e8cd3da7fd0cde8238a4515bbc0c" translate="yes" xml:space="preserve">
          <source>Note: this data provider fetches result models and total count using single ElasticSearch query, so results total count will be fetched after pagination limit applying, which eliminates ability to verify if requested page number actually exist. Data provider disables \yii\elasticsearch\yii\data\Pagination::validatePage automatically because of this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bc03d6e3ac296037e94a0244c87ada8b3e560f" translate="yes" xml:space="preserve">
          <source>Note: this function will not return the aggregation result, instead it will write it inside the another Mongo collection specified by &quot;out&quot; parameter. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa05f61118e98c977446756ba9c3c4391f1f6bfa" translate="yes" xml:space="preserve">
          <source>Note: this transport requires PHP 'curl' extension installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a70917427812800e445a1832db59c151bb4b52d" translate="yes" xml:space="preserve">
          <source>Note: this value will be processed by &lt;a href=&quot;yii-sphinx-connection#escapeMatchValue()-detail&quot;&gt;yii\sphinx\Connection::escapeMatchValue()&lt;/a&gt;, if you need to compose complex match condition use &lt;a href=&quot;yii-db-expression&quot;&gt;yii\db\Expression&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001c85b7d5ca48820049cdba4095ad8e5cfa3584" translate="yes" xml:space="preserve">
          <source>Note: when using 'meta' information results total count will be fetched after pagination limit applying, which eliminates ability to verify if requested page number actually exist. Data provider disables &lt;code&gt;yii\data\Pagination::validatePage&lt;/code&gt; automatically in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfbf85964bda56be0f0a870f56753f80cdd515e" translate="yes" xml:space="preserve">
          <source>Note: while this class extends &quot;yii\db\Connection&quot; some of its methods are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965cc4f723e41a4bf7ae417c2deb064985c14d1e" translate="yes" xml:space="preserve">
          <source>Note: xTerm 256 bit colors are currently not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174c808b5dd5b0d58d4de321659233cf933831f0" translate="yes" xml:space="preserve">
          <source>Note: you can manually trigger attribute typecasting anytime invoking &lt;a href=&quot;yii-behaviors-attributetypecastbehavior#typecastAttributes()-detail&quot;&gt;typecastAttributes()&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c102e3f4156f8087d949d0780e7d02daa96dca" translate="yes" xml:space="preserve">
          <source>Nothing will be done if the cache already contains the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af435604fce40f76ddb65930bb46b8ce98ad2deb" translate="yes" xml:space="preserve">
          <source>Notice that you bind the placeholder to the &lt;code&gt;$id&lt;/code&gt; variable before the execution, and then change the value of that variable before each subsequent execution (this is often done with loops). Executing queries in this manner can be vastly more efficient than running a new query for every different parameter value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf276628ffb2020f5d1762c5128dae8a024462c" translate="yes" xml:space="preserve">
          <source>Notifies user about templates which could be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5062dafdc19d58fc0cb8f1ce7bfad4f7685db64" translate="yes" xml:space="preserve">
          <source>Notifies user that given fixtures template files were generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074b47b3c0fa4c6713d073c3b152ba13cef9fcc3" translate="yes" xml:space="preserve">
          <source>Notifies user that given fixtures template files were not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85369d204972e9b974f50a90cdf0268f761a208" translate="yes" xml:space="preserve">
          <source>Notifies user that there are no fixtures to load according input conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a41e7ed28c50d40ce3a2786e0e1c1ca78fdc72" translate="yes" xml:space="preserve">
          <source>Notifies user that there are no fixtures to unload according input conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdac862db22c6f7055a95f51f0640047ade2c67" translate="yes" xml:space="preserve">
          <source>Notifies user that there was not found any files matching given input conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34d5d93d36164d14f2a6ccaa3258e7549bed087" translate="yes" xml:space="preserve">
          <source>Now consider the following piece of code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326d98d0830f977bbd84476d7dda921e0127be72" translate="yes" xml:space="preserve">
          <source>Now date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196376a5aa6c399e8eb63ecb56d8b29d782cd298" translate="yes" xml:space="preserve">
          <source>Now if the request is &lt;code&gt;http://hostname/index.php?r=post/view&amp;amp;id[]=123&lt;/code&gt;, the &lt;code&gt;$id&lt;/code&gt; parameter will take the value of &lt;code&gt;['123']&lt;/code&gt;. If the request is &lt;code&gt;http://hostname/index.php?r=post/view&amp;amp;id=123&lt;/code&gt;, the &lt;code&gt;$id&lt;/code&gt; parameter will still receive the same array value because the scalar value &lt;code&gt;'123'&lt;/code&gt; will be automatically turned into an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d417fb913bf5edfe3484ccbf2bcc99f70d1125af" translate="yes" xml:space="preserve">
          <source>Now if you access the controller again, an instance of &lt;code&gt;app\components\BookingService&lt;/code&gt; will be created and injected as the 3rd parameter to the controller's constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52da070175da41c37d04b4fef83dab5b3ba7b443" translate="yes" xml:space="preserve">
          <source>Now if you create a view named &lt;code&gt;about&lt;/code&gt; under the directory &lt;code&gt;@app/views/site/pages&lt;/code&gt;, you will be able to display this view by the following URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141817e057729b5c35d8a4442addf51bf587c09e" translate="yes" xml:space="preserve">
          <source>Now if you perform an access check, both of the &lt;code&gt;admin&lt;/code&gt; and &lt;code&gt;author&lt;/code&gt; roles will be checked by evaluating the rules associated with them. If the rule returns &lt;code&gt;true&lt;/code&gt;, it means the role applies to the current user. Based on the above rule implementation, this means if the &lt;code&gt;group&lt;/code&gt; value of a user is 1, the &lt;code&gt;admin&lt;/code&gt; role would apply to the user; and if the &lt;code&gt;group&lt;/code&gt; value is 2, the &lt;code&gt;author&lt;/code&gt; role would apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db7174017edf760a4ba09e76840464269e467d0" translate="yes" xml:space="preserve">
          <source>Now if you use the widget in a view with the following code, the &lt;code&gt;maxButtonCount&lt;/code&gt; property will be initialized as 5 instead of the default value 10 as defined in the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3173898b1a7cdf04b349549ed53abde413a0269e" translate="yes" xml:space="preserve">
          <source>Now in a controller action, write the code to wire up the model and the view to implement file uploading:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e211930c68d2d3b62572fb087847c04a2ef75cbb" translate="yes" xml:space="preserve">
          <source>Now in your PHP code, instead of accessing &lt;code&gt;$customer-&amp;gt;birthday&lt;/code&gt;, you would access &lt;code&gt;$customer-&amp;gt;birthdayText&lt;/code&gt;, which will allow you to input and display customer birthdays in the format of &lt;code&gt;'YYYY/MM/DD'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600864e493a4e85f8115be42a455737d15d478e8" translate="yes" xml:space="preserve">
          <source>Now the form that's in &lt;code&gt;update&lt;/code&gt; view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b2e02b5d050fee1036e7fa3a74e8cb30516941" translate="yes" xml:space="preserve">
          <source>Now we have got the following hierarchy:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c9c0099d41a348e38ae09b32fd71ec735c8734" translate="yes" xml:space="preserve">
          <source>Now whenever you are performing a query (e.g. &lt;code&gt;find()&lt;/code&gt;, &lt;code&gt;findOne()&lt;/code&gt;) or defining a relation (e.g. &lt;code&gt;hasOne()&lt;/code&gt;) with &lt;code&gt;Comment&lt;/code&gt;, you will be calling an instance of &lt;code&gt;CommentQuery&lt;/code&gt; instead of &lt;code&gt;ActiveQuery&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e5e7607515a4cfb9672123ff25df94d2ed3e74" translate="yes" xml:space="preserve">
          <source>Now you can place your adjusted translations to &lt;code&gt;@app/messages/&amp;lt;language&amp;gt;/yii.php&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e282343aca613bb5bc7d3f1cb00dfce498f7293d" translate="yes" xml:space="preserve">
          <source>Now you can use categories without configuring each one, which is similar to Yii 1.1 behavior. Messages for the category will be loaded from a file under the default translation &lt;code&gt;basePath&lt;/code&gt; that is &lt;code&gt;@app/messages&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ceaf6851107022a187959f60c6b58d61cfe3f0" translate="yes" xml:space="preserve">
          <source>Now you can use the installed extensions like they are part of your application. The following example shows how you can use the &lt;code&gt;yii\imagine\Image&lt;/code&gt; class provided by the &lt;code&gt;yiisoft/yii2-imagine&lt;/code&gt; extension:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81ce2d352ca59881098602fa883fc4b270619c2" translate="yes" xml:space="preserve">
          <source>Now you need to implement your own event handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf5acfa3794e1bfab6750eb2d182f043fba5d8f" translate="yes" xml:space="preserve">
          <source>Now, you can use the following syntax to run the command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6e344486cbb46c41844d7a5f7f51154cd0c616" translate="yes" xml:space="preserve">
          <source>Null Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f18dfc213ba0b5cfced600073e85e0f2f700ce" translate="yes" xml:space="preserve">
          <source>Null values are specially formatted. Instead of displaying an empty string, the formatter will convert it into a preset string which defaults to &lt;code&gt;(not set)&lt;/code&gt; translated into the current application language. You can configure the &lt;a href=&quot;yii-i18n-formatter#%24nullDisplay-detail&quot;&gt;nullDisplay&lt;/a&gt; property to customize this string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde21164d883da3a0557bb1018f538f5138a691a" translate="yes" xml:space="preserve">
          <source>Null when split is not required. Otherwise - built SQL condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125b94ca966ac6bf33a9021e39e17c0e1a2e1acb" translate="yes" xml:space="preserve">
          <source>Number of bytes printed or false on error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b70eb8c3ab7044a9714cc362625305bad0e8b7c" translate="yes" xml:space="preserve">
          <source>Number of bytes printed or false on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537e3e74acd5a0ee5a3ef515a40a6b3011705e81" translate="yes" xml:space="preserve">
          <source>Number of bytes to read. If given and is positive, the string returned will contain at most length characters beginning from start (depending on the length of file). If given and is negative, then that many characters will be omitted from the end of file (after the start position has been calculated when a start is negative).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbad7d8a5698feed3f14f7427e7900af4bb851b" translate="yes" xml:space="preserve">
          <source>Number of columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf323c25e79dccb277e20b386015144445dff70" translate="yes" xml:space="preserve">
          <source>Number of data elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce46effe234e7fb029ac051e047f5297eebc9188" translate="yes" xml:space="preserve">
          <source>Number of digits on the right of the decimal separator. This parameter is available since version 2.0.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4b817dc9c586bd357f7621e0f006c37e40f40f" translate="yes" xml:space="preserve">
          <source>Number of items in the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad708b90d121625f0bffe6700651110d85a870cb" translate="yes" xml:space="preserve">
          <source>Number of lines the cursor should be moved down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddebd1526f44433286335196546ccdc87ee35d82" translate="yes" xml:space="preserve">
          <source>Number of lines the cursor should be moved up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ddf5fffe24e33d0179ffac8555adf0b207cfb3" translate="yes" xml:space="preserve">
          <source>Number of lines to scroll down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479aa436aaf007860473ed1c246393d2fbd6b990" translate="yes" xml:space="preserve">
          <source>Number of lines to scroll up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca75152c59e860daab9e335942ef0c8ac6493a59" translate="yes" xml:space="preserve">
          <source>Number of log files used for rotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2c03a951f86e8451270e13514b20302ac25413" translate="yes" xml:space="preserve">
          <source>Number of log files used for rotation. Defaults to 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7e49686da496e117edf188105bcdb865d4ea3f" translate="yes" xml:space="preserve">
          <source>Number of messages that are successfully sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bfc45dfe2873865334b325c1f4a43896187628" translate="yes" xml:space="preserve">
          <source>Number of milliseconds that the validation should be delayed when the user types in the field and &lt;a href=&quot;yii-widgets-activefield#%24validateOnType-detail&quot;&gt;$validateOnType&lt;/a&gt; is set &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bf71e8ab0a3aecfd32529aa74f15096497825c" translate="yes" xml:space="preserve">
          <source>Number of milliseconds that the validation should be delayed when the user types in the field and &lt;a href=&quot;yii-widgets-activefield#%24validateOnType-detail&quot;&gt;$validateOnType&lt;/a&gt; is set &lt;code&gt;true&lt;/code&gt;. If not set, it will take the value of &lt;a href=&quot;yii-widgets-activeform#%24validationDelay-detail&quot;&gt;yii\widgets\ActiveForm::$validationDelay&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1828bd1f785fedb4c8bde2422df0010eab051e0c" translate="yes" xml:space="preserve">
          <source>Number of milliseconds that the validation should be delayed when the user types in the field and &lt;a href=&quot;yii-widgets-activeform#%24validateOnType-detail&quot;&gt;$validateOnType&lt;/a&gt; is set &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550890b9334a5f4dd4f3f5d0d44e523568f534f0" translate="yes" xml:space="preserve">
          <source>Number of milliseconds that the validation should be delayed when the user types in the field and &lt;a href=&quot;yii-widgets-activeform#%24validateOnType-detail&quot;&gt;$validateOnType&lt;/a&gt; is set &lt;code&gt;true&lt;/code&gt;. If &lt;a href=&quot;yii-widgets-activefield#%24validationDelay-detail&quot;&gt;yii\widgets\ActiveField::$validationDelay&lt;/a&gt; is set, its value will take precedence for that input field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df2b0389a7ae846cb1fea4f3af9ded4e3e25931" translate="yes" xml:space="preserve">
          <source>Number of pages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7585160dbc030371a285e96f5c5d34ef5ace6f" translate="yes" xml:space="preserve">
          <source>Number of records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cdf3463642a07c33d6c4667b7d6c927b15a9cf" translate="yes" xml:space="preserve">
          <source>Number of records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9c4bb85b3918a9c7de23ace7f27a4fc17abdf4" translate="yes" xml:space="preserve">
          <source>Number of records. The result may be a string depending on the underlying database engine and to support integer values higher than a 32bit PHP integer can handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44df88fa34573f2445ea70f6c23bef05fbf0a5c" translate="yes" xml:space="preserve">
          <source>Number of rows affected by the execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a939c4fda90d35e53af66ef5f11b2db4bd6ae25" translate="yes" xml:space="preserve">
          <source>Number of rows contained in the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4b1fb7670067c1c3eb54719153e9d7eb92235e" translate="yes" xml:space="preserve">
          <source>Number of rows the cursor should be moved down</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b79c3badeb7b6d055b950966986d5e5ecd4d54" translate="yes" xml:space="preserve">
          <source>Number of rows the cursor should be moved up</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e01e6578129bc6e2742be70741d20054ac39439" translate="yes" xml:space="preserve">
          <source>Number of seconds that table metadata can remain valid in cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0699164a861053fc90742f51d77c8bfee456f5" translate="yes" xml:space="preserve">
          <source>Number of seconds that table metadata can remain valid in cache. Use 0 to indicate that the cached data will never expire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127a8f3a3c442b1d43d7faa6fa7130d50b3a9dba" translate="yes" xml:space="preserve">
          <source>Number of seconds that the data can remain valid in cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b0f29bfdf0c2101414f78ed68bebbe4152bc15" translate="yes" xml:space="preserve">
          <source>Number of seconds that the data can remain valid in cache. Use 0 to indicate that the cached data will never expire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1ad42e4008e1d4765319b7f90c9f0bce66ab71" translate="yes" xml:space="preserve">
          <source>Number of seconds that the data can remain valid in cache. Use &lt;code&gt;0&lt;/code&gt; to indicate that the cached data will never expire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3d1c6dcf2968529c0e772a4736ed9951d1130c" translate="yes" xml:space="preserve">
          <source>Number of seconds that the user can remain in logged-in status, defaults to &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02387461bfeac1add3a0045e6c7414c18e67c36c" translate="yes" xml:space="preserve">
          <source>Number of seconds that the user can remain in logged-in status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e60062cd2c26859c216a0791b2e5728b8c3f42d5" translate="yes" xml:space="preserve">
          <source>Number of seconds that the user can remain in logged-in status. If 0, it means login till the user closes the browser or the session is manually destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4686fdde8eb3a4765ef1aef51d8ff667ddf417" translate="yes" xml:space="preserve">
          <source>Number of seconds that the user can remain in logged-in status. This parameter is used only when &lt;code&gt;$identity&lt;/code&gt; is not null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7e48a534bf4b565702f540963baa54f8761dd6" translate="yes" xml:space="preserve">
          <source>Number of spaces to use for indentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace3d3420a0ed1c89121d81a5756a99e7ea6c831" translate="yes" xml:space="preserve">
          <source>Number of steps the cursor should be moved backward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca595019f0b6d6f464980153ffaf1ecd2366d411" translate="yes" xml:space="preserve">
          <source>Number of steps the cursor should be moved forward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f4055616f579cc3e51946678b7c052746ac013" translate="yes" xml:space="preserve">
          <source>Number of the call stack element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8741028cc33473391d5c888c57e0c171f5c0ed46" translate="yes" xml:space="preserve">
          <source>Number of the column (1-indexed) or name of the column in the result set. If using the column name, be aware that the name should match the case of the column, as returned by the driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09618e20feaf6054ed32283ed076c2eb57535c67" translate="yes" xml:space="preserve">
          <source>Number of the item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7185d67ba8aac6fd5dec9fa5885d5dc1595631f9" translate="yes" xml:space="preserve">
          <source>Number of updated documents or whether operation was successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601e2a0ccdb6c14260b2d6ffacc93323101bec6f" translate="yes" xml:space="preserve">
          <source>Number of written bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b64183c8dc4cd490170f2e36cf35d605b026cb" translate="yes" xml:space="preserve">
          <source>Number on which call has happened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683179775946c0d46fb4b3a1fc6176b527cca253" translate="yes" xml:space="preserve">
          <source>NumberFormatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e81cdd4df3a17ccf5f187988999b87b5f1366b2" translate="yes" xml:space="preserve">
          <source>NumberValidator validates that the attribute value is a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642e32481f409217e2336d8deea15e021b048a23" translate="yes" xml:space="preserve">
          <source>OAuth access token URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669c4cfcb9ac099e616a7f632fb8a24dba8e4dda" translate="yes" xml:space="preserve">
          <source>OAuth access token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37cc5d5e7c263e44f93a57acbd6cab2e4e5de85d" translate="yes" xml:space="preserve">
          <source>OAuth client ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8856dea0c20548e2fe46460256996f2061c4b73" translate="yes" xml:space="preserve">
          <source>OAuth client secret.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ceced73c640a95a51e5cfab3cf99ea3f19b5d5" translate="yes" xml:space="preserve">
          <source>OAuth consumer key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f067eb9da4292a99fb5d9a0979f4c0c7f98db4" translate="yes" xml:space="preserve">
          <source>OAuth consumer secret.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1afb22fcde810904660fb3d650762156fffbb6" translate="yes" xml:space="preserve">
          <source>OAuth request token URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dd412f70b8755f58531edbdce6ad145dc75767" translate="yes" xml:space="preserve">
          <source>OAuth request token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025944fed2a6083f3bb2e0122833743a38434ed4" translate="yes" xml:space="preserve">
          <source>OAuth token returned with redirection back to client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8d2a1958f1ec04eeb0a4b977d4ab502d5f13de" translate="yes" xml:space="preserve">
          <source>OAuth token to be used for signature key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87575871f3444b635171ec9863dbd294ff215f6f" translate="yes" xml:space="preserve">
          <source>OAuth token to be used for signature, if not set &lt;a href=&quot;yii-authclient-baseoauth#%24accessToken-detail&quot;&gt;$accessToken&lt;/a&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4d4801722a7add5357b5c4015931b23cd18952" translate="yes" xml:space="preserve">
          <source>OAuth verifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db27bce9ec8e6f358bd903834822dbcaa91532f" translate="yes" xml:space="preserve">
          <source>OPTION_APPCONFIG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46985640bdeff0fb58585762cdf23b9af927cab4" translate="yes" xml:space="preserve">
          <source>OP_ALL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c482c46d7ca707cdf34f4dd646cfb15721a9b6" translate="yes" xml:space="preserve">
          <source>OP_CREATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87900755866f2e4d03a59139b1a1fea78948ad8" translate="yes" xml:space="preserve">
          <source>OP_DELETE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739dc0e377eee8e891167600605eadc8c0e9a765" translate="yes" xml:space="preserve">
          <source>OP_INSERT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60adcac66e2fdc79e484d802e776a653331b1198" translate="yes" xml:space="preserve">
          <source>OP_OVERWRITE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8fdd0afde3947532a6b050bab357b6554b9c3e" translate="yes" xml:space="preserve">
          <source>OP_SKIP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82498459da464cb2712a49cd45dad2e092dfd47" translate="yes" xml:space="preserve">
          <source>OP_UPDATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780c3ac1e010c8057d16e6d76041707248180e1f" translate="yes" xml:space="preserve">
          <source>OVERLINED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed3afd0bb0a8a21c6ba83ab1e69be5991fc69e1" translate="yes" xml:space="preserve">
          <source>Object configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ba3a7fbf48bf7bbbc37e787b02c9ee60f850ed" translate="yes" xml:space="preserve">
          <source>Object configuration via &lt;code&gt;$config&lt;/code&gt;. The configuration may overwrite the default values set within the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021916e9a5fa68aa8412da73cc2b1e2dd81d7a7f" translate="yes" xml:space="preserve">
          <source>Object creation timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed63bd203146ba5227af1dfbb66ef0241875320" translate="yes" xml:space="preserve">
          <source>Object is the base class that implements the &lt;em&gt;property&lt;/em&gt; feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37dcc3bc34af139d243a86cc24f334bbee56d6e" translate="yes" xml:space="preserve">
          <source>Object method calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e0c8eb147bd3931fd92774bcc427e8a39e37b3" translate="yes" xml:space="preserve">
          <source>Object of any class which matches &lt;a href=&quot;yii-db-queryinterface&quot;&gt;yii\db\QueryInterface&lt;/a&gt; can be used, so this dependency can be used not only with regular relational databases but with MongoDB, Redis and so on as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a0c77bdaf730cfcb8509af7d5abb526ebe2be7" translate="yes" xml:space="preserve">
          <source>Object of switching users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b011120602c3280513d0fd4aedd24ac65b874e94" translate="yes" xml:space="preserve">
          <source>Object that represents the removal of array value while performing &lt;a href=&quot;yii-helpers-basearrayhelper#merge()-detail&quot;&gt;yii\helpers\ArrayHelper::merge()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dc8ad88ca4897675dda21d0d17a62e5223cb16" translate="yes" xml:space="preserve">
          <source>Object that represents the replacement of array value while performing &lt;a href=&quot;yii-helpers-basearrayhelper#merge()-detail&quot;&gt;yii\helpers\ArrayHelper::merge()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c127897b0db5f6336e3ef39a4c4015298be5c15e" translate="yes" xml:space="preserve">
          <source>Object, which represents select query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9dc0a07f53bb9f86783bbf64381deff027d8ed" translate="yes" xml:space="preserve">
          <source>Obtains the metadata for the named index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d51c67fcdbc5df1d633c0787bbc1c940a4a6c4" translate="yes" xml:space="preserve">
          <source>Obtains the metadata for the named table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe3e46b979dcc9233cd8eb9e593cb4babfb4640" translate="yes" xml:space="preserve">
          <source>Obtains the schema information for the named index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9deb640e33a4bff62b9d785e1c7db2b1e49a65" translate="yes" xml:space="preserve">
          <source>Obtains the schema information for the named table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f190cde4e24da4750e129772879615f059f6cb" translate="yes" xml:space="preserve">
          <source>Of the lock to be acquired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9882808254638be583214cd08a93c0cef26d00" translate="yes" xml:space="preserve">
          <source>Of the lock to be acquired. Must be unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58d663165f5879c8c39662188ba4c881c5325e7" translate="yes" xml:space="preserve">
          <source>Of the lock to be released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6784e4428373fa6cbd2e6cbca10916932e32ac08" translate="yes" xml:space="preserve">
          <source>Of the lock to be released. This lock must already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67429962662cacbb864af310197305aef6ac21d0" translate="yes" xml:space="preserve">
          <source>Of the string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c5af3fa28509dc511d66e89b7e81c007e357a4" translate="yes" xml:space="preserve">
          <source>Of the string in the file. If null, it reads from the current position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f53e857645c6a804ae1165449ec1a12aa94956ec" translate="yes" xml:space="preserve">
          <source>Offers limited support for message formatting in case PHP intl extension is not installed. However it is highly recommended that you install &lt;a href=&quot;http://php.net/manual/en/book.intl.php&quot;&gt;PHP intl extension&lt;/a&gt; if you want to use MessageFormatter features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282d185de949c41fddca9dcb6dc207a160de7712" translate="yes" xml:space="preserve">
          <source>Offset in pixels that should be added when scrolling to the first error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e6229a58f5064948874b302c6d5cfe96d4951b" translate="yes" xml:space="preserve">
          <source>Often you need to check if an element is in an array or a set of elements is a subset of another. While PHP offers &lt;code&gt;in_array()&lt;/code&gt;, this does not support subsets or &lt;code&gt;\Traversable&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ca1650b790baae1f39bfb0d0f15070a055a84d" translate="yes" xml:space="preserve">
          <source>Often you need to convert an object or an array of objects into an array. The most common case is converting active record models in order to serve data arrays via REST API or use it otherwise. The following code could be used to do it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52d17b9e7c9e773b5e2f106d09f287541ec0c0b" translate="yes" xml:space="preserve">
          <source>Often you need to get a column of values from array of data rows or objects. Common example is getting a list of IDs.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
