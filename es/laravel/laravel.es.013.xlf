<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="452919a6b7740cb69b61eef8f7434feb7d80b6cb" translate="yes" xml:space="preserve">
          <source>AnonymousResourceCollection::__construct()</source>
          <target state="translated">AnonymousResourceCollection::__construct()</target>
        </trans-unit>
        <trans-unit id="3043814b43b771ba94b5494ba3cd08c6a6414e41" translate="yes" xml:space="preserve">
          <source>Another common use-case for route groups is assigning the same PHP namespace to a group of controllers using the &lt;code&gt;namespace&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34100ad6787087d9d2ebda2878141a2222f9cbff" translate="yes" xml:space="preserve">
          <source>Another method of registering custom validation rules is using the &lt;code&gt;extend&lt;/code&gt; method on the &lt;code&gt;Validator&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. Let's use this method within a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt; to register a custom validation rule:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e9eb362caf103a397931d5acfd58fa38162e28" translate="yes" xml:space="preserve">
          <source>Another solution provided by Laravel is to set a universal recipient of all emails sent by the framework. This way, all the emails generated by your application will be sent to a specific address, instead of the address actually specified when sending the message. This can be done via the &lt;code&gt;to&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0256f47c3bc705a7b265538846fe479eee8a6eb5" translate="yes" xml:space="preserve">
          <source>Any HTML forms pointing to &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt; routes that are defined in the &lt;code&gt;web&lt;/code&gt; routes file should include a CSRF token field. Otherwise, the request will be rejected. You can read more about CSRF protection in the &lt;a href=&quot;csrf&quot;&gt;CSRF documentation&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5a4da5622c1732fcff5c882e0cb9a696c690e6" translate="yes" xml:space="preserve">
          <source>Any pivot table restrictions for where clauses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371767eae46f99529d994b5bf74c8b28bbcd823b" translate="yes" xml:space="preserve">
          <source>Any pivot table restrictions for whereIn clauses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6691fac29b0a653acfe9cde9c1902d0814d5452" translate="yes" xml:space="preserve">
          <source>Any variable in your &lt;code&gt;.env&lt;/code&gt; file can be overridden by external environment variables such as server-level or system-level environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79efa233f2b65028e906fd348abeea26b3b40b83" translate="yes" xml:space="preserve">
          <source>Anytime you define a HTML form in your application, you should include a hidden CSRF token field in the form so that &lt;a href=&quot;csrf&quot;&gt;the CSRF protection&lt;/a&gt; middleware can validate the request. You may use the &lt;code&gt;@csrf&lt;/code&gt; Blade directive to generate the token field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3772f6a049306114e66d0d2dda4cbe29d1f21488" translate="yes" xml:space="preserve">
          <source>Anytime you define a HTML form in your application, you should include a hidden CSRF token field in the form so that the CSRF protection middleware can validate the request. You may use the &lt;code&gt;@csrf&lt;/code&gt; Blade directive to generate the token field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5958b0f53cb499388dd9ee04a106a30b02c5d1" translate="yes" xml:space="preserve">
          <source>Apache</source>
          <target state="translated">Apache</target>
        </trans-unit>
        <trans-unit id="9ce24747cbde6c905c67b527a1e482c823523f4e" translate="yes" xml:space="preserve">
          <source>Apache (Optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40422147eea538f5de7828de88a5504f9541850d" translate="yes" xml:space="preserve">
          <source>ApcStore</source>
          <target state="translated">ApcStore</target>
        </trans-unit>
        <trans-unit id="70c0b0155b92cb680e9763013900085e50d7de1c" translate="yes" xml:space="preserve">
          <source>ApcStore (Cache)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d570b724585b5bc6b0b88e2c90123ee66a53f2" translate="yes" xml:space="preserve">
          <source>ApcStore::__construct()</source>
          <target state="translated">ApcStore::__construct()</target>
        </trans-unit>
        <trans-unit id="42c302976154a82e0ef8ac5b0251545a298deef8" translate="yes" xml:space="preserve">
          <source>ApcStore::decrement()</source>
          <target state="translated">ApcStore::decrement()</target>
        </trans-unit>
        <trans-unit id="4ba9aa08b35de5c267914fb4ba159a7db3cea785" translate="yes" xml:space="preserve">
          <source>ApcStore::flush()</source>
          <target state="translated">ApcStore::flush()</target>
        </trans-unit>
        <trans-unit id="44907b563ad986beae44c56bfad44b0419f293c2" translate="yes" xml:space="preserve">
          <source>ApcStore::forever()</source>
          <target state="translated">ApcStore::forever()</target>
        </trans-unit>
        <trans-unit id="68a3c957dc357e2cba4c6e94ca8ce5f4b7e3c2bb" translate="yes" xml:space="preserve">
          <source>ApcStore::forget()</source>
          <target state="translated">ApcStore::forget()</target>
        </trans-unit>
        <trans-unit id="861349f7bc4bbf6a6ef8ca8349b5f7de0c1202ce" translate="yes" xml:space="preserve">
          <source>ApcStore::get()</source>
          <target state="translated">ApcStore::get()</target>
        </trans-unit>
        <trans-unit id="007adb1f5fa2a7d4067856967b0c74b936938642" translate="yes" xml:space="preserve">
          <source>ApcStore::getPrefix()</source>
          <target state="translated">ApcStore::getPrefix()</target>
        </trans-unit>
        <trans-unit id="9995bfec6680db0f0aa78b6087bd998673548f67" translate="yes" xml:space="preserve">
          <source>ApcStore::increment()</source>
          <target state="translated">ApcStore::increment()</target>
        </trans-unit>
        <trans-unit id="52d9dd15175c142e06f40c844cd3d373a1df12de" translate="yes" xml:space="preserve">
          <source>ApcStore::put()</source>
          <target state="translated">ApcStore::put()</target>
        </trans-unit>
        <trans-unit id="880069574b6d6ab83fd30d51e6a697664f7b85ff" translate="yes" xml:space="preserve">
          <source>ApcWrapper</source>
          <target state="translated">ApcWrapper</target>
        </trans-unit>
        <trans-unit id="ff246000b49290c8cf5b0de1cf5198d7b32d26f6" translate="yes" xml:space="preserve">
          <source>ApcWrapper (Cache)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44b6a46bdc3f00bd93f36a2f56973c2adaa148b" translate="yes" xml:space="preserve">
          <source>ApcWrapper::__construct()</source>
          <target state="translated">ApcWrapper::__construct()</target>
        </trans-unit>
        <trans-unit id="d1ce0063e740088b76e3dcb3b41d536f2ba21629" translate="yes" xml:space="preserve">
          <source>ApcWrapper::decrement()</source>
          <target state="translated">ApcWrapper::decrement()</target>
        </trans-unit>
        <trans-unit id="a7d63bd480d079322b2930a1a7112cda0ede2002" translate="yes" xml:space="preserve">
          <source>ApcWrapper::delete()</source>
          <target state="translated">ApcWrapper::delete()</target>
        </trans-unit>
        <trans-unit id="2f3df5be0f57088a4368d6c5fc8fdf36aee4d0dd" translate="yes" xml:space="preserve">
          <source>ApcWrapper::flush()</source>
          <target state="translated">ApcWrapper::flush()</target>
        </trans-unit>
        <trans-unit id="56a39008bbfec6eeac3959384e1bc2b6d4aec8e4" translate="yes" xml:space="preserve">
          <source>ApcWrapper::get()</source>
          <target state="translated">ApcWrapper::get()</target>
        </trans-unit>
        <trans-unit id="cd812129ad062d8b0e5134f11b72b494d3478c85" translate="yes" xml:space="preserve">
          <source>ApcWrapper::increment()</source>
          <target state="translated">ApcWrapper::increment()</target>
        </trans-unit>
        <trans-unit id="9c3e1ad5d09d2809a0112cb5c59e3c7ac2f05674" translate="yes" xml:space="preserve">
          <source>ApcWrapper::put()</source>
          <target state="translated">ApcWrapper::put()</target>
        </trans-unit>
        <trans-unit id="fc4a695f02a8a53a129dcb9ace91e91ee1e7feb9" translate="yes" xml:space="preserve">
          <source>App</source>
          <target state="translated">App</target>
        </trans-unit>
        <trans-unit id="9b32e15377d7979708f79e1b7c9a50e3c5aac344" translate="yes" xml:space="preserve">
          <source>App (Support\Facades)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e4d2eba68a299a68fa04335471d6994e25a04b" translate="yes" xml:space="preserve">
          <source>App::getFacadeAccessor()</source>
          <target state="translated">App::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="a8d92f33064f44b976d2ad0e7e46d44b00f180a4" translate="yes" xml:space="preserve">
          <source>AppNameCommand</source>
          <target state="translated">AppNameCommand</target>
        </trans-unit>
        <trans-unit id="505c2175d14bc3e6fc03d8150224a1e7b12cf5f3" translate="yes" xml:space="preserve">
          <source>AppNameCommand (Foundation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b538b0429b9a87e6b7c272e781de70b7bd7b0015" translate="yes" xml:space="preserve">
          <source>AppNameCommand::__construct()</source>
          <target state="translated">AppNameCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="b6b427c9d6a2d5a3c2f2b9afeea3f41cf50bb2b6" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getArguments()</source>
          <target state="translated">AppNameCommand::getArguments()</target>
        </trans-unit>
        <trans-unit id="cf7be8d01ec1d191837128c0119ae613f8b699ba" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getBootstrapPath()</source>
          <target state="translated">AppNameCommand::getBootstrapPath()</target>
        </trans-unit>
        <trans-unit id="6c4f36a0913c378f4fd477a91845374d8430843a" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getComposerPath()</source>
          <target state="translated">AppNameCommand::getComposerPath()</target>
        </trans-unit>
        <trans-unit id="b028ece2bf2bbc75788ad3cbd23e814c683891c4" translate="yes" xml:space="preserve">
          <source>AppNameCommand::getConfigPath()</source>
          <target state="translated">AppNameCommand::getConfigPath()</target>
        </trans-unit>
        <trans-unit id="6a997417ce309e45896db746e2f9fb4f8bb3b497" translate="yes" xml:space="preserve">
          <source>AppNameCommand::handle()</source>
          <target state="translated">AppNameCommand::handle()</target>
        </trans-unit>
        <trans-unit id="ef6932631acaf225b24b5ef06ab90f7cf41069a6" translate="yes" xml:space="preserve">
          <source>AppNameCommand::replaceIn()</source>
          <target state="translated">AppNameCommand::replaceIn()</target>
        </trans-unit>
        <trans-unit id="c09fcfb250e568044b111bc1e90a0fe64a00109b" translate="yes" xml:space="preserve">
          <source>AppNameCommand::replaceNamespace()</source>
          <target state="translated">AppNameCommand::replaceNamespace()</target>
        </trans-unit>
        <trans-unit id="be6026a632b2bd094789daca349c87a0dfbc744a" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setAppConfigNamespaces()</source>
          <target state="translated">AppNameCommand::setAppConfigNamespaces()</target>
        </trans-unit>
        <trans-unit id="11b889b08581a7d6963e507d77833fff23ec7ddb" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setAppDirectoryNamespace()</source>
          <target state="translated">AppNameCommand::setAppDirectoryNamespace()</target>
        </trans-unit>
        <trans-unit id="ff0a6ddcbf466141bca3dfe2df8dd0c7ba48f491" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setAuthConfigNamespace()</source>
          <target state="translated">AppNameCommand::setAuthConfigNamespace()</target>
        </trans-unit>
        <trans-unit id="d905a309f14ac295628e0ff949ddb6642cd956b7" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setBootstrapNamespaces()</source>
          <target state="translated">AppNameCommand::setBootstrapNamespaces()</target>
        </trans-unit>
        <trans-unit id="7d8333a2a85745d8e902b41844f01f384808004f" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setComposerNamespace()</source>
          <target state="translated">AppNameCommand::setComposerNamespace()</target>
        </trans-unit>
        <trans-unit id="e8fd4cfdd1d70b1ba60c1635d5c461d8bf0a6535" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setConfigNamespaces()</source>
          <target state="translated">AppNameCommand::setConfigNamespaces()</target>
        </trans-unit>
        <trans-unit id="cd9d5c2fe982adc64701da0b65c4207d71e4a507" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setDatabaseFactoryNamespaces()</source>
          <target state="translated">AppNameCommand::setDatabaseFactoryNamespaces()</target>
        </trans-unit>
        <trans-unit id="dd36badaeb4736602f9248bf648c57f28ceb433f" translate="yes" xml:space="preserve">
          <source>AppNameCommand::setServicesConfigNamespace()</source>
          <target state="translated">AppNameCommand::setServicesConfigNamespace()</target>
        </trans-unit>
        <trans-unit id="e838e1ce88b687a540ac6fbefee8c29c79ca5dea" translate="yes" xml:space="preserve">
          <source>Append attributes to query when building a query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec00999fd029965c856b35d10fffc8041cf3c06" translate="yes" xml:space="preserve">
          <source>Append content to a given push section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3db6a3139d0ec379007ab8b2022f6584d80e9f" translate="yes" xml:space="preserve">
          <source>Append content to a given section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304cfb2668cf2ad2eea4c3a890bdf1b89dda6551" translate="yes" xml:space="preserve">
          <source>Append the character set specifications to a command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0103e26e4825bb9a0e78fdb1450cd809127d740a" translate="yes" xml:space="preserve">
          <source>Append the engine specifications to a command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c545fc7471b8d582e1fe2975e25dca81758250" translate="yes" xml:space="preserve">
          <source>Append the output of the command to a given location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b457acbd6af52727ecf328bf347913a8b3a5c32" translate="yes" xml:space="preserve">
          <source>Append to a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc64ec59878ea659be3149b7f768601efb91dc6" translate="yes" xml:space="preserve">
          <source>Appending At Run Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3084410c8a83489658bdef410c61d45a8058e4" translate="yes" xml:space="preserve">
          <source>Appending To Pagination Links</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f13f9a56364da30970ae70da450518e3902fe67" translate="yes" xml:space="preserve">
          <source>Appending Values To JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c459dfc68b4d3263e82b29c3e9abb8e00cbc6f2a" translate="yes" xml:space="preserve">
          <source>Applicable to Redis jobs which store attempts in their payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="27960a8519bc91554c2ff9b2afcbb2e866f92958" translate="yes" xml:space="preserve">
          <source>Application (Console)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0255b2098cf007fa6f05ed7f787db5aa80eeaaa" translate="yes" xml:space="preserve">
          <source>Application (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf8b2f684ab8e87fe57e2336417764fe2d7bccb" translate="yes" xml:space="preserve">
          <source>Application (Foundation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74f22f5f56240fa5153cc370746f4c4bb4e0caa" translate="yes" xml:space="preserve">
          <source>Application Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095681f98081ca0c110cf106b634943d02d2ab25" translate="yes" xml:space="preserve">
          <source>Application::__construct()</source>
          <target state="translated">Application::__construct()</target>
        </trans-unit>
        <trans-unit id="1d329038d1a22aed930d71f625ea103235a98195" translate="yes" xml:space="preserve">
          <source>Application::abort()</source>
          <target state="translated">Application::abort()</target>
        </trans-unit>
        <trans-unit id="d0142dd198300930e52148f9c9140fecbe47c910" translate="yes" xml:space="preserve">
          <source>Application::add()</source>
          <target state="translated">Application::add()</target>
        </trans-unit>
        <trans-unit id="2c8f8dc75d37159ce3a6398daa9455381b40b2da" translate="yes" xml:space="preserve">
          <source>Application::addDeferredServices()</source>
          <target state="translated">Application::addDeferredServices()</target>
        </trans-unit>
        <trans-unit id="e249c705d06ccbb290da674061d3221c9ada2238" translate="yes" xml:space="preserve">
          <source>Application::addToParent()</source>
          <target state="translated">Application::addToParent()</target>
        </trans-unit>
        <trans-unit id="1d8c32e31de67dc02c2aff69b642e2f3394c70d8" translate="yes" xml:space="preserve">
          <source>Application::afterBootstrapping()</source>
          <target state="translated">Application::afterBootstrapping()</target>
        </trans-unit>
        <trans-unit id="be0c3f6bb6b1bfcf188f82f9471a17e02d36ee1c" translate="yes" xml:space="preserve">
          <source>Application::afterLoadingEnvironment()</source>
          <target state="translated">Application::afterLoadingEnvironment()</target>
        </trans-unit>
        <trans-unit id="9b4176e5380beae0b1146f91b216ccd3840e5bd4" translate="yes" xml:space="preserve">
          <source>Application::artisanBinary()</source>
          <target state="translated">Application::artisanBinary()</target>
        </trans-unit>
        <trans-unit id="fe92d70413f74b72d96cd1db765cee0aa341d127" translate="yes" xml:space="preserve">
          <source>Application::basePath()</source>
          <target state="translated">Application::basePath()</target>
        </trans-unit>
        <trans-unit id="eb970cda54a2817fa709838b1731d99062dc8d34" translate="yes" xml:space="preserve">
          <source>Application::beforeBootstrapping()</source>
          <target state="translated">Application::beforeBootstrapping()</target>
        </trans-unit>
        <trans-unit id="73dab88e36a72abac78a447b96778478a39c9665" translate="yes" xml:space="preserve">
          <source>Application::bindPathsInContainer()</source>
          <target state="translated">Application::bindPathsInContainer()</target>
        </trans-unit>
        <trans-unit id="e4ece6a8fba24f0a81f6ccc374f498921f72b002" translate="yes" xml:space="preserve">
          <source>Application::boot()</source>
          <target state="translated">Application::boot()</target>
        </trans-unit>
        <trans-unit id="633571874c1967b54a099103ad4fd15ff9ea17bb" translate="yes" xml:space="preserve">
          <source>Application::bootProvider()</source>
          <target state="translated">Application::bootProvider()</target>
        </trans-unit>
        <trans-unit id="88401aa259ed833720455f69ae8d975376ae9ff0" translate="yes" xml:space="preserve">
          <source>Application::booted()</source>
          <target state="translated">Application::booted()</target>
        </trans-unit>
        <trans-unit id="46755768e2979f548ba83e1bf3a681b6c7edc4e8" translate="yes" xml:space="preserve">
          <source>Application::booting()</source>
          <target state="translated">Application::booting()</target>
        </trans-unit>
        <trans-unit id="6316baed99008f21600f5bc26445e5a809c57408" translate="yes" xml:space="preserve">
          <source>Application::bootstrap()</source>
          <target state="translated">Application::bootstrap()</target>
        </trans-unit>
        <trans-unit id="594d3003617b0a20fea89e34c93ad53a658f8bc6" translate="yes" xml:space="preserve">
          <source>Application::bootstrapPath()</source>
          <target state="translated">Application::bootstrapPath()</target>
        </trans-unit>
        <trans-unit id="51b29301d7883189cbf7c5c4a9303b9c17463e5b" translate="yes" xml:space="preserve">
          <source>Application::bootstrapWith()</source>
          <target state="translated">Application::bootstrapWith()</target>
        </trans-unit>
        <trans-unit id="c60924d01ae60fca6a08aab7c589a7240fe4efb9" translate="yes" xml:space="preserve">
          <source>Application::bound()</source>
          <target state="translated">Application::bound()</target>
        </trans-unit>
        <trans-unit id="dd65f41cc10fa1399442a2af72cefc9296686d0d" translate="yes" xml:space="preserve">
          <source>Application::call()</source>
          <target state="translated">Application::call()</target>
        </trans-unit>
        <trans-unit id="35d8274161ebe91b88c2519d6002a9786acd9d79" translate="yes" xml:space="preserve">
          <source>Application::configPath()</source>
          <target state="translated">Application::configPath()</target>
        </trans-unit>
        <trans-unit id="6c2c949d0e5d0a0ad6f798928720ec6bcc58f099" translate="yes" xml:space="preserve">
          <source>Application::configurationIsCached()</source>
          <target state="translated">Application::configurationIsCached()</target>
        </trans-unit>
        <trans-unit id="2e0349edd86ca6eedcb5a3e1b27a8e32d1da387d" translate="yes" xml:space="preserve">
          <source>Application::databasePath()</source>
          <target state="translated">Application::databasePath()</target>
        </trans-unit>
        <trans-unit id="07bb6284eac9b08952e68e08eaabf55d1d36a7fd" translate="yes" xml:space="preserve">
          <source>Application::detectEnvironment()</source>
          <target state="translated">Application::detectEnvironment()</target>
        </trans-unit>
        <trans-unit id="6c25ca9511522a470db2ac6efc99429cb3d4729f" translate="yes" xml:space="preserve">
          <source>Application::environment()</source>
          <target state="translated">Application::environment()</target>
        </trans-unit>
        <trans-unit id="d27fc30f292f95f86821fecc2473e9cf278162ec" translate="yes" xml:space="preserve">
          <source>Application::environmentFile()</source>
          <target state="translated">Application::environmentFile()</target>
        </trans-unit>
        <trans-unit id="e39fb0d46b95bd7528d120e5f4dcfe57a9d76794" translate="yes" xml:space="preserve">
          <source>Application::environmentFilePath()</source>
          <target state="translated">Application::environmentFilePath()</target>
        </trans-unit>
        <trans-unit id="d7955a6d6114219ba3158a96faf890dd804a2c29" translate="yes" xml:space="preserve">
          <source>Application::environmentPath()</source>
          <target state="translated">Application::environmentPath()</target>
        </trans-unit>
        <trans-unit id="c1f5e77de667143bd8f38ea06d6c4869b883c489" translate="yes" xml:space="preserve">
          <source>Application::fireAppCallbacks()</source>
          <target state="translated">Application::fireAppCallbacks()</target>
        </trans-unit>
        <trans-unit id="77706337f711cbfb7e0bfc135c7f410b084c4932" translate="yes" xml:space="preserve">
          <source>Application::flush()</source>
          <target state="translated">Application::flush()</target>
        </trans-unit>
        <trans-unit id="b876eeea243cfebd466cc40c2880d6097fc417c1" translate="yes" xml:space="preserve">
          <source>Application::forgetBootstrappers()</source>
          <target state="translated">Application::forgetBootstrappers()</target>
        </trans-unit>
        <trans-unit id="a81fd3044bfd0deed0b13cfbe5e790607ce5bda2" translate="yes" xml:space="preserve">
          <source>Application::formatCommandString()</source>
          <target state="translated">Application::formatCommandString()</target>
        </trans-unit>
        <trans-unit id="34fddd5a5bd5629a667aa81fd8a7496cfafd3081" translate="yes" xml:space="preserve">
          <source>Application::getCachedConfigPath()</source>
          <target state="translated">Application::getCachedConfigPath()</target>
        </trans-unit>
        <trans-unit id="ab9609c408c958ba20c1bec05a2eff714390a340" translate="yes" xml:space="preserve">
          <source>Application::getCachedPackagesPath()</source>
          <target state="translated">Application::getCachedPackagesPath()</target>
        </trans-unit>
        <trans-unit id="5b93fe34fa700ba3a61d907839f12e932369fd1e" translate="yes" xml:space="preserve">
          <source>Application::getCachedRoutesPath()</source>
          <target state="translated">Application::getCachedRoutesPath()</target>
        </trans-unit>
        <trans-unit id="32eb4973580d045676d6dc83eaa029861aaffe16" translate="yes" xml:space="preserve">
          <source>Application::getCachedServicesPath()</source>
          <target state="translated">Application::getCachedServicesPath()</target>
        </trans-unit>
        <trans-unit id="bf9f4cb090ce4f69537a283c27d73273fa590164" translate="yes" xml:space="preserve">
          <source>Application::getDefaultInputDefinition()</source>
          <target state="translated">Application::getDefaultInputDefinition()</target>
        </trans-unit>
        <trans-unit id="0b09ea0bf5f865c34104d685b41d1d1e34813efd" translate="yes" xml:space="preserve">
          <source>Application::getDeferredServices()</source>
          <target state="translated">Application::getDeferredServices()</target>
        </trans-unit>
        <trans-unit id="0825cb5b04f3297cfd346b021a9214b0a3f8022e" translate="yes" xml:space="preserve">
          <source>Application::getEnvironmentOption()</source>
          <target state="translated">Application::getEnvironmentOption()</target>
        </trans-unit>
        <trans-unit id="a95297f28c23189997b6fd07b21d9af6c38d9cb3" translate="yes" xml:space="preserve">
          <source>Application::getLaravel()</source>
          <target state="translated">Application::getLaravel()</target>
        </trans-unit>
        <trans-unit id="a1b529fc875e73590599bd9a1c31a5eb5534ad2d" translate="yes" xml:space="preserve">
          <source>Application::getLoadedProviders()</source>
          <target state="translated">Application::getLoadedProviders()</target>
        </trans-unit>
        <trans-unit id="b6a2929afc83a99cf5c422784d8b8be549cd3904" translate="yes" xml:space="preserve">
          <source>Application::getLocale()</source>
          <target state="translated">Application::getLocale()</target>
        </trans-unit>
        <trans-unit id="1e3491ea726d5ffc26dc6d9795985985efc0765a" translate="yes" xml:space="preserve">
          <source>Application::getNamespace()</source>
          <target state="translated">Application::getNamespace()</target>
        </trans-unit>
        <trans-unit id="219e102dd18abc71d12bdfa7c960fcbf4bcca2c5" translate="yes" xml:space="preserve">
          <source>Application::getProvider()</source>
          <target state="translated">Application::getProvider()</target>
        </trans-unit>
        <trans-unit id="c241699ad44d21302612c66c181a5cfe0efe2e8b" translate="yes" xml:space="preserve">
          <source>Application::getProviders()</source>
          <target state="translated">Application::getProviders()</target>
        </trans-unit>
        <trans-unit id="f39d08f8ae9cfae7622815922c82694df6f47ed6" translate="yes" xml:space="preserve">
          <source>Application::handle()</source>
          <target state="translated">Application::handle()</target>
        </trans-unit>
        <trans-unit id="d47cc17a75c48e36c8de2f4f63556c00b053f89f" translate="yes" xml:space="preserve">
          <source>Application::hasBeenBootstrapped()</source>
          <target state="translated">Application::hasBeenBootstrapped()</target>
        </trans-unit>
        <trans-unit id="e44fc49c97af232ce9b482ad1e2033a82d05a1a6" translate="yes" xml:space="preserve">
          <source>Application::isBooted()</source>
          <target state="translated">Application::isBooted()</target>
        </trans-unit>
        <trans-unit id="4b39151dc9de46999b9dd8bfa6313a862fde767e" translate="yes" xml:space="preserve">
          <source>Application::isDeferredService()</source>
          <target state="translated">Application::isDeferredService()</target>
        </trans-unit>
        <trans-unit id="75521a381036e5ae3e53509c7c3259fc81abcb84" translate="yes" xml:space="preserve">
          <source>Application::isDownForMaintenance()</source>
          <target state="translated">Application::isDownForMaintenance()</target>
        </trans-unit>
        <trans-unit id="6579454299d3edcdb0f23c80bb5c3346c06771c7" translate="yes" xml:space="preserve">
          <source>Application::isLocal()</source>
          <target state="translated">Application::isLocal()</target>
        </trans-unit>
        <trans-unit id="cb4c79f797ce297ad9b446b1076c1a6e76a3e352" translate="yes" xml:space="preserve">
          <source>Application::isLocale()</source>
          <target state="translated">Application::isLocale()</target>
        </trans-unit>
        <trans-unit id="126f6812f4ca5f79d0ad20406a35dfd100ee04cf" translate="yes" xml:space="preserve">
          <source>Application::langPath()</source>
          <target state="translated">Application::langPath()</target>
        </trans-unit>
        <trans-unit id="1f03cebe6aaefee3979904b54ad88aa2eec8a995" translate="yes" xml:space="preserve">
          <source>Application::loadDeferredProvider()</source>
          <target state="translated">Application::loadDeferredProvider()</target>
        </trans-unit>
        <trans-unit id="f34fd3a71595a893a3d79f9e7fd50c8ba1ca3b53" translate="yes" xml:space="preserve">
          <source>Application::loadDeferredProviders()</source>
          <target state="translated">Application::loadDeferredProviders()</target>
        </trans-unit>
        <trans-unit id="c85b4415a4f2923f988e35f231a2316b5c68522d" translate="yes" xml:space="preserve">
          <source>Application::loadEnvironmentFrom()</source>
          <target state="translated">Application::loadEnvironmentFrom()</target>
        </trans-unit>
        <trans-unit id="a94108b1b7d7e917be52baff153ec4e625b9c37c" translate="yes" xml:space="preserve">
          <source>Application::make()</source>
          <target state="translated">Application::make()</target>
        </trans-unit>
        <trans-unit id="4871859966da9836e82626e451d80a3b883cf6da" translate="yes" xml:space="preserve">
          <source>Application::markAsRegistered()</source>
          <target state="translated">Application::markAsRegistered()</target>
        </trans-unit>
        <trans-unit id="d8c287056b7fe54a7922f35a7f82e5c7ced1f59c" translate="yes" xml:space="preserve">
          <source>Application::output()</source>
          <target state="translated">Application::output()</target>
        </trans-unit>
        <trans-unit id="5e302c343e495daf1648b913b2776d2340de4fbd" translate="yes" xml:space="preserve">
          <source>Application::path()</source>
          <target state="translated">Application::path()</target>
        </trans-unit>
        <trans-unit id="460bf9b5e80f9f32f42b1690c825e2df4fc0e7bc" translate="yes" xml:space="preserve">
          <source>Application::phpBinary()</source>
          <target state="translated">Application::phpBinary()</target>
        </trans-unit>
        <trans-unit id="0d54de335f463c464b34582497f34676a942a296" translate="yes" xml:space="preserve">
          <source>Application::provideFacades()</source>
          <target state="translated">Application::provideFacades()</target>
        </trans-unit>
        <trans-unit id="46b7487742e8580b1cc29cee54afadd5c156fb73" translate="yes" xml:space="preserve">
          <source>Application::publicPath()</source>
          <target state="translated">Application::publicPath()</target>
        </trans-unit>
        <trans-unit id="43cd13c252829de9f23709311277d4742b1bbfe7" translate="yes" xml:space="preserve">
          <source>Application::register()</source>
          <target state="translated">Application::register()</target>
        </trans-unit>
        <trans-unit id="e6dd38f182ac9c937048919fc4d898aca201ce6c" translate="yes" xml:space="preserve">
          <source>Application::registerBaseBindings()</source>
          <target state="translated">Application::registerBaseBindings()</target>
        </trans-unit>
        <trans-unit id="e5cc60f619ccf56ea8c7b9a03c53a9b99307a143" translate="yes" xml:space="preserve">
          <source>Application::registerBaseServiceProviders()</source>
          <target state="translated">Application::registerBaseServiceProviders()</target>
        </trans-unit>
        <trans-unit id="b8f4217b602d90e32f18329775bf0b7e24a9722d" translate="yes" xml:space="preserve">
          <source>Application::registerConfiguredProviders()</source>
          <target state="translated">Application::registerConfiguredProviders()</target>
        </trans-unit>
        <trans-unit id="41900c19d1708629889e3199b08aefe67fc53680" translate="yes" xml:space="preserve">
          <source>Application::registerCoreContainerAliases()</source>
          <target state="translated">Application::registerCoreContainerAliases()</target>
        </trans-unit>
        <trans-unit id="67556b8d69315e1df9fa60412e0e0c876197220a" translate="yes" xml:space="preserve">
          <source>Application::registerDeferredProvider()</source>
          <target state="translated">Application::registerDeferredProvider()</target>
        </trans-unit>
        <trans-unit id="1305355f22be05293c92046282b16844f7a22f43" translate="yes" xml:space="preserve">
          <source>Application::resolve()</source>
          <target state="translated">Application::resolve()</target>
        </trans-unit>
        <trans-unit id="2bcfe044fd1a84dddd7aecb8c245f7616ee035fb" translate="yes" xml:space="preserve">
          <source>Application::resolveCommands()</source>
          <target state="translated">Application::resolveCommands()</target>
        </trans-unit>
        <trans-unit id="7b7d8311c5aa4902dbfc84eeefd57cd68d8443c2" translate="yes" xml:space="preserve">
          <source>Application::resolveProvider()</source>
          <target state="translated">Application::resolveProvider()</target>
        </trans-unit>
        <trans-unit id="652a7676c5a3d37cdeca67d33c0c943d21fca241" translate="yes" xml:space="preserve">
          <source>Application::resourcePath()</source>
          <target state="translated">Application::resourcePath()</target>
        </trans-unit>
        <trans-unit id="b69b298fa90f778952dbcf19f3b9881e636b503f" translate="yes" xml:space="preserve">
          <source>Application::routesAreCached()</source>
          <target state="translated">Application::routesAreCached()</target>
        </trans-unit>
        <trans-unit id="c800fe80f1e1cdf33e21129cde8ab1fee4e13917" translate="yes" xml:space="preserve">
          <source>Application::run()</source>
          <target state="translated">Application::run()</target>
        </trans-unit>
        <trans-unit id="8dced0bcf40b3a237d0a6c9ee75bec583e5a3938" translate="yes" xml:space="preserve">
          <source>Application::runningInConsole()</source>
          <target state="translated">Application::runningInConsole()</target>
        </trans-unit>
        <trans-unit id="5d5c8ae3112497af0bc67f2b20ad68732e6c5b58" translate="yes" xml:space="preserve">
          <source>Application::runningUnitTests()</source>
          <target state="translated">Application::runningUnitTests()</target>
        </trans-unit>
        <trans-unit id="c76241a924a1c5ba23e4d9e24dd4dc92872742cd" translate="yes" xml:space="preserve">
          <source>Application::setBasePath()</source>
          <target state="translated">Application::setBasePath()</target>
        </trans-unit>
        <trans-unit id="b3581d4818d7722bc922e5306c828562582f737b" translate="yes" xml:space="preserve">
          <source>Application::setDeferredServices()</source>
          <target state="translated">Application::setDeferredServices()</target>
        </trans-unit>
        <trans-unit id="603adc5db1468affe121fe27bb0288fa31804dea" translate="yes" xml:space="preserve">
          <source>Application::setLocale()</source>
          <target state="translated">Application::setLocale()</target>
        </trans-unit>
        <trans-unit id="15bde55ee6cd64d41e89f0caf3f0cd67256b5ed2" translate="yes" xml:space="preserve">
          <source>Application::shouldSkipMiddleware()</source>
          <target state="translated">Application::shouldSkipMiddleware()</target>
        </trans-unit>
        <trans-unit id="eec1e7d06265cb406ce8e118d297f0cee0f35e68" translate="yes" xml:space="preserve">
          <source>Application::starting()</source>
          <target state="translated">Application::starting()</target>
        </trans-unit>
        <trans-unit id="367686c420e12a6b51a485f9e00761b5e9b95503" translate="yes" xml:space="preserve">
          <source>Application::storagePath()</source>
          <target state="translated">Application::storagePath()</target>
        </trans-unit>
        <trans-unit id="731a8a20317fc0f1963624cb47c5611421746c43" translate="yes" xml:space="preserve">
          <source>Application::terminate()</source>
          <target state="translated">Application::terminate()</target>
        </trans-unit>
        <trans-unit id="ed975ecdd617948742c238616e7e7ac0052ed4b4" translate="yes" xml:space="preserve">
          <source>Application::terminating()</source>
          <target state="translated">Application::terminating()</target>
        </trans-unit>
        <trans-unit id="246925db8b5a6ee1837ae49646e6a0581024a7a7" translate="yes" xml:space="preserve">
          <source>Application::useDatabasePath()</source>
          <target state="translated">Application::useDatabasePath()</target>
        </trans-unit>
        <trans-unit id="9c2239b5aa5acad84c84b0dadcfbf8ed9695ad83" translate="yes" xml:space="preserve">
          <source>Application::useEnvironmentPath()</source>
          <target state="translated">Application::useEnvironmentPath()</target>
        </trans-unit>
        <trans-unit id="5d991b913aefbcef28ba25e2e8e19b9053abd314" translate="yes" xml:space="preserve">
          <source>Application::useStoragePath()</source>
          <target state="translated">Application::useStoragePath()</target>
        </trans-unit>
        <trans-unit id="779ee6640809f8daa2c85ebddac5831b1524ec04" translate="yes" xml:space="preserve">
          <source>Application::version()</source>
          <target state="translated">Application::version()</target>
        </trans-unit>
        <trans-unit id="5c2f160e765f8859fc7436e9f2f197e0c9ea6937" translate="yes" xml:space="preserve">
          <source>Applied global scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1232f2ee595fdbeec4067f088e1412149a08fe27" translate="yes" xml:space="preserve">
          <source>Apply the active states to the model definition array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd15e4f43d62944d12b8095e37bcb6c18629017" translate="yes" xml:space="preserve">
          <source>Apply the callback if the value is falsy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3711863be678d8ebc33b3480dca9c3120a9cf84f" translate="yes" xml:space="preserve">
          <source>Apply the callback if the value is truthy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe3fadc51752fa0df039a2aa6715c0f7344be2e" translate="yes" xml:space="preserve">
          <source>Apply the callback's query changes if the given &quot;value&quot; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ddac0b5e1332cdb39cbc6cef7f68dda9d25819" translate="yes" xml:space="preserve">
          <source>Apply the callback's query changes if the given &quot;value&quot; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39d859bb68d6714edc828508a6cc838f1485a62" translate="yes" xml:space="preserve">
          <source>Apply the configured taps for the logger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2329a092094b4a6031172b50f5fcf2f8889f77b" translate="yes" xml:space="preserve">
          <source>Apply the given scope on the current builder instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c989fb0529d6d6cb343c8759d6151e951d91ef7d" translate="yes" xml:space="preserve">
          <source>Apply the scope to a given Eloquent query builder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b14580e612108d53398984612fcd352ee5a112" translate="yes" xml:space="preserve">
          <source>Apply the scopes to the Eloquent builder instance and return it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2fe0904a56b110d35cc0e114cd337df5c604e3" translate="yes" xml:space="preserve">
          <source>Applying Global Scopes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87700f2f7733be429e5fdded311b9a09812988c1" translate="yes" xml:space="preserve">
          <source>Applying States</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eda4c543c1cef3ae46fbb1225b6463edecf122c" translate="yes" xml:space="preserve">
          <source>Approving The Request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbb4f6b1f47a666c99135c9581c3bc71bf00f2f" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher</source>
          <target state="translated">Argon2IdHasher</target>
        </trans-unit>
        <trans-unit id="3dbab0af8289e0fb1c6635d6c04fe42270183797" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher (Hashing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8593dcf306082b2b99bb1f7440582f6ae005f0e4" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher::algorithm()</source>
          <target state="translated">Argon2IdHasher::algorithm()</target>
        </trans-unit>
        <trans-unit id="622b863df0a09ffa694f45342d4f484b76e3cab8" translate="yes" xml:space="preserve">
          <source>Argon2IdHasher::check()</source>
          <target state="translated">Argon2IdHasher::check()</target>
        </trans-unit>
        <trans-unit id="3e39c0c7ca0c47db1db47175428b94506969732e" translate="yes" xml:space="preserve">
          <source>ArgonHasher</source>
          <target state="translated">ArgonHasher</target>
        </trans-unit>
        <trans-unit id="47df8c7f20ad99acc50d2d19fb613a4679c93342" translate="yes" xml:space="preserve">
          <source>ArgonHasher (Hashing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f15df341c8abdbf4396bac096584d2bc37d66d4" translate="yes" xml:space="preserve">
          <source>ArgonHasher::__construct()</source>
          <target state="translated">ArgonHasher::__construct()</target>
        </trans-unit>
        <trans-unit id="80f1d5e5d1b79315fd44f509cf836a4292ea1683" translate="yes" xml:space="preserve">
          <source>ArgonHasher::algorithm()</source>
          <target state="translated">ArgonHasher::algorithm()</target>
        </trans-unit>
        <trans-unit id="3c4819fa1620c60ca439807f3c58f19727039671" translate="yes" xml:space="preserve">
          <source>ArgonHasher::check()</source>
          <target state="translated">ArgonHasher::check()</target>
        </trans-unit>
        <trans-unit id="33eab82fe49f00ff291e0b96190b51f0b583de27" translate="yes" xml:space="preserve">
          <source>ArgonHasher::make()</source>
          <target state="translated">ArgonHasher::make()</target>
        </trans-unit>
        <trans-unit id="08c74267bae90a0e1414f99724a0b27aa56a9787" translate="yes" xml:space="preserve">
          <source>ArgonHasher::memory()</source>
          <target state="translated">ArgonHasher::memory()</target>
        </trans-unit>
        <trans-unit id="4b434ad802820d2b966eb9dccad4ab7efbbf119d" translate="yes" xml:space="preserve">
          <source>ArgonHasher::needsRehash()</source>
          <target state="translated">ArgonHasher::needsRehash()</target>
        </trans-unit>
        <trans-unit id="6248068298670b145e7c357405aad2204dcbaef2" translate="yes" xml:space="preserve">
          <source>ArgonHasher::setMemory()</source>
          <target state="translated">ArgonHasher::setMemory()</target>
        </trans-unit>
        <trans-unit id="b0255d11003e0fc793eddc754cbca7fe92b5b5b3" translate="yes" xml:space="preserve">
          <source>ArgonHasher::setThreads()</source>
          <target state="translated">ArgonHasher::setThreads()</target>
        </trans-unit>
        <trans-unit id="79f3f06b756cc85acab467f445896b52cc29ce9f" translate="yes" xml:space="preserve">
          <source>ArgonHasher::setTime()</source>
          <target state="translated">ArgonHasher::setTime()</target>
        </trans-unit>
        <trans-unit id="679baae4c9b0d28f337b8babfd4379733eb22a2e" translate="yes" xml:space="preserve">
          <source>ArgonHasher::threads()</source>
          <target state="translated">ArgonHasher::threads()</target>
        </trans-unit>
        <trans-unit id="a00fe6d40b6f3f2de8398801c7aaff6d6b75b428" translate="yes" xml:space="preserve">
          <source>ArgonHasher::time()</source>
          <target state="translated">ArgonHasher::time()</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="5e68d19490cd87ca4a54ccc3a50e5ecbff27e3f0" translate="yes" xml:space="preserve">
          <source>Arr</source>
          <target state="translated">Arr</target>
        </trans-unit>
        <trans-unit id="d14f07e09c8fb6deba2580a76adf6f569ee7043b" translate="yes" xml:space="preserve">
          <source>Arr (Support)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e61cec3a9c05759013e204d2435ef28b73c452" translate="yes" xml:space="preserve">
          <source>Arr::accessible()</source>
          <target state="translated">Arr::accessible()</target>
        </trans-unit>
        <trans-unit id="2edf712f272d1f21ea9cd9765795b515d4b992aa" translate="yes" xml:space="preserve">
          <source>Arr::add()</source>
          <target state="translated">Arr::add()</target>
        </trans-unit>
        <trans-unit id="f29619a049da0d79437eae0cc10e0fd9bd596fef" translate="yes" xml:space="preserve">
          <source>Arr::collapse()</source>
          <target state="translated">Arr::collapse()</target>
        </trans-unit>
        <trans-unit id="4592eeb4a3b971e35c2e6831d4d0d74e74ea3043" translate="yes" xml:space="preserve">
          <source>Arr::crossJoin()</source>
          <target state="translated">Arr::crossJoin()</target>
        </trans-unit>
        <trans-unit id="cd231794234dd94138926a6a2cf99a955141c3c2" translate="yes" xml:space="preserve">
          <source>Arr::divide()</source>
          <target state="translated">Arr::divide()</target>
        </trans-unit>
        <trans-unit id="257a91588df61589442dac5845d7d898309099a8" translate="yes" xml:space="preserve">
          <source>Arr::dot()</source>
          <target state="translated">Arr::dot()</target>
        </trans-unit>
        <trans-unit id="4fa73067e37da53ac0276adaaaa3f30dee09c576" translate="yes" xml:space="preserve">
          <source>Arr::except()</source>
          <target state="translated">Arr::except()</target>
        </trans-unit>
        <trans-unit id="103e5cf1c7a8e05b6c0d96497567ed1ff6bd7c21" translate="yes" xml:space="preserve">
          <source>Arr::exists()</source>
          <target state="translated">Arr::exists()</target>
        </trans-unit>
        <trans-unit id="78d0320f3812984628a4cfd168b52e7d1deb9271" translate="yes" xml:space="preserve">
          <source>Arr::explodePluckParameters()</source>
          <target state="translated">Arr::explodePluckParameters()</target>
        </trans-unit>
        <trans-unit id="a8a620b6b98f8d87a202c7be3a6d4c0be34381ca" translate="yes" xml:space="preserve">
          <source>Arr::first()</source>
          <target state="translated">Arr::first()</target>
        </trans-unit>
        <trans-unit id="bd5487c5ecce7e3a1a9f2bb391322d3d7b6a3e4b" translate="yes" xml:space="preserve">
          <source>Arr::flatten()</source>
          <target state="translated">Arr::flatten()</target>
        </trans-unit>
        <trans-unit id="504f8215f6599e4cd0049498c62d3edaded0d162" translate="yes" xml:space="preserve">
          <source>Arr::forget()</source>
          <target state="translated">Arr::forget()</target>
        </trans-unit>
        <trans-unit id="035da2d8a087a94f7703352845cc835385f9480c" translate="yes" xml:space="preserve">
          <source>Arr::get()</source>
          <target state="translated">Arr::get()</target>
        </trans-unit>
        <trans-unit id="efec61885065ac27b0d1f6fa269300d9295ff6dd" translate="yes" xml:space="preserve">
          <source>Arr::has()</source>
          <target state="translated">Arr::has()</target>
        </trans-unit>
        <trans-unit id="3c1bae690296dc3a1623fc6a05246c7fc7ebd860" translate="yes" xml:space="preserve">
          <source>Arr::isAssoc()</source>
          <target state="translated">Arr::isAssoc()</target>
        </trans-unit>
        <trans-unit id="17c190057f2fbe3dff9934d39c762f823776d0e4" translate="yes" xml:space="preserve">
          <source>Arr::last()</source>
          <target state="translated">Arr::last()</target>
        </trans-unit>
        <trans-unit id="695057c671269fe4b70990aeeb25682f74ef1d67" translate="yes" xml:space="preserve">
          <source>Arr::only()</source>
          <target state="translated">Arr::only()</target>
        </trans-unit>
        <trans-unit id="a1b43500ced9654ee96bdb9f9a0143cd811464e7" translate="yes" xml:space="preserve">
          <source>Arr::pluck()</source>
          <target state="translated">Arr::pluck()</target>
        </trans-unit>
        <trans-unit id="cd8b7af8eede98172c001441986f44803ed20620" translate="yes" xml:space="preserve">
          <source>Arr::prepend()</source>
          <target state="translated">Arr::prepend()</target>
        </trans-unit>
        <trans-unit id="fe690513668c3d97e5ae7df0bb4ffa32c4f7db3e" translate="yes" xml:space="preserve">
          <source>Arr::pull()</source>
          <target state="translated">Arr::pull()</target>
        </trans-unit>
        <trans-unit id="7ccac9d36944b66ed9a888d173e33887a5852279" translate="yes" xml:space="preserve">
          <source>Arr::query()</source>
          <target state="translated">Arr::query()</target>
        </trans-unit>
        <trans-unit id="c480eb9b9b2fa2a5366428135bbfbf6429b9028f" translate="yes" xml:space="preserve">
          <source>Arr::random()</source>
          <target state="translated">Arr::random()</target>
        </trans-unit>
        <trans-unit id="9dae62df556404feee70d1119cc235df5fa1112b" translate="yes" xml:space="preserve">
          <source>Arr::set()</source>
          <target state="translated">Arr::set()</target>
        </trans-unit>
        <trans-unit id="da0d71a3ac61d2abff141c166effc856b27888b5" translate="yes" xml:space="preserve">
          <source>Arr::shuffle()</source>
          <target state="translated">Arr::shuffle()</target>
        </trans-unit>
        <trans-unit id="ea5a29753549a9e6574f2133d47c97304c63ed3d" translate="yes" xml:space="preserve">
          <source>Arr::sort()</source>
          <target state="translated">Arr::sort()</target>
        </trans-unit>
        <trans-unit id="1706fb0c6835f78b211464521e1ad4ec5f425011" translate="yes" xml:space="preserve">
          <source>Arr::sortRecursive()</source>
          <target state="translated">Arr::sortRecursive()</target>
        </trans-unit>
        <trans-unit id="fed395c8e8be02c9556639684677b1b1ef8f45d3" translate="yes" xml:space="preserve">
          <source>Arr::where()</source>
          <target state="translated">Arr::where()</target>
        </trans-unit>
        <trans-unit id="b52fc7889139a9165980e0baf1321cc5438da80d" translate="yes" xml:space="preserve">
          <source>Arr::wrap()</source>
          <target state="translated">Arr::wrap()</target>
        </trans-unit>
        <trans-unit id="1122c0a300fb0d261114087fee5f67b517221056" translate="yes" xml:space="preserve">
          <source>Array &amp;amp; JSON Casting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801ea4cba7f668879ccd61d3e93eea6918104a04" translate="yes" xml:space="preserve">
          <source>Array of failed recipients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17609136dbbee227095893718af833cbd365b0c" translate="yes" xml:space="preserve">
          <source>Array of footer lines to be added to template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e9009fe3f1be64e19fa18bff4e2116244ef530" translate="yes" xml:space="preserve">
          <source>Array of opening and closing tags for escaped echos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e64f8729cabbb7faf2008edc910cd23437493e" translate="yes" xml:space="preserve">
          <source>Array of opening and closing tags for raw echos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c328778577fddfc2df4b2c6da5a76622f55f89" translate="yes" xml:space="preserve">
          <source>Array of opening and closing tags for regular echos.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1b8e1ce5edb32b8c95e4a6659cffd05914e85b" translate="yes" xml:space="preserve">
          <source>Array to temporary store the raw blocks found in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bade51302a664ab2a520072bfa7c7b1c99ef2837" translate="yes" xml:space="preserve">
          <source>ArrayInput</source>
          <target state="translated">ArrayInput</target>
        </trans-unit>
        <trans-unit id="41eb415c07831f366e7c8a298f4997f3beb0eb62" translate="yes" xml:space="preserve">
          <source>ArrayIterator</source>
          <target state="translated">ArrayIterator</target>
        </trans-unit>
        <trans-unit id="454cabc12562f84792f1a25911e52b68a904dcf0" translate="yes" xml:space="preserve">
          <source>ArrayLoader</source>
          <target state="translated">ArrayLoader</target>
        </trans-unit>
        <trans-unit id="a71f5684eb802f58ae927e22c0b9c79f1a08660c" translate="yes" xml:space="preserve">
          <source>ArrayLoader (Translation)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70999955c14da7e2646a70de0f433062e176d989" translate="yes" xml:space="preserve">
          <source>ArrayLoader::addJsonPath()</source>
          <target state="translated">ArrayLoader::addJsonPath()</target>
        </trans-unit>
        <trans-unit id="0928dbfaeb230a10c7d965c1aacbf95d991faf38" translate="yes" xml:space="preserve">
          <source>ArrayLoader::addMessages()</source>
          <target state="translated">ArrayLoader::addMessages()</target>
        </trans-unit>
        <trans-unit id="057894440968de03927ef2b0636854272f78a4a0" translate="yes" xml:space="preserve">
          <source>ArrayLoader::addNamespace()</source>
          <target state="translated">ArrayLoader::addNamespace()</target>
        </trans-unit>
        <trans-unit id="87bcabe5616e7ffde1117ad306332dbb8bddc58e" translate="yes" xml:space="preserve">
          <source>ArrayLoader::load()</source>
          <target state="translated">ArrayLoader::load()</target>
        </trans-unit>
        <trans-unit id="0049e1af40272d8affc2546584bb9d7164114d4f" translate="yes" xml:space="preserve">
          <source>ArrayLoader::namespaces()</source>
          <target state="translated">ArrayLoader::namespaces()</target>
        </trans-unit>
        <trans-unit id="1b2e390ef6a4f7ea6ec46cfa9d3bd5b39b96516e" translate="yes" xml:space="preserve">
          <source>ArrayStore</source>
          <target state="translated">ArrayStore</target>
        </trans-unit>
        <trans-unit id="fafb73faa0a39c431648bfcbc4c53ed94b1c920b" translate="yes" xml:space="preserve">
          <source>ArrayStore (Cache)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6874e29958cd2537ce695c16bd872b5fd093b1" translate="yes" xml:space="preserve">
          <source>ArrayStore::decrement()</source>
          <target state="translated">ArrayStore::decrement()</target>
        </trans-unit>
        <trans-unit id="4948aa5cec37607c2443e7fff7be759bbbce3119" translate="yes" xml:space="preserve">
          <source>ArrayStore::flush()</source>
          <target state="translated">ArrayStore::flush()</target>
        </trans-unit>
        <trans-unit id="6874902c9b38dbcf513b795e35bc51dcafc82bf2" translate="yes" xml:space="preserve">
          <source>ArrayStore::forever()</source>
          <target state="translated">ArrayStore::forever()</target>
        </trans-unit>
        <trans-unit id="7cf36327a9da6611653227039f605bafdfc18397" translate="yes" xml:space="preserve">
          <source>ArrayStore::forget()</source>
          <target state="translated">ArrayStore::forget()</target>
        </trans-unit>
        <trans-unit id="ab0d3ebd30c784ac31c1858b921683076e69a033" translate="yes" xml:space="preserve">
          <source>ArrayStore::get()</source>
          <target state="translated">ArrayStore::get()</target>
        </trans-unit>
        <trans-unit id="44b272422a9a784cf5e5bd1acba2a142a145f5ea" translate="yes" xml:space="preserve">
          <source>ArrayStore::getPrefix()</source>
          <target state="translated">ArrayStore::getPrefix()</target>
        </trans-unit>
        <trans-unit id="324b4d5aa9c1e626ca445a92e6cf07359ae5cb0e" translate="yes" xml:space="preserve">
          <source>ArrayStore::increment()</source>
          <target state="translated">ArrayStore::increment()</target>
        </trans-unit>
        <trans-unit id="660f89a54bdb59030fdba93b0d0239749bb3a07d" translate="yes" xml:space="preserve">
          <source>ArrayStore::put()</source>
          <target state="translated">ArrayStore::put()</target>
        </trans-unit>
        <trans-unit id="834d6a95b15ebc052473de8f40c63eb61c7d407c" translate="yes" xml:space="preserve">
          <source>ArrayTransport</source>
          <target state="translated">ArrayTransport</target>
        </trans-unit>
        <trans-unit id="be4640bda872d0f6d2d6d8cef23c6c1d9aa12551" translate="yes" xml:space="preserve">
          <source>ArrayTransport (Mail\Transport)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb8c49aea3278de871eeef69dcc57bd2393d315" translate="yes" xml:space="preserve">
          <source>ArrayTransport::__construct()</source>
          <target state="translated">ArrayTransport::__construct()</target>
        </trans-unit>
        <trans-unit id="c93846aad6411fe5be5c0d52fce11c23c1acd36c" translate="yes" xml:space="preserve">
          <source>ArrayTransport::flush()</source>
          <target state="translated">ArrayTransport::flush()</target>
        </trans-unit>
        <trans-unit id="b04f63a54fe9d7a3d3d3d0f54965bf21b1e049c6" translate="yes" xml:space="preserve">
          <source>ArrayTransport::messages()</source>
          <target state="translated">ArrayTransport::messages()</target>
        </trans-unit>
        <trans-unit id="c453a0036fbbfe267d32a0093f04dd373dbcc1c2" translate="yes" xml:space="preserve">
          <source>ArrayTransport::send()</source>
          <target state="translated">ArrayTransport::send()</target>
        </trans-unit>
        <trans-unit id="251d6b9928688ee8472250abcd7d376e9f3b00b5" translate="yes" xml:space="preserve">
          <source>Arrayable</source>
          <target state="translated">Arrayable</target>
        </trans-unit>
        <trans-unit id="a2fc57de029e4faae1b34b264411dce1beca612a" translate="yes" xml:space="preserve">
          <source>Arrayable (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2186f05e90d1582bc1d56b9ef512e126150357" translate="yes" xml:space="preserve">
          <source>Arrayable::toArray()</source>
          <target state="translated">Arrayable::toArray()</target>
        </trans-unit>
        <trans-unit id="92d5eddca7f63611d722fc945d39e60443b61ab0" translate="yes" xml:space="preserve">
          <source>Arrays &amp;amp; Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2f8eb21db2a05d816e94b156d318b089ae4b3c" translate="yes" xml:space="preserve">
          <source>Artisan</source>
          <target state="translated">Artisan</target>
        </trans-unit>
        <trans-unit id="ee9a86c92f54745a42e3a568a1c93e11d4683a0c" translate="yes" xml:space="preserve">
          <source>Artisan (Support\Facades)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62da37fdf723d03369da1b35bb55cf0fe7f34caa" translate="yes" xml:space="preserve">
          <source>Artisan Console</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8374ea3ad6e3e78da1fd00a2304555c86b879912" translate="yes" xml:space="preserve">
          <source>Artisan is the command-line interface included with Laravel. It provides a number of helpful commands that can assist you while you build your application. To view a list of all available Artisan commands, you may use the &lt;code&gt;list&lt;/code&gt; command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a85f0617411e3d2085945991cbb33cf73eceee7" translate="yes" xml:space="preserve">
          <source>Artisan::getFacadeAccessor()</source>
          <target state="translated">Artisan::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="f6e886ccf65c2bb8ff6aae8ccba62153322a87fe" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider</source>
          <target state="translated">ArtisanServiceProvider</target>
        </trans-unit>
        <trans-unit id="4cb86f8fd97c6dd1a71e43d89278671a27284f40" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider (Foundation\Providers)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3379911a3eddefc3a91c6e53200ffdb9324c53a9" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::provides()</source>
          <target state="translated">ArtisanServiceProvider::provides()</target>
        </trans-unit>
        <trans-unit id="731325da86c9780a11fcda9f3024632a9468ca9d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::register()</source>
          <target state="translated">ArtisanServiceProvider::register()</target>
        </trans-unit>
        <trans-unit id="8693cfda280fc51b11e3642cd40251963b93c94f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerAppNameCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerAppNameCommand()</target>
        </trans-unit>
        <trans-unit id="17ef1041489a227ec19dd12390494b49bf6aa2a2" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerAuthMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerAuthMakeCommand()</target>
        </trans-unit>
        <trans-unit id="7c004c0133c95ba2802312fed2ad5709ea4b6f18" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCacheClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCacheClearCommand()</target>
        </trans-unit>
        <trans-unit id="aaaca5d2648f3f80259f379743179111392ba5a1" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCacheForgetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCacheForgetCommand()</target>
        </trans-unit>
        <trans-unit id="d1f7bad5c819210a60db18a69a7c95da1cd96919" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCacheTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerCacheTableCommand()</target>
        </trans-unit>
        <trans-unit id="c028f08229929fb600836db4a7e9f822fa5068be" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerChannelMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerChannelMakeCommand()</target>
        </trans-unit>
        <trans-unit id="23e93dda39c7ebc8ae857047ed4ef7f19baef150" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerClearCompiledCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerClearCompiledCommand()</target>
        </trans-unit>
        <trans-unit id="99ecdf8eab33c355d1ace94618e8bef828abf4bd" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerClearResetsCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerClearResetsCommand()</target>
        </trans-unit>
        <trans-unit id="5505630f7f8ec7bac029ec0f00ce47fd37df41ca" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerCommands()</source>
          <target state="translated">ArtisanServiceProvider::registerCommands()</target>
        </trans-unit>
        <trans-unit id="9ae41f764ccec624d92705b5fa0cb3b2385144d3" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerConfigCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerConfigCacheCommand()</target>
        </trans-unit>
        <trans-unit id="57e9640b92e1b3ac791e8237a742dd4056072ac3" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerConfigClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerConfigClearCommand()</target>
        </trans-unit>
        <trans-unit id="d028db36df76a23f812c6ce88495310cec1802fa" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerConsoleMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerConsoleMakeCommand()</target>
        </trans-unit>
        <trans-unit id="cfd3d3691595a44642bd54ca2fedf05e5ee4544d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerControllerMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerControllerMakeCommand()</target>
        </trans-unit>
        <trans-unit id="fc6359d1ce7185387f604ce50795649ff2fc93eb" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerDownCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerDownCommand()</target>
        </trans-unit>
        <trans-unit id="8aec2e775cef5e1e45ebbe11735758122b8d0615" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEnvironmentCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEnvironmentCommand()</target>
        </trans-unit>
        <trans-unit id="eaf224c4e7c4ac03841b514f063561d4c583c7e5" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventGenerateCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventGenerateCommand()</target>
        </trans-unit>
        <trans-unit id="8ae051dd9c3071470d7cb03a381b2a87ec1d15ef" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerEventMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerEventMakeCommand()</target>
        </trans-unit>
        <trans-unit id="851dae4b12ab60c6ec111892745b571e335f191f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerExceptionMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerExceptionMakeCommand()</target>
        </trans-unit>
        <trans-unit id="ca90e8d1ac428577a4062ad6d3f8cecb6191573c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerFactoryMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerFactoryMakeCommand()</target>
        </trans-unit>
        <trans-unit id="927cb2f52fb09423bead29b259f24961a1eebb34" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerJobMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerJobMakeCommand()</target>
        </trans-unit>
        <trans-unit id="b0110157ec5b6bbbc2776c8c3c09c325d3f9f593" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerKeyGenerateCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerKeyGenerateCommand()</target>
        </trans-unit>
        <trans-unit id="4b239bf3fb132f743a66a599405fc77b32bceae9" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerListenerMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerListenerMakeCommand()</target>
        </trans-unit>
        <trans-unit id="e1bf39ebe17f8a38fd3c95b34da5075802787ddc" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMailMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMailMakeCommand()</target>
        </trans-unit>
        <trans-unit id="4abde22335dcd0638a36f625640e3f594a536fc7" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMiddlewareMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMiddlewareMakeCommand()</target>
        </trans-unit>
        <trans-unit id="326a794f51954f4c7f343ce03cb4d1f65475ba72" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateCommand()</target>
        </trans-unit>
        <trans-unit id="ad3fee6037239d34c5ba4a97689ce652bd2e0d55" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateFreshCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateFreshCommand()</target>
        </trans-unit>
        <trans-unit id="788f7f9390fee4916d90645640ee0e68668acb26" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateInstallCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateInstallCommand()</target>
        </trans-unit>
        <trans-unit id="d125d4ffff70d84f565f28a9800f622c6aa66c14" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateMakeCommand()</target>
        </trans-unit>
        <trans-unit id="f379d5bd4e37604c27104b4e7d2b81974ac88248" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateRefreshCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateRefreshCommand()</target>
        </trans-unit>
        <trans-unit id="d00617957127b872899afe748e3972f734cb9e12" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateResetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateResetCommand()</target>
        </trans-unit>
        <trans-unit id="19ea455154315293be1064281e2042df7e69492c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateRollbackCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateRollbackCommand()</target>
        </trans-unit>
        <trans-unit id="1ab36d68611f4fd456958fd364bf1e764012f90f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerMigrateStatusCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerMigrateStatusCommand()</target>
        </trans-unit>
        <trans-unit id="4abff54a062af1436b9e9c7f5a4c526b74d9f75c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerModelMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerModelMakeCommand()</target>
        </trans-unit>
        <trans-unit id="144ee94da546ea97238a609c7b057cb73697a45b" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerNotificationMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerNotificationMakeCommand()</target>
        </trans-unit>
        <trans-unit id="8021a274e18bacd07cba793707b73480917c7cde" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerNotificationTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerNotificationTableCommand()</target>
        </trans-unit>
        <trans-unit id="dc4d3ac7423616bc82044bb43b6d96d5e8b03c5c" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerObserverMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerObserverMakeCommand()</target>
        </trans-unit>
        <trans-unit id="46c2082d6e47ee61bc7dc752aaecd7950bdf3fdf" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerOptimizeClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerOptimizeClearCommand()</target>
        </trans-unit>
        <trans-unit id="974528f286f12664412757e86075418055578a2f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerOptimizeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerOptimizeCommand()</target>
        </trans-unit>
        <trans-unit id="f1ccb0655a004dc010683d8f93d33ea193458627" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerPackageDiscoverCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerPackageDiscoverCommand()</target>
        </trans-unit>
        <trans-unit id="ed9df41b1c126afd41867d8a02703a1a9d48facc" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerPolicyMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerPolicyMakeCommand()</target>
        </trans-unit>
        <trans-unit id="54ed83104f255f323fd94f3fd898eb04a66a007a" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerPresetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerPresetCommand()</target>
        </trans-unit>
        <trans-unit id="5e1a58251abd9cee9c61ec5ed317186039a026cc" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerProviderMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerProviderMakeCommand()</target>
        </trans-unit>
        <trans-unit id="8d4bd71202104963773d824a33833ce51b7a592a" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueFailedCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueFailedCommand()</target>
        </trans-unit>
        <trans-unit id="b0050c002644e623589dae89ad9769ac25ab8006" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueFailedTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueFailedTableCommand()</target>
        </trans-unit>
        <trans-unit id="55f814f1deae6b62deab568fd7f250f809b43c96" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueFlushCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueFlushCommand()</target>
        </trans-unit>
        <trans-unit id="663797eb03b5bffb8bf46362e403d4fb1647cf5d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueForgetCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueForgetCommand()</target>
        </trans-unit>
        <trans-unit id="73ba8b2d8d2df954ab09a1b5296ad8ec12dc0d4d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueListenCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueListenCommand()</target>
        </trans-unit>
        <trans-unit id="2b6520fb330d82f2997c5d1024c8c02c28bb278f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueRestartCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueRestartCommand()</target>
        </trans-unit>
        <trans-unit id="3fc2aeeb8c6d32f4235556f06eb237d977455683" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueRetryCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueRetryCommand()</target>
        </trans-unit>
        <trans-unit id="93f65b594b61f7e15efb1631cecb9151ee873477" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueTableCommand()</target>
        </trans-unit>
        <trans-unit id="2ec657607c73f7bf588d5cbf9664e1978ff701d7" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerQueueWorkCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerQueueWorkCommand()</target>
        </trans-unit>
        <trans-unit id="52e9340c6dc28f95010b0b161d48a36cfb0d0e2f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRequestMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRequestMakeCommand()</target>
        </trans-unit>
        <trans-unit id="e09d13a596ed5729c7a03e897783d13ac4e89518" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerResourceMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerResourceMakeCommand()</target>
        </trans-unit>
        <trans-unit id="e1bd29620dd5f6afd7d627cc9f0711c7de10c21d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRouteCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRouteCacheCommand()</target>
        </trans-unit>
        <trans-unit id="34bee012fbdbfb62733f2654232d98c105b82e9f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRouteClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRouteClearCommand()</target>
        </trans-unit>
        <trans-unit id="d3d9df45173d173170a69cb839dabfe3be8d604f" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRouteListCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRouteListCommand()</target>
        </trans-unit>
        <trans-unit id="c39cd8abbd614763bd5e463afa6da48d78bbb471" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerRuleMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerRuleMakeCommand()</target>
        </trans-unit>
        <trans-unit id="f6460ed6dd5b7d0cb04c215952db10f57da12ff1" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerScheduleFinishCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerScheduleFinishCommand()</target>
        </trans-unit>
        <trans-unit id="f7325e02bf5ef963f8217b0480fe51722d541633" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerScheduleRunCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerScheduleRunCommand()</target>
        </trans-unit>
        <trans-unit id="a6dd393a317978961c18049566c05a3e3ca1fbe2" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSeedCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSeedCommand()</target>
        </trans-unit>
        <trans-unit id="7fb5fe19a24237949fbe5d1d5302fa5b75ad3111" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSeederMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSeederMakeCommand()</target>
        </trans-unit>
        <trans-unit id="7d77ab957739d1670a690cb4e7a14a86b7aec295" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerServeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerServeCommand()</target>
        </trans-unit>
        <trans-unit id="03f37f24c4cb447f9d7a9d57f8fad6ad9ea2d739" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerSessionTableCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerSessionTableCommand()</target>
        </trans-unit>
        <trans-unit id="ec59a5ece46495962441b50088a355fef1c2aeea" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerStorageLinkCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerStorageLinkCommand()</target>
        </trans-unit>
        <trans-unit id="c19c80753dcb15b6d03537d6fd48e75ee6b3656d" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerTestMakeCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerTestMakeCommand()</target>
        </trans-unit>
        <trans-unit id="3083a90a814db653ef44a70a718108795f1c30d0" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerUpCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerUpCommand()</target>
        </trans-unit>
        <trans-unit id="5211220ca80e55d1f936999d95742260c3759456" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerVendorPublishCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerVendorPublishCommand()</target>
        </trans-unit>
        <trans-unit id="a6a1bfdc83c9009bfba9fcf2f26a210fb988b346" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerViewCacheCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerViewCacheCommand()</target>
        </trans-unit>
        <trans-unit id="450ed6faa51e101a30124839ac5d9e793efa5e75" translate="yes" xml:space="preserve">
          <source>ArtisanServiceProvider::registerViewClearCommand()</source>
          <target state="translated">ArtisanServiceProvider::registerViewClearCommand()</target>
        </trans-unit>
        <trans-unit id="f5d8c00d502a75947613de2efe27edef5f51034d" translate="yes" xml:space="preserve">
          <source>ArtisanStarting</source>
          <target state="translated">ArtisanStarting</target>
        </trans-unit>
        <trans-unit id="5ee981756c1078e5376d25e470b9396a14e5565f" translate="yes" xml:space="preserve">
          <source>ArtisanStarting (Console\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a2734e365cea000b3f909ca4f731ba9adf0e1c6" translate="yes" xml:space="preserve">
          <source>ArtisanStarting::__construct()</source>
          <target state="translated">ArtisanStarting::__construct()</target>
        </trans-unit>
        <trans-unit id="410e5e01b2f5f4a908f7dd9eadf0fcf7c7c6ac79" translate="yes" xml:space="preserve">
          <source>As an alternative to defining how many times a job may be attempted before it fails, you may define a time at which the job should timeout. This allows a job to be attempted any number of times within a given time frame. To define the time at which a job should timeout, add a &lt;code&gt;retryUntil&lt;/code&gt; method to your job class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b7b927b26ed7a48fa74051d37dbdb09a308fae" translate="yes" xml:space="preserve">
          <source>As an alternative to mocking, you may use the &lt;code&gt;Bus&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent jobs from being dispatched. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1983ca37f63f5cb94e706abb916fd0aed8e40a66" translate="yes" xml:space="preserve">
          <source>As an alternative to mocking, you may use the &lt;code&gt;Event&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent all event listeners from executing. You may then assert that events were dispatched and even inspect the data they received. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1476928cd7c9743fb486eac8d3de874949314733" translate="yes" xml:space="preserve">
          <source>As an alternative to mocking, you may use the &lt;code&gt;Queue&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent jobs from being queued. You may then assert that jobs were pushed to the queue and even inspect the data they received. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b404613919475f3f4730b0f788ffeeb920e05b2f" translate="yes" xml:space="preserve">
          <source>As an example, let's modify the default &lt;code&gt;DatabaseSeeder&lt;/code&gt; class and add a database insert statement to the &lt;code&gt;run&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb2571c90930f6ccdc6186c5e1f7c914af929a6" translate="yes" xml:space="preserve">
          <source>As discussed elsewhere, much of the decision to use contracts or facades will come down to personal taste and the tastes of your development team. Both contracts and facades can be used to create robust, well-tested Laravel applications. As long as you are keeping your class' responsibilities focused, you will notice very few practical differences between using contracts and facades.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1688ddaa5cdef6bc2f64b360c092552cd8b0a517" translate="yes" xml:space="preserve">
          <source>As mentioned above, the &lt;code&gt;collect&lt;/code&gt; helper returns a new &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; instance for the given array. So, creating a collection is as simple as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ccb0301c14c38943d59660bae4f3174520ac73" translate="yes" xml:space="preserve">
          <source>As mentioned in the previous section, the &lt;code&gt;php artisan make:auth&lt;/code&gt; command will create all of the views you need for authentication and place them in the &lt;code&gt;resources/views/auth&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c067b940478df1f24bde7d4758fd400dca869116" translate="yes" xml:space="preserve">
          <source>As mentioned previously, to determine the table name of the relationship's joining table, Eloquent will join the two related model names in alphabetical order. However, you are free to override this convention. You may do so by passing a second argument to the &lt;code&gt;belongsToMany&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151600c8a8e38dad2e96a23dcb7ba06238f099c6" translate="yes" xml:space="preserve">
          <source>As mentioned previously, within the &lt;code&gt;register&lt;/code&gt; method, you should only bind things into the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. You should never attempt to register any event listeners, routes, or any other piece of functionality within the &lt;code&gt;register&lt;/code&gt; method. Otherwise, you may accidentally use a service that is provided by a service provider which has not loaded yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efaf61419eecb8f737d7fa1f29b7d1db46329008" translate="yes" xml:space="preserve">
          <source>As noted above, soft deleted models will automatically be excluded from query results. However, you may force soft deleted models to appear in a result set using the &lt;code&gt;withTrashed&lt;/code&gt; method on the query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f25bd43e034df81d38d356bb4c7358b624469f1" translate="yes" xml:space="preserve">
          <source>As noted above, when retrieving attributes that are listed in your &lt;code&gt;$dates&lt;/code&gt; property, they will automatically be cast to &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt; instances, allowing you to use any of Carbon's methods on your attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed90fd82b9509b2eb508375a2ce8e76fb0ee92fc" translate="yes" xml:space="preserve">
          <source>As noted earlier, attributes from the intermediate table may be accessed on models using the &lt;code&gt;pivot&lt;/code&gt; attribute. However, you are free to customize the name of this attribute to better reflect its purpose within your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af8bbc11392474e2bebbe12d4e3b3796e815bc9" translate="yes" xml:space="preserve">
          <source>As of Laravel 5.7, these values will be cast to the corresponding PHP constants &lt;code&gt;INF&lt;/code&gt;, &lt;code&gt;-INF&lt;/code&gt;, and &lt;code&gt;NAN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acc3ed0de2f87bd30b90ca9fa49ac43103bd06f" translate="yes" xml:space="preserve">
          <source>As previously discussed, some actions like &lt;code&gt;create&lt;/code&gt; may not require a model instance. In these situations, you may pass a class name to the &lt;code&gt;authorize&lt;/code&gt; method. The class name will be used to determine which policy to use when authorizing the action:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76e8a3058306699ffba4c8414be843b80d69a95" translate="yes" xml:space="preserve">
          <source>As previously mentioned, the &lt;code&gt;stack&lt;/code&gt; driver allows you to combine multiple channels into a single log channel. To illustrate how to use log stacks, let's take a look at an example configuration that you might see in a production application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38cd07caa575c92c5d25268721e7e0a6d4cd7bb6" translate="yes" xml:space="preserve">
          <source>As shown above, a &quot;date picker&quot; is an example of a component that might exist throughout your application on a variety of pages. It can become cumbersome to manually write the browser automation logic to select a date in dozens of tests throughout your test suite. Instead, we can define a Dusk component to represent the date picker, allowing us to encapsulate that logic within the component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c66b10f07248c9e5ec084320d0b4eab81e9dac" translate="yes" xml:space="preserve">
          <source>As useful as this feature may be, it's possible that your existing folder structure is already configured in a way you like. If this is the case, you may disable &lt;code&gt;url()&lt;/code&gt; rewriting like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461ecb39360a387cf0d0582574f806fda29f484d" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, the &lt;code&gt;browse&lt;/code&gt; method accepts a callback. A browser instance will automatically be passed to this callback by Dusk and is the main object used to interact with and make assertions against your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017918c55e3ba82f4e5d2b9a7a47c1fa58b1081e" translate="yes" xml:space="preserve">
          <source>As you can see in the example above, the callback passed to the &lt;code&gt;extend&lt;/code&gt; method should return an implementation of &lt;code&gt;Illuminate\Contracts\Auth\Guard&lt;/code&gt;. This interface contains a few methods you will need to implement to define a custom guard. Once your custom guard has been defined, you may use this guard in the &lt;code&gt;guards&lt;/code&gt; configuration of your &lt;code&gt;auth.php&lt;/code&gt; configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41635a26ba069ccdddb4965faf42385813dfa4e6" translate="yes" xml:space="preserve">
          <source>As you can see, an array of &lt;code&gt;@servers&lt;/code&gt; is defined at the top of the file, allowing you to reference these servers in the &lt;code&gt;on&lt;/code&gt; option of your task declarations. Within your &lt;code&gt;@task&lt;/code&gt; declarations, you should place the Bash code that should run on your server when the task is executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8554e948d2ae4a10d670539ac56b0b908dca3a" translate="yes" xml:space="preserve">
          <source>As you can see, if the given &lt;code&gt;age&lt;/code&gt; is less than or equal to &lt;code&gt;200&lt;/code&gt;, the middleware will return an HTTP redirect to the client; otherwise, the request will be passed further into the application. To pass the request deeper into the application (allowing the middleware to &quot;pass&quot;), call the &lt;code&gt;$next&lt;/code&gt; callback with the &lt;code&gt;$request&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf3e3151e041fc86eb160eee42370c96121a024" translate="yes" xml:space="preserve">
          <source>As you can see, passing a &lt;code&gt;Closure&lt;/code&gt; into the &lt;code&gt;where&lt;/code&gt; method instructs the query builder to begin a constraint group. The &lt;code&gt;Closure&lt;/code&gt; will receive a query builder instance which you can use to set the constraints that should be contained within the parenthesis group. The example above will produce the following SQL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8dd2f9436bb6e6e605d89ced8f012c668786e3f" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;Collection&lt;/code&gt; class allows you to chain its methods to perform fluent mapping and reducing of the underlying array. In general, collections are immutable, meaning every &lt;code&gt;Collection&lt;/code&gt; method returns an entirely new &lt;code&gt;Collection&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5357d27d3d8d1396b2bbf006d4c4f72c0bac8c23" translate="yes" xml:space="preserve">
          <source>As you can see, the first argument passed to the &lt;code&gt;view&lt;/code&gt; helper corresponds to the name of the view file in the &lt;code&gt;resources/views&lt;/code&gt; directory. The second argument is an array of data that should be made available to the view. In this case, we are passing the &lt;code&gt;name&lt;/code&gt; variable, which is displayed in the view using &lt;a href=&quot;blade&quot;&gt;Blade syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884f85a0db30d3dc9b4e4ebd183a81963dec423d" translate="yes" xml:space="preserve">
          <source>As you can see, the object being resolved will be passed to the callback, allowing you to set any additional properties on the object before it is given to its consumer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f009023119db64e6ed30d4eee7c1f79469959f56" translate="yes" xml:space="preserve">
          <source>As you can see, the original value of the column is passed to the accessor, allowing you to manipulate and return the value. To access the value of the accessor, you may access the &lt;code&gt;first_name&lt;/code&gt; attribute on a model instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a1c1e3f2e6f8f1dd6837adcc256d7d80deafb73" translate="yes" xml:space="preserve">
          <source>As you can see, the relationship is defined exactly the same as its &lt;code&gt;User&lt;/code&gt; counterpart, with the exception of referencing the &lt;code&gt;App\User&lt;/code&gt; model. Since we're reusing the &lt;code&gt;belongsToMany&lt;/code&gt; method, all of the usual table and key customization options are available when defining the inverse of many-to-many relationships.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c166a419f06e385b3ce10c215eae795048a21f" translate="yes" xml:space="preserve">
          <source>As you can see, this event class contains no logic. It is a container for the &lt;code&gt;Order&lt;/code&gt; instance that was purchased. The &lt;code&gt;SerializesModels&lt;/code&gt; trait used by the event will gracefully serialize any Eloquent models if the event object is serialized using PHP's &lt;code&gt;serialize&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5683a48d897119f71645ff1cb5e12ee4eab56f9" translate="yes" xml:space="preserve">
          <source>As you can see, this file contains typical HTML mark-up. However, take note of the &lt;code&gt;@section&lt;/code&gt; and &lt;code&gt;@yield&lt;/code&gt; directives. The &lt;code&gt;@section&lt;/code&gt; directive, as the name implies, defines a section of content, while the &lt;code&gt;@yield&lt;/code&gt; directive is used to display the contents of a given section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ead9ed72883d0918ab47a662f9cb1d6101b3ae6" translate="yes" xml:space="preserve">
          <source>As you can see, we pass the desired validation rules into the &lt;code&gt;validate&lt;/code&gt; method. Again, if the validation fails, the proper response will automatically be generated. If the validation passes, our controller will continue executing normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049ad0eb8fe14b9d13f984d479eb6e4c3555c620" translate="yes" xml:space="preserve">
          <source>As you can see, we will chain the &lt;code&gt;format&lt;/code&gt; method onto whatever expression is passed into the directive. So, in this example, the final PHP generated by this directive will be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc15343a23abef64a94fcc501b60d2fe19c5a84" translate="yes" xml:space="preserve">
          <source>As you have already learned, working with many-to-many relations requires the presence of an intermediate table. Eloquent provides some very helpful ways of interacting with this table. For example, let's assume our &lt;code&gt;User&lt;/code&gt; object has many &lt;code&gt;Role&lt;/code&gt; objects that it is related to. After accessing this relationship, we may access the intermediate table using the &lt;code&gt;pivot&lt;/code&gt; attribute on the models:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc1402e1b6079206b56dbcdb39312ce2fead97e" translate="yes" xml:space="preserve">
          <source>As you have already read, resources may be returned directly from routes and controllers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa0f21644f0500963f5eceb953d7d58b02ec778" translate="yes" xml:space="preserve">
          <source>As you may know, Laravel offers &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt;, another local Laravel development environment. Homestead and Valet differ in regards to their intended audience and their approach to local development. Homestead offers an entire Ubuntu virtual machine with automated Nginx configuration. Homestead is a wonderful choice if you want a fully virtualized Linux development environment or are on Windows / Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4d8311d8cb7d9d0cc59cdcc6360394efa94c56" translate="yes" xml:space="preserve">
          <source>As you saw in the previous examples, you may pass an array of data to views:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4112daed47d2e42285c67e8f15cec42e0e419017" translate="yes" xml:space="preserve">
          <source>AsPivot</source>
          <target state="translated">AsPivot</target>
        </trans-unit>
        <trans-unit id="c5584a5df0cbb3750b37679129e4ebc80312744d" translate="yes" xml:space="preserve">
          <source>AsPivot (Database\Eloquent\Relations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bf9b2ade4d24c1f0aed3c25b0757ecfb492a34" translate="yes" xml:space="preserve">
          <source>AsPivot::delete()</source>
          <target state="translated">AsPivot::delete()</target>
        </trans-unit>
        <trans-unit id="1b464dd75af0d892e3aaefcc7339d6abf4821af8" translate="yes" xml:space="preserve">
          <source>AsPivot::fromAttributes()</source>
          <target state="translated">AsPivot::fromAttributes()</target>
        </trans-unit>
        <trans-unit id="831f9e7589e68bd619e7422f8b96b39a9b1f00dc" translate="yes" xml:space="preserve">
          <source>AsPivot::fromRawAttributes()</source>
          <target state="translated">AsPivot::fromRawAttributes()</target>
        </trans-unit>
        <trans-unit id="ba4c1a7da75a28fe6e3ee4a1897dd12808b719fe" translate="yes" xml:space="preserve">
          <source>AsPivot::getCreatedAtColumn()</source>
          <target state="translated">AsPivot::getCreatedAtColumn()</target>
        </trans-unit>
        <trans-unit id="008a50ba443f2ca1eb38d1db2d2a305ab9f39f3f" translate="yes" xml:space="preserve">
          <source>AsPivot::getDeleteQuery()</source>
          <target state="translated">AsPivot::getDeleteQuery()</target>
        </trans-unit>
        <trans-unit id="bf6a76496237e93bab34a8e26727a2ede0865d25" translate="yes" xml:space="preserve">
          <source>AsPivot::getForeignKey()</source>
          <target state="translated">AsPivot::getForeignKey()</target>
        </trans-unit>
        <trans-unit id="32cbeae7043336b4e28c311560641d8cbee64d36" translate="yes" xml:space="preserve">
          <source>AsPivot::getOtherKey()</source>
          <target state="translated">AsPivot::getOtherKey()</target>
        </trans-unit>
        <trans-unit id="87a7274a9b6c96a7529dc569ab323ee667f5a285" translate="yes" xml:space="preserve">
          <source>AsPivot::getQueueableId()</source>
          <target state="translated">AsPivot::getQueueableId()</target>
        </trans-unit>
        <trans-unit id="9e62d199893487c03702d492a60ecdc7934fc091" translate="yes" xml:space="preserve">
          <source>AsPivot::getRelatedKey()</source>
          <target state="translated">AsPivot::getRelatedKey()</target>
        </trans-unit>
        <trans-unit id="65f1ddb6bd578968eb517205fffb27028a8c6f44" translate="yes" xml:space="preserve">
          <source>AsPivot::getTable()</source>
          <target state="translated">AsPivot::getTable()</target>
        </trans-unit>
        <trans-unit id="8aa67aede09f6435334093f8ab47110742b4408e" translate="yes" xml:space="preserve">
          <source>AsPivot::getUpdatedAtColumn()</source>
          <target state="translated">AsPivot::getUpdatedAtColumn()</target>
        </trans-unit>
        <trans-unit id="dc273ed3b7a9855469e0899ce59269bafb32b088" translate="yes" xml:space="preserve">
          <source>AsPivot::hasTimestampAttributes()</source>
          <target state="translated">AsPivot::hasTimestampAttributes()</target>
        </trans-unit>
        <trans-unit id="693ed8fa7256bb62d731f4e8f86095fc7fd63147" translate="yes" xml:space="preserve">
          <source>AsPivot::newQueryForCollectionRestoration()</source>
          <target state="translated">AsPivot::newQueryForCollectionRestoration()</target>
        </trans-unit>
        <trans-unit id="6f759931305065503fb8d66c5e7a6bfe4542864d" translate="yes" xml:space="preserve">
          <source>AsPivot::newQueryForRestoration()</source>
          <target state="translated">AsPivot::newQueryForRestoration()</target>
        </trans-unit>
        <trans-unit id="344c94afffa4be8e508b7f2cfe5e2da44fdaaa92" translate="yes" xml:space="preserve">
          <source>AsPivot::setKeysForSaveQuery()</source>
          <target state="translated">AsPivot::setKeysForSaveQuery()</target>
        </trans-unit>
        <trans-unit id="43b0306882592104359a0c724826f018b5262483" translate="yes" xml:space="preserve">
          <source>AsPivot::setPivotKeys()</source>
          <target state="translated">AsPivot::setPivotKeys()</target>
        </trans-unit>
        <trans-unit id="4ca26d958914bcd4f93538017dc99c2508483e7b" translate="yes" xml:space="preserve">
          <source>Asking For Confirmation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0aed7b31da7174c1eadf2beb6ff59ea15f7ba1" translate="yes" xml:space="preserve">
          <source>Assert if a event was dispatched a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a79c4a356aae3eccc148427d289f366a05d6fc3" translate="yes" xml:space="preserve">
          <source>Assert if a job was dispatched based on a truth-test callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d69ae68c13753b754da05f71a5d515579a6126f" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7d7ea3983f77b7b73480e2c0ffef4ab09b9336" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed based on a truth-test callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0a80fa419fbf4e257242f82867651a26ffda61" translate="yes" xml:space="preserve">
          <source>Assert if a job was pushed with chained jobs based on a truth-test callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6827902ec6d42610792110df12cdaff3f3c2f8" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was queued a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f6eafbd088004c577184ac65b11a0bdf01a875" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was queued based on a truth-test callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf4a336b7289ea144e4fc6d9923eb2138105062" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was sent a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03df0f43d048755c441f63c46cc0e0555143e07a" translate="yes" xml:space="preserve">
          <source>Assert if a mailable was sent based on a truth-test callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5745760224dfe0b4e7c730ec10bd16c75479db0e" translate="yes" xml:space="preserve">
          <source>Assert if a notification was sent a number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c88283ed0c980b9f8761dfee23223eedf712baf" translate="yes" xml:space="preserve">
          <source>Assert if a notification was sent based on a truth-test callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ce459c712d55f649e9041b89fb300c8b782852" translate="yes" xml:space="preserve">
          <source>Assert if an event was dispatched based on a truth-test callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409352841bc9635c3959e9348e017b11557e32a0" translate="yes" xml:space="preserve">
          <source>Assert that a JavaScript dialog with the given message has been opened:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d92fde31c3fd8a914a5ed1130bcbe994babf9c" translate="yes" xml:space="preserve">
          <source>Assert that a cookie has a given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4180fbf8f421b42f4f64dab2e7acf35b12dce89e" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property does not match the given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f315c33e142474c2a4405f93487305fb0638a1" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property is an array and contains the given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a8892ba541919b274196e30add5638c3a9d4b6" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property is an array and does not contain the given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a9653fed3aefec51c07a60734ef08bf9f77626" translate="yes" xml:space="preserve">
          <source>Assert that a given Vue component data property matches the given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071b262c0a157a44a9ae4a021c40447a2f34cf29" translate="yes" xml:space="preserve">
          <source>Assert that a given where condition does not exist in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b608dd8d56a5d61e5a2f24ffdefec5feab556dc1" translate="yes" xml:space="preserve">
          <source>Assert that a given where condition exists in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4346e04c62fa485f9eb63ca0ab9ef96c700dc201" translate="yes" xml:space="preserve">
          <source>Assert that a table in the database contains the given data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475bc14906a24b0717dde8464ed94208fa9f5ddc" translate="yes" xml:space="preserve">
          <source>Assert that a table in the database does not contain the given data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316221d4ecf8305705d9ad7fe97531700cc47120" translate="yes" xml:space="preserve">
          <source>Assert that an unencrypted cookie has a given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695dc8771a30e822ee73091defad22b8f8b84429" translate="yes" xml:space="preserve">
          <source>Assert that no jobs were pushed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe38ab8929167784be20b406aa1cce183ec270d5" translate="yes" xml:space="preserve">
          <source>Assert that no mailables were queued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d060f2ba48b8bbe827e9c660cbbb8d336f81fdce" translate="yes" xml:space="preserve">
          <source>Assert that no mailables were sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e05f8a8abc0401443456beb6f0822e1e32c8a9" translate="yes" xml:space="preserve">
          <source>Assert that no notifications were sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c91682351dcca3e0f0a6f44ed269e9697c86ff" translate="yes" xml:space="preserve">
          <source>Assert that the command has the given exit code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e708a6075025948858b69893fa640ed8206cfb" translate="yes" xml:space="preserve">
          <source>Assert that the current URL (without the query string) matches the given string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271ae967f40595136a950244a9103433ceab72ef" translate="yes" xml:space="preserve">
          <source>Assert that the current URL host does not match the given host:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a0a284e9e0b46bd22c45f70a90b5457b48d873" translate="yes" xml:space="preserve">
          <source>Assert that the current URL host matches the given host:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f843d9c0eae898e8311c53609a6896d1734f426" translate="yes" xml:space="preserve">
          <source>Assert that the current URL matches the given named route's URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cfc4eb28c4d5e88d09ac1d6b0987be16a2303e" translate="yes" xml:space="preserve">
          <source>Assert that the current URL path begins with the given path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b120829e77cfa0fc5952451c690a8b937ceac3bb" translate="yes" xml:space="preserve">
          <source>Assert that the current URL port does not match the given port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df3d981c8545c99f98d5bb89433bd8c30fa749f" translate="yes" xml:space="preserve">
          <source>Assert that the current URL port matches the given port:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08d74855853249df0318da947387d2a620acfbc" translate="yes" xml:space="preserve">
          <source>Assert that the current URL scheme does not match the given scheme:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1af04d5f77ee2561f5c99269475d22d46be4796" translate="yes" xml:space="preserve">
          <source>Assert that the current URL scheme matches the given scheme:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0390737b8240c6c74c1a6ccf964f58ac49c0b8" translate="yes" xml:space="preserve">
          <source>Assert that the current fragment begins with the given fragment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ff1c6bdf061d1d6b07771390030e27840ae9f1" translate="yes" xml:space="preserve">
          <source>Assert that the current fragment does not match the given fragment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa51cb9e065b3bcac49c2a1804c18a3218890a4" translate="yes" xml:space="preserve">
          <source>Assert that the current fragment matches the given fragment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9c2a0cd4b788f4a3d1faa9d9539ed51f290986" translate="yes" xml:space="preserve">
          <source>Assert that the current location header matches the given URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165bacd63c22b76e7fd512e0946e8926b1b78269" translate="yes" xml:space="preserve">
          <source>Assert that the current path does not match the given path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b562ac8e0babaeef56680b153855c816e6fb61fc" translate="yes" xml:space="preserve">
          <source>Assert that the current path matches the given path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88d6dfe4a6357e417726cd941cd7190b587224a" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector has the given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf02121baef70e0f7ee03bbd959617c6953e16a" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector is not visible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df2eda525f43475a28f1057296319879d5584984" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector is present:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b17862cc48a0faa56bdd85c4a2d235f6da5e21" translate="yes" xml:space="preserve">
          <source>Assert that the element matching the given selector is visible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbe5b40f24ba0470b7a60978bd743803c306f19" translate="yes" xml:space="preserve">
          <source>Assert that the given array of values are available to be selected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bd97429e78ea18855645de1148986208b1b1c6" translate="yes" xml:space="preserve">
          <source>Assert that the given array of values are not available to be selected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fed60164c98d0550fed8025cd3a31aae0f6558c" translate="yes" xml:space="preserve">
          <source>Assert that the given checkbox is checked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923f1eea164ba5600119f7bc32642bf8764eb2b7" translate="yes" xml:space="preserve">
          <source>Assert that the given checkbox is not checked:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0323b39d464d185b7e088ec5547bb349bf544c1" translate="yes" xml:space="preserve">
          <source>Assert that the given cookie is not present:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e393a4c97942e3343abf109440f4af0933dc15" translate="yes" xml:space="preserve">
          <source>Assert that the given cookie is present:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db55b3e73673a3347e684b17fcc78ddfc8c5ce84" translate="yes" xml:space="preserve">
          <source>Assert that the given credentials are invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cacc22587178a7de3d2ebb1191d921d75550add" translate="yes" xml:space="preserve">
          <source>Assert that the given credentials are valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1e150ef05941dd101849606e63da1fe167fed3" translate="yes" xml:space="preserve">
          <source>Assert that the given dropdown does not have the given value selected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c605ef5048b7569a8d12d5c8649f2b88ff96d202" translate="yes" xml:space="preserve">
          <source>Assert that the given dropdown has the given value selected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f83ace0ab97eccfe0fdd7c189f4a6f6e4125b1b" translate="yes" xml:space="preserve">
          <source>Assert that the given field is disabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49bf226c6ab9963077a750d5b1a4155340a5348" translate="yes" xml:space="preserve">
          <source>Assert that the given field is enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36406d3eb54904ef57eb42d8e54ff043424c90dc" translate="yes" xml:space="preserve">
          <source>Assert that the given field is focused:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578e59309695a103e96fe39b8682cd0afaf6389d" translate="yes" xml:space="preserve">
          <source>Assert that the given field is not focused:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661f0eeb91633bafb5ab08e452edfb2448869b81" translate="yes" xml:space="preserve">
          <source>Assert that the given file does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb71de38de0282bbcac3ba5717d3671a48b535e9" translate="yes" xml:space="preserve">
          <source>Assert that the given file exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dc81f93c8ce40fd7bc99d6008e3ffa1c2f98de" translate="yes" xml:space="preserve">
          <source>Assert that the given header is not present on the response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ae94b90dbac3de8450d8fc3451a459de497fda" translate="yes" xml:space="preserve">
          <source>Assert that the given header is present on the response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce9b994bdf44875165b569384068143117e3fe8" translate="yes" xml:space="preserve">
          <source>Assert that the given input field does not have the given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82276f7b4b3f6f3d6e1c962eb97b1adc8eb40839" translate="yes" xml:space="preserve">
          <source>Assert that the given input field has the given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da379006873cce2f90962d7974f2ccbf18797713" translate="yes" xml:space="preserve">
          <source>Assert that the given link is not present on the page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d524d1662c7a0d13e86a350f4f2b72080d33ee78" translate="yes" xml:space="preserve">
          <source>Assert that the given link is present on the page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fbcfe673f80cd322a938a1b025befe842241b7" translate="yes" xml:space="preserve">
          <source>Assert that the given query string parameter is missing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e315c57dc764079ba4ed8ed8e1657efff3695d2" translate="yes" xml:space="preserve">
          <source>Assert that the given query string parameter is present and has a given value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b92d423a6cb385f767ea510ae80fd01d4edb37" translate="yes" xml:space="preserve">
          <source>Assert that the given query string parameter is present:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ed870ed63340f20c20cc2a3954ce99291d8ff8" translate="yes" xml:space="preserve">
          <source>Assert that the given radio field is not selected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22efd9a08ae8716f0188efdac5f77836406466b0" translate="yes" xml:space="preserve">
          <source>Assert that the given radio field is selected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587f4756d7df5d84ff4571f575ed1243590892d0" translate="yes" xml:space="preserve">
          <source>Assert that the given record has been soft deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bf76028f9ad9ee3bfbbb82c082bbb4c52163bc" translate="yes" xml:space="preserve">
          <source>Assert that the given source code is not present on the page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7447609879485837aed1921425e811cd0c5eeca1" translate="yes" xml:space="preserve">
          <source>Assert that the given source code is present on the page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b784daf14679319fa0629befac15963561c145" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5126e694ec9d4431ce1d61a268fdf5d8bdfb0b7f" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870378821de0399751cd0b035872783a61acde0b" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69af5666288bab079b5efb4825bbd20b271c722f" translate="yes" xml:space="preserve">
          <source>Assert that the given string is contained within the response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77e4b5161b50a1b26d3bb40f8e71affac2d5d1d" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dccde5b44670b3732b03dcdfb35cb109d64b286" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36442623d3335257c0fa3bbdbbdab5dfb3a7b58f" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb46d069dd86ae627726c0d78da3b4964530f740" translate="yes" xml:space="preserve">
          <source>Assert that the given string is not contained within the response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0151d47b3fbe7c8cc06de922a768c272c8284920" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84adff71eae2f4d8842da16f6fc05497a41df845" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2459c6345a5fb75460fa8d43b1a516bb783e14f" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52f3773479db77a2733677b1a6dfcf5ffe8c47b" translate="yes" xml:space="preserve">
          <source>Assert that the given strings are contained in order within the response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f829b9f0b58caacf66aee28304bf5f0480cc021c" translate="yes" xml:space="preserve">
          <source>Assert that the given text is not present on the page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457b2039596e2a1666ed4ed3ac0445923051c50a" translate="yes" xml:space="preserve">
          <source>Assert that the given text is not present within the selector:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb9e736900897d23c6bcd0f13976788759162c9" translate="yes" xml:space="preserve">
          <source>Assert that the given text is present on the page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a84c5c3c8d82919b16643973b60325f69626a1" translate="yes" xml:space="preserve">
          <source>Assert that the given text is present within the selector:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec119a153a09720647a32f79413c7bc9d915f0a" translate="yes" xml:space="preserve">
          <source>Assert that the given user is authenticated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dabd2cffa8146a072bc2219ff59eb38c875d4afe" translate="yes" xml:space="preserve">
          <source>Assert that the given value is available to be selected on the given field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6d9b3225c85cf7178c8c0de6964c93295ade55" translate="yes" xml:space="preserve">
          <source>Assert that the given view was returned by the route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83dd02b82b525798b628cd338739a10ddc9d9811" translate="yes" xml:space="preserve">
          <source>Assert that the page title contains the given text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801dd7b43fa21f9d34ad9c245ac74ded6b474b66" translate="yes" xml:space="preserve">
          <source>Assert that the page title matches the given text:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44cfe9adcf7852f44ba13db26e2c08f2eed062d" translate="yes" xml:space="preserve">
          <source>Assert that the response JSON has an array with the expected number of items at the given key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2a862ffa8b71005ae3bb3cc7d851830a625e4ce" translate="yes" xml:space="preserve">
          <source>Assert that the response JSON has the expected count of items at the given key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5336a84fbf25e2021a0d232e35667ad4602870ff" translate="yes" xml:space="preserve">
          <source>Assert that the response contains an exact match of the given JSON data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce919b2fba751c319e92267be1bf1146331afa3" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given JSON data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ae7215c96cb21a1ea5f4bbed4b14cf985533e1" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given JSON fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7ab113412d7b4d95863059f14433437497b5f7" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given JSON fragment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8815c98fc42f4ce5db81e308ae98b541e1305bb8" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie (unencrypted):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59255e887278683b783a9c36b6643a3508b6e7b0" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie and it is expired:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355033414607c817639f72722e02a5b135da1ee4" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie and it is not expired:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6560c446738409b66cdc2b19415dda7cfc650882" translate="yes" xml:space="preserve">
          <source>Assert that the response contains the given cookie:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65167dd0c83227dacb49ba134cca5727dc355c27" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the exact JSON fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="018c41907b7be1b4874913a221b906d8e4af16e1" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the exact JSON fragment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024a7efa350d568090d95b586a7eee9cc42d5938" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the given JSON fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aaf3de68b02ae7ad3794735fab972723feaa9bb" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contain the given JSON fragment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73ec795b1960308889b5daac2dfcfdf4034ba1b" translate="yes" xml:space="preserve">
          <source>Assert that the response does not contains the given cookie:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8459b45e1b8121652a36527b8234db32fe19ed" translate="yes" xml:space="preserve">
          <source>Assert that the response has a 200 status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022d6dcca83ed6e8546f9e9b97185dda84ecb898" translate="yes" xml:space="preserve">
          <source>Assert that the response has a 200 status code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6023bfac0349e42ea8773a2250eec13e84f56f" translate="yes" xml:space="preserve">
          <source>Assert that the response has a forbidden status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b8f3095af54a2b3eebd8044646ddb1ebbaadd4" translate="yes" xml:space="preserve">
          <source>Assert that the response has a forbidden status code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d048e4afabf601cf74701bf98a98138ad55f5fbe" translate="yes" xml:space="preserve">
          <source>Assert that the response has a given JSON structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17437cd65a5e741b7967caef6690b5511c5db6b0" translate="yes" xml:space="preserve">
          <source>Assert that the response has a given JSON structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f0163f51744224efef8414a9cd496cfee08e14" translate="yes" xml:space="preserve">
          <source>Assert that the response has a given code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ebddfd79a504d2cfeaf6b93d814934f16c70de" translate="yes" xml:space="preserve">
          <source>Assert that the response has a not found status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d982f84c237f47ba7858484dfa387f43037f83a7" translate="yes" xml:space="preserve">
          <source>Assert that the response has a not found status code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c87b750ae7772fa4eb89a04725e00116dd1a4db3" translate="yes" xml:space="preserve">
          <source>Assert that the response has a successful status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8faeff0636552ff4fdf83e0e22f20b99f7a8b4e" translate="yes" xml:space="preserve">
          <source>Assert that the response has a successful status code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b934b988342fcd1f113eaacd549a040d524d8f1f" translate="yes" xml:space="preserve">
          <source>Assert that the response has no JSON validation errors for the given keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7980cf77d192333dc9ed9106c47abd0810bd1d2a" translate="yes" xml:space="preserve">
          <source>Assert that the response has the exact given JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdabaf2b35245de5ec1e05b06e74c96778b33fac" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given JSON validation errors for the given keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04210348bf62e983204c04b6c1e09ba52f85354c" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given JSON validation errors for the given keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f667c96292bdd82732cbded7186533579d27970c" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given URI value in the &lt;code&gt;Location&lt;/code&gt; header:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee367a250fd86b37fe6d94f734dcb68145835c7c" translate="yes" xml:space="preserve">
          <source>Assert that the response has the given status code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652de4f0c3e9dea67a2cd8eefa80454721801702" translate="yes" xml:space="preserve">
          <source>Assert that the response is a redirect to a given URI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964fa1ff5229b8385dae89a06a5363ec1432fc09" translate="yes" xml:space="preserve">
          <source>Assert that the response is a superset of the given JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50fa7dcd38d47801d4d8e84fdffe3ad86108576" translate="yes" xml:space="preserve">
          <source>Assert that the response view equals the given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe750b63d2b00e61e1faee09981bb115b01c74d" translate="yes" xml:space="preserve">
          <source>Assert that the response view has a given list of bound data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe97ca6e45cf2433f8da1cb194d7fbc3bceefda" translate="yes" xml:space="preserve">
          <source>Assert that the response view has a given list of data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1a9e6e96cf1866cf809ad66f23eb8c2eed7668" translate="yes" xml:space="preserve">
          <source>Assert that the response view has a given piece of bound data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deef0ee98fa9728de119324f3c764c882e35c552" translate="yes" xml:space="preserve">
          <source>Assert that the response view is missing a piece of bound data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93b74cf0b6a04e0c9cf195f8c6c64bafdc0458c" translate="yes" xml:space="preserve">
          <source>Assert that the response view is missing a piece of bound data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e71d2bd5965c627cb3adc1d0c1d558103152d1" translate="yes" xml:space="preserve">
          <source>Assert that the response view was given a piece of data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3641a5126b05d36457e1bae09691ef9ba20712" translate="yes" xml:space="preserve">
          <source>Assert that the session contains an error for the given field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0597e93fa7f7f93f19a719ae6880033949ef5936" translate="yes" xml:space="preserve">
          <source>Assert that the session contains the given piece of data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608712f37ecd700ffceccbedd8168f52c10dce28" translate="yes" xml:space="preserve">
          <source>Assert that the session does not contain the given key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3cf981a6e790491fb0688257af62d4a94cd410" translate="yes" xml:space="preserve">
          <source>Assert that the session does not have a given key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2b66e049d6124ed6703cb4ea8835e77749ec52" translate="yes" xml:space="preserve">
          <source>Assert that the session has a given list of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba74edd563f4392a3ffd943984d0bcce30b3033" translate="yes" xml:space="preserve">
          <source>Assert that the session has a given list of values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3962830bc6a619d320752781feea9879768e9a96" translate="yes" xml:space="preserve">
          <source>Assert that the session has a given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97d10ae2a17d11267690a4af6cb66bb5051b5eb" translate="yes" xml:space="preserve">
          <source>Assert that the session has no errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acb608efd0c436dd386b25e3673bc906c8434b6" translate="yes" xml:space="preserve">
          <source>Assert that the session has no errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ce2691c35afbd7e89c4036739c22a6b22ce6fc" translate="yes" xml:space="preserve">
          <source>Assert that the session has the given errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a018384a0a1aea5aad29cfd9da0b38f78c6361" translate="yes" xml:space="preserve">
          <source>Assert that the session has the given errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfef2dee5fd36ef82ad053a8691a43b0e8b3fedb" translate="yes" xml:space="preserve">
          <source>Assert that the user is authenticated as the given user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c826831d468b00abd68a96df8962d46c7310a07" translate="yes" xml:space="preserve">
          <source>Assert that the user is authenticated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8df7aec290c38a685afa149b2d68b13eb9e332" translate="yes" xml:space="preserve">
          <source>Assert that the user is not authenticated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d340e990244282163ebdda6cb5fe07177fab1d4" translate="yes" xml:space="preserve">
          <source>Assert the given record has been deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca736d6076c09426262eb873602028c01c8e7e4" translate="yes" xml:space="preserve">
          <source>Assert the total amount of times a notification was sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10bf6d3eee1ea407454bcc6e4f10a91cb9b95eaf" translate="yes" xml:space="preserve">
          <source>Assert whether the response is redirecting to a given URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc8cf936abc189f5169abed88a612885d3e5732" translate="yes" xml:space="preserve">
          <source>Asserts that the response contains the given cookie and equals the optional value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f637d0270d77b6391f0ed6ceabdb77c01435a6f" translate="yes" xml:space="preserve">
          <source>Asserts that the response contains the given cookie and is expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c66e6890f0aeb212d95f8339c366dcb7cde2a2" translate="yes" xml:space="preserve">
          <source>Asserts that the response contains the given cookie and is not expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb2058fc1584e991c9f96b8ac0e422e63a489d8" translate="yes" xml:space="preserve">
          <source>Asserts that the response contains the given header and equals the optional value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fa4482807a76d508b7d420503663791bb79091" translate="yes" xml:space="preserve">
          <source>Asserts that the response does not contains the given cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db41ec521c9e4b8ad99655c57e8b271c7cc466f" translate="yes" xml:space="preserve">
          <source>Asserts that the response does not contains the given header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962fc1300424f62c92f1f4d576a5446625c5e58a" translate="yes" xml:space="preserve">
          <source>Asset Directory Flattened</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e338624cee29d0effead85b0dd0e70de783b4c" translate="yes" xml:space="preserve">
          <source>Assets</source>
          <target state="translated">Assets</target>
        </trans-unit>
        <trans-unit id="85bd8a3b0eaf4a3e6e935fadda7279be1ce54e8c" translate="yes" xml:space="preserve">
          <source>Assign a set of tags to a given binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2051b02dd4481797ce85cc696240808839ada22" translate="yes" xml:space="preserve">
          <source>Assigning Middleware To Routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bedd190714089ed88e9c136b07b6323f45e3182" translate="yes" xml:space="preserve">
          <source>Assigning Scopes To Tokens</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99698f50741732a6953dd5811e1ef92fdba6ebce" translate="yes" xml:space="preserve">
          <source>Associate the model instance to the given parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a160d64deb73a462ae3249bf025a506279d712" translate="yes" xml:space="preserve">
          <source>At its core, Laravel's authentication facilities are made up of &quot;guards&quot; and &quot;providers&quot;. Guards define how users are authenticated for each request. For example, Laravel ships with a &lt;code&gt;session&lt;/code&gt; guard which maintains state using session storage and cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a0d4206aed697ddb5ecd459ddfbc17807d57c0" translate="yes" xml:space="preserve">
          <source>Atomic Locks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64211874c3a7b987b48f98f4ade32d227170c277" translate="yes" xml:space="preserve">
          <source>Atomic locks allow for the manipulation of distributed locks without worrying about race conditions. For example, &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt; uses atomic locks to ensure that only one remote task is being executed on a server at a time. You may create and manage locks using the &lt;code&gt;Cache::lock&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dd4e66045b7a8be38ecc3eadc05cf4daf73e15" translate="yes" xml:space="preserve">
          <source>Attach a collection of models to the parent instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a24cf31fa6eec263a185bb2b5f39b79217366c7" translate="yes" xml:space="preserve">
          <source>Attach a file to the message from storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a80a3ffbad622b215491e1b418981795e7c0246" translate="yes" xml:space="preserve">
          <source>Attach a file to the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6035595c5ab20b4bb89a83768ebf848da473e45" translate="yes" xml:space="preserve">
          <source>Attach a model instance to the parent model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be70a1cbc351550ffd17936cd7a1ffeef4b6923a" translate="yes" xml:space="preserve">
          <source>Attach a model to the parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66470613886b1f5a6c98d58d3da91eacf15c780a" translate="yes" xml:space="preserve">
          <source>Attach all of the records that aren't in the given current records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2a525f338ae32878dddbfdd9f9eed114e2a1dd" translate="yes" xml:space="preserve">
          <source>Attach in-memory data as an attachment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bb828c2a014247b7b1a11774c6d4a5efb94207" translate="yes" xml:space="preserve">
          <source>Attaching / Detaching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb3ef573b648560f9f62ba945508fb044575953" translate="yes" xml:space="preserve">
          <source>Attaching A Composer To Multiple Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9c6cf4caa8b2ca0df1f95995279808ba2bcee8" translate="yes" xml:space="preserve">
          <source>Attaching Cookies To Responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d2f9328bd38d7be0e5b3bc08454b566bfda4fa" translate="yes" xml:space="preserve">
          <source>Attaching Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168777c6fff374540005f5503b535a02f66cca08" translate="yes" xml:space="preserve">
          <source>Attaching Headers To Responses</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6771ade6e8965a499bc298107ffb52e9a18dd7e3" translate="yes" xml:space="preserve">
          <source>Attachments</source>
          <target state="translated">Attachments</target>
        </trans-unit>
        <trans-unit id="1c7484c84b8afc27c3cbd9ab360e50c132cca0cd" translate="yes" xml:space="preserve">
          <source>Attachments also allow you to specify an array of data that should be presented to the user. The given data will be presented in a table-style format for easy reading:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150cf9035d382bdee57fdd369ceec339a670b319" translate="yes" xml:space="preserve">
          <source>Attempt to acquire the lock for the given number of seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f158999be881e951c1284a3581660768782e6823" translate="yes" xml:space="preserve">
          <source>Attempt to acquire the lock.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2565da53a48d6e2ca2ceda42de7928840fb63be0" translate="yes" xml:space="preserve">
          <source>Attempt to authenticate a user using the given credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d619fa5b3b0ee1ca87a7297b1b7648b2457993" translate="yes" xml:space="preserve">
          <source>Attempt to authenticate using HTTP Basic Auth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4fad6d88f564462e52a6599ed29452a525fe68" translate="yes" xml:space="preserve">
          <source>Attempt to authenticate using basic authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f630fdf0ae1a6273eeff9ab681774ede68fe34" translate="yes" xml:space="preserve">
          <source>Attempt to get the broker from the local cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f283b4691fc364bf90a784aa52044520d7df7e8" translate="yes" xml:space="preserve">
          <source>Attempt to get the connection from the local cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df1a10b2a97f9828a6bdd9a31e62e7b7db02692" translate="yes" xml:space="preserve">
          <source>Attempt to get the disk from the local cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253d00ac28f3b44909371bc6980ab435749bfdcf" translate="yes" xml:space="preserve">
          <source>Attempt to get the guard from the local cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7919d642d2c9ea752abb865c61696a79d06d9f02" translate="yes" xml:space="preserve">
          <source>Attempt to get the log from the local cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc66682163ef6009916b8aef037d1eb61a2b27e" translate="yes" xml:space="preserve">
          <source>Attempt to get the store from the local cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d3080c0404f58e22bfa378e035eef9a6d638ba" translate="yes" xml:space="preserve">
          <source>Attempt to guess the name of the inverse of the relation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3dadfb472486869e1f527e18e3a8980abdef9f" translate="yes" xml:space="preserve">
          <source>Attempt to guess the table name and &quot;creation&quot; status of the given migration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67b825500c5ff8497b31840e6e418306218579a" translate="yes" xml:space="preserve">
          <source>Attempt to log the user into the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a98616aaca4b399484718c484cd8b07fa6c50ff" translate="yes" xml:space="preserve">
          <source>Attempt to match the case on two strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a73f5524f9095a2a2b35811b9aff0fed03f10aa" translate="yes" xml:space="preserve">
          <source>Attempt to obtain a scheduling mutex for the given event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06fecadf38c60d501f7b2a2c75c9e508cd3e0eb" translate="yes" xml:space="preserve">
          <source>Attempt to obtain an event mutex for the given event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a30c217165d14a7c9866c7d1e2b97e655b03d7" translate="yes" xml:space="preserve">
          <source>Attempt to transform the given parameter into a class instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1364b96e1d461d3d9b81eafa7c666f27d1389b39" translate="yes" xml:space="preserve">
          <source>Attempting</source>
          <target state="translated">Attempting</target>
        </trans-unit>
        <trans-unit id="c1a8c0a71cc27208844197855f59cd13d9308593" translate="yes" xml:space="preserve">
          <source>Attempting (Auth\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ae97474faa78886f24a837599ff8af8925029e" translate="yes" xml:space="preserve">
          <source>Attempting::__construct()</source>
          <target state="translated">Attempting::__construct()</target>
        </trans-unit>
        <trans-unit id="4ded70da4a79a060abd31141ccd8e8c91987761f" translate="yes" xml:space="preserve">
          <source>Attribute Casting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795070ea2ffe3a2d144cfeed6ac254d16a525bf0" translate="yes" xml:space="preserve">
          <source>August 23rd, 2016</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767a4b43d6db8e3ad1f1f88ceae7ed89e9200336" translate="yes" xml:space="preserve">
          <source>August 23rd, 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d64eff1309bd0a88d418c4e78348c5a699f8ab" translate="yes" xml:space="preserve">
          <source>August 30th, 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0846fb8d552dfc079edc2ee2a497570b3fc723fc" translate="yes" xml:space="preserve">
          <source>August 30th, 2019</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b71e0f071c1dc41428597982a681c26721bef2d" translate="yes" xml:space="preserve">
          <source>August 30th, 2020</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb5affedec8a33ab4464473962e44904745712b" translate="yes" xml:space="preserve">
          <source>August 4th, 2015</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539665992e659933b82b69495072321b3e09a230" translate="yes" xml:space="preserve">
          <source>August 7th, 2018</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d0f5fbca4b84a0ac3992970ff0119954a9281f" translate="yes" xml:space="preserve">
          <source>Auth</source>
          <target state="translated">Auth</target>
        </trans-unit>
        <trans-unit id="860ab2d37288138d7e4785eba967f0770ddbab62" translate="yes" xml:space="preserve">
          <source>Auth (Instance)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c328b09170cfa6258f8cd180df75c631aeb9677f" translate="yes" xml:space="preserve">
          <source>Auth (Support\Facades)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23596a945b11a05937fad93c74e15a76d1a44610" translate="yes" xml:space="preserve">
          <source>Auth::getFacadeAccessor()</source>
          <target state="translated">Auth::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="e6fbd4c504147e2a88b5c01801a2a7b1a2bc7055" translate="yes" xml:space="preserve">
          <source>Auth::routes()</source>
          <target state="translated">Auth::routes()</target>
        </trans-unit>
        <trans-unit id="b80dd65536aab900e98993cfd465a9cb98a7d3a1" translate="yes" xml:space="preserve">
          <source>AuthMakeCommand</source>
          <target state="translated">AuthMakeCommand</target>
        </trans-unit>
        <trans-unit id="e7fc372ee680169d4b1c470d5b28dbd2020b20d4" translate="yes" xml:space="preserve">
          <source>AuthManager</source>
          <target state="translated">AuthManager</target>
        </trans-unit>
        <trans-unit id="7251a4d113a62163a2223d05d3d893c8620ffef7" translate="yes" xml:space="preserve">
          <source>AuthServiceProvider</source>
          <target state="translated">AuthServiceProvider</target>
        </trans-unit>
        <trans-unit id="94ecd40fc1a8dbd07e87b1fc66b188bef480a2c5" translate="yes" xml:space="preserve">
          <source>AuthServiceProvider (Foundation\Support)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e108c7903308759d384574174a58566354defce9" translate="yes" xml:space="preserve">
          <source>AuthServiceProvider::policies()</source>
          <target state="translated">AuthServiceProvider::policies()</target>
        </trans-unit>
        <trans-unit id="790cae716dc7baf23783007a76232e60743d6382" translate="yes" xml:space="preserve">
          <source>AuthServiceProvider::register()</source>
          <target state="translated">AuthServiceProvider::register()</target>
        </trans-unit>
        <trans-unit id="f41acc1771f527a8113e31947e80ed6934a04dfb" translate="yes" xml:space="preserve">
          <source>AuthServiceProvider::registerPolicies()</source>
          <target state="translated">AuthServiceProvider::registerPolicies()</target>
        </trans-unit>
        <trans-unit id="57c764a1ce0ffc281c23f9fd577e194651c77aab" translate="yes" xml:space="preserve">
          <source>Auth\Access</source>
          <target state="translated">Auth\Access</target>
        </trans-unit>
        <trans-unit id="b0519f942dc84e0b80e1a8555fb7d7a02d26899c" translate="yes" xml:space="preserve">
          <source>Auth\Events</source>
          <target state="translated">Auth\Events</target>
        </trans-unit>
        <trans-unit id="16b9f70213fceb8a627ca1fa85e94b3d1de1b894" translate="yes" xml:space="preserve">
          <source>Auth\Listeners</source>
          <target state="translated">Auth\Listeners</target>
        </trans-unit>
        <trans-unit id="eabef5151be7abce2bc7c67c0f498b69a9e46c49" translate="yes" xml:space="preserve">
          <source>Auth\Middleware</source>
          <target state="translated">Auth\Middleware</target>
        </trans-unit>
        <trans-unit id="9501b176a33141d16cf4081ba8cb48ddadfd4173" translate="yes" xml:space="preserve">
          <source>Auth\Notifications</source>
          <target state="translated">Auth\Notifications</target>
        </trans-unit>
        <trans-unit id="d77b932376e7bd7820b978a1f399123bcc5e4c78" translate="yes" xml:space="preserve">
          <source>Auth\Passwords</source>
          <target state="translated">Auth\Passwords</target>
        </trans-unit>
        <trans-unit id="1e5dd5117feb119667e36243560cbe8a8c49ebf5" translate="yes" xml:space="preserve">
          <source>Authenticatable</source>
          <target state="translated">Authenticatable</target>
        </trans-unit>
        <trans-unit id="6153701ceb3768f87b234f3a35f3dc1bb6d4a878" translate="yes" xml:space="preserve">
          <source>Authenticatable (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a27dd1004ed81b6e22f929ec713114090d8c4fa" translate="yes" xml:space="preserve">
          <source>Authenticatable::getAuthIdentifier()</source>
          <target state="translated">Authenticatable::getAuthIdentifier()</target>
        </trans-unit>
        <trans-unit id="3b501eb5e8049cb439c241f1124c0b097b3c27a9" translate="yes" xml:space="preserve">
          <source>Authenticatable::getAuthIdentifierName()</source>
          <target state="translated">Authenticatable::getAuthIdentifierName()</target>
        </trans-unit>
        <trans-unit id="6e8c32142575593b02538db34065a932c6c3f46d" translate="yes" xml:space="preserve">
          <source>Authenticatable::getAuthPassword()</source>
          <target state="translated">Authenticatable::getAuthPassword()</target>
        </trans-unit>
        <trans-unit id="62150cff1f89691dec7f1d6d854c9dd76b498247" translate="yes" xml:space="preserve">
          <source>Authenticatable::getRememberToken()</source>
          <target state="translated">Authenticatable::getRememberToken()</target>
        </trans-unit>
        <trans-unit id="28d991ddceadcbb9659c7f7dff5243935ba4982c" translate="yes" xml:space="preserve">
          <source>Authenticatable::getRememberTokenName()</source>
          <target state="translated">Authenticatable::getRememberTokenName()</target>
        </trans-unit>
        <trans-unit id="ed3863d7f6be7a837d58023889acc31b1ecc6afd" translate="yes" xml:space="preserve">
          <source>Authenticatable::setRememberToken()</source>
          <target state="translated">Authenticatable::setRememberToken()</target>
        </trans-unit>
        <trans-unit id="94a019d48f07ddf82152c02bd251dfc0cec5e9e2" translate="yes" xml:space="preserve">
          <source>Authenticate</source>
          <target state="translated">Authenticate</target>
        </trans-unit>
        <trans-unit id="6edc2f2ff8cfa6afff76635a7cc07b2641ad3ef6" translate="yes" xml:space="preserve">
          <source>Authenticate (Auth\Middleware)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9f151a500df6e64e7a28706a6bb014eab7c445" translate="yes" xml:space="preserve">
          <source>Authenticate A User By ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c868177c14d10a7309dc3174b9b90a6761605e" translate="yes" xml:space="preserve">
          <source>Authenticate A User Instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4ee6de6c631dc48cca110c2a4a4c566a98276b" translate="yes" xml:space="preserve">
          <source>Authenticate A User Once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32235e6683ade39b0552d011fcda63a5aa77580" translate="yes" xml:space="preserve">
          <source>Authenticate the incoming request for a given channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa83a3dd0cf3be288b647fdb1e26a270879b313" translate="yes" xml:space="preserve">
          <source>Authenticate the request for channel access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e422fdeacbefe922444f4d930f3c11d8c59e32b1" translate="yes" xml:space="preserve">
          <source>Authenticate::__construct()</source>
          <target state="translated">Authenticate::__construct()</target>
        </trans-unit>
        <trans-unit id="7180bf5861919050f0a9b1a1fa87316cf43742ec" translate="yes" xml:space="preserve">
          <source>Authenticate::authenticate()</source>
          <target state="translated">Authenticate::authenticate()</target>
        </trans-unit>
        <trans-unit id="d4a3728dcad4e4cd02e16ca0cfceeaf01b32e547" translate="yes" xml:space="preserve">
          <source>Authenticate::handle()</source>
          <target state="translated">Authenticate::handle()</target>
        </trans-unit>
        <trans-unit id="3d7300a47459e6a9c6378ae11f41df057cc92593" translate="yes" xml:space="preserve">
          <source>Authenticate::redirectTo()</source>
          <target state="translated">Authenticate::redirectTo()</target>
        </trans-unit>
        <trans-unit id="54fb44b353a669d5e14db52e7ab6a38912e02337" translate="yes" xml:space="preserve">
          <source>AuthenticateSession</source>
          <target state="translated">AuthenticateSession</target>
        </trans-unit>
        <trans-unit id="d85ab7058215a52abea9f593b57f6fc9c5e2f8c0" translate="yes" xml:space="preserve">
          <source>AuthenticateSession (Session\Middleware)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a7f2619fc9efe65525ed8d99e4ac073f1e15b8" translate="yes" xml:space="preserve">
          <source>AuthenticateSession::__construct()</source>
          <target state="translated">AuthenticateSession::__construct()</target>
        </trans-unit>
        <trans-unit id="3921eef003cb30598ccad487b0b7512aa870dab2" translate="yes" xml:space="preserve">
          <source>AuthenticateSession::handle()</source>
          <target state="translated">AuthenticateSession::handle()</target>
        </trans-unit>
        <trans-unit id="e4819841effac0eb4c733d4f42a8a21bfe1300ae" translate="yes" xml:space="preserve">
          <source>AuthenticateSession::logout()</source>
          <target state="translated">AuthenticateSession::logout()</target>
        </trans-unit>
        <trans-unit id="f793a5e58f058fb18730bca198483d1fc763b671" translate="yes" xml:space="preserve">
          <source>AuthenticateSession::storePasswordHashInSession()</source>
          <target state="translated">AuthenticateSession::storePasswordHashInSession()</target>
        </trans-unit>
        <trans-unit id="6c7357432ea6e46ef3ac5c12c390be685d0861d5" translate="yes" xml:space="preserve">
          <source>AuthenticateWithBasicAuth</source>
          <target state="translated">AuthenticateWithBasicAuth</target>
        </trans-unit>
        <trans-unit id="000b97fb66ed22dcf7bc695eb587c7a348a4e64d" translate="yes" xml:space="preserve">
          <source>AuthenticateWithBasicAuth (Auth\Middleware)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc81e1b125aaa844ffe5ed572387b8bbfeee7b2b" translate="yes" xml:space="preserve">
          <source>AuthenticateWithBasicAuth::__construct()</source>
          <target state="translated">AuthenticateWithBasicAuth::__construct()</target>
        </trans-unit>
        <trans-unit id="29811205d6591cc12c9fdd9d46375c11a36abefc" translate="yes" xml:space="preserve">
          <source>AuthenticateWithBasicAuth::handle()</source>
          <target state="translated">AuthenticateWithBasicAuth::handle()</target>
        </trans-unit>
        <trans-unit id="c2be83769a05a163ea43a644bd9b6e3c549e3f71" translate="yes" xml:space="preserve">
          <source>Authenticated</source>
          <target state="translated">Authenticated</target>
        </trans-unit>
        <trans-unit id="9ef37e55d9966a6cedea9ffd5c72bf200bda591c" translate="yes" xml:space="preserve">
          <source>Authenticated (Auth\Events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa57870fdbcb363095eb7d28e427aa8710d1f3f" translate="yes" xml:space="preserve">
          <source>Authenticated::__construct()</source>
          <target state="translated">Authenticated::__construct()</target>
        </trans-unit>
        <trans-unit id="5f2fdc356106ada8cf075077ae34faebe861c4fc" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers</source>
          <target state="translated">AuthenticatesUsers</target>
        </trans-unit>
        <trans-unit id="0de6149e012e64c51456e05f7ac9a37474ce8f64" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers (Foundation\Auth)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf0242e2f5132e2a30c9bc32665a0b0dff77bec" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::attemptLogin()</source>
          <target state="translated">AuthenticatesUsers::attemptLogin()</target>
        </trans-unit>
        <trans-unit id="3998701f0cc0b2c6e41991ac38d8c1e9a0b8f5ea" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::authenticated()</source>
          <target state="translated">AuthenticatesUsers::authenticated()</target>
        </trans-unit>
        <trans-unit id="bc208b2b017cef4010dfa92611a928826fbbaf73" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::credentials()</source>
          <target state="translated">AuthenticatesUsers::credentials()</target>
        </trans-unit>
        <trans-unit id="79eda2ee3cb1e2308dd2822bb740b891205c886a" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::guard()</source>
          <target state="translated">AuthenticatesUsers::guard()</target>
        </trans-unit>
        <trans-unit id="007a796c41d1a048d3cb5b09cf7ab609b32c233b" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::loggedOut()</source>
          <target state="translated">AuthenticatesUsers::loggedOut()</target>
        </trans-unit>
        <trans-unit id="bf64b4b112d834c3d5e32e760975ef68c8fa0f67" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::login()</source>
          <target state="translated">AuthenticatesUsers::login()</target>
        </trans-unit>
        <trans-unit id="8625ea0beeaba1296dd00c99ad802f35f7ba418a" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::logout()</source>
          <target state="translated">AuthenticatesUsers::logout()</target>
        </trans-unit>
        <trans-unit id="88b002b702614dd268367ccca34d45d37c15a215" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::sendFailedLoginResponse()</source>
          <target state="translated">AuthenticatesUsers::sendFailedLoginResponse()</target>
        </trans-unit>
        <trans-unit id="299cb3c2c19f291597387c9620433c8d3a9516d7" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::sendLoginResponse()</source>
          <target state="translated">AuthenticatesUsers::sendLoginResponse()</target>
        </trans-unit>
        <trans-unit id="f9dcffdd9373bdc5bfa36bf1a689233cf6a9d831" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::showLoginForm()</source>
          <target state="translated">AuthenticatesUsers::showLoginForm()</target>
        </trans-unit>
        <trans-unit id="bdb3f1a04c9ad8f913611a3643913dfe47ea153c" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::username()</source>
          <target state="translated">AuthenticatesUsers::username()</target>
        </trans-unit>
        <trans-unit id="3a80b5b6d661ca53a09a4efcd29108fa42d01ac2" translate="yes" xml:space="preserve">
          <source>AuthenticatesUsers::validateLogin()</source>
          <target state="translated">AuthenticatesUsers::validateLogin()</target>
        </trans-unit>
        <trans-unit id="409174a70b4c668b2da825c8e34e494647dea904" translate="yes" xml:space="preserve">
          <source>Authenticating</source>
          <target state="translated">Authenticating</target>
        </trans-unit>
        <trans-unit id="ee1acfa55eb1476c86c5c4a68f256a67b25289ab" translate="yes" xml:space="preserve">
          <source>Authentication</source>
          <target state="translated">Authentication</target>
        </trans-unit>
        <trans-unit id="130f7173ee785f96a649bda8543220de66be7e28" translate="yes" xml:space="preserve">
          <source>Authentication Assertions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22142bb0d27085770a117c412d344e09c3e331a7" translate="yes" xml:space="preserve">
          <source>Authentication Directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f329f52262b26648f17a730ad7dc8643dae49a" translate="yes" xml:space="preserve">
          <source>Authentication Guard Customization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e58e33a5b95187fb7aa7d23a1baeb1d7da5f90" translate="yes" xml:space="preserve">
          <source>Authentication Quickstart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1cce4f75d26093c7cb32e71281a2a9f922488e" translate="yes" xml:space="preserve">
          <source>AuthenticationException</source>
          <target state="translated">AuthenticationException</target>
        </trans-unit>
        <trans-unit id="552ecbd855376086e377d9d651eaff7149d90fa3" translate="yes" xml:space="preserve">
          <source>Authorizable</source>
          <target state="translated">Authorizable</target>
        </trans-unit>
        <trans-unit id="cf6e6ffd0852961d5d5e53c3eed0e5e9993ff335" translate="yes" xml:space="preserve">
          <source>Authorizable (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5cd85dd84b9ee902ab87e959a4b3c4fe9704f3" translate="yes" xml:space="preserve">
          <source>Authorizable (Foundation\Auth)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2571675e460b3f37b33d924c466f81f291adc1f" translate="yes" xml:space="preserve">
          <source>Authorizable::can()</source>
          <target state="translated">Authorizable::can()</target>
        </trans-unit>
        <trans-unit id="bbec42cfb66f1f230afc47af35d14b637fc660fb" translate="yes" xml:space="preserve">
          <source>Authorizable::cannot()</source>
          <target state="translated">Authorizable::cannot()</target>
        </trans-unit>
        <trans-unit id="349f93cbe26c78a70866e519bf50838f14704243" translate="yes" xml:space="preserve">
          <source>Authorizable::cant()</source>
          <target state="translated">Authorizable::cant()</target>
        </trans-unit>
        <trans-unit id="5e25ce007aa95ea2ea8b158aee9c630a32ea5616" translate="yes" xml:space="preserve">
          <source>Authorization</source>
          <target state="translated">Authorization</target>
        </trans-unit>
        <trans-unit id="dcb49b390ed8b5968056c4036b1c556659f87122" translate="yes" xml:space="preserve">
          <source>Authorization Callback Model Binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268c5abed2b2e27019a00d563d21521767e026f8" translate="yes" xml:space="preserve">
          <source>AuthorizationException</source>
          <target state="translated">AuthorizationException</target>
        </trans-unit>
        <trans-unit id="a171a0034f023bec9f80ff7d4571ee70d129ea56" translate="yes" xml:space="preserve">
          <source>AuthorizationException (Auth\Access)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4677b6a26f23406496ed953159c0e914b83b04e" translate="yes" xml:space="preserve">
          <source>Authorize</source>
          <target state="translated">Authorize</target>
        </trans-unit>
        <trans-unit id="3dfe7cf43e732a6aade5613d41e1c01202343979" translate="yes" xml:space="preserve">
          <source>Authorize (Auth\Middleware)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5743d8f5acd3dc500aa21e391fc058b47106fdc" translate="yes" xml:space="preserve">
          <source>Authorize a given action for a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd60004aaf9b21384b7a10b8ef012885ea8c097" translate="yes" xml:space="preserve">
          <source>Authorize a given action for the current user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6fa322490fbbbb25b0ed57c5e5ffc9dfa3c772" translate="yes" xml:space="preserve">
          <source>Authorize a resource action based on the incoming request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120190789ad51bedf15096aa5927714550f0ced1" translate="yes" xml:space="preserve">
          <source>Authorize::__construct()</source>
          <target state="translated">Authorize::__construct()</target>
        </trans-unit>
        <trans-unit id="58d3e8e9bcfb9c155b107d2f4480e58276fa693a" translate="yes" xml:space="preserve">
          <source>Authorize::getGateArguments()</source>
          <target state="translated">Authorize::getGateArguments()</target>
        </trans-unit>
        <trans-unit id="cea09cbe054b165e19b071272052a8c749f08ae6" translate="yes" xml:space="preserve">
          <source>Authorize::getModel()</source>
          <target state="translated">Authorize::getModel()</target>
        </trans-unit>
        <trans-unit id="9434411749dc3c95d8ae1fb3bdd6f2339f705dc8" translate="yes" xml:space="preserve">
          <source>Authorize::handle()</source>
          <target state="translated">Authorize::handle()</target>
        </trans-unit>
        <trans-unit id="f5cfb611003e6cefa2beb3645cff01a1c991d51e" translate="yes" xml:space="preserve">
          <source>Authorize::isClassName()</source>
          <target state="translated">Authorize::isClassName()</target>
        </trans-unit>
        <trans-unit id="f8b471315a6148c76e88ebc398c574cd258c1091" translate="yes" xml:space="preserve">
          <source>AuthorizesRequests</source>
          <target state="translated">AuthorizesRequests</target>
        </trans-unit>
        <trans-unit id="1bfa3f7ee85c3acd56442675afb074b14038e98f" translate="yes" xml:space="preserve">
          <source>AuthorizesRequests (Foundation\Auth)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7802103658af3738b57cd67b6c19ab3ec82a3b" translate="yes" xml:space="preserve">
          <source>AuthorizesRequests::authorize()</source>
          <target state="translated">AuthorizesRequests::authorize()</target>
        </trans-unit>
        <trans-unit id="5104e9127249923a1bfb300740399d3c783a8c7a" translate="yes" xml:space="preserve">
          <source>AuthorizesRequests::authorizeForUser()</source>
          <target state="translated">AuthorizesRequests::authorizeForUser()</target>
        </trans-unit>
        <trans-unit id="a74c1606965f523b7271239d27833db966114167" translate="yes" xml:space="preserve">
          <source>AuthorizesRequests::authorizeResource()</source>
          <target state="translated">AuthorizesRequests::authorizeResource()</target>
        </trans-unit>
        <trans-unit id="7071a4f7bf5da37f647248cbae6184f71b269ad0" translate="yes" xml:space="preserve">
          <source>AuthorizesRequests::normalizeGuessedAbilityName()</source>
          <target state="translated">AuthorizesRequests::normalizeGuessedAbilityName()</target>
        </trans-unit>
        <trans-unit id="bd67cec640ffa5ada3a1d2fd99ee4272003aa59b" translate="yes" xml:space="preserve">
          <source>AuthorizesRequests::parseAbilityAndArguments()</source>
          <target state="translated">AuthorizesRequests::parseAbilityAndArguments()</target>
        </trans-unit>
        <trans-unit id="e46fa0ba1c4650404e4937156d75689cc2aef4c5" translate="yes" xml:space="preserve">
          <source>AuthorizesRequests::resourceAbilityMap()</source>
          <target state="translated">AuthorizesRequests::resourceAbilityMap()</target>
        </trans-unit>
        <trans-unit id="9b7497f0986e0f5babb945afba09a6891cb31d9d" translate="yes" xml:space="preserve">
          <source>AuthorizesRequests::resourceMethodsWithoutModels()</source>
          <target state="translated">AuthorizesRequests::resourceMethodsWithoutModels()</target>
        </trans-unit>
        <trans-unit id="f97923461c11a8c4f18eb139ae0ac4883f37be27" translate="yes" xml:space="preserve">
          <source>Authorizing Actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57eae2301f6e2e9819edcb119a3b062fce2d5138" translate="yes" xml:space="preserve">
          <source>Authorizing Actions Using Policies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8afaa9a1e7ae77ec47d5eb82722e33b7cd0626" translate="yes" xml:space="preserve">
          <source>Authorizing Channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f269abe1c535aa7d8a8ee6859d411ce6dfcd1e0" translate="yes" xml:space="preserve">
          <source>Authorizing Form Requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfdd2b939f6f3bbcb48b5729795acca6ff5e8db" translate="yes" xml:space="preserve">
          <source>Authorizing Presence Channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3441c672f7c086dbbde13fee041f158365896122" translate="yes" xml:space="preserve">
          <source>Auto-Completion</source>
          <target state="translated">Auto-Completion</target>
        </trans-unit>
        <trans-unit id="4f4758d1d2b9e5deb58550a71c1300d5b098886d" translate="yes" xml:space="preserve">
          <source>Auto-Incrementing IDs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c8edb905c396dc7c9bfb622ce204732b5007c6" translate="yes" xml:space="preserve">
          <source>Auto-incrementing UNSIGNED BIGINT (primary key) equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fc2c9b9d47e49dbdb95d09071e398d10ef6c6b" translate="yes" xml:space="preserve">
          <source>Auto-incrementing UNSIGNED INTEGER (primary key) equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da86d65709a9f5949785c386135bd980fcae4b9" translate="yes" xml:space="preserve">
          <source>Auto-incrementing UNSIGNED MEDIUMINT (primary key) equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c6cce737287f9fca0e0f0f2011c0a0009ec71b" translate="yes" xml:space="preserve">
          <source>Auto-incrementing UNSIGNED SMALLINT (primary key) equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704ec373528693e683872b31b44194728baac365" translate="yes" xml:space="preserve">
          <source>Auto-incrementing UNSIGNED TINYINT (primary key) equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d04c67ce4415b0100fef1d7082f93a04ad4202" translate="yes" xml:space="preserve">
          <source>Autoloader Optimization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce46a70ccafcb1a42a5cc7b7e4e2fec95b437985" translate="yes" xml:space="preserve">
          <source>Automatic Injection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0eb1ac0f510a19b7f39b30aada09265da43e23b" translate="yes" xml:space="preserve">
          <source>Automatic Redirection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9def0dd43e47495516f35f8f996ab24794078146" translate="yes" xml:space="preserve">
          <source>Automatic Streaming</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ce27fbf195ec2e139ebc10751a2013fcdfffca" translate="yes" xml:space="preserve">
          <source>Available Assertions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da52e94b752772e634cc4a0edc82f3eba5ac157" translate="yes" xml:space="preserve">
          <source>Available Channel Drivers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc3d16c0315e556aafb8d98bced5235ed0f5292" translate="yes" xml:space="preserve">
          <source>Available Column Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60f3aad9ea0bc0a0022c3d3685cc69a359b6345" translate="yes" xml:space="preserve">
          <source>Available Command Aliases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d850e12d26c8a0eda3a3e640de04d971000e9cf" translate="yes" xml:space="preserve">
          <source>Available Index Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfa1a6b8147fd64b8502ed64be5e62871a13357" translate="yes" xml:space="preserve">
          <source>Available Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f992e18d5b19a00d86e5b9464f3af691db7409df" translate="yes" xml:space="preserve">
          <source>Available Router Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52935690afdfbfb2f460de1cc31f4b264767112f" translate="yes" xml:space="preserve">
          <source>Available Validation Rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce12205c9cc2431cb20b6aaa97e3df9c39d8b484" translate="yes" xml:space="preserve">
          <source>Available constraints are: &lt;em&gt;min_width&lt;/em&gt;, &lt;em&gt;max_width&lt;/em&gt;, &lt;em&gt;min_height&lt;/em&gt;, &lt;em&gt;max_height&lt;/em&gt;, &lt;em&gt;width&lt;/em&gt;, &lt;em&gt;height&lt;/em&gt;, &lt;em&gt;ratio&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497856038fa07f22c070ca10a76d5dc6b840cdde" translate="yes" xml:space="preserve">
          <source>AwsS3Adapter</source>
          <target state="translated">AwsS3Adapter</target>
        </trans-unit>
        <trans-unit id="810b61b4ee59c36d0f98440a589dcb700ae7aa72" translate="yes" xml:space="preserve">
          <source>BIGINT equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a611406607ab6eb07c7979cab825be02b7640d09" translate="yes" xml:space="preserve">
          <source>BLOB equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2d8c58cec42db010b0e5ce33c8d03265a6a076" translate="yes" xml:space="preserve">
          <source>BOOLEAN equivalent column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6a4bc03f537e81b17b74f150ab35244b1c5098" translate="yes" xml:space="preserve">
          <source>Background Tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93a82aabe0fa8b97d0c801d88a5ed7f0a40dd6e" translate="yes" xml:space="preserve">
          <source>BadMethodCallException</source>
          <target state="translated">BadMethodCallException</target>
        </trans-unit>
        <trans-unit id="2498f2cccfe28e403622467de948be1461e4a18c" translate="yes" xml:space="preserve">
          <source>Balance Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb3b5ae75122324a94951155ebe8516ec76be1f" translate="yes" xml:space="preserve">
          <source>BaseCommand</source>
          <target state="translated">BaseCommand</target>
        </trans-unit>
        <trans-unit id="f8210313e9bc593ff32f365f8a988cfdf2e8f44d" translate="yes" xml:space="preserve">
          <source>BaseCommand (Database\Console\Migrations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d43bd471bd813226e9d3a81630b674f341e4d37" translate="yes" xml:space="preserve">
          <source>BaseCommand::getMigrationPath()</source>
          <target state="translated">BaseCommand::getMigrationPath()</target>
        </trans-unit>
        <trans-unit id="33953c81122032f1331b40281bde1375ac6d0b1b" translate="yes" xml:space="preserve">
          <source>BaseCommand::getMigrationPaths()</source>
          <target state="translated">BaseCommand::getMigrationPaths()</target>
        </trans-unit>
        <trans-unit id="8314267a346e7139b5b0c9a7816b952d097f9cec" translate="yes" xml:space="preserve">
          <source>BaseCommand::usingRealPath()</source>
          <target state="translated">BaseCommand::usingRealPath()</target>
        </trans-unit>
        <trans-unit id="e5a230f63b769ad102be58a88abd417b73d644fa" translate="yes" xml:space="preserve">
          <source>Basic Controllers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225001e8615743a1f04c54435c41bc89ae1f11a2" translate="yes" xml:space="preserve">
          <source>Basic Routing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb446e135d13879eb570212b4c67d84a8bc399dc" translate="yes" xml:space="preserve">
          <source>Basic Usage Of Exists Rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411b4c135aa46c96dbc18f98d3692a1f29e475c1" translate="yes" xml:space="preserve">
          <source>Basic Usage Of MIME Rule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca70906716cc04bd28ef8ee9706283f20f6f8b58" translate="yes" xml:space="preserve">
          <source>Batch Import</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f49945f9dacd9f1860ec74bf8814a735373ab8a" translate="yes" xml:space="preserve">
          <source>Bcrypt is a great choice for hashing passwords because its &quot;work factor&quot; is adjustable, which means that the time it takes to generate a hash can be increased as hardware power increases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38e1fd65cfc0cc8846d713869e1d75d4e445e43" translate="yes" xml:space="preserve">
          <source>BcryptHasher</source>
          <target state="translated">BcryptHasher</target>
        </trans-unit>
        <trans-unit id="4ae5199efd42ef9b2589d50281f7374a1210f5eb" translate="yes" xml:space="preserve">
          <source>BcryptHasher (Hashing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b126eb46360e3ed676ec772a812368bf3f779cb4" translate="yes" xml:space="preserve">
          <source>BcryptHasher::__construct()</source>
          <target state="translated">BcryptHasher::__construct()</target>
        </trans-unit>
        <trans-unit id="bfc8faea942e454c223cab2131e8f23d375618bd" translate="yes" xml:space="preserve">
          <source>BcryptHasher::check()</source>
          <target state="translated">BcryptHasher::check()</target>
        </trans-unit>
        <trans-unit id="c8b6ad0c7e12e847d8826015e40fdb394a6fa346" translate="yes" xml:space="preserve">
          <source>BcryptHasher::cost()</source>
          <target state="translated">BcryptHasher::cost()</target>
        </trans-unit>
        <trans-unit id="95c3bd694550796978526b31479fedd3547e41d4" translate="yes" xml:space="preserve">
          <source>BcryptHasher::make()</source>
          <target state="translated">BcryptHasher::make()</target>
        </trans-unit>
        <trans-unit id="00c7cf520ae20642c92a98bfcd878b0e8247438b" translate="yes" xml:space="preserve">
          <source>BcryptHasher::needsRehash()</source>
          <target state="translated">BcryptHasher::needsRehash()</target>
        </trans-unit>
        <trans-unit id="584550ac189ab7d1da58b59e55fbc8012586201b" translate="yes" xml:space="preserve">
          <source>BcryptHasher::setRounds()</source>
          <target state="translated">BcryptHasher::setRounds()</target>
        </trans-unit>
        <trans-unit id="d818a681b7891d1614bbc3da835d7447a2fb5f50" translate="yes" xml:space="preserve">
          <source>Be sure to add a &lt;a href=&quot;eloquent-mutators#date-mutators&quot;&gt;date mutator&lt;/a&gt; for &lt;code&gt;trial_ends_at&lt;/code&gt; to your model definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b953d90e07e626969922639791e33155063695" translate="yes" xml:space="preserve">
          <source>Be very careful when echoing content that is supplied by users of your application. Always use the escaped, double curly brace syntax to prevent XSS attacks when displaying user supplied data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e3de8098e0ef7d6d99eb5d7beecb45dfb587b5" translate="yes" xml:space="preserve">
          <source>Beanstalkd</source>
          <target state="translated">Beanstalkd</target>
        </trans-unit>
        <trans-unit id="63b66612e67233124fb6ed5e78e2c3fbc3631424" translate="yes" xml:space="preserve">
          <source>Beanstalkd: &lt;code&gt;pda/pheanstalk ~3.0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a2266d57f98befa9a674aab944c5fcf19be3e3" translate="yes" xml:space="preserve">
          <source>BeanstalkdConnector</source>
          <target state="translated">BeanstalkdConnector</target>
        </trans-unit>
        <trans-unit id="325fbd43c455475de884defb484476b059a9b890" translate="yes" xml:space="preserve">
          <source>BeanstalkdConnector (Queue\Connectors)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a3f75f31d45d3c21abbdfe91d78da709460b25" translate="yes" xml:space="preserve">
          <source>BeanstalkdConnector::connect()</source>
          <target state="translated">BeanstalkdConnector::connect()</target>
        </trans-unit>
        <trans-unit id="15596a626130e04733eabe6806b083c4d4cfb9af" translate="yes" xml:space="preserve">
          <source>BeanstalkdConnector::pheanstalk()</source>
          <target state="translated">BeanstalkdConnector::pheanstalk()</target>
        </trans-unit>
        <trans-unit id="135d61b84216fc44a1f5bf5364ab95096ef4c321" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob</source>
          <target state="translated">BeanstalkdJob</target>
        </trans-unit>
        <trans-unit id="9a338dc7ebbb41a515ea967c74ac4d7293b58fcd" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob (Queue\Jobs)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3c4c17746f65da1500c77b7055ec3d2ec81c67" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob::__construct()</source>
          <target state="translated">BeanstalkdJob::__construct()</target>
        </trans-unit>
        <trans-unit id="11d4edb7ce6eb1d419f93c167b86a1d992cc9934" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob::attempts()</source>
          <target state="translated">BeanstalkdJob::attempts()</target>
        </trans-unit>
        <trans-unit id="d283444265c3cc93f4151248d6093002db084838" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob::bury()</source>
          <target state="translated">BeanstalkdJob::bury()</target>
        </trans-unit>
        <trans-unit id="1cad046ffd8156809b08af565eefe3c6ccb8a175" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob::delete()</source>
          <target state="translated">BeanstalkdJob::delete()</target>
        </trans-unit>
        <trans-unit id="3ba0dd87c9ce53fa34c2d16b217245e07c0234b9" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob::getJobId()</source>
          <target state="translated">BeanstalkdJob::getJobId()</target>
        </trans-unit>
        <trans-unit id="8fde6e8d4cd91b6b99ccb14fc125b37285a6bc34" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob::getPheanstalk()</source>
          <target state="translated">BeanstalkdJob::getPheanstalk()</target>
        </trans-unit>
        <trans-unit id="a99c3b3c8e27e4f19b445a09760c4fa349c227e6" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob::getPheanstalkJob()</source>
          <target state="translated">BeanstalkdJob::getPheanstalkJob()</target>
        </trans-unit>
        <trans-unit id="cd7fd02091430e68f4a6c131c2c08ebebaf79f81" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob::getRawBody()</source>
          <target state="translated">BeanstalkdJob::getRawBody()</target>
        </trans-unit>
        <trans-unit id="a01bc1912243b9174b97ca4d79cbe65d898274e3" translate="yes" xml:space="preserve">
          <source>BeanstalkdJob::release()</source>
          <target state="translated">BeanstalkdJob::release()</target>
        </trans-unit>
        <trans-unit id="7695352e6785780c23ccf835d00c47599f785ade" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue</source>
          <target state="translated">BeanstalkdQueue</target>
        </trans-unit>
        <trans-unit id="eb69521b46632dc68fea54b0d3971e4bfebed81d" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue (Queue)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1141964db3e51c0bd1e2c8c4f7d738323079a52a" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue::__construct()</source>
          <target state="translated">BeanstalkdQueue::__construct()</target>
        </trans-unit>
        <trans-unit id="4a298327946278c34769a43bf6dc6165dce2bbdb" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue::deleteMessage()</source>
          <target state="translated">BeanstalkdQueue::deleteMessage()</target>
        </trans-unit>
        <trans-unit id="eced5a321d088f98ba0a4d59af3d2b3f5b4f0ce0" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue::getPheanstalk()</source>
          <target state="translated">BeanstalkdQueue::getPheanstalk()</target>
        </trans-unit>
        <trans-unit id="6f7a077778d7217289a1a89f6cba38efce69691a" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue::getQueue()</source>
          <target state="translated">BeanstalkdQueue::getQueue()</target>
        </trans-unit>
        <trans-unit id="0d22e81206a6789e377f4de10044d451680b5e49" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue::later()</source>
          <target state="translated">BeanstalkdQueue::later()</target>
        </trans-unit>
        <trans-unit id="04c36d6eb1cde50bcc20eecdf20ab4e8a3844436" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue::pop()</source>
          <target state="translated">BeanstalkdQueue::pop()</target>
        </trans-unit>
        <trans-unit id="b7f58fe0238acb3085d48430fa088295c0820710" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue::push()</source>
          <target state="translated">BeanstalkdQueue::push()</target>
        </trans-unit>
        <trans-unit id="9a06482f54dd8cab1cd879be3fe450239318162e" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue::pushRaw()</source>
          <target state="translated">BeanstalkdQueue::pushRaw()</target>
        </trans-unit>
        <trans-unit id="658102ac2266bdf6687c30430b30100703df0cc3" translate="yes" xml:space="preserve">
          <source>BeanstalkdQueue::size()</source>
          <target state="translated">BeanstalkdQueue::size()</target>
        </trans-unit>
        <trans-unit id="0b56aabc7e529192c5098f5b4421aea682651750" translate="yes" xml:space="preserve">
          <source>Because Laravel Mix is built on top of Webpack, it's important to understand a few Webpack concepts. For CSS compilation, Webpack will rewrite and optimize any &lt;code&gt;url()&lt;/code&gt; calls within your stylesheets. While this might initially sound strange, it's an incredibly powerful piece of functionality. Imagine that we want to compile Sass that includes a relative URL to an image:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba82250ea21a304f4aca2e02bb7588364872f96" translate="yes" xml:space="preserve">
          <source>Because of &lt;a href=&quot;https://www.vagrantup.com/docs/hyperv/limitations.html&quot;&gt;Vagrant limitations&lt;/a&gt;, The Hyper-V provider ignores all networking settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90fd83b7defa423dd6d0f7b34cf3cb219450693" translate="yes" xml:space="preserve">
          <source>Because of the &lt;code&gt;load&lt;/code&gt; method call in your console kernel's &lt;code&gt;commands&lt;/code&gt; method, all commands within the &lt;code&gt;app/Console/Commands&lt;/code&gt; directory will automatically be registered with Artisan. In fact, you are free to make additional calls to the &lt;code&gt;load&lt;/code&gt; method to scan other directories for Artisan commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9f62cb77f0b5752841a6c63148d683e7f4d2c6" translate="yes" xml:space="preserve">
          <source>Because versioned files are usually unnecessary in development, you may instruct the versioning process to only run during &lt;code&gt;npm run production&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85dbe993952f0ba22bcbb5a93dda1a45aa203011" translate="yes" xml:space="preserve">
          <source>Bedrock</source>
          <target state="translated">Bedrock</target>
        </trans-unit>
        <trans-unit id="c0fcd1c6cb257e2b12d5d07d8133af077b895b5d" translate="yes" xml:space="preserve">
          <source>Before &amp;amp; After Middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d857375679251de6f708637c362d9920d87b7f0" translate="yes" xml:space="preserve">
          <source>Before broadcasting any events, you will first need to register the &lt;code&gt;App\Providers\BroadcastServiceProvider&lt;/code&gt;. In fresh Laravel applications, you only need to uncomment this provider in the &lt;code&gt;providers&lt;/code&gt; array of your &lt;code&gt;config/app.php&lt;/code&gt; configuration file. This provider will allow you to register the broadcast authorization routes and callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e1aa675ec53aa97deb408a682a19cf8288a879" translate="yes" xml:space="preserve">
          <source>Before broadcasting events, you will also need to configure and run a &lt;a href=&quot;queues&quot;&gt;queue listener&lt;/a&gt;. All event broadcasting is done via queued jobs so that the response time of your application is not seriously affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0092b9739073d365370fa069dff1a1eccdf13785" translate="yes" xml:space="preserve">
          <source>Before broadcasting notifications, you should configure and be familiar with Laravel's &lt;a href=&quot;broadcasting&quot;&gt;event broadcasting&lt;/a&gt; services. Event broadcasting provides a way to react to server-side fired Laravel events from your JavaScript client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0bde408ee5e4e971f65bc71dee9610d4430fb2" translate="yes" xml:space="preserve">
          <source>Before compiling your CSS, install your project's frontend dependencies using the &lt;a href=&quot;https://www.npmjs.org&quot;&gt;Node package manager (NPM)&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df870cd0d29268424da9db3d211a3d48f096135" translate="yes" xml:space="preserve">
          <source>Before diving into all of the options available to you when writing resources, let's first take a high-level look at how resources are used within Laravel. A resource class represents a single model that needs to be transformed into a JSON structure. For example, here is a simple &lt;code&gt;User&lt;/code&gt; resource class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ab3abf3a4d9939b20b4a3bdd6734c3e769a89f" translate="yes" xml:space="preserve">
          <source>Before diving into each component of event broadcasting, let's take a high level overview using an e-commerce store as an example. We won't discuss the details of configuring &lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt; or &lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo&lt;/a&gt; since that will be discussed in detail in other sections of this documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309f8d2d16e38af2b909c33236f73d045116e40f" translate="yes" xml:space="preserve">
          <source>Before diving into event broadcasting, make sure you have read all of the documentation regarding Laravel &lt;a href=&quot;events&quot;&gt;events and listeners&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8ea350aab859f6c2f98aa97c9e0a966e56ba2b" translate="yes" xml:space="preserve">
          <source>Before getting started with Laravel queues, it is important to understand the distinction between &quot;connections&quot; and &quot;queues&quot;. In your &lt;code&gt;config/queue.php&lt;/code&gt; configuration file, there is a &lt;code&gt;connections&lt;/code&gt; configuration option. This option defines a particular connection to a backend service such as Amazon SQS, Beanstalk, or Redis. However, any given queue connection may have multiple &quot;queues&quot; which may be thought of as different stacks or piles of queued jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09ef87abc6d12b1dd6d76fe08606e75490f4f66" translate="yes" xml:space="preserve">
          <source>Before getting started, be sure to configure a database connection in &lt;code&gt;config/database.php&lt;/code&gt;. For more information on configuring your database, check out &lt;a href=&quot;database#configuration&quot;&gt;the documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fbf8d039d6af8538765a6cdf188851a45113f3" translate="yes" xml:space="preserve">
          <source>Before launching your Homestead environment, you must install &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox 5.2&lt;/a&gt;, &lt;a href=&quot;https://www.vmware.com&quot;&gt;VMWare&lt;/a&gt;, &lt;a href=&quot;https://www.parallels.com/products/desktop/&quot;&gt;Parallels&lt;/a&gt; or &lt;a href=&quot;https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v&quot;&gt;Hyper-V&lt;/a&gt; as well as &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;Vagrant&lt;/a&gt;. All of these software packages provide easy-to-use visual installers for all popular operating systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bade7ed0f75c518c20cd060a0651ecccf2ef466" translate="yes" xml:space="preserve">
          <source>Before modifying a column, be sure to add the &lt;code&gt;doctrine/dbal&lt;/code&gt; dependency to your &lt;code&gt;composer.json&lt;/code&gt; file. The Doctrine DBAL library is used to determine the current state of the column and create the SQL queries needed to make the specified adjustments to the column:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71710e05e8a1e21c0331a835e670da883b4d4fad" translate="yes" xml:space="preserve">
          <source>Before queueing notifications you should configure your queue and &lt;a href=&quot;queues&quot;&gt;start a worker&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d5fb3a3224047909341ef624722451b69c4407" translate="yes" xml:space="preserve">
          <source>Before redirecting the user, you may also add additional &quot;scopes&quot; on the request using the &lt;code&gt;scopes&lt;/code&gt; method. This method will merge all existing scopes with the ones you supply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47496987519f38914280537f6f15553f22fd0515" translate="yes" xml:space="preserve">
          <source>Before renaming a table, you should verify that any foreign key constraints on the table have an explicit name in your migration files instead of letting Laravel assign a convention based name. Otherwise, the foreign key constraint name will refer to the old table name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9dee1f01af2e586705eb778e22dba658435c7a" translate="yes" xml:space="preserve">
          <source>Before triggering Mix, you must first ensure that Node.js and NPM are installed on your machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821667d7a711cd7908dbdbe5e4bc97a814d9c3fe" translate="yes" xml:space="preserve">
          <source>Before using Cashier with Braintree, you will need to define a &lt;code&gt;plan-credit&lt;/code&gt; discount in your Braintree control panel. This discount will be used to properly prorate subscriptions that change from yearly to monthly billing, or from monthly to yearly billing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f614d5939ff83a7db6b64c1bff9bdd974572219" translate="yes" xml:space="preserve">
          <source>Before using Cashier, we'll also need to &lt;a href=&quot;migrations&quot;&gt;prepare the database&lt;/a&gt;. We need to add several columns to your &lt;code&gt;users&lt;/code&gt; table and create a new &lt;code&gt;subscriptions&lt;/code&gt; table to hold all of our customer's subscriptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c1c10722bc7c61f601997d54b2256f847313aa" translate="yes" xml:space="preserve">
          <source>Before using Cashier, we'll need to &lt;a href=&quot;migrations&quot;&gt;prepare the database&lt;/a&gt;. We need to add several columns to your &lt;code&gt;users&lt;/code&gt; table and create a new &lt;code&gt;subscriptions&lt;/code&gt; table to hold all of our customer's subscriptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1993716ad28e3d5b0d40142b64c155b3be15c4" translate="yes" xml:space="preserve">
          <source>Before using Laravel's encrypter, you must set a &lt;code&gt;key&lt;/code&gt; option in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file. You should use the &lt;code&gt;php artisan key:generate&lt;/code&gt; command to generate this key since this Artisan command will use PHP's secure random bytes generator to build your key. If this value is not properly set, all values encrypted by Laravel will be insecure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b12e7b58394b7760479f0dec53fcca0ecc7719" translate="yes" xml:space="preserve">
          <source>Before using Redis sessions with Laravel, you will need to install the &lt;code&gt;predis/predis&lt;/code&gt; package (~1.0) via Composer. You may configure your Redis connections in the &lt;code&gt;database&lt;/code&gt; configuration file. In the &lt;code&gt;session&lt;/code&gt; configuration file, the &lt;code&gt;connection&lt;/code&gt; option may be used to specify which Redis connection is used by the session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339e09dd07563da8d736afbfb1493f2912b72d91" translate="yes" xml:space="preserve">
          <source>Before using Redis with Laravel, you will need to install the &lt;code&gt;predis/predis&lt;/code&gt; package via Composer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048886a6952d22075d34524777369ed2f16e662d" translate="yes" xml:space="preserve">
          <source>Before using Socialite, you will also need to add credentials for the OAuth services your application utilizes. These credentials should be placed in your &lt;code&gt;config/services.php&lt;/code&gt; configuration file, and should use the key &lt;code&gt;facebook&lt;/code&gt;, &lt;code&gt;twitter&lt;/code&gt;, &lt;code&gt;linkedin&lt;/code&gt;, &lt;code&gt;google&lt;/code&gt;, &lt;code&gt;github&lt;/code&gt; or &lt;code&gt;bitbucket&lt;/code&gt;, depending on the providers your application requires. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eadc8f38e333e82a8848560c3fe692348322fd0" translate="yes" xml:space="preserve">
          <source>Before using a Redis cache with Laravel, you will need to either install the &lt;code&gt;predis/predis&lt;/code&gt; package (~1.0) via Composer or install the PhpRedis PHP extension via PECL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bbd325f40a0f09519ccd36186b82cade39504f" translate="yes" xml:space="preserve">
          <source>Before using the &lt;code&gt;create&lt;/code&gt; method, be sure to review the documentation on attribute &lt;a href=&quot;eloquent#mass-assignment&quot;&gt;mass assignment&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b81a422c292efb4bbd51ffae1953dab285aea7a" translate="yes" xml:space="preserve">
          <source>Before using the SFTP, S3, or Rackspace drivers, you will need to install the appropriate package via Composer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b89b8d4811891da888e1303ca81d03c6fa75c3" translate="yes" xml:space="preserve">
          <source>Before using the password reset features of Laravel, your user must use the &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; trait.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7ec8aebb4111c44b5c6fcdd0faf9abf3919ed4" translate="yes" xml:space="preserve">
          <source>Before you can send notifications via Slack, you must install the Guzzle HTTP library via Composer:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776c7daf45644b19553ab0b6cbb250b615048a7b" translate="yes" xml:space="preserve">
          <source>Before your application can issue personal access tokens, you will need to create a personal access client. You may do this using the &lt;code&gt;passport:client&lt;/code&gt; command with the &lt;code&gt;--personal&lt;/code&gt; option. If you have already run the &lt;code&gt;passport:install&lt;/code&gt; command, you do not need to run this command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f9805eaa199f881b2e11deec97ece2bda43fe8" translate="yes" xml:space="preserve">
          <source>Before your application can issue tokens via the password grant, you will need to create a password grant client. You may do this using the &lt;code&gt;passport:client&lt;/code&gt; command with the &lt;code&gt;--password&lt;/code&gt; option. If you have already run the &lt;code&gt;passport:install&lt;/code&gt; command, you do not need to run this command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b342713ba768fa3bfd27f2d66869b5ae4b7f0f06" translate="yes" xml:space="preserve">
          <source>Begin a database transaction on the testing database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8a21c750575d22069346b706c85495832a72c5" translate="yes" xml:space="preserve">
          <source>Begin a fluent query against a database table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c177b7552e53e50f8ecd8c95e5e9c858b4926a6f" translate="yes" xml:space="preserve">
          <source>Begin a new database query against the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295d1974fe8f2d233633a7c5b6c4bdff101810b9" translate="yes" xml:space="preserve">
          <source>Begin a string with a single instance of a given value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c87e27788dc7a03cfcbac7c3d5387e2d1c05233" translate="yes" xml:space="preserve">
          <source>Begin broadcasting an event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c421150d31a675754570e359c91f5a15f8cfbcb" translate="yes" xml:space="preserve">
          <source>Begin creating a new file fake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa516b364b5603fc959d9458bc688a1c39231fb" translate="yes" xml:space="preserve">
          <source>Begin executing a new tags operation if the store supports it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e815c5d12606e5aec3fb97146be296a766ef18a7" translate="yes" xml:space="preserve">
          <source>Begin executing a new tags operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562a96dea9df22356067dc913380d698ff1ec837" translate="yes" xml:space="preserve">
          <source>Begin querying a model with eager loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab9e42a604bc1afdd614d69e6c6a8ccd40215e1" translate="yes" xml:space="preserve">
          <source>Begin querying the model on a given connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ae939bafb6b7fd5e2bac674c7926fd2db40e05" translate="yes" xml:space="preserve">
          <source>Begin querying the model on the write connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b99ae57c67bcce896adbe4f19a48cdb038dc9b3" translate="yes" xml:space="preserve">
          <source>Begin querying the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e11739fc0c045a0b94638228b350e1fa283aff" translate="yes" xml:space="preserve">
          <source>Begin sending a notification to an anonymous notifiable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5681047e5a2d689010c681c5fa0ee8ac7de1ae30" translate="yes" xml:space="preserve">
          <source>Begin the process of mailing a mailable class instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74b9ef02fb4ae7e5d657733e31414ef1673b623" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Laravel Mix references a pre-configured &lt;code&gt;webpack.config.js&lt;/code&gt; file to get you up and running as quickly as possible. Occasionally, you may need to manually modify this file. You might have a special loader or plug-in that needs to be referenced, or maybe you prefer to use Stylus instead of Sass. In such instances, you have two choices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af8d28c9a6141d1f9f034ecf1725de9a5267115" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Mix will download and include the appropriate &lt;code&gt;babel-preset-react&lt;/code&gt; Babel plug-in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae224a345b84602d2f63a558edded4a6347ed7d8" translate="yes" xml:space="preserve">
          <source>Belongs To Relationships</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96eea2ec02e4c714bddc003be7e838d1e35984b6" translate="yes" xml:space="preserve">
          <source>BelongsTo</source>
          <target state="translated">BelongsTo</target>
        </trans-unit>
        <trans-unit id="b84f5b4df0a02394a73fe53f896b9994f2335239" translate="yes" xml:space="preserve">
          <source>BelongsTo (Database\Eloquent\Relations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4a50398c4969ca52298a325df080628eca9d2e" translate="yes" xml:space="preserve">
          <source>BelongsTo::__construct()</source>
          <target state="translated">BelongsTo::__construct()</target>
        </trans-unit>
        <trans-unit id="7760e497e0531839e543e61fb9e5a078802f743e" translate="yes" xml:space="preserve">
          <source>BelongsTo::addConstraints()</source>
          <target state="translated">BelongsTo::addConstraints()</target>
        </trans-unit>
        <trans-unit id="a1529eb9e71e18fd459ce27470ff95c17c7b6adb" translate="yes" xml:space="preserve">
          <source>BelongsTo::addEagerConstraints()</source>
          <target state="translated">BelongsTo::addEagerConstraints()</target>
        </trans-unit>
        <trans-unit id="8b3eabfa9375145ce11d5afdf3267c46302bbfdd" translate="yes" xml:space="preserve">
          <source>BelongsTo::associate()</source>
          <target state="translated">BelongsTo::associate()</target>
        </trans-unit>
        <trans-unit id="f8ce6d562ba75c3dac7281502867d3388780a004" translate="yes" xml:space="preserve">
          <source>BelongsTo::dissociate()</source>
          <target state="translated">BelongsTo::dissociate()</target>
        </trans-unit>
        <trans-unit id="3ad5675c9f8cb42c5ac50289aad3c5b1d7f2fb79" translate="yes" xml:space="preserve">
          <source>BelongsTo::getEagerModelKeys()</source>
          <target state="translated">BelongsTo::getEagerModelKeys()</target>
        </trans-unit>
        <trans-unit id="2a7c6467754ddf185adedeb5d064e59ce2f4a910" translate="yes" xml:space="preserve">
          <source>BelongsTo::getForeignKey()</source>
          <target state="translated">BelongsTo::getForeignKey()</target>
        </trans-unit>
        <trans-unit id="a91a3693c9e1b4f9bace1357678252f0f59ea465" translate="yes" xml:space="preserve">
          <source>BelongsTo::getOwnerKey()</source>
          <target state="translated">BelongsTo::getOwnerKey()</target>
        </trans-unit>
        <trans-unit id="9cbe2fdca109436286d1afaf42c2f3651acb17ba" translate="yes" xml:space="preserve">
          <source>BelongsTo::getQualifiedForeignKey()</source>
          <target state="translated">BelongsTo::getQualifiedForeignKey()</target>
        </trans-unit>
        <trans-unit id="23a6d83621c24ccb2aca9112c4ed55b98ba57d87" translate="yes" xml:space="preserve">
          <source>BelongsTo::getQualifiedOwnerKeyName()</source>
          <target state="translated">BelongsTo::getQualifiedOwnerKeyName()</target>
        </trans-unit>
        <trans-unit id="0cee0a6e9b41348e11de042cfd7b592dd62cb5d5" translate="yes" xml:space="preserve">
          <source>BelongsTo::getRelation()</source>
          <target state="translated">BelongsTo::getRelation()</target>
        </trans-unit>
        <trans-unit id="d82f4fd03cae10fc3e42f316f46058f5027adf8b" translate="yes" xml:space="preserve">
          <source>BelongsTo::getRelationCountHash()</source>
          <target state="translated">BelongsTo::getRelationCountHash()</target>
        </trans-unit>
        <trans-unit id="8e6c3bbdfa573634eaf07905c3b510cc236fe53c" translate="yes" xml:space="preserve">
          <source>BelongsTo::getRelationExistenceQuery()</source>
          <target state="translated">BelongsTo::getRelationExistenceQuery()</target>
        </trans-unit>
        <trans-unit id="b2b591eeb32794431f0a40b80ec2b5540e0a9562" translate="yes" xml:space="preserve">
          <source>BelongsTo::getRelationExistenceQueryForSelfRelation()</source>
          <target state="translated">BelongsTo::getRelationExistenceQueryForSelfRelation()</target>
        </trans-unit>
        <trans-unit id="ebdf842fc89a89204e564a7fac0710f46f8c0d89" translate="yes" xml:space="preserve">
          <source>BelongsTo::getResults()</source>
          <target state="translated">BelongsTo::getResults()</target>
        </trans-unit>
        <trans-unit id="ca1eb3b2bdc2de7393c7763766242f8e936587cc" translate="yes" xml:space="preserve">
          <source>BelongsTo::initRelation()</source>
          <target state="translated">BelongsTo::initRelation()</target>
        </trans-unit>
        <trans-unit id="6be00a92fb4ab53f196ba9c5cb672b05c7895b29" translate="yes" xml:space="preserve">
          <source>BelongsTo::match()</source>
          <target state="translated">BelongsTo::match()</target>
        </trans-unit>
        <trans-unit id="b9efb3ac83bb543af35bfdcf5468dbb90bbaf2af" translate="yes" xml:space="preserve">
          <source>BelongsTo::newRelatedInstanceFor()</source>
          <target state="translated">BelongsTo::newRelatedInstanceFor()</target>
        </trans-unit>
        <trans-unit id="380682821e75ca061be4794fcb98c205943c5567" translate="yes" xml:space="preserve">
          <source>BelongsTo::relationHasIncrementingId()</source>
          <target state="translated">BelongsTo::relationHasIncrementingId()</target>
        </trans-unit>
        <trans-unit id="bb95d5e29689a9edab646f7e45ed4523a1483b68" translate="yes" xml:space="preserve">
          <source>BelongsTo::update()</source>
          <target state="translated">BelongsTo::update()</target>
        </trans-unit>
        <trans-unit id="abe4014fe1810e14056c47bc023614c859094c59" translate="yes" xml:space="preserve">
          <source>BelongsToMany</source>
          <target state="translated">BelongsToMany</target>
        </trans-unit>
        <trans-unit id="305c6f4e10658c222b1e9279e616b5e42030c3cf" translate="yes" xml:space="preserve">
          <source>BelongsToMany (Database\Eloquent\Relations)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad03bc43ab61fc3e520dbf82d3b908869880214" translate="yes" xml:space="preserve">
          <source>BelongsToMany::__construct()</source>
          <target state="translated">BelongsToMany::__construct()</target>
        </trans-unit>
        <trans-unit id="1a7f4b50448b50bd4fe8a6165cef6e3a00ae2930" translate="yes" xml:space="preserve">
          <source>BelongsToMany::addConstraints()</source>
          <target state="translated">BelongsToMany::addConstraints()</target>
        </trans-unit>
        <trans-unit id="0211034aa295bed8f38d48c6dab82785012ea93b" translate="yes" xml:space="preserve">
          <source>BelongsToMany::addEagerConstraints()</source>
          <target state="translated">BelongsToMany::addEagerConstraints()</target>
        </trans-unit>
        <trans-unit id="1970793d59dbf10aad2931080f3276425c922014" translate="yes" xml:space="preserve">
          <source>BelongsToMany::addWhereConstraints()</source>
          <target state="translated">BelongsToMany::addWhereConstraints()</target>
        </trans-unit>
        <trans-unit id="215806c0c400e8892d16f2f159097cad7b456508" translate="yes" xml:space="preserve">
          <source>BelongsToMany::aliasedPivotColumns()</source>
          <target state="translated">BelongsToMany::aliasedPivotColumns()</target>
        </trans-unit>
        <trans-unit id="ff8d793807e9609a99a199914e86ef00da5e2c5d" translate="yes" xml:space="preserve">
          <source>BelongsToMany::allRelatedIds()</source>
          <target state="translated">BelongsToMany::allRelatedIds()</target>
        </trans-unit>
        <trans-unit id="c57a615c3118232e5e732aa950ff3374f0941fc6" translate="yes" xml:space="preserve">
          <source>BelongsToMany::as()</source>
          <target state="translated">BelongsToMany::as()</target>
        </trans-unit>
        <trans-unit id="97b4cbbfadb012fd4693fc738e113c7008a95f0b" translate="yes" xml:space="preserve">
          <source>BelongsToMany::buildDictionary()</source>
          <target state="translated">BelongsToMany::buildDictionary()</target>
        </trans-unit>
        <trans-unit id="477207f6f877c791ae3cbdfdda4ac9732cac5ffe" translate="yes" xml:space="preserve">
          <source>BelongsToMany::chunk()</source>
          <target state="translated">BelongsToMany::chunk()</target>
        </trans-unit>
        <trans-unit id="98409a10907f6174a53ecfa47588a40d3a4913b0" translate="yes" xml:space="preserve">
          <source>BelongsToMany::create()</source>
          <target state="translated">BelongsToMany::create()</target>
        </trans-unit>
        <trans-unit id="69d204d8d3dda0824ad787280630f10735d6ce19" translate="yes" xml:space="preserve">
          <source>BelongsToMany::createMany()</source>
          <target state="translated">BelongsToMany::createMany()</target>
        </trans-unit>
        <trans-unit id="0aec89cd38c113b9de4e1a926cba671aa9200b2c" translate="yes" xml:space="preserve">
          <source>BelongsToMany::createdAt()</source>
          <target state="translated">BelongsToMany::createdAt()</target>
        </trans-unit>
        <trans-unit id="b90563e63ed12482bbcc362825637f5b22930019" translate="yes" xml:space="preserve">
          <source>BelongsToMany::each()</source>
          <target state="translated">BelongsToMany::each()</target>
        </trans-unit>
        <trans-unit id="8d1c913db54f9959c73c6ef2846c536a9c6cc431" translate="yes" xml:space="preserve">
          <source>BelongsToMany::find()</source>
          <target state="translated">BelongsToMany::find()</target>
        </trans-unit>
        <trans-unit id="e7fdd7184f15a6375058b8dbf970b66045a82baf" translate="yes" xml:space="preserve">
          <source>BelongsToMany::findMany()</source>
          <target state="translated">BelongsToMany::findMany()</target>
        </trans-unit>
        <trans-unit id="196c110907a143703fc02b8470b3341c26c4bbdc" translate="yes" xml:space="preserve">
          <source>BelongsToMany::findOrFail()</source>
          <target state="translated">BelongsToMany::findOrFail()</target>
        </trans-unit>
        <trans-unit id="a2914cf288540e7bb0725eff2a4060f1bc5e7abf" translate="yes" xml:space="preserve">
          <source>BelongsToMany::findOrNew()</source>
          <target state="translated">BelongsToMany::findOrNew()</target>
        </trans-unit>
        <trans-unit id="d5b6cff858cc21913a27508d223c44e77272fdb7" translate="yes" xml:space="preserve">
          <source>BelongsToMany::first()</source>
          <target state="translated">BelongsToMany::first()</target>
        </trans-unit>
        <trans-unit id="87c3336418c93802ee4a4822107c3be1cf34a546" translate="yes" xml:space="preserve">
          <source>BelongsToMany::firstOrCreate()</source>
          <target state="translated">BelongsToMany::firstOrCreate()</target>
        </trans-unit>
        <trans-unit id="da75c584fac98a05a2f9b5fde786e9ec5fea0c34" translate="yes" xml:space="preserve">
          <source>BelongsToMany::firstOrFail()</source>
          <target state="translated">BelongsToMany::firstOrFail()</target>
        </trans-unit>
        <trans-unit id="ec81c60384b0424a3665c82b957b283ff9d6b3cf" translate="yes" xml:space="preserve">
          <source>BelongsToMany::firstOrNew()</source>
          <target state="translated">BelongsToMany::firstOrNew()</target>
        </trans-unit>
        <trans-unit id="786be471f75e33fa03d1ee858f3c0fd1c0f7bbf1" translate="yes" xml:space="preserve">
          <source>BelongsToMany::get()</source>
          <target state="translated">BelongsToMany::get()</target>
        </trans-unit>
        <trans-unit id="8b6bc54bac6882d04749aff72dee622e829a6fda" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getExistenceCompareKey()</source>
          <target state="translated">BelongsToMany::getExistenceCompareKey()</target>
        </trans-unit>
        <trans-unit id="ec7ca86e58e691ca125ad194433999bed39f42e7" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getForeignPivotKeyName()</source>
          <target state="translated">BelongsToMany::getForeignPivotKeyName()</target>
        </trans-unit>
        <trans-unit id="74829248c7fc9a90dfcfd679c9b087483ac7afa6" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getPivotAccessor()</source>
          <target state="translated">BelongsToMany::getPivotAccessor()</target>
        </trans-unit>
        <trans-unit id="2590741f9cd5d081c5c4d83f2c7f4d659fcc7b69" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getPivotClass()</source>
          <target state="translated">BelongsToMany::getPivotClass()</target>
        </trans-unit>
        <trans-unit id="c0d422caebe8447882f4196d9e9b9e8c9e1ce714" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getQualifiedForeignPivotKeyName()</source>
          <target state="translated">BelongsToMany::getQualifiedForeignPivotKeyName()</target>
        </trans-unit>
        <trans-unit id="fd69c19aa492ddcbc082e3157f9f6a47c3fbec14" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getQualifiedParentKeyName()</source>
          <target state="translated">BelongsToMany::getQualifiedParentKeyName()</target>
        </trans-unit>
        <trans-unit id="2d9a94bcdd317194690c858a17e54d81c955b2e0" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getQualifiedRelatedPivotKeyName()</source>
          <target state="translated">BelongsToMany::getQualifiedRelatedPivotKeyName()</target>
        </trans-unit>
        <trans-unit id="0bc9266cadceb3fcb8531487c7c7430788e15165" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getRelatedPivotKeyName()</source>
          <target state="translated">BelongsToMany::getRelatedPivotKeyName()</target>
        </trans-unit>
        <trans-unit id="b2b7c4b34b8f20145447ce2352da6e25e2b0c6fc" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getRelationCountHash()</source>
          <target state="translated">BelongsToMany::getRelationCountHash()</target>
        </trans-unit>
        <trans-unit id="bbddaf86143dee715854475494e6d138d59cbf3a" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getRelationExistenceQuery()</source>
          <target state="translated">BelongsToMany::getRelationExistenceQuery()</target>
        </trans-unit>
        <trans-unit id="4f406a74edb0777394de370134f250f4f7f8ac26" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getRelationExistenceQueryForSelfJoin()</source>
          <target state="translated">BelongsToMany::getRelationExistenceQueryForSelfJoin()</target>
        </trans-unit>
        <trans-unit id="0106e94d7bc75d1a19ad0732e3141f53c26b5fd6" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getRelationName()</source>
          <target state="translated">BelongsToMany::getRelationName()</target>
        </trans-unit>
        <trans-unit id="c087f32fbab4e50d013caa953270c1a4c2c0a2b8" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getResults()</source>
          <target state="translated">BelongsToMany::getResults()</target>
        </trans-unit>
        <trans-unit id="c611de41b87d682891723c9be6c0e778ea53a57d" translate="yes" xml:space="preserve">
          <source>BelongsToMany::getTable()</source>
          <target state="translated">BelongsToMany::getTable()</target>
        </trans-unit>
        <trans-unit id="ea7b66769917ce9afc7b513b1fa1d66e95682237" translate="yes" xml:space="preserve">
          <source>BelongsToMany::guessInverseRelation()</source>
          <target state="translated">BelongsToMany::guessInverseRelation()</target>
        </trans-unit>
        <trans-unit id="222b1ad88ae516d7e024255bf029429711f48d37" translate="yes" xml:space="preserve">
          <source>BelongsToMany::hydratePivotRelation()</source>
          <target state="translated">BelongsToMany::hydratePivotRelation()</target>
        </trans-unit>
        <trans-unit id="73425d0c244b93364bf0671b648e29f77be42517" translate="yes" xml:space="preserve">
          <source>BelongsToMany::initRelation()</source>
          <target state="translated">BelongsToMany::initRelation()</target>
        </trans-unit>
        <trans-unit id="22974116205324f5902d896a4faea0d0c3461a4e" translate="yes" xml:space="preserve">
          <source>BelongsToMany::match()</source>
          <target state="translated">BelongsToMany::match()</target>
        </trans-unit>
        <trans-unit id="ab4997cd461fc243fd11667de13a5e87a38eb6a1" translate="yes" xml:space="preserve">
          <source>BelongsToMany::migratePivotAttributes()</source>
          <target state="translated">BelongsToMany::migratePivotAttributes()</target>
        </trans-unit>
        <trans-unit id="7e2e8c116edf59d12991ef82c314d2830dfea047" translate="yes" xml:space="preserve">
          <source>BelongsToMany::orWherePivot()</source>
          <target state="translated">BelongsToMany::orWherePivot()</target>
        </trans-unit>
        <trans-unit id="dbcc74ca0ef09086c5342fe57290e93240b6b99d" translate="yes" xml:space="preserve">
          <source>BelongsToMany::orWherePivotIn()</source>
          <target state="translated">BelongsToMany::orWherePivotIn()</target>
        </trans-unit>
        <trans-unit id="6804dcad88b8d39c2cb43e32ba4c43e4e8815a24" translate="yes" xml:space="preserve">
          <source>BelongsToMany::paginate()</source>
          <target state="translated">BelongsToMany::paginate()</target>
        </trans-unit>
        <trans-unit id="d1fa75b6ee0c6185022635bd9a5b88c57a187122" translate="yes" xml:space="preserve">
          <source>BelongsToMany::performJoin()</source>
          <target state="translated">BelongsToMany::performJoin()</target>
        </trans-unit>
        <trans-unit id="6af50d59f897479686acabd45331f9a681e0a9ec" translate="yes" xml:space="preserve">
          <source>BelongsToMany::save()</source>
          <target state="translated">BelongsToMany::save()</target>
        </trans-unit>
        <trans-unit id="bd3a979de06e98781eb59d8a7eab8143b3859a44" translate="yes" xml:space="preserve">
          <source>BelongsToMany::saveMany()</source>
          <target state="translated">BelongsToMany::saveMany()</target>
        </trans-unit>
        <trans-unit id="39dd9cc5465dcd5f0747e7484d581f3b38b5f925" translate="yes" xml:space="preserve">
          <source>BelongsToMany::shouldSelect()</source>
          <target state="translated">BelongsToMany::shouldSelect()</target>
        </trans-unit>
        <trans-unit id="b1557f1ea92d987781163792cffa107147d7897a" translate="yes" xml:space="preserve">
          <source>BelongsToMany::simplePaginate()</source>
          <target state="translated">BelongsToMany::simplePaginate()</target>
        </trans-unit>
        <trans-unit id="c97055cf425fa6e9df1d207574ae31ee78e2ab73" translate="yes" xml:space="preserve">
          <source>BelongsToMany::touch()</source>
          <target state="translated">BelongsToMany::touch()</target>
        </trans-unit>
        <trans-unit id="2bc20cfcef09fdde4651c13b01a1447817042377" translate="yes" xml:space="preserve">
          <source>BelongsToMany::touchIfTouching()</source>
          <target state="translated">BelongsToMany::touchIfTouching()</target>
        </trans-unit>
        <trans-unit id="e5d76c9fc64ce9b92aeeee9956ec25c41f71663d" translate="yes" xml:space="preserve">
          <source>BelongsToMany::touchingParent()</source>
          <target state="translated">BelongsToMany::touchingParent()</target>
        </trans-unit>
        <trans-unit id="c576c2dc1ebb9938f4ab03a70ee5b7c9bc7513a6" translate="yes" xml:space="preserve">
          <source>BelongsToMany::updateOrCreate()</source>
          <target state="translated">BelongsToMany::updateOrCreate()</target>
        </trans-unit>
        <trans-unit id="071984ae3c6cebc2f3ffd5d421131f34e5d20eeb" translate="yes" xml:space="preserve">
          <source>BelongsToMany::updatedAt()</source>
          <target state="translated">BelongsToMany::updatedAt()</target>
        </trans-unit>
        <trans-unit id="76d8f477dc3fdb1fd7c891e33fb2399ad2e89ad0" translate="yes" xml:space="preserve">
          <source>BelongsToMany::using()</source>
          <target state="translated">BelongsToMany::using()</target>
        </trans-unit>
        <trans-unit id="c4c8c9aa621a3a4acb94ae08e38d929cb5557222" translate="yes" xml:space="preserve">
          <source>BelongsToMany::wherePivot()</source>
          <target state="translated">BelongsToMany::wherePivot()</target>
        </trans-unit>
        <trans-unit id="deddaefd1252baad4f75b462fa3ff2e87f5c68eb" translate="yes" xml:space="preserve">
          <source>BelongsToMany::wherePivotIn()</source>
          <target state="translated">BelongsToMany::wherePivotIn()</target>
        </trans-unit>
        <trans-unit id="2868926434b8a31a5fc5d10216453283403726ab" translate="yes" xml:space="preserve">
          <source>BelongsToMany::withPivotValue()</source>
          <target state="translated">BelongsToMany::withPivotValue()</target>
        </trans-unit>
        <trans-unit id="0beb3a952f459460ef3dc56a034b1bd25dcfb637" translate="yes" xml:space="preserve">
          <source>BelongsToMany::withTimestamps()</source>
          <target state="translated">BelongsToMany::withTimestamps()</target>
        </trans-unit>
        <trans-unit id="623881a6faf2105820cc967137f06345e4738b67" translate="yes" xml:space="preserve">
          <source>Below is a list of all available validation rules and their function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f22d485ca7c3530bb7988ad58954653628dceb6" translate="yes" xml:space="preserve">
          <source>Below is a list of all the available column modifiers. This list does not include the &lt;a href=&quot;#creating-indexes&quot;&gt;index modifiers&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372b262863ae636a90f8ed35014615eb159cb2dd" translate="yes" xml:space="preserve">
          <source>Below is a list of the additional schedule constraints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19efbf2e3b534d8c6e594366486c8cacf791f236" translate="yes" xml:space="preserve">
          <source>Below is an example of a basic controller class. Note that the controller extends the base controller class included with Laravel. The base class provides a few convenience methods such as the &lt;code&gt;middleware&lt;/code&gt; method, which may be used to attach middleware to controller actions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62221c0c363d5688bddfa36596a56be7596a7785" translate="yes" xml:space="preserve">
          <source>Below is an example of a valid Laravel documentation block. Note that the &lt;code&gt;@param&lt;/code&gt; attribute is followed by two spaces, the argument type, two more spaces, and finally the variable name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85871f053015b04a6fc59bb2268669a396f25b22" translate="yes" xml:space="preserve">
          <source>Below you will find every facade and its underlying class. This is a useful tool for quickly digging into the API documentation for a given facade root. The &lt;a href=&quot;container&quot;&gt;service container binding&lt;/a&gt; key is also included where applicable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1da2e6aa8918cc3dc81ac63d1df419cd29da49" translate="yes" xml:space="preserve">
          <source>Between Time Constraints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58653a0149bb9c26b579bf93afef212964ca221" translate="yes" xml:space="preserve">
          <source>Billable Model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b313eaddb35319ae4e11e744b63746f77d955ebb" translate="yes" xml:space="preserve">
          <source>Binary data, such as raw image contents, should be passed through the &lt;code&gt;base64_encode&lt;/code&gt; function before being passed to a queued job. Otherwise, the job may not properly serialize to JSON when being placed on the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3497a8f9da16045ee14f850fb0b7bd44af189161" translate="yes" xml:space="preserve">
          <source>BinaryFileResponse</source>
          <target state="translated">BinaryFileResponse</target>
        </trans-unit>
        <trans-unit id="3703a47f6abf721915441cc17d47399f4c3edc97" translate="yes" xml:space="preserve">
          <source>BinaryFileResponse
    download(&lt;a href=&quot;http://php.net/SplFileInfo&quot;&gt;SplFileInfo&lt;/a&gt;|string $file, string|null $name = null, array $headers = [], string|null $disposition = 'attachment')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d835bab07d7e217decac17be16ccfb29388eab" translate="yes" xml:space="preserve">
          <source>BinaryFileResponse
    file(&lt;a href=&quot;http://php.net/SplFileInfo&quot;&gt;SplFileInfo&lt;/a&gt;|string $file, array $headers = [])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4850455e31c10460d3f7fc319a09621c4159f4" translate="yes" xml:space="preserve">
          <source>Bind a callback to resolve with Container::call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857a92bf6b9851cfbc522f561ffef5908e294f2e" translate="yes" xml:space="preserve">
          <source>Bind a new callback to an abstract's rebind event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915a756d886b67482f4368ae6317ec05f821e558" translate="yes" xml:space="preserve">
          <source>Bind all of the application paths in the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8fd6911b9a9840945231cb8761731f7bc9f16d" translate="yes" xml:space="preserve">
          <source>Bind the route to a given request for execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61247e392921ebe9bae9083ddc606ecc804a2d2" translate="yes" xml:space="preserve">
          <source>Bind values to their parameters in the given statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0043e684cc2e548822e45bee14ea4c4673e262" translate="yes" xml:space="preserve">
          <source>Binding</source>
          <target state="translated">Binding</target>
        </trans-unit>
        <trans-unit id="3d4826fd2ef5cfae9fbee4ae3df7bc2a4bffff0d" translate="yes" xml:space="preserve">
          <source>Binding A Singleton</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467e117fe58557616bd834f1be202b8495df38a1" translate="yes" xml:space="preserve">
          <source>Binding Basics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5491add50808074c3670c69b6b5849162fd64554" translate="yes" xml:space="preserve">
          <source>Binding Instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2534878790ddbf4d48b54b170ec2719afeb63f16" translate="yes" xml:space="preserve">
          <source>Binding Interfaces To Implementations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dba1fd63de8905ccdbb40e33b899144161be139" translate="yes" xml:space="preserve">
          <source>Binding Primitives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e01858e5413e1dfecc673480384374c61ec9317" translate="yes" xml:space="preserve">
          <source>BindingRegistrar</source>
          <target state="translated">BindingRegistrar</target>
        </trans-unit>
        <trans-unit id="3e48b4199fdc6dbfd1c33c02124f09571c48ae39" translate="yes" xml:space="preserve">
          <source>BindingRegistrar (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1359d03f2ce7b82410a97cf417174a7e4a123cff" translate="yes" xml:space="preserve">
          <source>BindingRegistrar::bind()</source>
          <target state="translated">BindingRegistrar::bind()</target>
        </trans-unit>
        <trans-unit id="6bc8f05e2c38c1709374fcfd8b20e58c841c8f89" translate="yes" xml:space="preserve">
          <source>BindingRegistrar::getBindingCallback()</source>
          <target state="translated">BindingRegistrar::getBindingCallback()</target>
        </trans-unit>
        <trans-unit id="70f2028c32b652cbb6eb30691db1a3cd653da556" translate="yes" xml:space="preserve">
          <source>BindingResolutionException</source>
          <target state="translated">BindingResolutionException</target>
        </trans-unit>
        <trans-unit id="e3c811845fd70152bcd6b5719160ebc06d6d4b80" translate="yes" xml:space="preserve">
          <source>BindingResolutionException (Contracts)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668c2d87351687c0219f38bfea8995f404dfb03e" translate="yes" xml:space="preserve">
          <source>Blade</source>
          <target state="translated">Blade</target>
        </trans-unit>
        <trans-unit id="d784a6261863ebf73294dfbe1db450abb07abbc6" translate="yes" xml:space="preserve">
          <source>Blade &amp;amp; JavaScript Frameworks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4502c9ed19d4b669809b87516db89441f19ee3" translate="yes" xml:space="preserve">
          <source>Blade (Support\Facades)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17544169e38490f7ac1b3cacfa7dc818802945a" translate="yes" xml:space="preserve">
          <source>Blade &lt;code&gt;{{ }}&lt;/code&gt; statements are automatically sent through PHP's &lt;code&gt;htmlspecialchars&lt;/code&gt; function to prevent XSS attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b3fd9ba2985bf71b3e6d998eebb25d74231eb6" translate="yes" xml:space="preserve">
          <source>Blade Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2afccab8bdab14e1d2d12e1b54e422e9f9a8d4" translate="yes" xml:space="preserve">
          <source>Blade allows you to define your own custom directives using the &lt;code&gt;directive&lt;/code&gt; method. When the Blade compiler encounters the custom directive, it will call the provided callback with the expression that the directive contains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daccd6f81ba10736ab53f95f22f66e2daaf015cd" translate="yes" xml:space="preserve">
          <source>Blade allows you to push to named stacks which can be rendered somewhere else in another view or layout. This can be particularly useful for specifying any JavaScript libraries required by your child views:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d931d914aae6b5e34c9bb5b2f20e78cbd212510" translate="yes" xml:space="preserve">
          <source>Blade also allows you to define comments in your views. However, unlike HTML comments, Blade comments are not included in the HTML returned by your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1959005202617ec1f5c9ac959e81fec4e36e4d02" translate="yes" xml:space="preserve">
          <source>Blade is the simple, yet powerful templating engine provided with Laravel. Unlike other popular PHP templating engines, Blade does not restrict you from using plain PHP code in your views. In fact, all Blade views are compiled into plain PHP code and cached until they are modified, meaning Blade adds essentially zero overhead to your application. Blade view files use the &lt;code&gt;.blade.php&lt;/code&gt; file extension and are typically stored in the &lt;code&gt;resources/views&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55946d162a2d30dab057a17fb99d3e87a049436d" translate="yes" xml:space="preserve">
          <source>Blade views may be returned from routes using the global &lt;code&gt;view&lt;/code&gt; helper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcf01265fc08fb52c9ae0546a91119f67cfffa8" translate="yes" xml:space="preserve">
          <source>Blade's &lt;code&gt;@include&lt;/code&gt; directive allows you to include a Blade view from within another view. All variables that are available to the parent view will be made available to the included view:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafe00a9cf66075103a89ec922d637d7b46f7df0" translate="yes" xml:space="preserve">
          <source>Blade::getFacadeAccessor()</source>
          <target state="translated">Blade::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="504c69eb5c8de02f0f6f445a7cb6b1f627a2bb42" translate="yes" xml:space="preserve">
          <source>BladeCompiler</source>
          <target state="translated">BladeCompiler</target>
        </trans-unit>
        <trans-unit id="83127eccd2236ff833f2cb57e44eb6997f00acd7" translate="yes" xml:space="preserve">
          <source>BladeCompiler (View\Compilers)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bf5bfa26fefcc70244a79ef3aa127516333170" translate="yes" xml:space="preserve">
          <source>BladeCompiler::addFooters()</source>
          <target state="translated">BladeCompiler::addFooters()</target>
        </trans-unit>
        <trans-unit id="2db8a42810dc6d540f7e8902f70e1d164d778d62" translate="yes" xml:space="preserve">
          <source>BladeCompiler::callCustomDirective()</source>
          <target state="translated">BladeCompiler::callCustomDirective()</target>
        </trans-unit>
        <trans-unit id="37989fbe90bf9c943c218d76f9813ed19b4209d0" translate="yes" xml:space="preserve">
          <source>BladeCompiler::check()</source>
          <target state="translated">BladeCompiler::check()</target>
        </trans-unit>
        <trans-unit id="3866953dc4dcb11bd1535c076a859597e83ae7cd" translate="yes" xml:space="preserve">
          <source>BladeCompiler::compile()</source>
          <target state="translated">BladeCompiler::compile()</target>
        </trans-unit>
        <trans-unit id="5f30a773d75b8c5f2fdf9f3c386d3e19eb01604c" translate="yes" xml:space="preserve">
          <source>BladeCompiler::compileExtensions()</source>
          <target state="translated">BladeCompiler::compileExtensions()</target>
        </trans-unit>
        <trans-unit id="90f058e65834353d06efa0a92555076ffbc6530b" translate="yes" xml:space="preserve">
          <source>BladeCompiler::compileStatement()</source>
          <target state="translated">BladeCompiler::compileStatement()</target>
        </trans-unit>
        <trans-unit id="e557509ba5d9ba980ca7935b3e2252be7203d918" translate="yes" xml:space="preserve">
          <source>BladeCompiler::compileStatements()</source>
          <target state="translated">BladeCompiler::compileStatements()</target>
        </trans-unit>
        <trans-unit id="88f9bce50165924f1efb2c13c2ae08580d641a20" translate="yes" xml:space="preserve">
          <source>BladeCompiler::compileString()</source>
          <target state="translated">BladeCompiler::compileString()</target>
        </trans-unit>
        <trans-unit id="1d6cf64bd928973344b529ed8246525304ca7941" translate="yes" xml:space="preserve">
          <source>BladeCompiler::component()</source>
          <target state="translated">BladeCompiler::component()</target>
        </trans-unit>
        <trans-unit id="47618ab59179664aa78393154471106a2e3de5ff" translate="yes" xml:space="preserve">
          <source>BladeCompiler::directive()</source>
          <target state="translated">BladeCompiler::directive()</target>
        </trans-unit>
        <trans-unit id="fed46c6373f8b22028885d688d7c564bccb11e92" translate="yes" xml:space="preserve">
          <source>BladeCompiler::extend()</source>
          <target state="translated">BladeCompiler::extend()</target>
        </trans-unit>
        <trans-unit id="3a7441f591990ef833ff958672aa7005f9537297" translate="yes" xml:space="preserve">
          <source>BladeCompiler::getCustomDirectives()</source>
          <target state="translated">BladeCompiler::getCustomDirectives()</target>
        </trans-unit>
        <trans-unit id="2b53d024801b1dadb2521cae9c5c17c683e2213e" translate="yes" xml:space="preserve">
          <source>BladeCompiler::getExtensions()</source>
          <target state="translated">BladeCompiler::getExtensions()</target>
        </trans-unit>
        <trans-unit id="92e79bdbe02771ae169274c68a02ebc47b864885" translate="yes" xml:space="preserve">
          <source>BladeCompiler::getPath()</source>
          <target state="translated">BladeCompiler::getPath()</target>
        </trans-unit>
        <trans-unit id="5571d033db3595295327ced01d0c5906928a8c39" translate="yes" xml:space="preserve">
          <source>BladeCompiler::getRawPlaceholder()</source>
          <target state="translated">BladeCompiler::getRawPlaceholder()</target>
        </trans-unit>
        <trans-unit id="c5507a1373cc66abf31c0ed2ff8108fbebe68735" translate="yes" xml:space="preserve">
          <source>BladeCompiler::if()</source>
          <target state="translated">BladeCompiler::if()</target>
        </trans-unit>
        <trans-unit id="21b53b2801ffb34f47cf99e6c03940cc1d65e781" translate="yes" xml:space="preserve">
          <source>BladeCompiler::include()</source>
          <target state="translated">BladeCompiler::include()</target>
        </trans-unit>
        <trans-unit id="629dbe5dfedd360726c19fe05b073d89bd9a6641" translate="yes" xml:space="preserve">
          <source>BladeCompiler::parseToken()</source>
          <target state="translated">BladeCompiler::parseToken()</target>
        </trans-unit>
        <trans-unit id="0f7c3b5c4f55559be13d0772f79d0afb3ea60377" translate="yes" xml:space="preserve">
          <source>BladeCompiler::restoreRawContent()</source>
          <target state="translated">BladeCompiler::restoreRawContent()</target>
        </trans-unit>
        <trans-unit id="f69f1f02904a86fd69123ad2004e4fc39b7fda43" translate="yes" xml:space="preserve">
          <source>BladeCompiler::setEchoFormat()</source>
          <target state="translated">BladeCompiler::setEchoFormat()</target>
        </trans-unit>
        <trans-unit id="95a32bdec7df17544cfe590d075f3566caabeec8" translate="yes" xml:space="preserve">
          <source>BladeCompiler::setPath()</source>
          <target state="translated">BladeCompiler::setPath()</target>
        </trans-unit>
        <trans-unit id="3747f23589a6e996a33a323b343b5adfa0b2e41d" translate="yes" xml:space="preserve">
          <source>BladeCompiler::storePhpBlocks()</source>
          <target state="translated">BladeCompiler::storePhpBlocks()</target>
        </trans-unit>
        <trans-unit id="422b3d7f18a22e72528a3f8472d4d74c5e4360cf" translate="yes" xml:space="preserve">
          <source>BladeCompiler::storeRawBlock()</source>
          <target state="translated">BladeCompiler::storeRawBlock()</target>
        </trans-unit>
        <trans-unit id="65f50cda0b198c1b1a5f4330c30a0dae4d1aeaa2" translate="yes" xml:space="preserve">
          <source>BladeCompiler::storeVerbatimBlocks()</source>
          <target state="translated">BladeCompiler::storeVerbatimBlocks()</target>
        </trans-unit>
        <trans-unit id="e0013d51cb6d58765796ed1b5c0d6d259d7f4b5d" translate="yes" xml:space="preserve">
          <source>BladeCompiler::stripParentheses()</source>
          <target state="translated">BladeCompiler::stripParentheses()</target>
        </trans-unit>
        <trans-unit id="099c7b3900c255668859e29a09eb3f7262e3c97a" translate="yes" xml:space="preserve">
          <source>BladeCompiler::withDoubleEncoding()</source>
          <target state="translated">BladeCompiler::withDoubleEncoding()</target>
        </trans-unit>
        <trans-unit id="d0facce6a8f2ed103d09b72880e2c729d5e988a9" translate="yes" xml:space="preserve">
          <source>BladeCompiler::withoutDoubleEncoding()</source>
          <target state="translated">BladeCompiler::withoutDoubleEncoding()</target>
        </trans-unit>
        <trans-unit id="2de986da119c5879ac15850effb5899b0b46e4b5" translate="yes" xml:space="preserve">
          <source>Blocking pop is an experimental feature. There is a small chance that a queued job could be lost if the Redis server or worker crashes at the same time the job is retrieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06992d2c6a4fd06aa405eff11e7109cec33fa12f" translate="yes" xml:space="preserve">
          <source>Blueprint</source>
          <target state="translated">Blueprint</target>
        </trans-unit>
        <trans-unit id="b83cf40af1c65d2975aa82270c60eaa793d22c11" translate="yes" xml:space="preserve">
          <source>Blueprint (Database\Schema)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24efda9c57c1bde6d6718d9e2180f5d27e97ad3" translate="yes" xml:space="preserve">
          <source>Blueprint::__construct()</source>
          <target state="translated">Blueprint::__construct()</target>
        </trans-unit>
        <trans-unit id="96f84e6e7bef52d77bf1bab398421339023c462b" translate="yes" xml:space="preserve">
          <source>Blueprint::addColumn()</source>
          <target state="translated">Blueprint::addColumn()</target>
        </trans-unit>
        <trans-unit id="a9c81af89589a79dd5010136544296b94eff8d9f" translate="yes" xml:space="preserve">
          <source>Blueprint::addCommand()</source>
          <target state="translated">Blueprint::addCommand()</target>
        </trans-unit>
        <trans-unit id="d3f19cc5357ada0985c5a1a7009539416ad30391" translate="yes" xml:space="preserve">
          <source>Blueprint::addFluentCommands()</source>
          <target state="translated">Blueprint::addFluentCommands()</target>
        </trans-unit>
        <trans-unit id="75d2e2f254997a466d0763bfd44764853bc4f97b" translate="yes" xml:space="preserve">
          <source>Blueprint::addFluentIndexes()</source>
          <target state="translated">Blueprint::addFluentIndexes()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
