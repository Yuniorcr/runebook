<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="phalcon">
    <body>
      <group id="phalcon">
        <trans-unit id="ced11786aabd245232a38f6ed40b3412d3f15f66" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Paginator\AdapterInterface&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21db9e60905505cbb3c592454a3fc0444b97a0c" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Session\AdapterInterface&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cb67c42c61d30f8e375c5dab533165f91f3e1a" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Session\BagInterface&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa353ba1d19193332ac01a67ca28aa6d7692b5d3" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Translate\AdapterInterface&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd04aad6c9e60adaebfc71e388b2629e3583875b" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Translate\InterpolatorInterface&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668892c929ee82ac49f841fa775897ea1b45b7f4" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\ValidationInterface&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab226e7b3ad32f8d4e13d510b533606a1296e2c" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Validation\MessageInterface&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d6bde880b68342e6ab4386c6c8fee70c4e32fb" translate="yes" xml:space="preserve">
          <source>Interface &lt;strong&gt;Phalcon\Validation\ValidatorInterface&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ce6511af3c2469ee5be8e5b176ed005cf57b0d" translate="yes" xml:space="preserve">
          <source>Internal function to add a handler to the group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78c21fba2ac183cb4de50a140915253073e148f" translate="yes" xml:space="preserve">
          <source>Internal handler to call a queue of events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52df803b6d925902dc9071d89d7b4af4545caa72" translate="yes" xml:space="preserve">
          <source>Internal sanitize wrapper to filter_var</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387e450bc4525d2ea4f58931ddc4f9325aa0017c" translate="yes" xml:space="preserve">
          <source>Internal validations, if it returns true, then skip the current validator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382af5d0b33b9c2187d69f50b3bd6af551910e80" translate="yes" xml:space="preserve">
          <source>Internally all the magic methods (and interfaces except JsonSerializable) are implemented using object handlers or similar techniques: this allows to bypass relatively slow method calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96dd4e7793451787dc760c295c4e0dce9f49dd4f" translate="yes" xml:space="preserve">
          <source>Internally gets the request dispatcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="3033a503f2bbd2c38e6212fe082279b7cfc656c1" translate="yes" xml:space="preserve">
          <source>Interpolates context values into the message placeholders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="65c605ee2cd5da05338b1c06abc72c4f70c62dda" translate="yes" xml:space="preserve">
          <source>InvalidCreateAttempt</source>
          <target state="translated">InvalidCreateAttempt</target>
        </trans-unit>
        <trans-unit id="dfff1a05cd478c920bf847f07d59a0ac753dfdab" translate="yes" xml:space="preserve">
          <source>InvalidUpdateAttempt</source>
          <target state="translated">InvalidUpdateAttempt</target>
        </trans-unit>
        <trans-unit id="ed3539cdf2306aa9c3d3c41ec81e72260fa21f24" translate="yes" xml:space="preserve">
          <source>InvalidValue</source>
          <target state="translated">InvalidValue</target>
        </trans-unit>
        <trans-unit id="97806bd2effe742aa52193f6800afc69e3886e20" translate="yes" xml:space="preserve">
          <source>Inversion of Control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f38f504a6cf57c642b415b13b6343795fd75fc" translate="yes" xml:space="preserve">
          <source>Is executed after an integrity validator fails</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d31ed0ff830e625de3b7ac329dd3bf3812a481f" translate="yes" xml:space="preserve">
          <source>Is executed after the fields are validated for not nulls/empty strings or foreign keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5e9bf37370d53f31c4d305f60899fce6e9f2378" translate="yes" xml:space="preserve">
          <source>Is executed after the fields are validated for not nulls/empty strings or foreign keys when an insertion operation is being made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d24d97013c9b6dc239ddd0a22f66b5fcae0a2f52" translate="yes" xml:space="preserve">
          <source>Is executed after the fields are validated for not nulls/empty strings or foreign keys when an updating operation is being made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1059a60a28f0f46922129c29f599e85e714211" translate="yes" xml:space="preserve">
          <source>Is executed after the validation process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4041a100bcaf13360aa90ff25731eaf5944ccc" translate="yes" xml:space="preserve">
          <source>Is executed after the validation process when an insertion operation is being made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8744801f90babbd9ec48fdec448bd800289e49b0" translate="yes" xml:space="preserve">
          <source>Is executed after the validation process when an updating operation is being made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a807b7760ba5ee8d7293f87e8bb68ebba25d7186" translate="yes" xml:space="preserve">
          <source>Is executed before the fields are validated for not nulls or foreign keys when an updating operation is being made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60240628d627726e8e408af6721927233623b49" translate="yes" xml:space="preserve">
          <source>Is executed before the fields are validated for not nulls/empty strings or foreign keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335b14d184989f038130f0e977bc5116660ce3d5" translate="yes" xml:space="preserve">
          <source>Is executed before the fields are validated for not nulls/empty strings or foreign keys when an insertion operation is being made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454e66a8359d1ddc95a48cbf98d63d315c05f3c1" translate="yes" xml:space="preserve">
          <source>Is executed before the fields are validated for not nulls/empty strings or foreign keys when an updating operation is being made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a85187ee65a070ccf290f687a09326240d4345" translate="yes" xml:space="preserve">
          <source>Is executed before the validation process and the final insert/update to the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b012b70d34c94c127fe2805923d06fcf25871bd" translate="yes" xml:space="preserve">
          <source>Is executed before the validation process only when an insertion operation is being made</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0beea535e6d97e67177ba3241da4216a95ca57" translate="yes" xml:space="preserve">
          <source>Is the column part of the primary key or an index?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3781b5300fdcc0d7d4cc8759061f971fe170044d" translate="yes" xml:space="preserve">
          <source>Is the world&amp;rsquo;s most used relational database management system (RDBMS) that runs as a server providing multi-user access to a number of databases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5417f2ad51b4f507cdcb3f15f7dca6faa1e117df" translate="yes" xml:space="preserve">
          <source>Is used to sort the resultset. Use one or more fields separated by commas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1e9d78b37877609e83870001a5fb1076082bb5" translate="yes" xml:space="preserve">
          <source>Isolated Transactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb8c4f319e5a5fb9422dfa8d72c47b092846ff3" translate="yes" xml:space="preserve">
          <source>Isolated transactions are executed in a new connection ensuring that all the generated SQL, virtual foreign key checks and business rules are isolated from the main connection. This kind of transaction requires a transaction manager that globally manages each transaction created ensuring that they are correctly rolled back/committed before ending the request:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d42f7a805d0434640433b9416863abf9711759" translate="yes" xml:space="preserve">
          <source>Isolating Session Data between Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb831979ff8b368bee1b31b217dc105cd874fe13" translate="yes" xml:space="preserve">
          <source>Isolation of business logic from the user interface and the database layer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d06ebb3d356a6810ae26753c956699338a92f15" translate="yes" xml:space="preserve">
          <source>It also introduces a new interface &lt;a href=&quot;../api/phalcon_mvc_model_binder_bindableinterface&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model\Binder\BindableInterface&lt;/em&gt;&lt;/a&gt; which allows you to define the controllers associated models to allow models binding in base controllers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd035fcc0f41689359fc9c3569dff2e04d4b56bb" translate="yes" xml:space="preserve">
          <source>It is a good programming principle for MVC frameworks to set specific values for form elements in the view. You can set those values directly from the controller using &lt;code&gt;Phalcon\Tag::setDefault()&lt;/code&gt;. This helper preloads a value for any helpers present in the view. If any helper in the view has a name that matches the preloaded value, it will use it, unless a value is directly assigned on the helper in the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc41dd0400c4d0ed118ccf65a9f10713ec5eb07" translate="yes" xml:space="preserve">
          <source>It is also possible to manually set the conditions of the JOIN:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbcba0f4d85daa0c6a7fc9c05296aed856d2899b" translate="yes" xml:space="preserve">
          <source>It is important that validators return a valid boolean value indicating if the validation was successful or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d02048e5ea25339f7d83295cc7d168470a1eef" translate="yes" xml:space="preserve">
          <source>It is possible to check if a cache already exists with a given key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb252103c004531fab8240956e41782f50e95e59" translate="yes" xml:space="preserve">
          <source>It is possible to convert values before validation. This is useful in situations where values need to be converted to do the database lookup:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e60bf348788137cfb7a41b86a4a16cd8d469e5" translate="yes" xml:space="preserve">
          <source>It is the first time that an annotations parser component is written in C for the PHP world. &lt;code&gt;Phalcon\Annotations&lt;/code&gt; is a general purpose component that provides ease of parsing and caching annotations in PHP classes to be used in applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507413236d41e94f69512237416edfdf4f57d3d5" translate="yes" xml:space="preserve">
          <source>It registers the majority of services with components provided by the framework as standard. If we need to override the definition of some service we could just set it again as we did above with &amp;ldquo;session&amp;rdquo; or &amp;ldquo;url&amp;rdquo;. This is the reason for the existence of the variable &lt;code&gt;$di&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ba91013e3afec12fd2c66c05feeeb1fcb809d2" translate="yes" xml:space="preserve">
          <source>It removes the named tube from the watch list for the current connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7937c9fa5225b9afe688c5236aa03742a208f29d" translate="yes" xml:space="preserve">
          <source>It supports following secure random number generators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe50d61acdcda4520cf78e9d93689747e0e15c8" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible remove specific variables or destroy the whole session:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb43fb6228d4a3ddfd65cc6eb801ce63c19a02b" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s also possible to run tasks in a chain if it&amp;rsquo;s required. To accomplish this you must add the console itself to the DI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd57b7046a533ce1751c22a72c0aa6c1b06c095e" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s always a good idea to separate your Unit tests in namespaces. For this test we will create the namespace &amp;lsquo;Test&amp;rsquo;. So create a file called testsTestUnitTest.php:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f481e783201f2b9ab7ec5ec1c8f0f82ae78331f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s an integer &amp;lt; 2**32. Jobs with smaller priority values will be scheduled before jobs with larger priorities. The most urgent priority is 0; the least urgent priority is 4,294,967,295.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787f3e46d67f26a1197dd3a0d7a7b096c0c8458b" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s an integer number of seconds to wait before putting the job in the ready queue. The job will be in the &amp;ldquo;delayed&amp;rdquo; state during this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e6d456fe150d22d0bf10c444fe2497004c75ce" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s auto-descriptive. It refers to the name of the referenced table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5a2cc6775fe58db67daf4b9fc45c8c1a090376" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easy to know the internal state of any object. The above example prints the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81085b461b97859b257883c02b5baaa06e534a5b" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s easy to request records from multiple models using PHQL. Most kinds of Joins are supported. As we defined relationships in the models, PHQL adds these conditions automatically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c382810d115eccb96b6e86e36a28239f33c911bd" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to define default values for the module, controller or action. When a route is missing any of those paths they can be automatically filled by the router:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dafc57d9f7b2c127bc30e477bd00587bfb10563" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s possible to pass parameters to actions, the code for this is already present in the sample bootstrap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4428fdc6cb6a9f32fd2bd8567ebd2b45fe58263" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s recommended to use the Memory adapter during development and use one of the other adapters in production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2ce865e3fb6ba72e23d163a714bc2733eb5897" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s therefore easy to find which file and line of the application&amp;rsquo;s code generated the exception, as well as the components involved in generating the exception:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98e6d57ff47108dc289b58927ae9f329b6446b5" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used to cache any kind of PHP data (big arrays, objects, text, etc). Data is serialized before stored in the backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dd89ee851d538672c2f1a60151fb6fb7e506e7" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used to cache any kind of PHP data (big arrays, objects, text, etc). Data is serialized using IgBinary before be stored in the backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9005af4124ce067ba02058640c46a43f85e3326" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used to cache any kind of PHP data without serializing them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfc49f2ea1b59e9b7e485a84383265e54e07897" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used to cache binary data. The data is serialized using base64_encode before be stored in the backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c1814ad45f7f48dc5bea79b239ad006c76368f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s used to sort the resultset. Use one or more fields as each element in the array, 1 means ordering upwards, -1 downward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca76be7b84d714e17e61b65c84bec4810f63dd5" translate="yes" xml:space="preserve">
          <source>Javascript</source>
          <target state="translated">Javascript</target>
        </trans-unit>
        <trans-unit id="64d9a48724df6e89e38019431c94e25efda8570d" translate="yes" xml:space="preserve">
          <source>Jobs must be removed from the queue to avoid double processing. If multiple background jobs workers are implemented, jobs must be &amp;ldquo;reserved&amp;rdquo; so other workers don&amp;rsquo;t re-process them while other workers have them reserved:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cb6826dbbbacc9f0915d9e44ccb82925b04c72" translate="yes" xml:space="preserve">
          <source>Joins</source>
          <target state="translated">Joins</target>
        </trans-unit>
        <trans-unit id="82d5c5afe16718efd55d30a75f6bbd09b3957463" translate="yes" xml:space="preserve">
          <source>Joins the array parts using a separator &lt;a href=&quot;http://php.net/manual/en/function.join.php&quot;&gt;join&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397bb0f9ee9028780e7b916d5d9654341d98e10e" translate="yes" xml:space="preserve">
          <source>Keep in mind that making a &amp;ldquo;forward&amp;rdquo; is not the same as making a HTTP redirect. Although they apparently got the same result. The &amp;ldquo;forward&amp;rdquo; doesn&amp;rsquo;t reload the current page, all the redirection occurs in a single request, while the HTTP redirect needs two requests to complete the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e13409af275322e223f2cc93b128d645eb2a6d7" translate="yes" xml:space="preserve">
          <source>Keep the following points in mind when choosing to use the &amp;ldquo;partial&amp;rdquo; function or &amp;ldquo;include&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74808d3df030e992e7b9444241625147986487c1" translate="yes" xml:space="preserve">
          <source>Kernel</source>
          <target state="translated">Kernel</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="372b525be796b7e7e39eab7515f2817a5b0e8468" translate="yes" xml:space="preserve">
          <source>Key generation (e.g. generation of complicated keys)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aedd3af2db991751d9dacc4d4b06e3ee46cbcdc" translate="yes" xml:space="preserve">
          <source>LEVEL_ACTION_VIEW</source>
          <target state="translated">LEVEL_ACTION_VIEW</target>
        </trans-unit>
        <trans-unit id="3cc70d286ce29f9776bc1f2a307d3c49866addf6" translate="yes" xml:space="preserve">
          <source>LEVEL_AFTER_TEMPLATE</source>
          <target state="translated">LEVEL_AFTER_TEMPLATE</target>
        </trans-unit>
        <trans-unit id="66cae66f92f59ed625a83a0c9e951c3e80e3ff14" translate="yes" xml:space="preserve">
          <source>LEVEL_BEFORE_TEMPLATE</source>
          <target state="translated">LEVEL_BEFORE_TEMPLATE</target>
        </trans-unit>
        <trans-unit id="75b8382bdb774f261e890d93d0431a647bac619e" translate="yes" xml:space="preserve">
          <source>LEVEL_LAYOUT</source>
          <target state="translated">LEVEL_LAYOUT</target>
        </trans-unit>
        <trans-unit id="c073b14aeccda6f40c42e3e623846d2cba38ea86" translate="yes" xml:space="preserve">
          <source>LEVEL_MAIN_LAYOUT</source>
          <target state="translated">LEVEL_MAIN_LAYOUT</target>
        </trans-unit>
        <trans-unit id="cef77b298c27eccf488ab98e8a333deb6bc56f1c" translate="yes" xml:space="preserve">
          <source>LEVEL_NO_RENDER</source>
          <target state="translated">LEVEL_NO_RENDER</target>
        </trans-unit>
        <trans-unit id="13d9f7d5d6aa9b4a0f4fa2669925e754e1ff84dc" translate="yes" xml:space="preserve">
          <source>Lastly, there is the &lt;code&gt;findFirstBy&amp;lt;property-name&amp;gt;()&lt;/code&gt; method. This method expands on the &lt;code&gt;findFirst()&lt;/code&gt; method mentioned earlier. It allows you to quickly perform a retrieval from a table by using the property name in the method itself and passing it a parameter that contains the data you want to search for in that column. An example is in order, so taking our Robots model mentioned earlier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56df5292a89b571cc1bd02ed94631192b0a193d" translate="yes" xml:space="preserve">
          <source>Lazy-Load of handlers for Mvc\Micro using auto-loading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be83ebe6aa5b88d70377aba106976fb415d42591" translate="yes" xml:space="preserve">
          <source>Learn more about filtering in Phalcon by reading the &lt;a href=&quot;filter&quot;&gt;&lt;em&gt;Filter documentation&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2563ec583d97c786cba5f25a9c2fe655a3c65d1a" translate="yes" xml:space="preserve">
          <source>Learn more about the HTTP environment in their dedicated articles &lt;a href=&quot;request&quot;&gt;&lt;em&gt;request&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;response&quot;&gt;&lt;em&gt;response&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902c91d94e0fd512d0a7f41cf7f018ee6f01bf85" translate="yes" xml:space="preserve">
          <source>Legal</source>
          <target state="translated">Legal</target>
        </trans-unit>
        <trans-unit id="96b02397d14ba31c1e7a8203cc01bfddd8dfe36f" translate="yes" xml:space="preserve">
          <source>Length filter. If an array/object is passed a count is performed otherwise a strlen/mb_strlen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f80fb413b4cbff264a17dd961ffaa65fee9d95" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s pretend we&amp;rsquo;ve created the following controller and you want to create a plugin that automatically starts the cache if the last action executed is marked as cacheable. First off all, we register a plugin in the Dispatcher service to be notified when a route is executed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">License</target>
        </trans-unit>
        <trans-unit id="7db120ff0add5b38c6339cbb76ef30243d16848f" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution License 3.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d33f31baff91c27917dcfcd7222cc394cee13fd" translate="yes" xml:space="preserve">
          <source>Lifetime</source>
          <target state="translated">Lifetime</target>
        </trans-unit>
        <trans-unit id="122b7d19b2f2973880939e6236aecce42f60a774" translate="yes" xml:space="preserve">
          <source>Limit the results of the query to results to certain range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9c34df8bbfbd9174d2d46840023457a0e5cb80" translate="yes" xml:space="preserve">
          <source>Line Formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33d681fa533cd0ff268977c9f522eb73b2fb0f6" translate="yes" xml:space="preserve">
          <source>Linux/Solaris</source>
          <target state="translated">Linux/Solaris</target>
        </trans-unit>
        <trans-unit id="8c9b81311aa0c5a27159e338fa6f5352481288f4" translate="yes" xml:space="preserve">
          <source>List all tables in database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5c1274b7503104d964b1d1e2e2625df5c6014e" translate="yes" xml:space="preserve">
          <source>List all tables on a database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668f0130bf39b864a164bab2e2ac11e11199aab5" translate="yes" xml:space="preserve">
          <source>List all views on a database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f71c673a27566220a3f9fd440f6f51fbfd9d440" translate="yes" xml:space="preserve">
          <source>List of Control Structures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2314b472b96fdee049f882d1ebde99ce982797b" translate="yes" xml:space="preserve">
          <source>List of examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4f58ac245414b1942968db8514a6d3eb2fec30" translate="yes" xml:space="preserve">
          <source>Listen for uncaught exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b900a310948d5357f1dc697c420ccf77183d6c0" translate="yes" xml:space="preserve">
          <source>Listen for uncaught exceptions and unsilent notices or warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f112e3da609e162f27ca14a06cde009d4380976" translate="yes" xml:space="preserve">
          <source>Listen for unsilent notices or warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276a93d57d793ec32f632f8795623b99575ae193" translate="yes" xml:space="preserve">
          <source>Listener Priorities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f57b5215cecef435ab8e5ea4c12fe416e018257" translate="yes" xml:space="preserve">
          <source>Listeners</source>
          <target state="translated">Listeners</target>
        </trans-unit>
        <trans-unit id="2d011582f549289d38d4fc0604835a9b9360e723" translate="yes" xml:space="preserve">
          <source>Listens for notifications from the models manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2029d57789050670edc56f7c170c3842469db25e" translate="yes" xml:space="preserve">
          <source>Lists table indexes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bf3505907351df12ece9f16973aacc110eeed4" translate="yes" xml:space="preserve">
          <source>Lists table references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ba7dcf662374aafe652b03d75cb8f6024519d9" translate="yes" xml:space="preserve">
          <source>Literals</source>
          <target state="translated">Literals</target>
        </trans-unit>
        <trans-unit id="cf7edff74a9920d52ad12ee402b1fc5b3c3b1daf" translate="yes" xml:space="preserve">
          <source>Literals can be disabled in PHQL, this means that directly using strings, numbers and boolean values in PHQL strings will be disallowed. If PHQL statements are created embedding external data on them, this could open the application to potential SQL injections:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71bff2d2c7c5cb74673827ad3912660b17f47ba0" translate="yes" xml:space="preserve">
          <source>Load Classes and Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1604c52bedd17aa3a37409ed455b88d65f44d2f" translate="yes" xml:space="preserve">
          <source>Load translates from file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6f9069daa80029e880d76fc3bf6a0698a7d554" translate="yes" xml:space="preserve">
          <source>Loader</source>
          <target state="translated">Loader</target>
        </trans-unit>
        <trans-unit id="11f51a300f28888cc462a7abda9146aa3af7a415" translate="yes" xml:space="preserve">
          <source>Loads a model throwing an exception if it doesn&amp;rsquo;t exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bb9f67595c9c0919e04d4ca37ea27dfccd38e4" translate="yes" xml:space="preserve">
          <source>Loads registered template engines, if none is registered it will use Phalcon\Mvc\View\Engine\Php</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c8bc26370c3738b0a85b2fdd78e614a0382dcd" translate="yes" xml:space="preserve">
          <source>Local reference columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c81f9af549364eb418b04ec5f8ced5a4e9b757" translate="yes" xml:space="preserve">
          <source>Local resources are those who are provided by the same application and they&amp;rsquo;re located in the document root of the application. URLs in local resources are generated by the &amp;lsquo;url&amp;rsquo; service, usually &lt;a href=&quot;../api/phalcon_mvc_url&quot;&gt;&lt;em&gt;Phalcon\Mvc\Url&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639db99d49ccdd968efe62379bc52994dc656819" translate="yes" xml:space="preserve">
          <source>Local/Remote resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243569de57658ebbbfdc837d0d0fc4bdb9a4ce68" translate="yes" xml:space="preserve">
          <source>Locale-Sensitive comparison</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745f856fa44dbfb0090fe3abf1e9e990c6669a61" translate="yes" xml:space="preserve">
          <source>Log into the Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fda8955183b9ca569e265aca9827c55a73580c8" translate="yes" xml:space="preserve">
          <source>Log message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce19a154b922d24b147130ac8d5d4bca9d41378" translate="yes" xml:space="preserve">
          <source>Log timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7162de4f5f9a54499a625d061eee122682150d13" translate="yes" xml:space="preserve">
          <source>Log type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8432c24573f3f89fad60802fe8eddf1da6315768" translate="yes" xml:space="preserve">
          <source>Logger</source>
          <target state="translated">Logger</target>
        </trans-unit>
        <trans-unit id="04248b4292014067b5bbc14ee1d9ed812e43235b" translate="yes" xml:space="preserve">
          <source>Logger::ALERT</source>
          <target state="translated">Logger::ALERT</target>
        </trans-unit>
        <trans-unit id="71b2535c05949372384058469576552eb63e930e" translate="yes" xml:space="preserve">
          <source>Logger::DEBUG</source>
          <target state="translated">Logger::DEBUG</target>
        </trans-unit>
        <trans-unit id="285ebb369eddedb015ec374355ab82c591cd851f" translate="yes" xml:space="preserve">
          <source>Logger::ERROR</source>
          <target state="translated">Logger::ERROR</target>
        </trans-unit>
        <trans-unit id="e4b9a3701926e179aa4ad7f013540381e7dbae75" translate="yes" xml:space="preserve">
          <source>Logger::INFO</source>
          <target state="translated">Logger::INFO</target>
        </trans-unit>
        <trans-unit id="b8416ae797e748fc2923a6246c1f77c75c320306" translate="yes" xml:space="preserve">
          <source>Logger\Item</source>
          <target state="translated">Logger\Item</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="af2e7a33ce31844e1e32ea4cfa2c2586e2a95515" translate="yes" xml:space="preserve">
          <source>Logging Low-Level SQL Statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711bfe7a903b60a897a4e778b9cff4d78efbf701" translate="yes" xml:space="preserve">
          <source>Logging SQL Statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98b0aa9b6be573b38f24589844809dc87575434" translate="yes" xml:space="preserve">
          <source>Logging data to an adapter i.e. File (file system) is always an expensive operation in terms of performance. To combat that, you can take advantage of logging transactions. Transactions store log data temporarily in memory and later on write the data to the relevant adapter (File in this case) in a single atomic operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7b2f32d32ba170b2cb801b3c42a2aca37c19ed" translate="yes" xml:space="preserve">
          <source>Logging to Multiple Handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d52a6d8fedcc48a65297c07bf5f7e3e41aab5aa" translate="yes" xml:space="preserve">
          <source>Logic</source>
          <target state="translated">Logic</target>
        </trans-unit>
        <trans-unit id="3047198af24aba3007973cefd9bac000b83cdf99" translate="yes" xml:space="preserve">
          <source>Logic operators are useful in the &amp;ldquo;if&amp;rdquo; expression evaluation to combine multiple tests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a882c00f2431b44b3bfe8d6a6642b3fd1f71214" translate="yes" xml:space="preserve">
          <source>Logs messages to the internal logger. Appends logs to the logger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfdaa064ff41fa21a361da048d8ed320ed172d3" translate="yes" xml:space="preserve">
          <source>Logs to a PHP Streams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8150bbe2a67ac82dfc7d83df8028f1c1d80c5bb9" translate="yes" xml:space="preserve">
          <source>Logs to a plain text file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0686e299b1ad367a5524d6c58b2c0d3483aa762" translate="yes" xml:space="preserve">
          <source>Logs to the FirePHP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82975b22780357402491dc4ba688722afda25173" translate="yes" xml:space="preserve">
          <source>Logs to the system logger</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4af5422d5bdb66cb350e2a3c2621e643f10221d" translate="yes" xml:space="preserve">
          <source>Loop Context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340bf0701d40cacdb129bb163405ded4feefb5e5" translate="yes" xml:space="preserve">
          <source>Loop Controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061bee801367fa0f30e872f930d569fae0d888fb" translate="yes" xml:space="preserve">
          <source>Loop over each item in a sequence. The following example shows how to traverse a set of &amp;ldquo;robots&amp;rdquo; and print his/her name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f446db0067160b9448412cc9bcd1736965247db" translate="yes" xml:space="preserve">
          <source>Low-Level Database Connection Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840dacb217670c17dea664bca2514842f4976a14" translate="yes" xml:space="preserve">
          <source>Lowercases a string, this function makes use of the mbstring extension if available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db660ff5d42c13a40eb6a0fe764f22f01b5b3187" translate="yes" xml:space="preserve">
          <source>MVC Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489cca6ae53a88659fc69f39fd6295445a8b7be3" translate="yes" xml:space="preserve">
          <source>MVC benefits include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be183565e7f4ee2c7447f29208fd5ef893ac454" translate="yes" xml:space="preserve">
          <source>MVC examples on Github</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48af28979910507a72300805b16b39786c09205" translate="yes" xml:space="preserve">
          <source>Mac OS X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="3da7ad9762569f188ec4fb599297f6b995b5640e" translate="yes" xml:space="preserve">
          <source>Macros can be used to reuse logic in a template, they act as PHP functions, can receive parameters and return values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323ef4750842983b6fd42aa19d05787a41af07c3" translate="yes" xml:space="preserve">
          <source>Macros can return values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45fb4edc8542b55195e1c4ec99a33d4a8677c1cd" translate="yes" xml:space="preserve">
          <source>Magic Getters vs. Explicit methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f950e7f2900971e3fd46e27ff7aef1b5c9404cd2" translate="yes" xml:space="preserve">
          <source>Magic __set_state helps to re-build messages variable exporting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7536c7496104e93e97ddb0a2d64787b15f757b" translate="yes" xml:space="preserve">
          <source>Magic __set_state helps to re-build messages variable when exporting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235d8dc4316ba08ae571b54fafa01404cfd155a8" translate="yes" xml:space="preserve">
          <source>Magic __set_state helps to recover messages from serialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1b0c1faa8ca5e2a5feccf210df6034577ff1d0" translate="yes" xml:space="preserve">
          <source>Magic __toString method converts the cookie&amp;rsquo;s value to string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7017737244f8f2717f99ebabb7fc39bb50d2d183" translate="yes" xml:space="preserve">
          <source>Magic __toString method returns verbose message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5b94617fa2b651890304977e47622a14ed4101" translate="yes" xml:space="preserve">
          <source>Magic getter to obtain values from the session bag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a6906e66b5f3141602ab8762eeb91753008470" translate="yes" xml:space="preserve">
          <source>Magic isset to check whether a property is defined in the bag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4a52a2efa0adaa2c6b90845b3270400f60df4e" translate="yes" xml:space="preserve">
          <source>Magic method __get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb06759c35e7db781cb0d216e25502135c60f49c" translate="yes" xml:space="preserve">
          <source>Magic method __toString renders the widget without attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2227616dadbcf1c9b0949345c3b79a7f331a9423" translate="yes" xml:space="preserve">
          <source>Magic method to assign values to the the model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b53e625d6d4d070b46852da351d16c7999b5862" translate="yes" xml:space="preserve">
          <source>Magic method to check if a property is a valid relation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952454803e1b998a7719be4e92b51533941355c4" translate="yes" xml:space="preserve">
          <source>Magic method to get or set services using setters/getters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2025c2bc4027cd4efccda25441088ed42e1b293" translate="yes" xml:space="preserve">
          <source>Magic method to get related records using the relation alias as a property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913a32d572645d27de2a52989f8977beac508932" translate="yes" xml:space="preserve">
          <source>Magic method to pass variables to the views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2631884c647540dc3c3d28485a3dae6118f10d" translate="yes" xml:space="preserve">
          <source>Magic method to retrieve a variable passed to the view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90671d8b75c4885bb2941ac2f341f2ef5c13a62" translate="yes" xml:space="preserve">
          <source>Magic method to retrieve if a variable is set in the view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83dadcf2fa768599804466d6a6ab26c9282482c2" translate="yes" xml:space="preserve">
          <source>Magic properties can be used to store a record and its related properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9663ffaeeb24c32912068f1ea4d234cbc48c5d" translate="yes" xml:space="preserve">
          <source>Magic setter to assign values to the session bag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983f44018e111eb8af72c3653acfae7de46d8c1b" translate="yes" xml:space="preserve">
          <source>Magic unset to remove items using the array syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770bc9c054fdf0b5532170f0d4d51dc1a112d633" translate="yes" xml:space="preserve">
          <source>Main Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a598407d211da8c227c8351b6ce57d8f6c548a" translate="yes" xml:space="preserve">
          <source>Makes a connection to the Beanstalkd server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab1fb2f60a82fec50f7a5b9cd307cba508100cf" translate="yes" xml:space="preserve">
          <source>Makes a phrase underscored instead of spaced</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9908d98265b070ae9d86a5ff7c4cbac9b1d9e5" translate="yes" xml:space="preserve">
          <source>Makes an underscored or dashed phrase human-readable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0c72011fc0a6e254f9c610d79b7cce48c7a278" translate="yes" xml:space="preserve">
          <source>Making Redirections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8ab12ffdd83b56820c820867d0d99637d9a001" translate="yes" xml:space="preserve">
          <source>Making Select Boxes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe9d748671f8acb54eb26404ce991da550256c1" translate="yes" xml:space="preserve">
          <source>Making it clear where different types of code belong for easier maintenance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6fc7e810104c6f50e83b2b0dbf23f9109fdfb27" translate="yes" xml:space="preserve">
          <source>Making redirections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1087f93111fe33e475325221b6188b89a063c3c5" translate="yes" xml:space="preserve">
          <source>Manages ACL lists in memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282fc0581419c4e4b3ee3d651661e59e4e6e800f" translate="yes" xml:space="preserve">
          <source>Manages collections of CSS/Javascript assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbad99030f9584af593b21e08313bb39ae814ab" translate="yes" xml:space="preserve">
          <source>Manipulating services individually</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf0393be7b868668ce677900155518cfb1e015a" translate="yes" xml:space="preserve">
          <source>Manual Metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26684a211906247ddf23945c8cac82e44f0adcb6" translate="yes" xml:space="preserve">
          <source>Manual Transactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f451ead90d5def21e8ce017408d8e828bef424" translate="yes" xml:space="preserve">
          <source>Manual bootstrapping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff8027839b09eeec46de335f53af0bda289a7a7" translate="yes" xml:space="preserve">
          <source>Many listeners may be added to the same event manager. This means that for the same type of event, many listeners can be notified. The listeners are notified in the order they were registered in the EventsManager. Some events are cancelable, indicating that these may be stopped preventing other listeners from being notified about the event:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922d4fb809400adb269503d3cbf991946bebdfa2" translate="yes" xml:space="preserve">
          <source>Many to many relationships require 3 models and define the attributes involved in the relationship:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b44a1ab462e87b2c27c500662b5e430bc0d704" translate="yes" xml:space="preserve">
          <source>Maps a route to a handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af6d6f7dad101759293b166156f550e11946e2f" translate="yes" xml:space="preserve">
          <source>Maps a route to a handler that only matches if the HTTP method is DELETE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474c49d215f6fd1430a61a9e4c2f36eb9bb10eee" translate="yes" xml:space="preserve">
          <source>Maps a route to a handler that only matches if the HTTP method is GET</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bd573dd79c6d357f059b4160b4a3d147259aaf" translate="yes" xml:space="preserve">
          <source>Maps a route to a handler that only matches if the HTTP method is HEAD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c84912f76b9a0a2b717cef2963c5dc008311bdf" translate="yes" xml:space="preserve">
          <source>Maps a route to a handler that only matches if the HTTP method is OPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dda27939d953d639f146e03d221961776be0742" translate="yes" xml:space="preserve">
          <source>Maps a route to a handler that only matches if the HTTP method is PATCH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba73d83bc83cfb3d596fedfd26568ff29ad8d04d" translate="yes" xml:space="preserve">
          <source>Maps a route to a handler that only matches if the HTTP method is POST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8750e439089df3629dd7ba4dbd5b9d27955d931c" translate="yes" xml:space="preserve">
          <source>Maps a route to a handler that only matches if the HTTP method is PUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38af7d40d6ce3f19cfd7f4d7ad8352dc91b96e29" translate="yes" xml:space="preserve">
          <source>Maps a route to a handler without any HTTP method constraint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80006d6980893a96dfbf4cc6c361bd52afb01fa" translate="yes" xml:space="preserve">
          <source>Mark the field as part of the table&amp;rsquo;s primary key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacebdad15000a39547508e01cecba46c9f6b2a9" translate="yes" xml:space="preserve">
          <source>Match Callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e6d6c11cf99d9329444172e480e477f87cd8ea" translate="yes" xml:space="preserve">
          <source>Matches a list of optional words separated by slashes. Only use this placeholder at the end of a route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9256b15366091d2289ebdb861f60a9bc9b65e341" translate="yes" xml:space="preserve">
          <source>Matches a single level namespace name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8afc88a7303517bc3dbcbbf86513ece38a1642" translate="yes" xml:space="preserve">
          <source>Matches a valid action name with alpha-numeric characters only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c41542f5e0df4b08d6628748d7ff205199027f" translate="yes" xml:space="preserve">
          <source>Matches a valid controller name with alpha-numeric characters only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796f910cf8ced60dd77bc2732207c480f393e2e0" translate="yes" xml:space="preserve">
          <source>Matches a valid module name with alpha-numeric characters only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631a70a1aa2f150907787c47194ce483cbc68474" translate="yes" xml:space="preserve">
          <source>Matches an integer parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd60456a7b71db3e5ba236005c54740ad78fc2a6" translate="yes" xml:space="preserve">
          <source>Matching Routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edf0df49942da6d11a1a217e4d3af4a5a8e64f2" translate="yes" xml:space="preserve">
          <source>Math</source>
          <target state="translated">Math</target>
        </trans-unit>
        <trans-unit id="dcbaa502a01c9001ab668440bc582b38297b23e6" translate="yes" xml:space="preserve">
          <source>Max/Min examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d96e3ff40932feaa624464b3aaf74bf486e6db8" translate="yes" xml:space="preserve">
          <source>May be the case that after obtaining a record from the database is necessary to initialise the data before being used by the rest of the application. You can implement the &lt;code&gt;afterFetch()&lt;/code&gt; method in a model, this event will be executed just after create the instance and assign the data to it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d6ce04246aa998e6277ee65d7a6f91d3d04c59" translate="yes" xml:space="preserve">
          <source>Medium applications using the &lt;code&gt;Mvc\Micro&lt;/code&gt; approach may require organize handlers in controllers. You can use &lt;a href=&quot;../api/phalcon_mvc_micro_collection&quot;&gt;&lt;em&gt;Phalcon\Mvc\Micro\Collection&lt;/em&gt;&lt;/a&gt; to group handlers that belongs to controllers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc301f7283a9e45e85a8a8deab4551d236d86a4" translate="yes" xml:space="preserve">
          <source>Memcached</source>
          <target state="translated">Memcached</target>
        </trans-unit>
        <trans-unit id="4ba9d0c8d44f133eae3c053ec4c1c3e74cf3784e" translate="yes" xml:space="preserve">
          <source>Memcached Backend Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a8877447c88368aead15796a73403e7ab45b22" translate="yes" xml:space="preserve">
          <source>Memcached Backend Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c8a2851d1755cf87365b4a7c55e5551cf878c6" translate="yes" xml:space="preserve">
          <source>Memory</source>
          <target state="translated">Memory</target>
        </trans-unit>
        <trans-unit id="2e834413b1631ab2cca8db1075ce33c6cc4367e8" translate="yes" xml:space="preserve">
          <source>Merge modules with the existing ones</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fdd21c31e6794bb55e9df4f39124f8f4900935" translate="yes" xml:space="preserve">
          <source>Merge two arrays of find parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caea444ca71d7f0f162947f6d512250042eb9518" translate="yes" xml:space="preserve">
          <source>Merges a configuration into the current one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9725e1e1f17f76c8244d2024ea1df1b299a0179" translate="yes" xml:space="preserve">
          <source>Merging Configurations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0eb37d987caeb7f4241b1ced601aa550809378c" translate="yes" xml:space="preserve">
          <source>Message Formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b34bd4b083e172b9f2c42ec75b6936e1253290" translate="yes" xml:space="preserve">
          <source>Message formatting using time and date patterns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9443e7db945e2d002bf6fc502da6948e9a15b8e9" translate="yes" xml:space="preserve">
          <source>Messages sent to the flash service are automatically formatted with HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07d14df207be18271b4dd721be100d71ab6df54" translate="yes" xml:space="preserve">
          <source>Metadata Strategies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="a7e043fd7c0c72180df5fc7b265317f3bea076cb" translate="yes" xml:space="preserve">
          <source>Method &amp;lsquo;showAction&amp;rsquo; receives an instance of the model Posts, the developer could inspect this before dispatch the action preparing the parameter accordingly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="5eb4d66e01828abfef79deb9c5d4191f2227daea" translate="yes" xml:space="preserve">
          <source>Methods on event listeners accept an &lt;a href=&quot;../api/phalcon_events_event&quot;&gt;&lt;em&gt;Phalcon\Events\Event&lt;/em&gt;&lt;/a&gt; object as their first parameter - methods in controllers do not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffc6f7b91618e0219fab51e0e808f4fd64463ae" translate="yes" xml:space="preserve">
          <source>Methods to get information about views are also implemented for every supported database system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0685dcc74245b28d38403ba619336460f6ec0236" translate="yes" xml:space="preserve">
          <source>Micro Application Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0764cad49ef6f34583b3b270085f7e03047d246" translate="yes" xml:space="preserve">
          <source>Micro Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebbb53e87529362e88910952f34e0b91e05d6f5" translate="yes" xml:space="preserve">
          <source>Middleware events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74cb711f185f3f9b03b33d036895294eae456e83" translate="yes" xml:space="preserve">
          <source>Migration Class Anatomy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e4a585c34b2f6bb298198988ae585ffe242621" translate="yes" xml:space="preserve">
          <source>Migrations are a convenient way for you to alter your database in a structured and organized manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e8df7b9b4604dbbe3e4e8f63e31c0f19757dc5" translate="yes" xml:space="preserve">
          <source>Migrations aren&amp;rsquo;t only designed to &amp;ldquo;morph&amp;rdquo; table. A migration is just a regular PHP class so you&amp;rsquo;re not limited to these functions. For example after adding a column you could write code to set the value of that column for existing records. For more details and examples of individual methods, check the &lt;a href=&quot;db&quot;&gt;&lt;em&gt;database component&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5328bcae24dc7dc398ccb8c419d825e907afc6cd" translate="yes" xml:space="preserve">
          <source>Minification/Filtering</source>
          <target state="translated">Minification/Filtering</target>
        </trans-unit>
        <trans-unit id="82e0eb90d03cbf82fe56afa4e261a7f6f234a7ee" translate="yes" xml:space="preserve">
          <source>Minifies CSS by removing unnecessary characters that are already ignored by browsers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814a5a62078f2513624b11cf266d46f7a1098289" translate="yes" xml:space="preserve">
          <source>Minifies JavaScript by removing unnecessary characters that are ignored by Javascript interpreters/compilers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d153373fd64ba3faf8c35bf7a41534818665b7" translate="yes" xml:space="preserve">
          <source>Minify the css - removes comments removes newlines and line feeds keeping removes last semicolon from last property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d104972273587aa46f3ae21c212a397fde894f4f" translate="yes" xml:space="preserve">
          <source>Mixing Array and Short Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e11c5a21c772d58a1ad996dc6c461bc002ad55" translate="yes" xml:space="preserve">
          <source>Mixing different types of definitions is allowed, everyone can decide what is the most appropriate way to register the services according to the application needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663433567f8f936d7538a48d91c845eb584253e6" translate="yes" xml:space="preserve">
          <source>Model Behaviors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d1ca66c41254171e26939298c91e4676ab6741" translate="yes" xml:space="preserve">
          <source>Model Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817f9d67353c530f2c6d64063a80813debd1618f" translate="yes" xml:space="preserve">
          <source>Model Relationships</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e1eb079e3a9f09e0cd51a41567dbc08f9b739f" translate="yes" xml:space="preserve">
          <source>Model Resultsets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e763b71646cc804e0a8b05083f55ed7dc8b348" translate="yes" xml:space="preserve">
          <source>Model Transactions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cfee00cd0c6c2e64b6b969331c9bdc4e351f0a3" translate="yes" xml:space="preserve">
          <source>Model extends the class name supplied [optional]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac32515a8303d9a95e48586b7a335d8bb00ddaa" translate="yes" xml:space="preserve">
          <source>Model&amp;rsquo;s namespace [optional]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="1bd66afbba840deccbbb1ecdb528daaebe76cd20" translate="yes" xml:space="preserve">
          <source>Models Management Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d19dc21bea4545abadaf5fa5a92df766273662f" translate="yes" xml:space="preserve">
          <source>Models Meta-Data Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26f659d0cca067214abed01ec0d22342605b94b" translate="yes" xml:space="preserve">
          <source>Models Metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca88cbe57e5e466c9c7c980c27bca0d1be2d1cd" translate="yes" xml:space="preserve">
          <source>Models Transaction Manager Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242d17cac92dc5d65fbbdd73f4321c00cbbc0bbf" translate="yes" xml:space="preserve">
          <source>Models allow you to implement events that will be thrown when performing an insert or update. They help define business rules for a certain model. The following are the events supported by &lt;a href=&quot;../api/phalcon_mvc_collection&quot;&gt;&lt;em&gt;Phalcon\Mvc\Collection&lt;/em&gt;&lt;/a&gt; and their order of execution:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d7eddc239d95d7ec78ef131a49b6ac66acdcde" translate="yes" xml:space="preserve">
          <source>Models allow you to implement events that will be thrown while performing an insert/update/delete which can be used to define business rules. The following are the events supported by &lt;a href=&quot;../api/phalcon_mvc_model&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model&lt;/em&gt;&lt;/a&gt; and their order of execution:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734bd99ec21d6134c1a797ca4b06477cd4b71193" translate="yes" xml:space="preserve">
          <source>Models are intended to work with the database on a high layer of abstraction. If you need to work with databases at a lower level check out the &lt;a href=&quot;../api/phalcon_db&quot;&gt;&lt;em&gt;Phalcon\Db&lt;/em&gt;&lt;/a&gt; component documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cd2410fe94ac5fb0ec2278a984f43e593d01ad" translate="yes" xml:space="preserve">
          <source>Models can be implemented with properties of public scope, meaning that each property can be read/updated from any part of the code that has instantiated that model class without any restrictions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c465ce869eabf27b7eeebb5b6de60c46a162692" translate="yes" xml:space="preserve">
          <source>Models in Micro Applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d367dcf20aea3b09c80c6ff2c46569146711892f" translate="yes" xml:space="preserve">
          <source>Models in Namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d42602e92d24e8effe61f32782fbba48b9d3e39" translate="yes" xml:space="preserve">
          <source>Modifies a table column based on a definition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203d0b598d4fdf73fff6725c487c5fa3bc53da85" translate="yes" xml:space="preserve">
          <source>Modify the phpunit.xml to fit your needs and save it in tests/.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75974b94ca2488a1e937d7b9774fe3e08be841a" translate="yes" xml:space="preserve">
          <source>Modifying current strategies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="1d4f1b86cd75597593750b3848ac0dd985d8db50" translate="yes" xml:space="preserve">
          <source>Mongo</source>
          <target state="translated">Mongo</target>
        </trans-unit>
        <trans-unit id="139d2787edf9b69e01f276c14b2659c0454d5a66" translate="yes" xml:space="preserve">
          <source>Mongo Backend Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abe350b28fa3acd7f1f7a1f81b867b5083f9b96" translate="yes" xml:space="preserve">
          <source>Mongo collection in the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421f9014910a1c6a82c6deb7e78e9ebee72c0c6e" translate="yes" xml:space="preserve">
          <source>Mongo database name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c6acff24bc7941d7797f41a861782190b4b85f" translate="yes" xml:space="preserve">
          <source>MongoDB</source>
          <target state="translated">MongoDB</target>
        </trans-unit>
        <trans-unit id="741e3c6bbfc30a679f4b84f282fa48e0c1f3eb51" translate="yes" xml:space="preserve">
          <source>MongoDB is a scalable, high-performance, open source NoSQL database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2896316fa0c062a983b07427dc56d02397f82ac3" translate="yes" xml:space="preserve">
          <source>MongoDb</source>
          <target state="translated">MongoDb</target>
        </trans-unit>
        <trans-unit id="073e563935abffa9e8046b3bf44f013639de0e86" translate="yes" xml:space="preserve">
          <source>More examples of the builder:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08965269be31a1f77226663d4b16152886fa2985" translate="yes" xml:space="preserve">
          <source>More examples:</source>
          <target state="translated">Más ejemplos:</target>
        </trans-unit>
        <trans-unit id="a85e50a0179108db4be1a61a2b7ed3f48a2cd162" translate="yes" xml:space="preserve">
          <source>More forwarding examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862dd4046fadba77b859804e854b1f3604e67058" translate="yes" xml:space="preserve">
          <source>Moreover, V&amp;ouml;kur&amp;oacute;, unlike the INVO, utilizes namespaces for controllers and models which is the recommended practice to structure a project. This way the autoloader looks slightly different than the one we saw before (app/config/loader.php):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa360d8f3e100867742d2f75bbb23071d98b4c5" translate="yes" xml:space="preserve">
          <source>Most IDEs and editors with auto-completion capabilities can not infer the correct types when using magic getters, instead of use the magic getters you can optionally define those methods explicitly with the corresponding docblocks helping the IDE to produce a better auto-completion:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdbe7797e8fd1e63fdefe356b35f42d4cc7c24c" translate="yes" xml:space="preserve">
          <source>Most database systems provide tools to identify slow SQL statements. Detecting and fixing slow queries is very important in order to increase performance in the server side. In the Mysql case, you can use the slow query log to know what SQL queries are taking more time than expected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e2665433f73822dfaf039c068a4fbad52ef211" translate="yes" xml:space="preserve">
          <source>Most modern browsers have tools to profile the page loading time. In Chrome you can use the web inspector to know how much time is taking the loading of the different resources required by a single page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c0e2be893710a4a354802f2e59f79ea04cbb02" translate="yes" xml:space="preserve">
          <source>Most of the SQL standard is supported by PHQL, even nonstandard directives such as LIMIT:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6625e29a298a59bf5461496cb3a44f1fa4eb827" translate="yes" xml:space="preserve">
          <source>Most options that manipulate data in INVO (companies, products and types of products) were developed using a basic and common &lt;a href=&quot;http://en.wikipedia.org/wiki/Create,_read,_update_and_delete&quot;&gt;CRUD&lt;/a&gt; (Create, Read, Update and Delete). Each CRUD contains the following files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea8c3762671c9094b2ab5529632e45f0ad1e836" translate="yes" xml:space="preserve">
          <source>Mounts a collection of handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249b6f2d6b0feda6afd413d7652b8708cdfcb3b8" translate="yes" xml:space="preserve">
          <source>Mounts a group of routes in the router</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78723b710d750e5f3604f3f85e29cc9efb861649" translate="yes" xml:space="preserve">
          <source>Move the job to the ready queue if it is delayed or buried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8068dfc2f7adc64316732f19846fe2e7dd453932" translate="yes" xml:space="preserve">
          <source>Moves cursor to next row in the registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f75c3b096c6bbf1dc720989e9679702a5fd196" translate="yes" xml:space="preserve">
          <source>Moves cursor to next row in the resultset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5200e1a7eb8a2d5d78bfebf0b5d2a9630df40c13" translate="yes" xml:space="preserve">
          <source>Moves internal resultset cursor to another position letting us to fetch a certain row</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef97d27193f3eb465d20f030fb11dc8cb7c6ec2" translate="yes" xml:space="preserve">
          <source>Moves the internal iteration pointer to the next position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a19db95c16ff162d390305f61504119654cba7" translate="yes" xml:space="preserve">
          <source>Moves the temporary file to a destination within the application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08104df2c521cb33fc99c7ee4973ebdd0615b659" translate="yes" xml:space="preserve">
          <source>Multi Module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d43ec44e5793f4de85f9047bf5ade9e6fbee397" translate="yes" xml:space="preserve">
          <source>Multi-Level Cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38971cd751107eb66b4f289858c7f350d2e0723" translate="yes" xml:space="preserve">
          <source>Multi-lingual Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48353bd1f51bb6eec720b26a40670dcc8efa9d3b" translate="yes" xml:space="preserve">
          <source>Multiple Inheritance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653ff0cb0b620c9c811850c4b7ef185ca048ea1f" translate="yes" xml:space="preserve">
          <source>Multiple assignments are allowed in the same instruction:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5f7a8e3f6c574a340d00ceb468d9ad4997d1a2" translate="yes" xml:space="preserve">
          <source>Multiplication assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d06c384816fd7b08a86b620a760a561accd2904" translate="yes" xml:space="preserve">
          <source>Mvc\Application</source>
          <target state="translated">Mvc\Application</target>
        </trans-unit>
        <trans-unit id="5b8718911782dd34f09bc21a0b9315c6676c18c9" translate="yes" xml:space="preserve">
          <source>Mvc\Collection</source>
          <target state="translated">Mvc\Collection</target>
        </trans-unit>
        <trans-unit id="c342a2b2b57faffaebd7bae2dcefbafa2a5bf21f" translate="yes" xml:space="preserve">
          <source>Mvc\Collection::count</source>
          <target state="translated">Mvc\Collection::count</target>
        </trans-unit>
        <trans-unit id="78bd88ea60f44f9fe7447fb4cfb82eee3e8e01e2" translate="yes" xml:space="preserve">
          <source>Mvc\Collection::find</source>
          <target state="translated">Mvc\Collection::find</target>
        </trans-unit>
        <trans-unit id="3c617042182f21f6901c064a17bd96ad59846e09" translate="yes" xml:space="preserve">
          <source>Mvc\Collection::getDI</source>
          <target state="translated">Mvc\Collection::getDI</target>
        </trans-unit>
        <trans-unit id="381a8b0a292d8bae39376b225ddce040cc548f9b" translate="yes" xml:space="preserve">
          <source>Mvc\Collection::getId</source>
          <target state="translated">Mvc\Collection::getId</target>
        </trans-unit>
        <trans-unit id="3cd45f8cf2b525b91234550e99b736551ea9b155" translate="yes" xml:space="preserve">
          <source>Mvc\Collection::save</source>
          <target state="translated">Mvc\Collection::save</target>
        </trans-unit>
        <trans-unit id="a4d150514f357f2128203ad27cf2e6899ac79944" translate="yes" xml:space="preserve">
          <source>Mvc\Collection::setDI</source>
          <target state="translated">Mvc\Collection::setDI</target>
        </trans-unit>
        <trans-unit id="bc50d090030eadd4b2d85b91b7f529d2dbba0609" translate="yes" xml:space="preserve">
          <source>Mvc\Collection::setId</source>
          <target state="translated">Mvc\Collection::setId</target>
        </trans-unit>
        <trans-unit id="4ece4d89b27d48ff6f525feb6fc22a802e9bb1cc" translate="yes" xml:space="preserve">
          <source>Mvc\CollectionInterface</source>
          <target state="translated">Mvc\CollectionInterface</target>
        </trans-unit>
        <trans-unit id="81a4c30c32963a8e7a93f7763561ea05b7ea8a59" translate="yes" xml:space="preserve">
          <source>Mvc\CollectionInterface::count</source>
          <target state="translated">Mvc\CollectionInterface::count</target>
        </trans-unit>
        <trans-unit id="3cf81676af1a9d7c426f69463df68f3eb5f8b33d" translate="yes" xml:space="preserve">
          <source>Mvc\CollectionInterface::find</source>
          <target state="translated">Mvc\CollectionInterface::find</target>
        </trans-unit>
        <trans-unit id="23f5022b74702a80fcb96212ca854dbc07d393b1" translate="yes" xml:space="preserve">
          <source>Mvc\CollectionInterface::getId</source>
          <target state="translated">Mvc\CollectionInterface::getId</target>
        </trans-unit>
        <trans-unit id="42e9b47a4be38a1755919243e3721ba415ab8dec" translate="yes" xml:space="preserve">
          <source>Mvc\CollectionInterface::save</source>
          <target state="translated">Mvc\CollectionInterface::save</target>
        </trans-unit>
        <trans-unit id="7a6f16efe77768c6574bbe2435b6db451074af6c" translate="yes" xml:space="preserve">
          <source>Mvc\CollectionInterface::setId</source>
          <target state="translated">Mvc\CollectionInterface::setId</target>
        </trans-unit>
        <trans-unit id="e91ea4cc42b5313a7d2ee65355679767ae3d9bbe" translate="yes" xml:space="preserve">
          <source>Mvc\Controller</source>
          <target state="translated">Mvc\Controller</target>
        </trans-unit>
        <trans-unit id="a106b19a5dedbbf301334e1eceecaa4339ad4708" translate="yes" xml:space="preserve">
          <source>Mvc\ControllerInterface</source>
          <target state="translated">Mvc\ControllerInterface</target>
        </trans-unit>
        <trans-unit id="ec8e78c5f1f8d1c745d34fc9b2d2c3fdf5fd1cc4" translate="yes" xml:space="preserve">
          <source>Mvc\Dispatcher</source>
          <target state="translated">Mvc\Dispatcher</target>
        </trans-unit>
        <trans-unit id="4bc41028a10ffd3021fd35783eb2566a2f8d6c6e" translate="yes" xml:space="preserve">
          <source>Mvc\DispatcherInterface</source>
          <target state="translated">Mvc\DispatcherInterface</target>
        </trans-unit>
        <trans-unit id="ba77cf7e366eba7a0093b9336adae7b84878f87f" translate="yes" xml:space="preserve">
          <source>Mvc\EntityInterface</source>
          <target state="translated">Mvc\EntityInterface</target>
        </trans-unit>
        <trans-unit id="3804ac91ed1bc89cab98b5ed5cb5e6aeaf4ab19c" translate="yes" xml:space="preserve">
          <source>Mvc\Micro</source>
          <target state="translated">Mvc\Micro</target>
        </trans-unit>
        <trans-unit id="ce1d9319516e58a81b0448f5fb2a05615a905b54" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::after</source>
          <target state="translated">Mvc\Micro::after</target>
        </trans-unit>
        <trans-unit id="ee4b1e75469c78d78e96c64a2fdc2d66d97ae308" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::error</source>
          <target state="translated">Mvc\Micro::error</target>
        </trans-unit>
        <trans-unit id="7d01fbd1655b8d7c9031c2daced9c2fb4bdef37d" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::get</source>
          <target state="translated">Mvc\Micro::get</target>
        </trans-unit>
        <trans-unit id="e1931db82b68405a4a982c807cd78e6b7000a93d" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::head</source>
          <target state="translated">Mvc\Micro::head</target>
        </trans-unit>
        <trans-unit id="23655f7a1b48a433fefa37d664548a469c08fbe1" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::map</source>
          <target state="translated">Mvc\Micro::map</target>
        </trans-unit>
        <trans-unit id="b61192c359a0e3411d3d7cb507c6d879ea8798cb" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::mount</source>
          <target state="translated">Mvc\Micro::mount</target>
        </trans-unit>
        <trans-unit id="152d18bb3f4de7a0e2552f4ac126ac1a3486c1a1" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::patch</source>
          <target state="translated">Mvc\Micro::patch</target>
        </trans-unit>
        <trans-unit id="78103b3d8d589672e651a500f691d0fb646f4d92" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::post</source>
          <target state="translated">Mvc\Micro::post</target>
        </trans-unit>
        <trans-unit id="7683e0bb7e6eb15ab2f87c4ba684ccdd3dcf55db" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::put</source>
          <target state="translated">Mvc\Micro::put</target>
        </trans-unit>
        <trans-unit id="3b8776c1725d903610ceeb53c1012dc1742c09ba" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::setDI</source>
          <target state="translated">Mvc\Micro::setDI</target>
        </trans-unit>
        <trans-unit id="9567fcf132013faeb939c8ccfd0090ecbca65843" translate="yes" xml:space="preserve">
          <source>Mvc\Micro::stop</source>
          <target state="translated">Mvc\Micro::stop</target>
        </trans-unit>
        <trans-unit id="61d39f476c2bcce7185ce1686e0d54460f944b2b" translate="yes" xml:space="preserve">
          <source>Mvc\Model</source>
          <target state="translated">Mvc\Model</target>
        </trans-unit>
        <trans-unit id="79057194ea1fdc2bf05d793fa9d7df8f178354df" translate="yes" xml:space="preserve">
          <source>Mvc\Model::__get</source>
          <target state="translated">Mvc\Model::__get</target>
        </trans-unit>
        <trans-unit id="fa9fc9c76295ad0ab6a3165862bb296cc3976cbe" translate="yes" xml:space="preserve">
          <source>Mvc\Model::__set</source>
          <target state="translated">Mvc\Model::__set</target>
        </trans-unit>
        <trans-unit id="353232dfa04d54ed4bf05543186d06267f7e66d6" translate="yes" xml:space="preserve">
          <source>Mvc\Model::count</source>
          <target state="translated">Mvc\Model::count</target>
        </trans-unit>
        <trans-unit id="67bcc174a2161c94c6fc2441d0ed13b2c84a4349" translate="yes" xml:space="preserve">
          <source>Mvc\Model::dump</source>
          <target state="translated">Mvc\Model::dump</target>
        </trans-unit>
        <trans-unit id="942d3cc144a22383057b9633eecd42d3f852eb95" translate="yes" xml:space="preserve">
          <source>Mvc\Model::find</source>
          <target state="translated">Mvc\Model::find</target>
        </trans-unit>
        <trans-unit id="d4edddd20e5492d1aa84635afacd879114e0cc00" translate="yes" xml:space="preserve">
          <source>Mvc\Model::getDI</source>
          <target state="translated">Mvc\Model::getDI</target>
        </trans-unit>
        <trans-unit id="6940d3e2459dd64053a51873e1b93eca081e0239" translate="yes" xml:space="preserve">
          <source>Mvc\Model::query</source>
          <target state="translated">Mvc\Model::query</target>
        </trans-unit>
        <trans-unit id="9c340187006fd0d89698be1c20ead90faded1c20" translate="yes" xml:space="preserve">
          <source>Mvc\Model::reset</source>
          <target state="translated">Mvc\Model::reset</target>
        </trans-unit>
        <trans-unit id="b1221d01afe80aab16d699e405d1bffa04208d2a" translate="yes" xml:space="preserve">
          <source>Mvc\Model::save</source>
          <target state="translated">Mvc\Model::save</target>
        </trans-unit>
        <trans-unit id="02495e728edac47daf7b901c20b0fab6e5fd629a" translate="yes" xml:space="preserve">
          <source>Mvc\Model::setDI</source>
          <target state="translated">Mvc\Model::setDI</target>
        </trans-unit>
        <trans-unit id="b77ec3b5b2e48e7174c68f9d081c0660956a7d9e" translate="yes" xml:space="preserve">
          <source>Mvc\Model::setup</source>
          <target state="translated">Mvc\Model::setup</target>
        </trans-unit>
        <trans-unit id="e9be2c184aa412c4ee1a96793df50b295717a19b" translate="yes" xml:space="preserve">
          <source>Mvc\Model::sum</source>
          <target state="translated">Mvc\Model::sum</target>
        </trans-unit>
        <trans-unit id="2b5463dc39eeac2f8cc962bf4db7cd3b9a75b816" translate="yes" xml:space="preserve">
          <source>Mvc\ModelInterface</source>
          <target state="translated">Mvc\ModelInterface</target>
        </trans-unit>
        <trans-unit id="0db83e803f0502235dce0e00b1063d066bb52a1d" translate="yes" xml:space="preserve">
          <source>Mvc\ModelInterface::count</source>
          <target state="translated">Mvc\ModelInterface::count</target>
        </trans-unit>
        <trans-unit id="25f464a53c0851648ba44065a25254d68238b90e" translate="yes" xml:space="preserve">
          <source>Mvc\ModelInterface::find</source>
          <target state="translated">Mvc\ModelInterface::find</target>
        </trans-unit>
        <trans-unit id="bea28a3a56a3226ee1d5e6e3797e1fe06d6694ec" translate="yes" xml:space="preserve">
          <source>Mvc\ModelInterface::query</source>
          <target state="translated">Mvc\ModelInterface::query</target>
        </trans-unit>
        <trans-unit id="28b5dca5667ec98a10473121b744209803c8d120" translate="yes" xml:space="preserve">
          <source>Mvc\ModelInterface::reset</source>
          <target state="translated">Mvc\ModelInterface::reset</target>
        </trans-unit>
        <trans-unit id="56af9a2580fec2b52f160129a3700aa7e7851ad7" translate="yes" xml:space="preserve">
          <source>Mvc\ModelInterface::save</source>
          <target state="translated">Mvc\ModelInterface::save</target>
        </trans-unit>
        <trans-unit id="176e90b4be3eeab6d79aaa9d88f569fd9602f414" translate="yes" xml:space="preserve">
          <source>Mvc\ModelInterface::sum</source>
          <target state="translated">Mvc\ModelInterface::sum</target>
        </trans-unit>
        <trans-unit id="48db2e95682bb869cc6e361eef18afc62d29c976" translate="yes" xml:space="preserve">
          <source>Mvc\Model\Row</source>
          <target state="translated">Mvc\Model\Row</target>
        </trans-unit>
        <trans-unit id="a96710c5f63a5b46257619de1200c703ba46d2cb" translate="yes" xml:space="preserve">
          <source>Mvc\ModuleDefinitionInterface</source>
          <target state="translated">Mvc\ModuleDefinitionInterface</target>
        </trans-unit>
        <trans-unit id="a9e632539dd5b2c43675eaa59942b07ca6abb759" translate="yes" xml:space="preserve">
          <source>Mvc\Router</source>
          <target state="translated">Mvc\Router</target>
        </trans-unit>
        <trans-unit id="16346feb341cbba913c1fc198f1e45c4a1e31a7c" translate="yes" xml:space="preserve">
          <source>Mvc\Router::add</source>
          <target state="translated">Mvc\Router::add</target>
        </trans-unit>
        <trans-unit id="39f58c25a2dadc9147d7b32df9618cb69385e6af" translate="yes" xml:space="preserve">
          <source>Mvc\Router::clear</source>
          <target state="translated">Mvc\Router::clear</target>
        </trans-unit>
        <trans-unit id="fd0515c4e46124669771af2c383b7b5ca9fd49a8" translate="yes" xml:space="preserve">
          <source>Mvc\Router::getDI</source>
          <target state="translated">Mvc\Router::getDI</target>
        </trans-unit>
        <trans-unit id="9ec61832ccda7009043e0475777e199e5c1f5e4a" translate="yes" xml:space="preserve">
          <source>Mvc\Router::mount</source>
          <target state="translated">Mvc\Router::mount</target>
        </trans-unit>
        <trans-unit id="c454ebce9204fe2fd2f021847fbf7007bf664320" translate="yes" xml:space="preserve">
          <source>Mvc\Router::setDI</source>
          <target state="translated">Mvc\Router::setDI</target>
        </trans-unit>
        <trans-unit id="2bd7817a1697a004f59eed4248b701fc6825b599" translate="yes" xml:space="preserve">
          <source>Mvc\RouterInterface</source>
          <target state="translated">Mvc\RouterInterface</target>
        </trans-unit>
        <trans-unit id="9a0019ac6379cb694c174dd9b1a6a3de7860c9d0" translate="yes" xml:space="preserve">
          <source>Mvc\RouterInterface::add</source>
          <target state="translated">Mvc\RouterInterface::add</target>
        </trans-unit>
        <trans-unit id="d6fdc476cdaf75a263958f19aa9dbfb553d196d2" translate="yes" xml:space="preserve">
          <source>Mvc\RouterInterface::clear</source>
          <target state="translated">Mvc\RouterInterface::clear</target>
        </trans-unit>
        <trans-unit id="086e3e30adb8a4f1581dacef276389731d384cfe" translate="yes" xml:space="preserve">
          <source>Mvc\RouterInterface::mount</source>
          <target state="translated">Mvc\RouterInterface::mount</target>
        </trans-unit>
        <trans-unit id="4a9add05e2a1c91795b103b31178c65b3cdc60c9" translate="yes" xml:space="preserve">
          <source>Mvc\Url</source>
          <target state="translated">Mvc\Url</target>
        </trans-unit>
        <trans-unit id="ff871e009fe7a86a1a9f2812a5c5f8ab7c75f8a5" translate="yes" xml:space="preserve">
          <source>Mvc\Url::get</source>
          <target state="translated">Mvc\Url::get</target>
        </trans-unit>
        <trans-unit id="ad5a573d0b53f8a2bda3abdf9b3e8972fa653d22" translate="yes" xml:space="preserve">
          <source>Mvc\Url::getDI</source>
          <target state="translated">Mvc\Url::getDI</target>
        </trans-unit>
        <trans-unit id="3d8c5600bd8a1149ba5162d549160121fb504567" translate="yes" xml:space="preserve">
          <source>Mvc\Url::path</source>
          <target state="translated">Mvc\Url::path</target>
        </trans-unit>
        <trans-unit id="e49e07697efca3181597d4e8b634530110cbe165" translate="yes" xml:space="preserve">
          <source>Mvc\Url::setDI</source>
          <target state="translated">Mvc\Url::setDI</target>
        </trans-unit>
        <trans-unit id="98e205d23d7e70b3fcda86731ae574472e697cce" translate="yes" xml:space="preserve">
          <source>Mvc\UrlInterface</source>
          <target state="translated">Mvc\UrlInterface</target>
        </trans-unit>
        <trans-unit id="22135a3dfdea488b86452f77a1529bdf93038b24" translate="yes" xml:space="preserve">
          <source>Mvc\UrlInterface::get</source>
          <target state="translated">Mvc\UrlInterface::get</target>
        </trans-unit>
        <trans-unit id="234105c0ddb0525542848bede385545f605f01c9" translate="yes" xml:space="preserve">
          <source>Mvc\UrlInterface::path</source>
          <target state="translated">Mvc\UrlInterface::path</target>
        </trans-unit>
        <trans-unit id="57396cfd9cabd9d0e7d0f842b05db486c2e4a2ce" translate="yes" xml:space="preserve">
          <source>Mvc\User</source>
          <target state="translated">Mvc\User</target>
        </trans-unit>
        <trans-unit id="c8f3a5400ee1c70e80b0830af60a29a1fd36e495" translate="yes" xml:space="preserve">
          <source>Mvc\View</source>
          <target state="translated">Mvc\View</target>
        </trans-unit>
        <trans-unit id="d8a816ca5c802a8644201d7ae57de3f59699a957" translate="yes" xml:space="preserve">
          <source>Mvc\View::__get</source>
          <target state="translated">Mvc\View::__get</target>
        </trans-unit>
        <trans-unit id="bd31c44d8377ba2519798af9b8d8716d51b8cd2f" translate="yes" xml:space="preserve">
          <source>Mvc\View::__set</source>
          <target state="translated">Mvc\View::__set</target>
        </trans-unit>
        <trans-unit id="feaec9b24ecafa890f653f84e1b3c55d16164147" translate="yes" xml:space="preserve">
          <source>Mvc\View::cache</source>
          <target state="translated">Mvc\View::cache</target>
        </trans-unit>
        <trans-unit id="13ba41f6ab008a53a95390fe04adfa5f164f110d" translate="yes" xml:space="preserve">
          <source>Mvc\View::pick</source>
          <target state="translated">Mvc\View::pick</target>
        </trans-unit>
        <trans-unit id="d904fef21eace04e6e4844764b81ecb3f156de1c" translate="yes" xml:space="preserve">
          <source>Mvc\View::reset</source>
          <target state="translated">Mvc\View::reset</target>
        </trans-unit>
        <trans-unit id="b7511a42cc9ccaee0f7d9ab3f4487faa4300bb39" translate="yes" xml:space="preserve">
          <source>Mvc\View::start</source>
          <target state="translated">Mvc\View::start</target>
        </trans-unit>
        <trans-unit id="e6dc56a01b1bf7d6c336039f6f848b29197831cf" translate="yes" xml:space="preserve">
          <source>Mvc\ViewBaseInterface</source>
          <target state="translated">Mvc\ViewBaseInterface</target>
        </trans-unit>
        <trans-unit id="6c30135c5652d546bb53fa5bef8c56c7541e4090" translate="yes" xml:space="preserve">
          <source>Mvc\ViewBaseInterface::cache</source>
          <target state="translated">Mvc\ViewBaseInterface::cache</target>
        </trans-unit>
        <trans-unit id="cd10c460790ed8147ed3c309003db1c26fc38216" translate="yes" xml:space="preserve">
          <source>Mvc\ViewInterface</source>
          <target state="translated">Mvc\ViewInterface</target>
        </trans-unit>
        <trans-unit id="9f25f4ec5f04537f02459f052a7b55f077957f07" translate="yes" xml:space="preserve">
          <source>Mvc\ViewInterface::pick</source>
          <target state="translated">Mvc\ViewInterface::pick</target>
        </trans-unit>
        <trans-unit id="f1ddc95bb0dcc41ee30860489fcbffd1a430a82b" translate="yes" xml:space="preserve">
          <source>Mvc\ViewInterface::reset</source>
          <target state="translated">Mvc\ViewInterface::reset</target>
        </trans-unit>
        <trans-unit id="28cab3f702b3dfa30e5ac56039c68183a045cb39" translate="yes" xml:space="preserve">
          <source>Mvc\ViewInterface::start</source>
          <target state="translated">Mvc\ViewInterface::start</target>
        </trans-unit>
        <trans-unit id="9a3681f48f280fb6d63aa3153b678d8cadc7991d" translate="yes" xml:space="preserve">
          <source>MySQL PostgreSQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0509b7780628bd9d9abc7eb8a2163477341053a" translate="yes" xml:space="preserve">
          <source>NO</source>
          <target state="translated">NO</target>
        </trans-unit>
        <trans-unit id="fe71871083ca490e6bc0da33fb48ce231f820a94" translate="yes" xml:space="preserve">
          <source>NOTICE</source>
          <target state="translated">NOTICE</target>
        </trans-unit>
        <trans-unit id="6cb22a847219314ce73e52e1c5c0968371681bb2" translate="yes" xml:space="preserve">
          <source>NOW()</source>
          <target state="translated">NOW()</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="ca56fa3e554e203fceb81fea591b43219749e6ce" translate="yes" xml:space="preserve">
          <source>Name of the dialect used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d04192afbc837922f2623b336dd3af389b447c" translate="yes" xml:space="preserve">
          <source>Name of the schema. [optional]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50243befc161da76efa96384381384e7508e402" translate="yes" xml:space="preserve">
          <source>Namespaces can be used to avoid class name collision. In this case it is necessary to indicate the name of the related collection using the &lt;code&gt;setSource()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f297c694dd3e08f548face7cdaa3dece72e3d8f" translate="yes" xml:space="preserve">
          <source>Namespaces/class names must be passed separated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b150c33703661a4e069fa3f97c482cd27685ef" translate="yes" xml:space="preserve">
          <source>Naming Convention</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2aa7c616223e41c395f07cffdda74786d5855d" translate="yes" xml:space="preserve">
          <source>Naming Routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6d20100d15165ba81d34b0d3224b7605c25223" translate="yes" xml:space="preserve">
          <source>Native Arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2659cb7ac2d2c58ecedbcab8243351df01fa7d6d" translate="yes" xml:space="preserve">
          <source>Negates an expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6429e5d641c4e5a27e76a29d92c4d2ba29843b5d" translate="yes" xml:space="preserve">
          <source>Never use a &lt;a href=&quot;../api/phalcon_db_rawvalue&quot;&gt;&lt;em&gt;Phalcon\Db\RawValue&lt;/em&gt;&lt;/a&gt; to assign external data (such as user input) or variable data. The value of these fields is ignored when binding parameters to the query. So it could be used to attack the application injecting SQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a58b97775dae4b690c2abab75c2befecd0ded4" translate="yes" xml:space="preserve">
          <source>Next we register a base URI so that all URIs generated by Phalcon include the &amp;ldquo;tutorial&amp;rdquo; folder we setup earlier. This will become important later on in this tutorial when we use the class &lt;a href=&quot;../api/phalcon_tag&quot;&gt;&lt;em&gt;Phalcon\Tag&lt;/em&gt;&lt;/a&gt; to generate a hyperlink.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1e12679554fb106278db7178cda5035ddf6116" translate="yes" xml:space="preserve">
          <source>Next we will explain some practical examples of annotations in PHP applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d1a4ea1933a161e4eddba038f216399ef3dff8" translate="yes" xml:space="preserve">
          <source>Next, we need a &amp;lsquo;helper&amp;rsquo; file to bootstrap the application for unit testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998eb63ecb6fcc83d60f8edd946737335bd38aa0" translate="yes" xml:space="preserve">
          <source>Nginx Installation Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="57034349bfa35f8ee395afa1e2439f1011271361" translate="yes" xml:space="preserve">
          <source>Normally this behavior does not require additional settings. Add another behavior, this time in the &amp;lsquo;Manual Configuration&amp;rsquo; section. In &amp;lsquo;Rule Type&amp;rsquo; choose &amp;lsquo;File Exists&amp;rsquo;, then make sure the option &amp;lsquo;Match any file&amp;rsquo; is enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae3ac86cbdfbcdfd69d0ef0684b42e322f0c91a" translate="yes" xml:space="preserve">
          <source>Normally, the framework creates the Dispatcher automatically. In our case, we want to perform a verification before executing the required action, checking if the user has access to it or not. To achieve this, we have replaced the component by creating a function in the bootstrap:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb9a9a7f35fbd073193f04fa655034b37fc8df7" translate="yes" xml:space="preserve">
          <source>Normally, the starting route in an application is the route /, and it will more frequent to be accessed by the method GET. This scenario is coded as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b8560e816fe063fb16429ad93571e7ad744305" translate="yes" xml:space="preserve">
          <source>Not Found Paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa444292306db0480e2c364181363b71a980957" translate="yes" xml:space="preserve">
          <source>Not all blocks must be replaced at a child template, only those that are needed. The final output produced will be the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab3d03a9de41f699025031cd7fbef3d9910439a" translate="yes" xml:space="preserve">
          <source>Not null</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef806bc6517b42d137d2dc2a7bbcaa24e193449" translate="yes" xml:space="preserve">
          <source>Not-Found Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="ca54d58e66ad20a197c2f5d858c4bd9393f18ed1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ProductTypes::find()&lt;/code&gt; contains the data necessary to fill the SELECT tag using &lt;code&gt;Phalcon\Tag::select()&lt;/code&gt;. Once the form is passed to the view, it can be rendered and presented to the user:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5679194e0c028f3499545b2e05b76c1142ba714d" translate="yes" xml:space="preserve">
          <source>Note that a redirection doesn&amp;rsquo;t disable the view component, so if there is a view associated with the current action it will be executed anyway. You can disable the view from a controller by executing &lt;code&gt;$this-&amp;gt;view-&amp;gt;disable()&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d17d312cf36ec769dbfb003465b3cb8e25fd10" translate="yes" xml:space="preserve">
          <source>Note that both built-in and custom filters can be transparently applied to collections. The last step is to decide if all the resources in the collection must be joined into a single file or serve each of them individually. To tell the collection that all resources must be joined you can use the &lt;code&gt;join()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cde7667c44f521e29af794f816dd97644513651" translate="yes" xml:space="preserve">
          <source>Note that isn&amp;rsquo;t necessary to prepend the base URI. If you have named routes you can easily change it creating it dynamically. For Example if you have the following route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cad3a6a6742356f6da7e6fa358f5b1ba540fe68" translate="yes" xml:space="preserve">
          <source>Note that multiple public attributes are accessed in the controller like: &lt;code&gt;$this-&amp;gt;flash&lt;/code&gt;, &lt;code&gt;$this-&amp;gt;request&lt;/code&gt; or &lt;code&gt;$this-&amp;gt;session&lt;/code&gt;. These are services defined in the services container from earlier (app/config/services.php). When they&amp;rsquo;re accessed the first time, they are injected as part of the controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00c2d7d95ca2b1229ada6e5a879b7e9bb011678" translate="yes" xml:space="preserve">
          <source>Note that not all resultsets should be cached. Results that change very frequently should not be cached since they are invalidated very quickly and caching in that case impacts performance. Additionally, large datasets that do not change frequently could be cached, but that is a decision that the developer has to make based on the available caching mechanism and whether the performance impact to simply retrieve that data in the first place is acceptable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52613c4edce4d257827e9e036118e2bf3037a2aa" translate="yes" xml:space="preserve">
          <source>Note that resultsets can be serialized and stored in a cache backend. &lt;a href=&quot;cache&quot;&gt;&lt;em&gt;Phalcon\Cache&lt;/em&gt;&lt;/a&gt; can help with that task. However, serializing data causes &lt;a href=&quot;../api/phalcon_mvc_model&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model&lt;/em&gt;&lt;/a&gt; to retrieve all the data from the database in an array, thus consuming more memory while this process takes place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4a8707aeb6fd5a2271804b89655a76d3e08ad5" translate="yes" xml:space="preserve">
          <source>Note that the above code has registered the directories that were defined in the configuration file. The only directory that is not registered is the viewsDir because it contains HTML + PHP files but no classes. Also, note that we use a constant called APP_PATH. This constant is defined in the bootstrap (public/index.php) to allow us to have a reference to the root of our project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27493cc19026626b9d730c18cd5dc7fcbec3e67" translate="yes" xml:space="preserve">
          <source>Note that the values of the parameters are obtained from the dispatcher. This happens because it is the component that finally interacts with the drivers of your application. Moreover, there is also another way to create named parameters as part of the pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4662bbde129538de236c317c09d998dac91ad9bc" translate="yes" xml:space="preserve">
          <source>Note that this type of cache works in memory only, this means that cached data are released when the request is terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4019bf1ad02393dfae60d82c0aa8942c98219190" translate="yes" xml:space="preserve">
          <source>Note that you don&amp;rsquo;t need any &amp;ldquo;library&amp;rdquo; directory related to Phalcon. The framework is available in memory, ready for you to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2085ed28d8fbe2e417a6d0deecb10318c1d4c594" translate="yes" xml:space="preserve">
          <source>Note that you need to specify the deleted condition in your queries to effectively ignore them as deleted records, this behavior doesn&amp;rsquo;t support that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0586923f89d4dbf023b1f270d2251c9c947c310c" translate="yes" xml:space="preserve">
          <source>Note the call to the function &lt;code&gt;super()&lt;/code&gt;. With that function it&amp;rsquo;s possible to render the contents of the parent block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dc9a7cd335c0933142ff8ec502f3b38e587f2d" translate="yes" xml:space="preserve">
          <source>Note the lines where the method &lt;code&gt;$this-&amp;gt;getContent()&lt;/code&gt; was called. This method instructs &lt;a href=&quot;../api/phalcon_mvc_view&quot;&gt;&lt;em&gt;Phalcon\Mvc\View&lt;/em&gt;&lt;/a&gt; on where to inject the contents of the previous view executed in the hierarchy. For the example above, the output will be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8ca77b7e4125f95d8f3fe2847b37bdf99f1bda" translate="yes" xml:space="preserve">
          <source>Note, that the method &lt;code&gt;parent::initialize()&lt;/code&gt; is also called, it adds more data to the title:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e7c8e7cc37f60f05fe0a589c56365a8c01bdbf" translate="yes" xml:space="preserve">
          <source>Note, the use of &amp;lsquo;bound parameters&amp;rsquo;, placeholders :email: and :password: are placed where values should be, then the values are &amp;lsquo;bound&amp;rsquo; using the parameter &amp;lsquo;bind&amp;rsquo;. This safely replaces the values for those columns without having the risk of a SQL injection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741b8e81b0a9c83f89e4ca92f8c362227d1bfaf4" translate="yes" xml:space="preserve">
          <source>Note: Adding related entities by overloading the following methods is not possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f56523112fca2d67967ac09df42713ab5d6f013" translate="yes" xml:space="preserve">
          <source>Notice that in this example, we&amp;rsquo;re using the &amp;ldquo;my-component&amp;rdquo; event namespace. Now we need to create an event listener for this component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443fcdb5129b91dc75fa86fca85f1e96c739787e" translate="yes" xml:space="preserve">
          <source>Notice that we used &amp;lsquo;Name&amp;rsquo; in the method call and passed the variable &lt;code&gt;$name&lt;/code&gt; to it, which contains the name we are looking for in our table. Notice also that when we find a match with our query, all the other properties are available to us as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a951d1f41ea601474c7feea359e0159151d95c47" translate="yes" xml:space="preserve">
          <source>Notifies the manager about a committed transaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd658d07056834e557ae71049bda3ea32cba36a" translate="yes" xml:space="preserve">
          <source>Notifies the manager about a rollbacked transaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef339e0f53bcbe3dc062e58928f459db6ec348d" translate="yes" xml:space="preserve">
          <source>Now a second .htaccess file is located in the public/ directory, this re-writes all the URIs to the public/index.php file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde585ea79fb652e898b1b83f128b939cf1da240" translate="yes" xml:space="preserve">
          <source>Now consider that we use this component in different parts of the application and then we will need to create the connection several times before passing it to the component. Using some kind of global registry where we obtain the connection instance and not have to create it again and again could solve this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5667dde93d9fef77b9b6c1a8f3e48f5e6928dc8a" translate="yes" xml:space="preserve">
          <source>Now every time a query is executed, the SQL statement will be echoed out. The first parameter passed to the lambda function contains contextual information about the event that is running, the second is the source of the event (in this case: the connection itself). A third parameter may also be specified which will contain arbitrary data specific to the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701fffabcbdfd2576ae35baf059b4af75afd826d" translate="yes" xml:space="preserve">
          <source>Now in your controller you can access your configuration by using dependency injection feature using name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19580718c38bce3491da2a87e884c24d877b51dc" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s find out how the application accomplishes this. The first thing to know is that there is a component called &lt;a href=&quot;dispatching&quot;&gt;&lt;em&gt;Dispatcher&lt;/em&gt;&lt;/a&gt;. It is informed about the route found by the &lt;a href=&quot;routing&quot;&gt;&lt;em&gt;Routing&lt;/em&gt;&lt;/a&gt; component. Then, it is responsible for loading the appropriate controller and execute the corresponding action method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd1f9183aa618fbadfee6270d6d6c266f1f9f55" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s make everything work together:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7709472d87091fcec99a04cb8b164bb3f84628de" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s see how the CRUD creates and updates records. From the &amp;ldquo;new&amp;rdquo; and &amp;ldquo;edit&amp;rdquo; views, the data entered by the user is sent to the &amp;ldquo;create&amp;rdquo; and &amp;ldquo;save&amp;rdquo; actions that perform actions of &amp;ldquo;creating&amp;rdquo; and &amp;ldquo;updating&amp;rdquo; products, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37abe2db939cc2ee6a6d484547c21d20c814507b" translate="yes" xml:space="preserve">
          <source>Now that we have roles and resources, it&amp;rsquo;s time to define the ACL (i.e. which roles can access which resources). This part is very important especially taking into consideration your default access level &amp;ldquo;allow&amp;rdquo; or &amp;ldquo;deny&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78eeda0ad6d81efb046647760ce879e64eb08bba" translate="yes" xml:space="preserve">
          <source>Now we find ourselves back where we started, we are again building the dependencies inside of the component! We must find a solution that keeps us from repeatedly falling into bad practices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7442f9971aa91feeb17867d71e2ba116b63d2692" translate="yes" xml:space="preserve">
          <source>Now we will change the index.phtml view file, to add a link to a new controller named &amp;ldquo;signup&amp;rdquo;. The goal is to allow users to sign up within our application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f2c1a83df2d9820c48a987a765899557e717f0" translate="yes" xml:space="preserve">
          <source>Now we will create the routes as we defined above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf0811dc6523a39ffc987b3a5754f01a0696c7b" translate="yes" xml:space="preserve">
          <source>Now when you execute &amp;lsquo;phpunit&amp;rsquo; in your command-line from the tests directory you will get the following output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae21371ab30aa1bf71b1191496cdd8323407aeb" translate="yes" xml:space="preserve">
          <source>Now you are ready to use your new helper within your views:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f4d5444402167e95f81c5eb4a47961db16511d" translate="yes" xml:space="preserve">
          <source>Now you can go back to the view and find out what every block is doing. Every field in &amp;ldquo;product&amp;rdquo; is printed accordingly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63fe7f3bac4b567e4fa1a8509939a26b330ec982" translate="yes" xml:space="preserve">
          <source>Now you can start building your unit tests. You can view a good guide here (we also recommend reading the PHPunit documentation if you&amp;rsquo;re not familiar with PHPunit):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb52baa2aaf37867276adcdffe9709a3b772886" translate="yes" xml:space="preserve">
          <source>Now, create a phpunit file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18875f29e116928abb810a5f7991b4c6c7a98d95" translate="yes" xml:space="preserve">
          <source>Now, in the case of updating a product, we must first present the user with the data that is currently in the edited record:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fb1c359308685a75ea280d36487bc243c4e4b6" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s imagine that we must implement two methods in the component, the first always needs to create a new connection and the second always needs to use a shared connection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2ba190b471557adfe6b2b87f519ade443a0791" translate="yes" xml:space="preserve">
          <source>Now, there is a file called app/config/loader.php where all the auto-loading stuff is set up. At the end of this file you can see that the composer autoloader is included enabling the application to autoload any of the classes in the downloaded dependencies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b77d9aa011b5bb2422cceb7d57cd322532370c0" translate="yes" xml:space="preserve">
          <source>Now, we can use the annotation in a controller:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40ecda8830a2ca137d0c541085099e88a051a7e" translate="yes" xml:space="preserve">
          <source>Now, we define the resources for each area respectively. Controller names are resources and their actions are accesses for the resources:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8894b3bd7a590522b08939a8471818b8df67b18c" translate="yes" xml:space="preserve">
          <source>Now, we have to check if there is one user with the same username or email and password:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29f5a698a94046a704d33fe60414cc05c9333d2" translate="yes" xml:space="preserve">
          <source>Now, we must set up a connection to be used by this model and load it within our app:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41548e5fedebb501b620f63bee186f6398c83bfd" translate="yes" xml:space="preserve">
          <source>Now, we store the produced parameters in the controller&amp;rsquo;s session bag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a16ac4113a98403aaf3c1dbc16e1206fa8fbde" translate="yes" xml:space="preserve">
          <source>Now, we&amp;rsquo;re verifying the role in the current session, checking if the user has access using the ACL list. If the user does not have access we redirect to the home screen as explained before:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="5851f7c01adc3d5ad2b10c231df77569f3144f26" translate="yes" xml:space="preserve">
          <source>Numbers with a decimal part are handled as doubles/floats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f61b9ff7f92e57948a9ab02a551e7400249e981" translate="yes" xml:space="preserve">
          <source>Numbers without a decimal part are handled as integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5087dcfc5a5b6667140258a1de6b30b88e68041f" translate="yes" xml:space="preserve">
          <source>ODM (Object-Document Mapper)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5a6cbe7e4e669c123b368fbb2bd552e96514f85" translate="yes" xml:space="preserve">
          <source>ON DELETE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6c5fbd18b1b1927585e8e8d581b7f50cd35eff" translate="yes" xml:space="preserve">
          <source>ON UPDATE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c482c46d7ca707cdf34f4dd646cfb15721a9b6" translate="yes" xml:space="preserve">
          <source>OP_CREATE</source>
          <target state="translated">OP_CREATE</target>
        </trans-unit>
        <trans-unit id="c87900755866f2e4d03a59139b1a1fea78948ad8" translate="yes" xml:space="preserve">
          <source>OP_DELETE</source>
          <target state="translated">OP_DELETE</target>
        </trans-unit>
        <trans-unit id="f22c4cd48f2e7b08b1801095671f6aed163d9fbb" translate="yes" xml:space="preserve">
          <source>OP_NONE</source>
          <target state="translated">OP_NONE</target>
        </trans-unit>
        <trans-unit id="e82498459da464cb2712a49cd45dad2e092dfd47" translate="yes" xml:space="preserve">
          <source>OP_UPDATE</source>
          <target state="translated">OP_UPDATE</target>
        </trans-unit>
        <trans-unit id="8c744d2e9aa7dae5e98709d83d41c5e31a2d0b27" translate="yes" xml:space="preserve">
          <source>Object variables may have attributes which can be accessed using the syntax: &lt;code&gt;foo.bar&lt;/code&gt;. If you are passing arrays, you have to use the square bracket syntax: &lt;code&gt;foo['bar']&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90525df99f953d473398d87ad8c78178f9b96101" translate="yes" xml:space="preserve">
          <source>Objects as role name and resource name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6987957016ec049f0aed37da042968b25c5fc130" translate="yes" xml:space="preserve">
          <source>Obtain a robot by its id:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df2588a3561bb36cb49ca503f12c66fa80b89f2" translate="yes" xml:space="preserve">
          <source>Obtain all the robots:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00157682c9571da6aa6218ff59322463631d68dd" translate="yes" xml:space="preserve">
          <source>Obtaining a service from the container is a matter of simply calling the &amp;ldquo;get&amp;rdquo; method. A new instance of the service will be returned:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444c2fea5677d56dd1ce1fc0b095c859fdf49df9" translate="yes" xml:space="preserve">
          <source>Obtains a service from the DI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f392c28b131bf5f635ea6ac25fc9a27ee562113c" translate="yes" xml:space="preserve">
          <source>Obtains a shared service from the DI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4905eb7532cd575e63d211613ec4666d9530f8c6" translate="yes" xml:space="preserve">
          <source>Obtains a value from the session bag optionally setting a default value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5284b07916f61f0bea37700be4fb7feb8abe5be5" translate="yes" xml:space="preserve">
          <source>Obtains the &amp;lsquo;escaper&amp;rsquo; service if required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0d923c98a81996ec315c76aeafa88e321aa6ab" translate="yes" xml:space="preserve">
          <source>Obtains the current value in the internal iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef24269c0423344d15eb88e7cd88a44a6294879e" translate="yes" xml:space="preserve">
          <source>Of course, this method can be moved onto independent plugin classes, allowing more than one class take actions when an exception is produced in the dispatch loop:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd85daa84a6ac31995d210b6221d3c1e091a09ef" translate="yes" xml:space="preserve">
          <source>Of course, you can also manipulate the watermarked image before applying it to the main image:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0781561c5c3b9df835c7f218f07b9842e0a9e9dc" translate="yes" xml:space="preserve">
          <source>Offset the results of the query by a certain amount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69734ba790285e3cbdcfe15eefefe978d53fc213" translate="yes" xml:space="preserve">
          <source>Often in development we need to update changes in production environments. Some of these changes could be database modifications like new fields, new tables, removing indexes, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19aea3d630638b286ef5d35c003bec0a638ee3d" translate="yes" xml:space="preserve">
          <source>On a Linux/Solaris system you can easily compile and install the extension from the source code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b712897b875df953cfbe175f032492be3c9b4063" translate="yes" xml:space="preserve">
          <source>On a Mac OS X system you can compile and install the extension from the source code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89d95bbcdc8a51e820e2b0812b738c0053b7e6e" translate="yes" xml:space="preserve">
          <source>On the Windows platform, you need to configure the system PATH to include Phalcon tools as well as the PHP executable. If you download the Phalcon tools as a zip archive, extract it on any path of your local drive i.e. &lt;em&gt;c:\phalcon-tools&lt;/em&gt;. You will need this path in the steps below. Edit the file &amp;ldquo;phalcon.bat&amp;rdquo; by right clicking on the file and selecting &amp;ldquo;Edit&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbecc4fa305150e8296fa9f56941a23f7f29f9bf" translate="yes" xml:space="preserve">
          <source>Once a job is placed into the queue, those messages can be consumed by a background worker which will have enough time to complete the task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2c11ced54c773b7972ab12ed31447b927cb86b" translate="yes" xml:space="preserve">
          <source>Once a service is registered in the service container, you can retrieve it to manipulate it individually:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16c2f7a4d080e3100e50c3456d344a5a7ba4d62" translate="yes" xml:space="preserve">
          <source>Once phpunit is installed create a directory called &amp;lsquo;tests&amp;rsquo; in your root directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f6a676fcd497265ab079449f3aebd73d2eab27" translate="yes" xml:space="preserve">
          <source>Once the application is in a production stage, it is not necessary to query the metadata of the table from the database system each time you use the table. This could be done caching the metadata using any of the following adapters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22094f15a44e09ca24a93fdc053e7890493b671f" translate="yes" xml:space="preserve">
          <source>Once the code is generated, it will have to be customized to meet your needs. Many developers avoid scaffolding entirely, opting to write all or most of their source code from scratch. The generated code can serve as a guide to better understand of how the framework works or develop prototypes. The code below shows a scaffold based on the table &amp;ldquo;products&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c0ae40e42d7b4215f60c579f43b750510f505f" translate="yes" xml:space="preserve">
          <source>Once the form is rendered if there is no default values assigned to the elements it will use the ones provided by the entity:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523c18cd8731d2f30c67002e910e5e62d1197e2b" translate="yes" xml:space="preserve">
          <source>Once the generated migrations are uploaded on the target server, you can easily run them as shown in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7375d66e50aab55ff432a6035fd75f2560ba8f34" translate="yes" xml:space="preserve">
          <source>Once the list has been completely defined. We can query it to check if a role has a given permission or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2434c2684b8005a398c5f5036af2734debf38a3" translate="yes" xml:space="preserve">
          <source>Once the record is in memory, you can make modifications to its data and then save changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b9850e0543e6ac809dd5c0e543567b7a06d948" translate="yes" xml:space="preserve">
          <source>Once you clone the project in your document root you&amp;rsquo;ll see the following structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79d03cf21f48748244ce08e55c6f4f75b663fd6" translate="yes" xml:space="preserve">
          <source>Once you have xdebug installed, you can use its API to get a more detailed information about exceptions and messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eeceaeb9d50f47572582b993cc188a9833558b1" translate="yes" xml:space="preserve">
          <source>Once you open the application in your browser &lt;a href=&quot;http://localhost/invo&quot;&gt;http://localhost/invo&lt;/a&gt; you&amp;rsquo;ll see something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b16dca75ed432b37cbac051682db5880db827768" translate="yes" xml:space="preserve">
          <source>One of the BIND_TYPE_* constants telling how the column must be binded before save it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c0fea3a97ca9c8a4df8b23610c1caa63e91415" translate="yes" xml:space="preserve">
          <source>One of the caching adapters is &amp;lsquo;File&amp;rsquo;. The only key area for this adapter is the location of where the cache files will be stored. This is controlled by the cacheDir option which &lt;em&gt;must&lt;/em&gt; have a backslash at the end of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990cb670ddd6a94bbd9eeeee10dbf99606bd7721" translate="yes" xml:space="preserve">
          <source>One of the easiest ways to improve the performance in your applications and reduce the traffic is using HTTP Cache. Most modern browsers support HTTP caching and is one of the reasons why many websites are currently fast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf579ae21869dc0f2ae00aaf603038fe21bfc9f6" translate="yes" xml:space="preserve">
          <source>One way to use partials is to treat them as the equivalent of subroutines: as a way to move details out of a view so that your code can be more easily understood. For example, you might have a view that looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7510fb22709a851d7b3ce3f2ce15a0b4f57c9a9e" translate="yes" xml:space="preserve">
          <source>Only exceptions produced by the dispatcher and exceptions produced in the executed action are notified in the &amp;lsquo;beforeException&amp;rsquo; events. Exceptions produced in listeners or controller events are redirected to the latest try/catch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2bdd4e7cd5da0ef9c4502e603b688b5dc6ccee" translate="yes" xml:space="preserve">
          <source>Only methods marked with valid annotations are used as routes. List of annotations supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22379703bc4e66feeeb713dbdd4ebbf8ea4f7ff4" translate="yes" xml:space="preserve">
          <source>Open a terminal and type the command below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc49c2e860ea3a386f9ce08de3b9fe787a89c3f" translate="yes" xml:space="preserve">
          <source>Open the terminal application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94788cf276028cdac2c2826f1f78654a8d47279c" translate="yes" xml:space="preserve">
          <source>Open your browser to navigate to &lt;a href=&quot;http://localhost&quot;&gt;http://localhost&lt;/a&gt;. The WAMP welcome page will appear. Look at the section &amp;ldquo;extensions loaded&amp;rdquo; to check if phalcon was loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6507fd8bcafa118fd10e823adcec559b540cfd1f" translate="yes" xml:space="preserve">
          <source>Open your browser to navigate to &lt;a href=&quot;http://localhost&quot;&gt;http://localhost&lt;/a&gt;. The XAMPP welcome page will appear. Click on the link phpinfo().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc75b36b1347a94129fd1385a17614bb3e8911bc" translate="yes" xml:space="preserve">
          <source>Opens the internal file handler after unserialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="ba2346423956f5cc2d2bbf413d24a12462a33f5b" translate="yes" xml:space="preserve">
          <source>Operations over Resultsets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="d3de3724cd654cd15f88a03665d0351cd8884a7e" translate="yes" xml:space="preserve">
          <source>Optionally</source>
          <target state="translated">Optionally</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="515e9399f020f71e23676234f83ecfd5dd6470dc" translate="yes" xml:space="preserve">
          <source>Or bind them to specific namespaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce3b742dc460366c29a9f506e17afaaf0a9048b" translate="yes" xml:space="preserve">
          <source>Or by calling through the magic method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb49477d7d37e5fd90198a7558de0ab98efd9119" translate="yes" xml:space="preserve">
          <source>Or create a response object and return it from the handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791fe35080ed9d219757b2a866c954bd1053bcbe" translate="yes" xml:space="preserve">
          <source>Or disable temporarily in some part of the application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9803857a24d85c1192a9a362f833c2b903923226" translate="yes" xml:space="preserve">
          <source>Or get specific messages for an element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c986b953845c1393065e7ef1e355a5debfc84f3c" translate="yes" xml:space="preserve">
          <source>Or if you are using Apache 2.4 or above:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae21b79beb44b5a530a72dbff2269e44b7a03ebd" translate="yes" xml:space="preserve">
          <source>Or reuse the logic in your form class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab28c8074f97750afed2386f3d9c28d8894edab" translate="yes" xml:space="preserve">
          <source>Or simply execute it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa68c2b11a600ea772c1de11e411e362ab9453e" translate="yes" xml:space="preserve">
          <source>Or update a robot with an unknown type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a12b8ccd302ad49554101dc2554620f4a2df5ae" translate="yes" xml:space="preserve">
          <source>Or using a HTTP redirection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f4033a5f181541e8d41a87a610e58b84702f0d" translate="yes" xml:space="preserve">
          <source>Or using the array-access syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432fa85d1d0506bedb4e2ff1207170d815138256" translate="yes" xml:space="preserve">
          <source>Or you can bind specific routes to specific modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff3737156d8284dbcafc23d55e895a254b47ef9" translate="yes" xml:space="preserve">
          <source>Or you can manually pass a URI to the &lt;code&gt;handle()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccf65457df32abbb58868b167c29223b2a7bc72" translate="yes" xml:space="preserve">
          <source>Or, if you prefer, you can implement the filter in a class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d5584d1d91132f41306d3cc13a8b7d7fd75fec" translate="yes" xml:space="preserve">
          <source>Or, you can modify specific routes to optionally accept trailing slashes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d75774c0f96b6ee44eb6643c9fea71b50b90ea8" translate="yes" xml:space="preserve">
          <source>Order</source>
          <target state="translated">Order</target>
        </trans-unit>
        <trans-unit id="2a75eb8ba7b06856c91df66c9c4a4188e3f89c4d" translate="yes" xml:space="preserve">
          <source>Organizing services in files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd13b94019000aaafc7f679d1d2b13d8082b8dbf" translate="yes" xml:space="preserve">
          <source>Other Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e652c0f95be4495ce21465cfb806eefda80f153" translate="yes" xml:space="preserve">
          <source>Other elements are also used in this form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c774e7dc966835bd125ae391b0b669a9f0af41a9" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;UserRole&lt;/code&gt; class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956d7100737a237abdf2d23b9d4e44b666408628" translate="yes" xml:space="preserve">
          <source>Our API provides information about &amp;lsquo;robots&amp;rsquo;, these data are stored in a database. The following model allows us to access that table in an object-oriented way. We have implemented some business rules using built-in validators and simple validations. Doing this will give us the peace of mind that saved data meet the requirements of our application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cc3c19d85bde3f5ae2d53ac09c16be3f48823d" translate="yes" xml:space="preserve">
          <source>Our client implement a basic set of the features provided by Beanstalkd but enough to allow you to build applications implementing queues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf502e0aac8084093fd1f24be57aabe17299aa1" translate="yes" xml:space="preserve">
          <source>Our controller (app/controllers/IndexController.php) now has an empty action definition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906831d64c77840f540e84d005cc30db9dee996b" translate="yes" xml:space="preserve">
          <source>Outputs a message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4e7e4a4a3d8e837bb4e68da3c5c35ededb3f65" translate="yes" xml:space="preserve">
          <source>Outputs a message formatting it with HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff7ff8300e9597ff47259151f3ce89e1c92f361" translate="yes" xml:space="preserve">
          <source>Overwrites a header in the response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4405e6ed0bdd7e479f4f49e7d2907045f9553390" translate="yes" xml:space="preserve">
          <source>PADDING_ANSI_X_923</source>
          <target state="translated">PADDING_ANSI_X_923</target>
        </trans-unit>
        <trans-unit id="5e28b6041b20031b896e53a78cecaa076d35c040" translate="yes" xml:space="preserve">
          <source>PADDING_DEFAULT</source>
          <target state="translated">PADDING_DEFAULT</target>
        </trans-unit>
        <trans-unit id="17aef6ee74ead574913616e8dd3d36b30cf7ab14" translate="yes" xml:space="preserve">
          <source>PADDING_ISO_10126</source>
          <target state="translated">PADDING_ISO_10126</target>
        </trans-unit>
        <trans-unit id="f0a995167bfbd70d79c2024111027e524a3dbc30" translate="yes" xml:space="preserve">
          <source>PADDING_ISO_IEC_7816_4</source>
          <target state="translated">PADDING_ISO_IEC_7816_4</target>
        </trans-unit>
        <trans-unit id="3d38e6e84e2120cc533bf058937567af589b5ce0" translate="yes" xml:space="preserve">
          <source>PADDING_PKCS7</source>
          <target state="translated">PADDING_PKCS7</target>
        </trans-unit>
        <trans-unit id="ccac17e1221e8f01c2f3a6108aac8cd77ce92acf" translate="yes" xml:space="preserve">
          <source>PADDING_SPACE</source>
          <target state="translated">PADDING_SPACE</target>
        </trans-unit>
        <trans-unit id="cf5c5e2ecec29d24d90e89cda4ddb16bef9d9333" translate="yes" xml:space="preserve">
          <source>PADDING_ZERO</source>
          <target state="translated">PADDING_ZERO</target>
        </trans-unit>
        <trans-unit id="b17cf809f28cba58a1fc7e63b99bd42941e3bc04" translate="yes" xml:space="preserve">
          <source>PHP &amp;gt;= 5.5 development resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb3b8ad689982b99569e2de70520e456e02bcf7" translate="yes" xml:space="preserve">
          <source>PHP 5.5 includes a built-in bytecode cache called ZendOptimizer+, this extension is also available for 5.3 and 5.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d134c8780a25a6ec35a929d2a606e9c0f88dff0" translate="yes" xml:space="preserve">
          <source>PHP Alternative website: Multi-Lingual, Complex Routing and more</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d15b3e20e9cd801a59125dff39effd83c446974" translate="yes" xml:space="preserve">
          <source>PHP automatically fills the superglobal arrays &lt;code&gt;$_GET&lt;/code&gt; and &lt;code&gt;$_POST&lt;/code&gt; depending on the type of the request. These arrays contain the values present in forms submitted or the parameters sent via the URL. The variables in the arrays are never sanitized and can contain illegal characters or even malicious code, which can lead to &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot;&gt;SQL injection&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;Cross Site Scripting (XSS)&lt;/a&gt; attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875b5a82294d197c1694912248df90dcecbf35a7" translate="yes" xml:space="preserve">
          <source>PHP constants may also be parsed in the ini file, so if you define a constant as an ini value before calling the constructor, the constant&amp;rsquo;s value will be integrated into the results. To use it this way you must specify the optional second parameter as INI_SCANNER_NORMAL when calling the constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32833394d6f3a0ca0da2a5210d4bdd9bf31b1019" translate="yes" xml:space="preserve">
          <source>PHP extensions require a slightly different installation method to a traditional PHP-based library or framework. You can either download a binary package for the system of your choice or build it from the sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf3b91e574bbb3021c1201603b7facd29b8a4d2" translate="yes" xml:space="preserve">
          <source>PHP is faster every day, using the latest version improves the performance of your applications and also of Phalcon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8193f4e3faf4ca26bce5dc823d5d396ec35547" translate="yes" xml:space="preserve">
          <source>PHP itself provides an excellent filter extension you can use. Check out its documentation: &lt;a href=&quot;http://www.php.net/manual/en/book.filter.php&quot;&gt;Data Filtering at PHP Documentation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837dfdc48d4f89b9a40d5f43c58000554950b037" translate="yes" xml:space="preserve">
          <source>PHP offers tools to debug applications with notices, warnings, errors and exceptions. The &lt;a href=&quot;http://www.php.net/manual/en/language.exceptions.php&quot;&gt;Exception class&lt;/a&gt; offers information such as the file, line, message, numeric code, backtrace etc. on where an error occurred. OOP frameworks like Phalcon mainly use this class to encapsulate this functionality and provide information back to the developer or user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c34a3e7593fd73ad474c716c6624fc05de05a59b" translate="yes" xml:space="preserve">
          <source>PHPunit.xml file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d16e5eafe1aa0b89badb2787fa702c578ac0461" translate="yes" xml:space="preserve">
          <source>PHQL Lifecycle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7c4b88d16f05e498c9eeb3afe3f9ba376ff189" translate="yes" xml:space="preserve">
          <source>PHQL has a few reserved words, if you want to use any of them as attributes or models names, you need to escape those words using the cross-database escaping delimiters &amp;lsquo;[&amp;lsquo; and &amp;lsquo;]&amp;rsquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01eb390965a1eda4ef3d8e41ac52be4ad57b6538" translate="yes" xml:space="preserve">
          <source>PHQL ignores all SQL comments which are often used in SQL injections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ea612c9a83f1f8c84279db6ed2f32f501f5a05" translate="yes" xml:space="preserve">
          <source>PHQL implements a high-level abstraction allowing you to handle tables as models and fields as class attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d3e377b29d8831d6e65fecf4e70197e6bd1747" translate="yes" xml:space="preserve">
          <source>PHQL is implemented as a parser (written in C) that translates syntax in that of the target RDBMS. It allows Phalcon to offer a unified SQL language to the developer, while internally doing all the work of translating PHQL instructions to the most optimal SQL instructions depending on the RDBMS type associated with a model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288d37bc2c4432f89233b2fcd8518131214258ee" translate="yes" xml:space="preserve">
          <source>PHQL only allows data manipulation statements, avoiding altering or dropping tables/databases by mistake or externally without authorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908b416e0b3b1e451e88870adeea1c495c6f00cc" translate="yes" xml:space="preserve">
          <source>PHQL only allows one SQL statement to be executed per call preventing injections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3068bd1cfdbcccf17db2342401285c4c5c2b359f" translate="yes" xml:space="preserve">
          <source>PHQL queries can be created just by instantiating the class &lt;a href=&quot;../api/phalcon_mvc_model_query&quot;&gt;&lt;em&gt;Phalcon\Mvc\Model\Query&lt;/em&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1078ef35660c35444bc1c22b555de384eade71" translate="yes" xml:space="preserve">
          <source>PHQL statements are parsed once and cached in memory. Further executions of the same statement result in a slightly faster execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7932fd4d5fccb378626b3d48985675d3bac2ff" translate="yes" xml:space="preserve">
          <source>POSITION_FIRST</source>
          <target state="translated">POSITION_FIRST</target>
        </trans-unit>
        <trans-unit id="f1ddcd19da0695a547aba050e28a2275ad1f5e2c" translate="yes" xml:space="preserve">
          <source>POSITION_LAST</source>
          <target state="translated">POSITION_LAST</target>
        </trans-unit>
        <trans-unit id="61ff81c30aa3c76e78afea62b2e3bd1dfa49e854" translate="yes" xml:space="preserve">
          <source>POST</source>
          <target state="translated">POST</target>
        </trans-unit>
        <trans-unit id="8c62175a084a31598469e102288b038071f39f75" translate="yes" xml:space="preserve">
          <source>POST to add data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cbec53c7d45135459c01f97b5dc83310a68478" translate="yes" xml:space="preserve">
          <source>PRECISE</source>
          <target state="translated">PRECISE</target>
        </trans-unit>
        <trans-unit id="091b0ce42eb0bd96169ea00b16dd938f6d63ac95" translate="yes" xml:space="preserve">
          <source>PUT</source>
          <target state="translated">PUT</target>
        </trans-unit>
        <trans-unit id="e3090cfcad6c061ab60967edaf742e105b79d417" translate="yes" xml:space="preserve">
          <source>PUT to update data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c14e7220ce345b51c08758aa63e32b8f7747bc95" translate="yes" xml:space="preserve">
          <source>Pads texts before encryption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c22ac32c97a49ccde3d4a0debbdba200967e5c" translate="yes" xml:space="preserve">
          <source>Page Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="adda56b3b4a471ca022f500a0668c78b53f20ae7" translate="yes" xml:space="preserve">
          <source>Pagination using a PHP array as source of data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3add9c1f6322704123d6812537791bc96756daef" translate="yes" xml:space="preserve">
          <source>Pagination using a PHQL query builder as source of data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24533236e88c1d36ff37cc521374f5302ab40560" translate="yes" xml:space="preserve">
          <source>Paginator</source>
          <target state="translated">Paginator</target>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">Parameter</target>
        </trans-unit>
        <trans-unit id="4b59128ea1b4d0fd4bc10d433ce29bcdef4864f6" translate="yes" xml:space="preserve">
          <source>Parameters are assigned in the same order as they were passed in the route. You can get an arbitrary parameter from its name in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301d5c2bb670b68b199c6d09a5ff734b09e249de" translate="yes" xml:space="preserve">
          <source>Parameters by default are passed as they come in the URL to actions, you can transform them to the desired schema:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb01d3f635f7c76e7fc10f7905443b3d8bff7ad" translate="yes" xml:space="preserve">
          <source>Parameters with Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda6f55e0286be40b79b1b6e988eaa18f8b55751" translate="yes" xml:space="preserve">
          <source>Parameters without a default value are handled as required. Setting optional values for parameters is done as usual in PHP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62846aa6c62fe5fa2ab2a61e1cba828bb2976977" translate="yes" xml:space="preserve">
          <source>Parenthesis groups expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f922e541d830af3c9fcfdd4b2b5322e34549d6c3" translate="yes" xml:space="preserve">
          <source>Parsed and processed annotations are stored permanently in PHP files improving performance. This adapter must be used together with a bytecode cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="782607cfdfc95e4b7893e091af98acc23478c724" translate="yes" xml:space="preserve">
          <source>Parsed and processed annotations are stored permanently in the APC cache improving performance. This is the faster adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f79ab4798a14d41a19c9a1e6a4e24ee514f0d5" translate="yes" xml:space="preserve">
          <source>Parsed and processed annotations are stored permanently in the XCache cache improving performance. This is a fast adapter too</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ceca3c2e905ac8d1edafe6c61602daa61589b8" translate="yes" xml:space="preserve">
          <source>Parses a PHQL statement returning an intermediate representation (IR)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688bd84dd733c473bb3762ff80b3997fe3ca4253" translate="yes" xml:space="preserve">
          <source>Parses a Volt template returning its intermediate representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be60591921328fc9b6d28422e468e358cb724064" translate="yes" xml:space="preserve">
          <source>Parses a raw doc block returning the annotations found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121f0cf58b1774e2a77dfd3920cb44e48e955d37" translate="yes" xml:space="preserve">
          <source>Parses docblocks returning an array with the found annotations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502ef1c486d7b64a2732064fd3551cdb4127ce71" translate="yes" xml:space="preserve">
          <source>Parses or retrieves all the annotations found in a class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ace97a46c49b44a4d902085a9441937ae08a9a" translate="yes" xml:space="preserve">
          <source>Parses the intermediate code produced by Phalcon\Mvc\Model\Query\Lang generating another intermediate representation that could be executed by Phalcon\Mvc\Model\Query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c199af09687f157b57eb3c2ae2195b30d3f553b8" translate="yes" xml:space="preserve">
          <source>Part of creating a localized application is to produce concatenated, language-neutral messages. The &lt;a href=&quot;http://www.php.net/manual/en/class.messageformatter.php&quot;&gt;MessageFormatter&lt;/a&gt; allows for the production of those messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d4390f617dfd1d7e628be255c5e5ae465a5ada" translate="yes" xml:space="preserve">
          <source>Part of the HTTP cycle is return responses to the clients. Phalcon\HTTP\Response is the Phalcon component responsible to achieve this task. HTTP responses are usually composed by headers and body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0b849852aa00e4ae316e0f737c6273d4da15bd" translate="yes" xml:space="preserve">
          <source>Part of the HTTP cycle is returning responses to clients. &lt;a href=&quot;../api/phalcon_http_response&quot;&gt;&lt;em&gt;Phalcon\Http\Response&lt;/em&gt;&lt;/a&gt; is the Phalcon component designed to achieve this task. HTTP responses are usually composed by headers and body. The following is an example of basic usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f07ca9b9b04aa10632e23295722e552b510e845" translate="yes" xml:space="preserve">
          <source>Partial templates are another way of breaking the rendering process into simpler more manageable chunks that can be reused by different parts of the application. With a partial, you can move the code for rendering a particular piece of a response to its own file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="452639022b8250c5c22e99ac1b9352ba07fcd612" translate="yes" xml:space="preserve">
          <source>Partial vs Include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5097355182d198e31f809aa04a84e506967e362e" translate="yes" xml:space="preserve">
          <source>Passing it as part of the route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6a4755ac9b0de77a1366e6f0a727bb0efef096" translate="yes" xml:space="preserve">
          <source>Password Hashing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238309d8fd60337a51e2f11cf50ecb5c91aa8162" translate="yes" xml:space="preserve">
          <source>Password to authenticate to a password-protected Redis server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91100edf97a227e401832c7aa943811aadf93663" translate="yes" xml:space="preserve">
          <source>Perform a count over a collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b6a34ae347e50ec1c581ac96e8135be2303236" translate="yes" xml:space="preserve">
          <source>Perform a count over a resultset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4be32b15526a3613f4fa6327f10134a1f40e58" translate="yes" xml:space="preserve">
          <source>Perform a division operation &lt;code&gt;{{ 10 / 2 }}&lt;/code&gt; returns 5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c628a0efcb33f90c55c453176493618e4202671" translate="yes" xml:space="preserve">
          <source>Perform a multiplication operation &lt;code&gt;{{ 2 * 3 }}&lt;/code&gt; returns 6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50aecca792c205680c6d3103ac26dee9d8bc861d" translate="yes" xml:space="preserve">
          <source>Perform a substraction operation &lt;code&gt;{{ 2 - 3 }}&lt;/code&gt; returns -1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b06c266693562366fc24e64dd2960b106a15530" translate="yes" xml:space="preserve">
          <source>Perform an adding operation. &lt;code&gt;{{ 2 + 3 }}&lt;/code&gt; returns 5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950c141db2e33609ba00aa6dced5451270bbb8bb" translate="yes" xml:space="preserve">
          <source>Perform an aggregation using the Mongo aggregation framework</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1893523523a0aa9926ab9168a849af93e4eeda" translate="yes" xml:space="preserve">
          <source>Perform the automatic rendering returning the output as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6233c3c50f1db6d37471b9fd50ed4fcc80b218e4" translate="yes" xml:space="preserve">
          <source>Performance can be also improved reusing the PHQL query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7b975c003f2f0180cbdb1b6f7048f4a69da900" translate="yes" xml:space="preserve">
          <source>Performing a Search</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ff8a7a6f5d42169b5a95536298c74fb4f4dadf" translate="yes" xml:space="preserve">
          <source>Performs a string conversion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777c935188ffae52e04478f1fae6b67e41e2841f" translate="yes" xml:space="preserve">
          <source>Persistent Data in Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1fa602711ccfe2f7f4502c89ad41e789aa3dc9" translate="yes" xml:space="preserve">
          <source>Phalcon</source>
          <target state="translated">Phalcon</target>
        </trans-unit>
        <trans-unit id="16d985c32bd08ae19b55c492adef132dc08a2ea1" translate="yes" xml:space="preserve">
          <source>Phalcon Developer Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d700d6c28378a146b1c8dae3aa947a45972d42" translate="yes" xml:space="preserve">
          <source>Phalcon Developer Tools on Linux</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7ad3ff1e54d0e9a546e855cd54a77fde320a52" translate="yes" xml:space="preserve">
          <source>Phalcon Developer Tools on Mac OS X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4f72b85dce818addb0e68e377f7580946ec6f0" translate="yes" xml:space="preserve">
          <source>Phalcon Developer Tools on Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569bc388156032d976fd0cf943e767029d10b4cb" translate="yes" xml:space="preserve">
          <source>Phalcon Developer Tools provides an easy way to generate code for your application, reducing development time and potential coding errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afceceb02116fe79c2872606aa3ce0d4080c5047" translate="yes" xml:space="preserve">
          <source>Phalcon Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b48bcc8d84202ac2bd45241ca0bdb3c52bdf379" translate="yes" xml:space="preserve">
          <source>Phalcon Events Manager, offers an easy way to intercept and manipulate, if needed, the normal flow of operation. With the EventsManager the developer can create hooks or plugins that will offer monitoring of data, manipulation, conditional execution and much more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bae6d76b380214afee5fa3c93e40dcb7b170bd" translate="yes" xml:space="preserve">
          <source>Phalcon Query Language (PHQL)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f78c371b1a12a2c9a48bb941d674745c988c34" translate="yes" xml:space="preserve">
          <source>Phalcon Query Language, PhalconQL or simply PHQL is a high-level, object-oriented SQL dialect that allows to write queries using a standardized SQL-like language. PHQL is implemented as a parser (written in C) that translates syntax in that of the target RDBMS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41403c752278942428c54e609ad081cfedf917ea" translate="yes" xml:space="preserve">
          <source>Phalcon also provides a &lt;a href=&quot;forms&quot;&gt;&lt;em&gt;form builder&lt;/em&gt;&lt;/a&gt; to create forms in an object-oriented manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cbab8c176523cacefadcbaedb5b3e9f1a2eefd" translate="yes" xml:space="preserve">
          <source>Phalcon automatically detects your architecture, however, you can force the compilation for a specific architecture:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5946bcdf578c109a6652c46dafd38e4c8b8a72" translate="yes" xml:space="preserve">
          <source>Phalcon automatically passes the execution to the view component as soon as a particular controller has completed its cycle. The view component will look in the views folder for a folder named as the same name of the last controller executed and then for a file named as the last action executed. For instance, if a request is made to the URL &lt;em&gt;http://127.0.0.1/blog/posts/show/301&lt;/em&gt;, Phalcon will parse the URL as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27aad733058a8ee3fd2a9a514a5a18b7c6aff82e" translate="yes" xml:space="preserve">
          <source>Phalcon brings the first ORM for PHP entirely written in C-language. Instead of increasing the complexity of development, it simplifies it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a23ddaa687840b89439a479476fa655b45ac06" translate="yes" xml:space="preserve">
          <source>Phalcon can obtain the metadata for each model automatically without the developer must set them manually using any of the introspection strategies presented above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef12fefbb9e518713030482c9edfcbd547611db5" translate="yes" xml:space="preserve">
          <source>Phalcon does not impose a particular file structure for application development. Due to the fact that it is loosely coupled, you can implement Phalcon powered applications with a file structure you are most comfortable using.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca52ba7f960607484eabe3d60c73843f7363b48" translate="yes" xml:space="preserve">
          <source>Phalcon does not offer this functionality, since creating such a component would be replicating existing code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8313f342ef2d523d258de79c98941093368aeb" translate="yes" xml:space="preserve">
          <source>Phalcon doesn&amp;rsquo;t have any pre-defined settings convention. Sections help us to organize the options as appropriate. In this file there are two sections to be used later: &amp;ldquo;application&amp;rdquo; and &amp;ldquo;database&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193455c61b5b124ae76ec0c23f324cf24d64be02" translate="yes" xml:space="preserve">
          <source>Phalcon doesn&amp;rsquo;t only transform the PHQL statements into SQL. All events and business rules defined in the model are executed as if we created individual objects manually. Let&amp;rsquo;s add a business rule on the model cars. A car cannot cost less than $ 10,000:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c1c49ba74f12c8579b27d854dc11c20c9cea04" translate="yes" xml:space="preserve">
          <source>Phalcon encapsulates the specific details of each database engine in dialects. Those provide common functions and SQL generator to the adapters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0eb5ead2236739ba4a77de307f7bd83dea2462" translate="yes" xml:space="preserve">
          <source>Phalcon events use namespaces to avoid naming collisions. Each component in Phalcon occupies a different event namespace and you are free to create your own as you see fit. Event names are formatted as &amp;ldquo;component:event&amp;rdquo;. For example, as &lt;a href=&quot;../api/phalcon_db&quot;&gt;&lt;em&gt;Phalcon\Db&lt;/em&gt;&lt;/a&gt; occupies the &amp;ldquo;db&amp;rdquo; namespace, its &amp;ldquo;afterQuery&amp;rdquo; event&amp;rsquo;s full name is &amp;ldquo;db:afterQuery&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd51940e1d60c0a73c5db9584a8ddea313acca3" translate="yes" xml:space="preserve">
          <source>Phalcon exposes a set of built-in validators for this component:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52efc7c2c79aa7c23040ab8523d3ed62b6ae8292" translate="yes" xml:space="preserve">
          <source>Phalcon forms are integrated with the &lt;a href=&quot;validation&quot;&gt;&lt;em&gt;validation&lt;/em&gt;&lt;/a&gt; component to offer instant validation. Built-in or custom validators could be set to each element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172dd7076a180251b43e64fbbeaea51cd8fa1b8b" translate="yes" xml:space="preserve">
          <source>Phalcon is written in C as an extension for PHP. There is a &lt;a href=&quot;http://pecl.php.net/package/intl&quot;&gt;PECL&lt;/a&gt; extension that offers internationalization functions to PHP applications called &lt;a href=&quot;http://pecl.php.net/package/intl&quot;&gt;intl&lt;/a&gt;. Starting from PHP 5.4/5.5 this extension is bundled with PHP. Its documentation can be found in the pages of the official &lt;a href=&quot;http://www.php.net/manual/en/intro.intl.php&quot;&gt;PHP manual&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1398755464e7c51bbf8a0b5951caf023e5169b72" translate="yes" xml:space="preserve">
          <source>Phalcon offers a generic HTML helper that allows the generation of any kind of HTML element. It is up to the developer to produce a valid HTML element name to the helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e6ee2dee96c9c22c1f5d603655680d04648269" translate="yes" xml:space="preserve">
          <source>Phalcon offers the object-oriented classes, necessary to implement the Model, View, Controller architecture (often referred to as &lt;a href=&quot;http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC&lt;/a&gt;) in your application. This design pattern is widely used by other web frameworks and desktop applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf2ed27c6ba5974dd770a3239046c1eb72aa0486" translate="yes" xml:space="preserve">
          <source>Phalcon provides 2 built-in filters to minify both JavaScript and CSS, their C-backend provide the minimum overhead to perform this task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87955b447e2506f62e0d4de24330d461c9d033a" translate="yes" xml:space="preserve">
          <source>Phalcon provides &lt;code&gt;Phalcon\Tag::setDoctype()&lt;/code&gt; helper to set document type of the content. Document type setting may affect HTML output produced by other tag helpers. For example, if you set XHTML document type family, helpers that return or output HTML tags will produce self-closing tags to follow valid XHTML standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ec4e5f47923b39b113e99c8d8b3b8ec7002311" translate="yes" xml:space="preserve">
          <source>Phalcon provides a debug component that allows the developer to easily find errors produced in an application created with the framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91b142e4e0176d3e864ac224bb0d8a7ce0567e9" translate="yes" xml:space="preserve">
          <source>Phalcon provides a series of helpers to generate form elements such as text fields, buttons and more. The first parameter of each helper is always the name of the element to be generated. When the form is submitted, the name will be passed along with the form data. In a controller you can get these values using the same name by using the &lt;code&gt;getPost()&lt;/code&gt; and &lt;code&gt;getQuery()&lt;/code&gt; methods on the request object (&lt;code&gt;$this-&amp;gt;request&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f72a7cb3feeafb39385e4593b2a56511737666" translate="yes" xml:space="preserve">
          <source>Phalcon provides a set of built-in elements to use in your forms, all these elements are located in the &lt;a href=&quot;../api/phalcon_forms_element&quot;&gt;&lt;em&gt;Phalcon\Forms\Element&lt;/em&gt;&lt;/a&gt; namespace:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c67e112ef12d4a9256ebe2958176a9ab314de1c" translate="yes" xml:space="preserve">
          <source>Phalcon provides encryption facilities via the &lt;a href=&quot;../api/phalcon_crypt&quot;&gt;&lt;em&gt;Phalcon\Crypt&lt;/em&gt;&lt;/a&gt; component. This class offers simple object-oriented wrappers to the &lt;a href=&quot;http://www.php.net/manual/en/book.openssl.php&quot;&gt;openssl&lt;/a&gt; PHP&amp;rsquo;s encryption library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b05df604f65157fc3b895e75d6a6812ef43ab4b" translate="yes" xml:space="preserve">
          <source>Phalcon provides the &lt;a href=&quot;cache&quot;&gt;&lt;em&gt;Phalcon\Cache&lt;/em&gt;&lt;/a&gt; class allowing faster access to frequently used or already processed data. &lt;a href=&quot;cache&quot;&gt;&lt;em&gt;Phalcon\Cache&lt;/em&gt;&lt;/a&gt; is written in C, achieving higher performance and reducing the overhead when getting items from the backends. This class uses an internal structure of frontend and backend components. Front-end components act as input sources or interfaces, while backend components offer storage options to the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c11f817a9e089ae352b5389072d72ad43e9659" translate="yes" xml:space="preserve">
          <source>Phalcon uses the magic methods &lt;code&gt;__set&lt;/code&gt;/&lt;code&gt;__get&lt;/code&gt;/&lt;code&gt;__call&lt;/code&gt; to store or retrieve related data using relationships.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd40c95e49880e52553f9c45722c39f0e2f2d13" translate="yes" xml:space="preserve">
          <source>Phalcon&amp;rsquo;s resultsets emulate scrollable cursors, you can get any row just by accessing its position, or seeking the internal pointer to a specific position. Note that some database systems don&amp;rsquo;t support scrollable cursors, this forces to re-execute the query in order to rewind the cursor to the beginning and obtain the record at the requested position. Similarly, if a resultset is traversed several times, the query must be executed the same number of times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb1b1ad75a418ab8970bc7d1c15318f52b81bba" translate="yes" xml:space="preserve">
          <source>Phalcon's website</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c4342c8628c777856fa557d9702e1e6f2a9ccd" translate="yes" xml:space="preserve">
          <source>Phalcon\Acl\Adapter\Memory constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acdbeafafb372d2ae1259c165eaa3b1d64ddef1" translate="yes" xml:space="preserve">
          <source>Phalcon\Acl\Resource constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fc72bf69862241eb7e54e300648b57ef064a5c" translate="yes" xml:space="preserve">
          <source>Phalcon\Acl\Role constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf30a28d26d7867960c28c619feb147f720741c" translate="yes" xml:space="preserve">
          <source>Phalcon\Annotations\Adapter\Apc constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c9176ad7ef0a3056689f7d4eef07968cbedd13" translate="yes" xml:space="preserve">
          <source>Phalcon\Annotations\Adapter\Files constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0077e97415dd3f3d2c6867ecdd76e424bfe9af4c" translate="yes" xml:space="preserve">
          <source>Phalcon\Annotations\Annotation constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83dd0d219a10b9a92bc516a840341f937fe9680f" translate="yes" xml:space="preserve">
          <source>Phalcon\Annotations\Collection constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f02122870c50f6fe1d4427425c7500228a18fe" translate="yes" xml:space="preserve">
          <source>Phalcon\Annotations\Reflection constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ee58253bf2b8e6637617aa72b6bbe19b19ed25" translate="yes" xml:space="preserve">
          <source>Phalcon\Application</source>
          <target state="translated">Phalcon\Application</target>
        </trans-unit>
        <trans-unit id="938fdfb9b05a35966d1c6f2cd818b69008f67d7d" translate="yes" xml:space="preserve">
          <source>Phalcon\Assets\Inline constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be08003be9318595c4b8a596ba7fe7673cf0eed" translate="yes" xml:space="preserve">
          <source>Phalcon\Assets\Resource constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0dca13ff14de22ca0803bc02215777fcd06ba2f" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Backend constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455bdd614f8eb865fb1773ced2af29a67e1220e3" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Backend\File constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcca338e40d25231be93ec41f3d45d0f09b6918" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Backend\Memcache constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b5f029061c33c5438e9707eeea5531c4de92ec" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Backend\Mongo constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f12c618bd5ce085f44102faa868cb0c8dec9ea" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Backend\Redis constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53ed7e05a4c36da50b72c0a3b018a7dfdd0efa0" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Backend\Xcache constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509d974af54c644dc2a1614e3a3d3663adb0d655" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Frontend\Base64 constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083f34392a9fa6bc59974cc929c4ed648dd9e5d0" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Frontend\Data constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3acef6e5ae0495647cd6460050f84d256cb8573" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Frontend\Msgpack constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b835aba92933bcf5568b5b2606cca6f0645782" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Frontend\Output constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9cace3979d63871ca3b52e833c36fac6c27ce7f" translate="yes" xml:space="preserve">
          <source>Phalcon\Cache\Multiple constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c93ad6ef89ee89ee82a3e42eb8c732ab306e642" translate="yes" xml:space="preserve">
          <source>Phalcon\Cli\Router constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf85f4f9e34170ceaf8d4e1cd736570e4dd8ab4c" translate="yes" xml:space="preserve">
          <source>Phalcon\Cli\Router is the standard framework router. Routing is the process of taking a command-line arguments and decomposing it into parameters to determine which module, task, and action of that task should receive the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1dd0dcb4f1f78cffe2b118a06ca671d7cdfa793" translate="yes" xml:space="preserve">
          <source>Phalcon\Cli\Router\Route constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495c03e2bc7179c6dec84eb12b3396299d5b4612" translate="yes" xml:space="preserve">
          <source>Phalcon\Cli\Task constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82483462ea143da94ee07dad56830d0f65bd126c" translate="yes" xml:space="preserve">
          <source>Phalcon\Config constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f37cfed36c8ce5c219ea5f8849cd1b488735506" translate="yes" xml:space="preserve">
          <source>Phalcon\Config is designed to simplify the access to, and the use of, configuration data within applications. It provides a nested object property based user interface for accessing this configuration data within application code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7725d95e5f4c5c9441fcce6d8be7013e9df6300" translate="yes" xml:space="preserve">
          <source>Phalcon\Config\Adapter\Ini constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0c797c949f35996b3753e7b0b604ef8be20b46" translate="yes" xml:space="preserve">
          <source>Phalcon\Config\Adapter\Json constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd68da249f876dcf3db63a320a04077fe04bd57e" translate="yes" xml:space="preserve">
          <source>Phalcon\Config\Adapter\Php constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbebc85e5cc8e509a8892d094130a04408fca62" translate="yes" xml:space="preserve">
          <source>Phalcon\Config\Adapter\Yaml constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35070e520daa19f60ef1b9ece2e9f90490439562" translate="yes" xml:space="preserve">
          <source>Phalcon\Db and its related classes provide a simple SQL database interface for Phalcon Framework. The Phalcon\Db is the basic class you use to connect your PHP application to an RDBMS. There is a different adapter class for each brand of RDBMS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4122ff19fa9a9717e78883a2819e6359eb852a83" translate="yes" xml:space="preserve">
          <source>Phalcon\Db is an abstract class. You only can use it with a database adapter like Phalcon\Db\Adapter\Pdo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ad5acf1dba1cdddf1c6278f6ad51565b2d1638" translate="yes" xml:space="preserve">
          <source>Phalcon\Db\Adapter constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e7218862744f962b57bf24f6fda78adef779ea" translate="yes" xml:space="preserve">
          <source>Phalcon\Db\Adapter\Pdo is the Phalcon\Db that internally uses PDO to connect to a database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fcc493552772b9485bcf0857ee93bac5152061" translate="yes" xml:space="preserve">
          <source>Phalcon\Db\Column constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a137c3a1a7c8245783526d0b0ee3bb46b1aee9" translate="yes" xml:space="preserve">
          <source>Phalcon\Db\Index constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cf99b31cc201ab2ac548aaa80a9364a5a9ce08" translate="yes" xml:space="preserve">
          <source>Phalcon\Db\RawValue constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ea41e2b383492e653645f33ae6bd5890ad029c" translate="yes" xml:space="preserve">
          <source>Phalcon\Db\Reference constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb013a3436a42ebd8f3a7fee7301dc4659f05c8" translate="yes" xml:space="preserve">
          <source>Phalcon\Db\Result\Pdo constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f220182b2e7f1153e8360253d0939d1d1833af47" translate="yes" xml:space="preserve">
          <source>Phalcon\Debug\Dump constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f545c4b9f36ff4a81fc2ed393741c858cf02e339" translate="yes" xml:space="preserve">
          <source>Phalcon\Di constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473ead11f2f302b7abc802567c73becf5c5e2298" translate="yes" xml:space="preserve">
          <source>Phalcon\Di is a component that implements Dependency Injection/Service Location of services and it&amp;rsquo;s itself a container for them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c114c77caddcf21a26e06a34cc38735079508c5" translate="yes" xml:space="preserve">
          <source>Phalcon\Di\FactoryDefault constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b0eca5e7c2e245740a18a4256b0bb5adec8309" translate="yes" xml:space="preserve">
          <source>Phalcon\Di\FactoryDefault\Cli constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa279732d7df00d5f955a5928c2f4f135f2677e" translate="yes" xml:space="preserve">
          <source>Phalcon\Events\Event constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b0fe308f795c31b9214f99f23b430f812394ae" translate="yes" xml:space="preserve">
          <source>Phalcon\Flash constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289f7db94195989164792881e978c15fe67b81e7" translate="yes" xml:space="preserve">
          <source>Phalcon\Forms\Element constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a6affc4658f3d38da883a1081cdc9789acf710" translate="yes" xml:space="preserve">
          <source>Phalcon\Forms\Form constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf5b7c3e27ad815745ee0c9698dc740a949599b" translate="yes" xml:space="preserve">
          <source>Phalcon\Http\Cookie constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550b781b1108ced350d9abb93a83686cda5265a3" translate="yes" xml:space="preserve">
          <source>Phalcon\Http\Request\File constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc54c85d9b2a897148fc1e94ab3ed35837cd6b02" translate="yes" xml:space="preserve">
          <source>Phalcon\Http\Response constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95808223119a441928917fe689764b819a1b6e84" translate="yes" xml:space="preserve">
          <source>Phalcon\Logger\Adapter\File constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e30669203f3cc5177fc8732200c32e67ad47ba" translate="yes" xml:space="preserve">
          <source>Phalcon\Logger\Adapter\Stream constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef67a4927b07d50051f64c1ee18351f923355a5d" translate="yes" xml:space="preserve">
          <source>Phalcon\Logger\Adapter\Syslog constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec895a547114dcc361ee6e71d8e5e8587bd2766" translate="yes" xml:space="preserve">
          <source>Phalcon\Logger\Formatter\Line construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caeb86be767f28730fd2596bee04aee4dda7c90e" translate="yes" xml:space="preserve">
          <source>Phalcon\Logger\Item constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649a5382b5349095bba8706795a7775d4c706739" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Collection constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d739a8f08264745b330e42c081f1453312f8d5" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Collection\Behavior</source>
          <target state="translated">Phalcon\Mvc\Collection\Behavior</target>
        </trans-unit>
        <trans-unit id="4454dc63d27aab16698c2af8ba2df961c48e81df" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Controller constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afb11cf10d0dc4b55567fafed561b1259430294" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Micro constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b843bf3add0de3056d1600ac622a35d6a253b022" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Micro\LazyLoader constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db009e1fdc94954eb16aa07a5aa611cb136c1bab" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model connects business objects and database tables to create a persistable domain model where logic and data are presented in one wrapping. It&amp;lsquo;s an implementation of the object-relational mapping (ORM).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc01d49d4703dbfb2e48bd72c735416412db1227" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb06a738075802b5399f3f6aa26416e671b4bad1" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model is the first ORM written in Zephir/C languages for PHP, giving to developers high performance when interacting with databases while is also easy to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888fbae65594c514d76ffb4777914a81159e223b" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Behavior</source>
          <target state="translated">Phalcon\Mvc\Model\Behavior</target>
        </trans-unit>
        <trans-unit id="62ddbb84e989b39c7c1832161568f7b8806f5360" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Binder constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54c97d067ce0eb4cd463c07487e2021b11d1e62" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Binding</source>
          <target state="translated">Phalcon\Mvc\Model\Binding</target>
        </trans-unit>
        <trans-unit id="520f4986e16fa6faea22a9f330fe4e1a37c27c55" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Message constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d9ba6d8801fcb778d29d65be46ab91b40dcaf8" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\MetaData\Apc constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1041c7f2c662a049165895609b0f1c55dcea726c" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\MetaData\Files constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8201726935af188998f3b3cf622d5baa6b558f93" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\MetaData\Libmemcached constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77317977fa0ff4f1b643e5274e0160079813976c" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\MetaData\Memcache constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38109f8799123efda9ef2fcacd64e598064bc9dc" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\MetaData\Memory constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a99feb6bff8303f8c869f59981141a700b23d4f" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\MetaData\Redis constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6eafea44bf0ae69e6eef8f5ffbaab5ec8a53554" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\MetaData\Session constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe97dcfe4e3c8a682b63eba05151bcb005d030b" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\MetaData\Xcache constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea7574b4615868a9ad966e1377a828d28cf5f95" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Query constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f664f0636cd9e1683c96640d1e412f21ad390f1" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Query\Builder constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2788320251fc024f5c1b648ccb980eb893c763b" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Relation constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3393068f42207c4bdd340a07dd8be94062b6f86a" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Resultset constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d78952c96b5d6b2515b13b9542ef2b8a7cdbd37b" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Resultset\Complex constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d222354f04449d61719c0a9e9174c757e4a4cb67" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Resultset\Simple constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc086d4789ede8bd140f95a965c96ae1a9f13df6" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Transaction constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15bfe186fccccb8966beddfb3d5d98fa383f5e8" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Transaction\Failed constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8dcd4523c45e6efabd239f9be31c802b52c61e" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Transaction\Manager constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe62572584b1f45ed6ab7d0d04ec588aacd6457" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\ValidationFailed constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c13b80473db26716c96aee999b2464f46d33f0" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Validator constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5083df27eed69555527b250abafa91732e5d8717" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Validator\ExclusionIn</source>
          <target state="translated">Phalcon\Mvc\Model\Validator\ExclusionIn</target>
        </trans-unit>
        <trans-unit id="864bd66b5baa82398a55cd3c971664e44205579e" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Validator\IP</source>
          <target state="translated">Phalcon\Mvc\Model\Validator\IP</target>
        </trans-unit>
        <trans-unit id="a90616da703a0109bf4f9df48d6280cb506bb3d4" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Model\Validator\InclusionIn</source>
          <target state="translated">Phalcon\Mvc\Model\Validator\InclusionIn</target>
        </trans-unit>
        <trans-unit id="4abf1d8e373101dc9c6a8aace407b2021241a943" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Router constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43743e17f79380fd7f85a91898f22e35caf30eae" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Router is the standard framework router. Routing is the process of taking a URI endpoint (that part of the URI which comes after the base URL) and decomposing it into parameters to determine which module, controller, and action of that controller should receive the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968dfdd3e49cb8a97f1aee19808c9982ca782c99" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Router\Group constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d10c4b78bfd16b52a91a06ed18ef55f13813dcf" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\Router\Route constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf18ed626e49e21dd5a5f4a746ff554ca879cf30" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\View constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6003e3b7f6e54657e7598a8750d8ae883ba70589" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\View is a class for working with the &amp;ldquo;view&amp;rdquo; portion of the model-view-controller pattern. That is, it exists to help keep the view script separate from the model and controller scripts. It provides a system of helpers, output filters, and variable escaping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b2dc0e32eb0c36f85fe1d7a69061e3c892f030" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\View\Engine constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a50be0504c54e8f8332b3a98ee832eb4d858bf8" translate="yes" xml:space="preserve">
          <source>Phalcon\Mvc\View\Simple constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35db5b737b967e6fd46d3c2c12dcd4267c872d3d" translate="yes" xml:space="preserve">
          <source>Phalcon\Paginator\Adapter\Model constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ed403f62ca4e5395fcdc0f4f5db223413b3404" translate="yes" xml:space="preserve">
          <source>Phalcon\Paginator\Adapter\NativeArray constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72f30e1aef4912f5286bd430ebe62644452a230" translate="yes" xml:space="preserve">
          <source>Phalcon\Registry is very fast (it is typically faster than any userspace implementation of the registry); however, this comes at a price: Phalcon\Registry is a final class and cannot be inherited from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111554acf3c37989cd3f471dc762b788da48ef57" translate="yes" xml:space="preserve">
          <source>Phalcon\Security constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54dc9bb153291e62345a5306fbec3fcda698674e" translate="yes" xml:space="preserve">
          <source>Phalcon\Security\Random</source>
          <target state="translated">Phalcon\Security\Random</target>
        </trans-unit>
        <trans-unit id="abf0292a35d0c2677d13e4f8dae4a9dad75343b3" translate="yes" xml:space="preserve">
          <source>Phalcon\Session\Adapter constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9d70e9fddba3a236fb691e40abe68b4b8e95a6" translate="yes" xml:space="preserve">
          <source>Phalcon\Session\Adapter\Libmemcached constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ba6d7b0783439700e8abf4d4ca98ebda081882" translate="yes" xml:space="preserve">
          <source>Phalcon\Session\Adapter\Memcache constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ef4c5705fb3b9a091dd9005d237944fca38a6c" translate="yes" xml:space="preserve">
          <source>Phalcon\Session\Adapter\Redis constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1716a3bd8b55d76679cdcf191f94f57b532fcb" translate="yes" xml:space="preserve">
          <source>Phalcon\Session\Bag constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8a214d6136e8cf33930cddae54feecc97098ec" translate="yes" xml:space="preserve">
          <source>Phalcon\Tag is designed to simplify building of HTML tags. It provides a set of helpers to generate HTML in a dynamic way. This component is an abstract class that you can extend to add more helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44389ccfa61249e7ed6cf1b5adda30e7a0987fc3" translate="yes" xml:space="preserve">
          <source>Phalcon\Translate\Adapter\Csv constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a76b3618ef85aee48988e23da5bf712b0d2c9b" translate="yes" xml:space="preserve">
          <source>Phalcon\Translate\Adapter\Gettext constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7cd3319f5eb40da030746760f418581519f01b" translate="yes" xml:space="preserve">
          <source>Phalcon\Translate\Adapter\NativeArray constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb1c1d5457a11c6b69c15c2603685e1a4929ecf" translate="yes" xml:space="preserve">
          <source>Phalcon\Validation constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f224409f1ad4baa16e538f1535544c6eecf9c704" translate="yes" xml:space="preserve">
          <source>Phalcon\Validation\Message constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c32c00163eafbe0e764b975323d0f4528819a4a" translate="yes" xml:space="preserve">
          <source>Phalcon\Validation\Message\Group constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a74ea1bd19ed6aa3ef728b64a7749538d38c115" translate="yes" xml:space="preserve">
          <source>Phalcon\Validation\Validator constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5646d18543cabcea5ff2f71a7b19d35bb52e5b13" translate="yes" xml:space="preserve">
          <source>Phosphorum: Phalcon's forum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edaa12bd1e12febc23560cd3e7e1fa496fa8112c" translate="yes" xml:space="preserve">
          <source>Picking Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90adba24b0e15e743d5b1041645c80614049294" translate="yes" xml:space="preserve">
          <source>Pixelate image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d652400fdf72a24c8457b412ce83567f3cd3616" translate="yes" xml:space="preserve">
          <source>Pixelating images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed212fa164b940b935ec0a25b32878a0917c7268" translate="yes" xml:space="preserve">
          <source>Placeholder</source>
          <target state="translated">Placeholder</target>
        </trans-unit>
        <trans-unit id="94a190eb694f265b179b34e3c26e6d11618baadf" translate="yes" xml:space="preserve">
          <source>Please note that this code block uses &lt;a href=&quot;../api/phalcon_mvc_view_simple&quot;&gt;&lt;em&gt;Phalcon\Mvc\View\Simple&lt;/em&gt;&lt;/a&gt; which uses relative paths instead of controllers and actions. If you would like to use &lt;a href=&quot;../api/phalcon_mvc_view_simple&quot;&gt;&lt;em&gt;Phalcon\Mvc\View\Simple&lt;/em&gt;&lt;/a&gt; instead, you will need to change the parameters of the &lt;code&gt;render()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9152ba408a3ac8d186a27360d897f4cc02692291" translate="yes" xml:space="preserve">
          <source>Pointing to a different schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88505ef3906b7e406deb0b9ee5458d02baca5b83" translate="yes" xml:space="preserve">
          <source>Possible class name that will be located to dispatch the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f49c1ba2e8fe219df0927fcfecdb6b5cd2b96a2" translate="yes" xml:space="preserve">
          <source>Possible controller class name that will be located to dispatch the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7858ac3ff63354f37161bd349efe11edd13b89cb" translate="yes" xml:space="preserve">
          <source>Post</source>
          <target state="translated">Post</target>
        </trans-unit>
        <trans-unit id="fd808d484fd8cb0be5e60233d1f813d29b288f9f" translate="yes" xml:space="preserve">
          <source>PostgreSQL is a powerful, open source relational database system. It has more than 15 years of active development and a proven architecture that has earned it a strong reputation for reliability, data integrity, and correctness.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084d27ee1e4afe5c3f68e4ed43837f5432707f4b" translate="yes" xml:space="preserve">
          <source>PostgreSQL uses sequences to generate auto-numeric values, by default, Phalcon tries to obtain the generated value from the sequence &amp;ldquo;table_field_seq&amp;rdquo;, for example: robots_id_seq, if that sequence has a different name, the &lt;code&gt;getSequenceName()&lt;/code&gt; method needs to be implemented:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53ed28c34904d8f88474bf4fc9c97f101fa9e92" translate="yes" xml:space="preserve">
          <source>Practical Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a7e0b379aeb825139c9e10559f1a9308e90a70" translate="yes" xml:space="preserve">
          <source>Prepare an HTML string of information about a single variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a84b6baaf018685a689d78be3a5f1bc8dafb39" translate="yes" xml:space="preserve">
          <source>Prepare data to be stored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2271d1133bdd6afbbe212193b271e24f03b05ee2" translate="yes" xml:space="preserve">
          <source>Prepares a message to be encoded with JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c80db217d1834a4059746e05ab8ccaaa37011d" translate="yes" xml:space="preserve">
          <source>Prepares a message to be sent to syslog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc080aac595d006bbeebacb1c3e38efe1a95695" translate="yes" xml:space="preserve">
          <source>Prepares a message to be used in a Syslog backend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ff3d197377aef01b1c56f57ed9c0e3499b0588" translate="yes" xml:space="preserve">
          <source>Prepares column for this RDBMS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec70bf194f2f745897653f764c9cb1c46870406" translate="yes" xml:space="preserve">
          <source>Prepares data to be retrieved to user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b0c247d5a36b589388e47c8d5de82e9525d253" translate="yes" xml:space="preserve">
          <source>Prepares qualified for this RDBMS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e108060670444ee2911941ed22678b30d37150a6" translate="yes" xml:space="preserve">
          <source>Prepares table for this RDBMS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057f601220f29513d9c38a9eea9706c3819d0539" translate="yes" xml:space="preserve">
          <source>Preparing Database Settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afae29df7f41c85947c2af5171cc03f5a6dd100" translate="yes" xml:space="preserve">
          <source>Preparing Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831a18bbdaa4974a4c5947eb7f43fa6369ca1764" translate="yes" xml:space="preserve">
          <source>Preparing actions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b2f64bb61172f9615a7317e25001758e0dcc99" translate="yes" xml:space="preserve">
          <source>Prepends a text to current document title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94a1c13f93bb4e104122d3a08316ab8b79bcd69" translate="yes" xml:space="preserve">
          <source>Prerequisite packages are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="c8e3bfe1100e7a83f0802e174dff4ae58654d509" translate="yes" xml:space="preserve">
          <source>PresenceOf</source>
          <target state="translated">PresenceOf</target>
        </trans-unit>
        <trans-unit id="44ae89147fb4410fa4fe84a6413acc3db433efec" translate="yes" xml:space="preserve">
          <source>Previous Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a96ec019494d5b8b041c1d2468061ae66e35d5" translate="yes" xml:space="preserve">
          <source>Primary</source>
          <target state="translated">Primary</target>
        </trans-unit>
        <trans-unit id="274de3c3ad1b31f29382d6eb8056da0f5e94374e" translate="yes" xml:space="preserve">
          <source>Printing Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90593987240ec3f912c6dff6b77957290cd399aa" translate="yes" xml:space="preserve">
          <source>Printing numbers formatted based on some locale:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0290512e097a642b68df1ba8b86af7042f7be1" translate="yes" xml:space="preserve">
          <source>Printing whether the product is active or not uses a helper implemented in the model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a1f42962d500fb0f7532c4e7ea420b7cf626af" translate="yes" xml:space="preserve">
          <source>Prints out HTTP response to the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0464643e1b6f1d8993bf765da5b80c5cad9da076" translate="yes" xml:space="preserve">
          <source>Prints the HTML for CSS resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ed3c2da68cf55df82fe63f95716b3711f7c7e8" translate="yes" xml:space="preserve">
          <source>Prints the HTML for JS resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ecd0283b99853148f984a817e6555210e6bd49" translate="yes" xml:space="preserve">
          <source>Prints the HTML for inline CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a790aa4a02892041c79814f574b0a60e2e1635" translate="yes" xml:space="preserve">
          <source>Prints the HTML for inline JS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9445849ebd67f455c45d8df277e5da3fcd0176a" translate="yes" xml:space="preserve">
          <source>Prints the messages accumulated in the flasher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6267e654b1cb0e111adbbb8e6d72c5fc719aaef" translate="yes" xml:space="preserve">
          <source>Prints the messages in the session flasher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e249dfaf444bdb0505060e748aeba1ea6edbc3" translate="yes" xml:space="preserve">
          <source>Private/Public areas with Annotations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f556f935a7f275f422f40ca8d6915d9b954335ed" translate="yes" xml:space="preserve">
          <source>Process a request header and return an array of values with their qualities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baff9e8ab010f0c9554012e27199cd6a279a1d2d" translate="yes" xml:space="preserve">
          <source>Process a request header and return the one with best quality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a2403f3dc81b80fa900e2ee1d6595cfc181bad" translate="yes" xml:space="preserve">
          <source>Process a video, send e-mails, compress a file or an image, etc., are slow tasks that must be processed in background jobs. There are a variety of tools that provide queuing or messaging systems that work well with PHP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a13bdccd6b5f6577a6d10883ecdb6aef1a69b024" translate="yes" xml:space="preserve">
          <source>Processes the JOINs in the query returning an internal representation for the database dialect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc4d374b5c0e0ee133f09f69fe017ffac16e41c" translate="yes" xml:space="preserve">
          <source>Processing action parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e252cfef502e85c4610b9c959cd6aa1a911eb9" translate="yes" xml:space="preserve">
          <source>Produce the routing parameters from the rewrite information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed82234c1a8c346b95acdbb8ac3e0e813e6183e9" translate="yes" xml:space="preserve">
          <source>Produced when a record is attempted to be created but it already exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f027c74a72c420a03472f3e213c5a58f192a41" translate="yes" xml:space="preserve">
          <source>Produced when a record is attempted to be updated but it doesn&amp;rsquo;t exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8ae62f8ce7f32d42cfab180c39b06b35ba7111" translate="yes" xml:space="preserve">
          <source>Produces a recursive representation of an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0928dcb8de850fad28bc68eb7233fca2a5909c2b" translate="yes" xml:space="preserve">
          <source>Produces an string representation of a variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb880ceea98c894b2abb0c888ab3a167e6ed4f18" translate="yes" xml:space="preserve">
          <source>Produces this HTML:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252e30dd9d680838940a9c6efa83b785a917c52d" translate="yes" xml:space="preserve">
          <source>Producing URLs from Volt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a06774f4039d871f10d155bbdb85e76a952e9a" translate="yes" xml:space="preserve">
          <source>Producing URLs without mod_rewrite</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3867c8711928e7c30e3a74fe525d8e6e5a29d805" translate="yes" xml:space="preserve">
          <source>Profile on the Client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4573d2e73cc48dbaaca3b93f7f99963e3592b1ae" translate="yes" xml:space="preserve">
          <source>Profile on the Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7469592aed4919b7f16d35abc89f21e64321d2a9" translate="yes" xml:space="preserve">
          <source>Profile with Chrome/Firefox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d1d1b2a09e7efc1236d68c911b5690df185341" translate="yes" xml:space="preserve">
          <source>Profile with Speed Tracer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1a4ee27eaa6c821e9c02f480850600a07bf491" translate="yes" xml:space="preserve">
          <source>Profiling SQL Statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68893247dacbfafb8d40f292ad36f72b9578eaf0" translate="yes" xml:space="preserve">
          <source>Profiling some queries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6295c26ded46e06afa8441c3b5bde140d242d22a" translate="yes" xml:space="preserve">
          <source>Profiling with XDebug</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcaee956929ef5ba5d497310ebb8ab4e89d2392e" translate="yes" xml:space="preserve">
          <source>Profiling with Xhprof</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8f79c6b8420f4365d0c75a3024bbf9e45fe172" translate="yes" xml:space="preserve">
          <source>Project Structure</source>
          <target state="translated">Estructura del proyecto</target>
        </trans-unit>
        <trans-unit id="94096351adb4aa2b0671a6386914e4daca4b05e1" translate="yes" xml:space="preserve">
          <source>Properties Injection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5274082858cc6b9f3c46e08ff0919c8cd3b6eaed" translate="yes" xml:space="preserve">
          <source>Provide OO wrappers to manage a HTTP cookie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beee6ac8ea84a516ba70cb7fa5c459570a9f18df" translate="yes" xml:space="preserve">
          <source>Provides OO wrappers to the $_FILES superglobal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a316c1e700e030f060b503a1ccff3cba766bb5" translate="yes" xml:space="preserve">
          <source>Provides debug capabilities to Phalcon applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebdd3d099027d0f14e52131763f433b8bd97da8" translate="yes" xml:space="preserve">
          <source>Provides encryption facilities to phalcon applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f0dcc9d18aadbb864a87b6a98e7dc05e6467bf" translate="yes" xml:space="preserve">
          <source>Provides secure random number generator which is suitable for generating session key in HTTP cookies, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2364cc46990b947c42f5688edbeff9654834236e" translate="yes" xml:space="preserve">
          <source>Provides utilities to work with texts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18844843b5dc450f491ccbaa1dadbf0e219bacf9" translate="yes" xml:space="preserve">
          <source>Providing an ACL list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7abd3d1713eeea295cde0c3444886b3a46a27f5" translate="yes" xml:space="preserve">
          <source>Public properties provide less complexity in development. However getters/setters can heavily increase the testability, extensibility and maintainability of applications. Developers can decide which strategy is more appropriate for the application they are creating. The ORM is compatible with both schemes of defining properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cca8674587cbb88adbebdceff17e47c9680c8e4" translate="yes" xml:space="preserve">
          <source>Public properties vs. Setters/Getters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="translated">Purpose</target>
        </trans-unit>
        <trans-unit id="8c2703348ca796a89876fba5d7a3afbab4300b6e" translate="yes" xml:space="preserve">
          <source>Pushes a logger to the logger tail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd768e4fe7bd6bb51e495079370749b0bfeabc8" translate="yes" xml:space="preserve">
          <source>Put</source>
          <target state="translated">Put</target>
        </trans-unit>
        <trans-unit id="321f40126fa29918c54d1dd3d70da317dd4680a8" translate="yes" xml:space="preserve">
          <source>Puts a job on the queue using specified tube.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430e943fcf4d5123d519c25edd5d92b8b745a7d2" translate="yes" xml:space="preserve">
          <source>Putting Jobs into the Queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b65fdb5b10e3d0a41078a8c209be31f8623ae7" translate="yes" xml:space="preserve">
          <source>Putting everything together</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6767b965c6d4b9bbaf575073af3028c95f5d31dc" translate="yes" xml:space="preserve">
          <source>Queries the table meta-data in order to introspect the model&amp;rsquo;s metadata</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdb508d8bc6ed57737ebd1337f449d9b5f8bedd" translate="yes" xml:space="preserve">
          <source>Query all the relationships defined on a model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d065b200b6b15671cfc9c95b524c158eae2332f9" translate="yes" xml:space="preserve">
          <source>Query for a set of records that match the specified conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3707357e2f31227eb6d6011df81626a5de83433a" translate="yes" xml:space="preserve">
          <source>Query the existing cached keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a955cda56481ecf85862615f94587481048c4c" translate="yes" xml:space="preserve">
          <source>Query the first record that matches the specified conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ae18d8189506736b279bac11141ebbc6c2ccbc" translate="yes" xml:space="preserve">
          <source>Query the first relationship defined between two models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c059f07223df3a618300ea4d881b6c02a15e87d5" translate="yes" xml:space="preserve">
          <source>Query the records on which the UPDATE/DELETE operation well be done</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52049f330dbe77fcfeae822c325bd8e08f56e84" translate="yes" xml:space="preserve">
          <source>Querying an ACL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ba3fa4f2c935be094b76b77a0f6970c1fa52af" translate="yes" xml:space="preserve">
          <source>Querying the cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="ceb9881f5e61c6f3e32bc5592435473583c0c746" translate="yes" xml:space="preserve">
          <source>Queueing</source>
          <target state="translated">Queueing</target>
        </trans-unit>
        <trans-unit id="672590e692ed132d32003967824c5736ef2bb4e6" translate="yes" xml:space="preserve">
          <source>RANDOM_ALNUM</source>
          <target state="translated">RANDOM_ALNUM</target>
        </trans-unit>
        <trans-unit id="a17d84a26cfbb26af9640e965bc59abe5e2dd1d6" translate="yes" xml:space="preserve">
          <source>RANDOM_ALPHA</source>
          <target state="translated">RANDOM_ALPHA</target>
        </trans-unit>
        <trans-unit id="02ba7ec01e170f71b35126e2ee01b5f58681c199" translate="yes" xml:space="preserve">
          <source>RANDOM_HEXDEC</source>
          <target state="translated">RANDOM_HEXDEC</target>
        </trans-unit>
        <trans-unit id="60049d1005dfe82aa4fc1f5dd27eac2447f5e689" translate="yes" xml:space="preserve">
          <source>RANDOM_NOZERO</source>
          <target state="translated">RANDOM_NOZERO</target>
        </trans-unit>
        <trans-unit id="343832981359f623c199f20cb94c0e5fcf4ea37f" translate="yes" xml:space="preserve">
          <source>RANDOM_NUMERIC</source>
          <target state="translated">RANDOM_NUMERIC</target>
        </trans-unit>
        <trans-unit id="1c6455c7a3c76fef8692869130ce424f9332c0bd" translate="yes" xml:space="preserve">
          <source>RPM distributions (i.e. CentOS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa974d65fd59c2b59d18cacb80da6ba8cc75b411" translate="yes" xml:space="preserve">
          <source>RabbitMQ</source>
          <target state="translated">RabbitMQ</target>
        </trans-unit>
        <trans-unit id="58d888c08aa561f370e38cee976121532a883d71" translate="yes" xml:space="preserve">
          <source>Random</source>
          <target state="translated">Random</target>
        </trans-unit>
        <trans-unit id="dd7eff58ad53ed4fc85a9f88feb7e18baeccf101" translate="yes" xml:space="preserve">
          <source>Random::bytes</source>
          <target state="translated">Random::bytes</target>
        </trans-unit>
        <trans-unit id="b140e5d4c51433b6eb39d9a151a3c1fffbc0a38c" translate="yes" xml:space="preserve">
          <source>Raw value without quoting or formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad074d8e6ad4dfbe24b2b3ba3f0bfa7ae5fee8b3" translate="yes" xml:space="preserve">
          <source>Read input data from standard PHP output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb1d21b4097b89da3d11a727d4e11218b941432" translate="yes" xml:space="preserve">
          <source>Read the model&amp;rsquo;s column map, this can&amp;rsquo;t be inferred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40431612da1ae81b3c1ae169c905d858505319c" translate="yes" xml:space="preserve">
          <source>Reading Annotations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa7f6123b6966466bd243210ece348cde41ff53" translate="yes" xml:space="preserve">
          <source>Reading Configurations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6dfe544962aa76a39ae66869d46bf3646a55a2f" translate="yes" xml:space="preserve">
          <source>Reading INI Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598e1bb138c95d5362d7c8dd6962fc1e3d6d2206" translate="yes" xml:space="preserve">
          <source>Reads &amp;ldquo;belongs to&amp;rdquo; relations and check the virtual foreign keys when inserting or updating records to verify that inserted/updated values are present in the related entity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc0666dd6fc7f7d8970f16308db693fcd5a21ef" translate="yes" xml:space="preserve">
          <source>Reads JSON files and converts them to Phalcon\Config objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdb887db9077aa93a3f672101d809b87727f772" translate="yes" xml:space="preserve">
          <source>Reads YAML files and converts them to Phalcon\Config objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad623a89c7cddda4a8b80c13066b8fa621dc7ea" translate="yes" xml:space="preserve">
          <source>Reads a PHP constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8649d516b661c61606715b47474df19b7bea05e" translate="yes" xml:space="preserve">
          <source>Reads a packet from the socket. Prior to reading from the socket will check for availability of the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8dccca9477bec87653cda4c4318c449e7926b7e" translate="yes" xml:space="preserve">
          <source>Reads an attribute value by its name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a520f63fc58805ba7d6bcbd044205515c73174a" translate="yes" xml:space="preserve">
          <source>Reads annotations from the class dockblocks, its methods and/or properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54054055914e88efb188d257fbfa8e820da02651" translate="yes" xml:space="preserve">
          <source>Reads both &amp;ldquo;hasMany&amp;rdquo; and &amp;ldquo;hasOne&amp;rdquo; relations and checks the virtual foreign keys (cascade) when deleting records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab16ec45ddc9ae6104565f51ec713a2ecb194f1" translate="yes" xml:space="preserve">
          <source>Reads both &amp;ldquo;hasMany&amp;rdquo; and &amp;ldquo;hasOne&amp;rdquo; relations and checks the virtual foreign keys (restrict) when deleting records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db4f7e66a2e7bc6d0add53047620a9f2a12b0d8f" translate="yes" xml:space="preserve">
          <source>Reads column-map information for certain model using a MODEL_* constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f5cf64aa3a86602174d52677599a19bdd9a032" translate="yes" xml:space="preserve">
          <source>Reads ini files and converts them to Phalcon\Config objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f6ded117862612a1bb8a81d27f5b17b7cddfb7" translate="yes" xml:space="preserve">
          <source>Reads meta-data for certain model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac066f5fd33cfc80cf3eb00c34b7e463429f4ac2" translate="yes" xml:space="preserve">
          <source>Reads meta-data from $_SESSION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19f35f670849a56f48dba61e2be6e40ab850bc0" translate="yes" xml:space="preserve">
          <source>Reads meta-data from APC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7951a8e95ae4ead1a35f6faae6810e8544de52" translate="yes" xml:space="preserve">
          <source>Reads meta-data from files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf47f4ff10046effca8a4e0ac0d3175101dd0035" translate="yes" xml:space="preserve">
          <source>Reads metadata from Memcache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ed713d8326fe73e109cdb449c0b1d76f5d70c2" translate="yes" xml:space="preserve">
          <source>Reads metadata from Redis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f84db65eeac8bcc17d6692fa576171bf0050273" translate="yes" xml:space="preserve">
          <source>Reads metadata from XCache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c204f5703ce6ad57539a18bdd2decece2a3fb2" translate="yes" xml:space="preserve">
          <source>Reads parsed annotations from APC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210cba9b5e0b1dac035cffd6711a78f77cad5aae" translate="yes" xml:space="preserve">
          <source>Reads parsed annotations from XCache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de0ad85c0d5c0a00acbd72e70c7da2811faf078" translate="yes" xml:space="preserve">
          <source>Reads parsed annotations from files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28fe34835f5c6bd55ea46f965369baba325e557" translate="yes" xml:space="preserve">
          <source>Reads parsed annotations from memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd9136b166b9b95659226a0eaae1cb2d740ab54" translate="yes" xml:space="preserve">
          <source>Reads php files and converts them to Phalcon\Config objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2862a686afd456dcadf93481d6e6d31b3cc5a52" translate="yes" xml:space="preserve">
          <source>Reads the complete meta-data for certain model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888f3f3c9f01d334583002ff6a66cfdecb93843f" translate="yes" xml:space="preserve">
          <source>Reads the cookie-related info from the SESSION to restore the cookie as it was set This method is automatically called internally so normally you don&amp;rsquo;t need to call it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be783a3b1e18148d4332fa58fef16309d8ba0aa" translate="yes" xml:space="preserve">
          <source>Reads the latest status from the Beanstalkd server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e952fadc65afadce9c75c1cb5264004ee627ce2" translate="yes" xml:space="preserve">
          <source>Reads the meta-data from temporal memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aaa59b7d6cc44ce749c1ca8c1149e0bc9886f17" translate="yes" xml:space="preserve">
          <source>Reads the ordered/reversed column map for certain model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8beada42769da2b615f1ce730722e7c0b0cd0d63" translate="yes" xml:space="preserve">
          <source>Reasons to use this component instead of raw-sessions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791f3ce3fa39a3f9bf343cf63f49a80884d26ba1" translate="yes" xml:space="preserve">
          <source>Receives events generated in the models and dispatches them to an events-manager if available Notify the behaviors that are listening in the model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27916c1d55ea089f54f9815dc7f5af81b3e12b7" translate="yes" xml:space="preserve">
          <source>Receiving data from the form and storing them in the table is the next step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4abb6e9029afa7b4b3e79a7a98f25a93b9c6b38" translate="yes" xml:space="preserve">
          <source>Reconfigure the route adding a new pattern and a set of paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7089dfd6f8c1367ea2b575ab632bfc681b20166" translate="yes" xml:space="preserve">
          <source>Record Snapshots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9714eefeb5d0efb66572cd02a3f4a046996ce146" translate="yes" xml:space="preserve">
          <source>Recursive Validation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844dd37c99208c294e194a7c6243290dc8e3b893" translate="yes" xml:space="preserve">
          <source>Recursively counts file in an array of files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d242349064701fd8ee6e71a637ea3396402506d5" translate="yes" xml:space="preserve">
          <source>Redirect by HTTP to another action or URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65c06f16dcde17ffc654209945f906a67d2c55d" translate="yes" xml:space="preserve">
          <source>Redirections could be performed to forward the execution flow to another route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24071b57a13027c01339027dcccb98218f052a8f" translate="yes" xml:space="preserve">
          <source>Redis</source>
          <target state="translated">Redis</target>
        </trans-unit>
        <trans-unit id="098ca3c92de4349fc295068bc71510f81a28dbb6" translate="yes" xml:space="preserve">
          <source>Redis Backend Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd17da473229fafcd3972542d10ef10269a81ae" translate="yes" xml:space="preserve">
          <source>Redis host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24af3e5ffa014dd3cecbef35668dd3093dee273f" translate="yes" xml:space="preserve">
          <source>Redis port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca248bfefcf3c28f3552ac32fcc024fb9e001db2" translate="yes" xml:space="preserve">
          <source>Reduces multiple slashes in a string to single slashes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78780fed0e4ebd2d4053fb894153582c75189a33" translate="yes" xml:space="preserve">
          <source>Refer the real column names will result in an exception by the ORM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91250482df95be1801889f3393f15949149c6c0e" translate="yes" xml:space="preserve">
          <source>Referenced Columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420d220c3b9ce5f0f34457eeea3c7b9f382f3181" translate="yes" xml:space="preserve">
          <source>Referenced Table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870a04c371f6cae123de0ccee21f05aae333132a" translate="yes" xml:space="preserve">
          <source>References to attributes in relationships/validators must use the new names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c95cdb279b537870f009b18a75f44a90893b77" translate="yes" xml:space="preserve">
          <source>Reflection and Introspection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1146c79ab5c4eeaffba16d71de3c39448502c2b5" translate="yes" xml:space="preserve">
          <source>Refreshes the model attributes re-querying the record from the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad657d7492b482e78524fd1f9470c2fd36b9afd" translate="yes" xml:space="preserve">
          <source>Regardless of the syntax we used to create them, all queries in the ORM are handled internally using PHQL. This language gives you much more freedom to create all kinds of queries. Of course these queries can be cached:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa84245be8917d5cf80b0bb7206a4688535fe034" translate="yes" xml:space="preserve">
          <source>Register a new filter in the compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4967c5475f8b967f11ebd996d7105f72b6c78a" translate="yes" xml:space="preserve">
          <source>Register a new function in the compiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1ac9787735869a39c02966ca11b3ba614200ba" translate="yes" xml:space="preserve">
          <source>Register an array of modules present in the application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204499cddc10e1b3b45fd8bf4294746566cbc81b" translate="yes" xml:space="preserve">
          <source>Register classes and their locations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be71cb8f5aed1589e634949eb7e8612c1a863e5" translate="yes" xml:space="preserve">
          <source>Register directories in which &amp;ldquo;not found&amp;rdquo; classes could be found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f45b321577ff479e7f4d6896324f93817027348" translate="yes" xml:space="preserve">
          <source>Register namespaces and their related directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6c6f9e4fd447667669f9d2a9805099cdb753fb" translate="yes" xml:space="preserve">
          <source>Register templating engines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c95feb0f4f9212c0f5693e63a24521ef389c42b" translate="yes" xml:space="preserve">
          <source>Register the autoload method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e2e995f9c937f1198336027f42384d5a7d97d0" translate="yes" xml:space="preserve">
          <source>Register the function with an anonymous function. This case we use &lt;code&gt;$resolvedArgs&lt;/code&gt; to pass the arguments exactly as were passed in the arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176d07d184b5906fd234b690c5f7439d14e66554" translate="yes" xml:space="preserve">
          <source>Register the user registered filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c70417b7c6120a1be9b9878f16c9709a2031404" translate="yes" xml:space="preserve">
          <source>Register the user registered functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d736a4601b57c45a0989ca267daa09a35e9e05" translate="yes" xml:space="preserve">
          <source>Registering Classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1becc294f6d00f4d88f06148d2a46e46da8a9753" translate="yes" xml:space="preserve">
          <source>Registering Directories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1317b7a0fb00f1410af6a908501268bad8fc851" translate="yes" xml:space="preserve">
          <source>Registering Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6700178159f48207e4cec8e59317819c8338504" translate="yes" xml:space="preserve">
          <source>Registering Namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5dbc4cc30731169c1452fcf65af085b32c8b4b" translate="yes" xml:space="preserve">
          <source>Registering Router instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c777983916cd3a6af7d5a700eae3a128becbd122" translate="yes" xml:space="preserve">
          <source>Registering services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6b55fd84a14c3570baddaf846bbab94049ebb5" translate="yes" xml:space="preserve">
          <source>Registering services in the Container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3232749cd8bcd0b9badbc554472258a57d9df331" translate="yes" xml:space="preserve">
          <source>Registers a Volt&amp;rsquo;s extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4006f1c4dbd77b1f90e289b49516b2f4f4d2c3b5" translate="yes" xml:space="preserve">
          <source>Registers a form in the Forms Manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140a097591e3c417847e1445badbd4965a951039" translate="yes" xml:space="preserve">
          <source>Registers a service in the services container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b36f95539ca9e7c33640c1540c6bb74a016f72" translate="yes" xml:space="preserve">
          <source>Registers an &amp;ldquo;always shared&amp;rdquo; service in the services container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba74552fef5ea50ff19445bb6664bcb5c0f3214" translate="yes" xml:space="preserve">
          <source>Registers custom SQL functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a9c96e53e361817dabfb9514d4c1c395065485" translate="yes" xml:space="preserve">
          <source>Registers files that are &amp;ldquo;non-classes&amp;rdquo; hence need a &amp;ldquo;require&amp;rdquo;. This is very useful for including files that only have functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8690f107ab2c041284f22e9a41b5dbf1f28f01f5" translate="yes" xml:space="preserve">
          <source>Registers shorter aliases for namespaces in PHQL statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd6a805dae745c87a8b89f1be1a738e608a1668" translate="yes" xml:space="preserve">
          <source>Registry</source>
          <target state="translated">Registry</target>
        </trans-unit>
        <trans-unit id="49f02e986bbdd68b173f1bc2dc32cd062bf336b8" translate="yes" xml:space="preserve">
          <source>Registry constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd84cb0edfd0719f2bb78e982a4d4aa937a3a0e4" translate="yes" xml:space="preserve">
          <source>Registry::__get</source>
          <target state="translated">Registry::__get</target>
        </trans-unit>
        <trans-unit id="8a1fd3214fda5c04fbe8dab0135612c0fa1788d6" translate="yes" xml:space="preserve">
          <source>Registry::__set</source>
          <target state="translated">Registry::__set</target>
        </trans-unit>
        <trans-unit id="b018ffe26dcb6c579540c4155c29d5346709db45" translate="yes" xml:space="preserve">
          <source>Registry::count</source>
          <target state="translated">Registry::count</target>
        </trans-unit>
        <trans-unit id="2b4d35b72cf7fee8efda0aca7df453b55710db58" translate="yes" xml:space="preserve">
          <source>Registry::key</source>
          <target state="translated">Registry::key</target>
        </trans-unit>
        <trans-unit id="6303098eb3e39361aff12eb445e201d4ea4c24d1" translate="yes" xml:space="preserve">
          <source>Registry::next</source>
          <target state="translated">Registry::next</target>
        </trans-unit>
        <trans-unit id="8f9c9da185468f5a87ca9f0e669a567e4b65a170" translate="yes" xml:space="preserve">
          <source>Registry::valid</source>
          <target state="translated">Registry::valid</target>
        </trans-unit>
        <trans-unit id="469415c626b697430fa86fc9993ad32f63927e1f" translate="yes" xml:space="preserve">
          <source>Regular Expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af626a93129bc9783f71087e955a59d86c51ba69" translate="yes" xml:space="preserve">
          <source>Related Guides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111dfee3eab97818924764b01166042a486abae8" translate="yes" xml:space="preserve">
          <source>Related Sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8365153b3e1a588693f60ac496e15245e41f36" translate="yes" xml:space="preserve">
          <source>Relationships between Models</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0e59b7d927499f7343e06daff9cfeebb4254d5" translate="yes" xml:space="preserve">
          <source>Relationships that act as virtual foreign keys by default restrict the creation/update/deletion of records to maintain the integrity of data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7653b479a858f8db1cb09dedd7e1bc140080e75" translate="yes" xml:space="preserve">
          <source>Releases given savepoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5020e2553b966f567285097d7b73afab0e6036b8" translate="yes" xml:space="preserve">
          <source>Remember the filters we defined in the Products form? Data is filtered before being assigned to the object &lt;code&gt;$product&lt;/code&gt;. This filtering is optional; the ORM also escapes the input data and performs additional casting according to the column types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d315a14d360193d0eb2f5b5f5d1386cf211342" translate="yes" xml:space="preserve">
          <source>Remember to add a session adapter to your Dependency Injector, otherwise the token check won&amp;rsquo;t work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eb630a736f4577d6e5ed04e877859ffb302899" translate="yes" xml:space="preserve">
          <source>Remote resources are those such as common libraries like jQuery, Bootstrap, etc. that are provided by a CDN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e184be90d59823c3344d21e74dc17c7f53e8e5" translate="yes" xml:space="preserve">
          <source>Remove all characters except [a-zA-Z0-9]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e84bfa5b339dc9273295b4e935649d66c55281a" translate="yes" xml:space="preserve">
          <source>Remove all characters except digits, dot, plus and minus sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41444dbc720b7bcde0a77ad92ab48b69919eee8" translate="yes" xml:space="preserve">
          <source>Remove all characters except digits, plus and minus sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20f56b4ea740661a9b5cd6299ce943bea45dc95" translate="yes" xml:space="preserve">
          <source>Remove all characters except letters, digits and !#$%&amp;amp;*+-/=?^_`{|}~@.[].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b814d914c778a76400bfeec5abe8685cab89ec6" translate="yes" xml:space="preserve">
          <source>Remove all the transactions from the manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcd9ecc8d9ce9837128f6cdbc8a592fb4d4b46f" translate="yes" xml:space="preserve">
          <source>Remove legacy extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b627764ff86c7ccfcddbe48341afa345ba144df6" translate="yes" xml:space="preserve">
          <source>Removes a header to be sent at the end of the request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000612cd1ecce349f05e4f8764e1d8d3129145da" translate="yes" xml:space="preserve">
          <source>Removes a job from the server entirely</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b89482a2e545a295b0401ac637b57d194ed342" translate="yes" xml:space="preserve">
          <source>Removes a message from the list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429a94e4a530118a444923be158cf47d49288e99" translate="yes" xml:space="preserve">
          <source>Removes a property from the internal bag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d72d0d313a6628df60bc523e5044ec8a4c5f13" translate="yes" xml:space="preserve">
          <source>Removes a service from the internal services container using the array syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc7b697c122843717ee27809bcce5e1c7c9b49d" translate="yes" xml:space="preserve">
          <source>Removes a service from the services container using the array syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33134ace10645e6019efcf9da1384f7f850263d7" translate="yes" xml:space="preserve">
          <source>Removes a service in the services container It also removes any shared instance created for the service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c6dcdac1ace7b59bd0b9ed63da4055df49eda2" translate="yes" xml:space="preserve">
          <source>Removes a session variable from an application context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b9076c8c225a6234061eef0eeb843d2af003f6" translate="yes" xml:space="preserve">
          <source>Removes all events from the EventsManager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="894baeafe906b4a81b6a7540f0efa8f648a90668" translate="yes" xml:space="preserve">
          <source>Removes all the pre-defined routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0627880d61b549dc57c28a32b30e32113349b15" translate="yes" xml:space="preserve">
          <source>Removes an access from a resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73df9bcb23e37fa5aa65a46017262f5b12ea0727" translate="yes" xml:space="preserve">
          <source>Removes an element from the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4807b4ae08b06e2f599ae632037c229d2a46084c" translate="yes" xml:space="preserve">
          <source>Removes the value of the CSRF token and key from session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168141e45c8d0f65f69bb68cb76f0c6e9087110f" translate="yes" xml:space="preserve">
          <source>Removes transactions from the TransactionManager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e8599a1068534a3e79058e1c61e5c1f67d7d68" translate="yes" xml:space="preserve">
          <source>Removing/Destroying Sessions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9059b7965e5c77350f862f49d4e119e80688e401" translate="yes" xml:space="preserve">
          <source>Render the contents of the parent block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f053e9c4805cb3f6840446101ac4c97b80c7d13" translate="yes" xml:space="preserve">
          <source>Render the image and return the binary string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686c0409345589c9dc3c0656a560a4c2bf3f096a" translate="yes" xml:space="preserve">
          <source>Rendering &amp;ldquo;index.volt&amp;rdquo; produces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be90bc39e35dba9138b0fa5e2392ac5791b07f9" translate="yes" xml:space="preserve">
          <source>Rendering Forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991008ac57fabd1a6a47061d00480c5e17d5f047" translate="yes" xml:space="preserve">
          <source>Rendering Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1951ad9025072db4e50e92a288f14a5b8a4b1d98" translate="yes" xml:space="preserve">
          <source>Renders a partial inside another view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6639612be4f0ff57378a3da6ea4cec9b707544d5" translate="yes" xml:space="preserve">
          <source>Renders a partial view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791e82557e1ede95124131ccf483e9c525ab23b5" translate="yes" xml:space="preserve">
          <source>Renders a specific item in the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76f320b334217524bf08d25fe31ac045b6d6cfa" translate="yes" xml:space="preserve">
          <source>Renders a view</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f70b67aa335d76131a5c7d4db96d6e7e979ea8a" translate="yes" xml:space="preserve">
          <source>Renders a view using the template engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949c412aec29b9164e4fe28a14d2b5cb935e8e4a" translate="yes" xml:space="preserve">
          <source>Renders parameters keeping order in their HTML attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af698d2d8c4cae86a616a07a3831f6787a9a1ba" translate="yes" xml:space="preserve">
          <source>Renders the element widget</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae437138569d19198739fe4acb6eaba0b35d7f39" translate="yes" xml:space="preserve">
          <source>Renders the element widget returning html</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b712cf4191b61b44f6d5bfa57f2f281d567cc55" translate="yes" xml:space="preserve">
          <source>Replaces placeholders by the values passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d46678cf2da6ff931466ed7f309b9c3819a357" translate="yes" xml:space="preserve">
          <source>Replaces placeholders from pattern returning a valid PCRE regular expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dcae8a43441a7d64459b967b92d44ab3b9d2ba" translate="yes" xml:space="preserve">
          <source>Replaces the model&amp;rsquo;s name to its source name in a qualified-name expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61cc938ed840a274697821f55aa2344b78aa06b" translate="yes" xml:space="preserve">
          <source>Represents CSS resources</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
