<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="influxdata">
    <body>
      <group id="influxdata">
        <trans-unit id="71e3a428561b6cdfd687886ea10dd000fd97499e" translate="yes" xml:space="preserve">
          <source>The line protocol above uses an &lt;a href=&quot;https://www.ietf.org/rfc/rfc3339.txt&quot;&gt;RFC3339&lt;/a&gt; timestamp. Replace the timestamp with a UNIX timestamp to avoid the error and successfully write the point to InfluxDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae59835583f406c7981e336a05a20570847cecc" translate="yes" xml:space="preserve">
          <source>The line protocol in Write 1 separates the &lt;code&gt;hen&lt;/code&gt; measurement from the &lt;code&gt;location=2&lt;/code&gt; tag with a space instead of a comma. InfluxDB assumes that the &lt;code&gt;value=9&lt;/code&gt; field is the timestamp and returns an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21377b577176ffcec8c0d578d0903c8669affab4" translate="yes" xml:space="preserve">
          <source>The line protocol in Write 2 separates the &lt;code&gt;milk_prod=3&lt;/code&gt; field and the &lt;code&gt;happy=3&lt;/code&gt; field with a space instead of a comma. InfluxDB assumes that the &lt;code&gt;happy=3&lt;/code&gt; field is the timestamp and returns an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32b548c12847c48a665e22ea3575816f7754d78" translate="yes" xml:space="preserve">
          <source>The list below offers a brief discussion of each command. We provide detailed information on &lt;code&gt;insert&lt;/code&gt; at the end of this section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c35d84b0f0807970386ad2dd1dc795ebddb0a1" translate="yes" xml:space="preserve">
          <source>The list of client libraries for interacting with InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78eb16d3fd64366260281887775bbf57598ee97c" translate="yes" xml:space="preserve">
          <source>The list of recipients to be alerted. If empty defaults to the recipients from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ecb9e95ce772e335466ca355d23af8d625e991" translate="yes" xml:space="preserve">
          <source>The list of teams to be alerted. If empty defaults to the teams from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875ef35e4cffb85b71f58e9f818a52019b375a64" translate="yes" xml:space="preserve">
          <source>The local server&amp;rsquo;s nanosecond timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db17c06a8075c31a3b33ceed4a876cda73247bed" translate="yes" xml:space="preserve">
          <source>The location of the configuration file can be set via the &lt;code&gt;--config&lt;/code&gt; command line flag. Telegraf will also pick up all files matching the pattern &lt;code&gt;*.conf&lt;/code&gt; if the &lt;code&gt;-config-directory&lt;/code&gt; command line flag is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8776828e1179a6ee166ca8e2812e1471af7e1ea9" translate="yes" xml:space="preserve">
          <source>The location of your InfluxDB instance including &lt;code&gt;http://&lt;/code&gt;, the IP address, and port. Example: &lt;code&gt;http:///0.0.0.0:8086&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786b38677e43d0318cd04504b37d9581b0470eda" translate="yes" xml:space="preserve">
          <source>The location of your Kapacitor instance including &lt;code&gt;http://&lt;/code&gt;, the IP address, and port. Example: &lt;code&gt;http://0.0.0.0:9092&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7066f65d1d701cb3d3ef058f862024f7173f2125" translate="yes" xml:space="preserve">
          <source>The long measurement names (&lt;code&gt;blueberries.plot-1.north&lt;/code&gt;) with no tags are similar to Graphite metrics. Encoding information like &lt;code&gt;plot&lt;/code&gt; and &lt;code&gt;region&lt;/code&gt; in the measurement name will make the data much harder to query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb9981ab1d670b947973e5d18cdd79259d3d735" translate="yes" xml:space="preserve">
          <source>The main query surrounds the subquery and requires at least the &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt; clause&lt;/a&gt; and the &lt;a href=&quot;#the-basic-select-statement&quot;&gt;&lt;code&gt;FROM&lt;/code&gt; clause&lt;/a&gt;. The main query supports all clauses listed in this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a43868136c043dbf5e6b8e8408ae9a81def581d" translate="yes" xml:space="preserve">
          <source>The major component that affects your RAM needs is &lt;a href=&quot;../../concepts/glossary/index#series-cardinality&quot;&gt;series cardinality&lt;/a&gt;. A series cardinality around or above 10 million can cause OOM failures even with large amounts of RAM. If this is the case, you can usually address the problem by redesigning your &lt;a href=&quot;../../concepts/glossary/index#schema&quot;&gt;schema&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4159a3cf87ba68a9a3c1d155c9aecb8e03ecc29" translate="yes" xml:space="preserve">
          <source>The maximum duration of time that two incoming points can be apart and still be considered to be equal in time. The joined data point's time will be rounded to the nearest multiple of the tolerance duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6e91ffab2b8d42a0c87d70a199fa9b140be4c3" translate="yes" xml:space="preserve">
          <source>The maximum number of &lt;a href=&quot;../../concepts/glossary/index#point&quot;&gt;points&lt;/a&gt; that a &lt;code&gt;SELECT&lt;/code&gt; statement can process. The default setting (&lt;code&gt;0&lt;/code&gt;) allows the &lt;code&gt;SELECT&lt;/code&gt; statement to process an unlimited number of points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c153b93d18a03fcfbf79de83600cc58bcf22604" translate="yes" xml:space="preserve">
          <source>The maximum number of &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; allowed per database. The default setting is one million. Change the setting to &lt;code&gt;0&lt;/code&gt; to allow an unlimited number of series per database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b09d1f59bfefe36104b7f3931cb5963528bb0b3" translate="yes" xml:space="preserve">
          <source>The maximum number of &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; that a &lt;code&gt;SELECT&lt;/code&gt; statement can process. The default setting (&lt;code&gt;0&lt;/code&gt;) allows the &lt;code&gt;SELECT&lt;/code&gt; statement to process an unlimited number of series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a556ed2efbea6de9ebdcc0e09a62d637305a601" translate="yes" xml:space="preserve">
          <source>The maximum number of &lt;a href=&quot;../../concepts/glossary/index#tag-values&quot;&gt;tag values&lt;/a&gt; allowed per &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt;. The default setting is &lt;code&gt;100000&lt;/code&gt;. Change the setting to &lt;code&gt;0&lt;/code&gt; to allow an unlimited number of tag values per tag key. If a tag value causes the number of tag values of a tag key to exceed &lt;code&gt;max-values-per-tag&lt;/code&gt; InfluxDB will not write the point, and it returns a &lt;code&gt;partial write&lt;/code&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4cc7f75d0c8a69e929233c1e768653ba4b534e" translate="yes" xml:space="preserve">
          <source>The maximum number of &lt;code&gt;GROUP BY time()&lt;/code&gt; buckets that a query can process. The default setting (&lt;code&gt;0&lt;/code&gt;) allows a query to process an unlimited number of buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8601db8f555ac4e59b10fbec763e8b5c574b77" translate="yes" xml:space="preserve">
          <source>The maximum number of running queries allowed on your instance. The default setting (&lt;code&gt;0&lt;/code&gt;) allows for an unlimited number of queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a4105940b0979ad8b53b3c0f64a4bc15845434" translate="yes" xml:space="preserve">
          <source>The maximum period in the future for which InfluxDB precreates shards. The &lt;code&gt;30m&lt;/code&gt; default should work for most systems. Increasing this setting too far in the future can cause inefficiencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828bba0d61c038924851c652395c35145762bd7c" translate="yes" xml:space="preserve">
          <source>The maximum row limit only applies to non-chunked queries. Chunked queries can return an unlimited number of points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78c188754dcbd70d225bf8d86f42f9432555c71" translate="yes" xml:space="preserve">
          <source>The maximum scale factor to set. If 0 then there is no upper limit. Default: 0, a.k.a no limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0baec2f82c7da42d648daa98c9cb17353b7cfd17" translate="yes" xml:space="preserve">
          <source>The maximum time a query can run after which InfluxDB logs the query with a &lt;code&gt;Detected slow query&lt;/code&gt; message. The default setting (&lt;code&gt;&quot;0&quot;&lt;/code&gt;) will never tell InfluxDB to log the query. This setting is a &lt;a href=&quot;#configuration-options&quot;&gt;duration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b93a1becb0237060b5927e08edd9c045f1e1bdf" translate="yes" xml:space="preserve">
          <source>The maximum time a query can run after which InfluxDB logs the query with a &lt;code&gt;Detected slow query&lt;/code&gt; message. The default setting (&lt;code&gt;&quot;0&quot;&lt;/code&gt;) will never tell InfluxDB to log the query. This setting is a &lt;a href=&quot;../../query_language/spec/index#durations&quot;&gt;duration literal&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bee79e75df0fd7fd3b02ae4e74ba3bc53298082" translate="yes" xml:space="preserve">
          <source>The maximum time for which a query can run on your instance before InfluxDB kills the query. The default setting (&lt;code&gt;&quot;0&quot;&lt;/code&gt;) allows queries to run with no time restrictions. This setting is a &lt;a href=&quot;../../query_language/spec/index#durations&quot;&gt;duration literal&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a03fd1f00578260646cafbe7242b9a25ebff9c" translate="yes" xml:space="preserve">
          <source>The maximum time for which a query can run on your instance before InfluxDB kills the query. The default setting (&lt;code&gt;0&lt;/code&gt;) allows queries to run with no time restrictions. This setting is a &lt;a href=&quot;#configuration-options&quot;&gt;duration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80997e9ebd04768382b1ff08f549b20ccf61875d" translate="yes" xml:space="preserve">
          <source>The measurement &lt;code&gt;just_my_type&lt;/code&gt; has a single field called &lt;code&gt;my_field&lt;/code&gt;. &lt;code&gt;my_field&lt;/code&gt; has four field values across four different shards, and each value has a different data type (float, integer, string, and boolean).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44771719c37e68217c061df3f85adac4fed31728" translate="yes" xml:space="preserve">
          <source>The measurement &lt;code&gt;just_my_type&lt;/code&gt; has a single field called &lt;code&gt;my_field&lt;/code&gt;. &lt;code&gt;my_field&lt;/code&gt; has four field values across four different shards, and each value has a different data type (float, integer, string, and boolean). &lt;code&gt;SHOW FIELD KEYS&lt;/code&gt; returns all four data types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50e7eb86e6246f74da42998b4a4012407f1b7c8" translate="yes" xml:space="preserve">
          <source>The measurement name If empty any measurement will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614fa7625fce5be1dfac3d371b2a6c44532295c4" translate="yes" xml:space="preserve">
          <source>The measurement name. InfluxDB accepts one measurement per point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d0cef75ecae959bca81a4edb6987a57b0343b9" translate="yes" xml:space="preserve">
          <source>The metric buffer caches individual metrics when writes are failing for an output plugin. Telegraf will attempt to flush the buffer upon a successful write to the output. The oldest metrics are dropped first when this buffer fills.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d00123349478c588a4c16712358d4a447a57a20" translate="yes" xml:space="preserve">
          <source>The minimal Telegraf configuration required to enable a UDP output is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b4c4a81e9ec05ff23ee2e7e71cc24db1c65239" translate="yes" xml:space="preserve">
          <source>The minimum allowable &lt;code&gt;SHARD GROUP DURATION&lt;/code&gt; is &lt;code&gt;1h&lt;/code&gt;. If the &lt;code&gt;CREATE RETENTION POLICY&lt;/code&gt; query attempts to set the &lt;code&gt;SHARD GROUP DURATION&lt;/code&gt; to less than &lt;code&gt;1h&lt;/code&gt; and greater than &lt;code&gt;0s&lt;/code&gt;, InfluxDB automatically sets the &lt;code&gt;SHARD GROUP DURATION&lt;/code&gt; to &lt;code&gt;1h&lt;/code&gt;. If the &lt;code&gt;CREATE RETENTION POLICY&lt;/code&gt; query attempts to set the &lt;code&gt;SHARD GROUP DURATION&lt;/code&gt; to &lt;code&gt;0s&lt;/code&gt;, InfluxDB automatically sets the &lt;code&gt;SHARD GROUP DURATION&lt;/code&gt; according to the default settings listed above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab3f90f09d8787d6fc59c092afe31eec8df8e5c" translate="yes" xml:space="preserve">
          <source>The minimum allowable duration is one hour (&lt;code&gt;1h&lt;/code&gt;) and the maximum is infinite (&lt;code&gt;INF&lt;/code&gt;). See the InfluxDB documentation for the list of &lt;a href=&quot;../../../../influxdb/v1.3/query_language/spec/index#duration-units&quot;&gt;acceptable duration units&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587ffeb6511d6dc172d05597e6765b045107136d" translate="yes" xml:space="preserve">
          <source>The minimum scale factor to set. Default: 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6201e9a620c01a1dc347df48626db4da368812" translate="yes" xml:space="preserve">
          <source>The minimum timestamp is &lt;code&gt;-9223372036854775806&lt;/code&gt; or &lt;code&gt;1677-09-21T00:12:43.145224194Z&lt;/code&gt;. The maximum timestamp is &lt;code&gt;9223372036854775806&lt;/code&gt; or &lt;code&gt;2262-04-11T23:47:16.854775806Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355a6d543174c0b65885402bcca9647fe2c82efb" translate="yes" xml:space="preserve">
          <source>The minimum valid timestamp is &lt;code&gt;-9223372036854775806&lt;/code&gt; or &lt;code&gt;1677-09-21T00:12:43.145224194Z&lt;/code&gt;. The maximum valid timestamp is &lt;code&gt;9223372036854775806&lt;/code&gt; or &lt;code&gt;2262-04-11T23:47:16.854775806Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4bd7d12f1f0bc86f27b89a9ef7041b41999895" translate="yes" xml:space="preserve">
          <source>The most basic template is to specify a single transformation to apply to all incoming metrics. So the following template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55144ce390e66035fc082712cdb6a0505c86a71b" translate="yes" xml:space="preserve">
          <source>The naive implementation would be to simply delete each record once it passes its expiration time. However, that means that once the first points written reach their expiration date, the system is processing just as many deletes as writes, which is something most storage engines aren&amp;rsquo;t designed for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a253f95cc68627f0f2d529c8f2ec2909ab50a1fd" translate="yes" xml:space="preserve">
          <source>The name of a configured InfluxDB cluster. If empty the default cluster will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6ed6fbfc02045050169aa08342b9c7fcbed991" translate="yes" xml:space="preserve">
          <source>The name of one of the sounds supported by the device clients to override the user&amp;rsquo;s default sound choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c2a33c2fcde56bfeb4c1e9c65fd69f53d8b333" translate="yes" xml:space="preserve">
          <source>The name of one of the sounds supported by the device clients to override the user's default sound choice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c6de1e0a308f6c97d698512fd3d2e07174276a" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; that you want to write your data to. The measurement is required in Line Protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705d89135d0513ef0a7d15cf693169b7691e589d" translate="yes" xml:space="preserve">
          <source>The name of the InfluxDB instance to connect to. If empty the configured default will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908378482eb8e8df17b2a94cdbf50b69501ae580" translate="yes" xml:space="preserve">
          <source>The name of the database that you want to write to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94b2e708244e577f233028b989f31a644aa48fc" translate="yes" xml:space="preserve">
          <source>The name of the database that you want to write to. If the database does not exist, it will be created automatically when the input is initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8990c800c9f1227128bd45b7d5b84991ed10509" translate="yes" xml:space="preserve">
          <source>The name of the database that you want to write to. This defaults to &lt;code&gt;collectd&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37576df4686b177205cb7f6611ca417d2ed725a4" translate="yes" xml:space="preserve">
          <source>The name of the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd33cc3240aeb67f6f5e2a8e924115d3efa9b8a2" translate="yes" xml:space="preserve">
          <source>The name of the field, defaults to the name of function used (i.e. .mean -&amp;gt; 'mean')</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b05afd3f1f0c74700e1c8db0d5e841b3084f0a" translate="yes" xml:space="preserve">
          <source>The name of the measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee2984920b6dd282c35cd33155cda6a42c97aae" translate="yes" xml:space="preserve">
          <source>The name of the retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4ad6a51033a02bee031c973810c1160274c328" translate="yes" xml:space="preserve">
          <source>The name of this new joined data stream. If empty the name of the left parent is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68a29c102f6f06cbd1b15bbf484e911c3508331" translate="yes" xml:space="preserve">
          <source>The names cannot have a dot '.' character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5cc46812d4ab4f3f2a3efa34dc26bf86d2db26" translate="yes" xml:space="preserve">
          <source>The negative 12-minute offset interval shifts back the preset boundary&amp;rsquo;s time range such that the boundary time ranges and the relevant &lt;code&gt;GROUP BY time()&lt;/code&gt; interval time ranges are always the same. With the offset, each interval performs the calculation on three points, and the timestamp returned matches both the start of the boundary time range and the start of the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903224f5da22ea731e7811fea4c21ee99ca8399a" translate="yes" xml:space="preserve">
          <source>The new InfluxDB storage engine looks very similar to a LSM Tree. It has a write ahead log and a collection of read-only data files which are similar in concept to SSTables in an LSM Tree. TSM files contain sorted, compressed series data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d6b0865f2d70aaa5304ec82f3e6394d236cfa5" translate="yes" xml:space="preserve">
          <source>The new InfluxDB storage engine: from LSM Tree to B+Tree and back again to create the Time Structured Merge Tree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f035de84516bcb905cd812be4045b882682b3065" translate="yes" xml:space="preserve">
          <source>The new TICKscript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13448f0dd8280e72792bfd4146925202a7c0997" translate="yes" xml:space="preserve">
          <source>The new name of the derivative field. Default is the name of the field used when calculating the derivative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957d261d06f8559fcae7e2fb547b5489a2ed8986" translate="yes" xml:space="preserve">
          <source>The new name of the resulting duration field. Default: 'state_count'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c97fc56c897f37814c10418f6c6559e4bf8a3a94" translate="yes" xml:space="preserve">
          <source>The new name of the resulting duration field. Default: 'state_duration'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59dad3b0eec2735fa6b29e9d59b14a1dc579661f" translate="yes" xml:space="preserve">
          <source>The new name of the stream. If empty the name of the left node (i.e. &lt;code&gt;leftNode.union(otherNode1, otherNode2)&lt;/code&gt;) is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198cec461bfcca4a5edf39596169128e8cbcce4d" translate="yes" xml:space="preserve">
          <source>The next query shortens the time range in the previous query. It now covers the time between &lt;code&gt;2015-09-18T16:36:00Z&lt;/code&gt; and &lt;code&gt;2015-09-18T16:54:00Z&lt;/code&gt;. Note that &lt;code&gt;fill(previous)&lt;/code&gt; doesn&amp;rsquo;t fill the result for &lt;code&gt;2015-09-18T16:36:00Z&lt;/code&gt; with the result from &lt;code&gt;2015-09-18T16:24:00Z&lt;/code&gt;; the result for &lt;code&gt;2015-09-18T16:24:00Z&lt;/code&gt; is outside the query&amp;rsquo;s shorter time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b88c0fe11a249e650e66420702d7b278fdf7000" translate="yes" xml:space="preserve">
          <source>The next query shortens the time range in the previous query. It now covers the time between &lt;code&gt;2016-11-11T21:36:00Z&lt;/code&gt; and &lt;code&gt;2016-11-11T22:06:00Z&lt;/code&gt;. Note that &lt;code&gt;fill()&lt;/code&gt; previous doesn&amp;rsquo;t fill the results for the &lt;code&gt;2016-11-11T21:36:00Z&lt;/code&gt; time interval and the &lt;code&gt;2016-11-11T21:48:00Z&lt;/code&gt; time interval; the result for &lt;code&gt;2016-11-11T21:24:00Z&lt;/code&gt; is outside the query&amp;rsquo;s shorter time range and InfluxDB cannot perform the linear interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc4f4c5fbf0b463a2044a4d2ce07919d85d247d" translate="yes" xml:space="preserve">
          <source>The next section references the data printed out below. The data are fictional, but represent a believable setup in InfluxDB. They show the number of butterflies and honeybees counted by two scientists (&lt;code&gt;langstroth&lt;/code&gt; and &lt;code&gt;perpetua&lt;/code&gt;) in two locations (location &lt;code&gt;1&lt;/code&gt; and location &lt;code&gt;2&lt;/code&gt;) over the time period from August 18, 2015 at midnight through August 18, 2015 at 6:12 AM. Assume that the data live in a database called &lt;code&gt;my_database&lt;/code&gt; and are subject to the &lt;code&gt;autogen&lt;/code&gt; retention policy (more on databases and retention policies to come).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e5860ac4ea8954cca0409c72c1647e71df3785" translate="yes" xml:space="preserve">
          <source>The next sections describe the Chronograf features that relate to the web admin interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb82dfd6978b7f4c526352b0bcbdbc66dfdd211" translate="yes" xml:space="preserve">
          <source>The next sections will get you up and running with Chronograf with as little configuration and code as possible. By the end of this document, you will have downloaded, installed, and configured all four packages of the TICK stack (&lt;a href=&quot;https://github.com/influxdata/telegraf&quot;&gt;Telegraf&lt;/a&gt;, &lt;a href=&quot;https://github.com/influxdata/influxdb&quot;&gt;InfluxDB&lt;/a&gt;, &lt;a href=&quot;https://github.com/influxdata/chronograf&quot;&gt;Chronograf&lt;/a&gt;, and &lt;a href=&quot;https://github.com/influxdata/kapacitor&quot;&gt;Kapacitor&lt;/a&gt;), and you will be all set to monitor your infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd487e8d6c61177af1e6766e2c968fb59e42979c" translate="yes" xml:space="preserve">
          <source>The next steps connect Chronograf to your InfluxDB instance. For the &lt;code&gt;Connection String&lt;/code&gt;, enter the hostname or IP of the machine that InfluxDB is running on, and be sure to include InfluxDB&amp;rsquo;s default port: &lt;code&gt;8086&lt;/code&gt;. Next, name the connection string; this can be anything you want. There&amp;rsquo;s no need to edit the last three inputs; &lt;a href=&quot;../../../../influxdb/v1.3/administration/config/index#auth-enabled-false&quot;&gt;authorization is disabled&lt;/a&gt; in InfluxDB&amp;rsquo;s default configuration so &lt;code&gt;Username&lt;/code&gt; and &lt;code&gt;Password&lt;/code&gt; can remain blank, and Telegraf&amp;rsquo;s &lt;a href=&quot;https://github.com/influxdata/telegraf/blob/master/etc/telegraf.conf#L89&quot;&gt;default database name&lt;/a&gt; is &lt;code&gt;telegraf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31937b18ca1ee19d8bd3ad04542078683afc5ea" translate="yes" xml:space="preserve">
          <source>The next time you un-TAR a new version of Chronograf, simply change the &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; portion of the command string and specify your existing &lt;code&gt;chronograf-v1.db&lt;/code&gt; datastore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a434c5e5e16091e1b4e8c6b23eb27272a322188e" translate="yes" xml:space="preserve">
          <source>The next two columns, called &lt;code&gt;butterflies&lt;/code&gt; and &lt;code&gt;honeybees&lt;/code&gt;, are fields. Fields are made up of field keys and field values. &lt;em&gt;Field keys&lt;/em&gt; (&lt;code&gt;butterflies&lt;/code&gt; and &lt;code&gt;honeybees&lt;/code&gt;) are strings and they store metadata; the field key &lt;code&gt;butterflies&lt;/code&gt; tells us that the field values &lt;code&gt;12&lt;/code&gt;-&lt;code&gt;7&lt;/code&gt; refer to butterflies and the field key &lt;code&gt;honeybees&lt;/code&gt; tells us that the field values &lt;code&gt;23&lt;/code&gt;-&lt;code&gt;22&lt;/code&gt; refer to, well, honeybees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd04facd113567908014131348c28852d1287227" translate="yes" xml:space="preserve">
          <source>The number of batches that may be pending in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c5528bbc9fe5c78fa70cd8cfcfe9a536399310" translate="yes" xml:space="preserve">
          <source>The number of in-flight writes buffered in the write channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c227c02cafd00ebf84aa95eaccf4f8f3e8d2095" translate="yes" xml:space="preserve">
          <source>The number of nodes that must confirm the write. If the requirement is not met the return value will be either &lt;code&gt;partial write&lt;/code&gt; if some points in the batch fail or &lt;code&gt;write failure&lt;/code&gt; if all points in the batch fail. For more information, see the Query String Parameters for Writes section in the &lt;a href=&quot;../../write_protocols/line_protocol_reference/index&quot;&gt;Line Protocol Syntax Reference &lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7630bb07e615239d6d98e4eb502001a8d73e3c39" translate="yes" xml:space="preserve">
          <source>The number of points written is also included in CQ log messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7697b958b73935c446a7255ec1d9969d24702a" translate="yes" xml:space="preserve">
          <source>The number of unique database, measurement, and tag set combinations in an InfluxDB instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf2faf818aec6c7680164bb3f03dceed531a41b" translate="yes" xml:space="preserve">
          <source>The number of writer goroutines processing the write channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd3584d58d4d6fea2ba7be8fda850ee2968f92a" translate="yes" xml:space="preserve">
          <source>The only result (&lt;code&gt;-0.0002722222222222218&lt;/code&gt;) is the one-second rate of change between the relevant subsequent field values in the raw data. InfluxDB calculates the difference between the field values and normalizes that value to the one-second rate of change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5065d7605bef9cc948e82c3b7a81e8a223d26b23" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;element name&lt;/code&gt; path element corresponds to a specific item from a list of entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0cf730062fe01840c73c3e9fd8e83bc4de7832" translate="yes" xml:space="preserve">
          <source>The optional configuration settings are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b490fa8a57197c556e3cca9da647ec9910928947" translate="yes" xml:space="preserve">
          <source>The optional flags for restoring a backup are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a59cd1ed4771fa23e03d0f04019133e71ce89a5" translate="yes" xml:space="preserve">
          <source>The options returned by the &lt;code&gt;info&lt;/code&gt; request can contain multiple arguments. Modify the &lt;code&gt;field&lt;/code&gt; option to accept three field names and change the &lt;code&gt;TTestHandler&lt;/code&gt; to maintain historical data and batches for each field instead of just the one. That way only one ttest.py process needs to be running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e85eebdcebf80d74bad6d532bd6522664bc7e3e" translate="yes" xml:space="preserve">
          <source>The organization of data into shards worked great for a while, until a large amount of data went into InfluxDB. LevelDB splits the data out over many small files. Having dozens or hundreds of these databases open in a single process ended up creating a big problem. Users that had six months or a year of data would run out of file handles. It&amp;rsquo;s not something we found with the majority of users, but anyone pushing the database to its limits would hit this problem and we had no fix for it. There were simply too many file handles open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dba062e7583a80c4783b1cacff9dff073a8ebca" translate="yes" xml:space="preserve">
          <source>The other snapshot controls are time based. The idle threshold, &lt;a href=&quot;../../administration/config/index#cache-snapshot-write-cold-duration-1h0m0s&quot;&gt;&lt;code&gt;cache-snapshot-write-cold-duration&lt;/code&gt;&lt;/a&gt;, forces the Cache to snapshot to TSM files if it hasn&amp;rsquo;t received a write within the specified interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d48da714e993497cfae2311414cdb8b21e8b0f4" translate="yes" xml:space="preserve">
          <source>The output from &lt;code&gt;nc&lt;/code&gt; will look like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e84d883fe7142747b25ffa8e23fb154bc83210f" translate="yes" xml:space="preserve">
          <source>The output from your &lt;code&gt;netcat&lt;/code&gt; listener will look like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c504f74d6705db2a29347f277fb42b42a63ec2" translate="yes" xml:space="preserve">
          <source>The output is the same as a query for data to &lt;a href=&quot;https://docs.influxdata.com/influxdb/latest/guides/querying_data/&quot;&gt;InfluxDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc7b8542586f68f8f042d7be0c79a668f210181" translate="yes" xml:space="preserve">
          <source>The output should look something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1886a20eb9d24fbb881c165be1754ffe25efba3b" translate="yes" xml:space="preserve">
          <source>The output shows that the &lt;code&gt;telegraf&lt;/code&gt; and &lt;code&gt;mydb&lt;/code&gt; databases have CQs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27da3b9d9386ee0b71af4e2726435e784f978dc1" translate="yes" xml:space="preserve">
          <source>The package management tools provided by the operating system deal with the version changes in the underlying software, but when using TAR, the version number is embedded in the directory structure and you end up with multiple side-by-side versions of the software.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396d8397c67a2b5186191440f351b8b3b4d280c5" translate="yes" xml:space="preserve">
          <source>The part of InfluxDB&amp;rsquo;s data structure that consists of a single collection of fields in a series. Each point is uniquely identified by its series and timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b445bec7424839b9c764c423013d11a09e4272" translate="yes" xml:space="preserve">
          <source>The part of InfluxDB&amp;rsquo;s data structure that describes for how long InfluxDB keeps data (duration), how many copies of those data are stored in the cluster (replication factor), and the time range covered by shard groups (shard group duration). RPs are unique per database and along with the measurement and tag set define a series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41334c78d51537cb9e6dd0750dd15611518bc44a" translate="yes" xml:space="preserve">
          <source>The part of InfluxDB&amp;rsquo;s structure that describes the data stored in the associated fields. Measurements are strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c75689e166f9f707daa5868aa5e4f047e7c34e" translate="yes" xml:space="preserve">
          <source>The password &lt;a href=&quot;../spec/index#strings&quot;&gt;string&lt;/a&gt; must be wrapped in single quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d799ec0df81abcf6b060bd79a62cd3ad16435a2" translate="yes" xml:space="preserve">
          <source>The password for your Kapacitor instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f2256110bb0acd3ec1a1dbb124fe1971125dcd" translate="yes" xml:space="preserve">
          <source>The path of the certificate file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56e64a724aba481f7840d7f0cf07b8fd52e3346" translate="yes" xml:space="preserve">
          <source>The path of the unix domain socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d41debf5a49d31f5a6d873292c98d1409b7048" translate="yes" xml:space="preserve">
          <source>The path to the PEM encoded CA certs file. If the empty string, the default system certs will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a5395eff81491c6d6e911e9c75576c1bd0e8cc" translate="yes" xml:space="preserve">
          <source>The path to the directory for &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-applications-are-supported-in-chronograf&quot;&gt;pre-created dashboards&lt;/a&gt; (default: &lt;code&gt;/usr/share/chronograf/canned&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b7bd9b6cec0fdadc9ddc538895a9c951ff5fd4" translate="yes" xml:space="preserve">
          <source>The paths for the configuration API endpoints are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d704700955ff831db672c07f04f6298de69ea592" translate="yes" xml:space="preserve">
          <source>The period or length of time that will be queried from InfluxDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be29e2eae7404be21faf1d86f7ac4b957270a659" translate="yes" xml:space="preserve">
          <source>The period, or length in time, of the window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f489dc0e40bc189f2b7c471d2953abe8dc977c57" translate="yes" xml:space="preserve">
          <source>The ping endpoint accepts both &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; HTTP requests. Use this endpoint to check the status of your InfluxDB instance and your version of InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073c48e2909eab9da57b4715b718991b1ffc9846" translate="yes" xml:space="preserve">
          <source>The port that &lt;code&gt;chronograf&lt;/code&gt; listens on for insecure connections (default: &lt;code&gt;8888&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccce20bb9f839ecf27985503227f27656be9ca0" translate="yes" xml:space="preserve">
          <source>The port used by the HTTP API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9540061a382c5e6d6a55d8b6e0e95892cf2b6cf" translate="yes" xml:space="preserve">
          <source>The port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d78884f6c63bf4eae168015e06b4bb4b86af3f" translate="yes" xml:space="preserve">
          <source>The precision configuration setting determines how much timestamp precision is retained in the points received from input plugins. All incoming timestamps are truncated to the given precision. Telegraf then pads the truncated timestamps with zeros to create a nanosecond timestamp; output plugins will emit timestamps in nanoseconds. Valid precisions are &lt;code&gt;ns&lt;/code&gt;, &lt;code&gt;us&lt;/code&gt; or &lt;code&gt;&amp;micro;s&lt;/code&gt;, &lt;code&gt;ms&lt;/code&gt;, and &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ced8823a715a3c1ff8ba5803d82c82a12b6cf09" translate="yes" xml:space="preserve">
          <source>The precision to use when writing the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e020c1268a9972f12260a79a1530e4e138d090d5" translate="yes" xml:space="preserve">
          <source>The preferred measurement of the rate at which data are persisted to InfluxDB. Write speeds are generally quoted in values per second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c567177bfb0555248031fa7a8f3fd3acf6a268da" translate="yes" xml:space="preserve">
          <source>The process listens on a unix domain socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edebf4994061ee927ce28e44ed68a8641db21898" translate="yes" xml:space="preserve">
          <source>The properties of the time series data use case make it challenging for many existing storage engines. Over the course of InfluxDB&amp;rsquo;s development we&amp;rsquo;ve tried a few of the more popular options. We started with LevelDB, an engine based on LSM Trees, which are optimized for write throughput. After that we tried BoltDB, an engine based on a memory mapped B+Tree, which is optimized for reads. Finally, we ended up building our own storage engine that is similar in many ways to LSM Trees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405fd521ecc62c8c2fe058f04fd7090411aaee5d" translate="yes" xml:space="preserve">
          <source>The purpose of this step is to generate enough load on your system to trigger an alert. More specifically, your idle CPU usage must dip below &lt;code&gt;80%&lt;/code&gt;. On the machine that&amp;rsquo;s running Telegraf, enter the following command in the terminal to start some &lt;code&gt;while&lt;/code&gt; loops:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4652e6b9d30a1bd022d197b1364e3e18dbc59a1" translate="yes" xml:space="preserve">
          <source>The purpose-built data storage format for InfluxDB. TSM allows for greater compaction and higher write and read throughput than existing B+ or LSM tree implementations. See &lt;a href=&quot;http://docs.influxdata.com/influxdb/v1.3/concepts/storage_engine/&quot;&gt;Storage Engine&lt;/a&gt; for more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cf7dc9fa078764e419a1c3878ceacdfb7b47fc" translate="yes" xml:space="preserve">
          <source>The queries return the timestamp for the &lt;a href=&quot;#max&quot;&gt;maximum&lt;/a&gt; point that appears in the raw data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e776c4991994ce2e20ed93058f249178b25c94bc" translate="yes" xml:space="preserve">
          <source>The query aggregates data using an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; and a &lt;a href=&quot;#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY
time()&lt;/code&gt; clause&lt;/a&gt;. It aggregates data in every measurement that matches the &lt;a href=&quot;#regular-expressions&quot;&gt;regular expression&lt;/a&gt; in the &lt;code&gt;FROM&lt;/code&gt; clause and writes the results to measurements with the same name in the &lt;code&gt;where_else&lt;/code&gt; database and the &lt;code&gt;autogen&lt;/code&gt; retention policy. Note that both &lt;code&gt;where_else&lt;/code&gt; and &lt;code&gt;autogen&lt;/code&gt; must exist prior to running the &lt;code&gt;INTO&lt;/code&gt; query. See &lt;a href=&quot;../database_management/index&quot;&gt;Database Management&lt;/a&gt; for how to manage databases and retention policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d9ccd0e1ee95d86245dcd9b882b979c7b09f28" translate="yes" xml:space="preserve">
          <source>The query aggregates data using an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; and a &lt;a href=&quot;#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY
time()&lt;/code&gt; clause&lt;/a&gt;. It also writes its results to the &lt;code&gt;all_my_averages&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875714ae86620eeca4bc7f6ec8d21a62bb29506b" translate="yes" xml:space="preserve">
          <source>The query below asks for the greatest field values of &lt;code&gt;water_level&lt;/code&gt; for three tag values of the &lt;code&gt;location&lt;/code&gt; tag key. Because the &lt;code&gt;location&lt;/code&gt; tag key has two tag values (&lt;code&gt;santa_monica&lt;/code&gt; and &lt;code&gt;coyote_creek&lt;/code&gt;), the query returns two points instead of three.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e5f8aa3cb84a560d6193219bb798f4e79088bc" translate="yes" xml:space="preserve">
          <source>The query below asks for the smallest field values of &lt;code&gt;water_level&lt;/code&gt; for three tag values of the &lt;code&gt;location&lt;/code&gt; tag key. Because the &lt;code&gt;location&lt;/code&gt; tag key has two tag values (&lt;code&gt;santa_monica&lt;/code&gt; and &lt;code&gt;coyote_creek&lt;/code&gt;), the query returns two points instead of three.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558ab09e3bd794184f271fc15d4dcd5a6ee0f936" translate="yes" xml:space="preserve">
          <source>The query below returns two points per 18-minute &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. Notice that the returned timestamps are the points&amp;rsquo; original timestamps; they are not forced to match the start of the &lt;code&gt;GROUP BY time()&lt;/code&gt; intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09567601cc9a249373d5c4a5144dc0ea9eaff8c6" translate="yes" xml:space="preserve">
          <source>The query below returns two randomly selected points per 18-minute &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. Notice that the returned timestamps are the points&amp;rsquo; original timestamps; they are not forced to match the start of the &lt;code&gt;GROUP BY time()&lt;/code&gt; intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4e35d423cabcbdd83dc38b1fd4caf963455ded" translate="yes" xml:space="preserve">
          <source>The query creates a database called &lt;code&gt;NOAA_water_database&lt;/code&gt;. &lt;a href=&quot;../../administration/config/index#retention-autocreate-true&quot;&gt;By default&lt;/a&gt;, InfluxDB also creates the &lt;code&gt;autogen&lt;/code&gt; retention policy and associates it with the &lt;code&gt;NOAA_water_database&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26938a2e010782dc4581f6ef88d4dec7b0e8b74" translate="yes" xml:space="preserve">
          <source>The query creates a database called &lt;code&gt;NOAA_water_database&lt;/code&gt;. It also creates a default retention policy for &lt;code&gt;NOAA_water_database&lt;/code&gt; with a &lt;code&gt;DURATION&lt;/code&gt; of three days, a &lt;a href=&quot;../../concepts/glossary/index#replication-factor&quot;&gt;replication factor&lt;/a&gt; of one, a &lt;a href=&quot;../../concepts/glossary/index#shard-group&quot;&gt;shard group&lt;/a&gt; duration of one hour, and with the name &lt;code&gt;liquid&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0fa0de75d03326120726194fd946b74e81b0ed" translate="yes" xml:space="preserve">
          <source>The query creates a retention policy called &lt;code&gt;one_day_only&lt;/code&gt; for the database &lt;code&gt;NOAA_water_database&lt;/code&gt; with a one day duration and a replication factor of one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00108027bdf647a3e3ad314141a962ec8bc6609" translate="yes" xml:space="preserve">
          <source>The query creates the same retention policy as the one in the example above, but sets it as the default retention policy for the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b10155312b0ea163e4a9af96970b2ca8143e2f" translate="yes" xml:space="preserve">
          <source>The query engine then determines the shards that match the &lt;code&gt;SELECT&lt;/code&gt; statement&amp;rsquo;s time range. From these shards, iterators are created for each field in the statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3084b3653f6a9801594ce9b6bf5bc582ad125e67" translate="yes" xml:space="preserve">
          <source>The query engine will have additive changes over the course of the new releases. We&amp;rsquo;ll introduce new query functions and new functionality into the language without breaking backwards compatibility. We may introduce new protocol endpoints (like a binary format) and versions of the line protocol and query API to improve performance and/or functionality, but they will have to run in parallel with the existing versions. Existing versions will be supported for the entirety of the 1.x release line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bea80fc1cffbdb99b370bb02960e56532d8bbf7" translate="yes" xml:space="preserve">
          <source>The query is an example of downsampling with backreferencing. It takes higher precision data from more than one measurement, aggregates those data to a lower precision, and stores the lower precision data in the database. Downsampling with backreferencing is a common use case for the &lt;code&gt;INTO&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdce42565d87a82bdbd757bdaf80be5512c3094a" translate="yes" xml:space="preserve">
          <source>The query is an example of downsampling: taking higher precision data, aggregating those data to a lower precision, and storing the lower precision data in the database. Downsampling is a common use case for the &lt;code&gt;INTO&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="accbbdd889b4099d137b5e83aa00501ca0b211b5" translate="yes" xml:space="preserve">
          <source>The query language has been extended with a few new features:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2347f0d3f21fb3e5f045c4f3ea12621c0cadafe" translate="yes" xml:space="preserve">
          <source>The query log enabled setting toggles the logging of parsed queries before execution. Very useful for troubleshooting, but will log any sensitive data contained within a query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54b5bfa81ea7096e08d897ea5a980c62656b468" translate="yes" xml:space="preserve">
          <source>The query multiplies &lt;code&gt;water_level&lt;/code&gt;&amp;rsquo;s field values by two and adds four to those values. Note that InfluxDB follows the standard order of operations. See &lt;a href=&quot;../math_operators/index&quot;&gt;Mathematical Operators&lt;/a&gt; for more on supported operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f90aefb27dd02bb9958e44f6d0e81c8583f78e0" translate="yes" xml:space="preserve">
          <source>The query results include the UTC offset (&lt;code&gt;-05:00&lt;/code&gt;) for the &lt;code&gt;America/Chicago&lt;/code&gt; time zone in the timestamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2adbbcea4e0f32562e130ca9cc4d4bf26b16a638" translate="yes" xml:space="preserve">
          <source>The query returns InfluxDB&amp;rsquo;s null timestamp equivalent (epoch 0: &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) as the timestamp. &lt;a href=&quot;#sum&quot;&gt;&lt;code&gt;SUM()&lt;/code&gt;&lt;/a&gt; aggregates points across several timestamps and has no single timestamp to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3699be7d44a130c16714456b46fc1b4559a1daee" translate="yes" xml:space="preserve">
          <source>The query returns InfluxDB&amp;rsquo;s null timestamp equivalent (epoch 0: &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) as the timestamp. The &lt;code&gt;MAX()&lt;/code&gt; and &lt;a href=&quot;#min&quot;&gt;&lt;code&gt;MIN()&lt;/code&gt;&lt;/a&gt; functions return different timestamps so the system has no single timestamp to return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bb724c0295ee67568b7fda3c76b66def025343" translate="yes" xml:space="preserve">
          <source>The query returns a tabular list of the unique field values for each field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement that contains the word &lt;code&gt;description&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c063f0b494e85f12ca6ed9e640702aa5ccf243" translate="yes" xml:space="preserve">
          <source>The query returns a tabular list of the unique field values for each field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has two field keys: &lt;code&gt;level description&lt;/code&gt; and &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866e80026100c5ab45fb34e6c5e85bfc67c18434" translate="yes" xml:space="preserve">
          <source>The query returns a tabular list of the unique field values in the &lt;code&gt;level description&lt;/code&gt; field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96739a2c89719655d62c572e8e219024f07f9350" translate="yes" xml:space="preserve">
          <source>The query returns a tabular list of the unique field values in the &lt;code&gt;level description&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results into 12-minute time intervals and per tag. The query also &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of series returned to one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eadafe4887830e4db0b0d1a611057947537b544b" translate="yes" xml:space="preserve">
          <source>The query returns all &lt;code&gt;water_level&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#points&quot;&gt;points&lt;/a&gt; from one of the &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; associated with the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefa5f2b82054e9fa1f6034432d06169ea4b8594" translate="yes" xml:space="preserve">
          <source>The query returns all mean values of the &lt;code&gt;water_level&lt;/code&gt; field that are greater than five.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bd02aaceee93a117639a92d3194731d2bf997c" translate="yes" xml:space="preserve">
          <source>The query returns all measurements in the &lt;code&gt;NOAA_water_database&lt;/code&gt; that start with &lt;code&gt;h2o&lt;/code&gt; and have values for the tag key &lt;code&gt;randtag&lt;/code&gt; that include an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2caa3cdc7bbdf707e8690a9c9fc7027e1bd0690" translate="yes" xml:space="preserve">
          <source>The query returns all series in the &lt;code&gt;NOAA_water_database&lt;/code&gt; database that are associated with the &lt;code&gt;h2o_quality&lt;/code&gt; measurement and the tag &lt;code&gt;location = coyote_creek&lt;/code&gt;. The &lt;code&gt;LIMIT&lt;/code&gt; clause limits the number of series returned to two.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65732dc215c3ee79c28aacb69f8efa3196f68393" translate="yes" xml:space="preserve">
          <source>The query returns all tag values of the &lt;code&gt;randtag&lt;/code&gt; tag key in the &lt;code&gt;NOAA_water_database&lt;/code&gt; database. &lt;code&gt;SHOW TAG VALUES&lt;/code&gt; groups query results by measurement name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba23b3e3db588ed4b947658b59b5f0a2d721dba" translate="yes" xml:space="preserve">
          <source>The query returns data for the &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; associated with the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; and the &lt;code&gt;location = santa_monica&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tag&lt;/a&gt;. Without &lt;code&gt;SOFFSET 1&lt;/code&gt;, the query returns data for the series associated with the &lt;code&gt;h2o_feet&lt;/code&gt; measurement and the &lt;code&gt;location = coyote_creek&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b293fbcd34dce1f7688ad7223883830b4b67a188" translate="yes" xml:space="preserve">
          <source>The query returns data from the &lt;code&gt;h2o_feet&lt;/code&gt; measurement that have &lt;a href=&quot;../../concepts/glossary/index#timestamp&quot;&gt;timestamps&lt;/a&gt; within the past seven days. The &lt;a href=&quot;#time-syntax&quot;&gt;Time Syntax&lt;/a&gt; section on this page offers in-depth information on supported time syntax in the &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8f0bb82124da69f4d3bc4768c1eb672126a3e7" translate="yes" xml:space="preserve">
          <source>The query returns data from the &lt;code&gt;h2o_feet&lt;/code&gt; measurement where the &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt;&lt;code&gt;location&lt;/code&gt; is set to &lt;code&gt;santa_monica&lt;/code&gt;. InfluxQL requires single quotes around tag values in the &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec2cd90a33af0dcb0f84e30aef93ad93c72fec9" translate="yes" xml:space="preserve">
          <source>The query returns data from the &lt;code&gt;h2o_feet&lt;/code&gt; measurement where the tag key &lt;code&gt;location&lt;/code&gt; is not set to &lt;code&gt;santa_monica&lt;/code&gt; and where the field values of &lt;code&gt;water_level&lt;/code&gt; are either less than -0.59 or greater than 9.95. The &lt;code&gt;WHERE&lt;/code&gt; clause supports the operators &lt;code&gt;AND&lt;/code&gt; and &lt;code&gt;OR&lt;/code&gt;, and supports separating logic with parentheses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b3a5f25b8429753632414d80c14c1bac21b3d1" translate="yes" xml:space="preserve">
          <source>The query returns data from the &lt;code&gt;h2o_feet&lt;/code&gt; measurement with field values of &lt;code&gt;level description&lt;/code&gt; that equal the &lt;code&gt;below 3 feet&lt;/code&gt; string. InfluxQL requires single quotes around string field values in the &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb536b0ae79437597a346f72f9bdb685d69d8305" translate="yes" xml:space="preserve">
          <source>The query returns data from the &lt;code&gt;h2o_feet&lt;/code&gt; measurement with field values of &lt;code&gt;water_level&lt;/code&gt; plus two that are greater than 11.9. Note that InfluxDB follows the standard order of operations See &lt;a href=&quot;../math_operators/index&quot;&gt;Mathematical Operators&lt;/a&gt; for more on supported operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d8209c9be28e3ab7900f32f826cbcd3f71b008" translate="yes" xml:space="preserve">
          <source>The query returns data from the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; with &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt; of &lt;code&gt;water_level&lt;/code&gt; that are greater than eight.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ee06d18a66fa841bdb2ae50b93eeff95d48f6d" translate="yes" xml:space="preserve">
          <source>The query returns data with timestamps between August 18, 2015 at 00:00:00 and August 18, 2015 at 00:12:00. The first date-time string does not include a time; InfluxDB assumes the time is 00:00:00.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492d1c59a20b57527213f74bcf1621a0a85c720b" translate="yes" xml:space="preserve">
          <source>The query returns data with timestamps between August 18, 2015 at 00:00:00.000000000 and August 18, 2015 at 00:12:00. The nanosecond specification in the first timestamp (&lt;code&gt;.000000000&lt;/code&gt;) is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfff1b12846ca4840a20708c721e4eb12562d5bc" translate="yes" xml:space="preserve">
          <source>The query returns data with timestamps that occur at least six minutes after September 18, 2015 at 21:24:00. Note that the whitespace between the &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;6m&lt;/code&gt; is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ecdd480f214cdd1977c12e6fed3c95ed59e94a" translate="yes" xml:space="preserve">
          <source>The query returns data with timestamps that occur at least six minutes before September 18, 2015 at 21:24:00. Note that the whitespace between the &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;6m&lt;/code&gt; is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ea76035e5e9540fa781568ac3133750d550c9a" translate="yes" xml:space="preserve">
          <source>The query returns data with timestamps that occur between August 18, 2015 at 00:00:00 and August 18, 2015 at 00:12:00. By default InfluxDB assumes epoch timestamps are in nanoseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44204e421e4936f962d4ffdb5ca2596a2fa6f59c" translate="yes" xml:space="preserve">
          <source>The query returns data with timestamps that occur between August 18, 2015 at 00:00:00 and August 18, 2015 at 00:12:00. The &lt;code&gt;s&lt;/code&gt;&lt;a href=&quot;../spec/index#durations&quot;&gt;duration literal&lt;/a&gt; at the end of the epoch timestamps indicate that the epoch timestamps are in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bd17a3b01fe3bf3e4ea78bd5f3a6b1f85b4ff5" translate="yes" xml:space="preserve">
          <source>The query returns data with timestamps that occur between September 18, 2015 at 21:18:00 and 1000 days from &lt;code&gt;now()&lt;/code&gt;. The whitespace between &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;1000d&lt;/code&gt; is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9abcc0e16019a45a1503e1785c266faaf844b31" translate="yes" xml:space="preserve">
          <source>The query returns data with timestamps that occur within the past hour. The whitespace between &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;1h&lt;/code&gt; is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25122c9a8358b7fe89139c16fa6e053cee467dae" translate="yes" xml:space="preserve">
          <source>The query returns database names in a tabular format. This InfluxDB instance has two databases: &lt;code&gt;NOAA_water_database&lt;/code&gt; and &lt;code&gt;_internal&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8767590127b38dc2721da290ab20784f5988a24" translate="yes" xml:space="preserve">
          <source>The query returns no data as casting a float field value to a string is not yet supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe3d9178b5ba533164c7b274c3140f87bd691e8" translate="yes" xml:space="preserve">
          <source>The query returns one randomly selected point from the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:30:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;groups&lt;/a&gt; results into 18-minute intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf9fd0cf7f2222aa9d0df5151071cdd63c1c3d2" translate="yes" xml:space="preserve">
          <source>The query returns tag keys from the &lt;code&gt;h2o_quality&lt;/code&gt; measurement in the &lt;code&gt;NOAA_water_database&lt;/code&gt; database. The &lt;code&gt;LIMIT&lt;/code&gt; and &lt;code&gt;OFFSET&lt;/code&gt; clauses limit the number of tag keys returned to one and offsets the results by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e8d7ba824439d766aaa3fed38b3b8cd3f186cb" translate="yes" xml:space="preserve">
          <source>The query returns the 12-minute rate of change between &lt;a href=&quot;#mean&quot;&gt;average&lt;/a&gt;&lt;code&gt;water_level&lt;/code&gt;s that are calculated at 12-minute intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e934a8d4b4699f96564928b7d47cc0ea23996c" translate="yes" xml:space="preserve">
          <source>The query returns the &lt;a href=&quot;#mean&quot;&gt;average&lt;/a&gt; and &lt;a href=&quot;#median&quot;&gt;median&lt;/a&gt; field values in the &lt;code&gt;water_level&lt;/code&gt; field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a8aed18009905a621d5a600eb627a885f9b4e0" translate="yes" xml:space="preserve">
          <source>The query returns the &lt;a href=&quot;#mean&quot;&gt;average&lt;/a&gt; field value of the &lt;code&gt;water_level&lt;/code&gt; field key and renames the output field key to &lt;code&gt;dream_name&lt;/code&gt;. Without the &lt;code&gt;AS&lt;/code&gt; clause, the query returns &lt;code&gt;mean&lt;/code&gt; as the output field key:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82646428a03eb07942cba1161ba016c55e0f24ab" translate="yes" xml:space="preserve">
          <source>The query returns the &lt;a href=&quot;#median&quot;&gt;median&lt;/a&gt; and &lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt; field values for the &lt;code&gt;water_level&lt;/code&gt; field key and renames the output field keys to &lt;code&gt;med_wat&lt;/code&gt; and &lt;code&gt;mode_wat&lt;/code&gt;. Without the &lt;code&gt;AS&lt;/code&gt; clauses, the query returns &lt;code&gt;median&lt;/code&gt; and &lt;code&gt;mode&lt;/code&gt; as the output field keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f008421336b8f77aec9d504f727274f612748b9b" translate="yes" xml:space="preserve">
          <source>The query returns the &lt;a href=&quot;#min&quot;&gt;minimum&lt;/a&gt; and &lt;a href=&quot;#max&quot;&gt;maximum&lt;/a&gt; field values in the &lt;code&gt;water_level&lt;/code&gt; field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3f5d4113f37dca9754a4bb97e93e5ddb0d5016" translate="yes" xml:space="preserve">
          <source>The query returns the &lt;a href=&quot;#mode&quot;&gt;mode&lt;/a&gt; field values for the &lt;code&gt;water_level&lt;/code&gt; field key and for the &lt;code&gt;level description&lt;/code&gt; field key. The &lt;code&gt;water_level&lt;/code&gt; mode is in the &lt;code&gt;mode&lt;/code&gt; column and the &lt;code&gt;level description&lt;/code&gt; mode is in the &lt;code&gt;mode_1&lt;/code&gt; column. The system can&amp;rsquo;t return more than one column with the same name so it renames the second &lt;code&gt;mode&lt;/code&gt; column to &lt;code&gt;mode_1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef525b4adc9844f45a59ca5b6a930edc90bd935" translate="yes" xml:space="preserve">
          <source>The query returns the area under the curve (in minutes) for the field values associated with each field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has on numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b326808659a88b7b13b546afc9030dc13d00cd" translate="yes" xml:space="preserve">
          <source>The query returns the area under the curve (in minutes) for the field values associated with each field key that stores numerical values includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bc015a511c2f53aa1a82bd291508cb39234bf1" translate="yes" xml:space="preserve">
          <source>The query returns the area under the curve (in minutes) for the field values associated with the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58bce88010cf851be8b4ec5da98c6dc3f67ef9b" translate="yes" xml:space="preserve">
          <source>The query returns the area under the curve (in minutes) for the field values associated with the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:30:00Z&lt;/code&gt;, &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;groups&lt;/a&gt; results into 12-minute intervals, and &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of results returned to one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a888083cad75ccb55f0d21dff23e3f7e006104fd" translate="yes" xml:space="preserve">
          <source>The query returns the area under the curve (in seconds) for the field values associated with the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bcdd8d98347bdf3fe37ff05a7da0f9bbeacbf8" translate="yes" xml:space="preserve">
          <source>The query returns the average field value for each field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7420be5bbd14265bc2170b5e33e391ffde941ab" translate="yes" xml:space="preserve">
          <source>The query returns the average field value for every field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56dfbdd65d77a372695a048104ee7d25739cbd73" translate="yes" xml:space="preserve">
          <source>The query returns the average field value in the &lt;code&gt;water_level&lt;/code&gt; field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67891671c893d97cc20e4c821d2d83515afc597" translate="yes" xml:space="preserve">
          <source>The query returns the average of the differences between the number of &lt;code&gt;cats&lt;/code&gt; and &lt;code&gt;dogs&lt;/code&gt; in the &lt;code&gt;pet_daycare&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd04339798dbcf8b04c3e8c116cdff2d5a381ce7" translate="yes" xml:space="preserve">
          <source>The query returns the average of the values in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results into 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with &lt;code&gt;9.01&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to seven and one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a46ca68bd17b21d6c86fec756a6749f99f4425" translate="yes" xml:space="preserve">
          <source>The query returns the difference (in milliseconds) between subsequent timestamps in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:12:00Z&lt;/code&gt; and sorts timestamps in &lt;a href=&quot;../data_exploration/index#order-by-time-desc&quot;&gt;descending order&lt;/a&gt;. The query also &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points returned to one and &lt;a href=&quot;../data_exploration/index#the-offset-and-soffset-clauses&quot;&gt;offsets&lt;/a&gt; results by one point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e61e163390427db9725644d0f1eb2e0d2706fb4" translate="yes" xml:space="preserve">
          <source>The query returns the difference (in minutes) between subsequent timestamps associated with each field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has two field keys: &lt;code&gt;level description&lt;/code&gt; and &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ddbae5eb0cda0e00ae234f1e028e0d9d8c174d" translate="yes" xml:space="preserve">
          <source>The query returns the difference (in minutes) between subsequent timestamps in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe82092957198d0214520dc81bdf6696bb0e073" translate="yes" xml:space="preserve">
          <source>The query returns the difference (in nanoseconds) between subsequent timestamps in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065fd012a488ed498f017f63eb2fe771b8c72ebb" translate="yes" xml:space="preserve">
          <source>The query returns the difference (in seconds) between subsequent timestamps associated with each field key that includes the word &lt;code&gt;level&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb03f2a7c2a869b92863a7b0c0627406aff853f7" translate="yes" xml:space="preserve">
          <source>The query returns the difference between &lt;a href=&quot;#max&quot;&gt;maximum&lt;/a&gt;&lt;code&gt;water_level&lt;/code&gt;s that are calculated at 12-minute intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bc1dc390d38a37e701b33a41659d3d4deda312" translate="yes" xml:space="preserve">
          <source>The query returns the difference between the minimum and maximum field values for every field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22d39f9298601ba09fb89ddc367e02b3947865e" translate="yes" xml:space="preserve">
          <source>The query returns the difference between the minimum and maximum field values for every field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da741f0297ebd90bb2d3d9f0440425466594e6b1" translate="yes" xml:space="preserve">
          <source>The query returns the difference between the minimum and maximum field values in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243cb2c0b3b8e46b2c6e503da40cc5b6783a5200" translate="yes" xml:space="preserve">
          <source>The query returns the difference between the minimum and maximum field values in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt;and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results into 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with &lt;code&gt;18&lt;/code&gt;, &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to three and one, and &lt;a href=&quot;../data_exploration/index#the-offset-and-soffset-clauses&quot;&gt;offsets&lt;/a&gt; the series returned by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b65548526d804cd91dd8f2bd21e9ec79201969" translate="yes" xml:space="preserve">
          <source>The query returns the difference between the subsequent field values for each field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ce1b220fa433a63091116791d59bce13cd93ab" translate="yes" xml:space="preserve">
          <source>The query returns the difference between the subsequent field values for each field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6273ed294479c4d32ae9bf493381e1ed442d59c" translate="yes" xml:space="preserve">
          <source>The query returns the difference between the subsequent field values in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae508151dbe1e233a5df4c4e8934a1e203ab8489" translate="yes" xml:space="preserve">
          <source>The query returns the difference between the subsequent field values in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:30:00Z&lt;/code&gt; and returns results in &lt;a href=&quot;../data_exploration/index#order-by-time-desc&quot;&gt;descending timestamp order&lt;/a&gt;. They query also &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points returned to two and &lt;a href=&quot;../data_exploration/index#the-offset-and-soffset-clauses&quot;&gt;offsets&lt;/a&gt; results by two points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9739b4d2c2598172872405cf46efc9faf0c4ad4c" translate="yes" xml:space="preserve">
          <source>The query returns the field keys and field value data types for each measurement in the &lt;code&gt;NOAA_water_database&lt;/code&gt; database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75971222a95c624751a76aaf558a5a5261bf7b5" translate="yes" xml:space="preserve">
          <source>The query returns the field value that is larger than 20 percent of the values in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;groups&lt;/a&gt; results into 24-minute intervals. It &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with &lt;code&gt;15&lt;/code&gt; and it &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points returned to two.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d2995d9c99c79f4f81be537d7f1449d3608fdf" translate="yes" xml:space="preserve">
          <source>The query returns the field value that is larger than five percent of the field values in each field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0572a400d67cfdf3c1c7ff78cb7c88a2b105b99a" translate="yes" xml:space="preserve">
          <source>The query returns the field value that is larger than five percent of the field values in each field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f0bc7da20427a94a2cda37c2c3a716d59a8b75" translate="yes" xml:space="preserve">
          <source>The query returns the field value that is larger than five percent of the field values in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7756b0defa66adec1b5a7519770e243d574c12" translate="yes" xml:space="preserve">
          <source>The query returns the field value that is larger than five percent of the field values in the &lt;code&gt;water_level&lt;/code&gt; field key and the relevant values of the &lt;code&gt;location&lt;/code&gt; tag key and the &lt;code&gt;level description&lt;/code&gt; field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d61101f5ef9630497cdd36df9d49604936e0e8" translate="yes" xml:space="preserve">
          <source>The query returns the fields keys and field value data types for the &lt;code&gt;h2o_feet&lt;/code&gt; measurement in the &lt;code&gt;NOAA_water_database&lt;/code&gt; database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9711fb20d0ad7d2a64f4e0cfa2183092101c96d3" translate="yes" xml:space="preserve">
          <source>The query returns the fourth, fifth, and sixth &lt;a href=&quot;../../concepts/glossary/index#point&quot;&gt;points&lt;/a&gt; from the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;. If the query did not include &lt;code&gt;OFFSET 3&lt;/code&gt;, it would return the first, second, and third points from that measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acb21eb6cdcc78abb33f724ec5d4839ff7f5242" translate="yes" xml:space="preserve">
          <source>The query returns the greatest field value for each field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6518033bb15e6182c040202c750bacafa1ef915" translate="yes" xml:space="preserve">
          <source>The query returns the greatest field value for each field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3f070267ec630802f29548729e64ef139d8da7" translate="yes" xml:space="preserve">
          <source>The query returns the greatest field value in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254a60632fe80e5a8e2d69881afb796576121641" translate="yes" xml:space="preserve">
          <source>The query returns the greatest field value in the &lt;code&gt;water_level&lt;/code&gt; field key and the relevant values of the &lt;code&gt;location&lt;/code&gt; tag key and the &lt;code&gt;level description&lt;/code&gt; field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37202c3fa418be3d686c3dadd2323204da6208c" translate="yes" xml:space="preserve">
          <source>The query returns the greatest field value in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results in to 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with &lt;code&gt;9.01&lt;/code&gt;, and it &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to four and one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cfefc1acf71d26f0bbde6d71ea8d89fe13cd27" translate="yes" xml:space="preserve">
          <source>The query returns the greatest field values in the &lt;code&gt;water_level&lt;/code&gt; field key for two tag values associated with the &lt;code&gt;location&lt;/code&gt; tag key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89835cd274a750636c3fd70c1c3ead0b027146c8" translate="yes" xml:space="preserve">
          <source>The query returns the greatest four field values in the &lt;code&gt;water_level&lt;/code&gt; field key and the relevant values of the &lt;code&gt;location&lt;/code&gt; tag key and the &lt;code&gt;level description&lt;/code&gt; field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a7be2a004604026a1fe16f4dff245cdf53b38f" translate="yes" xml:space="preserve">
          <source>The query returns the greatest three field values in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46743e7585bcf2061c307d3f4d619af3f1f42d3d" translate="yes" xml:space="preserve">
          <source>The query returns the greatest three values in the &lt;code&gt;water_level&lt;/code&gt; field key for each 24-minute &lt;a href=&quot;../data_exploration/index#basic-group-by-time-syntax&quot;&gt;interval&lt;/a&gt; between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt;. It also returns results in &lt;a href=&quot;../data_exploration/index#order-by-time-desc&quot;&gt;descending timestamp&lt;/a&gt; order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d26048c7ded45c020af374c5a220559ba41937" translate="yes" xml:space="preserve">
          <source>The query returns the integer form of &lt;code&gt;water_level&lt;/code&gt;&amp;rsquo;s float &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702438dbdae9ec8a8a75354be12ebcd3b0fcb3c8" translate="yes" xml:space="preserve">
          <source>The query returns the list of measurements in the &lt;code&gt;NOAA_water_database&lt;/code&gt; database. The database has five measurements: &lt;code&gt;average_temperature&lt;/code&gt;, &lt;code&gt;h2o_feet&lt;/code&gt;, &lt;code&gt;h2o_pH&lt;/code&gt;, &lt;code&gt;h2o_quality&lt;/code&gt;, and &lt;code&gt;h2o_temperature&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51962ea104577b0841477bfba73e1405c494bb8" translate="yes" xml:space="preserve">
          <source>The query returns the list of retention policies in the &lt;code&gt;NOAA_water_database&lt;/code&gt; database in tabular format. The database has one retention policy called &lt;code&gt;autogen&lt;/code&gt;. The &lt;code&gt;autogen&lt;/code&gt; retention policy has an infinite &lt;a href=&quot;../../concepts/glossary/index#duration&quot;&gt;duration&lt;/a&gt;, a seven-day &lt;a href=&quot;../../concepts/glossary/index#shard-group&quot;&gt;shard group duration&lt;/a&gt;, a &lt;a href=&quot;../../concepts/glossary/index#replication-factor&quot;&gt;replication factor&lt;/a&gt; of one, and it is the &lt;code&gt;DEFAULT&lt;/code&gt; retention policy for the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc004f72b997cc0a5dc5f40463b8d470d0f1a3ab" translate="yes" xml:space="preserve">
          <source>The query returns the list of tag keys in the &lt;code&gt;NOAA_water_database&lt;/code&gt; database. The output groups tag keys by measurement name; it shows that every measurement has the &lt;code&gt;location&lt;/code&gt; tag key and that the &lt;code&gt;h2o_quality&lt;/code&gt; measurement has an additional &lt;code&gt;randtag&lt;/code&gt; tag key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667921c05c2ec4d2d8d681552cee53ac40382d5d" translate="yes" xml:space="preserve">
          <source>The query returns the lower time bound (&lt;code&gt;WHERE time &amp;gt;= '2015-08-18T00:00:00Z'&lt;/code&gt;) as the timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2b32feea2bd6649f28d77470a52397fb12c5db" translate="yes" xml:space="preserve">
          <source>The query returns the lower time bound for each &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt;&lt;/a&gt; interval as the timestamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b32d5a46c4fa9564a94fd09bc96d5ce39db30c" translate="yes" xml:space="preserve">
          <source>The query returns the lower time bound for each &lt;code&gt;GROUP BY time()&lt;/code&gt; interval as the timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680dbcf5271f1b8b5f5023fcae239d98ec3ee20d" translate="yes" xml:space="preserve">
          <source>The query returns the lowest field value for each field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86886096808def31198cacde55075f7d9d8c981e" translate="yes" xml:space="preserve">
          <source>The query returns the lowest field value for each field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd566a75e1079e1b79bd61b6c20c76d7c16c6720" translate="yes" xml:space="preserve">
          <source>The query returns the lowest field value in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9b647d9595ef180e67ad7ec2765097a3982657" translate="yes" xml:space="preserve">
          <source>The query returns the lowest field value in the &lt;code&gt;water_level&lt;/code&gt; field key and the relevant values of the &lt;code&gt;location&lt;/code&gt; tag key and the &lt;code&gt;level description&lt;/code&gt; field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25037fb0b1255317d0f3c39b7e3a1daf7c7f44a4" translate="yes" xml:space="preserve">
          <source>The query returns the lowest field value in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results in to 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with &lt;code&gt;9.01&lt;/code&gt;, and it &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to four and one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3d322ba44d87524f0ac546fa75944c67eed169" translate="yes" xml:space="preserve">
          <source>The query returns the measurements in the &lt;code&gt;NOAA_water_database&lt;/code&gt; database that start with &lt;code&gt;h2o&lt;/code&gt;. The &lt;code&gt;LIMIT&lt;/code&gt; and &lt;code&gt;OFFSET&lt;/code&gt; clauses limit the number of measurement names returned to two and offset the results by one, skipping the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b696a2c989f259ba57d13bb7b94954303fcab7" translate="yes" xml:space="preserve">
          <source>The query returns the middle field value for every field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982a1b2b58d19de73bcdcf335021db0c443692fb" translate="yes" xml:space="preserve">
          <source>The query returns the middle field value for every field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036f1b5a90b36d91d77f65a41b7334f4e84c4946" translate="yes" xml:space="preserve">
          <source>The query returns the middle field value in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0cf4aeb5f40c499909db80160c564d5480509a" translate="yes" xml:space="preserve">
          <source>The query returns the middle field value in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results into 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with &lt;code&gt;700&lt;/code&gt;, &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to seven and one, and &lt;a href=&quot;../data_exploration/index#the-offset-and-soffset-clauses&quot;&gt;offsets&lt;/a&gt; the series returned by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0e028786c220e8f7298f3a76d9ea1c2a84ffd0" translate="yes" xml:space="preserve">
          <source>The query returns the mode of the values associated with the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results into 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to three and one, and it &lt;a href=&quot;../data_exploration/index#the-offset-and-soffset-clauses&quot;&gt;offsets&lt;/a&gt; the series returned by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90d15f470cab0089e278b11ba151624b4869960" translate="yes" xml:space="preserve">
          <source>The query returns the most frequent field value for every field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has two field keys: &lt;code&gt;level description&lt;/code&gt; and &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f184dccb2f56c4135f2dba918a10537d828fa0d8" translate="yes" xml:space="preserve">
          <source>The query returns the most frequent field value for every field key that includes the word &lt;code&gt;/water/&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b299c75405b00998a2e95b22607036cb08f94f1e" translate="yes" xml:space="preserve">
          <source>The query returns the most frequent field value in the &lt;code&gt;level description&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df524dd8f28546f547ad324267a491afd3c7573" translate="yes" xml:space="preserve">
          <source>The query returns the newest field value (determined by timestamp) associated with the &lt;code&gt;level description&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14fb894dbb2cdf39c41050c7bca9ef0dbc407aa9" translate="yes" xml:space="preserve">
          <source>The query returns the newest field value (determined by timestamp) for each field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has two field keys: &lt;code&gt;level description&lt;/code&gt; and &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c6072ad0ad3bfed10d94abd3deffa3aa8cb2da" translate="yes" xml:space="preserve">
          <source>The query returns the newest field value (determined by timestamp) in the &lt;code&gt;level description&lt;/code&gt; field key and the relevant values of the &lt;code&gt;location&lt;/code&gt; tag key and the &lt;code&gt;water_level&lt;/code&gt; field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7930b02c67e626600503a4904a96bbe2f4e119" translate="yes" xml:space="preserve">
          <source>The query returns the newest field value (determined by timestamp) in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results into 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with &lt;code&gt;9.01&lt;/code&gt;, and it &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to four and one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b0422e97ffc5834798f6d2330e36c4d344d26f" translate="yes" xml:space="preserve">
          <source>The query returns the newest field value for each field key that includes the word &lt;code&gt;level&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be386c303f02b2d5ec8e36f6312132b9f86be37" translate="yes" xml:space="preserve">
          <source>The query returns the number of non-null field values for each field key associated with the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has two field keys: &lt;code&gt;level description&lt;/code&gt; and &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b62e783e10e0a82e4f87d35f6e4524b8f9a51a0" translate="yes" xml:space="preserve">
          <source>The query returns the number of non-null field values for every field key that contains the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f8bad73a40a98246462b18e696baec80760494" translate="yes" xml:space="preserve">
          <source>The query returns the number of non-null field values in the &lt;code&gt;water_level&lt;/code&gt; field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46241105bba023b0a564aeb75647343c9f1e874" translate="yes" xml:space="preserve">
          <source>The query returns the number of non-null field values in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results into 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with &lt;code&gt;200&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to seven and one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02520079e7db327fca9ee6a171763feaa0e796d2" translate="yes" xml:space="preserve">
          <source>The query returns the number of unique field values for the &lt;code&gt;level description&lt;/code&gt; field key and the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9b397becd8474babb021c7efd283386c04496b" translate="yes" xml:space="preserve">
          <source>The query returns the number of unique field values in the &lt;code&gt;level description&lt;/code&gt; field key and the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c48bbd4654cee4d99b71fbe0304b272fe3a380" translate="yes" xml:space="preserve">
          <source>The query returns the oldest field value (determined by timestamp) associated with the &lt;code&gt;level description&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7dc31025f21f320cf9c019d65065da3c7ff467" translate="yes" xml:space="preserve">
          <source>The query returns the oldest field value (determined by timestamp) for each field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has two field keys: &lt;code&gt;level description&lt;/code&gt; and &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46769f77d6478f78866bde9937b64e84535d4f90" translate="yes" xml:space="preserve">
          <source>The query returns the oldest field value (determined by timestamp) in the &lt;code&gt;level description&lt;/code&gt; field key and the relevant values of the &lt;code&gt;location&lt;/code&gt; tag key and the &lt;code&gt;water_level&lt;/code&gt; field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df371c1ed332078f3f148a70eda9fdcae1b3288" translate="yes" xml:space="preserve">
          <source>The query returns the oldest field value (determined by timestamp) in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results into 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with &lt;code&gt;9.01&lt;/code&gt;, and it &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to four and one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec86e47a59dd12f899e5e4b77d17dd4cfa3994b8" translate="yes" xml:space="preserve">
          <source>The query returns the oldest field value for each field key that includes the word &lt;code&gt;level&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc569d18a0d6dc8c55dd986aba50c0ba505cfd6f" translate="yes" xml:space="preserve">
          <source>The query returns the one-second rate of change between the field values associated with the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b1ab0fda4a718f5b0a972f097b4d84e832f3b0" translate="yes" xml:space="preserve">
          <source>The query returns the one-second rate of change between the field values associated with the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:30:00Z&lt;/code&gt; and returns results in &lt;a href=&quot;../data_exploration/index#order-by-time-desc&quot;&gt;descending timestamp order&lt;/a&gt;. The query also &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points returned to one and &lt;a href=&quot;../data_exploration/index#the-offset-and-soffset-clauses&quot;&gt;offsets&lt;/a&gt; results by two points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b267670b3b6f441013e5ba2f555cd73183c2fa7f" translate="yes" xml:space="preserve">
          <source>The query returns the points with the most recent timestamps from the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; first. Without &lt;code&gt;ORDER by time DESC&lt;/code&gt;, the query would return &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; first and &lt;code&gt;2015-09-18T21:42:00Z&lt;/code&gt; last.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdfb220364cd53843d8282ba56c82811243aa87" translate="yes" xml:space="preserve">
          <source>The query returns the rolling average across a four-field-value window for each field key that stores numerical values and includes the word &lt;code&gt;level&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7db8a08abbf2b72c093215a9e92669e92166e38" translate="yes" xml:space="preserve">
          <source>The query returns the rolling average across a three-field-value window for each field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7faecc2ccfec2b7165ccdfc641964eae7d36585" translate="yes" xml:space="preserve">
          <source>The query returns the rolling average across a two-field-value window for the &lt;code&gt;water_level&lt;/code&gt; field key and the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The first result (&lt;code&gt;2.09&lt;/code&gt;) is the average of the first two points in the raw data: (&lt;code&gt;2.064 + 2.116) / 2&lt;/code&gt;). The second result (&lt;code&gt;2.072&lt;/code&gt;) is the average of the second two points in the raw data: (&lt;code&gt;2.116 + 2.028) / 2&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b0b7907c173fd412a1c2dc455f596615a7bdff" translate="yes" xml:space="preserve">
          <source>The query returns the rolling average across a two-field-value window for the &lt;code&gt;water_level&lt;/code&gt; field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:30:00Z&lt;/code&gt; and returns results in &lt;a href=&quot;../data_exploration/index#order-by-time-desc&quot;&gt;descending timestamp order&lt;/a&gt;. The query also &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points returned to two and &lt;a href=&quot;../data_exploration/index#the-offset-and-soffset-clauses&quot;&gt;offsets&lt;/a&gt; results by three points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c5d2699dfae0ae4318896aa869130254561280" translate="yes" xml:space="preserve">
          <source>The query returns the rolling average across a two-value window of &lt;a href=&quot;#max&quot;&gt;maximum&lt;/a&gt;&lt;code&gt;water_level&lt;/code&gt;s that are calculated at 12-minute intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7e882a16ea744ae66fdacc4063e8e496fdff08" translate="yes" xml:space="preserve">
          <source>The query returns the running total of &lt;a href=&quot;#mean&quot;&gt;average&lt;/a&gt;&lt;code&gt;water_level&lt;/code&gt;s that are calculated at 12-minute intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105366d5b2b91a0dcc9dfb68fcb58c4dbc82f740" translate="yes" xml:space="preserve">
          <source>The query returns the running total of the field values associated with the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:30:00Z&lt;/code&gt; and returns results in &lt;a href=&quot;../data_exploration/index#order-by-time-desc&quot;&gt;descending timestamp order&lt;/a&gt;. The query also &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points returned to four and &lt;a href=&quot;../data_exploration/index#the-offset-and-soffset-clauses&quot;&gt;offsets&lt;/a&gt; results by two points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857bad732e618b0e4d1a7d2d33dcc0858d5b8495" translate="yes" xml:space="preserve">
          <source>The query returns the running total of the field values for each field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275bee6e8b30611496a9d8a60b2a6408a77b4ff4" translate="yes" xml:space="preserve">
          <source>The query returns the running total of the field values for each field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b09f05950f908c3d47a989d62ef1044c83cfdd" translate="yes" xml:space="preserve">
          <source>The query returns the running total of the field values in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bca29602f8dd72def871f4b18cbebb89fd2a12" translate="yes" xml:space="preserve">
          <source>The query returns the six-minute rate of change between average &lt;code&gt;water_level&lt;/code&gt;s that are calculated at 12-minute intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff11636ec49998f754bcce8543bb07bfe0bd5840" translate="yes" xml:space="preserve">
          <source>The query returns the six-minute rate of change between the field values associated with the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87cb9a68de4d2038ad29edf0aed34bf54fec796" translate="yes" xml:space="preserve">
          <source>The query returns the smallest field values in the &lt;code&gt;water_level&lt;/code&gt; field key for two tag values associated with the &lt;code&gt;location&lt;/code&gt; tag key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22066659a2ad4ebf0135a68082473bd745020066" translate="yes" xml:space="preserve">
          <source>The query returns the smallest four field values in the &lt;code&gt;water_level&lt;/code&gt; field key and the relevant values of the &lt;code&gt;location&lt;/code&gt; tag key and the &lt;code&gt;level description&lt;/code&gt; field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ccf24718ad75245c724485c3e4620ccf793f33" translate="yes" xml:space="preserve">
          <source>The query returns the smallest three field values in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57eddf4f60d09d897d8c264c7fbd2615e62b5dfd" translate="yes" xml:space="preserve">
          <source>The query returns the smallest three values in the &lt;code&gt;water_level&lt;/code&gt; field key for each 24-minute &lt;a href=&quot;../data_exploration/index#basic-group-by-time-syntax&quot;&gt;interval&lt;/a&gt; between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt;. It also returns results in &lt;a href=&quot;../data_exploration/index#order-by-time-desc&quot;&gt;descending timestamp&lt;/a&gt; order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caff8dabefbf73fa2881757e4c2b2e5c5f9b9ff6" translate="yes" xml:space="preserve">
          <source>The query returns the standard deviation of the field values for each field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d32d00974334d7c6b95f9e9d07bb7b7e34b953" translate="yes" xml:space="preserve">
          <source>The query returns the standard deviation of the field values for each field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ced21e7ce93e97aaeb90c8e91eb613bff92d4a6" translate="yes" xml:space="preserve">
          <source>The query returns the standard deviation of the field values in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade9918807753b76951504a85a5cacd62aa1017f" translate="yes" xml:space="preserve">
          <source>The query returns the standard deviation of the field values in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results into 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with &lt;code&gt;18000&lt;/code&gt;, &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to two and one, and &lt;a href=&quot;../data_exploration/index#the-offset-and-soffset-clauses&quot;&gt;offsets&lt;/a&gt; the series returned by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc11693ff87c4e07582928cfed6c0e110028b62" translate="yes" xml:space="preserve">
          <source>The query returns the sum of the derivative of average &lt;code&gt;water_level&lt;/code&gt; values for each tag value of &lt;code&gt;location&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b9d7eefd7eea6fa13094e4721ae81836e1efb9" translate="yes" xml:space="preserve">
          <source>The query returns the sum of the maximum &lt;code&gt;water_level&lt;/code&gt; values across every tag value of &lt;code&gt;location&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4a455656040d60566294cc4f758a72a658d2f0" translate="yes" xml:space="preserve">
          <source>The query returns the summed total of the field values for each field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd29d89bd7c3077d611703955c1950967b074d6" translate="yes" xml:space="preserve">
          <source>The query returns the summed total of the field values for each field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90982cc4723711f81d8587223bdba0dc09d3707" translate="yes" xml:space="preserve">
          <source>The query returns the summed total of the field values in the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6223bd28e4f2136003a9685b6e3d85010dd3b8e2" translate="yes" xml:space="preserve">
          <source>The query returns the summed total of the field values in the &lt;code&gt;water_level&lt;/code&gt; field key. It covers the &lt;a href=&quot;../data_exploration/index#time-syntax&quot;&gt;time range&lt;/a&gt; between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and &lt;code&gt;2015-08-18T00:54:00Z&lt;/code&gt; and &lt;a href=&quot;../data_exploration/index#the-group-by-clause&quot;&gt;groups&lt;/a&gt; results into 12-minute time intervals and per tag. The query &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;fills&lt;/a&gt; empty time intervals with 18000, and it &lt;a href=&quot;../data_exploration/index#the-limit-and-slimit-clauses&quot;&gt;limits&lt;/a&gt; the number of points and series returned to four and one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898ded627aa8bab0289929f5c8233b8766bb029a" translate="yes" xml:space="preserve">
          <source>The query returns the tag values of the tag keys &lt;code&gt;location&lt;/code&gt; and &lt;code&gt;randtag&lt;/code&gt; for all measurements in the &lt;code&gt;NOAA_water_database&lt;/code&gt; database where &lt;code&gt;randtag&lt;/code&gt; has tag values. The &lt;code&gt;LIMIT&lt;/code&gt; clause limits the number of tag values returned to three.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81125502318f407b333f6210bb002181c182cec9" translate="yes" xml:space="preserve">
          <source>The query returns the three oldest &lt;a href=&quot;../../concepts/glossary/index#point&quot;&gt;points&lt;/a&gt; (determined by timestamp) from one of the &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; associated with the &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;&lt;code&gt;h2o_feet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bbdb8a416f14d47173042ac6a17dc3b3fafc642" translate="yes" xml:space="preserve">
          <source>The query returns the three oldest &lt;a href=&quot;../../concepts/glossary/index#point&quot;&gt;points&lt;/a&gt; (determined by timestamp) from the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aea51d121e78a2465321b308a39d69e8cd13944" translate="yes" xml:space="preserve">
          <source>The query returns the three-minute rate of change between the field values associated with each field key that stores numerical values in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has one numerical field: &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7aaf097fe17e142b8ea7e22b3cf96d66282b731" translate="yes" xml:space="preserve">
          <source>The query returns the two-minute rate of change between the field values associated with each field key that stores numerical values and includes the word &lt;code&gt;water&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d9aab3e8cb679de159f0deac5c2539a76582db" translate="yes" xml:space="preserve">
          <source>The query returns two &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; of results: one for each &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag value&lt;/a&gt; of the &lt;code&gt;location&lt;/code&gt; tag. The result for each timestamp represents a single 12 minute interval. The count for the first timestamp covers the raw data between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and up to, but not including, &lt;code&gt;2015-08-18T00:12:00Z&lt;/code&gt;. The count for the second timestamp covers the raw data between &lt;code&gt;2015-08-18T00:12:00Z&lt;/code&gt; and up to, but not including, &lt;code&gt;2015-08-18T00:24:00Z.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7621a6cf6855a1955f178f13f92d7c318a043db5" translate="yes" xml:space="preserve">
          <source>The query returns two randomly selected points for each field key in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;h2o_feet&lt;/code&gt; measurement has two field keys: &lt;code&gt;level description&lt;/code&gt; and &lt;code&gt;water_level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b072d11bb887016c3b6f860d59424ea609bf55a" translate="yes" xml:space="preserve">
          <source>The query returns two randomly selected points for each field key that includes the word &lt;code&gt;level&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2575331128f4b6cda45ce3f4f3036166840ac1e9" translate="yes" xml:space="preserve">
          <source>The query returns two randomly selected points from the &lt;code&gt;water_level&lt;/code&gt; field key and in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ab2dac3d16f6b5e8ae68165597bc017d0291bc" translate="yes" xml:space="preserve">
          <source>The query returns two randomly selected points from the &lt;code&gt;water_level&lt;/code&gt; field key and the relevant values of the &lt;code&gt;location&lt;/code&gt; tag and the &lt;code&gt;level description&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8258f6fd29a86f9b7e0b10cc505995ce4ecf2b" translate="yes" xml:space="preserve">
          <source>The query returns values of the &lt;code&gt;water_level&lt;/code&gt; field key that are floats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0567ea570e203f5bf4f3a9619f0c69230f8a99" translate="yes" xml:space="preserve">
          <source>The query selects all &lt;a href=&quot;../../concepts/glossary/index#field&quot;&gt;fields&lt;/a&gt; and &lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tags&lt;/a&gt; from the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ac04a8e3d3917afa70bc6c7e1c677a2557ebbb" translate="yes" xml:space="preserve">
          <source>The query selects all &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field keys&lt;/a&gt; and &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag keys&lt;/a&gt; that include an &lt;code&gt;l&lt;/code&gt;. Note that the regular expression in the &lt;code&gt;SELECT&lt;/code&gt; clause must match at least one field key in order to return results for a tag key that matches the regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2921fe7e8d6f1b5f6a40e039a75e05fa238dac57" translate="yes" xml:space="preserve">
          <source>The query selects all data from the &lt;code&gt;h2o_feet&lt;/code&gt; measurement where the &lt;code&gt;location&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tag&lt;/a&gt; has no value. Every data &lt;a href=&quot;../../concepts/glossary/index#point&quot;&gt;point&lt;/a&gt; in the &lt;code&gt;NOAA_water_database&lt;/code&gt; has a tag value for &lt;code&gt;location&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea08a796c63dfb1a9d958169e3de9900c9f41d7a" translate="yes" xml:space="preserve">
          <source>The query selects all fields and tags from two measurements: &lt;code&gt;h2o_feet&lt;/code&gt; and &lt;code&gt;h2o_pH&lt;/code&gt;. Separate multiple measurements with a comma (&lt;code&gt;,&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb286768290d2b32464280d887f4b313d8d6945" translate="yes" xml:space="preserve">
          <source>The query selects all fields from the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;SELECT&lt;/code&gt; clause supports combining the &lt;code&gt;*&lt;/code&gt; syntax with the &lt;code&gt;::&lt;/code&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b89ad66bb2dcbe5094d6a53ef99fd7be690da33a" translate="yes" xml:space="preserve">
          <source>The query selects data in the &lt;code&gt;NOAA_water_database&lt;/code&gt;, the &lt;code&gt;DEFAULT&lt;/code&gt; retention policy, and the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;..&lt;/code&gt; indicates the &lt;code&gt;DEFAULT&lt;/code&gt; retention policy for the specified database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d13e6ffd56e98fffc790a08d1123b354f1a9d2c" translate="yes" xml:space="preserve">
          <source>The query selects data in the &lt;code&gt;NOAA_water_database&lt;/code&gt;, the &lt;code&gt;autogen&lt;/code&gt; retention policy, and the measurement &lt;code&gt;h2o_feet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f14d93d5e132e3133baee0cd628bb0769aaf1b1" translate="yes" xml:space="preserve">
          <source>The query selects the &lt;code&gt;level description&lt;/code&gt; field, the &lt;code&gt;location&lt;/code&gt; tag, and the &lt;code&gt;water_level&lt;/code&gt; field from the &lt;code&gt;h2o_feet&lt;/code&gt; measurement. The &lt;code&gt;::[field | tag]&lt;/code&gt; syntax specifies if the &lt;a href=&quot;../../concepts/glossary/index#identifier&quot;&gt;identifier&lt;/a&gt; is a field or tag. Use &lt;code&gt;::[field | tag]&lt;/code&gt; to differentiate between &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#how-do-i-query-data-with-an-identical-tag-key-and-field-key&quot;&gt;an identical field key and tag key &lt;/a&gt;. That syntax is not required for most use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b004c951415397d7d557ee61c51b72d6ee318f" translate="yes" xml:space="preserve">
          <source>The query selects the &lt;code&gt;level description&lt;/code&gt; field, the &lt;code&gt;location&lt;/code&gt; tag, and the &lt;code&gt;water_level&lt;/code&gt; field. Note that the &lt;code&gt;SELECT&lt;/code&gt; clause must specify at least one field when it includes a tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cda42d69d12643934240d605d7b5e3f2a73aa48" translate="yes" xml:space="preserve">
          <source>The query takes the following form where you must include either the &lt;code&gt;FROM&lt;/code&gt; clause or the &lt;code&gt;WHERE&lt;/code&gt; clause, or both:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d9e4305e8856dee34acae571f1f039c6aecfd5" translate="yes" xml:space="preserve">
          <source>The query takes the following form, where you must specify either the &lt;code&gt;FROM&lt;/code&gt; clause or the &lt;code&gt;WHERE&lt;/code&gt; clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00da56a1ab7cc66dec09fbead9597d7f64832dd" translate="yes" xml:space="preserve">
          <source>The query takes the following form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b740d26f979a56a13af0b11dda8f2171cda857" translate="yes" xml:space="preserve">
          <source>The query to execute. Must not contain a time condition in the &lt;code&gt;WHERE&lt;/code&gt; clause or contain a &lt;code&gt;GROUP BY&lt;/code&gt; clause. The time conditions are added dynamically according to the period, offset and schedule. The &lt;code&gt;GROUP BY&lt;/code&gt; clause is added dynamically according to the dimensions passed to the &lt;code&gt;groupBy&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021d5b235a6641b90443fa95b32bb73e53d3c6d3" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; and a &lt;a href=&quot;#group-by-time-intervals&quot;&gt;GROUP BY clause&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt; for each &lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tag&lt;/a&gt; and for each twelve-minute interval in the query&amp;rsquo;s time range. &lt;code&gt;LIMIT 2&lt;/code&gt; requests the two oldest twelve-minute averages (determined by timestamp).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498891fa2a539a3a62c88f58dd03888a5dbba014" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; and a time interval in the &lt;a href=&quot;#group-by-time-intervals&quot;&gt;GROUP BY clause&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt; for each twelve-minute interval in the query&amp;rsquo;s time range. &lt;code&gt;LIMIT 2&lt;/code&gt; requests the two oldest twelve-minute averages (determined by timestamp) and &lt;code&gt;SLIMIT 1&lt;/code&gt; requests a single series associated with the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f688dbc4cbda46ff082d37b3434c6262eb7f82" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; and a time interval in the &lt;a href=&quot;#group-by-time-intervals&quot;&gt;GROUP BY clause&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt; for each twelve-minute interval in the query&amp;rsquo;s time range. &lt;code&gt;ORDER BY time DESC&lt;/code&gt; returns the most recent 12-minute time intervals first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2995fa19eb5ade2bc10fc28c5e4f357f6ed0a0" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; and a time interval in the &lt;a href=&quot;#group-by-time-intervals&quot;&gt;GROUP BY clause&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt; for each twelve-minute interval in the query&amp;rsquo;s time range. &lt;code&gt;SLIMIT 1&lt;/code&gt; requests a single series associated with the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b886841522f6d53c2cd5ec9a3b80a665054e7443" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to calculate the average &lt;code&gt;degrees&lt;/code&gt; for every &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; in the &lt;code&gt;NOAA_water_database&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt; that contains the word &lt;code&gt;temperature&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a800d1e294ece6a4ac4e9409019f6d02c7bc1c9" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to calculate the average &lt;code&gt;index&lt;/code&gt; for each combination of the &lt;code&gt;location&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tag&lt;/a&gt; and the &lt;code&gt;randtag&lt;/code&gt; tag in the &lt;code&gt;h2o_quality&lt;/code&gt; measurement. Separate multiple tags with a comma in the &lt;code&gt;GROUP BY&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d621bc7ea16cceae1dae4e1eef130c60acc300e9" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to calculate the average &lt;code&gt;index&lt;/code&gt; for every possible &lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tag&lt;/a&gt; combination in the &lt;code&gt;h2o_quality&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dd2eb4172ed29e84cb2093a86a976c519811c1" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt; across all data that have a tag value for &lt;code&gt;location&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b9b32753ac0751e8ac4b9bd73312cec4bc2a38" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt; for all data where the field value of &lt;code&gt;level description&lt;/code&gt; includes the word &lt;code&gt;between&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fdfdd771b3960ec3ddcdef07d0bf9afc4230a6" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt; for each &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag value&lt;/a&gt; of &lt;code&gt;location&lt;/code&gt; in the &lt;code&gt;h2o_feet&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;. InfluxDB returns results in two &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt;: one for each tag value of &lt;code&gt;location&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c143416ebddbb4bb6dda4dbe4d9509f414137c4e" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt; where the &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag value&lt;/a&gt; of &lt;code&gt;location&lt;/code&gt; includes an &lt;code&gt;m&lt;/code&gt; and &lt;code&gt;water_level&lt;/code&gt; is greater than three.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ad7420a49a8b3d62662b8743dcb8ba70877648d" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt;, grouping results into 12 minute time intervals, and offsetting the preset time boundaries by six minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab2454752231d7f98442e94fcccdb83f860d808" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt;, grouping results into 18 minute time intervals, and offsetting the preset time boundaries by -12 minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e329c5869939bda198141ddbd3503f98df1be280" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to calculate the average &lt;code&gt;water_level&lt;/code&gt;, grouping results into 18 minute time intervals, and offsetting the preset time boundaries by six minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c741ad8794eef3bcb60ad5c008c462908355ce1e" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to count the number of &lt;code&gt;water_level&lt;/code&gt; points with the &lt;a href=&quot;../../concepts/glossary/index#tag&quot;&gt;tag&lt;/a&gt;&lt;code&gt;location = coyote_creek&lt;/code&gt; and it group results into 12 minute intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff8cba7ad35a312ac58ace8055ea902340ec2ac" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to count the number of &lt;code&gt;water_level&lt;/code&gt; points. It groups results by the &lt;code&gt;location&lt;/code&gt; tag and into 12 minute intervals. Note that the time interval and the tag key are separated by a comma in the &lt;code&gt;GROUP BY&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda9a0a4138e627a472a170b8be56a2de8dd3bf5" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to return the distinct &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt; for every field key that contains the word &lt;code&gt;level&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61acbd278ef5846a7bd36a33555dffe98bfb9b2" translate="yes" xml:space="preserve">
          <source>The query uses an InfluxQL &lt;a href=&quot;../functions/index&quot;&gt;function&lt;/a&gt; to select the first value of &lt;code&gt;index&lt;/code&gt; for every tag that includes the letter &lt;code&gt;l&lt;/code&gt; in its tag key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a375f518cb9a4b9b6dac5a6fb736f40e14a726d2" translate="yes" xml:space="preserve">
          <source>The query writes its results a new &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;: &lt;code&gt;h2o_feet_copy_1&lt;/code&gt;. If you&amp;rsquo;re using the &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI&lt;/a&gt;, InfluxDB writes the data to the &lt;code&gt;USE&lt;/code&gt;d &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt; and the &lt;code&gt;DEFAULT&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;. If you&amp;rsquo;re using the &lt;a href=&quot;../../tools/api/index&quot;&gt;HTTP API&lt;/a&gt;, InfluxDB writes the data to the database and retention policy specified in the &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;rp&lt;/code&gt;&lt;a href=&quot;../../tools/api/index#query-string-parameters&quot;&gt;query string parameters&lt;/a&gt;. If you do not set the &lt;code&gt;rp&lt;/code&gt; query string parameter, the HTTP API automatically writes the data to the database&amp;rsquo;s &lt;code&gt;DEFAULT&lt;/code&gt; retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5fbfe0157b395a95ab30fcbeb09ac64462684f" translate="yes" xml:space="preserve">
          <source>The query writes its results to a new measurement: &lt;code&gt;h2o_feet_copy_2&lt;/code&gt;. InfluxDB writes the data to the &lt;code&gt;where_else&lt;/code&gt; database and to the &lt;code&gt;autogen&lt;/code&gt; retention policy. Note that both &lt;code&gt;where_else&lt;/code&gt; and &lt;code&gt;autogen&lt;/code&gt; must exist prior to running the &lt;code&gt;INTO&lt;/code&gt; query. See &lt;a href=&quot;../database_management/index&quot;&gt;Database Management&lt;/a&gt; for how to manage databases and retetion policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ef242630c56898eb3660bcc7e57266c7abe584" translate="yes" xml:space="preserve">
          <source>The query&amp;rsquo;s output is similar to the &lt;a href=&quot;../../concepts/glossary/index#line-protocol&quot;&gt;line protocol&lt;/a&gt; format. Everything before the first comma is the &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; name. Everything after the first comma is either a &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt; or a &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag value&lt;/a&gt;. The &lt;code&gt;NOAA_water_database&lt;/code&gt; has five different measurements and 14 different series.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ec60761e8f3fd94a888f17d67f1a572f278cf9" translate="yes" xml:space="preserve">
          <source>The rate at which InfluxDB checks to enforce a retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115b0a4ace346f8716dbff7bccaaba62c2cad654" translate="yes" xml:space="preserve">
          <source>The reason for splitting out defining the node from the implementation of the node is to make the API (i.e. a TICKscript) clean and easy to follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9380790c11582a965af16af18ec999700ef802" translate="yes" xml:space="preserve">
          <source>The recommended way to address this issue when using the TAR package is to do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3632372eb4685dcf84314e08c1cb321b61d6ca86" translate="yes" xml:space="preserve">
          <source>The reference documentation for InfluxQL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc83052c6ca008f325021c69f9f0bda4d384a86c" translate="yes" xml:space="preserve">
          <source>The reference documentation lists each node&amp;rsquo;s &lt;code&gt;Property&lt;/code&gt; and &lt;code&gt;Chaining&lt;/code&gt; methods along with examples and descriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35b7813cec9fac77c7f0baf6b059539591dd772" translate="yes" xml:space="preserve">
          <source>The relevant &lt;code&gt;SHOW&lt;/code&gt; queries include &lt;code&gt;SHOW RETENTION POLICIES&lt;/code&gt;, &lt;code&gt;SHOW SERIES&lt;/code&gt;, &lt;code&gt;SHOW MEASUREMENTS&lt;/code&gt;, &lt;code&gt;SHOW TAG KEYS&lt;/code&gt;, &lt;code&gt;SHOW TAG VALUES&lt;/code&gt;, and &lt;code&gt;SHOW FIELD KEYS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b4b78be04227df384a9b2f944b72648d53d6941" translate="yes" xml:space="preserve">
          <source>The relevant retention policy for your data. An empty string is equivalent to the database&amp;rsquo;s &lt;code&gt;DEFAULT&lt;/code&gt; retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1702cdf8eab8ad0b2593edbf0c72b991a134762" translate="yes" xml:space="preserve">
          <source>The relevant retention policy. An empty string is equivalent to the database&amp;rsquo;s &lt;code&gt;DEFAULT&lt;/code&gt; retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540d4a97d7ed4b2caeb2b4326e0178f6af7c71a8" translate="yes" xml:space="preserve">
          <source>The replication factor (&lt;code&gt;REPLICATION 1&lt;/code&gt;) is a required parameter but must always be set to 1 for single node instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc22ad917d54208ef79702ab79cbf0776b7f9eaf" translate="yes" xml:space="preserve">
          <source>The request includes two queries: &lt;code&gt;SELECT * FROM &quot;mymeas&quot;&lt;/code&gt; and &lt;code&gt;SELECT mean(&quot;myfield&quot;) FROM &quot;mymeas&quot;'&lt;/code&gt;. In the results, the system assigns a statement identifier to each query return. The first query&amp;rsquo;s result has a &lt;code&gt;statement_id&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt; and the second query&amp;rsquo;s result has a &lt;code&gt;statement_id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef83737001abc3f0beb30f6d67960fc7a1edbaa5" translate="yes" xml:space="preserve">
          <source>The request maps &lt;code&gt;$field_value&lt;/code&gt; to &lt;code&gt;30&lt;/code&gt;. The value &lt;code&gt;30&lt;/code&gt; does not require double quotes because &lt;code&gt;myfield&lt;/code&gt; stores numerical &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b49bb8da4712d63bd493eca21dca6ad63757ae5" translate="yes" xml:space="preserve">
          <source>The request maps &lt;code&gt;$tag_value&lt;/code&gt; to &lt;code&gt;12&lt;/code&gt; and &lt;code&gt;$field_value&lt;/code&gt; to &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bbb9bb505a72dcc8fd2b0546b93aa2cd796563" translate="yes" xml:space="preserve">
          <source>The request maps &lt;code&gt;$tag_value&lt;/code&gt; to &lt;code&gt;12&lt;/code&gt;. InfluxDB stores &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt; as strings they and must be double quoted in the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9704079758285cb85e8279f99d5754134cbb697f" translate="yes" xml:space="preserve">
          <source>The request returns once the recording is started and does not wait for it to finish. A recording ID is returned to later identify the recording.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9d0254f3881fcbcafb4b18f5d1f2139134bff5" translate="yes" xml:space="preserve">
          <source>The request returns once the replay is started and provides a replay ID and link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4648dc321182747a149a7d54c1ada01ea25c79" translate="yes" xml:space="preserve">
          <source>The request was a success, content is dependent on the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf3ee2380305ad01d1401e89c7dc6cc0552bc2a" translate="yes" xml:space="preserve">
          <source>The required flags for restoring a backup are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0eb07dbd50f8fe599484ed9f9887d0095556a4" translate="yes" xml:space="preserve">
          <source>The response body is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e83da1443e7681915a88c4c8ab3b8855af6ad90" translate="yes" xml:space="preserve">
          <source>The response shows that InfluxDB writes two points to the &lt;code&gt;newmeas&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;. Note that the system uses epoch 0 (&lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) as a &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#why-does-my-query-return-epoch-0-as-the-timestamp&quot;&gt;null timestamp equivalent&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6588b3cde7ab8b04ea83209588d33eb3ca63b88" translate="yes" xml:space="preserve">
          <source>The response shows that, over the past minute, &lt;code&gt;user1&lt;/code&gt; sent three requests to the &lt;code&gt;/write&lt;/code&gt; endpoint from &lt;code&gt;123.45.678.91&lt;/code&gt;, &lt;code&gt;user1&lt;/code&gt; sent 16 requests to the &lt;code&gt;/query&lt;/code&gt; endpoint from &lt;code&gt;000.0.0.0&lt;/code&gt;, and &lt;code&gt;user2&lt;/code&gt; sent four requests to the &lt;code&gt;/write&lt;/code&gt; endpoint from &lt;code&gt;xx.xx.xxx.xxx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853eef98578f4d41e38f259e2468d5f8ed687cc7" translate="yes" xml:space="preserve">
          <source>The response shows that, over the past ten seconds, the &lt;code&gt;user1&lt;/code&gt; user sent one request to the &lt;code&gt;/write&lt;/code&gt; endpoint and no requests to the &lt;code&gt;/query&lt;/code&gt; endpoint from the &lt;code&gt;123.45.678.91&lt;/code&gt; IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ae45bafc926604afa6ff8faa9f6a74a3199848" translate="yes" xml:space="preserve">
          <source>The response shows the number of points (&lt;code&gt;3&lt;/code&gt;) that InfluxDB writes to &lt;code&gt;all_my_averages&lt;/code&gt;. The timestamp in the response is meaningless; InfluxDB uses epoch 0 (&lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) as a null timestamp equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6999079d1ec4e129e296e79de77328c42cdb5c" translate="yes" xml:space="preserve">
          <source>The response shows the number of points (&lt;code&gt;5&lt;/code&gt;) that InfluxDB writes to the &lt;code&gt;where_else&lt;/code&gt; database and the &lt;code&gt;autogen&lt;/code&gt; retention policy. The timestamp in the response is meaningless; InfluxDB uses epoch 0 (&lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) as a null timestamp equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab9b9b4e77aab3807b169178abc52132ebc5690" translate="yes" xml:space="preserve">
          <source>The response shows the number of points (&lt;code&gt;7605&lt;/code&gt;) that InfluxDB writes to &lt;code&gt;h2o_feet_copy_1&lt;/code&gt;. The timestamp in the response is meaningless; InfluxDB uses epoch 0 (&lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) as a null timestamp equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a142a1627087f893ce4c07cb4516869afb3c0673" translate="yes" xml:space="preserve">
          <source>The response shows the number of points (&lt;code&gt;7605&lt;/code&gt;) that InfluxDB writes to &lt;code&gt;h2o_feet_copy_2&lt;/code&gt;. The timestamp in the response is meaningless; InfluxDB uses epoch 0 (&lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;) as a null timestamp equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3fa21079c85794d0694af3a9e971b7f6f5636ea" translate="yes" xml:space="preserve">
          <source>The result for each &lt;a href=&quot;../../concepts/glossary/index#timestamp&quot;&gt;timestamp&lt;/a&gt; represents a single 12 minute interval. The count for the first timestamp covers the raw data between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and up to, but not including, &lt;code&gt;2015-08-18T00:12:00Z&lt;/code&gt;. The count for the second timestamp covers the raw data between &lt;code&gt;2015-08-18T00:12:00Z&lt;/code&gt; and up to, but not including, &lt;code&gt;2015-08-18T00:24:00Z.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046e8ee896ed75cfa6a04427d71792f17d26f2b4" translate="yes" xml:space="preserve">
          <source>The result is that InfluxDB is not a full CRUD database but more like a CR-ud, prioritizing the performance of creating and reading data over update and destroy, and preventing some update and destroy behaviors to make create and read more performant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b79d4e1de2b66ebafd0f2fa794e4af7fe816aa" translate="yes" xml:space="preserve">
          <source>The results below show how InfluxDB maintains its preset time buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5b184746f79a8438bd52b0090041edb1ea8ff4" translate="yes" xml:space="preserve">
          <source>The retention policy name If empty any retention policy will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43bc7dcf526af377d520cc6eb6e68df0cbc05226" translate="yes" xml:space="preserve">
          <source>The routing key of the alert event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f88bc2491b3c1770b3b1273b1567109044ccf4a" translate="yes" xml:space="preserve">
          <source>The routing key to use for the alert. Defaults to the value in the configuration if empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6fe2770107590d06e13fbe44a8ec4e800554b8" translate="yes" xml:space="preserve">
          <source>The rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a7bc9ec679e38ccaea7dafaedca4881ce3c5b4" translate="yes" xml:space="preserve">
          <source>The same approach can be used to test other plugins, like the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/statsd&quot;&gt;inputs.statsd&lt;/a&gt; plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bbcee8d63bc8250dc02c9dcb94ad5a0b1c3a60" translate="yes" xml:space="preserve">
          <source>The same query in InfluxDB&amp;rsquo;s &lt;a href=&quot;../shell/index&quot;&gt;Command Line Interface&lt;/a&gt; (CLI) returns the following table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a2e35fdbecffd1889f5fd94eaaf5e2b9cd601e" translate="yes" xml:space="preserve">
          <source>The same thing can also be done as a batch task in Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bbd4d1e353483d82f4e4c846562716025839a3" translate="yes" xml:space="preserve">
          <source>The sample data are publicly available data from the &lt;a href=&quot;http://tidesandcurrents.noaa.gov/stations.html?type=Water+Levels&quot;&gt;National Oceanic and Atmospheric Administration&amp;rsquo;s (NOAA) Center for Operational Oceanographic Products and Services&lt;/a&gt;. The data include 15,258 observations of water levels (ft) collected every six seconds at two stations (Santa Monica, CA (ID 9410840) and Coyote Creek, CA (ID 9414575)) over the period from August 18, 2015 through September 18, 2015.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41129a78195a96e008add54fefd4f9388ae9d40d" translate="yes" xml:space="preserve">
          <source>The scopes requested by provider of web client (default: &lt;code&gt;user:email&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c947f540053d5f32e37e8662da42b213453540b6" translate="yes" xml:space="preserve">
          <source>The second alert message indicates that your idle CPU usage returned to an &lt;code&gt;OK&lt;/code&gt; level, that is, it returned to &lt;code&gt;80%&lt;/code&gt; or above. The specific field value that triggered the alert is &lt;code&gt;99.0981963931105&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e43122ff7a4aeaf0279e838c743e0332008e90" translate="yes" xml:space="preserve">
          <source>The second difference is that it is possible to define a method that sets fields on a pipeline Node and returns the same instance in order to create a &lt;code&gt;property method&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75824a7d731ba9f3150deb6a7d3ac43700df7e07" translate="yes" xml:space="preserve">
          <source>The second major feature with this release, are changes to the alert topic system. The previous release introduce this new system as a technical preview, with this release the alerting service has been simplified. Alert handlers now only ever have a single action and belong to a single topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfc7bd1c1fb1717cbc7ad93cba10ada491c37164" translate="yes" xml:space="preserve">
          <source>The second preset 12-minute time boundary begins at &lt;code&gt;00:12&lt;/code&gt; and ends just before &lt;code&gt;00:24&lt;/code&gt;. Only one raw point (&lt;code&gt;7.887&lt;/code&gt;) falls both within the query&amp;rsquo;s second &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and in that second time boundary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641863ea1ae660f3caaedfa1bbb81270a62104dd" translate="yes" xml:space="preserve">
          <source>The second preset 18-minute time boundary begins at &lt;code&gt;00:18&lt;/code&gt; and ends just before &lt;code&gt;00:36&lt;/code&gt;. Three raw points (&lt;code&gt;7.762&lt;/code&gt; and &lt;code&gt;7.635&lt;/code&gt; and &lt;code&gt;7.5&lt;/code&gt;) fall both within the second &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and in that second time boundary. In this case, the boundary time range and the interval&amp;rsquo;s time range are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9c4080978c8020854408686d3aee4dd7244873" translate="yes" xml:space="preserve">
          <source>The second query &lt;a href=&quot;../schema_exploration/index#show-tag-keys&quot;&gt;shows&lt;/a&gt; that InfluxDB preserved the &lt;code&gt;location&lt;/code&gt; tag as a tag in the &lt;code&gt;bottom_water_levels&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6a3fefe81a2deb3ba23e424922651a2e96f993" translate="yes" xml:space="preserve">
          <source>The second query &lt;a href=&quot;../schema_exploration/index#show-tag-keys&quot;&gt;shows&lt;/a&gt; that InfluxDB preserved the &lt;code&gt;location&lt;/code&gt; tag as a tag in the &lt;code&gt;top_water_levels&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ac2f2cc45b1759a604e36b8d28dbe9f0967367" translate="yes" xml:space="preserve">
          <source>The second query returns the timestamp for the maximum point that appears in the raw data. &lt;code&gt;MAX(*)&lt;/code&gt; returns one timestamp (the &lt;code&gt;h2o-feet&lt;/code&gt; measurement has only one numerical field) so the system does not overwrite the original timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80097fdaf250feeb337dfbc74c86d473cb00f71" translate="yes" xml:space="preserve">
          <source>The secret for signing tokens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62251d3649344625d958751abdc6b39094ec7a57" translate="yes" xml:space="preserve">
          <source>The separate private key location. If only the &lt;code&gt;https-certificate&lt;/code&gt; is specified, the httpd service will try to load the private key from the &lt;code&gt;https-certificate&lt;/code&gt; file. If a separate &lt;code&gt;https-private-key&lt;/code&gt; file is specified, the httpd service will load the private key from the &lt;code&gt;https-private-key&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890863cb39a07daccd14572bb4ec7b2db89fccad" translate="yes" xml:space="preserve">
          <source>The series in the example is defined by the retention policy (&lt;code&gt;autogen&lt;/code&gt;), the measurement (&lt;code&gt;census&lt;/code&gt;), and the tag set (&lt;code&gt;location = 1&lt;/code&gt;, &lt;code&gt;scientist = perpetua&lt;/code&gt;). The timestamp for the point is &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af523a60f07515a371fdb56e66dbbf0892383634" translate="yes" xml:space="preserve">
          <source>The server was unable to process the request, refer to the error for a reason. Repeating the request may result in a success if the server issue has been resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35437f2d226ba54291a70b422d0697a10e34615f" translate="yes" xml:space="preserve">
          <source>The service key to use for the alert. Defaults to the value in the configuration if empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad23f200cc04acae3d65ecf126ca175d8d0dcd0" translate="yes" xml:space="preserve">
          <source>The service key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b371bba474cb41df8adb8b6ddadb202109d2c669" translate="yes" xml:space="preserve">
          <source>The setup sends &lt;code&gt;Hey, check your CPU&lt;/code&gt; to the &lt;code&gt;my-alerts&lt;/code&gt; room associated with the &lt;code&gt;testest&lt;/code&gt; subdomain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a5aca7eb7a6d215135bf94c98315c50e894949" translate="yes" xml:space="preserve">
          <source>The setup sends &lt;code&gt;Hey, check your CPU&lt;/code&gt; to the &lt;code&gt;random&lt;/code&gt; room associated with the &lt;code&gt;testest&lt;/code&gt; subdomain. Notice that &lt;code&gt;.room()&lt;/code&gt; in the TICKscript overrides the &lt;code&gt;room&lt;/code&gt; setting in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429232dde0bce8430a2c625e3e7851bc6339b76f" translate="yes" xml:space="preserve">
          <source>The setup sends &lt;code&gt;Might want to check your CPU&lt;/code&gt; to the Telegram bot associated with the chat id &lt;code&gt;123456789&lt;/code&gt; and API access token &lt;code&gt;abcdefghi:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42d0db0be26752dea9535cdf368981ff8b0071e" translate="yes" xml:space="preserve">
          <source>The shard duration determines how much time each shard group spans. The specific interval is determined by the &lt;code&gt;SHARD DURATION&lt;/code&gt; of the retention policy. See &lt;a href=&quot;../../query_language/database_management/index#retention-policy-management&quot;&gt;Retention Policy management&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2c2ff12ab27a4db859cfb9b093c76373d46b34" translate="yes" xml:space="preserve">
          <source>The shard group duration is also configurable per RP. See &lt;a href=&quot;../../query_language/database_management/index#retention-policy-management&quot;&gt;Retention Policy Management&lt;/a&gt; for how to configure the shard group duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d75d52a0dbbac84e0871aeb498b03c8f06b60bb" translate="yes" xml:space="preserve">
          <source>The shared secret used for JWT signing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f27f3af022162f18f39ee8bb57c1741a28b68a1" translate="yes" xml:space="preserve">
          <source>The significance level or &lt;code&gt;alpha&lt;/code&gt; being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb1d26f5308b626b5ee7c361958b0e4e28adc5e" translate="yes" xml:space="preserve">
          <source>The simplest workaround is to begin writing the new data type to a different field in the same &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d853138183c2410d270da4061b0eb1aabd064efe" translate="yes" xml:space="preserve">
          <source>The six-minute offset interval shifts forward the preset boundary&amp;rsquo;s time range such that the boundary time ranges and the relevant &lt;code&gt;GROUP BY time()&lt;/code&gt; interval time ranges are always the same. With the offset, each interval performs the calculation on three points, and the timestamp returned matches both the start of the boundary time range and the start of the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe73748ffc238a4953b11815a015f45755b0c95" translate="yes" xml:space="preserve">
          <source>The six-minute offset interval shifts forward the preset boundary&amp;rsquo;s time range such that the preset boundary time range and the relevant &lt;code&gt;GROUP BY time()&lt;/code&gt; interval time range are the same. With the offset, the query returns a single result, and the timestamp returned matches both the start of the boundary time range and the start of the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d5bca7be1ced46751361cbe7ec629d379189bc" translate="yes" xml:space="preserve">
          <source>The size of the historical window to keep.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770b273c6ebbfbf1f0f22fb6db08a1b26c8db12c" translate="yes" xml:space="preserve">
          <source>The slack handler can be defined as either yaml or json, here we use yaml:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebea7fcdad26d132d81eb3e8986c3c4c6e2f787" translate="yes" xml:space="preserve">
          <source>The specific cron implementation is documented here: &lt;a href=&quot;https://github.com/gorhill/cronexpr#implementation&quot;&gt;https://github.com/gorhill/cronexpr#implementation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03deda22b99a6197af5903079197a17c468a9369" translate="yes" xml:space="preserve">
          <source>The specified configuration section/option does not exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76189e9091650aca2c050baf152f1ea46ddaa317" translate="yes" xml:space="preserve">
          <source>The specified store does not exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ceb56b2a683ae0f74997e8003955269d95d169" translate="yes" xml:space="preserve">
          <source>The start of the time range. The date-time string must be &lt;a href=&quot;../../query_language/data_exploration/index#absolute-time&quot;&gt;RFC3339 format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0626ec8a7e3ee3dcbbf7600e9e6d4d436a670a93" translate="yes" xml:space="preserve">
          <source>The state count will be added as an additional field to each point. If the expression evaluates as false, the value will be -1. If the expression generates an error during evaluation, the point is discarded, and does not affect the state count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03297c8ce89617fa64230c367ba6ec8431bd0e5e" translate="yes" xml:space="preserve">
          <source>The state duration will be added as an additional field to each point. If the expression evaluates as false, the value will be -1. If the expression generates an error during evaluation, the point is discarded, and does not affect the state duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629992f257fef2a7d906018d3bfac62200a9c464" translate="yes" xml:space="preserve">
          <source>The statistics returned by &lt;code&gt;SHOW STATS&lt;/code&gt; are stored in memory only, and are reset to zero when the node is restarted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8adb7b2574b48f6ab79d7be49d497549d545c4e" translate="yes" xml:space="preserve">
          <source>The stats are in groups according to the original data. Meaning that if the source node is grouped by the tag 'host' as an example, then the counts are output per host with the appropriate 'host' tag. Since its possible for groups to change when crossing a node only the emitted groups are considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dc6e47c0871fd123c971834f5eff5eb8590d79" translate="yes" xml:space="preserve">
          <source>The status icon depends on your host&amp;rsquo;s local time in UTC. Use the Network Time Protocol (NTP) to synchronize time between hosts; if hosts&amp;rsquo; clocks aren&amp;rsquo;t synchronized with NTP, the status icon can be inaccurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbccaa702512602a2c0a3e14ba1dae9bfe533136" translate="yes" xml:space="preserve">
          <source>The status icon is a high-level measure of your host&amp;rsquo;s health. If Chronograf has not received data from a host for the past minute, the status icon is red. If Chronograf has received data from a host within the past minute, the status icon is green.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab56afd1b71caa0efd3d9913fdac239658eb8a00" translate="yes" xml:space="preserve">
          <source>The status icon turns red when Chronograf has not received data from a host for the past minute. Chronograf uses data from Telegraf to perform that calculation. By default, Telegraf sends data in ten-second intervals; you can change that interval setting in Telegraf&amp;rsquo;s &lt;a href=&quot;../../../../telegraf/v1.3/administration/configuration/index&quot;&gt;configuration file&lt;/a&gt;. If you configure the setting to an interval that&amp;rsquo;s greater than one minute, Chronograf assumes that the host is not reporting data and changes the status icon to red.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5bd405483ff70c2ece4f2b06158701122c5b4c0" translate="yes" xml:space="preserve">
          <source>The steps below also assume that you have a working Slack instance and that you&amp;rsquo;ve configured it as an &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-kapacitor-event-handlers-are-supported-in-chronograf&quot;&gt;event handler&lt;/a&gt; in Chronograf. See the &lt;a href=&quot;../configure-kapacitor-event-handlers/index&quot;&gt;Configure Kapacitor Event Handlers&lt;/a&gt; guide for detailed configuration instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f096e02d38fdfe3102900c515f87a0352f7e0ce2" translate="yes" xml:space="preserve">
          <source>The storage engine ties a number of components together and provides the external interface for storing and querying series data. It is composed of a number of components that each serve a particular role:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2203ec11e80ddb1543f03a35c135d24896ca7514" translate="yes" xml:space="preserve">
          <source>The stream TICKscript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175b01ca6d1b46a45df012cb948aa341ef159147" translate="yes" xml:space="preserve">
          <source>The stress tool &lt;code&gt;influx_stress&lt;/code&gt; will be removed in a subsequent release. We recommend using &lt;a href=&quot;https://github.com/influxdata/influx-stress&quot;&gt;&lt;code&gt;influx-stress&lt;/code&gt;&lt;/a&gt; as a replacement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5cbff11badcd94dad9fe257ef6f5207723cef0" translate="yes" xml:space="preserve">
          <source>The subdomain of your Auth0 client. This is available on the configuration page for your Auth0 client. It should look something like &lt;a href=&quot;https://myauth0client.auth0.com&quot;&gt;https://myauth0client.auth0.com&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bddc5b7685ac6f65bdf25916b5240d9d4b273b" translate="yes" xml:space="preserve">
          <source>The subquery appears in the main query&amp;rsquo;s &lt;code&gt;FROM&lt;/code&gt; clause, and it requires surrounding parentheses. The subquery supports all clauses listed in this document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349386daa54d155f2dceafff80699e724895f784" translate="yes" xml:space="preserve">
          <source>The syntax for specifying microsecond duration units differs for &lt;a href=&quot;../../administration/config/index&quot;&gt;configuration&lt;/a&gt; settings, writes, queries, and setting the precision in InfluxDB&amp;rsquo;s &lt;a href=&quot;../../tools/shell/index&quot;&gt;Command Line Interface&lt;/a&gt; (CLI). The table below shows the supported syntax for each category:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37187d2363ab9df26fe9df9399b66a29d016e37d" translate="yes" xml:space="preserve">
          <source>The syntax is specified using Extended Backus-Naur Form (&amp;ldquo;EBNF&amp;rdquo;). EBNF is the same notation used in the &lt;a href=&quot;http://golang.org&quot;&gt;Go&lt;/a&gt; programming language specification, which can be found &lt;a href=&quot;https://golang.org/ref/spec&quot;&gt;here&lt;/a&gt;. Not so coincidentally, InfluxDB is written in Go.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ed708d548cf803e8ef720e8b8921ce4ac81ed9" translate="yes" xml:space="preserve">
          <source>The syntax is specified using Extended Backus-Naur Form (&amp;ldquo;EBNF&amp;rdquo;). EBNF is the same notation used in the &lt;a href=&quot;http://golang.org/&quot;&gt;Go&lt;/a&gt; programming language specification, which can be found &lt;a href=&quot;https://golang.org/ref/spec&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785da0102fc68dd3bac40ba5b98c74ffc11bb4d7" translate="yes" xml:space="preserve">
          <source>The system does not have access to the meta store when exporting TSM shards. As such, it always creates the &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt; with infinite duration and replication factor of 1. End users may want to change this prior to re-importing if they are importing to a cluster or want a different duration for retention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57fee548a2c1ac525518fd51f592740c40b5400b" translate="yes" xml:space="preserve">
          <source>The system has internal defaults for every configuration file setting. View the default configuration settings with the &lt;code&gt;influxd config&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d2014ccce445d27a728763413ce637a19984d0" translate="yes" xml:space="preserve">
          <source>The system is overloaded or significantly impaired. Can occur if a user attempts to write to a retention policy that does not exist. The returned JSON offers further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb8eb4287fbc340d9d9ecc667c352c08d0abedd" translate="yes" xml:space="preserve">
          <source>The system returns a parsing error if a subquery includes multiple &lt;code&gt;SELECT&lt;/code&gt; statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53b971ab4932d3bd0d147ee75d868e348306b0a" translate="yes" xml:space="preserve">
          <source>The system writes a point where the measurement is &lt;code&gt;&quot;measurement with quo⚡️es and emoji&quot;&lt;/code&gt;, the tag key is &lt;code&gt;tag key with sp🚀ces&lt;/code&gt;, the tag value is &lt;code&gt;tag,value,with&quot;commas&quot;&lt;/code&gt;, the field key is &lt;code&gt;field_k\ey&lt;/code&gt; and the field value is &lt;code&gt;string field value, only &quot; need be esc🍭ped&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f1b60ef303e17b1e6628014815eb2b5eb8f2b3" translate="yes" xml:space="preserve">
          <source>The table below is a (very) simple example of a table called &lt;code&gt;foodships&lt;/code&gt; in an SQL database with the unindexed column &lt;code&gt;#_foodships&lt;/code&gt; and the indexed columns &lt;code&gt;park_id&lt;/code&gt;, &lt;code&gt;planet&lt;/code&gt;, and &lt;code&gt;time&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4631c3eb0b2dcfa75092b1b58b26d0d20c6c2e0" translate="yes" xml:space="preserve">
          <source>The table below shows the preset time boundary, the relevant &lt;code&gt;GROUP BY time()&lt;/code&gt; interval, the points included, and the returned timestamp for each &lt;code&gt;GROUP BY time()&lt;/code&gt; interval in the results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84ecb7e24cc73915bdda2415b460c405eb896b6" translate="yes" xml:space="preserve">
          <source>The task reads and writes data over the socket connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdb6142eac5284bd06710e1ca1914f45d019ae0" translate="yes" xml:space="preserve">
          <source>The task type: &lt;code&gt;stream&lt;/code&gt; or &lt;code&gt;batch&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b548d10b54b54d3e57f8946d1c91c69f386dcad1" translate="yes" xml:space="preserve">
          <source>The temperature of the ambient air (the air around the printer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3395d05f798d93604ae19b9292336d7d6fa8a26c" translate="yes" xml:space="preserve">
          <source>The temperature of the bed (where the part is being printed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7140e5ae15c87862f35f387ccf209f4cd435597" translate="yes" xml:space="preserve">
          <source>The temperature of the hot end (where the plastic is melted before being printed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603f6bcbc14d7734acf76e4d3b68b2aad524c79b" translate="yes" xml:space="preserve">
          <source>The template type: &lt;code&gt;stream&lt;/code&gt; or &lt;code&gt;batch&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb6893f530f118e3a67cb85a2eec3ac93f0da6a" translate="yes" xml:space="preserve">
          <source>The temporary cache for recently written points. To reduce the frequency with which the permanent storage files are accessed, InfluxDB caches new points in the WAL until their total size or age triggers a flush to more permanent storage. This allows for efficient batching of the writes into the TSM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5105d8910d6060eef0c0af9c7827f7e72b8d8a31" translate="yes" xml:space="preserve">
          <source>The text based format for writing points to InfluxDB. See &lt;a href=&quot;../../write_protocols/index&quot;&gt;Line Protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03965b2246526ad51ba8579d359e8e5004479fc" translate="yes" xml:space="preserve">
          <source>The time boundaries and returned timestamps for the query &lt;strong&gt;with&lt;/strong&gt; the &lt;code&gt;offset_interval&lt;/code&gt; adhere to the offset time boundaries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977ba3a9f95a1048b6bdaa7ee3cf8f45f7587d07" translate="yes" xml:space="preserve">
          <source>The time boundaries and returned timestamps for the query &lt;strong&gt;without&lt;/strong&gt; the &lt;code&gt;offset_interval&lt;/code&gt; adhere to InfluxDB&amp;rsquo;s preset time boundaries. Let&amp;rsquo;s first examine the results without the offset:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dffc38e709f4d3edb9a91f7c672ac430f218bca" translate="yes" xml:space="preserve">
          <source>The time boundaries and returned timestamps for the query &lt;strong&gt;without&lt;/strong&gt; the &lt;code&gt;offset_interval&lt;/code&gt; adhere to InfluxDB&amp;rsquo;s preset time boundaries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68c094dff1b27dfee5c5a2747d63cc788992f4e" translate="yes" xml:space="preserve">
          <source>The time intervals returned by &lt;code&gt;GROUP BY time()&lt;/code&gt; queries conform to InfluxDB&amp;rsquo;s preset time buckets or to the user-specified &lt;a href=&quot;../../query_language/data_exploration/index#advanced-group-by-time-syntax&quot;&gt;offset interval&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a239d2e571d70480907f0f1e3f404a79b2b8e8" translate="yes" xml:space="preserve">
          <source>The time unit of the resulting derivative value. Default: 1s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19e28603808e3fa25145fb234752a9d37eb4a9d" translate="yes" xml:space="preserve">
          <source>The time unit of the resulting duration value. Default: 1s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af893db9227fd884d3fd98062fb7cb5d25fbc989" translate="yes" xml:space="preserve">
          <source>The time within which a write request must complete on the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113da35e23ecff22c1f8d067ddd57df0eef45fde" translate="yes" xml:space="preserve">
          <source>The timestamp for the data point. InfluxDB accepts one timestamp per point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b372a2f14e1139042e34b1f476b4556fa754ee3" translate="yes" xml:space="preserve">
          <source>The timestamps and values are compressed and stored separately using encodings dependent on the data type and its shape. Storing them independently allows timestamp encoding to be used for all timestamps, while allowing different encodings for different field types. For example, some points may be able to use run-length encoding whereas other may not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0684a27a7884eea095d2b79b10d7b9a6bb728ec" translate="yes" xml:space="preserve">
          <source>The timestamps in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement occur at six-minute intervals. If the query sets the &lt;code&gt;unit&lt;/code&gt; option to one hour, InfluxDB returns &lt;code&gt;0&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61977fd3a3e5917c74377e0e078798a730097e8c" translate="yes" xml:space="preserve">
          <source>The timestamps returned by &lt;a href=&quot;#selectors&quot;&gt;selector functions&lt;/a&gt; depend on the number of functions in the query and on the other clauses in the query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164510991481fd520bb322ff43a03173fcca7d1f" translate="yes" xml:space="preserve">
          <source>The top-level config &lt;code&gt;bind-address&lt;/code&gt; now defaults to &lt;code&gt;localhost:8088&lt;/code&gt;. The previous default was just &lt;code&gt;:8088&lt;/code&gt;, causing the backup and restore port to be bound on all available interfaces (i.e. including interfaces on the public internet).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626edefb6a75e635353b8553d1a796a5a8433b72" translate="yes" xml:space="preserve">
          <source>The total duration (in hours) of cookie life for authentication (default: &lt;code&gt;720h&lt;/code&gt;). Authentication expires on browser close if &lt;code&gt;--auth-duration&lt;/code&gt; is set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ceb42be6bdb7c8f4d5b05601b7221eb2232ea9b" translate="yes" xml:space="preserve">
          <source>The two biggest advantages that LevelDB had for us were high write throughput and built in compression. However, as we learned more about what people needed with time series data, we encountered a few insurmountable challenges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfed231aad892eb927f07b62ff7624c626e802f6" translate="yes" xml:space="preserve">
          <source>The type of shard index to use for new shards. The default is an in-memory index that is recreated at startup. A value of &lt;code&gt;tsi1&lt;/code&gt; will use a disk based index that supports higher cardinality datasets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0d3794e3dbdd63c1b40ae02b16f1aee2006ae3" translate="yes" xml:space="preserve">
          <source>The use of mathematical operators inside of function calls is currently unsupported. Note that InfluxDB only allows functions in the &lt;code&gt;SELECT&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924ba3c9d6d41a6c34d4d37bdf74ca627dee817f" translate="yes" xml:space="preserve">
          <source>The user value must be wrapped in double quotes if starts with a digit, is an InfluxQL keyword, contains a hyphen and or includes any special characters, for example: &lt;code&gt;!@#$%^&amp;amp;*()-&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afc956f5aa416e37d209ce0702449878f1b866c" translate="yes" xml:space="preserve">
          <source>The username for your Kapacitor instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea93359c4bb83947622d03780f671eab8888e463" translate="yes" xml:space="preserve">
          <source>The value of the field &lt;code&gt;value&lt;/code&gt; in the above example will be the string &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on the condition passed as the first argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358d105ef06e843690a79281ac60c7954b3e48e8" translate="yes" xml:space="preserve">
          <source>The value part of the key-value pair that makes up a field. Field values are the actual data; they can be strings, floats, integers, or booleans. A field value is always associated with a timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4716f3ce01eddb962f3d4a08fc889c19a0a5fb8a" translate="yes" xml:space="preserve">
          <source>The value part of the key-value pair that makes up a tag. Tag values are strings and they store metadata. Tag values are indexed so queries on tag values are performant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740322c097cfd1006407170a3e6907c7569745c1" translate="yes" xml:space="preserve">
          <source>The vars object has the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134ca1e859840408501f79a1ad496158baab30ad" translate="yes" xml:space="preserve">
          <source>The vast majority of writes are for data with very recent timestamps and the data is added in time ascending order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2da84722d5ce6ad8fb9090abc97b80169fdc42" translate="yes" xml:space="preserve">
          <source>The volume of data means that the write throughput can be very high. We regularly get requests for setups than can handle hundreds of thousands of writes per second. Some larger companies will only consider systems that can handle millions of writes per second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371650653fcd46ac17cc15bbd016cc07abdcab01" translate="yes" xml:space="preserve">
          <source>The workload of time series data is quite different from normal database workloads. There are a number of factors that conspire to make it very difficult to scale and remain performant:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1434b68befd182f8b5f90d859d2b6581bc1b2f2e" translate="yes" xml:space="preserve">
          <source>The write consistency to use when writing the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c491ece27a207f8eeab6261224f0759dcdc43743" translate="yes" xml:space="preserve">
          <source>Then to load Kapacitor now:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66146b3757e12707dda4aad5bc65787e7dda6276" translate="yes" xml:space="preserve">
          <source>Then, install and start the InfluxDB service:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fc4b7fe4cd2739de77a94a7216ac5aa5fee747" translate="yes" xml:space="preserve">
          <source>Then, install and start the Telegraf service:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04c27963df1ba1836d06df1e8a8d25b583875d6" translate="yes" xml:space="preserve">
          <source>There a number of ways to identify the version of InfluxDB that you&amp;rsquo;re using:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b885d1defcb4c264e848d4bffb21d368e56a6465" translate="yes" xml:space="preserve">
          <source>There are RPM packages provided by openSUSE Build Service for SUSE Linux users:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b010567d7d7f5fdf055bc743e2ce1e1e053976ae" translate="yes" xml:space="preserve">
          <source>There are a few reasons to use Kapacitor instead of CQs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c47a8d7d73b73cf9cd6c1f3956fce772012b4d" translate="yes" xml:space="preserve">
          <source>There are a few things that we have left as exercises to the reader:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a73ddba11393438d2aad28a3854a703ba9558f5" translate="yes" xml:space="preserve">
          <source>There are a few use cases where using CQs almost always makes sense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7bb5bf7a46010d6b37b335eafb10b5a4ed7221a" translate="yes" xml:space="preserve">
          <source>There are many helper iterators that let us build queries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7b25cd6b4ea185484ddd8d81181173ddff1e2c" translate="yes" xml:space="preserve">
          <source>There are many more options available, &lt;a href=&quot;https://github.com/influxdata/influxdb/tree/master/services/graphite#templates&quot;&gt;More details can be found here&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1100006105effa0c0bb7b3cf1862d84528cf5d3b" translate="yes" xml:space="preserve">
          <source>There are many ways to write data into InfluxDB including the &lt;a href=&quot;../../tools/shell/index&quot;&gt;command line interface&lt;/a&gt;, &lt;a href=&quot;../../tools/api_client_libraries/index&quot;&gt;client libraries&lt;/a&gt; and plugins for common data formats such as &lt;a href=&quot;../../tools/graphite/index&quot;&gt;Graphite&lt;/a&gt;. Here we&amp;rsquo;ll show you how to create a database and write data to it using the built-in HTTP API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a22a640035105a203a93d000715d7c5d281417" translate="yes" xml:space="preserve">
          <source>There are no additional configuration options for InfluxDB line-protocol. The metrics are parsed directly into Telegraf metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701a66d8372dc6065c33162b9fc551e2dc35657d" translate="yes" xml:space="preserve">
          <source>There are no additional configuration options for InfluxDB line-protocol. The metrics are serialized directly into InfluxDB line-protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5cacd6a86d70efc44f02c5092095b38c980372" translate="yes" xml:space="preserve">
          <source>There are no additional configuration options for Nagios line-protocol. The metrics are parsed directly into Telegraf metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf59fb3520e58c31ff5f6f81d6271910cd5d4169" translate="yes" xml:space="preserve">
          <source>There are no generic configuration options available for all outputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049f12b9d7dedd10afe1e36bc7c44467831cfffb" translate="yes" xml:space="preserve">
          <source>There are several arguments you can pass into &lt;code&gt;influx&lt;/code&gt; when starting. List them with &lt;code&gt;$ influx --help&lt;/code&gt;. The list below offers a brief discussion of each option. We provide detailed information on &lt;code&gt;-execute&lt;/code&gt;, &lt;code&gt;-format&lt;/code&gt;, and &lt;code&gt;-import&lt;/code&gt; at the end of this section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9af3c9d5ebb61ce36e58da133600fcc60c9e520" translate="yes" xml:space="preserve">
          <source>There are several possible explanations for an inaccurate red status icon:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c14611c5bbdeb146b2cb7f13b92ff7763fb547d" translate="yes" xml:space="preserve">
          <source>There are several possible explanations for why a query returns no data or partial data. We list some of the most frequent cases below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840451d02e0084fab86bae792afe402fc6ee610c" translate="yes" xml:space="preserve">
          <source>There are several ways to write data to InfluxDB. See the &lt;a href=&quot;../../tools/index&quot;&gt;Tools&lt;/a&gt; section for more on the &lt;a href=&quot;../../tools/api/index#write&quot;&gt;HTTP API&lt;/a&gt;, the &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI&lt;/a&gt;, and the available Service Plugins ( &lt;a href=&quot;../../tools/udp/index&quot;&gt;UDP&lt;/a&gt;, &lt;a href=&quot;../../tools/graphite/index&quot;&gt;Graphite&lt;/a&gt;, &lt;a href=&quot;../../tools/collectd/index&quot;&gt;CollectD&lt;/a&gt;, and &lt;a href=&quot;../../tools/opentsdb/index&quot;&gt;OpenTSDB&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e5454c4a79fad0b029610c2d84a9311165720e" translate="yes" xml:space="preserve">
          <source>There are three methods for recording data with Kapacitor: To create a recording make a POST request to the &lt;code&gt;/kapacitor/v1/recordings/METHOD&lt;/code&gt; endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99a29ae3cdf43ce28c4f739fa78778f91e5e2b4" translate="yes" xml:space="preserve">
          <source>There are three options for authenticating with the &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3a0ad7f052f0012c6863b7cdc512912c9509d6" translate="yes" xml:space="preserve">
          <source>There are three temperatures when it comes to 3D printing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81564dbe1535e8a9a5f68a157ff30f3650e2f21" translate="yes" xml:space="preserve">
          <source>There are two kinds of users in InfluxDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c1a5d184bdc3b9c931c9e1edd6a7e0240ecac1" translate="yes" xml:space="preserve">
          <source>There are two options for authenticating with the &lt;a href=&quot;../../tools/api/index&quot;&gt;HTTP API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cf5fa7d7107fee64f205433cbb9a0e99ac4a78" translate="yes" xml:space="preserve">
          <source>There are two ways to launch InfluxDB with your configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb51f52d1c00bafc5eea00f879c4bc141cd4177b" translate="yes" xml:space="preserve">
          <source>There are two ways to write string literals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f3ab37b693f3db3938496f163fae5139570a07" translate="yes" xml:space="preserve">
          <source>There is an &lt;a href=&quot;https://github.com/influxdata/influxdb/issues/7571&quot;&gt;ongoing issue&lt;/a&gt; that requires queries with &lt;code&gt;LIMIT&lt;/code&gt; and &lt;code&gt;SLIMIT&lt;/code&gt; to include &lt;code&gt;GROUP BY *&lt;/code&gt;. Note that the &lt;code&gt;LIMIT&lt;/code&gt; and &lt;code&gt;SLIMIT&lt;/code&gt; clauses must appear in the order outlined in the syntax above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024a27669883b01688da355fd3c73db58d86cdff" translate="yes" xml:space="preserve">
          <source>There is an &lt;a href=&quot;https://github.com/influxdata/influxdb/issues/7571&quot;&gt;ongoing issue&lt;/a&gt; that requires queries with &lt;code&gt;SLIMIT&lt;/code&gt; to include &lt;code&gt;GROUP BY *&lt;/code&gt;. Note that the &lt;code&gt;SLIMIT&lt;/code&gt; clause must appear in the order outlined in the syntax above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c5a228d67075ba6a4df9e111cb37167234d77e" translate="yes" xml:space="preserve">
          <source>There is limited support for using InfluxQL functions against timestamp values. The function &lt;a href=&quot;../../query_language/functions/index#elapsed&quot;&gt;ELAPSED()&lt;/a&gt; returns the difference between subsequent timestamps in a single field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6672667ee1be1a77bea75d86a30e67b417989d67" translate="yes" xml:space="preserve">
          <source>There is no bitwise-not operator, because the results you expect depend on the width of your bitfield. InfluxQL does not know how wide your bitfield is, so cannot implement a suitable bitwise-not operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edbc5bc738195503d9bfdb9aae07f35fd2cb2b9" translate="yes" xml:space="preserve">
          <source>There may be some false positives as well, but, since we want this to work with real data (not our nice clean fake data), it doesn&amp;rsquo;t help much to tweak it at this point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf390ea24e79d1963d739d5c0df0800b2fb1d924" translate="yes" xml:space="preserve">
          <source>There shouldn&amp;rsquo;t be any alerts triggering just yet. Next, start a few while loops to add some load:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ae5b4578e3767a8ea390793e15547badce7d66" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s no need to edit InfluxDB&amp;rsquo;s default &lt;a href=&quot;../../../../influxdb/v1.3/administration/config/index&quot;&gt;configuration&lt;/a&gt; for the purposes of this guide. Just start InfluxDB with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619a9eb4c0b9f5016f0f707709d76dbfb60fbc88" translate="yes" xml:space="preserve">
          <source>These certificates provide cryptographic security to HTTPS requests and allow clients to verify the identity of the InfluxDB server. Wildcard certificates can be used across multiple InfluxDB instances on different servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46931d3d3eddd5ba00d9785c246e95d8c72cbbbd" translate="yes" xml:space="preserve">
          <source>These certificates provide cryptographic security to HTTPS requests and allow clients to verify the identity of the InfluxDB server. With this certificate option, every InfluxDB instance requires a unique single domain certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49afd470f75bc417e449d3c593e3fcd19e7b7b83" translate="yes" xml:space="preserve">
          <source>These four parts are easily defined when using InfluxDB line-protocol as a data format. But there are other data formats that users may want to use which require more advanced configuration to create usable Telegraf metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fbb50746142790a7410e605ca0849f06e784a7" translate="yes" xml:space="preserve">
          <source>These iterators are created through the &lt;code&gt;IteratorCreator&lt;/code&gt; interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb8f7e32a151b2cfc4b911c43b9ac7b0ee2586b" translate="yes" xml:space="preserve">
          <source>These lambda expressions are stateful, meaning that each time they are evaluated internal state can change and will persist until the next evaluation. This may seem odd as part of an expression language but it has a powerful use case. You can define a function within the language that is essentially a online/streaming algorithm and with each call the function state is updated. For example the built-in function &lt;code&gt;sigma&lt;/code&gt; that calculates a running mean and standard deviation and returns the number of standard deviations the current data point is away from the mean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe904d1a0cc0d7b28a72537a6ed3663ccecaf41" translate="yes" xml:space="preserve">
          <source>These plugins sit in-between Input &amp;amp; Output plugins, aggregating and processing metrics as they pass through Telegraf:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26146270f56ad2824ab2423d20a1dd4d4f6a5641" translate="yes" xml:space="preserve">
          <source>Things to note about &lt;code&gt;-import&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7a040d0496c8cc4aa77e849367be1346839ee1" translate="yes" xml:space="preserve">
          <source>Things to note about &lt;code&gt;DELETE&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f25bd60cb8b6250acd41970321b77fbb1247b8" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;main:alert_cpu:alert5&lt;/code&gt; topic represents an auto-generated topic from a task that has defined handlers explicitly in the TICKscript. Anonymous handlers cannot be listed or modified via the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc722b4e2a51364fbd625214021ef8cf9e62c54" translate="yes" xml:space="preserve">
          <source>This Python script has two Python dependencies: &lt;code&gt;requests&lt;/code&gt; and &lt;code&gt;numpy&lt;/code&gt;. They can easily be installed via &lt;code&gt;pip&lt;/code&gt; or your package manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08565effd446bf965176c4c24b041db497318433" translate="yes" xml:space="preserve">
          <source>This TICKscript does the same thing as the earlier stream task, but as a batch task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54026cfac8df76648e5acdbfc0ae131d9ca354a" translate="yes" xml:space="preserve">
          <source>This allows you to still access the API to fix any unwanted configuration without applying that configuration during statup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ceae04d2ecfda96cc1e4c04628a2b41a78183e9" translate="yes" xml:space="preserve">
          <source>This applies to Cron schedules as well. If the cron specifies to run every Sunday at 1 AM and the Offset is 1 hour. Then at 1 AM on Sunday the data from 12 AM will be queried.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d344fb98efe9497b56f91966f1d6b6b25d0edd" translate="yes" xml:space="preserve">
          <source>This behavior is intentional and prevents the CQ from missing data between execution times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5f28fee7645c5566d4a548bdfc77178fbf6d66" translate="yes" xml:space="preserve">
          <source>This composition also lends itself well to aggregation. For example, a statement such as this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9ca0f6661175ee28b20b00c02785ce5a9f4ac3" translate="yes" xml:space="preserve">
          <source>This configuration tells Kapacitor to listen on port &lt;code&gt;9100&lt;/code&gt; for UDP packets in the line protocol format. It will scope in incoming data to be in the &lt;code&gt;game.autogen&lt;/code&gt; database and retention policy. Start Kapacitor running with that added to the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb58129f4de05a0be478a14e6558b18631683d3" translate="yes" xml:space="preserve">
          <source>This document covers setting up and managing authentication and authorization in InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad712c5f29178daeca0020b7c5aa9b2ee33ed35e" translate="yes" xml:space="preserve">
          <source>This document offers step-by-step instructions for setting up event handlers with Kapacitor, including the relevant configuration options and &lt;a href=&quot;../../tick/index&quot;&gt;TICKscript&lt;/a&gt; syntax. Currently, this document doesn&amp;rsquo;t cover every supported event handler, but we will continue to add content to this page over time. For a complete list of the supported event handlers and for additional information, please see the &lt;a href=&quot;../../nodes/alert_node/index&quot;&gt;event handler reference documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9099c7e6326cfa7aea2705512ab54af59defd02b" translate="yes" xml:space="preserve">
          <source>This document uses publicly available data from the &lt;a href=&quot;http://tidesandcurrents.noaa.gov/stations.html?type=Water+Levels&quot;&gt;National Oceanic and Atmospheric Administration&amp;rsquo;s (NOAA) Center for Operational Oceanographic Products and Services&lt;/a&gt;. See the &lt;a href=&quot;../data_download/index&quot;&gt;Sample Data&lt;/a&gt; page to download the data and follow along with the example queries in the sections below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c24634cd4c6415572f816daa64ede2e25d8259a" translate="yes" xml:space="preserve">
          <source>This example assumes that you are using two SSD volumes and that you have mounted them appropriately. This example also assumes that each of those volumes is mounted at &lt;code&gt;/mnt/influx&lt;/code&gt; and &lt;code&gt;/mnt/db&lt;/code&gt;. For more information on how to do that see the Amazon documentation on how to &lt;a href=&quot;http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html&quot;&gt;Add a Volume to Your Instance&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4a785dac041355a8143861980eaca791598d31" translate="yes" xml:space="preserve">
          <source>This example is a continuation of the scenario outlined in &lt;a href=&quot;#common-issues-with-basic-syntax&quot;&gt;Common Issues with Basic Syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a98814535f79ddba5c45fad9f331678062a44e6" translate="yes" xml:space="preserve">
          <source>This example is pretty involved, so here&amp;rsquo;s the clause-by-clause breakdown:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d332681b9901a2e8383d62783afed24722323a56" translate="yes" xml:space="preserve">
          <source>This example will walk you through setting up a simple cpu threshold alert that sends alerts to Slack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6270d4c293d980c736e7a7d1ff0c8768587a678b" translate="yes" xml:space="preserve">
          <source>This guide assumes that you&amp;rsquo;ve already downloaded and installed each component of the TICK stack (Telegraf, InfluxDB, Chronograf, and Kapacitor). To follow along, the Telegraf instance must be configured to collect data with the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/system&quot;&gt;system statistics&lt;/a&gt; input plugin and write data to your InfluxDB instance. The steps below also assume that you&amp;rsquo;ve already &lt;a href=&quot;../../introduction/getting-started/index#4-connect-chronograf-to-kapacitor&quot;&gt;configured your Kapacitor instance in Chronograf&lt;/a&gt;. The &lt;a href=&quot;../../introduction/getting-started/index&quot;&gt;Getting Started&lt;/a&gt; guide offers step-by-step instructions for each of those requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c3aefdfeb063eeff45e5656243d2069c695c5c" translate="yes" xml:space="preserve">
          <source>This guide assumes you have a working Chronograf instance that&amp;rsquo;s connected to an InfluxDB source. It uses data from Telegraf&amp;rsquo;s &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/system&quot;&gt;system statistics&lt;/a&gt; input plugin. See the &lt;a href=&quot;../../introduction/getting-started/index&quot;&gt;Getting Started&lt;/a&gt; guide for step-by-step installation and configuration instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6633fff4f9968c46e94073d35b8a5af0e5116707" translate="yes" xml:space="preserve">
          <source>This guide describes how to enable HTTPS with InfluxDB. Setting up HTTPS secures the communication between clients and the InfluxDB server, and, in some cases, HTTPS verifies the authenticity of the InfluxDB server to clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4403210772833a84c998b6467bd8212b1d061f1c" translate="yes" xml:space="preserve">
          <source>This guide offers general hardware recommendations for InfluxDB and addresses some frequently asked questions about hardware sizing. The recommendations are only for the &lt;a href=&quot;../../concepts/storage_engine/index#the-new-influxdb-storage-engine-from-lsm-tree-to-b-tree-and-back-again-to-create-the-time-structured-merge-tree&quot;&gt;Time Structured Merge&lt;/a&gt; tree (&lt;code&gt;TSM&lt;/code&gt;) storage engine, the only storage engine available with InfluxDB 1.3. Users running older versions of InfluxDB with &lt;a href=&quot;https://docs.influxdata.com/influxdb/v0.10/administration/upgrading/#convert-b1-and-bz1-shards-to-tsm1&quot;&gt;unconverted&lt;/a&gt;&lt;code&gt;b1&lt;/code&gt; or &lt;code&gt;bz1&lt;/code&gt; shards may have different performance characteristics. See the &lt;a href=&quot;https://docs.influxdata.com/influxdb/v0.9/guides/hardware_sizing/&quot;&gt;InfluxDB 0.9 sizing guide&lt;/a&gt; for more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aaf78848ba5ae3ddb38da16b820e79e9b01ac3e" translate="yes" xml:space="preserve">
          <source>This guide offers step-by-step instructions for creating a Kapacitor alert in Chronograf. By the end of this guide, you&amp;rsquo;ll have an alert rule that sends a message to an existing &lt;a href=&quot;https://slack.com/&quot;&gt;Slack&lt;/a&gt; channel whenever your idle CPU usage crosses the 80% threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2565d12c26fe5652b29abf95f951ed7ca7d9bad" translate="yes" xml:space="preserve">
          <source>This guide offers step-by-step instructions for setting up event handlers in Chronograf. Currently, the guide doesn&amp;rsquo;t cover every supported event handler, but we will continue to add content to this page over time. See the FAQ page for a complete list of the supported &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-kapacitor-event-handlers-are-supported-in-chronograf&quot;&gt;event handlers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b6b3e185afd5fd0213ae3c4f49e8b2c1e064eb" translate="yes" xml:space="preserve">
          <source>This guide walks through getting set up on an Ubuntu 16.04 installation, and is applicable to most flavors of Linux. Chronograf and the other components of the TICK stack are supported on a large number of operating systems and hardware architectures. Check out the &lt;a href=&quot;https://www.influxdata.com/downloads/&quot;&gt;downloads&lt;/a&gt; page for links to the binaries of your choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0c96ff4e91943ad4ec1815fe83db50f8411c4e" translate="yes" xml:space="preserve">
          <source>This guide walks you through the download, installation, and configuration processes, and it shows how to use Telegraf to get data into InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdff7c2eb94039c25bce01025fff3aaa462b1c1" translate="yes" xml:space="preserve">
          <source>This guide will not go into detail about the syntax for creating and managing CQs and RPs. If you&amp;rsquo;re new to both concepts, we recommend looking over the detailed &lt;a href=&quot;../../query_language/continuous_queries/index&quot;&gt;CQ documentation&lt;/a&gt; and &lt;a href=&quot;../../query_language/database_management/index#retention-policy-management&quot;&gt;RP documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c36c67c07daf0f09dc124ac687612bdc87d06f" translate="yes" xml:space="preserve">
          <source>This guide will show you how to capture Telegraf&amp;rsquo;s output, submit sample metrics, and see how Telegraf formats and emits points to its output plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23dc831f35c5627493535f14e471da81d73af16f" translate="yes" xml:space="preserve">
          <source>This guide will walk you through how to process stream and batch data and teaches you the basics of using and running a Kapacitor daemon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d0d7e643580fe16a353f3cbf5224c1b2fdfa8f" translate="yes" xml:space="preserve">
          <source>This has been addressed &amp;ndash; but this change may impact existing continuous queries which process data in time ranges larger than 1d. Additional details [can be found here].(&lt;a href=&quot;https://github.com/influxdata/influxdb/issues/8569&quot;&gt;https://github.com/influxdata/influxdb/issues/8569&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be9af846d19efff39803dff051caf9ee2937f06" translate="yes" xml:space="preserve">
          <source>This is a &lt;a href=&quot;https://github.com/influxdata/chronograf/issues/1158&quot;&gt;known issue&lt;/a&gt; and it is fixed in versions 1.3.2.0+.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8875435b65160c4558d3441971f3bd8208890ef1" translate="yes" xml:space="preserve">
          <source>This is a full working config that will output CPU data to an InfluxDB instance at 192.168.59.103:8086, tagging measurements with dc=&amp;ldquo;denver-1&amp;rdquo;. It will output measurements at a 10s interval and will collect per-cpu data, dropping any fields which begin with &lt;code&gt;time_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec94ceeb31b465d60fe4263a9efea4042a5bb218" translate="yes" xml:space="preserve">
          <source>This is a known issue and it will be fixed in a future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61265a6e77d681cc5de8716ef73a1d01926260a" translate="yes" xml:space="preserve">
          <source>This is a list of the client libraries which have some support for InfluxDB version 0.9. Most should be fully compatible with InfluxDB version 1.3. Functionality will vary, and there are, as yet, no standard features that all libraries must implement in order to be listed here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb82f9ae4a0502f970abb8d273522cd09bc89384" translate="yes" xml:space="preserve">
          <source>This is a reference for the Influx Query Language (&amp;ldquo;InfluxQL&amp;rdquo;). If you&amp;rsquo;re looking for less formal documentation see &lt;a href=&quot;../data_exploration/index&quot;&gt;Data Exploration&lt;/a&gt;, &lt;a href=&quot;../schema_exploration/index&quot;&gt;Schema Exploration&lt;/a&gt;, &lt;a href=&quot;../database_management/index&quot;&gt;Database Management&lt;/a&gt;, and &lt;a href=&quot;../authentication_and_authorization/index&quot;&gt;Authentication and Authorization&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c334d61b49ed3de9e0b22b850893b516496725" translate="yes" xml:space="preserve">
          <source>This is a sample of what the output will look like.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79eaf615adeec1fa59a9632b6cd83b96a1f664ff" translate="yes" xml:space="preserve">
          <source>This is all you need to know to write data into InfluxDB and query it back. To learn more about the InfluxDB write protocol, check out the guide on &lt;a href=&quot;../../guides/writing_data/index&quot;&gt;Writing Data&lt;/a&gt;. To futher explore the query language, check out the guide on &lt;a href=&quot;../../guides/querying_data/index&quot;&gt;Querying Data&lt;/a&gt;. For more information on InfluxDB concepts, check out the &lt;a href=&quot;../../concepts/key_concepts/index&quot;&gt;Key Concepts&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774c976cb2ce9b074233080fb0f061e2ed859276" translate="yes" xml:space="preserve">
          <source>This is the preferred method for providing user credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f90b78732b531fd3011c862ff4e7741523a6a6fc" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t necessary, but it simplifies writing queries; you won&amp;rsquo;t have to wrap those identifiers in double quotes. Identifiers are database names, &lt;a href=&quot;../glossary/index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt; names, &lt;a href=&quot;../glossary/index#user&quot;&gt;user&lt;/a&gt; names, &lt;a href=&quot;../glossary/index#measurement&quot;&gt;measurement&lt;/a&gt; names, &lt;a href=&quot;../glossary/index#tag-key&quot;&gt;tag keys&lt;/a&gt;, and &lt;a href=&quot;../glossary/index#field-key&quot;&gt;field keys&lt;/a&gt;. See &lt;a href=&quot;https://github.com/influxdata/influxdb/blob/master/influxql/README.md#keywords&quot;&gt;InfluxQL Keywords&lt;/a&gt; for words to avoid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021ded05b14ad0449ea98fc6bef71a38efb77c1d" translate="yes" xml:space="preserve">
          <source>This issue affects the &lt;a href=&quot;#singlestat&quot;&gt;SingleStat&lt;/a&gt; and &lt;a href=&quot;#line-stat&quot;&gt;Line+Stat&lt;/a&gt; graph types. If a cell&amp;rsquo;s query includes more than one &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt; in the &lt;code&gt;SELECT&lt;/code&gt; clause, Chronograf returns the most recent stat associated with the first field key in the &lt;code&gt;SELECT&lt;/code&gt; clause. If you sorted the field keys in your query to rely on that behavior, it is important to note that Chronograf may change that order when it executes your query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2018cead684b1983ffac3830033561ac8668b5c4" translate="yes" xml:space="preserve">
          <source>This means that the default github_webhooks config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac87246e6b02b03f4345b616b9f8d2407a0e838" translate="yes" xml:space="preserve">
          <source>This page addresses frequent sources of confusion and places where InfluxDB behaves in an unexpected way relative to other database systems. Where applicable, it links to outstanding issues on GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380230de977ef60a0ef936da1624577832235d1a" translate="yes" xml:space="preserve">
          <source>This page aims to ease the transition from InfluxDB 1.2 to InfluxDB 1.3. For a comprehensive list of the differences between the versions see &lt;a href=&quot;../../about_the_project/releasenotes-changelog/index&quot;&gt;InfluxDB&amp;rsquo;s Changelog&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93aa5aee02789739d00c0133c7a12031a0d5ee88" translate="yes" xml:space="preserve">
          <source>This page aims to ease the transition from Telegraf 1.2 to Telegraf 1.3. It is not intended to be a comprehensive list of the differences between the versions. See &lt;a href=&quot;../../about_the_project/release-notes-changelog/index&quot;&gt;Telegraf&amp;rsquo;s Changelog&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83cabf1eeba6700e05c4f9368450cb45d072333" translate="yes" xml:space="preserve">
          <source>This page covers user management specific to OSS InfluxDB and InfluxEnterprise clusters. See &lt;a href=&quot;../security-best-practices/index&quot;&gt;Security Best Practices&lt;/a&gt; for more information about Chronograf&amp;rsquo;s authentication and user management features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28e3b945063774d98588b263eee728f814547e9" translate="yes" xml:space="preserve">
          <source>This page documents errors, their descriptions, and, where applicable, common resolutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b26b07c5b98a0ef092913b19bdb304ce1c840a4" translate="yes" xml:space="preserve">
          <source>This page gives SQL users an overview of how InfluxDB is like an SQL database and how it&amp;rsquo;s not. It highlights some of the major distinctions between the two and provides a loose crosswalk between the different database terminologies and query languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95896d6089624a286b8284cb6c76e510c62df50" translate="yes" xml:space="preserve">
          <source>This page outlines process for upgrading from:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22e9f4533e47e3c1933734bfc039f01ab615089" translate="yes" xml:space="preserve">
          <source>This page provides directions for installing, starting, and configuring InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13821b593c043de486fda500afc5dd4b3f6456d6" translate="yes" xml:space="preserve">
          <source>This page provides directions for installing, starting, and configuring Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2d672e2207e6aaac6e799ea636e216a0216efc" translate="yes" xml:space="preserve">
          <source>This page provides directions for installing, starting, and configuring Telegraf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57565c622496298f1e5e076cbc24f21560c8468a" translate="yes" xml:space="preserve">
          <source>This page provides the requirements for installing, starting, and configuring Chronograf. For the fastest way to get up and running with Chronograf, see the &lt;a href=&quot;../getting-started/index&quot;&gt;Getting Started&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3bff47d8176dfc25f29217bd0f57c0f493e1a4" translate="yes" xml:space="preserve">
          <source>This permission is deprecated and will be removed in a future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3a9a331676bfd496ae6bada7d7051e20bcb817" translate="yes" xml:space="preserve">
          <source>This permission is deprecated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4377f7a634974fbedc52644a31ba7d8105d85e9c" translate="yes" xml:space="preserve">
          <source>This plugin will emit measurements with the name &lt;code&gt;cpu_total&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67ba573ff6f617474e33dc937f08b6290b7f185" translate="yes" xml:space="preserve">
          <source>This plugin will emit measurements with two additional tags: &lt;code&gt;tag1=foo&lt;/code&gt; and &lt;code&gt;tag2=bar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725bedaab214657955b5063bc8d397326c4139ad" translate="yes" xml:space="preserve">
          <source>This property adds a &lt;code&gt;GROUP BY&lt;/code&gt; clause to the query so all the normal behaviors when quering InfluxDB with a &lt;code&gt;GROUP BY&lt;/code&gt; apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c747c5b5d2ee70eada15a7b850687e897caec6e1" translate="yes" xml:space="preserve">
          <source>This release has two major features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb25e7c04279d4e9e519847ec0d982ad10ac28c3" translate="yes" xml:space="preserve">
          <source>This release introduces a major new querying capability in the form of sub-queries, and provides several performance improvements, including a 50% or better gain in write performance on larger numbers of cores. The release adds some stability and memory-related improvements, as well as several CLI-related bug fixes. If upgrading from a prior version, please read the configuration changes in the following section before upgrading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660a930aa5f313c8a098eb3e3ea6f6fd9c19cb6c" translate="yes" xml:space="preserve">
          <source>This release introduces a new feature where you can window based off the number of points instead of their time. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f262cc550f141d0c8b0155139c7bdceb86f1a21f" translate="yes" xml:space="preserve">
          <source>This release is built with GoLang 1.7.3 and provides many performance optimizations, stability changes and a few new query capabilities. If upgrading from a prior version, please read the configuration changes below section before upgrading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc8041f48f5164dd05aa4f49a6b1bad79c24b44" translate="yes" xml:space="preserve">
          <source>This section contains configuration options for query management. For more on managing queries, see &lt;a href=&quot;../../troubleshooting/query_management/index&quot;&gt;Query Management&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b18a90a9bcc049a61e42ff1dc47b219b5bc4cd6" translate="yes" xml:space="preserve">
          <source>This section controls InfluxDB&amp;rsquo;s &lt;a href=&quot;https://github.com/influxdb/influxdb/blob/master/monitor/README.md&quot;&gt;system self-monitoring&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0abf422ac8c0cf909bee3f87574c71325465477" translate="yes" xml:space="preserve">
          <source>This section controls how &lt;a href=&quot;../../../../kapacitor/v1.3/index&quot;&gt;Kapacitor&lt;/a&gt; will receive data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2bd202b5a586ee01047f7e72c4fc6f0a180cc3b" translate="yes" xml:space="preserve">
          <source>This section controls how &lt;a href=&quot;../../concepts/glossary/index#continuous-query-cq&quot;&gt;continuous queries (CQs)&lt;/a&gt; run within InfluxDB. CQs are automated batches of queries that execute over recent time intervals. InfluxDB executes one auto-generated query per &lt;code&gt;GROUP BY time()&lt;/code&gt; interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ffadd52184ce88dbcdd939ec4e22984a60df76" translate="yes" xml:space="preserve">
          <source>This section controls how InfluxDB configures the HTTP endpoints. These are the primary mechanisms for getting data into and out of InfluxDB. Edit the options in this section to enable HTTPS and authentication. See &lt;a href=&quot;../../query_language/authentication_and_authorization/index&quot;&gt;Authentication and Authorization&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9003d330eb25fa84b07a5f877940f840df3a446c" translate="yes" xml:space="preserve">
          <source>This section controls one or many listeners for Graphite data. See the &lt;a href=&quot;https://github.com/influxdb/influxdb/blob/master/services/graphite/README.md&quot;&gt;README&lt;/a&gt; on GitHub for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dbb6fb561dd968f94a47661fec04ffb8437d92" translate="yes" xml:space="preserve">
          <source>This section controls parameters for InfluxDB&amp;rsquo;s metastore, which stores information on users, databases, retention policies, shards, and continuous queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb11f36869294539411194650f77007698eea13" translate="yes" xml:space="preserve">
          <source>This section controls the enforcement of retention policies for evicting old data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac95f38ac7ae3cbc52b671b5046de7200857b27" translate="yes" xml:space="preserve">
          <source>This section controls the listener for collectd data. See the &lt;a href=&quot;https://github.com/influxdata/influxdb/tree/master/services/collectd&quot;&gt;README&lt;/a&gt; on Github for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085b4faeebc8963bc8fdd1a47b76fd1c59e3ff7c" translate="yes" xml:space="preserve">
          <source>This section controls the listeners for InfluxDB line protocol data via UDP. See the &lt;a href=&quot;../../tools/udp/index&quot;&gt;UDP page&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f5d161c48c8ecf537f47d00e13320cc0105f08" translate="yes" xml:space="preserve">
          <source>This section controls where the actual shard data for InfluxDB lives and how it is flushed from the WAL. &lt;code&gt;dir&lt;/code&gt; may need to be changed to a suitable place for you system, but the WAL settings are an advanced configuration. The defaults should work for most systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08b74b92367964c30027474ba295d0bd42adf9b" translate="yes" xml:space="preserve">
          <source>This section covers the available tools for interacting with InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51399c415804e4acb296773e3675e0ef50f7bdef" translate="yes" xml:space="preserve">
          <source>This section covers the data types of Line Protocol&amp;rsquo;s major components: &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurements&lt;/a&gt;, &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag keys&lt;/a&gt;, &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt;, &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field keys&lt;/a&gt;, &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;, and &lt;a href=&quot;../../concepts/glossary/index#timestamp&quot;&gt;timestamps&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9974fb3728360cfabd21f3a41c25aae3f4e76ba" translate="yes" xml:space="preserve">
          <source>This section covers when not to and when to double (&lt;code&gt;&quot;&lt;/code&gt;) or single (&lt;code&gt;'&lt;/code&gt;) quote in Line Protocol. Moving from never quote to please do quote:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10142de80d8ce8a67bddda3dbaf0df1c023cddaa" translate="yes" xml:space="preserve">
          <source>This section introduces InfluxQL, InfluxDB&amp;rsquo;s SQL-like query language for interacting with data in InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621964436f67bc76542a77677fa220029fc61e4e" translate="yes" xml:space="preserve">
          <source>This section uses fictional real-time data that track the number of food orders to a restaurant via phone and via website at ten second intervals. We will store those data in a &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt; called &lt;code&gt;food_data&lt;/code&gt;, in the &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;&lt;code&gt;orders&lt;/code&gt;, and in the &lt;a href=&quot;../../concepts/glossary/index#field&quot;&gt;fields&lt;/a&gt;&lt;code&gt;phone&lt;/code&gt; and &lt;code&gt;website&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193030c4b7e3f28baae28817adcceddcf0d06d1c" translate="yes" xml:space="preserve">
          <source>This setup utilizes the UDP format of the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/influxdb&quot;&gt;InfluxDB output plugin&lt;/a&gt; and emits points formatted in InfluxDB&amp;rsquo;s &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#line-protocol&quot;&gt;line protocol&lt;/a&gt;. You will need to append this section to Telegraf&amp;rsquo;s configuration file and restart Telegraf for the change to take effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ceb863cc3f4ea809ffa8dead3bd7a4e2e0070d" translate="yes" xml:space="preserve">
          <source>This step is necessary for creating the WebHook; note that you can configure Chronograf to send messages to a different Slack channel or DM later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12fa4c818aa614878a90eec5e700bae4ae1576e" translate="yes" xml:space="preserve">
          <source>This string &lt;code&gt;'''triple \' quoted'''&lt;/code&gt; becomes the literal &lt;code&gt;triple \' quoted&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a6bcf91e9aed5dea74bb79ef5330a2075d6f10" translate="yes" xml:space="preserve">
          <source>This string &lt;code&gt;'single \' quoted'&lt;/code&gt; becomes the literal &lt;code&gt;single ' quoted&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b57718501f2bb684cd414e35b3c9f1f4fd438ae" translate="yes" xml:space="preserve">
          <source>This string joins multiple matching &amp;lsquo;measurement&amp;rsquo; values providing more control over the final measurement name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e543215c6385c2e0222aae03f820ec54629b8f" translate="yes" xml:space="preserve">
          <source>This template is rendered using the html/template package in Go so that safe and valid HTML can be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20dabecf359dcbfbf5cd72af8c361e05888619e7" translate="yes" xml:space="preserve">
          <source>This will collect and emit the min/max of the swap metrics every 30s, dropping the originals. The aggregator will not be applied to the system load metrics due to the &lt;code&gt;namepass&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c8ed00ceb3286e7476da64417aea763581b368" translate="yes" xml:space="preserve">
          <source>This will collect and emit the min/max of the system load1 metric every 30s, dropping the originals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6e0839bb60f41c399683db158c0c3db470f9c4" translate="yes" xml:space="preserve">
          <source>This will emit measurements with the name &lt;code&gt;foobar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5720e856ee7e81cb1f0a47a2fd88c8e0828b9da5" translate="yes" xml:space="preserve">
          <source>This will record the last 20 minutes of batches using the query in the &lt;code&gt;batch_cpu_alert&lt;/code&gt; task. In this case, since the &lt;code&gt;period&lt;/code&gt; is 5 minutes, the last 4 batches will be saved in the recording.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925e992d493c4f4a29a6f980df609af6448e43be" translate="yes" xml:space="preserve">
          <source>Those same data look like this in InfluxDB:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021324d7d90ffbeca71fc692a92f9c95d588d393" translate="yes" xml:space="preserve">
          <source>Threshold &amp;ndash; trigger alert if throughput drops below threshold in points/interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c169a3be9ac89d9b1d63d61a4519a5f5a2c1d949" translate="yes" xml:space="preserve">
          <source>Threshold - alert if the data cross a boundary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57f1471f73523bad06b756a2fc38dcca26b14dc" translate="yes" xml:space="preserve">
          <source>Throughout the query language exploration, we&amp;rsquo;ll use the database name &lt;code&gt;NOAA_water_database&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b8ea13ad29de8d4082edbece4687ce32b9fc51" translate="yes" xml:space="preserve">
          <source>Throughout this guide, we&amp;rsquo;ll use the database name &lt;code&gt;mydb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f6d25bce7dc57063b799f2ca40fa7a56963439" translate="yes" xml:space="preserve">
          <source>Thus was born the Time Structured Merge Tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fc54a6c906574154ee3751f5108109ac9e1a47" translate="yes" xml:space="preserve">
          <source>Time &amp;ndash; The time of the point that triggered the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c44f5078da1a80d723176df3327589b78791384" translate="yes" xml:space="preserve">
          <source>Time &amp;ndash; the time the alert occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01328ffb69e7688616eb7e30dabce7ac0c89f25b" translate="yes" xml:space="preserve">
          <source>Time Interval Number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e32f8e00127818b5fb2eaf036712d22e50eed6" translate="yes" xml:space="preserve">
          <source>Time Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a4546fd81b122915404e74cff9ee54a97e6c89" translate="yes" xml:space="preserve">
          <source>Time functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060757a2481db7853fedb46a8677fa1dbe1a5c02" translate="yes" xml:space="preserve">
          <source>Time sorting broken with overwritten points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3f91e22e547321e0e329c8fcdb3eb82d6662f7" translate="yes" xml:space="preserve">
          <source>Time zone clause</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19eabc961735d78f12fc7be906ffcb033853cf85" translate="yes" xml:space="preserve">
          <source>Timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2fb0c940bf5a5d9aa1ee23684e00a13056a7e6" translate="yes" xml:space="preserve">
          <source>Timestamp Format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19d1d2faeaedb5bd87a5ae2e1492842e0873212" translate="yes" xml:space="preserve">
          <source>Timestamp Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5feb6c5ba6f8b011a4972ffacada18b9a767b675" translate="yes" xml:space="preserve">
          <source>Timestamp encoding is adaptive and based on the structure of the timestamps that are encoded. It uses a combination of delta encoding, scaling, and compression using simple8b run-length encoding, as well as falling back to no compression if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926d47dfb2143a17b441b02a8ab761a2f3770442" translate="yes" xml:space="preserve">
          <source>Timestamp resolution is variable but can be as granular as a nanosecond, requiring up to 8 bytes to store uncompressed. During encoding, the values are first delta-encoded. The first value is the starting timestamp and subsequent values are the differences from the prior value. This usually converts the values into much smaller integers that are easier to compress. Many timestamps are also monotonically increasing and fall on even boundaries of time such as every 10s. When timestamps have this structure, they are scaled by the largest common divisor that is also a factor of 10. This has the effect of converting very large integer deltas into smaller ones that compress even better.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7321ea5e5981a20ed502d7e1e591e784a68e86f" translate="yes" xml:space="preserve">
          <source>Timestamps are UNIX timestamps. The minimum valid timestamp is &lt;code&gt;-9223372036854775806&lt;/code&gt; or &lt;code&gt;1677-09-21T00:12:43.145224194Z&lt;/code&gt;. The maximum valid timestamp is &lt;code&gt;9223372036854775806&lt;/code&gt; or &lt;code&gt;2262-04-11T23:47:16.854775806Z&lt;/code&gt;. As mentioned above, by default, InfluxDB assumes that timestamps have nanosecond precision. See the &lt;a href=&quot;../../tools/api/index#write&quot;&gt;API Reference&lt;/a&gt; for how to specify alternative precisions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9ce5b771b1d9fa31dd638d8603d39c3421c7803" translate="yes" xml:space="preserve">
          <source>Timestamps outside that range return a &lt;a href=&quot;../errors/index#unable-to-parse-time-outside-range&quot;&gt;parsing error&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc601bc14db3ce9718db52cd1523333cc5e02b15" translate="yes" xml:space="preserve">
          <source>Timing is everything</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3439e6f9d4a8fbed9f659554b0ffb15d5648c657" translate="yes" xml:space="preserve">
          <source>Tired of reading? Check out this InfluxQL Short:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ceb6cbe8659db2b6a21b20e602ba272b6817c78" translate="yes" xml:space="preserve">
          <source>To access the CLI, first launch the &lt;code&gt;influxd&lt;/code&gt; database process and then launch &lt;code&gt;influx&lt;/code&gt; in your terminal. Once you&amp;rsquo;ve entered the shell and successfully connected to an InfluxDB node, you&amp;rsquo;ll see the following output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74fcdebe5bb045f69a59bb695c1c18aab8193a35" translate="yes" xml:space="preserve">
          <source>To assign a user to an organization, add an &amp;ldquo;organization&amp;rdquo; key to the user&amp;rsquo;s &amp;ldquo;app_metadata&amp;rdquo; field with the value corresponding to the user&amp;rsquo;s organization. For example, we can assign the user Marty McFly to the &amp;ldquo;time-travelers&amp;rdquo; organization by setting the &amp;ldquo;app_metadata&amp;rdquo; to &lt;code&gt;{&quot;organization&quot;: &quot;time-travelers&quot;}&lt;/code&gt;. This can be done either manually by an operator or automatically through the use of an &lt;a href=&quot;https://auth0.com/docs/rules/metadata-in-rules#updating-app_metadata&quot;&gt;Auth0 Rule&lt;/a&gt; or a &lt;a href=&quot;https://auth0.com/docs/hooks/extensibility-points/pre-user-registration&quot;&gt;pre-user registration Auth0 Hook&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a165ee382dbabf3d4bbf23defcd876ad1902412b" translate="yes" xml:space="preserve">
          <source>To avoid missing data between execution times, the &lt;code&gt;FOR&lt;/code&gt; interval must be equal to or greater than the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval or, if specified, the &lt;code&gt;EVERY&lt;/code&gt; interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173c516a5d60fefacfd03e0019ccee282679d4af" translate="yes" xml:space="preserve">
          <source>To backup a database, you will need to add the &lt;code&gt;-database&lt;/code&gt; flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd85c0086852ec6643734e1d5698db5c24ae8bf" translate="yes" xml:space="preserve">
          <source>To begin authenticating Chronograf users with Auth0, you will need to have an Auth0 account and &lt;a href=&quot;https://auth0.com/docs/clients&quot;&gt;register an Auth0 client&lt;/a&gt; within their dashboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0082d6869c0d0d4a4a0fbb872140454e17ec4d52" translate="yes" xml:space="preserve">
          <source>To calculate the values per second rate, multiply the number of points written per second by the number of values stored per point. For example, if the points have four fields each, and a batch of 5000 points is written 10 times per second, then the values per second rate is &lt;code&gt;4 field values per point * 5000 points per batch * 10 batches per second = 200,000 values per second&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff6c63fa1e6276e5a2caadf52ed624dd16109aa" translate="yes" xml:space="preserve">
          <source>To capture a backup from a remote node:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45154402b4a5c6e3238882b0394039c1abbfc2b1" translate="yes" xml:space="preserve">
          <source>To check that it works, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2211c33152b0dab07d6bee22f6aa7116fed3a3ec" translate="yes" xml:space="preserve">
          <source>To complete step one we need to buffer the incoming stream and return the most recent score update per player per game. Our &lt;a href=&quot;../../tick/index&quot;&gt;TICKscript&lt;/a&gt; will look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1e12f6d0533741df7ccd2b9ade709ef37cd2e7" translate="yes" xml:space="preserve">
          <source>To configure Kapacitor with HipChat, you need:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af96f658248af21509ccbb35e6e270d0ea42e85" translate="yes" xml:space="preserve">
          <source>To configure Kapacitor with Telegraf, you need:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50fd2ea01d2f827b8aa0ffb4f6e682b33eb3f4c" translate="yes" xml:space="preserve">
          <source>To configure a Kapacitor event handler in Chronograf, &lt;a href=&quot;../../introduction/getting-started/index#kapacitor-setup&quot;&gt;install Kapacitor&lt;/a&gt; and &lt;a href=&quot;../../introduction/getting-started/index#4-connect-chronograf-to-kapacitor&quot;&gt;connect it to Chronograf&lt;/a&gt;. The Configure Kapacitor page includes the event handler configuration options; see the &lt;a href=&quot;../../guides/configure-kapacitor-event-handlers/index&quot;&gt;Configure Kapacitor Event Handlers&lt;/a&gt; guide for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844a0c4ac7d6bf36f33d8551adf01a1aa2b57576" translate="yes" xml:space="preserve">
          <source>To configure a handler we must first define the handler. A handler definition has a few parts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7897448754e2093b27e453b02b24ea235c2f0959" translate="yes" xml:space="preserve">
          <source>To configure the copy of the login page button text, set the &lt;code&gt;GENERIC_NAME&lt;/code&gt; environment variable. For example, with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e650f1726327c0807f2797338e6883659a473f" translate="yes" xml:space="preserve">
          <source>To create a Github OAuth Application follow the &lt;a href=&quot;https://developer.github.com/guides/basics-of-authentication/#registering-your-app&quot;&gt;Register your app&lt;/a&gt; instructions. Essentially, you&amp;rsquo;ll register your application &lt;a href=&quot;https://github.com/settings/applications/new&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b556c667e85f6728073494f68ecd380d3b9ce91b" translate="yes" xml:space="preserve">
          <source>To create a cert and key in one file with OpenSSL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997bff89b1011744d82c7c9b83dbb08ad8d2976c" translate="yes" xml:space="preserve">
          <source>To create a database send a &lt;code&gt;POST&lt;/code&gt; request to the &lt;code&gt;/query&lt;/code&gt; endpoint and set the URL parameter &lt;code&gt;q&lt;/code&gt; to &lt;code&gt;CREATE DATABASE &amp;lt;new_database_name&amp;gt;&lt;/code&gt;. The example below sends a request to InfluxDB running on &lt;code&gt;localhost&lt;/code&gt; and creates the database &lt;code&gt;mydb&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10ccf74972c99a045a33842b451e480999b9c57" translate="yes" xml:space="preserve">
          <source>To create a new handler make a POST request to &lt;code&gt;/kapacitor/v1preview/alerts/topics/system/handlers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de890060d289b86ba71d8fc1580761ff128c428c" translate="yes" xml:space="preserve">
          <source>To define a handler now you must specify which topic the handler belongs to. For example to define the above aggregate handler on the system topic use this command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec892cc32e467fdf108cbb6590a10ff23f63a57" translate="yes" xml:space="preserve">
          <source>To define a task POST to the &lt;code&gt;/kapacitor/v1/tasks&lt;/code&gt; endpoint. If a task already exists then use the &lt;code&gt;PATCH&lt;/code&gt; method to modify any property of the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b68bfcbf7ec5e28e71748aca43deb7b9287440" translate="yes" xml:space="preserve">
          <source>To define a template POST to the &lt;code&gt;/kapacitor/v1/templates&lt;/code&gt; endpoint. If a template already exists then use the &lt;code&gt;PATCH&lt;/code&gt; method to modify any property of the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8d18a6b7b5ab35a623203b79fe6c87d3edebe3" translate="yes" xml:space="preserve">
          <source>To define this task do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668bb0a64a6a1807a79c50ec28d320395c075214" translate="yes" xml:space="preserve">
          <source>To delete a recording make a DELETE request to the &lt;code&gt;/kapacitor/v1/recordings/RECORDING_ID&lt;/code&gt; endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d21dbeb3604f9b264c331b7c8f408e19c9ce5c" translate="yes" xml:space="preserve">
          <source>To delete a replay make a DELETE request to the &lt;code&gt;/kapacitor/v1/replays/REPLAY_ID&lt;/code&gt; endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396814164d1452293c161eaaac4a0a4a0c48e1f0" translate="yes" xml:space="preserve">
          <source>To delete a task make a DELETE request to the &lt;code&gt;/kapacitor/v1/tasks/TASK_ID&lt;/code&gt; endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163916351388d0148ef39ae22a86140f02787cd8" translate="yes" xml:space="preserve">
          <source>To delete a template make a DELETE request to the &lt;code&gt;/kapacitor/v1/templates/TEMPLATE_ID&lt;/code&gt; endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f271c7050944c014fa019f6e204a1d4cc5247a" translate="yes" xml:space="preserve">
          <source>To delete the override for the SMTP alert handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5962fba711607361795dba2e899a615f57e9c2bb" translate="yes" xml:space="preserve">
          <source>To disable the SMTP alert handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b44f1875b8fd385ae41806a0fff11e3444e2684" translate="yes" xml:space="preserve">
          <source>To do the same for the streaming case the TICKscript is very similar:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de1df30e0259bc26023cbcf5acd7ee04f1fba21" translate="yes" xml:space="preserve">
          <source>To do the same with Kapacitor here is a streaming TICKscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f6fe4ee2c8b58f4aabe41bec12e00b0908913b" translate="yes" xml:space="preserve">
          <source>To find the number of points per second being written to the instance. Must have the &lt;code&gt;monitor&lt;/code&gt; service enabled:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534adc13da95be082136d447e568a99be7eac63e" translate="yes" xml:space="preserve">
          <source>To find the number of writes separated by database since the beginnning of the log file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858a55631a694a24ab8b7a6ea4755715a7680d25" translate="yes" xml:space="preserve">
          <source>To generate a file with specific inputs and outputs, you can use the &amp;ndash;input-filter and &amp;ndash;output-filter flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faf0f4fdd6f8fc2bcf59210993c8e04480ecb7d" translate="yes" xml:space="preserve">
          <source>To generate a new configuration file, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dcb55a8b43a6fd306d1b2117690208c419b11c" translate="yes" xml:space="preserve">
          <source>To get around doing deletes, we split data across what we call shards, which are contiguous blocks of time. Shards would typically hold either one day or seven days worth of data. Each shard mapped to an underlying LevelDB. This meant that we could drop an entire day of data by just closing out the database and removing the underlying files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b806d29b6541107ead75c468fc8468c0f29b6f48" translate="yes" xml:space="preserve">
          <source>To get information about a task make a GET request to the &lt;code&gt;/kapacitor/v1/tasks/TASK_ID&lt;/code&gt; endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9b0bf598cc5653055644fd509aa4b9153e1dda" translate="yes" xml:space="preserve">
          <source>To get information about a template make a GET request to the &lt;code&gt;/kapacitor/v1/templates/TEMPLATE_ID&lt;/code&gt; endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3098a8603cf6a8cc8e6136ecc3c8c61230d222d" translate="yes" xml:space="preserve">
          <source>To get information about several tasks make a GET request to the &lt;code&gt;/kapacitor/v1/tasks&lt;/code&gt; endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16968715ca66685121a213b32dfd9209df13bcab" translate="yes" xml:space="preserve">
          <source>To get information about several templates make a GET request to the &lt;code&gt;/kapacitor/v1/templates&lt;/code&gt; endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="681e70fe3e3faacae17b7dfe7de3cfecd10e36dc" translate="yes" xml:space="preserve">
          <source>To get the same results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c946ace7b426d1210439356eba8859ae85f67bc" translate="yes" xml:space="preserve">
          <source>To get those results, InfluxDB first calculates the average &lt;code&gt;water_level&lt;/code&gt;s at 12-minute intervals. This step is the same as using the &lt;code&gt;MEAN()&lt;/code&gt; function with the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause and without &lt;code&gt;CUMULATIVE_SUM()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774595b4c95e7c37bfa864e9fe38d8595af04b4a" translate="yes" xml:space="preserve">
          <source>To get those results, InfluxDB first calculates the average &lt;code&gt;water_level&lt;/code&gt;s at 12-minute intervals. This step is the same as using the &lt;code&gt;MEAN()&lt;/code&gt; function with the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause and without &lt;code&gt;DERIVATIVE()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c7de4e888d7591e6f6c4abd5b375a7fe40ab49" translate="yes" xml:space="preserve">
          <source>To get those results, InfluxDB first calculates the maximum &lt;code&gt;water_level&lt;/code&gt;s at 12-minute intervals. This step is the same as using the &lt;code&gt;MAX()&lt;/code&gt; function with the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause and without &lt;code&gt;DIFFERENCE()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087b4827b61ee130e17be03a5a2e339acb0e6d56" translate="yes" xml:space="preserve">
          <source>To get those results, InfluxDB first calculates the maximum &lt;code&gt;water_level&lt;/code&gt;s at 12-minute intervals. This step is the same as using the &lt;code&gt;MAX()&lt;/code&gt; function with the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause and without &lt;code&gt;MOVING_AVERAGE()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d48daf884863b80cfd6abf4ff0572b829cc0f1" translate="yes" xml:space="preserve">
          <source>To get those results, InfluxDB first calculates the minimum &lt;code&gt;water_level&lt;/code&gt;s at 12-minute intervals. The second query in the codeblock shows the results of that step. The step is the same as using the &lt;code&gt;MIN()&lt;/code&gt; function with the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause and without the &lt;code&gt;ELAPSED()&lt;/code&gt; function. Notice that the timestamps returned by the second query are 12 minutes apart. In the raw data, the first result (&lt;code&gt;2.057&lt;/code&gt;) occurs at &lt;code&gt;2015-08-18T00:42:00Z&lt;/code&gt; but the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause overrides that original timestamp. Because the timestamps are determined by the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval and not by the original data, the &lt;code&gt;ELAPSED()&lt;/code&gt; calculation always returns the same value as the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ad983b4f05aafc1356194815dd508e4063922e" translate="yes" xml:space="preserve">
          <source>To have &lt;code&gt;launchd&lt;/code&gt; start InfluxDB at login, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cc4bc81ebf6998b16ba5b113dde870442dd464" translate="yes" xml:space="preserve">
          <source>To have &lt;code&gt;launchd&lt;/code&gt; start Kapacitor at login:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0e317c0aeb51ab12ba170716be8fd53788d7bf" translate="yes" xml:space="preserve">
          <source>To have InfluxDB start at system boot, add &lt;code&gt;influxd_enable=&quot;YES&quot;&lt;/code&gt; to &lt;code&gt;/etc/rc.conf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ac2bf3836dc73a24165a208455571cca8f67b0" translate="yes" xml:space="preserve">
          <source>To have launchd start telegraf at next login:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd311dfa317e96d0ba4d7024e6d9caa5741fcd99" translate="yes" xml:space="preserve">
          <source>To insert a single time-series datapoint into InfluxDB using the CLI, enter &lt;code&gt;INSERT&lt;/code&gt; followed by a point:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80b14c41396e84889676007babf413ed3f8edcb" translate="yes" xml:space="preserve">
          <source>To install the service into the Windows Service Manager, run the following in PowerShell as an administrator (If necessary, you can wrap any spaces in the file paths in double quotes &amp;ldquo;&amp;rdquo;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9685c679e6823b37198d08f5f35af2487ebe1cb6" translate="yes" xml:space="preserve">
          <source>To keep our anomaly detection algorithm simple, let&amp;rsquo;s compute a &lt;code&gt;p-value&lt;/code&gt; for each window of data we receive, and then emit a single data point with that &lt;code&gt;p-value&lt;/code&gt;. To compute the &lt;code&gt;p-value&lt;/code&gt;, we will use &lt;a href=&quot;https://en.wikipedia.org/wiki/Welch%27s_t_test&quot;&gt;Welch&amp;rsquo;s t-test&lt;/a&gt;. For a null hypothesis, we will state that a new window is from the same population as the historical windows. If the &lt;code&gt;p-value&lt;/code&gt; drops low enough, we can reject the null hypothesis and conclude that the window must be from something different than the historical data population, or &lt;em&gt;an anomaly&lt;/em&gt;. This is an oversimplified approach, but we are learning how to write UDFs, not statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345b9f4a93f2ac4a3247ad36f473460c56f0c57c" translate="yes" xml:space="preserve">
          <source>To keep regular expressions and quoting simple, avoid using the following characters in identifiers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350c554aea46d6811df270ddf2c7ddd8664faf0a" translate="yes" xml:space="preserve">
          <source>To list all recordings make a GET request to the &lt;code&gt;/kapacitor/v1/recordings&lt;/code&gt; endpoint. Recordings are sorted by date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1f892c99b159e82fc0da7a2491adcb27817ddc" translate="yes" xml:space="preserve">
          <source>To load telegraf now:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1a5657b46792ddb686cd1aead552ff61dec2a5" translate="yes" xml:space="preserve">
          <source>To make it clear which features of the API are in technical preview the base path &lt;code&gt;/kapacitor/v1preview&lt;/code&gt; is used. If you wish to preview some of these new features, simply use the path &lt;code&gt;/kapacitor/v1preview&lt;/code&gt; instead of &lt;code&gt;/kapacitor/v1&lt;/code&gt; for your requests. All v1 endpoints are available under the v1preview path so that your client need not be configured with multiple paths. The technical preview endpoints are only available under the v1preview path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f37c5b5f55cf8f1fd85b3bf6dfdba2232e46b5" translate="yes" xml:space="preserve">
          <source>To make it easy on ourselves we can convert the single point into a batch containing just that point. Then all we need to do is write a function that takes a batch of points and writes it to HouseDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e29ae83cbddfacaaae5f0cfbe6d340e84700b6" translate="yes" xml:space="preserve">
          <source>To make using this API a consistent and easy experience we follow one simple rule for when extra information about a request is found in the query parameters of the URL or when they are part of the submitted JSON body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b21980857fa05f070d3047cd17e9d386e6b401" translate="yes" xml:space="preserve">
          <source>To obtain a client ID and application secret for Heroku, follow the guide posted &lt;a href=&quot;https://devcenter.heroku.com/articles/oauth#register-client&quot;&gt;here&lt;/a&gt;. Once your application has been created, those two values should be inserted into the following environment variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0183b48a9f7cedf4961bce3f1abc0967fc69eae0" translate="yes" xml:space="preserve">
          <source>To override a value in the configuration make a POST request to the desired path. The request should contain a JSON object describing what should be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2423bf3e20a0e8daaf225433a6e840eefb6e58c2" translate="yes" xml:space="preserve">
          <source>To perform a query send a &lt;code&gt;GET&lt;/code&gt; request to the &lt;code&gt;/query&lt;/code&gt; endpoint, set the URL parameter &lt;code&gt;db&lt;/code&gt; as the target database, and set the URL parameter &lt;code&gt;q&lt;/code&gt; as your query. The example below uses the HTTP API to query the same database that you encountered in &lt;a href=&quot;../writing_data/index&quot;&gt;Writing Data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51732e756f2ccc721eead99581e9545c9f2599be" translate="yes" xml:space="preserve">
          <source>To perform an action make a POST request to the &lt;code&gt;/kapacitor/v1/storage/stores/&amp;lt;name of store&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5a874f81e277e9ed5eb3d5ee2fd1102256602f" translate="yes" xml:space="preserve">
          <source>To preserve tags in the current measurement as tags in the destination measurement, &lt;a href=&quot;#group-by-tags&quot;&gt;&lt;code&gt;GROUP BY&lt;/code&gt; the relevant tag key&lt;/a&gt; or &lt;code&gt;GROUP BY *&lt;/code&gt; in the &lt;code&gt;INTO&lt;/code&gt; query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c0bc477adf25fd34ff0ee2e434bc5ff86c529b" translate="yes" xml:space="preserve">
          <source>To query all the events within a topic make a GET request to &lt;code&gt;/kapacitor/v1preview/alerts/topics/&amp;lt;topic id&amp;gt;/events&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac122322d70678756afdee5ff82fa0a97cf0679" translate="yes" xml:space="preserve">
          <source>To query data in &lt;code&gt;&quot;weather&quot;&lt;/code&gt; you need to double quote the measurement name and escape the measurement&amp;rsquo;s double quotes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1290c7b14eeb1c6ca08935317ba67239e9410694" translate="yes" xml:space="preserve">
          <source>To query data with timestamps that occur after &lt;code&gt;now()&lt;/code&gt;, &lt;code&gt;SELECT&lt;/code&gt; statements with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause must provide an alternative upper bound in the &lt;a href=&quot;../../query_language/data_exploration/index#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e5afe638fc1130d57899c22a4679e68448e5a4" translate="yes" xml:space="preserve">
          <source>To query data with timestamps that occur after &lt;code&gt;now()&lt;/code&gt;, &lt;code&gt;SELECT&lt;/code&gt; statements with a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause must provide an alternative upper bound in the &lt;code&gt;WHERE&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7099b192f9814e8fd995bc2d14f0e0358ce3ce3b" translate="yes" xml:space="preserve">
          <source>To query data with timestamps that occur after &lt;code&gt;now()&lt;/code&gt;, &lt;code&gt;SELECT&lt;/code&gt; statements with an InfluxQL function and a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause must provide an alternative upper bound in the &lt;a href=&quot;../data_exploration/index#the-where-clause&quot;&gt;&lt;code&gt;WHERE&lt;/code&gt; clause&lt;/a&gt;. See the &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#why-don-t-my-group-by-time-queries-return-timestamps-that-occur-after-now&quot;&gt;Frequently Asked Questions&lt;/a&gt; page for an example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a1c3178e3642a34f526f02cadd3dfb21fc4773" translate="yes" xml:space="preserve">
          <source>To query information about a specific handler make a GET request to &lt;code&gt;/kapacitor/v1preview/alerts/topics/&amp;lt;topic id&amp;gt;/handlers/&amp;lt;handler id&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e627e5a701c3491f68410daa30df2c534cea788f" translate="yes" xml:space="preserve">
          <source>To query the list of available topics make a GET requests to &lt;code&gt;/kapacitor/v1preview/alerts/topics&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d0b8689004596c04fb4c4f3e44b10cf9b18343" translate="yes" xml:space="preserve">
          <source>To query the old data, we must specify the old &lt;code&gt;DEFAULT&lt;/code&gt; RP by fully qualifying &lt;code&gt;fleeting&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264ef29b72ccfb81726e26f1cd4f4b29225635bb" translate="yes" xml:space="preserve">
          <source>To query the state of a topic make a GET request to &lt;code&gt;/kapacitor/v1preview/alerts/topics/&amp;lt;topic id&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1b0768f25b34df5d4b93eacda56308c880950d" translate="yes" xml:space="preserve">
          <source>To reduce series cardinality, series must be dropped from the index. &lt;a href=&quot;../../query_language/database_management/index#delete-a-database-with-drop-database&quot;&gt;&lt;code&gt;DROP DATABASE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../query_language/database_management/index#delete-measurements-with-drop-measurement&quot;&gt;&lt;code&gt;DROP MEASUREMENT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../query_language/database_management/index#drop-series-from-the-index-with-drop-series&quot;&gt;&lt;code&gt;DROP SERIES&lt;/code&gt;&lt;/a&gt; will all remove series from the index and reduce the overall series cardinality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5b455ba53bc2cbab3a0c40c331ab5fbcb9baf11" translate="yes" xml:space="preserve">
          <source>To remove an existing handler make a DELETE request to &lt;code&gt;/kapacitor/v1preview/alerts/topics/system/handlers/&amp;lt;handler id&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f774e45ff9ec72afdf0aead43c565a8b40c59d7" translate="yes" xml:space="preserve">
          <source>To replay a recording make a POST request to &lt;code&gt;/kapacitor/v1/replays/&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b584954cf10e63c3ae85ca422e8996663abfaed" translate="yes" xml:space="preserve">
          <source>To require an organization membership for a user, set the &lt;code&gt;GH_ORGS&lt;/code&gt; environment variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81708d1c015e05e0fc73e788126f7202e54fd8a4" translate="yes" xml:space="preserve">
          <source>To restore a backup, you will need to use the &lt;code&gt;influxd restore&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2187cb8f14a54016000ebd8cc06f7829546e7c86" translate="yes" xml:space="preserve">
          <source>To restore from a backup you will need to specify the type of backup, the path to where the backup should be restored, and the path to the backup. The command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0a96d1c95b969b4c97dae0cd92f78c480a65d5" translate="yes" xml:space="preserve">
          <source>To retrieve the current configuration perform a GET request to the desired path. The returned configuration will be the merged values from the configuration file and what has been stored in the overrides. The returned content will be JSON encoded version of the configuration objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c8971276ccf34146522183381b6053a4c9770f" translate="yes" xml:space="preserve">
          <source>To return all fields and tags with a query, you can use the &lt;code&gt;*&lt;/code&gt; operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609910849886a68208be0f973c23f5a5d449880f" translate="yes" xml:space="preserve">
          <source>To return any data associated with the &lt;code&gt;location&lt;/code&gt; tag key, the query&amp;rsquo;s &lt;code&gt;SELECT&lt;/code&gt; clause must include at least one field key (&lt;code&gt;water_level&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea751619fb38383d1b260ec8b113ea6cef7db89" translate="yes" xml:space="preserve">
          <source>To see node diagnostics execute the command &lt;code&gt;SHOW DIAGNOSTICS&lt;/code&gt;. This returns information such as build information, uptime, hostname, server configuration, memory usage, and Go runtime diagnostics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a45256710acc607114d754e9e11f8b9a95dff4b" translate="yes" xml:space="preserve">
          <source>To see node stats execute the command &lt;code&gt;SHOW STATS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a39ec80eb7d4a042cf4245702971667c185103" translate="yes" xml:space="preserve">
          <source>To see that the task is receiving data and behaving as expected run the &lt;code&gt;show&lt;/code&gt; command to get more information about a task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a726ca4590f36ecb46527a0a35363e13d41db24" translate="yes" xml:space="preserve">
          <source>To send all system alerts to Slack, create a new handler for the system topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eebd196c2b18032cec738173a39015ed96cca81" translate="yes" xml:space="preserve">
          <source>To set up HTTPS with InfluxDB, you&amp;rsquo;ll need an existing or new InfluxDB instance and a Transport Layer Security (TLS) certificate (also known as a Secured Sockets Layer (SSL) certificate). InfluxDB supports three types of TLS/SSL certificates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f044b81c2f7709dc845ac972d4283b9e4d20d62a" translate="yes" xml:space="preserve">
          <source>To simulate our printer for testing, we will write a simple Python script to generate temperatures. This script generates random temperatures that are normally distributed around a target temperature. At specified times, the variation and offset of the temperatures changes, creating an anomaly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff41d4a08a455352adf539a411ccb6a7b8e1169c" translate="yes" xml:space="preserve">
          <source>To specify the certificate and key if both are in the same file either use the &lt;code&gt;--cert&lt;/code&gt; CLI option or &lt;code&gt;TLS_CERTIFICATE&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80feff95cfda63367983361f42bdb499c66cc844" translate="yes" xml:space="preserve">
          <source>To specify the certificate file either use the &lt;code&gt;--cert&lt;/code&gt; CLI option or &lt;code&gt;TLS_CERTIFICATE&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef84f17906f6c46cd14e29b147cc0e08d32c076" translate="yes" xml:space="preserve">
          <source>To specify the key file either use the &lt;code&gt;--key&lt;/code&gt; CLI option or &lt;code&gt;TLS_PRIVATE_KEY&lt;/code&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57ce2180ec72517acc7ff54ac730d0954bb1b35" translate="yes" xml:space="preserve">
          <source>To start collecting data, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a202c6c94fe5b199eb64f77cd84e7b3962f5f33" translate="yes" xml:space="preserve">
          <source>To start out, you must be working with version 0.10 or 0.11 (don&amp;rsquo;t upgrade the &lt;code&gt;influxd&lt;/code&gt; binary yet!). If you&amp;rsquo;ve already upgraded the binary to 1.3, &lt;a href=&quot;https://docs.influxdata.com/influxdb/v0.12/administration/upgrading/#urls-for-influxdb-0-11&quot;&gt;reinstall 0.11.1&lt;/a&gt;; InfluxDB 1.3 will yield an error (&lt;code&gt;run: create server: detected /var/lib/influxdb/meta/raft.db. [...]&lt;/code&gt;) if you attempt to start the process without completing the steps below. The examples below assume you are working with a version of linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8b27e22a69f6e72122398b9ba3bd2a3d43307c" translate="yes" xml:space="preserve">
          <source>To start the Kapacitor service, run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc9c32395903849ca266c796eff5fc82bd6266d" translate="yes" xml:space="preserve">
          <source>To store both points:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789516792016d57c2d418f6d05d015c29d3b7f28" translate="yes" xml:space="preserve">
          <source>To test a service make a POST request to the &lt;code&gt;/kapacitor/v1/service-tests/&amp;lt;service name&amp;gt;&lt;/code&gt; endpoint. The contents of the POST body depend on the service in test. To determine the available options use a GET request to the same endpoint. The returned options are also the defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc327842336d991bf764462898397301eec32bf0" translate="yes" xml:space="preserve">
          <source>To update an existing handler you can either make a PUT or PATCH request to &lt;code&gt;/kapacitor/v1preview/alerts/topics/system/handlers/&amp;lt;handler id&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c329f3805aab67f85d36ea3e0008d9ccab2595b7" translate="yes" xml:space="preserve">
          <source>To use this new alerting system remove any explicit alert handlers from your TICKscript and specify a topic. Then configure the handlers for the topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8555038ee03dc4430a1246302e8979271c14fba2" translate="yes" xml:space="preserve">
          <source>To use this template, first define the template like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171cc62c12e7cf1fa68e1ca13a37184ef9cb556b" translate="yes" xml:space="preserve">
          <source>To write data to InfluxDB, users selected the target database in the top right corner, clicked the &lt;code&gt;Write Data&lt;/code&gt; icon, and entered their &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#line-protocol&quot;&gt;line protocol&lt;/a&gt; in the text input:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514bf53efd38f0455cd5f7227e25acb60088594b" translate="yes" xml:space="preserve">
          <source>Today we are game developers. We host a several game servers each running an instance of the game code with about a hundred players per game.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9140270bff12decd8de04626edc81725530af3df" translate="yes" xml:space="preserve">
          <source>Toggles logging of additional debug information within the TSM engine and WAL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1141eb96836ed960ae0be11b9889597388b5df0" translate="yes" xml:space="preserve">
          <source>Token</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f941158a4e705292c4946ed51887e8829828ea01" translate="yes" xml:space="preserve">
          <source>Tokens that refer to continuous query names, database names, field keys, measurement names, retention policy names, subscription names, tag keys, and user names. See &lt;a href=&quot;../../query_language/spec/index#identifiers&quot;&gt;Query Language Specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d91e0bb03db855ca6abf158ff2a073989866cac" translate="yes" xml:space="preserve">
          <source>Tolerance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f419c9df5ab062778c50fec1e4aba6ef2e178c" translate="yes" xml:space="preserve">
          <source>Tombstone memory improvements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae0435c41e816c24f0838fdf4e76c044c8b4e00" translate="yes" xml:space="preserve">
          <source>Top</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e13bd176f89a12f0b614b55ffc19c14515ef920" translate="yes" xml:space="preserve">
          <source>Topic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8a6b71233fc8912f26b15a717ff99a3c94adcb" translate="yes" xml:space="preserve">
          <source>Topic Event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aefaab60da26505c8a738a2fe03443de3777c9fd" translate="yes" xml:space="preserve">
          <source>Topic State</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404017926b471f5287830473774bc4206d3e4c6a" translate="yes" xml:space="preserve">
          <source>Topic specifies the name of an alert topic to which, alerts will be published. Alert handlers can be configured per topic, see the API documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e4f9c27860c8f452d481954e498a807cd27a98" translate="yes" xml:space="preserve">
          <source>Topics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05aa9c2d9175485277461b2c09f0d3ddc34878cf" translate="yes" xml:space="preserve">
          <source>Topics are created dynamically when they referenced in TICKscripts or in handlers. To delete a topic make a &lt;code&gt;DELETE&lt;/code&gt; request to &lt;code&gt;/kapacitor/v1preview/alerts/topics/&amp;lt;topic id&amp;gt;&lt;/code&gt;. This will delete all known events and state for the topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f8fe1f76aac24ed32d0094b7cfeed6f650b974" translate="yes" xml:space="preserve">
          <source>Topics can be chained together using the &lt;code&gt;publish&lt;/code&gt; action. This allows you to further group your alerts into various topics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184b431a5c8b393b5acaf87a7e6aff36d445e103" translate="yes" xml:space="preserve">
          <source>Track HTTP client requests for /write and /query with /debug/requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b93f688340c63c1094efb2359eacf34dd86cef" translate="yes" xml:space="preserve">
          <source>Transform Iterator - This iterator calls a transform function for each point from an input iterator. This is used for executing binary expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d685ad7c59aeb1945ef867b52857539b62c1b81c" translate="yes" xml:space="preserve">
          <source>Transformations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fee323964e7ecbb01dd8a2885c4bbdc7b74bab3" translate="yes" xml:space="preserve">
          <source>Transition from InfluxDB&amp;#x27;s Web Admin Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4e737c0bfeff6bf7070fd677fe4376163ea24d" translate="yes" xml:space="preserve">
          <source>Transition from InfluxDB&amp;rsquo;s Web Admin Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0106a1c8fab8e2a6c1db3c387918a7fa121f18af" translate="yes" xml:space="preserve">
          <source>Transition from InfluxDB's Web Admin Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3687954ee706162f24d19a22a9e95a04669ce69c" translate="yes" xml:space="preserve">
          <source>Treat non-reserved measurement names with underscores as normal measurements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75569da38c11abd3ac09f23e8f9f88b3399cd927" translate="yes" xml:space="preserve">
          <source>Trigger Alert from Batch data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0a72c53e0c91e7ab2bba142c9c08274b658c07" translate="yes" xml:space="preserve">
          <source>Trigger Alert from Stream data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c3e8f3aabb57a849732a3b202f8d3a6835a430" translate="yes" xml:space="preserve">
          <source>Trigger SNMP traps for alert events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a945971b317f5b320e3bb6e87ad92644a1abea8" translate="yes" xml:space="preserve">
          <source>Trim BOM from Windows Notepad-saved config files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49c0182cbe6e1b1f4ad0497d1e750139182dc6a" translate="yes" xml:space="preserve">
          <source>Trim BOM from config file for Windows support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece12f8c1a20ccaea1fd2404e155fbbcc57b167d" translate="yes" xml:space="preserve">
          <source>Triple single quoted strings with no escaping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac265259166695b742658a267b27c17c43d2d87" translate="yes" xml:space="preserve">
          <source>Trunc returns the integer value of x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c20240aabee5be73215aad358929a60b233d4f" translate="yes" xml:space="preserve">
          <source>Truncate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aaf6e8d694d5685f542f53954afc6fc74598750" translate="yes" xml:space="preserve">
          <source>Truncate the shard group end time if it exceeds MaxNanoTime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84102a480663d8d29512d6d9b24eb0932cdf3da" translate="yes" xml:space="preserve">
          <source>Truncate the version string when linking to the documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00898fb02c5dff5d03e49152b0914d180f76386" translate="yes" xml:space="preserve">
          <source>Try it out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38047978b3eeb074fe118d224aca877b19ced55d" translate="yes" xml:space="preserve">
          <source>Tutorial-style documentation for the Line Protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be8987672929d3b9f10f13b975b218be209d5be" translate="yes" xml:space="preserve">
          <source>Type Conversion functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81f560aaf341cdffaa719bc83f623af99f857a1" translate="yes" xml:space="preserve">
          <source>Type of recording, &lt;code&gt;stream&lt;/code&gt; or &lt;code&gt;batch&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e24873b6f3d18df8cdbf2336ebd28173353fe7" translate="yes" xml:space="preserve">
          <source>Type(See &lt;a href=&quot;#data-types&quot;&gt;data types&lt;/a&gt; for more information.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02c7780e41d1028e5764c53639c4a04fa229faf" translate="yes" xml:space="preserve">
          <source>Typically execute in a few hundred or a few thousand milliseconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f713055f2cfca2343449c86d0aa5279ae461c21d" translate="yes" xml:space="preserve">
          <source>Typically execute in a few milliseconds to a few dozen milliseconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b76e37d548d2b97db8c17bab858cf601151404" translate="yes" xml:space="preserve">
          <source>Typically property methods are indented in from their calling node. This way methods along the left edge are chaining methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dce5245b665cbe69aa81f142908e23bcd7779f" translate="yes" xml:space="preserve">
          <source>Typically take multiple seconds to execute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f126cafc10a40c8eea3e821db3d028ac8f8d22d" translate="yes" xml:space="preserve">
          <source>UDF (User Defined Function) Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb28af22fa08d7c95e7478166d3c324b277fed28" translate="yes" xml:space="preserve">
          <source>UDFName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2c13df2a7dbaedacd9c41f9f6e192745985ec5" translate="yes" xml:space="preserve">
          <source>UDFNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd18aa4f698a28cf1218dad573324dc06ec59244" translate="yes" xml:space="preserve">
          <source>UDFs are configured via Kapacitor's main configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2376775e3c1b1a04be45a1b822d96796182346" translate="yes" xml:space="preserve">
          <source>UDFs are first class objects in TICKscripts and are referenced via their configuration name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33067986c14f51ee0c9dc1b6d1f3fde64ffaeeed" translate="yes" xml:space="preserve">
          <source>UDP Client: Split large points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95bf207c35ff6fca749adb6a1f0ced8778392b0" translate="yes" xml:space="preserve">
          <source>UDP Read buffer size, 0 means OS default. UDP listener will fail if set above OS max.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729209689c22d106937ad8d83f0a91618d82208f" translate="yes" xml:space="preserve">
          <source>UDP read buffer size, 0 means OS default. UDP listener will fail if set above OS max.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9622ac79da49d45580c2dabd73ee31053a6eefc5" translate="yes" xml:space="preserve">
          <source>UI Improvements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0718e4ab79403b2d9b5864a5a7fe1f2d7e1e808f" translate="yes" xml:space="preserve">
          <source>URL query parameter credentials take priority over Authentication header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e39b65a2569fbe538badd2ef3f26ae8debb22ee" translate="yes" xml:space="preserve">
          <source>Ubuntu &amp;amp; DebianRedHat &amp;amp; CentOSSLES &amp;amp; openSUSEFreeBSD/PC-BSDMAC OS X</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1a8540351b62024d3b3f91ed88e32228d0d1b7" translate="yes" xml:space="preserve">
          <source>Ubuntu &amp;amp; DebianRedHat &amp;amp; CentOSSLES &amp;amp; openSUSEFreeBSD/PC-BSDMAC OS XWindows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b757daabf7e5e7cc21d9e8795dcc339abd5918" translate="yes" xml:space="preserve">
          <source>Unacceptable request. Can occur if a user attempts to write to a database that does not exist. The returned JSON offers further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e23d04c8a39019b6d46bc0e4da5b7ac8124a7dc" translate="yes" xml:space="preserve">
          <source>Unacceptable request. Can occur with a Line Protocol syntax error or if a user attempts to write values to a field that previously accepted a different value type. The returned JSON offers further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2353e32edfccc82d967594dfaa568975106d749" translate="yes" xml:space="preserve">
          <source>Unacceptable request. Can occur with a syntactically incorrect query. The returned JSON offers further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d2e89cd5d2b37a99c5185cce3a53b3882ba423" translate="yes" xml:space="preserve">
          <source>Unacceptable request. Can occur with invalid authentication credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca3ecefd9a774fe6d2fbc8b6b215b258a8d93e7" translate="yes" xml:space="preserve">
          <source>Uncomment section headers from the default configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd162e2953146285f7f2b1cbeabc9c6e51027a5" translate="yes" xml:space="preserve">
          <source>Understanding Auxiliary Fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30530cf567b2e28a8588180f136ab9056a42ad0e" translate="yes" xml:space="preserve">
          <source>Understanding Iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a266b1ca5d4c978cc6c7bbadad8c14427da74aad" translate="yes" xml:space="preserve">
          <source>Understanding the concept of a series is essential when designing your &lt;a href=&quot;../glossary/index#schema&quot;&gt;schema&lt;/a&gt; and when working with your data in InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c386c4b84f500f22e3420c5c68889e82ace00e5" translate="yes" xml:space="preserve">
          <source>Understanding the following concepts will help you get the most out of InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d1bc1786787b9f5cf6f8701a1fb442f4f59285" translate="yes" xml:space="preserve">
          <source>Union</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e630508f0bef7cf4221bd874a65c19ee5d4e4596" translate="yes" xml:space="preserve">
          <source>Union Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459120c75a935d4225d9f4967c563164f405b99e" translate="yes" xml:space="preserve">
          <source>UnionNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241da96392e3242c1a7e7ebe2fd69d34a93154ba" translate="yes" xml:space="preserve">
          <source>Unique identifier for the recording. If empty a random one will be chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e690af9cd87cb7835a98f58108dc907f7fd54bf" translate="yes" xml:space="preserve">
          <source>Unique identifier for the replay. If empty a random ID is chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee524b095394aebd3de98750165397c136e4208" translate="yes" xml:space="preserve">
          <source>Unique identifier for the replay. If empty a random one will be chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb84afa6d9632da1cbf8e22d74187c389690cfd" translate="yes" xml:space="preserve">
          <source>Unique identifier for the task. If empty a random ID will be chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bae76f8a3ab72a981c6d3b964e40ec5bb0da26" translate="yes" xml:space="preserve">
          <source>Unique identifier for the template. If empty a random ID will be chosen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd14e1fd6d8b7154859c7376b9f794d325302835" translate="yes" xml:space="preserve">
          <source>Unique series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683b856de1d434b5b7aa02674ecac7218a562e15" translate="yes" xml:space="preserve">
          <source>Unique series per node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b935ab337145efdeadda28cae18aa89a845e36" translate="yes" xml:space="preserve">
          <source>Unit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12748281e0f02357f2a2f65c1c6a7d01ee122506" translate="yes" xml:space="preserve">
          <source>Units</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898c9638dd18534c75af7421f857828a781ec250" translate="yes" xml:space="preserve">
          <source>Universal recommendation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debe4ef3e45d3924a7ce2bf0a3bc04ee1509aa4e" translate="yes" xml:space="preserve">
          <source>Unix nanosecond timestamp. Specify alternative precisions with the &lt;a href=&quot;../../tools/api/index#write&quot;&gt;HTTP API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774ffb883a24c8641a5cc60b2afab2913aa789c8" translate="yes" xml:space="preserve">
          <source>Unix nanosecond timestamp. Specify alternative precisions with the &lt;a href=&quot;../../tools/api/index#write&quot;&gt;HTTP API&lt;/a&gt;. The minimum valid timestamp is &lt;code&gt;-9223372036854775806&lt;/code&gt; or &lt;code&gt;1677-09-21T00:12:43.145224194Z&lt;/code&gt;. The maximum valid timestamp is &lt;code&gt;9223372036854775806&lt;/code&gt; or &lt;code&gt;2262-04-11T23:47:16.854775806Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d106fee312b682f7ef16d9f6290b0de0324212" translate="yes" xml:space="preserve">
          <source>Unknown action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf9f65417f7dc917225aa0309b0c40a4a54c67f" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;SHOW DATABASES&lt;/code&gt;, most InfluxQL statements must operate against a specific database. You may explicitly name the database with each query, but the CLI provides a convenience statement, &lt;code&gt;USE &amp;lt;db-name&amp;gt;&lt;/code&gt;, which will automatically set the database for all future requests. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a639b45f73bf9a4f3974c1bfba4275542958e0" translate="yes" xml:space="preserve">
          <source>Unsupported Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f290e3d6676db431386448b18a212f5bb92a93" translate="yes" xml:space="preserve">
          <source>Update &lt;code&gt;stress/v2&lt;/code&gt; to work with clusters, ssl, and username/password auth. Code cleanup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2174a9559800ba1058a137cd2cf907cde7a6f20c" translate="yes" xml:space="preserve">
          <source>Update Go (golang) vendoring to dep and committed vendor directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d07364b5e226e7522f5dae86f0426d5ee8afe6" translate="yes" xml:space="preserve">
          <source>Update Go version to 1.7.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35d3cb2c74501d3f8e0a07ed596e5107e8f1f11" translate="yes" xml:space="preserve">
          <source>Update GoLang version to 1.7.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25d86c6fabc16ae8ee149f7ffb67fc5d3380ec4" translate="yes" xml:space="preserve">
          <source>Update SHOW FIELD KEYS to return the field type with the field key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d971a38a81612b31ff35d98e93c6b90e11ff30" translate="yes" xml:space="preserve">
          <source>Update a Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89db687024a4c87d2d0c13576ed772ecae56d127" translate="yes" xml:space="preserve">
          <source>Update connection settings when changing hosts in CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e8feaf0b958bf473daf959aeaad4efd2d479cd" translate="yes" xml:space="preserve">
          <source>Update default value for Cloudwatch rate limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337c74e7240e39c3e5db3de910bd20ef87e2dbe9" translate="yes" xml:space="preserve">
          <source>Update defaults in config for latest best practices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3fbe65a1c8531796e38b13ba5e5ca27f588210" translate="yes" xml:space="preserve">
          <source>Update go package library dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd3d8f5fadc8a4be4cd708d794e6f57806eef6c" translate="yes" xml:space="preserve">
          <source>Update help and remove unused config options from the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e5e570a57887e47faa989989c00182e4b06901" translate="yes" xml:space="preserve">
          <source>Update jwt-go dependency to version 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40292a473a6ebdd5b17e5085586734fb16c01775" translate="yes" xml:space="preserve">
          <source>Update latest dependencies with Godeps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7ea98dff2285bdd10d109adee87b725996a280" translate="yes" xml:space="preserve">
          <source>Update liner dependency to handle docker exec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfac2d91baaa54c5debd5c35bf73531ba6abf33b" translate="yes" xml:space="preserve">
          <source>Update the &lt;code&gt;mirrorHandler&lt;/code&gt; type and the methods &lt;code&gt;Info&lt;/code&gt; and &lt;code&gt;Init&lt;/code&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e839a00472f10c0c5989a83861293b7bcf8c08" translate="yes" xml:space="preserve">
          <source>Update the Kapacitor configuration page when the configuration changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d393d12edc627efa8409469caf24a910feedc8c8" translate="yes" xml:space="preserve">
          <source>Update the configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588c0d1c70dd454864b3adb6a1244606c693a78e" translate="yes" xml:space="preserve">
          <source>Update the query config&amp;rsquo;s field ordering to always match the input query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8075a2c2fad266caf6100d716731f02b58352b11" translate="yes" xml:space="preserve">
          <source>Update the topics and actions for a handler using the PATCH method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9184ae19ca7485050d5f55621a6408a6d2832e7a" translate="yes" xml:space="preserve">
          <source>Update to go1.8.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5525a1a0a92416206a35c9d75e1ed0a708191c6" translate="yes" xml:space="preserve">
          <source>Updated functions: &lt;code&gt;TOP()&lt;/code&gt; and &lt;code&gt;BOTTOM()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76d18079a076ee34ffc62b5b9bd0909da356dce" translate="yes" xml:space="preserve">
          <source>Updates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3603391c63830815e5df5e1c1bb01215893757b" translate="yes" xml:space="preserve">
          <source>Updates (writing a newer value for a point that already exists) occur as normal writes. Since cached values overwrite existing values, newer writes take precedence. If a write would overwrite a point in a prior TSM file, the points are merged at query runtime and the newer write takes precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd60953f39bef89aceb008288524e43316240b37" translate="yes" xml:space="preserve">
          <source>Updates to existing data are a rare occurrence and contentious updates never happen. Time series data is predominantly new data that is never updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ae146945733a4bacfb919117d9eb6464560eb7" translate="yes" xml:space="preserve">
          <source>Updates to the Alert Topic system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52715a4ea530878c6ec8f5c28b07b6313076d12e" translate="yes" xml:space="preserve">
          <source>Updating TICKscript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a541f21d503f789410d66e168d9a98c74d9ef6f" translate="yes" xml:space="preserve">
          <source>Updating Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298b0f8d279168478b2f82cb29a86901912df43a" translate="yes" xml:space="preserve">
          <source>Upgrade from 0.10 or 0.11 to 1.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46782a2604e57309929b9504f0b73e85ad419a96" translate="yes" xml:space="preserve">
          <source>Upgrade from 0.12-1.2 to 1.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b5cc7124db366b73a5733e36102c3464647c96" translate="yes" xml:space="preserve">
          <source>Upgrade from 1.2.0-beta versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e253713e59278388d7b2ea4ddbcfa9ba69e950" translate="yes" xml:space="preserve">
          <source>Upgrade from older versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f061f2b3be524ebc26a73ade8d1edd9e0af95d0c" translate="yes" xml:space="preserve">
          <source>Upgrade to 1.3 from 1.2.0-beta versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7af580f405d4712274433b54eb5f1ffea2ecfb" translate="yes" xml:space="preserve">
          <source>Upgrade to 1.3 from older versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e690d7c22517bf0aa4d517982066c7ce6f6e77" translate="yes" xml:space="preserve">
          <source>Upgrade to new version of Influx Theme, and remove excess stylesheets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde22ec0806644dfa8f6927585e02d07e1f25810" translate="yes" xml:space="preserve">
          <source>Upgrade to using GoLang 1.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7dd3a1d8ed51cf30314c15a934d4cae0718aa5a" translate="yes" xml:space="preserve">
          <source>Upgrading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f902a046ca0af1ed5f4d9bffdf70eee900e41f" translate="yes" xml:space="preserve">
          <source>Upgrading from Previous Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bdab6ad3538422b10f1575f6b3649e182fd237" translate="yes" xml:space="preserve">
          <source>Upgrading from previous versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367f264eff55e46cc70da3e2c3484dd8fc562071" translate="yes" xml:space="preserve">
          <source>Upgrading to Kapacitor 1.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2d8e6ea7f997746cc17367b1b9b7a8c8ef5295" translate="yes" xml:space="preserve">
          <source>Upgrading to Kapacitor v1.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7a16dc5f846cb6cc41e19ff0ab576bafc6f493" translate="yes" xml:space="preserve">
          <source>Usage Instructions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9080eb95d8e348fa08b1c3b44a791580f2c62b3a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../../concepts/glossary/index#now&quot;&gt;&lt;code&gt;now()&lt;/code&gt;&lt;/a&gt; to query data with &lt;a href=&quot;../../concepts/glossary/index#timestamp&quot;&gt;timestamps&lt;/a&gt; relative to the server&amp;rsquo;s current timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e84b00fdf35400d18158a03b7db08ba37a5e7d5" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;/debug/requests/&lt;/code&gt; to track HTTP client requests to the &lt;code&gt;/write&lt;/code&gt; and &lt;code&gt;/query&lt;/code&gt; endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779c1edd00ae35af884dab1d16b21f71de8b6714" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;/ping&lt;/code&gt; to check the status of your InfluxDB instance and your version of InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12507e76c852b6209a59b4b3893bb36273d035e3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;/query&lt;/code&gt; to query data and manage databases, retention policies, and users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a0f8bda5f146a48e3f35eaad1d471da19d2bca" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;/write&lt;/code&gt; to write data to a pre-existing database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d0ef9c0dbd72df47d7da0c4fe589c56ed4bbab" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;HOLT_WINTERS()&lt;/code&gt; to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993eeda7a2ae13f1a053142a7da7aab529e54ee3" translate="yes" xml:space="preserve">
          <source>Use CQs with InfluxDB&amp;rsquo;s &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policies&lt;/a&gt; (RPs) to mitigate storage concerns. Combine CQs and RPs to automatically downsample high precision data to a lower precision and remove the dispensable, high precision data from the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb3db6e215aa8ca5d0c6d2117b047af3ce8dab1" translate="yes" xml:space="preserve">
          <source>Use Chronograf&amp;rsquo;s Admin page to modify the retention policy in the &lt;code&gt;chronograf&lt;/code&gt; database. In the Databases tab:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46febe263da00d4d17441a3cabde505f25c6b524" translate="yes" xml:space="preserve">
          <source>Use Chronograf&amp;rsquo;s dashboard template variables to interact with your dashboard cells and explore your data. Template variables allow you to alter specific components of a cell&amp;rsquo;s query without having to navigate away from the dashboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d814210f57f1cf33326c0cdd739391cc756169b7" translate="yes" xml:space="preserve">
          <source>Use Go (golang) 1.8.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6423621ed4a8e646b143d5aa935c04236e999b4e" translate="yes" xml:space="preserve">
          <source>Use RFC3339 timestamps in log output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1805022dcfb58c43b832a32d386a1de3b57da42" translate="yes" xml:space="preserve">
          <source>Use X-Forwarded-For IP address in HTTP logger if present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c088bc3c2700d2d713f37d6a63c89800e73c9b4c" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;FOR&lt;/code&gt; interval and &lt;code&gt;fill()&lt;/code&gt; to change the value reported for time intervals with no data. Note that at least one data point must fall within the &lt;code&gt;FOR&lt;/code&gt; interval for &lt;code&gt;fill()&lt;/code&gt; to operate. If no data fall within the &lt;code&gt;FOR&lt;/code&gt; interval the CQ writes no points to the destination measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="037b47949c308fa02de67c89b44069d2d98d428a" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;FOR&lt;/code&gt; interval in the &lt;code&gt;RESAMPLE&lt;/code&gt; clause to specify the length of the CQ&amp;rsquo;s time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99aa286114b2ff8f6959ceb3c658cdc1e0d07f66" translate="yes" xml:space="preserve">
          <source>Use a comma instead of a space between the measurement and tag to avoid the error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c684c60cd1df3b7336b4e0e967af2b52cda7799d" translate="yes" xml:space="preserve">
          <source>Use a comma instead of a space between the two fields to avoid the error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092d9563bf3e65b1dedf4dfbbf2e6b7f12f19dac" translate="yes" xml:space="preserve">
          <source>Use a function with a wildcard (&lt;code&gt;*&lt;/code&gt;) and &lt;code&gt;INTO&lt;/code&gt; query&amp;rsquo;s &lt;a href=&quot;../data_exploration/index#the-into-clause&quot;&gt;backreferencing syntax&lt;/a&gt; to automatically downsample data from all measurements and numerical fields in a database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf24bb0c2e58dda0b3b89fed38f4650acda9f82" translate="yes" xml:space="preserve">
          <source>Use a simple CQ to automatically downsample data from a single field and write the results to another measurement in the same database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355e92a9e46efdff126fc7a36dc309afb367c23d" translate="yes" xml:space="preserve">
          <source>Use an &lt;a href=&quot;../data_exploration/index#advanced-group-by-time-syntax&quot;&gt;offset interval&lt;/a&gt; in the &lt;code&gt;GROUP BY time()&lt;/code&gt; clause to alter both the CQ&amp;rsquo;s default execution time and preset time boundaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85b1394997cb49b45a65532e441d1993b6ad4f67" translate="yes" xml:space="preserve">
          <source>Use an &lt;code&gt;EVERY&lt;/code&gt; interval and &lt;code&gt;FOR&lt;/code&gt; interval in the &lt;code&gt;RESAMPLE&lt;/code&gt; clause to specify the CQ&amp;rsquo;s execution interval and the length of the CQ&amp;rsquo;s time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3e6c443984cbb44c0c6cc2b2c39527d67ac5d7" translate="yes" xml:space="preserve">
          <source>Use an &lt;code&gt;EVERY&lt;/code&gt; interval in the &lt;code&gt;RESAMPLE&lt;/code&gt; clause to specify the CQ&amp;rsquo;s execution interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944fc5669714af97fab91cb5a0ee1b8127612c3c" translate="yes" xml:space="preserve">
          <source>Use comments with InfluxQL statements to describe your queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58db79df8e805503315c07731f1b108c5c1e4fae" translate="yes" xml:space="preserve">
          <source>Use consistent column output from the CLI for column formatted responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6dfb28c8a2eff457bbb892c1fc1e092536feeb" translate="yes" xml:space="preserve">
          <source>Use for all queries that start with:  &lt;a href=&quot;../../query_language/spec/index#alter-retention-policy&quot;&gt;&lt;code&gt;ALTER&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../../query_language/spec/index#create-continuous-query&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../../query_language/spec/index#delete&quot;&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../../query_language/spec/index#drop-continuous-query&quot;&gt;&lt;code&gt;DROP&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../../query_language/spec/index#grant&quot;&gt;&lt;code&gt;GRANT&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../../query_language/spec/index#kill-query&quot;&gt;&lt;code&gt;KILL&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../../query_language/spec/index#revoke&quot;&gt;&lt;code&gt;REVOKE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cb1c60e61316df96047861aef346777c924795" translate="yes" xml:space="preserve">
          <source>Use for all queries that start with:  &lt;a href=&quot;../../query_language/spec/index#select&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt;&lt;/a&gt;*  &lt;a href=&quot;../../query_language/spec/index#show-continuous-queries&quot;&gt;&lt;code&gt;SHOW&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9615ae36d0326479440fde5ed742613454d62c43" translate="yes" xml:space="preserve">
          <source>Use group by time when your period is longer than your group by time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ca9fbb9b01792188540aa7238a1ffb1248f05a" translate="yes" xml:space="preserve">
          <source>Use milliseconds in the InfluxDB dashboard instead of nanoseconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06004d02e565b5e573fd49a3ab991ad18718a67a" translate="yes" xml:space="preserve">
          <source>Use own client for improved through-put and less allocations in the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/influxdb&quot;&gt;InfluxDB output plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f5d723880bae4374dfe71c92644163dc6aea38" translate="yes" xml:space="preserve">
          <source>Use task templates to reduce the amount of TICKscripts you need to write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2923bc6c69ae6fa1bbc429b96e1d2a104a91df5" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../../query_language/continuous_queries/index&quot;&gt;&lt;code&gt;CREATE CONTINUOUS QUERY&lt;/code&gt;&lt;/a&gt; statement to generate a CQ:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a147ab79309c7f97a6b4744128ba74c4544d5f15" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../../query_language/database_management/index#create-retention-policies-with-create-retention-policy&quot;&gt;&lt;code&gt;CREATE RETENTION POLICY&lt;/code&gt;&lt;/a&gt; statement to create a &lt;code&gt;DEFAULT&lt;/code&gt; RP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66c6104d18e9d7bd1c90672c81919d42181f75f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../../query_language/database_management/index#create-retention-policies-with-create-retention-policy&quot;&gt;&lt;code&gt;CREATE RETENTION POLICY&lt;/code&gt;&lt;/a&gt; statement to create a non-&lt;code&gt;DEFAULT&lt;/code&gt; RP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefae229e423eb980fa9f22fb970ce2dd7743bde" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI&lt;/a&gt; to write a point to the &lt;code&gt;NOAA_water_database&lt;/code&gt; that occurs after &lt;code&gt;now()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e866452bb00768c1aac1f1b84f0ca114ef752ea" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;::&lt;/code&gt; syntax to specify if the key is a field key or tag key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef023adb085a4359c998414f19e032d24bd9f49" translate="yes" xml:space="preserve">
          <source>Use the HTTP API to specify timestamps with a precision other than nanoseconds, such as microseconds, milliseconds, or seconds. We recommend using the coarsest precision possible as this can result in significant improvements in compression. See the &lt;a href=&quot;../../tools/api/index#write&quot;&gt;API Reference&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3585655ec4b4e40701d18d4aab7a69e30f7d46" translate="yes" xml:space="preserve">
          <source>Use the Network Time Protocol (NTP) to synchronize time between hosts. InfluxDB uses a host&amp;rsquo;s local time in UTC to assign timestamps to data; if hosts&amp;rsquo; clocks aren&amp;rsquo;t synchronized with NTP, the timestamps on the data written to InfluxDB can be inaccurate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd2f9965b8778451c32a103e5f42907abcd144e3" translate="yes" xml:space="preserve">
          <source>Use the coarsest &lt;a href=&quot;../../tools/api/index#write&quot;&gt;precision&lt;/a&gt; possible for timestamps. This can result in significant improvements in compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1fd3fca75e4262ab737239b8db79efc5349d6c" translate="yes" xml:space="preserve">
          <source>Use the dropdown at the top of the dashboard to select the different options for the &lt;code&gt;:database:&lt;/code&gt; template variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd7fae58c2926d84b421ffc3b5a6323bb4a53ee" translate="yes" xml:space="preserve">
          <source>Use the dropdown at the top of the dashboard to select the different options for the &lt;code&gt;:field-key:&lt;/code&gt; template variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c83f7eb775a9ba34e63394f940baa0772a1945" translate="yes" xml:space="preserve">
          <source>Use the dropdown at the top of the dashboard to select the different options for the &lt;code&gt;:measurement:&lt;/code&gt; template variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc60b886a762b906bb793536de51b7e98bbb2b0" translate="yes" xml:space="preserve">
          <source>Use the dropdown at the top of the dashboard to select the different options for the &lt;code&gt;:tag-key:&lt;/code&gt; template variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b47c53f57e9b3b2c0d481ceb05e871cb2933308" translate="yes" xml:space="preserve">
          <source>Use the dropdown at the top of the dashboard to select the different options for the &lt;code&gt;:tag-value:&lt;/code&gt; template variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45ec8a5e46d14dc9213f88a1e0ce82ee3b61f46" translate="yes" xml:space="preserve">
          <source>Use the dropdown at the top of the dashboard to select the different options for the CSV &lt;code&gt;:field-value:&lt;/code&gt; template variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97606275608eaffa8c151ff28f29f836b0f92f01" translate="yes" xml:space="preserve">
          <source>Use the following top level actions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9405bb1394040bf9d9762835c1887da22759e9eb" translate="yes" xml:space="preserve">
          <source>Use the official docker SDK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15917ca85dfff1a534e9fcf0d09eeaa1e7c23f11" translate="yes" xml:space="preserve">
          <source>Use the syntax &lt;code&gt;INSERT INTO [&amp;lt;database&amp;gt;.]&amp;lt;retention_policy&amp;gt; &amp;lt;line_protocol&amp;gt;&lt;/code&gt; to write data to a non-&lt;code&gt;DEFAULT&lt;/code&gt; retention policy using the CLI. (Specifying the database and retention policy this way is only allowed with the CLI. Writes over HTTP must specify the database and optionally the retention policy with the &lt;code&gt;db&lt;/code&gt; and &lt;code&gt;rp&lt;/code&gt; query parameters.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e07fee16cd35968b337efd952a6b325cf7060b" translate="yes" xml:space="preserve">
          <source>Use the time of the selected point instead of the time of the batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9e148187a3bb39600f557334c7c5b5c19b2c0b" translate="yes" xml:space="preserve">
          <source>Use the variable in a cell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f40d9167f31823d1f6e50900a9cd3922197142" translate="yes" xml:space="preserve">
          <source>Use the variable on a dashboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1016f4a2bb78dea83d57f2ac49517bc90b7d4b19" translate="yes" xml:space="preserve">
          <source>Use this endpoint to track HTTP client requests to the &lt;code&gt;/write&lt;/code&gt; and &lt;code&gt;/query&lt;/code&gt; endpoints. &lt;code&gt;/debug/requests&lt;/code&gt; returns the number of writes and queries to InfluxDB per username and IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d623ea0c1e757031b8e8df6d94c125bb6f6936c1" translate="yes" xml:space="preserve">
          <source>UsePointTimes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895b33fa4872b7e854339ca6e8fb26982d307811" translate="yes" xml:space="preserve">
          <source>Useful Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca6e571e0d3add6b3954eb296783de689f78dc1" translate="yes" xml:space="preserve">
          <source>User Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117e529783288835e7c4587a92ed911cb3b1e9e0" translate="yes" xml:space="preserve">
          <source>User Management Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f114325a1d5e2e62062523e33cd8dcc229e9518b" translate="yes" xml:space="preserve">
          <source>User Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba61ccd332517c58d217cb41fb7b7ee26fc7ced0" translate="yes" xml:space="preserve">
          <source>User Types and Privileges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c50fda441d5c5fcb5bd54350634c099a5e75af" translate="yes" xml:space="preserve">
          <source>User management: ◦ Admin user management: &lt;a href=&quot;#create-a-new-admin-user&quot;&gt;&lt;code&gt;CREATE USER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#grant-administrative-privileges-to-an-existing-user&quot;&gt;&lt;code&gt;GRANT ALL PRIVILEGES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#revoke-administrative-privileges-from-an-admin-user&quot;&gt;&lt;code&gt;REVOKE ALL PRIVILEGES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#show-all-existing-users-and-their-admin-status&quot;&gt;&lt;code&gt;SHOW USERS&lt;/code&gt;&lt;/a&gt; ◦ Non-admin user management: &lt;a href=&quot;#create-a-new-non-admin-user&quot;&gt;&lt;code&gt;CREATE USER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#grant-read-write-or-all-database-privileges-to-an-existing-user&quot;&gt;&lt;code&gt;GRANT [READ,WRITE,ALL]&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#revoke-read-write-or-all-database-privileges-from-an-existing-user&quot;&gt;&lt;code&gt;REVOKE [READ,WRITE,ALL]&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#show-a-user-s-database-privileges&quot;&gt;&lt;code&gt;SHOW GRANTS&lt;/code&gt;&lt;/a&gt; ◦ General user management: &lt;a href=&quot;#re-set-a-user-s-password&quot;&gt;&lt;code&gt;SET PASSWORD&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#drop-a-user&quot;&gt;&lt;code&gt;DROP USER&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c322a080d5629d8adf0e7e30df0f92ca040a0ab" translate="yes" xml:space="preserve">
          <source>User/Group key of your user (or you), viewable when logged into the Pushover dashboard. Often referred to as USER_KEY in the Pushover documentation. If empty uses the user from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d92452ffd18acf8ad70553e53ec76f365f687a" translate="yes" xml:space="preserve">
          <source>Username of the Slack bot. If empty uses the username from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f2affacacf1a5e04a8b9054581f59afaa5eb57" translate="yes" xml:space="preserve">
          <source>Users can also configure the shard group duration with the &lt;a href=&quot;../../query_language/database_management/index#create-retention-policies-with-create-retention-policy&quot;&gt;&lt;code&gt;CREATE RETENTION POLICY&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../query_language/database_management/index#modify-retention-policies-with-alter-retention-policy&quot;&gt;&lt;code&gt;ALTER RETENTION POLICY&lt;/code&gt;&lt;/a&gt; statements. Check your retention policy&amp;rsquo;s shard group duration with the &lt;a href=&quot;../../query_language/schema_exploration/index#explore-retention-policies-with-show-retention-policies&quot;&gt;&lt;code&gt;SHOW RETENTION POLICY&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347ce098c661d764ab2eff2253c4fc7e28c5dbb3" translate="yes" xml:space="preserve">
          <source>Users can also filter the template(s) to use based on the name of the bucket, using glob matching, like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec8e94fa308ed1e35d40bc7a84c2e6c12602b10" translate="yes" xml:space="preserve">
          <source>Users device name to send message directly to that device, rather than all of a user's devices (multiple device names may be separated by a comma)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1addbd52f2481dcdd502b785707de052decf9d7" translate="yes" xml:space="preserve">
          <source>Users looking to change a field&amp;rsquo;s data type can use the &lt;code&gt;SHOW SHARDS&lt;/code&gt; query to identify the &lt;code&gt;end_time&lt;/code&gt; of the current shard. InfluxDB will accept writes with a different data type to an existing field if the point has a timestamp that occurs after that &lt;code&gt;end_time&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562b7a644f92009afa6d6992ef5f166dfff10474" translate="yes" xml:space="preserve">
          <source>Users looking to upgrade from Kapacitor 1.2 to 1.3 should review the Kapacitor &lt;a href=&quot;https://github.com/influxdata/kapacitor/blob/master/CHANGELOG.md&quot;&gt;Changelog&lt;/a&gt; available on GitHib.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d9bb716ca65ddf3343601b56e190127f3bdc03" translate="yes" xml:space="preserve">
          <source>Users looking to upgrade from Telegraf 1.2 to 1.3 should review the Telegraf&amp;rsquo;s &lt;a href=&quot;../../about_the_project/release-notes-changelog/index&quot;&gt;Changelog&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e633f90ce73b07ff1b5a9e7a3ca99ad735a82b50" translate="yes" xml:space="preserve">
          <source>Users looking to upgrade to InfluxDB 1.3 from versions prior to 1.2 should view the following pages in our documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629483724544288dc61b79b144a974d7a7f7913a" translate="yes" xml:space="preserve">
          <source>Users of OS X 10.8 and higher can install InfluxDB using the &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; package manager. Once &lt;code&gt;brew&lt;/code&gt; is installed, you can install InfluxDB by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9616bacd231f9a75225553a95cfde34b87ece9d" translate="yes" xml:space="preserve">
          <source>Users of OS X 10.8 and higher can install Telegraf using the &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; package manager. Once &lt;code&gt;brew&lt;/code&gt; is installed, you can install Telegraf by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de61b7e105903d8b4d3495c1deefbc933f13533" translate="yes" xml:space="preserve">
          <source>Users of RocksDB may at this point bring up a feature called ColumnFamilies. When putting time series data into Rocks, it&amp;rsquo;s common to split blocks of time into column families and then drop those when their time is up. It&amp;rsquo;s the same general idea: create a separate area where you can just drop files instead of updating indexes when you delete a large block of data. Dropping a column family is a very efficient operation. However, column families are a fairly new feature and we had another use case for shards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daff6bbe932e34733deff2cae64d7590a98617ae" translate="yes" xml:space="preserve">
          <source>Users of the windows &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/ping&quot;&gt;ping plugin&lt;/a&gt; will need to drop or migrate their measurements to continue using the plugin. The reason for this is that the windows plugin was outputting a different type than the linux plugin. This made it impossible to use the &lt;code&gt;ping&lt;/code&gt; plugin for both windows and linux machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324b62a4758f9bc28cfdea4f65c04497dbfe8fd7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;DISTINCT()&lt;/code&gt; with the &lt;a href=&quot;../data_exploration/index#the-into-clause&quot;&gt;&lt;code&gt;INTO&lt;/code&gt; clause&lt;/a&gt; can cause InfluxDB to overwrite points in the destination measurement. &lt;code&gt;DISTINCT()&lt;/code&gt; often returns several results with the same timestamp; InfluxDB assumes &lt;a href=&quot;../../concepts/glossary/index#point&quot;&gt;points&lt;/a&gt; with the same &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; and timestamp are duplicate points and simply overwrites any duplicate point with the most recent point in the destination measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9098b7ba5ab7f0a4957a10642c865a3b5b51210c" translate="yes" xml:space="preserve">
          <source>Using Alert Topics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd293c2b3a5260fa83b1710464219faa5a14998" translate="yes" xml:space="preserve">
          <source>Using Configuration Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8083da43ad3c3da3a741eab2bc169bff5f1d70" translate="yes" xml:space="preserve">
          <source>Using HTTPS secures the communication between clients and the InfluxDB server, and, in some cases, HTTPS verifies the authenticity of the InfluxDB server to clients (bi-directional authentication).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07429a7979f0334e81529e774394a21c358add3" translate="yes" xml:space="preserve">
          <source>Using PUT will replace the entire handler, by using PATCH specific parts of the handler can be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b10ff690095adea464d266ab66076155bce033" translate="yes" xml:space="preserve">
          <source>Using TAR packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b5c4892c0a9acba3f7e649b1311240871385c8" translate="yes" xml:space="preserve">
          <source>Using Vars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526b53c264c8c0474f8aae929e47fd48e84ee5df" translate="yes" xml:space="preserve">
          <source>Using a combination of RPs and CQs, we&amp;rsquo;ve successfully set up our database to automatically keep the high precision raw data for a limited time, create lower precision data, and store that lower precision data for a longer period of time. Now that you have a general understanding of how these features can work together, we recommend looking at the detailed documentation on &lt;a href=&quot;../../query_language/continuous_queries/index&quot;&gt;CQs&lt;/a&gt; and &lt;a href=&quot;../../query_language/database_management/index#retention-policy-management&quot;&gt;RPs&lt;/a&gt; to see all that they can do for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621935b7e765860abce2347a2a64971ba6c7ed8a" translate="yes" xml:space="preserve">
          <source>Using a process UDF can be simpler than a socket UDF because Kapacitor will spawn the process and manage everything for you. On the other hand you may want more control over the UDF process itself and rather expose only a socket to Kapacitor. One use case that is common is running Kapacitor in a Docker container and the UDF in another container that exposes the socket via a Docker volume.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc0e9be9bf0a4c4804fab489cec848338e2e6b5" translate="yes" xml:space="preserve">
          <source>Using any of &lt;code&gt;!|&lt;/code&gt;,&lt;code&gt;NAND&lt;/code&gt;,&lt;code&gt;XOR&lt;/code&gt;,&lt;code&gt;NOR&lt;/code&gt; yield a parser error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2eb8f08374703a1f9379baa393315329bcdfbcf" translate="yes" xml:space="preserve">
          <source>Using any of &lt;code&gt;=&lt;/code&gt;,&lt;code&gt;!=&lt;/code&gt;,&lt;code&gt;&amp;lt;&lt;/code&gt;,&lt;code&gt;&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;=&lt;/code&gt;,&lt;code&gt;&amp;gt;=&lt;/code&gt;,&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt; in the &lt;code&gt;SELECT&lt;/code&gt; clause yields empty results for all types. See GitHub issue &lt;a href=&quot;https://github.com/influxdb/influxdb/issues/3525&quot;&gt;3525&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b879600d28e5f76a38a0be1b02ffd50c1aefe48c" translate="yes" xml:space="preserve">
          <source>Using configuration files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44cedecf41a57e8143baa7e0d0dea54106baf94" translate="yes" xml:space="preserve">
          <source>Using fictional temperature data, this page introduces Line Protocol. It covers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0512f6f418bdb88d8b6abd4fce7ce2a4664fe73" translate="yes" xml:space="preserve">
          <source>Using logrotate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496aa600f68676c08324bd3dfc80df3eb1dd15e3" translate="yes" xml:space="preserve">
          <source>Using these adjusted values, if all the deltas are the same, the time range is stored using run-length encoding. If run-length encoding is not possible and all values are less than (1 &amp;lt;&amp;lt; 60) - 1 (&lt;a href=&quot;https://www.wolframalpha.com/input/?i=(1+%3C%3C+60)+-+1+nanoseconds+to+years&quot;&gt;~36.5 years&lt;/a&gt; at nanosecond resolution), then the timestamps are encoded using &lt;a href=&quot;https://github.com/jwilder/encoding/tree/master/simple8b&quot;&gt;simple8b encoding&lt;/a&gt;. Simple8b encoding is a 64bit word-aligned integer encoding that packs multiple integers into a single 64bit word. If any value exceeds the maximum the deltas are stored uncompressed using 8 bytes each for the block. Future encodings may use a patched scheme such as Patched Frame-Of-Reference (PFOR) to handle outliers more effectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425ec78e184521a33f05589462101f3ad538d213" translate="yes" xml:space="preserve">
          <source>Valid Line Protocol with no tag set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0832bc8c4bab8151cdc66d4d30d3764a019eb64" translate="yes" xml:space="preserve">
          <source>Valid credentials:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de78ab9611658a91e5b96b326f62295927749d5" translate="yes" xml:space="preserve">
          <source>Valid number literals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81e6af6b553c4d2ff1d53976077360a24021e6a" translate="yes" xml:space="preserve">
          <source>Validate the handler was defined as expected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7557dd2ccd79aa71353052c197091ed9206cc6b5" translate="yes" xml:space="preserve">
          <source>Value Configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2139d78e43cf42b8c7904885f78e1c7edc3cb901" translate="yes" xml:space="preserve">
          <source>Value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658b6eae2402f481c76c1dbc9e2055f52bf8ddc6" translate="yes" xml:space="preserve">
          <source>Values close to but within those limits may lead to unexpected results; some functions and operators convert the int64 data type to float64 during calculation which can cause overflow issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ceded6e318dd519f5046ce64bfc7ee59ca4fd7" translate="yes" xml:space="preserve">
          <source>Varnish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9069e323599df5d27b7c9d2e68cb81566e2b60e" translate="yes" xml:space="preserve">
          <source>Vars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cc4b6eb8d08d973ca95c61a0ed7ddd1d820ae2" translate="yes" xml:space="preserve">
          <source>Vars work with normal tasks as well and can be used to overwrite any defaults in the script. Since at any point a TICKscript could come in handy as a template we recommend always using &lt;code&gt;var&lt;/code&gt; declarations in your scripts. This way your normal tasks work and if you decide that you want to create another similar task its now trivial to define a template and then multiple tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5b7f7eb30e96dbd842054188f4abd1635bdf15" translate="yes" xml:space="preserve">
          <source>Vary part of a query with a customized list of comma-separated values (CSV).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835e9e4b2acdd920a113ba537794a2a58030e841" translate="yes" xml:space="preserve">
          <source>Vary the target &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#database&quot;&gt;database&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe48dd58f877ff4ad09c18133bd50632f75c421" translate="yes" xml:space="preserve">
          <source>Vary the target &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#field-key&quot;&gt;field key&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c1d40c96d6f354000c9e83a53d9d28cdc46ac4" translate="yes" xml:space="preserve">
          <source>Vary the target &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#measurement&quot;&gt;measurement&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c3e71fe4d383d982ae7d3bce7627a8c7951fe6" translate="yes" xml:space="preserve">
          <source>Vary the target &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#tag-key&quot;&gt;tag key&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaddd04893f51952cd504b6c6573d66e799aad31" translate="yes" xml:space="preserve">
          <source>Vary the target &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#tag-value&quot;&gt;tag value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33817a63b651d4a84e7a5d740d58bef5f67a6a2a" translate="yes" xml:space="preserve">
          <source>Verb</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b5dd6a0a9934f8372eb2c0ee33d452519ad53b" translate="yes" xml:space="preserve">
          <source>Verb usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11fbe6d672c9042d9afad60b28f3fb79139ea09" translate="yes" xml:space="preserve">
          <source>Verbose output for SSL connection errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d88f7c43ab40153e80f00f26cd5905e00821ed3" translate="yes" xml:space="preserve">
          <source>Verify that HTTPS is working by connecting to InfluxDB with the &lt;a href=&quot;../../tools/shell/index&quot;&gt;CLI tool&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f843787d97f2aba7e16f5ed32d77cc757ceb42" translate="yes" xml:space="preserve">
          <source>Version 0.10 or 0.11 to 1.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d4edf08b307f999572790dc84589d72b9f4cfc" translate="yes" xml:space="preserve">
          <source>Version 0.12-1.2 to 1.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826b14be098fcfb6a882cd5980eed87b5429616a" translate="yes" xml:space="preserve">
          <source>Version 1.3 also changes the way InfluxDB handles queries with an invalid duration unit. In versions prior to 1.3, the system ignored invalid duration units and did not return an error. In version 1.3, the system returns an error if the query includes an invalid duration unit. The following query erroneously specifies oranges as a duration unit:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257f716708a102be1fa06081089384b499437e2f" translate="yes" xml:space="preserve">
          <source>Version 1.3 introduces several new mathematical operators. Follow the links below to learn more:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b4bf78b8df0651271eb33fa6eb373cc430e4c2" translate="yes" xml:space="preserve">
          <source>Version 1.3 introduces three major changes to the &lt;code&gt;TOP()&lt;/code&gt; and &lt;code&gt;BOTTOM()&lt;/code&gt; functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a44538d0e7699748ac73ed5e8b8f856fb6c39c" translate="yes" xml:space="preserve">
          <source>Version 1.3.0 marked the first official release of InfluxDB&amp;rsquo;s new time series index (TSI) engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8e12cbe243e3301de780fa99052279f82e85f4" translate="yes" xml:space="preserve">
          <source>Version 1.3.0 marks the first official release of InfluxDB&amp;rsquo;s new time series index (TSI) engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3572af98dbd3a9d92efc5a2de3f2155947c25627" translate="yes" xml:space="preserve">
          <source>Version 1.3.x.x is a drop-in upgrade for the 1.2.0-beta releases. Just &lt;a href=&quot;https://portal.influxdata.com/downloads&quot;&gt;download and install&lt;/a&gt; the most recent version and restart the process. Note that in versions 1.3.1+, installing a new version of Chronograf automatically clears the localStorage settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71fd6c7b89e8c58fe200775bf3cb735e162179b" translate="yes" xml:space="preserve">
          <source>Versions 1.3+ of &lt;a href=&quot;../../../../influxdb/v1.3/index&quot;&gt;InfluxDB&lt;/a&gt; and &lt;a href=&quot;https://docs.influxdata.com/enterprise/v1.2/&quot;&gt;InfluxEnterprise&lt;/a&gt; no longer support the &lt;a href=&quot;../../../../influxdb/v1.3/tools/web_admin/index&quot;&gt;web admin interface&lt;/a&gt;, the builtin user interface for writing and querying data in InfluxDB. Chronograf replaces the web admin interface with improved tooling for querying data, writing data, and database management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92c29dd13ca28c2d31766a395e63d6fdb1fb5b8" translate="yes" xml:space="preserve">
          <source>Versions 1.3+ of InfluxDB and InfluxEnterprise no longer support the web admin interface, the builtin user interface for writing and querying data in InfluxDB. Learn how to use Chronograf as a replacement for the web admin interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1af0fe97f2390f0ab901998f5add4697a27f5e" translate="yes" xml:space="preserve">
          <source>Versions: 0.4, 0.10 through 0.13, and 1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08aa8a88cf5c0ae4b139499bf44e968bda2f74e5" translate="yes" xml:space="preserve">
          <source>Versions: 1.2.0-beta1 through 1.2.0-beta9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0419ec565104e55ca90e9e302c8cac13909c3b56" translate="yes" xml:space="preserve">
          <source>VictorOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4828ec67f6ffa44a173034dbc0a1aa830df752" translate="yes" xml:space="preserve">
          <source>VictorOps &amp;ndash; Send alert to VictorOps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663119f4faf8a5232fdd98c641373e963f8da3e9" translate="yes" xml:space="preserve">
          <source>VictorOps RoutingKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18adc08015f535bdb238c5639723cceef14b3570" translate="yes" xml:space="preserve">
          <source>Victorops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af2aa8239c9714c61c96188b5bfbffa1f089196" translate="yes" xml:space="preserve">
          <source>View pre-existing tasks the Alert Rules page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ffb58c26f47f08d0007c72f0adbc765807c0c8" translate="yes" xml:space="preserve">
          <source>View pre-existing tasks&amp;rsquo; activity on the Alert History page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892f63652eee116fa77adadf596335c17f5df6f8" translate="yes" xml:space="preserve">
          <source>View the alert in practice</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7374ca8980ab049f3ae9041bb5d2af9120a2aaa" translate="yes" xml:space="preserve">
          <source>View usage instructions for each input by running &lt;code&gt;telegraf -usage &amp;lt;input-name&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3c533182e76aecb9f8ca3adc2ff10f144b4a41" translate="yes" xml:space="preserve">
          <source>View usage instructions for each service input by running &lt;code&gt;telegraf -usage &amp;lt;service-input-name&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13fb57c1a98b822f92799c42f8315bd5a39a997" translate="yes" xml:space="preserve">
          <source>View your dashboard in full screen mode by clicking on the full screen icon in the top right corner of your dashboard. To exit full screen mode, press the Esc key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9197f6a96bb470dce14e986b16db50f3a691fadd" translate="yes" xml:space="preserve">
          <source>View, create, and delete admin and non-admin users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e884af273c9511c4e6bf5fc96d29294d5b7d17" translate="yes" xml:space="preserve">
          <source>View, create, and delete users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3424abd8a2a8826b266d6bf9924223a34c5e819" translate="yes" xml:space="preserve">
          <source>ViewAdmin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c496196a93f5b97303c24d22dc33ba4dad540d" translate="yes" xml:space="preserve">
          <source>ViewChronograf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7055a58effc31caee14fe6528388c605f9143b" translate="yes" xml:space="preserve">
          <source>WAL - The WAL is a write-optimized storage format that allows for writes to be durable, but not easily queryable. Writes to the WAL are appended to segments of a fixed size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39511409298368b30043557d85107eea92062a95" translate="yes" xml:space="preserve">
          <source>WARNING: Everything storage operation is directly manipulating the underlying storage database. Always make a backup of the database before performing any of these operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fccbcebc3ef1fd81e46fc1f7ab1d5a80e9a67a" translate="yes" xml:space="preserve">
          <source>WARNING: It is not recommended to join the stats stream with the original data stream. Since they operate on different clocks you could potentially create a deadlock. This is a limitation of the current implementation and may be removed in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3197c1165aae5da0e7aefff49356540fa3f32a" translate="yes" xml:space="preserve">
          <source>Wait for Recording</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6658b13e7978ea09792f26066f151bdc776816ee" translate="yes" xml:space="preserve">
          <source>Waiting for a Replay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3009d557c90c919cd9d0ea8a12b75430344b5929" translate="yes" xml:space="preserve">
          <source>Warn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2253cb8f40c152bf1a961b63e5139bca6ce1287d" translate="yes" xml:space="preserve">
          <source>WarnReset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be06692aeefd3dd6a2bdc0115dc298ed8ad073f6" translate="yes" xml:space="preserve">
          <source>We &lt;a href=&quot;../../query_language/database_management/index#create-retention-policies-with-create-retention-policy&quot;&gt;create&lt;/a&gt; a new &lt;code&gt;DEFAULT&lt;/code&gt; RP (&lt;code&gt;two_hour&lt;/code&gt;) and perform the same query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc980bcf6534f5280a60ac02751a69bcee19993" translate="yes" xml:space="preserve">
          <source>We are done, future alerts triggered by the &lt;code&gt;cpu_alert&lt;/code&gt; task will be send to Slack via the &lt;code&gt;cpu&lt;/code&gt; topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69e94b7e82a73869deef45171bbcfb9fef1c697" translate="yes" xml:space="preserve">
          <source>We are going to demonstrate how to setup a &lt;code&gt;cpu&lt;/code&gt; alert topic and send alerts to that topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e8c6292a2589ba0842e6cbb508a23e4460a82d" translate="yes" xml:space="preserve">
          <source>We are selecting the first &lt;code&gt;value&lt;/code&gt; that occurs every hour but we also want to retrieve the &lt;code&gt;host&lt;/code&gt; associated with that point. Since the &lt;code&gt;Point&lt;/code&gt; types only specify a single typed &lt;code&gt;Value&lt;/code&gt; for efficiency, we push the &lt;code&gt;host&lt;/code&gt; into the auxiliary fields of the point. These auxiliary fields are attached to the point until it is passed to the emitter where the fields get split off to their own iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c1ce71680e8588565759ced1a1fcf325d7fa665" translate="yes" xml:space="preserve">
          <source>We can also create a task for a memory based alert, using the same template. Create a &lt;code&gt;mem_vars.json&lt;/code&gt; and use this snippet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02acbab57f31c6064ea289c11a45273a6046401" translate="yes" xml:space="preserve">
          <source>We can confirm there are no handlers by checking the topic:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b84b463c390dbc199f49748d1150c10842bce89" translate="yes" xml:space="preserve">
          <source>We can verify it worked by listing information about the recording. Our recording came out to &lt;code&gt;1.6MB&lt;/code&gt;, so yours should come out somewhere close to that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630ae8fe186bfcead62eea2f11eacf0b06b3f4b7" translate="yes" xml:space="preserve">
          <source>We define the load that you&amp;rsquo;ll be placing on InfluxDB by the number of fields written per second, the number of queries per second, and the number of unique &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt;. Based on your load, we make general CPU, RAM, and IOPS recommendations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2acdbedbacf1136ef9bc686dc4602c17248bcbf" translate="yes" xml:space="preserve">
          <source>We first wrote a node in the &lt;code&gt;pipeline&lt;/code&gt; package (filepath: &lt;code&gt;pipeline/housedb_out.go&lt;/code&gt;) to define the TICKscript API for sending data to a HouseDB instance. We then wrote the implementation of that node in the &lt;code&gt;kapacitor&lt;/code&gt; package (filepath: &lt;code&gt;housedb_out.go&lt;/code&gt;). We also updated &lt;code&gt;pipeline/node.go&lt;/code&gt; to add a new chaining method and &lt;code&gt;task.go&lt;/code&gt; to associate the two types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b26d79976b5ff68ca7c2d479887fbfb0758e2f" translate="yes" xml:space="preserve">
          <source>We have now defined all the necessary pieces so that TICKscripts can define HouseDBOutNodes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a119a0d087a0e4248cc1bc67923da9e2b762fc22" translate="yes" xml:space="preserve">
          <source>We highly recommend moving to the open source Chronograf product. It&amp;rsquo;s pretty great, we promise! Check out the &lt;a href=&quot;../../introduction/getting-started/index&quot;&gt;Getting Started&lt;/a&gt; guide to get up and running!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9065d8f8fdbb0db76b3cf49aeac8880d681b58ed" translate="yes" xml:space="preserve">
          <source>We list possible workarounds for changing a field&amp;rsquo;s data type below. Note that these workarounds will not update data that have already been written to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30755554e5dd29f0f3047ef32d48c52c5bc47d14" translate="yes" xml:space="preserve">
          <source>We need to build a leaderboard so spectators can see the player&amp;rsquo;s scores in real time. We would also like to have historical data on leaders in order to do post game analysis on who was leading for how long etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f1243f4930167594396124c0a393490eeb6fe8" translate="yes" xml:space="preserve">
          <source>We need to query the two measurements, &lt;code&gt;errors&lt;/code&gt; and &lt;code&gt;views&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae8d26c82718349fdc296c5b83a80e3ee073775" translate="yes" xml:space="preserve">
          <source>We need to write a program that starts up and listens on a socket. The following code is a main function that listens on a socket at a default path, or on a custom path specified as the &lt;code&gt;-socket&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733f5427eeb7b13cec85a2345f285613a3d79da1" translate="yes" xml:space="preserve">
          <source>We perform the following steps before writing the data to the database &lt;code&gt;food_data&lt;/code&gt;. We do this &lt;strong&gt;before&lt;/strong&gt; inserting any data because CQs only run against recent data; that is, data with timestamps that are no older than &lt;code&gt;now()&lt;/code&gt; minus the &lt;code&gt;FOR&lt;/code&gt; clause of the CQ, or &lt;code&gt;now()&lt;/code&gt; minus the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval if the CQ has no &lt;code&gt;FOR&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b2cdf20abd1d407ad15fd1271c1ab1fc95eb2d" translate="yes" xml:space="preserve">
          <source>We recommend configuring the shard group duration such that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1502fe578e7c9e950e748848babff16aae605fe" translate="yes" xml:space="preserve">
          <source>We recommend implementing on-disk encryption; InfluxDB does not offer built-in support to encrypt the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e7b4304a01a591b63a96f0d07479922d43671c" translate="yes" xml:space="preserve">
          <source>We recommend using HTTPS with Chronograf. If you are not using a TLS termination proxy, you can run Chronograf&amp;rsquo;s server with TLS connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5d859cc7a896e3092c1f87a89bf5465d3b870f" translate="yes" xml:space="preserve">
          <source>We recommend using two SSD volumes. One for the &lt;code&gt;influxdb/wal&lt;/code&gt; and one for the &lt;code&gt;influxdb/data&lt;/code&gt;. Depending on your load each volume should have around 1k-3k provisioned IOPS. The &lt;code&gt;influxdb/data&lt;/code&gt; volume should have more disk space with lower IOPS and the &lt;code&gt;influxdb/wal&lt;/code&gt; volume should have less disk space with higher IOPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a59c75ddc5df52797ac623eadaef86d48f97ff3" translate="yes" xml:space="preserve">
          <source>We recommend visiting the &lt;a href=&quot;../../guides/downsampling_and_retention/index&quot;&gt;Downsampling and Data Retention&lt;/a&gt; guide to see how to combine two InfluxDB features, CQs and retention policies, to periodically downsample data and automatically expire the dispensable high precision data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c1377b7b60fde8ffca38a8fc0075db21cc2e15" translate="yes" xml:space="preserve">
          <source>We recommend writing points in batches of 5,000 to 10,000 points. Smaller batches, and more HTTP requests, will result in sub-optimal performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24e5e7dab8f498277d2bc9060ac56b72131398e" translate="yes" xml:space="preserve">
          <source>We released versions 0.9.0 to 0.9.2 based on BoltDB. From a development perspective it was delightful. Clean API, fast and easy to build in our Go project, and reliable. However, after running for a while we found a big problem with write throughput. After the database got over a few GB, writes would start spiking IOPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a10eca563dce1fbdf832e463fd736eff359aa8" translate="yes" xml:space="preserve">
          <source>We want to know the percent of page views that resulted in an error. The process is to select both existing measurements join them and calculate the percentage. Then to store the data back into InfluxDB as a new measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d57426386a201b52258d280c8d5e42456b6025" translate="yes" xml:space="preserve">
          <source>We were willing to take a hit on write throughput if it meant that we&amp;rsquo;d have a system that was more reliable and stable that we could build on. Our reasoning was that for anyone pushing really big write loads, they&amp;rsquo;d be running a cluster anyway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="970bab60fd584734805f10f141c80d3e5b9fd797" translate="yes" xml:space="preserve">
          <source>We will also ask you to sign our CLA which can be found &lt;a href=&quot;http://influxdb.com/community/cla.html&quot;&gt;here&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fe83e0118b259b0421974351f37537ffd60f22" translate="yes" xml:space="preserve">
          <source>We will use Kapacitor&amp;rsquo;s stream processing to do the heavy lifting for us. The game servers can send a UDP packet anytime a player&amp;rsquo;s score changes or at least every 10 seconds if the score hasn&amp;rsquo;t changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc1cb629983c77cbde8c4f73de6744601623727" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll continue to fix bugs on the 1.x versions of the &lt;a href=&quot;../../concepts/glossary/index#line-protocol&quot;&gt;line protocol&lt;/a&gt;, query API, and TSM storage format. Users should expect to upgrade to the latest 1.x.x release for bug fixes, but those releases will all be compatible with the 1.0 API and won&amp;rsquo;t require data migrations. For instance, if a user is running 1.1 and there are bug fixes released in 1.2, they should upgrade to the 1.2 release. Until 1.3 is released, patch fixes will go into 1.2.x. Because all future 1.x releases are drop in replacements for previous 1.x releases, users should upgrade to the latest in the 1.x line to get all bug fixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ee718d57a8405ce5370959dbd5ee6ee8bcc94e" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll dig into each of these parts of the storage engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5aa6bf8c1f61a078d698d9b9ca5d17b00e827d" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve seen the best performance with the R4 class of machines, as they provide more memory than either of the C3/C4 class and the M4 class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa0cf8b8adb1ee85a0c4ad59eb89c8d364bab97" translate="yes" xml:space="preserve">
          <source>Web Admin Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36deda29e37292cb405bdb1a1c40718752ea5a4f" translate="yes" xml:space="preserve">
          <source>Web Admin UI Removal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ae454e63bd152bfa3e0e8e72eb0a873edf4c81" translate="yes" xml:space="preserve">
          <source>Web Page preview. If empty uses the disable-web-page-preview from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07e99de1dcb2dd164ff5723ffa69057ea9fe768" translate="yes" xml:space="preserve">
          <source>Webhooks input plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fde3b8ca2db5451ac076f6132fe9f3a5033aeb1" translate="yes" xml:space="preserve">
          <source>Well now that we can see the task is running with live data, here is a quick hack to use 100% of one core so you can get some cpu activity:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a560c62bbd823cb9f9da0ec516e0e1edeab0a1" translate="yes" xml:space="preserve">
          <source>Well, that was cool and all, but, just to get a simple threshold alert, there are plenty of ways to do that. Why all this pipeline TICKscript stuff? Well, it can quickly be extended to become &lt;em&gt;much&lt;/em&gt; more powerful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f9c2f29ab1a824d04c49f9478c81893f0f1cc1" translate="yes" xml:space="preserve">
          <source>Well, there we have it. We can now get alerts when the temperatures for our prints deviates from the norm. Hopefully you now have a better understanding of how Kapacitor UDFs work, and have a good working example as a launching point into further work with UDFS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41fa28763b8e1fd5daf4b758057c58ccfb47e45" translate="yes" xml:space="preserve">
          <source>What Kapacitor event handlers are supported in Chronograf?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc77310d01ddba94a4a6085db551efc9b3b84bf" translate="yes" xml:space="preserve">
          <source>What applications are supported in Chronograf?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b6efef7ac98b12edbfeb92ae00abaaf4c25c34" translate="yes" xml:space="preserve">
          <source>What are the configuration recommendations and schema guidelines for writing sparse, historical data?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42b5c13467524a43cb0672be48a49d9d73e42ec" translate="yes" xml:space="preserve">
          <source>What are the minimum and maximum integers that InfluxDB can store?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9ea66ae9b7190e3439eab30727cdc65b98efdb" translate="yes" xml:space="preserve">
          <source>What are the minimum and maximum timestamps that InfluxDB can store?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cb5c3fb9ffc362ab21d81144b33bd8a74836b8" translate="yes" xml:space="preserve">
          <source>What determines the time intervals returned by &lt;code&gt;GROUP BY time()&lt;/code&gt; queries?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86f369a936d947d92c55f8d3f34703bf66ad4d4" translate="yes" xml:space="preserve">
          <source>What does a leaderboard need to do?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe15788e43083d8af2578983bcff700a8b701cd2" translate="yes" xml:space="preserve">
          <source>What does the status column indicate on the Host List page?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05497d792bab61a02f90792699131f2dafed7021" translate="yes" xml:space="preserve">
          <source>What follows is the complete UDF implementation with our &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;init&lt;/code&gt;, and batching methods (as well as everything else we need).</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
