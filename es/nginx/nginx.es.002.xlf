<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="nginx">
    <body>
      <group id="nginx">
        <trans-unit id="7bf6118e875cba2602ffdd654d91a5fac37d64a1" translate="yes" xml:space="preserve">
          <source>Binary operators except &amp;ldquo;&lt;code&gt;.&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;&amp;minus;&amp;gt;&lt;/code&gt;&amp;rdquo; should be separated from their operands by one space. Unary operators and subscripts are not separated from their operands by spaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68cb5a37ad5f612b4b3bdfbf65ff889f66aa5b3" translate="yes" xml:space="preserve">
          <source>Binds worker processes to the sets of CPUs. Each CPU set is represented by a bitmask of allowed CPUs. There should be a separate set defined for each of the worker processes. By default, worker processes are not bound to any specific CPUs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2280c5ea7045cfb13d62f93dec5fdb4dafc0122" translate="yes" xml:space="preserve">
          <source>Blocking Libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd4f3910c4ec53f51db55fe8bd5c4b9a95a21da" translate="yes" xml:space="preserve">
          <source>Body filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c3cf45cd654680a9995be474a0f5c5ed74dc3c" translate="yes" xml:space="preserve">
          <source>Boolean indicating if the last health check request was successful and passed &lt;a href=&quot;../stream/ngx_stream_upstream_hc_module#match&quot;&gt;tests&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dc052a711099fdcedaa1deee9cb614a9c02eee" translate="yes" xml:space="preserve">
          <source>Boolean indicating if the last health check request was successful and passed &lt;a href=&quot;ngx_http_upstream_hc_module#match&quot;&gt;tests&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8d73bd314d08e9a589e5605718cc6878b2df98" translate="yes" xml:space="preserve">
          <source>Boolean indicating whether the last health check request was successful and passed &lt;a href=&quot;../stream/ngx_stream_upstream_hc_module#match&quot;&gt;tests&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658eed7bd12e56de8c83440f0dcaa10665bd0a33" translate="yes" xml:space="preserve">
          <source>Boolean values, numbers, strings, objects, arrays, functions, and regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd815a1ad37637d40c25ca0bea43fdb949970ce" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;send&lt;/code&gt; and &lt;code&gt;expect&lt;/code&gt; parameters can contain hexadecimal literals with the prefix &amp;ldquo;&lt;code&gt;\x&lt;/code&gt;&amp;rdquo; followed by two hex digits, for example, &amp;ldquo;&lt;code&gt;\x80&lt;/code&gt;&amp;rdquo; (1.9.12).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f912a46c713984be3ae8ee33a03e82d4c513f4" translate="yes" xml:space="preserve">
          <source>Both cache types can be used simultaneously, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0598ef17d8c2a2f1d5023750aa376cedbc2e2c03" translate="yes" xml:space="preserve">
          <source>Both functions - &lt;code&gt;ngx_http_internal_redirect(r, uri, args)&lt;/code&gt; and &lt;code&gt;ngx_http_named_location(r, name)&lt;/code&gt; can be called when nginx modules have already stored some contexts in a request's &lt;code&gt;ctx&lt;/code&gt; field. It's possible for these contexts to become inconsistent with the new location configuration. To prevent inconsistency, all request contexts are erased by both redirect functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c344eff4726724e6a1d877ec9753b09c080e73ad" translate="yes" xml:space="preserve">
          <source>Browsers usually store intermediate certificates which they receive and which are signed by trusted authorities, so actively used browsers may already have the required intermediate certificates and may not complain about a certificate sent without a chained bundle. To ensure the server sends the complete certificate chain, the &lt;code&gt;openssl&lt;/code&gt; command-line utility may be used, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be5f64b36230104ef9c6e230215846a83d18df6" translate="yes" xml:space="preserve">
          <source>Buffer</source>
          <target state="translated">Buffer</target>
        </trans-unit>
        <trans-unit id="a17859b2168773f748249b32399c396378aebab4" translate="yes" xml:space="preserve">
          <source>Buffer reuse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5965c9239132fd66364896d8a9004f896d1b62c8" translate="yes" xml:space="preserve">
          <source>Buffering can also be enabled or disabled by passing &amp;ldquo;&lt;code&gt;yes&lt;/code&gt;&amp;rdquo; or &amp;ldquo;&lt;code&gt;no&lt;/code&gt;&amp;rdquo; in the &amp;ldquo;X-Accel-Buffering&amp;rdquo; response header field. This capability can be disabled using the &lt;a href=&quot;#fastcgi_ignore_headers&quot;&gt;fastcgi_ignore_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044f842be1105bb9187c7523094a37e1c5f73854" translate="yes" xml:space="preserve">
          <source>Buffering can also be enabled or disabled by passing &amp;ldquo;&lt;code&gt;yes&lt;/code&gt;&amp;rdquo; or &amp;ldquo;&lt;code&gt;no&lt;/code&gt;&amp;rdquo; in the &amp;ldquo;X-Accel-Buffering&amp;rdquo; response header field. This capability can be disabled using the &lt;a href=&quot;#proxy_ignore_headers&quot;&gt;proxy_ignore_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac3bcecd4ed5bd4083e05e84868641e12118a89" translate="yes" xml:space="preserve">
          <source>Buffering can also be enabled or disabled by passing &amp;ldquo;&lt;code&gt;yes&lt;/code&gt;&amp;rdquo; or &amp;ldquo;&lt;code&gt;no&lt;/code&gt;&amp;rdquo; in the &amp;ldquo;X-Accel-Buffering&amp;rdquo; response header field. This capability can be disabled using the &lt;a href=&quot;#scgi_ignore_headers&quot;&gt;scgi_ignore_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02e9555f3d7f07e94dc903b22ea241b4e06bf92" translate="yes" xml:space="preserve">
          <source>Buffering can also be enabled or disabled by passing &amp;ldquo;&lt;code&gt;yes&lt;/code&gt;&amp;rdquo; or &amp;ldquo;&lt;code&gt;no&lt;/code&gt;&amp;rdquo; in the &amp;ldquo;X-Accel-Buffering&amp;rdquo; response header field. This capability can be disabled using the &lt;a href=&quot;#uwsgi_ignore_headers&quot;&gt;uwsgi_ignore_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56cfeaa19f04d604e5a314ba7f431a1896baeb03" translate="yes" xml:space="preserve">
          <source>Buffering of a client request body cannot be disabled regardless of &lt;a href=&quot;ngx_http_proxy_module#proxy_request_buffering&quot;&gt;proxy_request_buffering&lt;/a&gt;, &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_request_buffering&quot;&gt;fastcgi_request_buffering&lt;/a&gt;, &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_request_buffering&quot;&gt;uwsgi_request_buffering&lt;/a&gt;, and &lt;a href=&quot;ngx_http_scgi_module#scgi_request_buffering&quot;&gt;scgi_request_buffering&lt;/a&gt; directive values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81815787a36bf486ec83bce67b6aa38c0b283dc9" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;a href=&quot;reference#string_tobytes&quot;&gt;&lt;code&gt;String.prototype.toBytes()&lt;/code&gt;&lt;/a&gt; for ASCII strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c087fa6ae5fd610a90ccdeb1f612b0a8996cb5" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;a href=&quot;reference#subrequest&quot;&gt;&lt;code&gt;r.subrequest()&lt;/code&gt;&lt;/a&gt; for empty body value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc50cc6add3c24e9ae5c6445cdd8ac51e598afce" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Array.prototype.fill()&lt;/code&gt;. Thanks to Artem S. Povalyukhin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c226982cb064f7413f0ada6188b4131420bca4f" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Array.prototype.length&lt;/code&gt; setter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db114299004ffe962a04f739044f7ec1e38406f" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Array.prototype.slice()&lt;/code&gt; for UTF8-invalid byte strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db9d7e68d1826464cb3a4d866c90edeb67424e2" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Array.prototype.toString()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f911f1b631b81432e681bbc3ee5974ed651353be" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Date()&lt;/code&gt; constructor with one argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30842ba263d97c7f9b2764c5992e3865c6a2749f" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Date.prototype.toJSON()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2345b40f6ddae75a03c3c3116f85b0ed1ecfadcd" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Function.prototype.bind()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230fff56ff5562209589fbe4f2acc161cc5451df" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Function.prototype.bind()&lt;/code&gt;. Thanks to 洪志道 (Hong Zhi Dao).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a997f59b40452f49bcf90a1621a7e7657c7c54" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;JSON.stringify()&lt;/code&gt; for arrays with empty cells.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145f65ad33bdaa326fdf229ab3027f14bd74cd3c" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Number()&lt;/code&gt; with boolean, null and undefined arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93946d4681d95defa4d4c32486ca753cf00b80e" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Object()&lt;/code&gt; constructor for object types arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059335f10e0d8409ebcbc1a1c05b0c0f65040c58" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Object.defineProperty()&lt;/code&gt; for existing properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b21f96a9266de0a5c3e49c3dc77f40185314ab8" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; for complex object (inherited from &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;string&lt;/code&gt; values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80178372633912acf16bbb0a3ba3774b8263593d" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt; for non-object properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5063c1a38afd50248afdfe2c78b441284099c9e2" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Object.prototype.toString&lt;/code&gt; for different value types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35c1efdaa14a4dff5978140034ec04f7bab2936" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;Regexp.prototype.exec()&lt;/code&gt; for Unicode-only regexps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfe957bd490f59ab53e2252cbfc4a905f1ce067" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;String.prototype.split()&lt;/code&gt; for UTF8-invalid byte strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2fa8740d621af3a50623199e9f7522cc696787" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;String.slice()&lt;/code&gt; for undefined arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c560cb0c337153a60db1c22b236ac82a005610" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;crypto.createHmac()&lt;/code&gt; for keys with size &amp;lt;= alg size and &amp;gt; 64.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72988053707dda6985a10c1e1eb80251f6676ef4" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;njs_array_alloc()&lt;/code&gt; for length &amp;gt; 2**31.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992cae2d98947097a33f8d47f46214efa7980475" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;njs_vm_external_bind()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7826978a47ef88d42e499325f206ddfed8a78f" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;njs_vm_value_dump()&lt;/code&gt; for empty string values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3b8b41a560acd13d34c25da97ba988e35f6702" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;nxt_file_dirname()&lt;/code&gt; for paths with no dir component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665d101c7cb20874d3c1342436d639d857aa9d91" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;parseInt('-0')&lt;/code&gt;. Thanks to Artem S. Povalyukhin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b3cc983a4f9c3921b6901bd9409aaa29d45821" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;s.off()&lt;/code&gt; in stream module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28aae4c557d06f2aa326dd2420e084ba9e7b48d1" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed &lt;code&gt;typeof&lt;/code&gt; operator for &lt;code&gt;object_value&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82cd1b152da950f80722132099f108a3a265e4e" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed RegExp constructor for regexp value arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fd3e75c1fcf934fed15457fe19ec7398da0943" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed RegExp literals parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204c8575797c92f1135014a7fa607a8ebc75c134" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed addition operator applied to an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0beb252b61afd29eb35b78283736a4f689465e8a" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed applying &lt;code&gt;call()&lt;/code&gt; to methods of external values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87eedee1a6f6b8d222dcd1ccb07836f8de46b8cf" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed arrays expansion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d525321a7ac00e457281e1d30556896bd0921af3" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed assignment expression from compound assignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae69cd6c7787d0a67593b02a06afabada71bf571" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed autocompletion for global objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fca42bccdfad76f181e7980e5fc0aee20466054" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed automatic semicolon insertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2725ca6deb1a5a8be674e6d24738753168716d2e" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed building on platforms without librt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3913d3977f3b045becbf6ba3cc85d1818eb3a2bf" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed checking of duplication of parameters for functions. Thanks to 洪志道 (Hong Zhi Dao).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90e4dc3a68dc7b9403861c5348df33ee48a409f" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed closure values handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3acf5319e97f19f159bc38c7c420ed59c94013aa" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed code size mismatch error message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5610e63a75be8d5301a78c0c338f99a23d463b" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed comparison of Byte and UTF8 strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aecbc5f0f7ae332d52ca39816f52b8417d5f957b" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed comparison of objects and strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395382b9a9fec79bf10d1929cb0d0fcb004636fa" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed counting pending events in stream module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608cae44645414d57e4958adf930b760c56a0089" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed crash while iterating over &lt;a href=&quot;reference#r_args&quot;&gt;&lt;code&gt;r.args{}&lt;/code&gt;&lt;/a&gt; when a value is absent in a key-value pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e62db7984489f0688b62b39a182fc5d86110ec0" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed creation of long UTF8 strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e056addc3c870ffde9e0468e2b1981058686c124" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed crypto &lt;code&gt;update()&lt;/code&gt; method after &lt;code&gt;digest()&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9a091cf57f9d62f246b478fea4d25864b27e69" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed delete operator in a loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4de49d3bc398bc48adc86893155378e0ed9c75" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed editline detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bfaee72eea24a1a0a86d072d9e5028f6d3afd1" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed equality operator for various value types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54595af43271654c046b022f592673baecbca86b" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed error handling of setting non-numeric &lt;code&gt;Array.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fba1d4176bc9395cd5891f5dd8fe9bfb30942e6" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed error logging in &lt;a href=&quot;../http/ngx_http_js_module#js_include&quot;&gt;js_include&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec850bcca240b1a7e975769b34aa23cb43474121" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed escaping lone closing square brackets in &lt;code&gt;RegExp()&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c13136d5fc4305f1f30a9a83be01a03c8d9a814" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed exception handling in &lt;code&gt;njs_vm_value_to_ext_string()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24802852102b30392c764c7011a36167a3b850d2" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed exception handling in arguments of a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbac0edd50f2d84129a38cc122f6a06e5c8d811" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed exception type for unsupported types in &lt;code&gt;JSON.stringify()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a57fea065e4672479e5bd259629546130f382c" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed function declaration with the same name as a variable. Thanks to 洪志道 (Hong Zhi Dao).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3126ee5adcf03da2c34592676cd08351d34d45a" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed function redeclarations in interactive shell. Thanks to 洪志道 (Hong Zhi Dao).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3605f76cc8ca6df4f72480814684380df5d285" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed handling non-object values in &lt;code&gt;Object.keys()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def871eee403f6f2ffe71e87b3b8c4a8e651fb25" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed handling of &amp;ldquo;this&amp;rdquo; keyword in various scopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c96a07ab7305131c4dac352b0d8f942300a4b96" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed handling of empty block statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c741969a7bc0e10797042b354c9d2aaa8acea375" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed handling of missing &lt;code&gt;arg&lt;/code&gt; of &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1e4a3722bce25b10537a9bd0f38097935d3882" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed handling of properties in &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f5bb7eee7366c9fdbcf06f223e70475d253ebb" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed handling of undefined arguments of functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d08246d32d91f533d4e8537d82be711feb1987e" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed handling zero byte characters inside RegExp pattern strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa045b5378a3d5cc8c951847e8456eeaba1625e" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed heap-buffer-overflow in &lt;a href=&quot;reference#string_split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a422da88c92c95d15faa557701d6213feabe037" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed heap-buffer-overflow in &lt;a href=&quot;reference#string_touppercase&quot;&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;reference#string_touppercase&quot;&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b9c576cd13f81e828283498c19a5c761a1bbaa" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed heap-buffer-overflow in &lt;code&gt;String.prototype.lastIndexOf()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618886254a25511fc948ec78ebf1ab406a2f6bd7" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed heap-buffer-overflow in &lt;code&gt;String.prototype.replace()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f64fddeda2a12bb91a4a538297cc39d84d94ffe" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed heap-buffer-overflow in &lt;code&gt;crypto.createHmac()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534fcbc4237d33861ac73fefda7dc6277c5ff43c" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed http &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;contentType&lt;/code&gt; getter in http module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb4ea03f264376140bfcf02177836cfe46ff2c4" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed http response and parent getters in http module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529ca9ef87549064adf26d135b66d84bf4b44e18" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed integer-overflow in &lt;a href=&quot;reference#string_concat&quot;&gt;&lt;code&gt;String.prototype.concat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05334472a546878da0b3cfeaf2ff60af5f18357" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed length calculation for UTF-8 string with escape characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e720b26feddd1154565414fa839adc83b7dda239" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed line number in reporting variable reference errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecaff84bf592eba976ca454c203fb267284cacd" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed overflow in &lt;code&gt;Array.prototype.concat()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbe61f6f4f194ac8cddb09b7111d78958ff4eb7" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed overwriting &amp;ldquo;constructor&amp;rdquo; property of built-in prototypes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c924183dfd74a278e731f61d42410f8b56ebad" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed parsing of newline after throw statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72afbca8e314ec004fb995353f9c7f571ea6845a" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed parsing of statements in if statement without newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c18fd37b8b3e7001dfbbc4efaa0a47cffec76a7" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed parsing of string literals containing newline characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8851d72d7036afbe12875dd66b31c7e62e9dfcfa" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed parsing of throw statement inside &lt;code&gt;if&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f5f3a047d633b131d92987e1a7465c11fd34c7" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed parsing surrogate pair presents as UTF-16 escape sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a84757dc47140d1146b32ad9d4e6b060ff13885" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed processing empty output chain in stream body filter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56136a7fb8e6ebedd2e79c9ada8b72e25b354cdd" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed processing of data chunks in &lt;code&gt;js_filter&lt;/code&gt; in stream module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f87b3db8fcec0b80f07f65c6d64e3c4946cca13" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed processing of invalid surrogate pairs in JSON strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2436f908a6ef216857cb6ab386beb9a9f8fca252" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed processing of invalid surrogate pairs in strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403cbdbd6094c6816f3b4cab4696eccc770a02aa" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed processing the &amp;ldquo;*&amp;rdquo; quantifier for &lt;code&gt;String.prototype.match()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a651ffc27865af26b1c4224d67c51ed079d4bcab" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed processing the &amp;ldquo;*&amp;rdquo; quantifier for &lt;code&gt;String.prototype.replace()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d4894a504ef4ff94c7b79e6b9c977fec9c87a8" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed regexp literals parsing with escaped backslash and backslash in square brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d11d99257683ab7649c59263fb2d8e45b9a5e7" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed regexp literals with lone closing brackets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758922fd60f24c6f0099567d2df1a9bb966223f2" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed return value type of &lt;code&gt;clearTimeout()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3568adbfe8fda3c5810c2997a612279aaf00647d" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed setting length of UTF8 string in &lt;a href=&quot;reference#readfilesync&quot;&gt;&lt;code&gt;fs.readFileSync()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8072dca5a98fafc618d118d8121bfd7c6c62b7e6" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed setting of object properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f97b669b895d67f3f611ad361a6ddeea55fc46" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed setting special response headers in &lt;a href=&quot;reference#string_split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt; for Unicode strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311788ac240b9ace18ecf80702c7ab20f5b15ed7" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed size &lt;code&gt;uint32_t&lt;/code&gt; overflow in &lt;code&gt;njs_array_expand()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e978058e1518474e13577296f3d2f0c08c3bcfd" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed the writeable flag of &lt;code&gt;Array.length&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b95825bafa0c500569190e7947e7b8fe0eb4b9e2" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed truth value of JSON numbers in &lt;a href=&quot;reference#core_json_parse&quot;&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1464570b97423c0ee0a754b1571fb97db060a3a" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed type of iteration variable in for-in with array values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6ad923d01f3cdf097171f8a2fb00d385595701" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed uninitialized-memory-access in &lt;code&gt;Object.defineProperties()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3227a02205caa957fd6c39776fd723b5559a12b2" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed use-of-uninitialized-value in &lt;code&gt;njs_string_replace_join()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a15f871b28f27167b7d8af0857a17bbc4f45055" translate="yes" xml:space="preserve">
          <source>Bugfix: fixed walking over prototypes chain during iteration over an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bfc1e69096b55d54c65620f6a109ff97971120" translate="yes" xml:space="preserve">
          <source>Bugfix: getting the parent property of the main &lt;a href=&quot;reference#http&quot;&gt;HTTP Request&lt;/a&gt; object caused a segmentation fault.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9439246c7538832ad647548ca26a9f27c192d2cd" translate="yes" xml:space="preserve">
          <source>Bugfix: global and function scopes have been fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64d42b78baedc3ab9cf73ebf18abb9f35740dc3" translate="yes" xml:space="preserve">
          <source>Bugfix: global variables were not initialized when njs was used in nginx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93af68db9b24f8b3e9ad2570b6346d26cf3f3bbb" translate="yes" xml:space="preserve">
          <source>Bugfix: handling int overflow in &lt;code&gt;njs_array_alloc()&lt;/code&gt; on 32bit archs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddde5662e6f57135512f76259b4864105f7fd98b" translate="yes" xml:space="preserve">
          <source>Bugfix: improved &lt;code&gt;editline&lt;/code&gt; detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2d7a458bc174ea9dc8594eccfcdc70dc65ab70" translate="yes" xml:space="preserve">
          <source>Bugfix: in &lt;code&gt;Object.isSealed()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab32896fef4793127683614f59ce7ce851c2a8d" translate="yes" xml:space="preserve">
          <source>Bugfix: in &lt;code&gt;parseInt()&lt;/code&gt; and &lt;code&gt;Date.parse()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74d028a4ae0c70a1f7db45b39234440ae1794d9" translate="yes" xml:space="preserve">
          <source>Bugfix: making a subrequest from a &lt;code&gt;Reply&lt;/code&gt; object caused a segmentation fault.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1e1639105710ce4bca12f10918c8543049def7" translate="yes" xml:space="preserve">
          <source>Bugfix: miscellaneous bugs and segmentation faults have been fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f5f0a44e31abf5775a71d9296046d923abc97d" translate="yes" xml:space="preserve">
          <source>Bugfix: miscellaneous bugs have been fixed in the core and interactive shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8d3dac59a2122cecae2f8d373704ee2c72bc4d" translate="yes" xml:space="preserve">
          <source>Bugfix: miscellaneous bugs have been fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff772be04295a8999df7660ca281a71f6ae5cb9" translate="yes" xml:space="preserve">
          <source>Bugfix: now &lt;code&gt;for-in&lt;/code&gt; loop does not discard the last value of property variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4becceb242a3b6c325fd596df1e12ba0f1de7a9" translate="yes" xml:space="preserve">
          <source>Bugfix: processing of large array indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b0af6f5f6af19bf79d8c94aec4a8d193afbbee" translate="yes" xml:space="preserve">
          <source>Bugfix: processing of large files from &lt;code&gt;stdin&lt;/code&gt; in command line mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2aaae54a91ada403be9f103b9c9ef73069a087e" translate="yes" xml:space="preserve">
          <source>Bugfix: respecting the enumerable attribute while iterating by for in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5911cc130ff6a90b7a3f9d88d613890cf367d6cb" translate="yes" xml:space="preserve">
          <source>Bugfix: respecting writable attribute for property handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba9d81b38537ae65a41d29c09c5ce3779a425a1" translate="yes" xml:space="preserve">
          <source>Bugfix: throwing &lt;code&gt;TypeError&lt;/code&gt; for attempts to change frozen properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c8295964c95c48789039d8aa4cbd0194f095e6" translate="yes" xml:space="preserve">
          <source>Build steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbcea43a265a9e4f65b0d8300742b1e00b98c96a" translate="yes" xml:space="preserve">
          <source>Building filter modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5108445c5355a0833cdcd1afb7b041a00035e7c" translate="yes" xml:space="preserve">
          <source>Building from Sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a2f251bf724b8e3241a3fde453135a0b7945ec" translate="yes" xml:space="preserve">
          <source>Building from the sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f0c187b5a7fc712ce9b86e920f7cc40465f40e" translate="yes" xml:space="preserve">
          <source>Building nginx from Sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2e53edddaed8325f435488c51ff45efbce9ad3" translate="yes" xml:space="preserve">
          <source>Building nginx on the Win32 platform with Visual C</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb2ee8723f16df3565d97a73350f5d10810787a" translate="yes" xml:space="preserve">
          <source>But if these directives are put inside the &amp;ldquo;&lt;code&gt;/download/&lt;/code&gt;&amp;rdquo; location, the &lt;code&gt;last&lt;/code&gt; flag should be replaced by &lt;code&gt;break&lt;/code&gt;, or otherwise nginx will make 10 cycles and return the 500 error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd46f26a490e0e60bb8fd55646639abf25892467" translate="yes" xml:space="preserve">
          <source>By default no parameters are set, and therefore DHE ciphers will not be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986170187e73859c05c42f944c9662db4520ad08" translate="yes" xml:space="preserve">
          <source>By default, a FastCGI server will close a connection right after sending the response. However, when this directive is set to the value &lt;code&gt;on&lt;/code&gt;, nginx will instruct a FastCGI server to keep connections open. This is necessary, in particular, for &lt;a href=&quot;ngx_http_upstream_module#keepalive&quot;&gt;keepalive&lt;/a&gt; connections to FastCGI servers to function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3c7db11000ed8f6bf89e675e2ec76ff4afd36f" translate="yes" xml:space="preserve">
          <source>By default, connections are distributed between the servers using a weighted round-robin balancing method. In the above example, each 7 connections will be distributed as follows: 5 connections go to &lt;code&gt;backend1.example.com:12345&lt;/code&gt; and one connection to each of the second and third servers. If an error occurs during communication with a server, the connection will be passed to the next server, and so on until all of the functioning servers will be tried. If communication with all servers fails, the connection will be closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa8e9faf8eaee1b692ffc1517c94f00b21c2bc2" translate="yes" xml:space="preserve">
          <source>By default, filter modules are placed before the &lt;code&gt;ngx_http_copy_filter&lt;/code&gt; in the module list so that the filter handler is executed after the copy filter handler. For other module types the default is the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766ee70439cc107438d4076896243964b61a52cc" translate="yes" xml:space="preserve">
          <source>By default, multi-threading is disabled, it should be enabled with the &lt;code&gt;--with-threads&lt;/code&gt; configuration parameter. Currently, multi-threading is compatible only with the &lt;a href=&quot;../events#epoll&quot;&gt;epoll&lt;/a&gt;, &lt;a href=&quot;../events#kqueue&quot;&gt;kqueue&lt;/a&gt;, and &lt;a href=&quot;../events#eventport&quot;&gt;eventport&lt;/a&gt; methods. Multi-threaded sending of files is only supported on Linux.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4160798f9d9ac8b2b71b5c9070cc1ef904f807a3" translate="yes" xml:space="preserve">
          <source>By default, nginx caches answers using the TTL value of a response. An optional &lt;code&gt;valid&lt;/code&gt; parameter allows overriding it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c19ecf22ec37290c47fef009d910f319223586" translate="yes" xml:space="preserve">
          <source>By default, nginx caches answers using the TTL value of a response. The optional &lt;code&gt;valid&lt;/code&gt; parameter allows overriding it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac1c80c0c9cd6e7332c0475ef9af2d1e035bb21" translate="yes" xml:space="preserve">
          <source>By default, nginx does not pass the header fields &amp;ldquo;Date&amp;rdquo;, &amp;ldquo;Server&amp;rdquo;, &amp;ldquo;X-Pad&amp;rdquo;, and &amp;ldquo;X-Accel-...&amp;rdquo; from the response of a proxied server to a client. The &lt;code&gt;proxy_hide_header&lt;/code&gt; directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the &lt;a href=&quot;#proxy_pass_header&quot;&gt;proxy_pass_header&lt;/a&gt; directive can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc08ebf1899e673e9916efa9c5fb3d128e70b973" translate="yes" xml:space="preserve">
          <source>By default, nginx does not pass the header fields &amp;ldquo;Date&amp;rdquo;, &amp;ldquo;Server&amp;rdquo;, and &amp;ldquo;X-Accel-...&amp;rdquo; from the response of a gRPC server to a client. The &lt;code&gt;grpc_hide_header&lt;/code&gt; directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the &lt;a href=&quot;#grpc_pass_header&quot;&gt;grpc_pass_header&lt;/a&gt; directive can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7368da2964a2d879d2387910806774d29070c2a" translate="yes" xml:space="preserve">
          <source>By default, nginx does not pass the header fields &amp;ldquo;Status&amp;rdquo; and &amp;ldquo;X-Accel-...&amp;rdquo; from the response of a FastCGI server to a client. The &lt;code&gt;fastcgi_hide_header&lt;/code&gt; directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the &lt;a href=&quot;#fastcgi_pass_header&quot;&gt;fastcgi_pass_header&lt;/a&gt; directive can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5e865770def7d524990c1a427ac438b820587f" translate="yes" xml:space="preserve">
          <source>By default, nginx does not pass the header fields &amp;ldquo;Status&amp;rdquo; and &amp;ldquo;X-Accel-...&amp;rdquo; from the response of a uwsgi server to a client. The &lt;code&gt;uwsgi_hide_header&lt;/code&gt; directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the &lt;a href=&quot;#uwsgi_pass_header&quot;&gt;uwsgi_pass_header&lt;/a&gt; directive can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95454717fcccf46d1f76cc1a68a0a5fc01dc87f0" translate="yes" xml:space="preserve">
          <source>By default, nginx does not pass the header fields &amp;ldquo;Status&amp;rdquo; and &amp;ldquo;X-Accel-...&amp;rdquo; from the response of an SCGI server to a client. The &lt;code&gt;scgi_hide_header&lt;/code&gt; directive sets additional fields that will not be passed. If, on the contrary, the passing of fields needs to be permitted, the &lt;a href=&quot;#scgi_pass_header&quot;&gt;scgi_pass_header&lt;/a&gt; directive can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7336f657ae1994ce98152fc9f77d176c9df41ae9" translate="yes" xml:space="preserve">
          <source>By default, nginx removes all environment variables inherited from its parent process except the TZ variable. This directive allows preserving some of the inherited variables, changing their values, or creating new environment variables. These variables are then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8222d6d5176873b8372e5bae17047eda2eb9dd5f" translate="yes" xml:space="preserve">
          <source>By default, nginx removes all environment variables inherited from its parent process except the TZ variable. Use the &lt;a href=&quot;../ngx_core_module#env&quot;&gt;env&lt;/a&gt; directive to preserve some of the inherited variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b91f4dc20a64859424e98efb11f445e6babf9c" translate="yes" xml:space="preserve">
          <source>By default, nginx will look up both IPv4 and IPv6 addresses while resolving. If looking up of IPv6 addresses is not desired, the &lt;code&gt;ipv6=off&lt;/code&gt; parameter can be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ca3e9e0b18c818b9e5481f26385ea7cb90dfec" translate="yes" xml:space="preserve">
          <source>By default, requests are distributed between the servers using a weighted round-robin balancing method. In the above example, each 7 requests will be distributed as follows: 5 requests go to &lt;code&gt;backend1.example.com&lt;/code&gt; and one request to each of the second and third servers. If an error occurs during communication with a server, the request will be passed to the next server, and so on until all of the functioning servers will be tried. If a successful response could not be obtained from any of the servers, the client will receive the result of the communication with the last server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c60ced5a2b48f397b3146b4adfe16148010c8c" translate="yes" xml:space="preserve">
          <source>By default, status information is output in the JSON format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6505842ef57cb74bb64a8b9415f670afde2b2e39" translate="yes" xml:space="preserve">
          <source>By default, the buffer size is 16k, which corresponds to minimal overhead when sending big responses. To minimize Time To First Byte it may be beneficial to use smaller values, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e73317611a51ab9ebb8a2aa6ee2ff4208a9b57c" translate="yes" xml:space="preserve">
          <source>By default, the connection will be closed if the proxied server does not transmit any data within 60 seconds. This timeout can be increased with the &lt;a href=&quot;ngx_http_proxy_module#proxy_read_timeout&quot;&gt;proxy_read_timeout&lt;/a&gt; directive. Alternatively, the proxied server can be configured to periodically send WebSocket ping frames to reset the timeout and check if the connection is still alive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca96ed4f8bae94e8131910df63bc3010e5158159" translate="yes" xml:space="preserve">
          <source>By default, the directive&amp;rsquo;s value is close to the string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24bc1d807d997c6ca776c0953df420f98a7c04b" translate="yes" xml:space="preserve">
          <source>By default, the header field is removed as contents of the response are modified during processing and may contain dynamically generated elements or parts that are changed independently of the original response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b21569d57aa5d8adee26cee99887d95637d57b9" translate="yes" xml:space="preserve">
          <source>By default, the header field is removed as contents of the response are modified during processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be27a218f4907237ba6b1b2168ab39ee08da6b40" translate="yes" xml:space="preserve">
          <source>By default, the header field is removed as contents of the response are modified during transformations and may contain dynamically generated elements or parts that are changed independently of the original response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781899a6ad2031432de1dbf2ed6fa4c88aca7142" translate="yes" xml:space="preserve">
          <source>By default, the host part from &lt;a href=&quot;#grpc_pass&quot;&gt;grpc_pass&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef114acb30f2757ab0d995ddeb7568b2fee4e907" translate="yes" xml:space="preserve">
          <source>By default, the host part from &lt;a href=&quot;#uwsgi_pass&quot;&gt;uwsgi_pass&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af1445cc62b496602cac8adf6e40e9727226884" translate="yes" xml:space="preserve">
          <source>By default, the host part of the &lt;a href=&quot;#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; URL is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9027cfd731254cb5476f27c6e77ca4d8be5fe0c" translate="yes" xml:space="preserve">
          <source>By default, the host part of the &lt;a href=&quot;#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt; address is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b5fab43a0681042e6324d6b8d8d4f63040c338" translate="yes" xml:space="preserve">
          <source>By default, the host part of the &lt;a href=&quot;#zone_sync_server&quot;&gt;zone_sync_server&lt;/a&gt; address is used, or resolved IP address if the &lt;a href=&quot;#resolve&quot;&gt;resolve&lt;/a&gt; parameter is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3903cf28883a260793b6bfc45d431b2b0c16834d" translate="yes" xml:space="preserve">
          <source>By default, the parameter is set to 10 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf74e40d6ba1e428eeda08a79040024c09724d7" translate="yes" xml:space="preserve">
          <source>Byte strings contain a sequence of bytes and are used to serialize Unicode strings to external data and deserialize from external sources. For example, the &lt;a href=&quot;#string_toutf8&quot;&gt;toUTF8()&lt;/a&gt; method serializes a Unicode string to a byte string using UTF8 encoding:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4e8cf67a7ae83cd849ec5bdb73d3745f7f7e96" translate="yes" xml:space="preserve">
          <source>C Strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf78981f82f737011d073bd91cbac610acd3136b" translate="yes" xml:space="preserve">
          <source>Cached data that are not accessed during the time specified by the &lt;code&gt;inactive&lt;/code&gt; parameter get removed from the cache regardless of their freshness. By default, &lt;code&gt;inactive&lt;/code&gt; is set to 10 minutes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b193b9c68d65680ef8724512d56968a11428e9ae" translate="yes" xml:space="preserve">
          <source>Caching of errors should be enabled separately by the &lt;a href=&quot;#open_file_cache_errors&quot;&gt;open_file_cache_errors&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d233cef848207072fc0ed1e0d16f07e8349f2c09" translate="yes" xml:space="preserve">
          <source>Calculates the HMAC digest of all of the data passed using &lt;code&gt;hmac.update()&lt;/code&gt;. The encoding can be &lt;code&gt;hex&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, and &lt;code&gt;base64url&lt;/code&gt;. If encoding is not provided, a byte string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c2268d35037654c298680edaee9c565c278319" translate="yes" xml:space="preserve">
          <source>Calculates the digest of all of the data passed using &lt;code&gt;hash.update()&lt;/code&gt;. The encoding can be &lt;code&gt;hex&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, and &lt;code&gt;base64url&lt;/code&gt;. If encoding is not provided, a byte string is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9309edd1b9d13aac0488b2ca0e3fd55344aa2f3" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;ngx_http_internal_redirect(r, uri, args)&lt;/code&gt; or &lt;code&gt;ngx_http_named_location(r, name)&lt;/code&gt; increases the request &lt;code&gt;count&lt;/code&gt;. For consistent request reference counting, call &lt;code&gt;ngx_http_finalize_request(r, NGX_DONE)&lt;/code&gt; after redirecting the request. This will finalize current request code path and decrease the counter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc31b17656b29dcf5f01910f869becd0bf1caf7" translate="yes" xml:space="preserve">
          <source>Calling Perl from SSI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398c52664d63e93460c9537c06c24b067e1b52af" translate="yes" xml:space="preserve">
          <source>Calls a &lt;code&gt;function&lt;/code&gt; after a specified number of &lt;code&gt;milliseconds&lt;/code&gt;. One or more optional &lt;code&gt;arguments&lt;/code&gt; can be passed to the specified function. Returns a &lt;code&gt;timeout&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c10f5d8d956c1b20420edd9e7399dc1c46b8164" translate="yes" xml:space="preserve">
          <source>Can be used along with the &lt;a href=&quot;#fastcgi_cache_bypass&quot;&gt;fastcgi_cache_bypass&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fe2719970e4912e448fabe00205d7f98fc55e7" translate="yes" xml:space="preserve">
          <source>Can be used along with the &lt;a href=&quot;#fastcgi_no_cache&quot;&gt;fastcgi_no_cache&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df22c97d99a4df43ea2e83039f581c697bdb37c4" translate="yes" xml:space="preserve">
          <source>Can be used along with the &lt;a href=&quot;#proxy_cache_bypass&quot;&gt;proxy_cache_bypass&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0d27e6e81df1505962dc18563facf9c5daf01a" translate="yes" xml:space="preserve">
          <source>Can be used along with the &lt;a href=&quot;#proxy_no_cache&quot;&gt;proxy_no_cache&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cccd4c1d9ba127d803f7371199d17c10aa64d1" translate="yes" xml:space="preserve">
          <source>Can be used along with the &lt;a href=&quot;#scgi_cache_bypass&quot;&gt;scgi_cache_bypass&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce414ff61aaa1e878fec8a867dda6248c62219f0" translate="yes" xml:space="preserve">
          <source>Can be used along with the &lt;a href=&quot;#scgi_no_cache&quot;&gt;scgi_no_cache&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d411718f946a9a1b9c7f6e2dc0609dd60a3dc2f" translate="yes" xml:space="preserve">
          <source>Can be used along with the &lt;a href=&quot;#uwsgi_cache_bypass&quot;&gt;uwsgi_cache_bypass&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac94ecc03fe268bc43188c36057b42db6379c0e5" translate="yes" xml:space="preserve">
          <source>Can be used along with the &lt;a href=&quot;#uwsgi_no_cache&quot;&gt;uwsgi_no_cache&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4511909f66fc22172662465f85fc2d71338363de" translate="yes" xml:space="preserve">
          <source>Cancels a &lt;code&gt;timeout&lt;/code&gt; object created by &lt;a href=&quot;#settimeout&quot;&gt;setTimeout()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab409eb2e640b7eed7394f0e8927254459a68702" translate="yes" xml:space="preserve">
          <source>Chain links (&lt;code&gt;ngx_chain_t&lt;/code&gt;) are actively used in nginx, so the nginx pool implementation provides a way to reuse them. The &lt;code&gt;chain&lt;/code&gt; field of &lt;code&gt;ngx_pool_t&lt;/code&gt; keeps a list of previously allocated links ready for reuse. For efficient allocation of a chain link in a pool, use the &lt;code&gt;ngx_alloc_chain_link(pool)&lt;/code&gt; function. This function looks up a free chain link in the pool list and allocates a new chain link if the pool list is empty. To free a link, call the &lt;code&gt;ngx_free_chain(pool, cl)&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32002406eb467f94e9038e758c1d5197f19c2360" translate="yes" xml:space="preserve">
          <source>Change: merged HTTP &lt;code&gt;Response&lt;/code&gt; and &lt;code&gt;Reply&lt;/code&gt; into &lt;a href=&quot;reference#http&quot;&gt;HTTP Request&lt;/a&gt;. New members of &lt;code&gt;Request&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1712d5a740126fc678a715c00152428b019bee89" translate="yes" xml:space="preserve">
          <source>Change: properties of HTTP request deprecated in &lt;a href=&quot;#njs0.2.2&quot;&gt;0.2.2&lt;/a&gt; are removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35d5707e7b3374b98c7e610654fa993a7c279ea" translate="yes" xml:space="preserve">
          <source>Change: returning undefined value instead of empty strings for absent properties in the following objects: &lt;a href=&quot;reference#r_args&quot;&gt;&lt;code&gt;r.args{}&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#r_headers_in&quot;&gt;&lt;code&gt;r.headersIn{}&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#r_headers_out&quot;&gt;&lt;code&gt;r.headersOut{}&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#r_variables&quot;&gt;&lt;code&gt;r.variables{}&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#s_variables&quot;&gt;&lt;code&gt;s.variables{}&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e5ce239a9d2c23f01b86ca847da419f0202d49" translate="yes" xml:space="preserve">
          <source>Change: returning undefined value instead of throwing an exception for &lt;a href=&quot;reference#r_request_body&quot;&gt;&lt;code&gt;r.requestBody&lt;/code&gt;&lt;/a&gt; when request body is unavailable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174641a0098394e367b1c1c6f715fc705706190a" translate="yes" xml:space="preserve">
          <source>Change: stream module handlers refactored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b9a0edc881dbc8609a2304a8e2b0b3b515c41d" translate="yes" xml:space="preserve">
          <source>Change: the &lt;a href=&quot;../http/ngx_http_js_module#js_include&quot;&gt;js_include&lt;/a&gt; directive has been disabled at server and location levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e1e0e519e9694672c08b2b0e12a2f94968cc5b" translate="yes" xml:space="preserve">
          <source>Change: the &lt;a href=&quot;../http/ngx_http_js_module#js_set&quot;&gt;js_set&lt;/a&gt; directive has been disabled at server and location levels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebc5600ec027b41005e5a85162f3fb8f08131d8" translate="yes" xml:space="preserve">
          <source>Change: the &lt;code&gt;strict&lt;/code&gt; mode is enforced, variables must be explicitly declared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa57de6dce6ee1c35c6aba7426503281876b258" translate="yes" xml:space="preserve">
          <source>Changes</source>
          <target state="translated">Changes</target>
        </trans-unit>
        <trans-unit id="46462be9a675bd913b9e448f982633b2548bde7a" translate="yes" xml:space="preserve">
          <source>Changes made during &lt;a href=&quot;../control#reconfiguration&quot;&gt;configuration reload&lt;/a&gt; or &lt;a href=&quot;../control#upgrade&quot;&gt;binary upgrade&lt;/a&gt; can be lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe747130c7fd4c3224d429491584a6f1524f786" translate="yes" xml:space="preserve">
          <source>Changes made in the configuration file will not be applied until the command to reload configuration is sent to nginx or it is restarted. To reload configuration, execute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f74491932369f6e9fce997ea406de2a066b58a6" translate="yes" xml:space="preserve">
          <source>Changes the limit on the largest size of a core file (&lt;code&gt;RLIMIT_CORE&lt;/code&gt;) for worker processes. Used to increase the limit without restarting the main process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613e776c2d16f9b45f44db459bba2f2878e1dde4" translate="yes" xml:space="preserve">
          <source>Changes the limit on the maximum number of open files (&lt;code&gt;RLIMIT_NOFILE&lt;/code&gt;) for worker processes. Used to increase the limit without restarting the main process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac085dc5dc2eed9a414fef615a7e36e9ac4a1ef" translate="yes" xml:space="preserve">
          <source>Changes the value of the selected key in the key-value pair or deletes a key by setting the key value to &lt;code&gt;null&lt;/code&gt;. If &lt;a href=&quot;../stream/ngx_stream_zone_sync_module#zone_sync&quot;&gt;synchronization&lt;/a&gt; of keyval zones in a cluster is enabled, deletes a key only on a target cluster node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0df14d6d54112bc01b785c4a25d91ed7bc8d1f6" translate="yes" xml:space="preserve">
          <source>Changes with 0.1.10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ddc61d21bf9039c55f18d106854f5b7908d8539" translate="yes" xml:space="preserve">
          <source>Changes with 0.1.11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5ff4114d15edfc1c2e78bb90b8bd2dbb796486" translate="yes" xml:space="preserve">
          <source>Changes with 0.1.12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faed92f6b40e70769b107c1bcc8b086491ee82ca" translate="yes" xml:space="preserve">
          <source>Changes with 0.1.13</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb688730d1476983781f4edb2b64b9494b96f179" translate="yes" xml:space="preserve">
          <source>Changes with 0.1.14</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7506b0b7252029308b689c8357b21e9b60b8a1" translate="yes" xml:space="preserve">
          <source>Changes with 0.1.15</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a178206e5c1700f0cf180d30b4bd6dd0a80972" translate="yes" xml:space="preserve">
          <source>Changes with 0.1.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4a255cfcfe02135fad9ad70841e107a50623a7" translate="yes" xml:space="preserve">
          <source>Changes with 0.1.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2764967d0dfbec4ff80294daba3bffb23d6a0528" translate="yes" xml:space="preserve">
          <source>Changes with 0.1.8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013f537d4c18ef3ba06f10b57d08cda49f690375" translate="yes" xml:space="preserve">
          <source>Changes with 0.1.9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62fcdac3e892bc0f0d8faf6969a9066420c1f84" translate="yes" xml:space="preserve">
          <source>Changes with 0.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3998a525562fa251e50c0603b6b2b928f4a2067" translate="yes" xml:space="preserve">
          <source>Changes with 0.2.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb17cdcd1e1e0de987279394f3c057b55c9a8bd3" translate="yes" xml:space="preserve">
          <source>Changes with 0.2.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="203b29d51709270a840a3de3d2296ec8203300d3" translate="yes" xml:space="preserve">
          <source>Changes with 0.2.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58cd0c3e718e189c3f5e1e475a2e3d3e5740f0f" translate="yes" xml:space="preserve">
          <source>Changes with 0.2.4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd18b93af436d85a06064565f23afacd3b4c3182" translate="yes" xml:space="preserve">
          <source>Changes with 0.2.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f205da16f8402112992247a830914b037180fe41" translate="yes" xml:space="preserve">
          <source>Changes with 0.2.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d030df26af54d580507b7fe6072f4eb6ca2435" translate="yes" xml:space="preserve">
          <source>Changes with 0.2.7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e2e8d94d5cc6bab494cbf2e8a6af7bc0ab49c0" translate="yes" xml:space="preserve">
          <source>Changes with 0.2.8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ce2405ae7a411a456b0cbd3b34bf9b7a52720e" translate="yes" xml:space="preserve">
          <source>Changes with 0.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2d0dd295e6528582638d884c06304c124b9451" translate="yes" xml:space="preserve">
          <source>Changes with 0.3.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9193b64e0df2dd3d3d921248890dfc8ce181b577" translate="yes" xml:space="preserve">
          <source>Changes with 0.3.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbf5fa5b1023c47157a3fc7b5d013d86bda6471" translate="yes" xml:space="preserve">
          <source>Changes with 0.3.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa74bc68b6ffa57cf45f9e32f81f231187844cb4" translate="yes" xml:space="preserve">
          <source>Changing Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03091f7d00b318be1deb76d542c11fdb3c7c596f" translate="yes" xml:space="preserve">
          <source>Chapter &amp;ldquo;nginx&amp;rdquo; in &amp;ldquo;The Architecture of Open Source Applications&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580d751bbdaf0bf8713e87a2ea02a3e0ebb4e085" translate="yes" xml:space="preserve">
          <source>Check out nginx sources from the hg.nginx.org repository. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f0df943c38dcae1e77d2d39c3df33cbb71169a" translate="yes" xml:space="preserve">
          <source>Checks the existence of files in the specified order and uses the first found file for request processing; the processing is performed in the current context. The path to a file is constructed from the &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; parameter according to the &lt;a href=&quot;#root&quot;&gt;root&lt;/a&gt; and &lt;a href=&quot;#alias&quot;&gt;alias&lt;/a&gt; directives. It is possible to check directory&amp;rsquo;s existence by specifying a slash at the end of a name, e.g. &amp;ldquo;&lt;code&gt;$uri/&lt;/code&gt;&amp;rdquo;. If none of the files were found, an internal redirect to the &lt;code&gt;&lt;i&gt;uri&lt;/i&gt;&lt;/code&gt; specified in the last parameter is made. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f12fbda1ab1442f4d6a792c81b4093743cc1f7" translate="yes" xml:space="preserve">
          <source>Choosing an index file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eea2921568ab88c7386074650778ae8e059044a" translate="yes" xml:space="preserve">
          <source>Cleanup handlers can be registered in a pool. A cleanup handler is a callback with an argument which is called when pool is destroyed. A pool is usually tied to a specific nginx object (like an HTTP request) and is destroyed when the object reaches the end of its lifetime. Registering a pool cleanup is a convenient way to release resources, close file descriptors or make final adjustments to the shared data associated with the main object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f577291b0c41c6e42fa58d7f5204a39cd81250d" translate="yes" xml:space="preserve">
          <source>Client access limitation before actual data processing. The &lt;a href=&quot;ngx_stream_access_module&quot;&gt;ngx_stream_access_module&lt;/a&gt; module is invoked at this phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf6684edf49f34607377c2c7e7724a54c67218a" translate="yes" xml:space="preserve">
          <source>Cluster nodes are specified either dynamically as a single &lt;code&gt;zone_sync_server&lt;/code&gt; directive with the &lt;code&gt;resolve&lt;/code&gt; parameter, or statically as a series of several directives without the parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5750b940d6720029e34eee8586abacc31ac208d7" translate="yes" xml:space="preserve">
          <source>Code layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ec0fe32b2d18d85cdb9db5f8c2098693757141" translate="yes" xml:space="preserve">
          <source>Code style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cb5356866bc49f005ffa286dc1595832c99f1c" translate="yes" xml:space="preserve">
          <source>Command-line interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86929e16c20c586831e1dd64daffa8354b490e1" translate="yes" xml:space="preserve">
          <source>Command-line parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce06e20e5f7f74aacccab40b59b75a56c8f7305" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comments</target>
        </trans-unit>
        <trans-unit id="9bd8ab860dfd35d53fe41648e44f37a14ccf405a" translate="yes" xml:space="preserve">
          <source>Common Pitfalls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cce2bea711ff8a990847c9892fc93ce5b438a3a" translate="yes" xml:space="preserve">
          <source>Common return codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d60c7dd62fdcf4abcc61a6a7d335b7117968b4d" translate="yes" xml:space="preserve">
          <source>Compatibility</source>
          <target state="translated">Compatibility</target>
        </trans-unit>
        <trans-unit id="8035a763e5409aa613c86ff2b6badc06b4941f6c" translate="yes" xml:space="preserve">
          <source>Complex access control and security checks in njs before a request reaches an upstream server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54caaf65cb1eb083fb223ab6030299f048636e11" translate="yes" xml:space="preserve">
          <source>Complex values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f602d1a86062ed0733c5c209d252a836b2bbe2" translate="yes" xml:space="preserve">
          <source>Computing a value of this variable usually requires one system call. To avoid a system call, the &lt;a href=&quot;#listen&quot;&gt;listen&lt;/a&gt; directives must specify addresses and use the &lt;code&gt;bind&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a6d3bea1f126fba65a513b23bf60879adf5de8" translate="yes" xml:space="preserve">
          <source>Conditionals and Loops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12c6d3c3a22b0676b5915df76c4608b7631c90a" translate="yes" xml:space="preserve">
          <source>Conditions are inside parentheses, negation is outside:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="cb84af5460dbaa47bb116764046c82ab93e49430" translate="yes" xml:space="preserve">
          <source>Configuration Directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac584a92bb0f3820913471995c9f5e2a863894ad" translate="yes" xml:space="preserve">
          <source>Configuration File&amp;rsquo;s Structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f347adc16321ac0f500e075ce7f3e24826b14f06" translate="yes" xml:space="preserve">
          <source>Configuration commands can be used to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54802aa4b5c62b55e8d37aa5f6b63e21d5afb62" translate="yes" xml:space="preserve">
          <source>Configuration directive handlers are called as they appear in configuration files in the context of the master process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e76dfb77ca51a9409b3d92956fd3c79928b215" translate="yes" xml:space="preserve">
          <source>Configuration file measurement units</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70daf59ac90789e1e1479b2eeba9a67401b0d95" translate="yes" xml:space="preserve">
          <source>Configuration structures are created at the nginx configuration stage by calling functions, which allocate the structures, initialize them and merge them. The following example shows how to create a simple location configuration for a module. The configuration has one setting, &lt;code&gt;foo&lt;/code&gt;, of type unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5903a86dce133beef30bfc7fa717005eb82faf87" translate="yes" xml:space="preserve">
          <source>Configures a cache that can store:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="313d3d67b57cb21041861dede1baa08985d2ab3c" translate="yes" xml:space="preserve">
          <source>Configures a timeout for a graceful shutdown of worker processes. When the &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; expires, nginx will try to close all the connections currently open to facilitate shutdown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e1b1c9c1f7e19a8b7201ef6296312cf388b5df" translate="yes" xml:space="preserve">
          <source>Configures logging. Several logs can be specified on the same level (1.5.2). If on the &lt;code&gt;main&lt;/code&gt; configuration level writing a log to a file is not explicitly defined, the default file will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b580feb8ec59099d0f5306ffc58127cb5afb3357" translate="yes" xml:space="preserve">
          <source>Configures name servers used to find the client&amp;rsquo;s hostname to pass it to the &lt;a href=&quot;ngx_mail_auth_http_module&quot;&gt;authentication server&lt;/a&gt;, and in the &lt;a href=&quot;ngx_mail_proxy_module#xclient&quot;&gt;XCLIENT&lt;/a&gt; command when proxying SMTP. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72ebf865c2ed2f84280597a488a6f8f35e2204c" translate="yes" xml:space="preserve">
          <source>Configures name servers used to resolve names of upstream servers into addresses, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80d73027e6d45af469ce2d36baf2f5f107c57ec" translate="yes" xml:space="preserve">
          <source>Configures the &amp;ldquo;TCP keepalive&amp;rdquo; behavior for outgoing connections to a FastCGI server. By default, the operating system&amp;rsquo;s settings are in effect for the socket. If the directive is set to the value &amp;ldquo;&lt;code&gt;on&lt;/code&gt;&amp;rdquo;, the &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; socket option is turned on for the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b02dd1287c716e196ab9e5b31128f6eba9c26b" translate="yes" xml:space="preserve">
          <source>Configures the &amp;ldquo;TCP keepalive&amp;rdquo; behavior for outgoing connections to a gRPC server. By default, the operating system&amp;rsquo;s settings are in effect for the socket. If the directive is set to the value &amp;ldquo;&lt;code&gt;on&lt;/code&gt;&amp;rdquo;, the &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; socket option is turned on for the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02976e8817697749015a9d296d1a3a0cc8a5b164" translate="yes" xml:space="preserve">
          <source>Configures the &amp;ldquo;TCP keepalive&amp;rdquo; behavior for outgoing connections to a memcached server. By default, the operating system&amp;rsquo;s settings are in effect for the socket. If the directive is set to the value &amp;ldquo;&lt;code&gt;on&lt;/code&gt;&amp;rdquo;, the &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; socket option is turned on for the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a167604cc765b9ba37a4bc86005eaecf095a67e" translate="yes" xml:space="preserve">
          <source>Configures the &amp;ldquo;TCP keepalive&amp;rdquo; behavior for outgoing connections to a proxied server. By default, the operating system&amp;rsquo;s settings are in effect for the socket. If the directive is set to the value &amp;ldquo;&lt;code&gt;on&lt;/code&gt;&amp;rdquo;, the &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; socket option is turned on for the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c161788974ec6458b3ef18ac3d97848c1fcaa1" translate="yes" xml:space="preserve">
          <source>Configures the &amp;ldquo;TCP keepalive&amp;rdquo; behavior for outgoing connections to a uwsgi server. By default, the operating system&amp;rsquo;s settings are in effect for the socket. If the directive is set to the value &amp;ldquo;&lt;code&gt;on&lt;/code&gt;&amp;rdquo;, the &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; socket option is turned on for the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6cbce9f836cb879bfc41b991be4221b840abf7" translate="yes" xml:space="preserve">
          <source>Configures the &amp;ldquo;TCP keepalive&amp;rdquo; behavior for outgoing connections to an SCGI server. By default, the operating system&amp;rsquo;s settings are in effect for the socket. If the directive is set to the value &amp;ldquo;&lt;code&gt;on&lt;/code&gt;&amp;rdquo;, the &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; socket option is turned on for the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7cc1ccc8c010dd42c32537dee5ea5446836efd" translate="yes" xml:space="preserve">
          <source>Configuring HTTPS servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6512ee1541e9a6c52d5bf7cf465332e8df25ea3c" translate="yes" xml:space="preserve">
          <source>Connection</source>
          <target state="translated">Connection</target>
        </trans-unit>
        <trans-unit id="6ccbc7273b74a600af73248aaf6984d2ef84f406" translate="yes" xml:space="preserve">
          <source>Connection processing methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2edd7b25d44cd97caf150014de0d11af0e6b880" translate="yes" xml:space="preserve">
          <source>Connections:</source>
          <target state="translated">Connections:</target>
        </trans-unit>
        <trans-unit id="e040a458f46532a90ec69fa0b4bfc33ba151c98b" translate="yes" xml:space="preserve">
          <source>Containers</source>
          <target state="translated">Containers</target>
        </trans-unit>
        <trans-unit id="258532fbadc3b41e8dfbe79245ef867a428839aa" translate="yes" xml:space="preserve">
          <source>Contents of a stream keyval shared memory zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33456c7fd37f907ba8627d58cb11c9f8182d762" translate="yes" xml:space="preserve">
          <source>Contents of an HTTP keyval shared memory zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d15eaf92a267e0a03325e52d09f34bab6f23882" translate="yes" xml:space="preserve">
          <source>Context:</source>
          <target state="translated">Context:</target>
        </trans-unit>
        <trans-unit id="2273b9c9bc4d8b0f1debc1c6d437cff3e790c077" translate="yes" xml:space="preserve">
          <source>Contributing Changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd5307c6ffa550268bbe2d9773f456df1743807" translate="yes" xml:space="preserve">
          <source>Controlling nginx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede90dfa74ee9d5a0e306230a7262cc1636df62a" translate="yes" xml:space="preserve">
          <source>Controls how nginx closes client connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5604d48bb1889180d8cacdd846f4fc644b9395" translate="yes" xml:space="preserve">
          <source>Controls whether header fields with invalid names should be ignored. Valid names are composed of English letters, digits, hyphens, and possibly underscores (as controlled by the &lt;a href=&quot;#underscores_in_headers&quot;&gt;underscores_in_headers&lt;/a&gt; directive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf8317eac91a1766d27d785bbe967a7608443dc" translate="yes" xml:space="preserve">
          <source>Controls whether warnings about uninitialized variables are logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21c74a9f336d5c906b67c1964c0d84f8b8035e2" translate="yes" xml:space="preserve">
          <source>Converting Mongrel rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394cf936acb9489576fad9c58380ff64101fa53a" translate="yes" xml:space="preserve">
          <source>Converting rewrite rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd64f60b4cdc23564825c6a11e8fbd81a09e8f8" translate="yes" xml:space="preserve">
          <source>Converts a &lt;code&gt;string&lt;/code&gt; that represents JSON data into an njs object (&lt;code&gt;{...}&lt;/code&gt;) or array (&lt;code&gt;[...]&lt;/code&gt;). The optional &lt;code&gt;reviver&lt;/code&gt; parameter is a function (key, value) that will be called for each (key,value) pair and can transform the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f2a34238ae987ca4382dbdae7f61fa27ddfec4" translate="yes" xml:space="preserve">
          <source>Converts a string to lower case. The method supports only simple Unicode folding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f33d7815fa04db8652a6d27a8294d65e44d02cb" translate="yes" xml:space="preserve">
          <source>Converts a string to upper case. The method supports only simple Unicode folding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884e2847d46d48563164c5d22a9cacb263d66737" translate="yes" xml:space="preserve">
          <source>Converts an njs object back to JSON. The obligatory &lt;code&gt;value&lt;/code&gt; parameter is generally a JSON &lt;code&gt;object&lt;/code&gt; or &lt;code&gt;array&lt;/code&gt; that will be converted. If the value has a &lt;code&gt;toJSON()&lt;/code&gt; method, it defines how the object will be serialized. The optional &lt;code&gt;replacer&lt;/code&gt; parameter is a &lt;code&gt;function&lt;/code&gt; or &lt;code&gt;array&lt;/code&gt; that transforms results. The optional &lt;code&gt;space&lt;/code&gt; parameter is a &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;number&lt;/code&gt;. If it is a &lt;code&gt;number&lt;/code&gt;, it indicates the number of white spaces placed before a result (no more than 10). If it is a &lt;code&gt;string&lt;/code&gt;, it is used as a white space (or first 10 characters of it). If omitted or is &lt;code&gt;null&lt;/code&gt;, no white space is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2210771d45f5ebd57d1c9d2e9c26018cf15905da" translate="yes" xml:space="preserve">
          <source>Copyright statements look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68836c550ee20fae0e06b2994e76a40348d2fc30" translate="yes" xml:space="preserve">
          <source>Core</source>
          <target state="translated">Core</target>
        </trans-unit>
        <trans-unit id="bc6e3a410aa372c2487ec123aa51c13c61ba9355" translate="yes" xml:space="preserve">
          <source>Core Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6098788960a059fd5712a584965a1eeff98b93" translate="yes" xml:space="preserve">
          <source>Core functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020c60da15d5fa7546ae87cece4ef7db2b45ab99" translate="yes" xml:space="preserve">
          <source>Core:</source>
          <target state="translated">Core:</target>
        </trans-unit>
        <trans-unit id="d6848aecdae3d86ebc22b8c44e33f434642ea2f1" translate="yes" xml:space="preserve">
          <source>Create a build and lib directories, and unpack zlib, PCRE and OpenSSL libraries sources into lib directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcea62223ab5595ce32e3e484012375766e9e4f6" translate="yes" xml:space="preserve">
          <source>Create a subrequest by calling the function &lt;code&gt;ngx_http_subrequest(r, uri, args, psr, ps, flags)&lt;/code&gt;, where &lt;code&gt;r&lt;/code&gt; is the parent request, &lt;code&gt;uri&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt; are the URI and arguments of the subrequest, &lt;code&gt;psr&lt;/code&gt; is the output parameter, which receives the newly created subrequest reference, &lt;code&gt;ps&lt;/code&gt; is a callback object for notifying the parent request that the subrequest is being finalized, and &lt;code&gt;flags&lt;/code&gt; is bitmask of flags. The following flags are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087ed05e21ce4728899644ef92ee256dcb39f07d" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;&lt;i&gt;$variable&lt;/i&gt;&lt;/code&gt; whose value is looked up by the &lt;code&gt;&lt;i&gt;key&lt;/i&gt;&lt;/code&gt; in the key-value database. Strings are matched ignoring the case. The database is stored in a shared memory zone specified by the &lt;code&gt;zone&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7ef8b39a4d1795b462845cbdb1eccceff32f76" translate="yes" xml:space="preserve">
          <source>Creates a new variable whose value depends on values of one or more of the source variables specified in the first parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605485cca2022ab113b77022c08f90c5d37488dd" translate="yes" xml:space="preserve">
          <source>Creates a variable for A/B testing, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f995979b10dfafd7100e726907bf2051a0b5f72" translate="yes" xml:space="preserve">
          <source>Creates and returns a &lt;a href=&quot;#crypto_hash&quot;&gt;Hash&lt;/a&gt; object that can be used to generate hash digests using the given &lt;code&gt;&lt;i&gt;algorithm&lt;/i&gt;&lt;/code&gt;. The algorighm can be &lt;code&gt;md5&lt;/code&gt;, &lt;code&gt;sha1&lt;/code&gt;, and &lt;code&gt;sha256&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f885224e9c8367c96d3a6cb1a86c32f67b1be531" translate="yes" xml:space="preserve">
          <source>Creates and returns an &lt;a href=&quot;#crypto_hmac&quot;&gt;HMAC&lt;/a&gt; object that uses the given &lt;code&gt;&lt;i&gt;algorithm&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;secret key&lt;/i&gt;&lt;/code&gt;. The algorighm can be &lt;code&gt;md5&lt;/code&gt;, &lt;code&gt;sha1&lt;/code&gt;, and &lt;code&gt;sha256&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc33f05c5d0782ffb3f631153f203444c48b7200" translate="yes" xml:space="preserve">
          <source>Creating HS JWT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916231bd2ae83ccd546a4cd9fea0b67f5ec40484" translate="yes" xml:space="preserve">
          <source>Creating secure_link Hash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e273ecf47a3c91a3696b49f1d014df2140ca0674" translate="yes" xml:space="preserve">
          <source>Creating variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e849494484ed2e3c1a93babc3e347d2e98ac8604" translate="yes" xml:space="preserve">
          <source>Crypto</source>
          <target state="translated">Crypto</target>
        </trans-unit>
        <trans-unit id="0c5c6aea57572e9322c9754983f65cc0d73a16be" translate="yes" xml:space="preserve">
          <source>Current implementation of SPDY protocol does not support &amp;ldquo;server push&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f96be18a9d22cc5a2c32435ea6b07f648ec3cdc" translate="yes" xml:space="preserve">
          <source>Current state, which may be one of &amp;ldquo;&lt;code&gt;up&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;down&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;unavail&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;checking&lt;/code&gt;&amp;rdquo;, or &amp;ldquo;&lt;code&gt;unhealthy&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994f00fdb2a6d958fca136c1b68703253170f0b5" translate="yes" xml:space="preserve">
          <source>Current state, which may be one of &amp;ldquo;&lt;code&gt;up&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;draining&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;down&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;unavail&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;checking&lt;/code&gt;&amp;rdquo;, and &amp;ldquo;&lt;code&gt;unhealthy&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467484232b878c3b930f9f3169c3357fc9e8a802" translate="yes" xml:space="preserve">
          <source>Current state, which may be one of &amp;ldquo;&lt;code&gt;up&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;draining&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;down&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;unavail&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;checking&lt;/code&gt;&amp;rdquo;, or &amp;ldquo;&lt;code&gt;unhealthy&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c47319dbfbebe2e215f9b35e1e94b309e3a42f6" translate="yes" xml:space="preserve">
          <source>Current time in milliseconds since Epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafdec956742d01a7fae27d0a3793ef043f75163" translate="yes" xml:space="preserve">
          <source>Current time in the ISO 8601 format with millisecond resolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5eda1b11afa0fcfb39f3eb94274b23a7d669749" translate="yes" xml:space="preserve">
          <source>Cycle</source>
          <target state="translated">Cycle</target>
        </trans-unit>
        <trans-unit id="5444f0bb0645dae0aa0efe96b08977464d506aba" translate="yes" xml:space="preserve">
          <source>DMA region code in US (also known as &amp;ldquo;metro code&amp;rdquo;), according to the &lt;a href=&quot;https://developers.google.com/adwords/api/docs/appendix/cities-DMAregions&quot;&gt;geotargeting&lt;/a&gt; in Google AdWords API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3872bec4c3de6e9ab80928377d52e551656dda6" translate="yes" xml:space="preserve">
          <source>DTrace capabilities for function calls tracing provide only a limited amount of useful information, though. Real-time inspection of function arguments is typically more interesting, but also a bit more complicated. Examples below are intended to help the reader become more familiar with DTrace and the process of analyzing nginx behavior using DTrace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="edc835f309eae13d3eb356c91e2263adb7fb3896" translate="yes" xml:space="preserve">
          <source>Debugging log for selected clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210b643c60621a869d0fa39a0f30fbebc26d3bee" translate="yes" xml:space="preserve">
          <source>Debugging nginx with DTrace pid provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241a12c6a34242d3a65d4712ac432c8faa2f47e7" translate="yes" xml:space="preserve">
          <source>Decodes a previously &lt;a href=&quot;#encodeuri&quot;&gt;encoded&lt;/a&gt; URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf6a8f99d1db73e93231b7305c7003e9ee3012f" translate="yes" xml:space="preserve">
          <source>Decodes an encoded component of a previously encoded URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb1ed5851ea44b3f6be89d2bea41819bd9eadaf" translate="yes" xml:space="preserve">
          <source>Default load balancing configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317bbd656753a9dd8ea52dce97e89a2822b25653" translate="yes" xml:space="preserve">
          <source>Default:</source>
          <target state="translated">Default:</target>
        </trans-unit>
        <trans-unit id="2f1ef56cb25b38f26d4cd71ea317d226dd1f6d87" translate="yes" xml:space="preserve">
          <source>Defines &lt;code&gt;&lt;i&gt;user&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;group&lt;/i&gt;&lt;/code&gt; credentials used by worker processes. If &lt;code&gt;&lt;i&gt;group&lt;/i&gt;&lt;/code&gt; is omitted, a group whose name equals that of &lt;code&gt;&lt;i&gt;user&lt;/i&gt;&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781fafe47390258bba0ca52c5a09c809d3958a16" translate="yes" xml:space="preserve">
          <source>Defines a &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; that will store the process ID of the main process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bb30ce8320a5ca52d663fb4e08d2620486f825" translate="yes" xml:space="preserve">
          <source>Defines a block that can be used as a stub in the &lt;code&gt;include&lt;/code&gt; command. The block can contain other SSI commands. The command has the following parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47479682a88777b7d85c0fc001aeaa22464e9c07" translate="yes" xml:space="preserve">
          <source>Defines a cache that stores the file descriptors of frequently used logs whose names contain variables. The directive has the following parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda187524c89d2a33b72f39c1496d24a3f1b8c29" translate="yes" xml:space="preserve">
          <source>Defines a directory for storing temporary files holding client request bodies. Up to three-level subdirectory hierarchy can be used under the specified directory. For example, in the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc38212b3fa8067787f721538c4d54c458071ee" translate="yes" xml:space="preserve">
          <source>Defines a directory for storing temporary files with data received from FastCGI servers. Up to three-level subdirectory hierarchy can be used underneath the specified directory. For example, in the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f932a54c5f30fb944ef2fe97d19c19b46e9bdc04" translate="yes" xml:space="preserve">
          <source>Defines a directory for storing temporary files with data received from SCGI servers. Up to three-level subdirectory hierarchy can be used underneath the specified directory. For example, in the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f5bbc29124863e3a6036a732b4bcc5fbc5bbdc" translate="yes" xml:space="preserve">
          <source>Defines a directory for storing temporary files with data received from proxied servers. Up to three-level subdirectory hierarchy can be used underneath the specified directory. For example, in the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d94e3aaacdc5d40e41cfc2d0914118d4ecc52c" translate="yes" xml:space="preserve">
          <source>Defines a directory for storing temporary files with data received from uwsgi servers. Up to three-level subdirectory hierarchy can be used underneath the specified directory. For example, in the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc25cd55b533daea92fdea8822d36325b20c196" translate="yes" xml:space="preserve">
          <source>Defines a domain for which the cookie is set. The &lt;code&gt;none&lt;/code&gt; parameter disables setting of a domain for the cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c31ab51753c6121b009161a1aca936cb7ba1e17" translate="yes" xml:space="preserve">
          <source>Defines a group of servers. Servers can listen on different ports. In addition, servers listening on TCP and UNIX-domain sockets can be mixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367139c731ba9d642a2319305d40756a5c259021" translate="yes" xml:space="preserve">
          <source>Defines a key for caching, for example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff993eb8012ebfe645c94ccecfc923b90a48d896" translate="yes" xml:space="preserve">
          <source>Defines a key for obtaining response from a memcached server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0041fc3aed2c7d5d3ca906dd217b377b3601ba" translate="yes" xml:space="preserve">
          <source>Defines a path for which the cookie is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b202a3192c003f34082f8eb8c1454826ca93776" translate="yes" xml:space="preserve">
          <source>Defines a regular expression that captures a value for the &lt;code&gt;$fastcgi_path_info&lt;/code&gt; variable. The regular expression should have two captures: the first becomes a value of the &lt;code&gt;$fastcgi_script_name&lt;/code&gt; variable, the second becomes a value of the &lt;code&gt;$fastcgi_path_info&lt;/code&gt; variable. For example, with these settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177c97e856f36cef31eb0b2fa6e85cc7cb734a9c" translate="yes" xml:space="preserve">
          <source>Defines a replacement for the specified location. For example, with the following configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0960ccb3072484dcd0ca708abd22560b58259091" translate="yes" xml:space="preserve">
          <source>Defines a secret &lt;code&gt;&lt;i&gt;word&lt;/i&gt;&lt;/code&gt; used to check authenticity of requested links.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33cd81d110eb5d8efa904ee0acf6055fddf9d830" translate="yes" xml:space="preserve">
          <source>Defines a shared memory zone used for caching. The same zone can be used in several places. Parameter value can contain variables (1.7.9). The &lt;code&gt;off&lt;/code&gt; parameter disables caching inherited from the previous configuration level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b33d4afe1a713902b93cf6b1784af17dece6775" translate="yes" xml:space="preserve">
          <source>Defines a string with variables from which the checksum value and lifetime of a link will be extracted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1871d7e65e085c6560d15e980094bcd900289d" translate="yes" xml:space="preserve">
          <source>Defines a timeout for establishing a connection with a FastCGI server. It should be noted that this timeout cannot usually exceed 75 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1b2f59cc2281ef8fc61de980c6a837cc05db04" translate="yes" xml:space="preserve">
          <source>Defines a timeout for establishing a connection with a gRPC server. It should be noted that this timeout cannot usually exceed 75 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d573fcbbc5348a87a5322653848ae335b91f7cc0" translate="yes" xml:space="preserve">
          <source>Defines a timeout for establishing a connection with a memcached server. It should be noted that this timeout cannot usually exceed 75 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f71367c9f34ec20338ec21809a3ef0496445266" translate="yes" xml:space="preserve">
          <source>Defines a timeout for establishing a connection with a proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd155beb78ff83e925b258405dc06121bc96dab0" translate="yes" xml:space="preserve">
          <source>Defines a timeout for establishing a connection with a proxied server. It should be noted that this timeout cannot usually exceed 75 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7d4738b332df9134a575d2c1493758650e07d6" translate="yes" xml:space="preserve">
          <source>Defines a timeout for establishing a connection with a uwsgi server. It should be noted that this timeout cannot usually exceed 75 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd296ad076519c8a2c594f52c85cda29e85079f7" translate="yes" xml:space="preserve">
          <source>Defines a timeout for establishing a connection with an SCGI server. It should be noted that this timeout cannot usually exceed 75 seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ce156f2b314b121938a4f72f865b9eb4204389" translate="yes" xml:space="preserve">
          <source>Defines a timeout for establishing a connection with another cluster node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497cf9a0242a9cae719d2e215a45c53305ae5f7f" translate="yes" xml:space="preserve">
          <source>Defines a timeout for reading a response from the FastCGI server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the FastCGI server does not transmit anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda08786ab818d4fab5cd8fbb29c5f03be711f59" translate="yes" xml:space="preserve">
          <source>Defines a timeout for reading a response from the SCGI server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the SCGI server does not transmit anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4be68e1543c507a0cc008524929f6917fc3948" translate="yes" xml:space="preserve">
          <source>Defines a timeout for reading a response from the gRPC server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the gRPC server does not transmit anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6c091c20732c767a0406129d45312a85009463" translate="yes" xml:space="preserve">
          <source>Defines a timeout for reading a response from the memcached server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the memcached server does not transmit anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="486d14fc3f4069eb29e1e835d442b3c166a2fe7c" translate="yes" xml:space="preserve">
          <source>Defines a timeout for reading a response from the proxied server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the proxied server does not transmit anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6dcf25bc91b5ca156ff8ef3f489c43d5b7a91f" translate="yes" xml:space="preserve">
          <source>Defines a timeout for reading a response from the uwsgi server. The timeout is set only between two successive read operations, not for the transmission of the whole response. If the uwsgi server does not transmit anything within this time, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6860aa7c61cd7f2d80b131eb01a89aeed49d0b54" translate="yes" xml:space="preserve">
          <source>Defines a timeout for reading client request body. The timeout is set only for a period between two successive read operations, not for the transmission of the whole request body. If a client does not transmit anything within this time, the request is terminated with the 408 (Request Time-out) error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e095c8e7b3b05e5c7040b1a47d45b12d203485c5" translate="yes" xml:space="preserve">
          <source>Defines a timeout for reading client request header. If a client does not transmit the entire header within this time, the request is terminated with the 408 (Request Time-out) error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2797239c3f323e87d43bc2ad58ba69b1cbe1fc61" translate="yes" xml:space="preserve">
          <source>Defines an expression for which the MD5 hash value will be computed and compared with the value passed in a request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d888fbffd595f532890a3bbbecef41458182a47c" translate="yes" xml:space="preserve">
          <source>Defines an interval between connection attempts to another cluster node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b5159bcd3d7d9cb968643fe25b37f1fffdd478" translate="yes" xml:space="preserve">
          <source>Defines an interval for polling updates in a shared memory zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bfdca550f97ec7032085ff64f278785b0604dc" translate="yes" xml:space="preserve">
          <source>Defines conditions under which the request will be considered a cache purge request. If at least one value of the string parameters is not empty and is not equal to &amp;ldquo;0&amp;rdquo; then the cache entry with a corresponding &lt;a href=&quot;#fastcgi_cache_key&quot;&gt;cache key&lt;/a&gt; is removed. The result of successful operation is indicated by returning the 204 (No Content) response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cabca04f3c6626f270add9e25587e695026c088a" translate="yes" xml:space="preserve">
          <source>Defines conditions under which the request will be considered a cache purge request. If at least one value of the string parameters is not empty and is not equal to &amp;ldquo;0&amp;rdquo; then the cache entry with a corresponding &lt;a href=&quot;#proxy_cache_key&quot;&gt;cache key&lt;/a&gt; is removed. The result of successful operation is indicated by returning the 204 (No Content) response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb886be80ba052691d6d48e799113290f7f582d" translate="yes" xml:space="preserve">
          <source>Defines conditions under which the request will be considered a cache purge request. If at least one value of the string parameters is not empty and is not equal to &amp;ldquo;0&amp;rdquo; then the cache entry with a corresponding &lt;a href=&quot;#scgi_cache_key&quot;&gt;cache key&lt;/a&gt; is removed. The result of successful operation is indicated by returning the 204 (No Content) response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b28a48379801da5b72827a50fc3cb4aa84e561" translate="yes" xml:space="preserve">
          <source>Defines conditions under which the request will be considered a cache purge request. If at least one value of the string parameters is not empty and is not equal to &amp;ldquo;0&amp;rdquo; then the cache entry with a corresponding &lt;a href=&quot;#uwsgi_cache_key&quot;&gt;cache key&lt;/a&gt; is removed. The result of successful operation is indicated by returning the 204 (No Content) response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaaaa18897cb412af325c6e22ac4ad9ae9403eb8" translate="yes" xml:space="preserve">
          <source>Defines conditions under which the response will not be saved to a cache. If at least one value of the string parameters is not empty and is not equal to &amp;ldquo;0&amp;rdquo; then the response will not be saved:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9db79d554bf1a4218f55337d6d97bdbff5d8e7d" translate="yes" xml:space="preserve">
          <source>Defines conditions under which the response will not be taken from a cache. If at least one value of the string parameters is not empty and is not equal to &amp;ldquo;0&amp;rdquo; then the response will not be taken from the cache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3268dc5f155a3b28f0e98f21f3a0d1d9660e092" translate="yes" xml:space="preserve">
          <source>Defines files that will be used as an index. The &lt;code&gt;&lt;i&gt;file&lt;/i&gt;&lt;/code&gt; name can contain variables. Files are checked in the specified order. The last element of the list can be a file with an absolute path. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4691c707990c34525a76b0f5a5ef1051f6da102" translate="yes" xml:space="preserve">
          <source>Defines named thread pools used for multi-threaded reading and sending of files &lt;a href=&quot;http/ngx_http_core_module#aio&quot;&gt;without blocking&lt;/a&gt; worker processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef36558f7bc6c4735f4a3155ae1959454216ac6" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; and other &lt;code&gt;&lt;i&gt;parameters&lt;/i&gt;&lt;/code&gt; of a server. The address can be specified as a domain name or IP address with an obligatory port, or as a UNIX-domain socket path specified after the &amp;ldquo;&lt;code&gt;unix:&lt;/code&gt;&amp;rdquo; prefix. A domain name that resolves to several IP addresses defines multiple servers at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce99a1419b469890a725649ae95fa4f51c9139f7" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; and other &lt;code&gt;&lt;i&gt;parameters&lt;/i&gt;&lt;/code&gt; of a server. The address can be specified as a domain name or IP address, with an optional port, or as a UNIX-domain socket path specified after the &amp;ldquo;&lt;code&gt;unix:&lt;/code&gt;&amp;rdquo; prefix. If a port is not specified, the port 80 is used. A domain name that resolves to several IP addresses defines multiple servers at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="206757b027d13b3d608fac51b93f331ae7e33d71" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; of a cluster node. The address can be specified as a domain name or IP address with a mandatory port, or as a UNIX-domain socket path specified after the &amp;ldquo;&lt;code&gt;unix:&lt;/code&gt;&amp;rdquo; prefix. A domain name that resolves to several IP addresses defines multiple nodes at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7c0bfc8ab8f6f41620331a3f5fbb9f235e165d" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;&lt;i&gt;domain&lt;/i&gt;&lt;/code&gt; for which the cookie is set. Parameter value can contain variables (1.11.5).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5411c153967975d4bf93b52f8966505452f644b4" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; of the shared memory zone that keeps the group&amp;rsquo;s configuration and run-time state that are shared between worker processes. Several groups may share the same zone. In this case, it is enough to specify the &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e742d557bb5387f7346b485335db305eeaec2f8" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;&lt;i&gt;path&lt;/i&gt;&lt;/code&gt; for which the cookie is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e338236c29a2f46a348866945a77a647a3b62b" translate="yes" xml:space="preserve">
          <source>Defines the URI that will be shown for the specified errors. A &lt;code&gt;&lt;i&gt;uri&lt;/i&gt;&lt;/code&gt; value can contain variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99c6dd9661c6ae07da14f446e4e9370f5b3663f" translate="yes" xml:space="preserve">
          <source>Defines the XSLT stylesheet and its optional parameters. A stylesheet is compiled at the configuration stage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce21c59a5fd982171c26334c6c8dab1a4dfb10b" translate="yes" xml:space="preserve">
          <source>Defines the address of a syslog server. The address can be specified as a domain name or IP address, with an optional port, or as a UNIX-domain socket path specified after the &amp;ldquo;&lt;code&gt;unix:&lt;/code&gt;&amp;rdquo; prefix. If port is not specified, the UDP port 514 is used. If a domain name resolves to several IP addresses, the first resolved address is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f351a06ba7f8e1ee0273617977c8d46ec0a80450" translate="yes" xml:space="preserve">
          <source>Defines the current working directory for a worker process. It is primarily used when writing a core-file, in which case a worker process should have write permission for the specified directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e7f0b07940d700a582e27e9b5f5e8ebd0603e9" translate="yes" xml:space="preserve">
          <source>Defines the default MIME type of a response. Mapping of file name extensions to MIME types can be set with the &lt;a href=&quot;#types&quot;&gt;types&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6ead4b02061dbd738f753e89e98c2271e1a1fa" translate="yes" xml:space="preserve">
          <source>Defines the default fragment length for playlist URIs requested without the &amp;ldquo;&lt;code&gt;len&lt;/code&gt;&amp;rdquo; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f726f8b622ff8428d19f7306edaa384030cdb52" translate="yes" xml:space="preserve">
          <source>Defines the name of a module that will be loaded during each reconfiguration. Several &lt;code&gt;perl_require&lt;/code&gt; directives can be present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7960692bfe4acc3c8a950af204ff4a1258febc17" translate="yes" xml:space="preserve">
          <source>Defines the name of the hardware SSL accelerator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9dd6896a350ab8871beceb4bf0c41f04b60d59" translate="yes" xml:space="preserve">
          <source>Defines the named test set used to verify responses to health check requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f29c5cdb06c41ac3b1fac9b60eeefa35aef0ca" translate="yes" xml:space="preserve">
          <source>Defines the named test set used to verify server responses to health checks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631c0391b254be7686f87049a2603c630dcf006b" translate="yes" xml:space="preserve">
          <source>Defines the number of worker processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdffd0b829cd78cf4db089bbfdc5c3debabfdb06" translate="yes" xml:space="preserve">
          <source>Defines the parameters for XSLT stylesheets. The &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; is treated as an XPath expression. The &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; can contain variables. To pass a string value to a stylesheet, the &lt;a href=&quot;#xslt_string_param&quot;&gt;xslt_string_param&lt;/a&gt; directive can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0a3a0146f866a6de757b9f6f73dc2132aa5873" translate="yes" xml:space="preserve">
          <source>Defines the request header field whose value will be used to replace the client address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa87b316a95a30548e084fafc2381480496d990" translate="yes" xml:space="preserve">
          <source>Defines the scheduling priority for worker processes like it is done by the &lt;code&gt;nice&lt;/code&gt; command: a negative &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; means higher priority. Allowed range normally varies from -20 to 20.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dac2f5f395de272b813e590f68e6854459f4cb5" translate="yes" xml:space="preserve">
          <source>Defines the source charset of a response. If this charset is different from the charset specified in the &lt;a href=&quot;#charset&quot;&gt;charset&lt;/a&gt; directive, a conversion is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c474563dce4007c044c517fca3c1b113bc0e396b" translate="yes" xml:space="preserve">
          <source>Defines the string parameters for XSLT stylesheets. XPath expressions in the &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; are not interpreted. The &lt;code&gt;&lt;i&gt;value&lt;/i&gt;&lt;/code&gt; can contain variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93e325a688fb4f47587f374ec1e49f1643355e7" translate="yes" xml:space="preserve">
          <source>Defines trusted addresses that are known to send correct replacement addresses. If the special value &lt;code&gt;unix:&lt;/code&gt; is specified, all UNIX-domain sockets will be trusted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35798ac9e46094c760a966a3ecd1626a8a1ce2b5" translate="yes" xml:space="preserve">
          <source>Defines trusted addresses that are known to send correct replacement addresses. If the special value &lt;code&gt;unix:&lt;/code&gt; is specified, all UNIX-domain sockets will be trusted. Trusted addresses may also be specified using a hostname (1.13.1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d2fe225ac97ccc2ecf510b150149d4e90cfc6c" translate="yes" xml:space="preserve">
          <source>Defines trusted addresses. When a request comes from a trusted address, an address from the &amp;ldquo;X-Forwarded-For&amp;rdquo; request header field will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648d7d8f7d90095ca324d83699b9077db0a86335" translate="yes" xml:space="preserve">
          <source>Defines whether transparency should be preserved when transforming GIF images or PNG images with colors specified by a palette. The loss of transparency results in images of a better quality. The alpha channel transparency in PNG is always preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac714621a477271bcde7907481889de075fbea26" translate="yes" xml:space="preserve">
          <source>Deletes all key-value pairs from the HTTP keyval shared memory &lt;a href=&quot;ngx_http_keyval_module#keyval_zone&quot;&gt;zone&lt;/a&gt;. If &lt;a href=&quot;../stream/ngx_stream_zone_sync_module#zone_sync&quot;&gt;synchronization&lt;/a&gt; of keyval zones in a cluster is enabled, empties the keyval zone only on a target cluster node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3879a9b5986383284c0ab0c051bdd54b99ffa5b" translate="yes" xml:space="preserve">
          <source>Deletes all key-value pairs from the stream keyval shared memory &lt;a href=&quot;../stream/ngx_stream_keyval_module#keyval_zone&quot;&gt;zone&lt;/a&gt;. If &lt;a href=&quot;../stream/ngx_stream_zone_sync_module#zone_sync&quot;&gt;synchronization&lt;/a&gt; of keyval zones in a cluster is enabled, empties the keyval zone only on a target cluster node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3beeb31352eeae07325f2e2bba4d37b312cc3960" translate="yes" xml:space="preserve">
          <source>Denies access for the specified network or address. If the special value &lt;code&gt;unix:&lt;/code&gt; is specified (1.5.1), denies access for all UNIX-domain sockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc33a5ec47d580df3e573cd95d2706c26f6eabdb" translate="yes" xml:space="preserve">
          <source>Denies access for the specified network or address. If the special value &lt;code&gt;unix:&lt;/code&gt; is specified, denies access for all UNIX-domain sockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a22ebd99613413a22a9ee40c757b229c8669a20" translate="yes" xml:space="preserve">
          <source>Depending on the contents of added keys, you may need to initialize up to three key arrays: one for exact matching (described above), and two more to enable matching starting from the head or tail of a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80d63daf446eb521220b16ff28704dd19d636b9" translate="yes" xml:space="preserve">
          <source>Depending on the file size either AES256 (for 80-byte keys, 1.11.8) or AES128 (for 48-byte keys) is used for encryption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf05b5842717fe9b2f1754090c5d5bf40f76934" translate="yes" xml:space="preserve">
          <source>Deprecated members of &lt;code&gt;Request&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e3e55065a3c1b4fc26042e285af95555514c5f" translate="yes" xml:space="preserve">
          <source>Deprecated members of &lt;code&gt;Response&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0f486f423086116aad1b9a5f489b6c46f5ded0" translate="yes" xml:space="preserve">
          <source>Describes the conversion table from one charset to another. A reverse conversion table is built using the same data. Character codes are given in hexadecimal. Missing characters in the range 80-FF are replaced with &amp;ldquo;&lt;code&gt;?&lt;/code&gt;&amp;rdquo;. When converting from UTF-8, characters missing in a one-byte charset are replaced with &amp;ldquo;&lt;code&gt;&amp;amp;#XXXX;&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00ec1b08bb72b93a66a574b05188e444e8cbbfd" translate="yes" xml:space="preserve">
          <source>Describes the dependency of values of the specified variable on the client IP address. By default, the address is taken from the &lt;code&gt;$remote_addr&lt;/code&gt; variable, but it can also be taken from another variable (0.7.27), for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6dcb2c9d94a7307529a937f68f696ce660e72c9" translate="yes" xml:space="preserve">
          <source>Describes the dependency of values of the specified variable on the client IP address. By default, the address is taken from the &lt;code&gt;$remote_addr&lt;/code&gt; variable, but it can also be taken from another variable, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cdd17e4d8a722b1be486fb4ab74a10089cc0be8" translate="yes" xml:space="preserve">
          <source>Detailed description of server names is provided in a separate &lt;a href=&quot;server_names&quot;&gt;Server names&lt;/a&gt; document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52d72900ba6c93e4f4ed36d54eba12b44ada7ba" translate="yes" xml:space="preserve">
          <source>Determines how symbolic links should be treated when opening files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc591b91bd1c1dcaa307fba35109da48f9304fc1" translate="yes" xml:space="preserve">
          <source>Determines in which cases a stale cached response can be used during communication with the proxied server. The directive&amp;rsquo;s parameters match the parameters of the &lt;a href=&quot;#proxy_next_upstream&quot;&gt;proxy_next_upstream&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde3764e49d677dcf744137b45695c5850b35893" translate="yes" xml:space="preserve">
          <source>Determines in which cases a stale cached response can be used when an error occurs during communication with the FastCGI server. The directive&amp;rsquo;s parameters match the parameters of the &lt;a href=&quot;#fastcgi_next_upstream&quot;&gt;fastcgi_next_upstream&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ece9cf8bde233c5d6fbcdc1479c9837b78fb00" translate="yes" xml:space="preserve">
          <source>Determines in which cases a stale cached response can be used when an error occurs during communication with the SCGI server. The directive&amp;rsquo;s parameters match the parameters of the &lt;a href=&quot;#scgi_next_upstream&quot;&gt;scgi_next_upstream&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b9d8c34cd9c7ee7d8c5aa9422e0e65f57caad0" translate="yes" xml:space="preserve">
          <source>Determines in which cases a stale cached response can be used when an error occurs during communication with the uwsgi server. The directive&amp;rsquo;s parameters match the parameters of the &lt;a href=&quot;#uwsgi_next_upstream&quot;&gt;uwsgi_next_upstream&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46a35cc6d6b14444561a523ddc2f28d8ccd0a65" translate="yes" xml:space="preserve">
          <source>Determines whether FastCGI server responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the &lt;a href=&quot;ngx_http_core_module#error_page&quot;&gt;error_page&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3789dd4983bfa4c9219f50763e6ce43007591914" translate="yes" xml:space="preserve">
          <source>Determines whether SSL sessions can be reused when working with a secured uwsgi server. If the errors &amp;ldquo;&lt;code&gt;SSL3_GET_FINISHED:digest check failed&lt;/code&gt;&amp;rdquo; appear in the logs, try disabling session reuse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5e4a0d78227b9da2d182f9e73fd41238e2e13d" translate="yes" xml:space="preserve">
          <source>Determines whether SSL sessions can be reused when working with the gRPC server. If the errors &amp;ldquo;&lt;code&gt;SSL3_GET_FINISHED:digest check failed&lt;/code&gt;&amp;rdquo; appear in the logs, try disabling session reuse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1f64a219d8970e2fe178b60ab8a01e30c1d515" translate="yes" xml:space="preserve">
          <source>Determines whether SSL sessions can be reused when working with the proxied server. If the errors &amp;ldquo;&lt;code&gt;SSL3_GET_FINISHED:digest check failed&lt;/code&gt;&amp;rdquo; appear in the logs, try disabling session reuse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d69b716465e3d7ab96e58ff798b9fc488cc90c" translate="yes" xml:space="preserve">
          <source>Determines whether a conversion should be performed for answers received from a proxied or a FastCGI/uwsgi/SCGI/gRPC server when the answers already carry a charset in the &amp;ldquo;Content-Type&amp;rdquo; response header field. If conversion is enabled, a charset specified in the received response is used as a source charset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828608b53af3d0726192f3aa0815c1b25411709f" translate="yes" xml:space="preserve">
          <source>Determines whether a uwsgi server responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the &lt;a href=&quot;ngx_http_core_module#error_page&quot;&gt;error_page&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a2aa36dc4a40b1542673a3a3238d0a730d33be" translate="yes" xml:space="preserve">
          <source>Determines whether an SCGI server responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the &lt;a href=&quot;ngx_http_core_module#error_page&quot;&gt;error_page&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514270f1d19f9292f2ae4960e9eb1c0cb852fedc" translate="yes" xml:space="preserve">
          <source>Determines whether gRPC server responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the &lt;a href=&quot;ngx_http_core_module#error_page&quot;&gt;error_page&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653093d3421f91db561ae9ce97a84c83eb95b4fc" translate="yes" xml:space="preserve">
          <source>Determines whether nginx should become a daemon. Mainly used during development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3748c5632c90412b321900beaa37fcb75b097c7" translate="yes" xml:space="preserve">
          <source>Determines whether nginx should save the entire client request body in a single buffer. The directive is recommended when using the &lt;code&gt;$request_body&lt;/code&gt; variable, to save the number of copy operations involved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0eaa7177ae59c79cd9c6b0153e2cb3b9969e3e" translate="yes" xml:space="preserve">
          <source>Determines whether nginx should save the entire client request body into a file. This directive can be used during debugging, or when using the &lt;code&gt;$request_body_file&lt;/code&gt; variable, or the &lt;a href=&quot;ngx_http_perl_module#methods&quot;&gt;$r-&amp;gt;request_body_file&lt;/a&gt; method of the module &lt;a href=&quot;ngx_http_perl_module&quot;&gt;ngx_http_perl_module&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431fec665b49ef87214ed62d2c6aee6354a3a519" translate="yes" xml:space="preserve">
          <source>Determines whether proxied responses with codes greater than or equal to 300 should be passed to a client or be intercepted and redirected to nginx for processing with the &lt;a href=&quot;ngx_http_core_module#error_page&quot;&gt;error_page&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="689348dc1fafd8056a651d2bcebb45458374d440" translate="yes" xml:space="preserve">
          <source>Determines whether the connection with a FastCGI server should be closed when a client closes the connection without waiting for a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad3a36451f5a5302120d14d2a82f58d3dbe04a5" translate="yes" xml:space="preserve">
          <source>Determines whether the connection with a proxied server should be closed when a client closes the connection without waiting for a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c0656749e3b251c83180d6128fdce7e8bde6c1" translate="yes" xml:space="preserve">
          <source>Determines whether the connection with a uwsgi server should be closed when a client closes the connection without waiting for a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc04389a54056bf7ff1240bd1a344b7b72b0f26" translate="yes" xml:space="preserve">
          <source>Determines whether the connection with an SCGI server should be closed when a client closes the connection without waiting for a response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a328af65b742e34224fc5dbf88b7a7c82e66c7" translate="yes" xml:space="preserve">
          <source>Determines whether worker processes are started. This directive is intended for nginx developers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">Development</target>
        </trans-unit>
        <trans-unit id="b71b2025231793dad4faea4a2ebcc72c54bfc813" translate="yes" xml:space="preserve">
          <source>Development guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b64aecd270dc0e69d3576c535a09400124f2c53" translate="yes" xml:space="preserve">
          <source>Different servers must listen on different &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt;:&lt;code&gt;&lt;i&gt;port&lt;/i&gt;&lt;/code&gt; pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c82071e940360118b0611d5c912a71c32a0100" translate="yes" xml:space="preserve">
          <source>Directives</source>
          <target state="translated">Directives</target>
        </trans-unit>
        <trans-unit id="1b436c0c2884b546d1e9e9476961c0990f272117" translate="yes" xml:space="preserve">
          <source>Directives placed in the configuration file outside of any contexts are considered to be in the &lt;a href=&quot;ngx_core_module&quot;&gt;main&lt;/a&gt; context. The &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;http&lt;/code&gt; directives reside in the &lt;code&gt;main&lt;/code&gt; context, &lt;code&gt;server&lt;/code&gt; in &lt;code&gt;http&lt;/code&gt;, and &lt;code&gt;location&lt;/code&gt; in &lt;code&gt;server&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f46f3898b2d303c8de15059b1258c476403ca92" translate="yes" xml:space="preserve">
          <source>Disables adding the &amp;ldquo;hostname&amp;rdquo; field into the syslog message header (1.9.7).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b21607a4b6e50ae8a8472557f11a40d1ef717f" translate="yes" xml:space="preserve">
          <source>Disables gzipping of responses for requests with &amp;ldquo;User-Agent&amp;rdquo; header fields matching any of the specified regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7589762da602dd9fead366a27e008793769e7f36" translate="yes" xml:space="preserve">
          <source>Disables keep-alive connections with misbehaving browsers. The &lt;code&gt;&lt;i&gt;browser&lt;/i&gt;&lt;/code&gt; parameters specify which browsers will be affected. The value &lt;code&gt;msie6&lt;/code&gt; disables keep-alive connections with old versions of MSIE, once a POST request is received. The value &lt;code&gt;safari&lt;/code&gt; disables keep-alive connections with Safari and Safari-like browsers on macOS and macOS-like operating systems. The value &lt;code&gt;none&lt;/code&gt; enables keep-alive connections with all browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170882845bc9363edb215c4869b30d5ba05091e7" translate="yes" xml:space="preserve">
          <source>Disables processing of certain response header fields from the FastCGI server. The following fields can be ignored: &amp;ldquo;X-Accel-Redirect&amp;rdquo;, &amp;ldquo;X-Accel-Expires&amp;rdquo;, &amp;ldquo;X-Accel-Limit-Rate&amp;rdquo; (1.1.6), &amp;ldquo;X-Accel-Buffering&amp;rdquo; (1.1.6), &amp;ldquo;X-Accel-Charset&amp;rdquo; (1.1.6), &amp;ldquo;Expires&amp;rdquo;, &amp;ldquo;Cache-Control&amp;rdquo;, &amp;ldquo;Set-Cookie&amp;rdquo; (0.8.44), and &amp;ldquo;Vary&amp;rdquo; (1.7.7).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c896f6d0176acc4dedd3e050c696ecd9d5288f" translate="yes" xml:space="preserve">
          <source>Disables processing of certain response header fields from the SCGI server. The following fields can be ignored: &amp;ldquo;X-Accel-Redirect&amp;rdquo;, &amp;ldquo;X-Accel-Expires&amp;rdquo;, &amp;ldquo;X-Accel-Limit-Rate&amp;rdquo; (1.1.6), &amp;ldquo;X-Accel-Buffering&amp;rdquo; (1.1.6), &amp;ldquo;X-Accel-Charset&amp;rdquo; (1.1.6), &amp;ldquo;Expires&amp;rdquo;, &amp;ldquo;Cache-Control&amp;rdquo;, &amp;ldquo;Set-Cookie&amp;rdquo; (0.8.44), and &amp;ldquo;Vary&amp;rdquo; (1.7.7).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33529c8d552685398f804203a26c2025b96a1dd2" translate="yes" xml:space="preserve">
          <source>Disables processing of certain response header fields from the gRPC server. The following fields can be ignored: &amp;ldquo;X-Accel-Redirect&amp;rdquo; and &amp;ldquo;X-Accel-Charset&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaf5bbb1777520d64d674a114c25648cdfc7612" translate="yes" xml:space="preserve">
          <source>Disables processing of certain response header fields from the proxied server. The following fields can be ignored: &amp;ldquo;X-Accel-Redirect&amp;rdquo;, &amp;ldquo;X-Accel-Expires&amp;rdquo;, &amp;ldquo;X-Accel-Limit-Rate&amp;rdquo; (1.1.6), &amp;ldquo;X-Accel-Buffering&amp;rdquo; (1.1.6), &amp;ldquo;X-Accel-Charset&amp;rdquo; (1.1.6), &amp;ldquo;Expires&amp;rdquo;, &amp;ldquo;Cache-Control&amp;rdquo;, &amp;ldquo;Set-Cookie&amp;rdquo; (0.8.44), and &amp;ldquo;Vary&amp;rdquo; (1.7.7).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06bd541853c7bf37f96ce6bfecbb672c66d57291" translate="yes" xml:space="preserve">
          <source>Disables processing of certain response header fields from the uwsgi server. The following fields can be ignored: &amp;ldquo;X-Accel-Redirect&amp;rdquo;, &amp;ldquo;X-Accel-Expires&amp;rdquo;, &amp;ldquo;X-Accel-Limit-Rate&amp;rdquo; (1.1.6), &amp;ldquo;X-Accel-Buffering&amp;rdquo; (1.1.6), &amp;ldquo;X-Accel-Charset&amp;rdquo; (1.1.6), &amp;ldquo;Expires&amp;rdquo;, &amp;ldquo;Cache-Control&amp;rdquo;, &amp;ldquo;Set-Cookie&amp;rdquo; (0.8.44), and &amp;ldquo;Vary&amp;rdquo; (1.7.7).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0932b3a823c29a4d6ffb965b654b98492cdbc2f5" translate="yes" xml:space="preserve">
          <source>Do not enable this feature unless the server can handle receiving the &lt;a href=&quot;https://tools.ietf.org/html/rfc7413#section-6.1&quot;&gt; same SYN packet with data&lt;/a&gt; more than once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0388ee8f1bbf14d94e00e622232203358e79e558" translate="yes" xml:space="preserve">
          <source>Download and install</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8236352559c0b5efeccde4c05fa881d8f08ed02a" translate="yes" xml:space="preserve">
          <source>During metadata processing, a larger buffer may become necessary. Its size cannot exceed the specified &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt;, or else nginx will return the 500 (Internal Server Error) server error, and log the following message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f932364a13e6c35ed8945ae791606715cd3b23" translate="yes" xml:space="preserve">
          <source>During metadata processing, a larger buffer may become necessary. Its size cannot exceed the specified &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt;, or else nginx will return the server error 500 (Internal Server Error), and log the following message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d75d9c8e1239a59b9e40abad79d8ccc58eb62e" translate="yes" xml:space="preserve">
          <source>During searching for a virtual server by name, if the name matches more than one of the specified variants, (e.g. both a wildcard name and regular expression match), the first matching variant will be chosen, in the following order of priority:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e67596c030e2f2f49ebf7586f667e242657a5e" translate="yes" xml:space="preserve">
          <source>Dynamically configurable group with periodic &lt;a href=&quot;ngx_http_upstream_hc_module&quot;&gt;health checks&lt;/a&gt; is available as part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d903cf826c31b67c84977b7231175814d7d8f71" translate="yes" xml:space="preserve">
          <source>Dynamically configurable group with periodic &lt;a href=&quot;ngx_stream_upstream_hc_module&quot;&gt;health checks&lt;/a&gt; is available as part of our &lt;a href=&quot;http://nginx.com/products/&quot;&gt;commercial subscription&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d3a841d7d6fe9faf5c5522a5c1a4e00138e4ea" translate="yes" xml:space="preserve">
          <source>Dynamically configurable parameters of a stream upstream &lt;a href=&quot;../stream/ngx_stream_upstream_module#server&quot;&gt;server&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfab9e68cd6b48d46cb8ff789efa24f9dbf09ec" translate="yes" xml:space="preserve">
          <source>Dynamically configurable parameters of an HTTP upstream &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;server&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbee5d88f97458fb37d4649e995eb85d4286e9a" translate="yes" xml:space="preserve">
          <source>ES256, ES384, ES512</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64143790942f9662daa514f61cd4c3d96cdb120f" translate="yes" xml:space="preserve">
          <source>ES5.1 &lt;code&gt;arguments&lt;/code&gt; object (0.2.5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ddfcb764a01afe561fabe7ebd7e66634d3f485" translate="yes" xml:space="preserve">
          <source>ES5.1 global functions: &lt;a href=&quot;reference#decodeuri&quot;&gt;&lt;code&gt;decodeURI&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#decodeuricomponent&quot;&gt;&lt;code&gt;decodeURIComponent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#encodeuri&quot;&gt;&lt;code&gt;encodeURI&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#encodeuricomponent&quot;&gt;&lt;code&gt;encodeURIComponent&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;isFinite&lt;/code&gt;, &lt;code&gt;isNaN&lt;/code&gt;, &lt;code&gt;parseFloat&lt;/code&gt;, &lt;code&gt;parseInt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f464a05f4e78120ae754b7181aa135fa87add24" translate="yes" xml:space="preserve">
          <source>ES5.1 operators, ES7 exponentiation operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f9e4523b2832b5c112f673692ec15b5897a365" translate="yes" xml:space="preserve">
          <source>ES5.1 statements: &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;catch&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, &lt;code&gt;do while&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;finally&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;for in&lt;/code&gt;, &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, &lt;code&gt;try&lt;/code&gt;, &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;while&lt;/code&gt;, labeled statements (&lt;a href=&quot;changes#njs0.2.8&quot;&gt;0.2.8&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de955545e0b445f917d6e63eed2bc24e1c3261fe" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;a href=&quot;reference#core_json_parse&quot;&gt;&lt;code&gt;parse&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#core_json_stringify&quot;&gt;&lt;code&gt;stringify&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3775d5cf24ef781372fa742fb240b3f2197feb5f" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;a href=&quot;reference#string_charat&quot;&gt;&lt;code&gt;charAt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_concat&quot;&gt;&lt;code&gt;concat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_indexof&quot;&gt;&lt;code&gt;indexOf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_lastindexof&quot;&gt;&lt;code&gt;lastIndexOf&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_match&quot;&gt;&lt;code&gt;match&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_replace&quot;&gt;&lt;code&gt;replace&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;reference#string_search&quot;&gt;&lt;code&gt;search&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_slice&quot;&gt;&lt;code&gt;slice&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_substr&quot;&gt;&lt;code&gt;substr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_substring&quot;&gt;&lt;code&gt;substring&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_tolowercase&quot;&gt;&lt;code&gt;toLowerCase&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_trim&quot;&gt;&lt;code&gt;trim&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_touppercase&quot;&gt;&lt;code&gt;toUpperCase&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e020886742af048d870a31d9f534aba96d44c5" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;a href=&quot;reference#string_fromcharcode&quot;&gt;&lt;code&gt;fromCharCode&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b758fc3c92574ee1cbb9e40ff3b91e1a0351010" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;code&gt;apply&lt;/code&gt;, &lt;code&gt;bind&lt;/code&gt;, &lt;code&gt;call&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a32b2b70892bd0a2537f9d287e80d3b5710f712" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;code&gt;concat&lt;/code&gt;, &lt;code&gt;every&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;forEach&lt;/code&gt;, &lt;code&gt;indexOf&lt;/code&gt;, &lt;code&gt;join&lt;/code&gt;, &lt;code&gt;lastIndexOf&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;pop&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;reduce&lt;/code&gt;, &lt;code&gt;reduceRight&lt;/code&gt;, &lt;code&gt;reverse&lt;/code&gt;, &lt;code&gt;shift&lt;/code&gt;, &lt;code&gt;slice&lt;/code&gt;, &lt;code&gt;some&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;splice&lt;/code&gt;, &lt;code&gt;unshift&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c243b90e2603fa30f7d0e30fcf7f3ff160bf89" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;code&gt;create&lt;/code&gt; (support without properties list), &lt;code&gt;defineProperties&lt;/code&gt; (support without accessor descriptors), &lt;code&gt;defineProperty&lt;/code&gt; (support without accessor descriptors), &lt;code&gt;freeze&lt;/code&gt;, &lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt;, &lt;code&gt;getOwnPropertyDescriptors&lt;/code&gt; (&lt;a href=&quot;changes#njs0.3.1&quot;&gt;0.3.1&lt;/a&gt;), &lt;code&gt;getOwnPropertyNames&lt;/code&gt; (&lt;a href=&quot;changes#njs0.3.1&quot;&gt;0.3.1&lt;/a&gt;), &lt;code&gt;getPrototypeOf&lt;/code&gt;, &lt;code&gt;isExtensible&lt;/code&gt;, &lt;code&gt;isFrozen&lt;/code&gt;, &lt;code&gt;isSealed&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;preventExtensions&lt;/code&gt;, &lt;code&gt;seal&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a5b1ba693428438b956a4dc4f812244ccbf1ae" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;code&gt;exec&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;toString&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4eca4c06c6dee58d067c8113725309f2e948c1" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;code&gt;getDate&lt;/code&gt;, &lt;code&gt;getDay&lt;/code&gt;, &lt;code&gt;getFullYear&lt;/code&gt;, &lt;code&gt;getHours&lt;/code&gt;, &lt;code&gt;getMilliseconds&lt;/code&gt;, &lt;code&gt;getMinutes&lt;/code&gt;, &lt;code&gt;getMonth&lt;/code&gt;, &lt;code&gt;getSeconds&lt;/code&gt;, &lt;code&gt;getTime&lt;/code&gt;, &lt;code&gt;getTimezoneOffset&lt;/code&gt;, &lt;code&gt;getUTCDate&lt;/code&gt;, &lt;code&gt;getUTCDay&lt;/code&gt;, &lt;code&gt;getUTCFullYear&lt;/code&gt;, &lt;code&gt;getUTCHours&lt;/code&gt;, &lt;code&gt;getUTCMilliseconds&lt;/code&gt;, &lt;code&gt;getUTCMinutes&lt;/code&gt;, &lt;code&gt;getUTCMonth&lt;/code&gt;, &lt;code&gt;getUTCSeconds&lt;/code&gt;, &lt;code&gt;toDateString&lt;/code&gt;, &lt;code&gt;toISOString&lt;/code&gt;, &lt;code&gt;toLocaleDateString&lt;/code&gt;, &lt;code&gt;toLocaleString&lt;/code&gt;, &lt;code&gt;toLocaleTimeString&lt;/code&gt;, &lt;code&gt;toTimeString&lt;/code&gt;, &lt;code&gt;toUTCString&lt;/code&gt;, &lt;code&gt;setDate&lt;/code&gt;, &lt;code&gt;setFullYear&lt;/code&gt;, &lt;code&gt;setHours&lt;/code&gt;, &lt;code&gt;setMinutes&lt;/code&gt;, &lt;code&gt;setMilliseconds&lt;/code&gt;, &lt;code&gt;setMonth&lt;/code&gt;, &lt;code&gt;setSeconds&lt;/code&gt;, &lt;code&gt;setTime&lt;/code&gt;, &lt;code&gt;setUTCDate&lt;/code&gt;, &lt;code&gt;setUTCFullYear&lt;/code&gt;, &lt;code&gt;setUTCHours&lt;/code&gt;, &lt;code&gt;setUTCMilliseconds&lt;/code&gt;, &lt;code&gt;setUTCMinutes&lt;/code&gt;, &lt;code&gt;setUTCMonth&lt;/code&gt;, &lt;code&gt;setUTCSeconds&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20dea9f0e8d21fcf18f5b1fd86e04770e3997e45" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;code&gt;hasOwnProperty&lt;/code&gt;, &lt;code&gt;isPrototypeOf&lt;/code&gt;, (&lt;a href=&quot;changes#njs0.3.0&quot;&gt;0.3.0&lt;/a&gt;), &lt;code&gt;propertyIsEnumerable&lt;/code&gt;, &lt;code&gt;toString&lt;/code&gt;, &lt;code&gt;valueOf&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b3f3edf32000e39fa8307b8c347d21ab2667ac" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;code&gt;isArray&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f657ec5254ff1a807972d07910b7ee7efeccd83a" translate="yes" xml:space="preserve">
          <source>ES5.1: &lt;code&gt;now&lt;/code&gt;, &lt;code&gt;parse&lt;/code&gt;, &lt;code&gt;UTC&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18531b508510d325649379c7139fd92ee551a12c" translate="yes" xml:space="preserve">
          <source>ES6 arrow functions (&lt;a href=&quot;changes#njs0.3.1&quot;&gt;0.3.1&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426880c74f2a3bb4743b75e59e9d55a215e7a56f" translate="yes" xml:space="preserve">
          <source>ES6 modules support: default &lt;code&gt;export&lt;/code&gt; and default &lt;code&gt;import&lt;/code&gt; statements (&lt;a href=&quot;changes#njs0.3.0&quot;&gt;0.3.0&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9b3b5c1d476d065812f60a2581e7f065de386f" translate="yes" xml:space="preserve">
          <source>ES6 rest parameters syntax (without destructuring support) (&lt;a href=&quot;changes#njs0.2.7&quot;&gt;0.2.7&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc0e756ff77ee764f439879c7a3dce2c1af2f4f" translate="yes" xml:space="preserve">
          <source>ES6: &lt;a href=&quot;reference#string_codepointat&quot;&gt;&lt;code&gt;codePointAt&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_endswith&quot;&gt;&lt;code&gt;endsWith&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_includes&quot;&gt;&lt;code&gt;includes&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_repeat&quot;&gt;&lt;code&gt;repeat&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_startswith&quot;&gt;&lt;code&gt;startsWith&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8ac846bd99102440f7343a1c32585fc8bdfb98" translate="yes" xml:space="preserve">
          <source>ES6: &lt;a href=&quot;reference#string_fromcodepoint&quot;&gt;&lt;code&gt;fromCodePoint&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1361c5e6d47fa4249185b367b7f53ccb1c7d1e0" translate="yes" xml:space="preserve">
          <source>ES6: &lt;code&gt;E&lt;/code&gt;, &lt;code&gt;LN10&lt;/code&gt;, &lt;code&gt;LN2&lt;/code&gt;, &lt;code&gt;LOG10E&lt;/code&gt;, &lt;code&gt;LOG2E&lt;/code&gt;, &lt;code&gt;PI&lt;/code&gt;, &lt;code&gt;SQRT1_2&lt;/code&gt;, &lt;code&gt;SQRT2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd87082f006b4965a491cc71a588831cd93a4d12" translate="yes" xml:space="preserve">
          <source>ES6: &lt;code&gt;EPSILON&lt;/code&gt;, &lt;code&gt;MAX_SAFE_INTEGER&lt;/code&gt;, &lt;code&gt;MAX_VALUE&lt;/code&gt;, &lt;code&gt;MIN_SAFE_INTEGER&lt;/code&gt;, &lt;code&gt;MIN_VALUE&lt;/code&gt;, &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4410eabd34465ce4b174537db5e4f0771294e16f" translate="yes" xml:space="preserve">
          <source>ES6: &lt;code&gt;abs&lt;/code&gt;, &lt;code&gt;acos&lt;/code&gt;, &lt;code&gt;acosh&lt;/code&gt;, &lt;code&gt;asin&lt;/code&gt;, &lt;code&gt;asinh&lt;/code&gt;, &lt;code&gt;atan&lt;/code&gt;, &lt;code&gt;atan2&lt;/code&gt;, &lt;code&gt;atanh&lt;/code&gt;, &lt;code&gt;cbrt&lt;/code&gt;, &lt;code&gt;ceil&lt;/code&gt;, &lt;code&gt;clz32&lt;/code&gt;, &lt;code&gt;cos&lt;/code&gt;, &lt;code&gt;cosh&lt;/code&gt;, &lt;code&gt;exp&lt;/code&gt;, &lt;code&gt;expm1&lt;/code&gt;, &lt;code&gt;floor&lt;/code&gt;, &lt;code&gt;fround&lt;/code&gt;, &lt;code&gt;hypot&lt;/code&gt;, &lt;code&gt;imul&lt;/code&gt;, &lt;code&gt;log&lt;/code&gt;, &lt;code&gt;log10&lt;/code&gt;, &lt;code&gt;log1p&lt;/code&gt;, &lt;code&gt;log2&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;pow&lt;/code&gt;, &lt;code&gt;random&lt;/code&gt;, &lt;code&gt;round&lt;/code&gt;, &lt;code&gt;sign&lt;/code&gt;, &lt;code&gt;sin&lt;/code&gt;, &lt;code&gt;sinh&lt;/code&gt;, &lt;code&gt;sqrt&lt;/code&gt;, &lt;code&gt;tan&lt;/code&gt;, &lt;code&gt;tanh&lt;/code&gt;, &lt;code&gt;trunc&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7096ba0889d0744ac221e817c42e95f8109ae6ea" translate="yes" xml:space="preserve">
          <source>ES6: &lt;code&gt;fill&lt;/code&gt;, &lt;code&gt;find&lt;/code&gt;, &lt;code&gt;findIndex&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9937f6a3fac8d0ac9eca5adbb026400210e45e" translate="yes" xml:space="preserve">
          <source>ES6: &lt;code&gt;isFinite&lt;/code&gt;, &lt;code&gt;isInteger&lt;/code&gt;, &lt;code&gt;isNaN&lt;/code&gt;, &lt;code&gt;isSafeInteger&lt;/code&gt;, &lt;code&gt;parseFloat&lt;/code&gt;, &lt;code&gt;parseInt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5ec44ecdaf81437cf76abe6f5ca5117b2e12e1" translate="yes" xml:space="preserve">
          <source>ES6: &lt;code&gt;of&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8433a5a2843108187ce45fa351114cb5699b0285" translate="yes" xml:space="preserve">
          <source>ES7: &lt;code&gt;includes&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b83b6e8f40dd1de2f27b1051d9b7283bae694eb" translate="yes" xml:space="preserve">
          <source>ES8: &lt;a href=&quot;reference#object_entries&quot;&gt;&lt;code&gt;entries&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;changes#njs0.2.7&quot;&gt;0.2.7&lt;/a&gt;), &lt;a href=&quot;reference#object_values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;changes#njs0.2.7&quot;&gt;0.2.7&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030367e7a2769f274602d8edd593ccbef6b41ae7" translate="yes" xml:space="preserve">
          <source>ES8: &lt;a href=&quot;reference#string_padend&quot;&gt;&lt;code&gt;padEnd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;reference#string_padstart&quot;&gt;&lt;code&gt;padStart&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fed1146c59bba1d9c8d39e944bda43cc6c05ed" translate="yes" xml:space="preserve">
          <source>Each HTTP client connection runs through the following stages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8a9da26c1fed90f20580dd700643fa77d1d027" translate="yes" xml:space="preserve">
          <source>Each HTTP module can have three types of configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf71ccfb817956e5741c0b33a036f3d5a044aa08" translate="yes" xml:space="preserve">
          <source>Each HTTP njs handler receives one argument, a request &lt;a href=&quot;../njs/reference#http&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2224194d1e0b960e3f0a151773938d1df704eaf9" translate="yes" xml:space="preserve">
          <source>Each HTTP request passes through a sequence of phases. In each phase a distinct type of processing is performed on the request. Module-specific handlers can be registered in most phases, and many standard nginx modules register their phase handlers as a way to get called at a specific stage of request processing. Phases are processed successively and the phase handlers are called once the request reaches the phase. Following is the list of nginx HTTP phases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1337c8b97091832f388e8c617b35c7aea73a67" translate="yes" xml:space="preserve">
          <source>Each chain link keeps a reference to its buffer and a reference to the next chain link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646eece8a67655a8df426d3e2a767727cd5426c5" translate="yes" xml:space="preserve">
          <source>Each cluster node should be specified only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93cda126ce98625d71c5715b55435677e732687" translate="yes" xml:space="preserve">
          <source>Each connection obtained by calling the &lt;code&gt;ngx_get_connection()&lt;/code&gt; function has two attached events, &lt;code&gt;c-&amp;gt;read&lt;/code&gt; and &lt;code&gt;c-&amp;gt;write&lt;/code&gt;, which are used for receiving notification that the socket is ready for reading or writing. All such events operate in Edge-Triggered mode, meaning that they only trigger notifications when the state of the socket changes. For example, doing a partial read on a socket does not make nginx deliver a repeated read notification until more data arrives on the socket. Even when the underlying I/O notification mechanism is essentially Level-Triggered (&lt;code&gt;poll&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt; etc), nginx converts the notifications to Edge-Triggered. To make nginx event notifications consistent across all notifications systems on different platforms, the functions &lt;code&gt;ngx_handle_read_event(rev, flags)&lt;/code&gt; and &lt;code&gt;ngx_handle_write_event(wev, lowat)&lt;/code&gt; must be called after handling an I/O socket notification or calling any I/O functions on that socket. Normally, the functions are called once at the end of each read or write event handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfa5e9459141fc4b31e34fee962bba82a7e16d2" translate="yes" xml:space="preserve">
          <source>Each module keeps its private data in the &lt;code&gt;ctx&lt;/code&gt; field, recognizes the configuration directives, specified in the &lt;code&gt;commands&lt;/code&gt; array, and can be invoked at certain stages of nginx lifecycle. The module lifecycle consists of the following events:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6d85696dc6fb14166b3387b3edc5678b5b6fb1" translate="yes" xml:space="preserve">
          <source>Each standalone nginx module resides in a separate directory that contains at least two files: &lt;code&gt;config&lt;/code&gt; and a file with the module source code. The &lt;code&gt;config&lt;/code&gt; file contains all information needed for nginx to integrate the module, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b2fc4c2db39bab765713b79796cfa1f4d74ade" translate="yes" xml:space="preserve">
          <source>Each stream njs handler receives one argument, a stream session &lt;a href=&quot;../njs/reference#stream&quot;&gt;object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228abb889ce364aa6af0c947f6f9fd01bbc10206" translate="yes" xml:space="preserve">
          <source>Each structure member is declared on its own line:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f4ecc386d0fd47c068920d3b4c2f5717a8726a" translate="yes" xml:space="preserve">
          <source>EdDSA (Ed25519 and Ed448 signatures) (1.15.7)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcbe41ccfa7424d6bd37c7911c342da87b200551" translate="yes" xml:space="preserve">
          <source>Embedded Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d801dd479229fb4d21674af1a55b4a9affe26925" translate="yes" xml:space="preserve">
          <source>Empty string, if the &amp;ldquo;Referer&amp;rdquo; request header field value is considered &lt;a href=&quot;#valid_referers&quot;&gt;valid&lt;/a&gt;, otherwise &amp;ldquo;&lt;code&gt;1&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac352833c64515167381966c4b1c68ec89a26d6" translate="yes" xml:space="preserve">
          <source>Enables (&amp;ldquo;&lt;code&gt;on&lt;/code&gt;&amp;rdquo;) or disables (&amp;ldquo;&lt;code&gt;off&lt;/code&gt;&amp;rdquo;) checking the existence of precompressed files. The following directives are also taken into account: &lt;a href=&quot;ngx_http_gzip_module#gzip_http_version&quot;&gt;gzip_http_version&lt;/a&gt;, &lt;a href=&quot;ngx_http_gzip_module#gzip_proxied&quot;&gt;gzip_proxied&lt;/a&gt;, &lt;a href=&quot;ngx_http_gzip_module#gzip_disable&quot;&gt;gzip_disable&lt;/a&gt;, and &lt;a href=&quot;ngx_http_gzip_module#gzip_vary&quot;&gt;gzip_vary&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0ffac5842f5109136d5d8120857514d3734d4e" translate="yes" xml:space="preserve">
          <source>Enables authorization based on the result of a subrequest and sets the URI to which the subrequest will be sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0618d766b8d3045d5a9a0dfa36c1d607a3fec83a" translate="yes" xml:space="preserve">
          <source>Enables automatic conversion of &lt;a href=&quot;https://www.w3.org/TR/preload/#server-push-http-2&quot;&gt;preload links&lt;/a&gt; specified in the &amp;ldquo;Link&amp;rdquo; response header fields into &lt;a href=&quot;https://tools.ietf.org/html/rfc7540#section-8.2&quot;&gt;push&lt;/a&gt; requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a16c519ffecb5697c965bd84be36fd53ced0de9" translate="yes" xml:space="preserve">
          <source>Enables byte-range support for both cached and uncached responses from the FastCGI server regardless of the &amp;ldquo;Accept-Ranges&amp;rdquo; field in these responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087ed9f7d0810b960d66b561c440b0fd7c1c440b" translate="yes" xml:space="preserve">
          <source>Enables byte-range support for both cached and uncached responses from the SCGI server regardless of the &amp;ldquo;Accept-Ranges&amp;rdquo; field in these responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5b417afd6ac6a8f8f6c182b43415a75db3effa" translate="yes" xml:space="preserve">
          <source>Enables byte-range support for both cached and uncached responses from the memcached server regardless of the &amp;ldquo;Accept-Ranges&amp;rdquo; field in these responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28bd08881d43b0fdd23d2617cdfdd19e215fba21" translate="yes" xml:space="preserve">
          <source>Enables byte-range support for both cached and uncached responses from the proxied server regardless of the &amp;ldquo;Accept-Ranges&amp;rdquo; field in these responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227529bd0b37972ae2147a9061de9fb56a71ec4f" translate="yes" xml:space="preserve">
          <source>Enables byte-range support for both cached and uncached responses from the uwsgi server regardless of the &amp;ldquo;Accept-Ranges&amp;rdquo; field in these responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5986cb15e8c97c888decda28c562ac44eec67f" translate="yes" xml:space="preserve">
          <source>Enables collection of virtual &lt;a href=&quot;ngx_http_core_module#server&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_core_module#server&quot;&gt;stream&lt;/a&gt; (1.7.11) server status information in the specified &lt;code&gt;&lt;i&gt;zone&lt;/i&gt;&lt;/code&gt;. Several servers may share the same zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2dc377629cc03e761e522642d7c721d050dbde" translate="yes" xml:space="preserve">
          <source>Enables collection of virtual &lt;a href=&quot;ngx_http_core_module#server&quot;&gt;http&lt;/a&gt; or &lt;a href=&quot;../stream/ngx_stream_core_module#server&quot;&gt;stream&lt;/a&gt; server status information in the specified &lt;code&gt;&lt;i&gt;zone&lt;/i&gt;&lt;/code&gt;. Several servers may share the same zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8cc16b8fb34133f79d53942bfd4d8a646dbb52" translate="yes" xml:space="preserve">
          <source>Enables debugging log for selected client connections. Other connections will use logging level set by the &lt;a href=&quot;#error_log&quot;&gt;error_log&lt;/a&gt; directive. Debugged connections are specified by IPv4 or IPv6 (1.3.0, 1.2.1) address or network. A connection may also be specified using a hostname. For connections using UNIX-domain sockets (1.3.0, 1.2.1), debugging log is enabled by the &amp;ldquo;&lt;code&gt;unix:&lt;/code&gt;&amp;rdquo; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ede21ea4c35cd6ee494f4f280f1cfe99afb246" translate="yes" xml:space="preserve">
          <source>Enables extracting information from the ClientHello message at the &lt;a href=&quot;stream_processing#preread_phase&quot;&gt;preread&lt;/a&gt; phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f3e520f29d3e26ebcdd694f6cdd6b08d598ab0" translate="yes" xml:space="preserve">
          <source>Enables gzipping of responses for the specified MIME types in addition to &amp;ldquo;&lt;code&gt;text/html&lt;/code&gt;&amp;rdquo;. The special value &amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo; matches any MIME type (0.8.29). Responses with the &amp;ldquo;&lt;code&gt;text/html&lt;/code&gt;&amp;rdquo; type are always compressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02d5c6b3880ae1911f13ce2ef0e72c49f0f6962" translate="yes" xml:space="preserve">
          <source>Enables module processing in responses with the specified MIME types in addition to &amp;ldquo;&lt;code&gt;text/html&lt;/code&gt;&amp;rdquo;. The special value &amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo; matches any MIME type (0.8.29).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349fb872a7325fd9e2d5f3247cbbffb9e1ff067c" translate="yes" xml:space="preserve">
          <source>Enables or disables &lt;a href=&quot;https://tools.ietf.org/html/rfc6066#section-8&quot;&gt;stapling of OCSP responses&lt;/a&gt; by the server. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f54061ed38ab509cea9a7ac52f6317879fe9efb" translate="yes" xml:space="preserve">
          <source>Enables or disables TLS 1.3 &lt;a href=&quot;https://tools.ietf.org/html/rfc8446#section-2.3&quot;&gt;early data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51090302be42af3a180b7637e4533227b977bd60" translate="yes" xml:space="preserve">
          <source>Enables or disables adding comments to responses for MSIE clients with status greater than 400 to increase the response size to 512 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c52581cda04cdf6a54e363d8edd92ead303210" translate="yes" xml:space="preserve">
          <source>Enables or disables adding or modifying the &amp;ldquo;Expires&amp;rdquo; and &amp;ldquo;Cache-Control&amp;rdquo; response header fields provided that the response code equals 200, 201 (1.3.10), 204, 206, 301, 302, 303, 304, 307 (1.1.16, 1.0.13), or 308 (1.13.0). The parameter can be a positive or negative &lt;a href=&quot;../syntax&quot;&gt;time&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff9a14302685a6adab1e77ef5f38aff8e1b8747" translate="yes" xml:space="preserve">
          <source>Enables or disables automatic generation of the &amp;ldquo;ETag&amp;rdquo; response header field for static resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8ab23261b39484b7b08aae9d899caaea2ff985" translate="yes" xml:space="preserve">
          <source>Enables or disables buffering of a client request body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ce0ef48989926a4c373c4c81f4775b858bf916" translate="yes" xml:space="preserve">
          <source>Enables or disables buffering of responses from the FastCGI server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375ccafc75fe4e7633327203df2904b175581b2c" translate="yes" xml:space="preserve">
          <source>Enables or disables buffering of responses from the SCGI server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2083f0937ea78a242407995b8ad9c25d51a21887" translate="yes" xml:space="preserve">
          <source>Enables or disables buffering of responses from the proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9356138648f2a09ee6289ee8f43e0796db4aa077" translate="yes" xml:space="preserve">
          <source>Enables or disables buffering of responses from the uwsgi server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45496cf7abce361c66f55396ef1eb8a446521a9" translate="yes" xml:space="preserve">
          <source>Enables or disables caching of file lookup errors by &lt;a href=&quot;#open_file_cache&quot;&gt;open_file_cache&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8695d1f6fb0a1c3d19da7e52d5c9abe49bfb0c" translate="yes" xml:space="preserve">
          <source>Enables or disables compression of two or more adjacent slashes in a URI into a single slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf642f67566b84024760ca2d43c5e93a25819b4d" translate="yes" xml:space="preserve">
          <source>Enables or disables decompression of gzipped responses for clients that lack gzip support. If enabled, the following directives are also taken into account when determining if clients support gzip: &lt;a href=&quot;ngx_http_gzip_module#gzip_http_version&quot;&gt;gzip_http_version&lt;/a&gt;, &lt;a href=&quot;ngx_http_gzip_module#gzip_proxied&quot;&gt;gzip_proxied&lt;/a&gt;, and &lt;a href=&quot;ngx_http_gzip_module#gzip_disable&quot;&gt;gzip_disable&lt;/a&gt;. See also the &lt;a href=&quot;ngx_http_gzip_module#gzip_vary&quot;&gt;gzip_vary&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdc3fab338676968cf12908e48b5275a1e40de8" translate="yes" xml:space="preserve">
          <source>Enables or disables doing several redirects using the &lt;a href=&quot;#error_page&quot;&gt;error_page&lt;/a&gt; directive. The number of such redirects is &lt;a href=&quot;#internal&quot;&gt;limited&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="791ddebcd2f4e5197874ec113fcbcdf90030afda" translate="yes" xml:space="preserve">
          <source>Enables or disables emitting nginx version on error pages and in the &amp;ldquo;Server&amp;rdquo; response header field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3af513ad525065c0876a8161a398b5b86b9392a" translate="yes" xml:space="preserve">
          <source>Enables or disables gzipping of responses for proxied requests depending on the request and response. The fact that the request is proxied is determined by the presence of the &amp;ldquo;Via&amp;rdquo; request header field. The directive accepts multiple parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a844e37f2b2b09d94c234684ba7f3a3639c535b" translate="yes" xml:space="preserve">
          <source>Enables or disables gzipping of responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078166f662c042b3b2aa464f2bd411ecd5fef827" translate="yes" xml:space="preserve">
          <source>Enables or disables inserting the &amp;ldquo;Vary: Accept-Encoding&amp;rdquo; response header field if the directives &lt;a href=&quot;#gzip&quot;&gt;gzip&lt;/a&gt;, &lt;a href=&quot;ngx_http_gzip_static_module#gzip_static&quot;&gt;gzip_static&lt;/a&gt;, or &lt;a href=&quot;ngx_http_gunzip_module#gunzip&quot;&gt;gunzip&lt;/a&gt; are active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1032c2d87450eb5805ab69fb11dcf91e059a9ca8" translate="yes" xml:space="preserve">
          <source>Enables or disables issuing refreshes instead of redirects for MSIE clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8636d0cc9b0348c52c7496e04bd814cbc7d659f8" translate="yes" xml:space="preserve">
          <source>Enables or disables logging of &lt;code&gt;ngx_http_rewrite_module&lt;/code&gt; module directives processing results into the &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;error_log&lt;/a&gt; at the &lt;code&gt;notice&lt;/code&gt; level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c680d1268e8177c502583fbc5f2432dd37179f02" translate="yes" xml:space="preserve">
          <source>Enables or disables logging of errors about not found files into &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;error_log&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c655049fa20ef3edd574edc8bcf1e23ec8e2f6f" translate="yes" xml:space="preserve">
          <source>Enables or disables logging of subrequests into &lt;a href=&quot;ngx_http_log_module#access_log&quot;&gt;access_log&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e09730a57f6b23b24a5aa2498819f0cb441e44d" translate="yes" xml:space="preserve">
          <source>Enables or disables module processing in a surrounding location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5688e13369c2f6c0d11238732d8831eff00a51" translate="yes" xml:space="preserve">
          <source>Enables or disables passing of the server name through &lt;a href=&quot;http://en.wikipedia.org/wiki/Server_Name_Indication&quot;&gt;TLS Server Name Indication extension&lt;/a&gt; (SNI, RFC 6066) when establishing a connection with another cluster server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ac307dabc9399417dfce77943305bbe6b0ad8b" translate="yes" xml:space="preserve">
          <source>Enables or disables passing of the server name through &lt;a href=&quot;http://en.wikipedia.org/wiki/Server_Name_Indication&quot;&gt;TLS Server Name Indication extension&lt;/a&gt; (SNI, RFC 6066) when establishing a connection with the gRPC SSL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01f6e6df759129a25126a0129dd2394e31f2e7e" translate="yes" xml:space="preserve">
          <source>Enables or disables passing of the server name through &lt;a href=&quot;http://en.wikipedia.org/wiki/Server_Name_Indication&quot;&gt;TLS Server Name Indication extension&lt;/a&gt; (SNI, RFC 6066) when establishing a connection with the proxied HTTPS server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abfd25199588e8789a81db8b22b1610f3187179" translate="yes" xml:space="preserve">
          <source>Enables or disables passing of the server name through &lt;a href=&quot;http://en.wikipedia.org/wiki/Server_Name_Indication&quot;&gt;TLS Server Name Indication extension&lt;/a&gt; (SNI, RFC 6066) when establishing a connection with the proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92519587efe0031a1ee6149b5ed77570ed09955" translate="yes" xml:space="preserve">
          <source>Enables or disables passing of the server name through &lt;a href=&quot;http://en.wikipedia.org/wiki/Server_Name_Indication&quot;&gt;TLS Server Name Indication extension&lt;/a&gt; (SNI, RFC 6066) when establishing a connection with the secured uwsgi server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9b2debb5656797b2cdcb4a32af081b2176c761" translate="yes" xml:space="preserve">
          <source>Enables or disables processing of SSI commands in responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a426ba5434a698586d9b305a933521310cf925" translate="yes" xml:space="preserve">
          <source>Enables or disables resetting timed out connections and connections &lt;a href=&quot;ngx_http_rewrite_module#return&quot;&gt;closed&lt;/a&gt; with the non-standard code 444 (1.15.2). The reset is performed as follows. Before closing a socket, the &lt;code&gt;SO_LINGER&lt;/code&gt; option is set on it with a timeout value of 0. When the socket is closed, TCP RST is sent to the client, and all memory occupied by this socket is released. This helps avoid keeping an already closed socket with filled buffers in a FIN_WAIT1 state for a long time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f2bcbab42ae53cc47206df6cff25c9571bbd32" translate="yes" xml:space="preserve">
          <source>Enables or disables session resumption through &lt;a href=&quot;https://tools.ietf.org/html/rfc5077&quot;&gt;TLS session tickets&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e047a0da53e51cfc4c57f3bf6ff62160a14d2d15" translate="yes" xml:space="preserve">
          <source>Enables or disables setting cookies and logging the received cookies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359e0d8385c4ee742b06ac7f1bc1943b1f91a7e8" translate="yes" xml:space="preserve">
          <source>Enables or disables specifying the port in &lt;a href=&quot;#absolute_redirect&quot;&gt;absolute&lt;/a&gt; redirects issued by nginx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e303a5cc847a6beb9ad9febc2b7d2fde5fced5c1" translate="yes" xml:space="preserve">
          <source>Enables or disables the conversion of the &amp;ldquo;&lt;code&gt;HEAD&lt;/code&gt;&amp;rdquo; method to &amp;ldquo;&lt;code&gt;GET&lt;/code&gt;&amp;rdquo; for caching. When the conversion is disabled, the &lt;a href=&quot;#proxy_cache_key&quot;&gt;cache key&lt;/a&gt; should be configured to include the &lt;code&gt;$request_method&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7261e702f72d402c3a4828222cda8b7480adf220" translate="yes" xml:space="preserve">
          <source>Enables or disables the directory listing output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21cdd8ab21caf1df5a02ecebc847a794667f13e7" translate="yes" xml:space="preserve">
          <source>Enables or disables the passing of the &lt;a href=&quot;http://www.postfix.org/XCLIENT_README.html&quot;&gt;XCLIENT&lt;/a&gt; command with client parameters when connecting to the SMTP backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345ccea34cf8315bf999b90338fbdd18fbfb18ef" translate="yes" xml:space="preserve">
          <source>Enables or disables the use of &amp;ldquo;just-in-time compilation&amp;rdquo; (PCRE JIT) for the regular expressions known by the time of configuration parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7968497f8f345c10cac73d8fb3b2fff63e6b0c4d" translate="yes" xml:space="preserve">
          <source>Enables or disables the use of &lt;code&gt;sendfile()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b47f1b9c3b71deab965bda9d08a227bd01ac0cd" translate="yes" xml:space="preserve">
          <source>Enables or disables the use of asynchronous file I/O (AIO) on FreeBSD and Linux:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a14860d67ecdbb091b16d7f83ff3d400ba28bd" translate="yes" xml:space="preserve">
          <source>Enables or disables the use of the &lt;code&gt;TCP_NODELAY&lt;/code&gt; option. The option is enabled for both client and proxied server connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d697850a4ad513e11e15b36ce493655ac34537" translate="yes" xml:space="preserve">
          <source>Enables or disables the use of the &lt;code&gt;TCP_NODELAY&lt;/code&gt; option. The option is enabled when a connection is transitioned into the keep-alive state. Additionally, it is enabled on SSL connections, for unbuffered proxying, and for &lt;a href=&quot;websocket&quot;&gt;WebSocket&lt;/a&gt; proxying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a023c442e32fe1f750cf0987fe2fa35027a872b9" translate="yes" xml:space="preserve">
          <source>Enables or disables the use of the &lt;code&gt;TCP_NOPUSH&lt;/code&gt; socket option on FreeBSD or the &lt;code&gt;TCP_CORK&lt;/code&gt; socket option on Linux. The options are enabled only when &lt;a href=&quot;#sendfile&quot;&gt;sendfile&lt;/a&gt; is used. Enabling the option allows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447cf09504625307a4ccfcaae7e781673ec8cdcf" translate="yes" xml:space="preserve">
          <source>Enables or disables the use of the primary server name, specified by the &lt;a href=&quot;#server_name&quot;&gt;server_name&lt;/a&gt; directive, in &lt;a href=&quot;#absolute_redirect&quot;&gt;absolute&lt;/a&gt; redirects issued by nginx. When the use of the primary server name is disabled, the name from the &amp;ldquo;Host&amp;rdquo; request header field is used. If this field is not present, the IP address of the server is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884c6a7cd8451496fb5f8dd9ee150118a400943d" translate="yes" xml:space="preserve">
          <source>Enables or disables the use of underscores in client request header fields. When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the &lt;a href=&quot;#ignore_invalid_headers&quot;&gt;ignore_invalid_headers&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abc7b270755459b93fcc1307d13f291d338589b" translate="yes" xml:space="preserve">
          <source>Enables or disables verification of OCSP responses by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f5ace4d0722b99f744d14dccd039bfea487570" translate="yes" xml:space="preserve">
          <source>Enables or disables verification of another cluster server certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bdb4d68690abe4a25cc209a9557e8e085a11f0" translate="yes" xml:space="preserve">
          <source>Enables or disables verification of the gRPC SSL server certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd40d3ed7ef8f5670058f81936a0e117e0b88e68" translate="yes" xml:space="preserve">
          <source>Enables or disables verification of the proxied HTTPS server certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69be6ee2000a784356feee4574b06780b93ee5b0" translate="yes" xml:space="preserve">
          <source>Enables or disables verification of the proxied server certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2087f086d7e2f628400221df657499e64f9843" translate="yes" xml:space="preserve">
          <source>Enables or disables verification of the secured uwsgi server certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1deeb3aeb88b0fe9903652042adf0e73e04a0c48" translate="yes" xml:space="preserve">
          <source>Enables periodic health checks of the servers in a &lt;a href=&quot;ngx_http_upstream_module#upstream&quot;&gt;group&lt;/a&gt; referenced in the surrounding location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffab879b05bdab869b8908a4f6138fb47f5d642" translate="yes" xml:space="preserve">
          <source>Enables periodic health checks of the servers in a &lt;a href=&quot;ngx_stream_upstream_module#upstream&quot;&gt;group&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e5d009eeb17cb1fc6099892875bbd159f14a81" translate="yes" xml:space="preserve">
          <source>Enables processing of SSI commands in responses with the specified MIME types in addition to &amp;ldquo;&lt;code&gt;text/html&lt;/code&gt;&amp;rdquo;. The special value &amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo; matches any MIME type (0.8.29).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5031bbb073fade1168d6556cb17f0cdd1ea0ac" translate="yes" xml:space="preserve">
          <source>Enables revalidation of expired cache items using conditional requests with the &amp;ldquo;If-Modified-Since&amp;rdquo; and &amp;ldquo;If-None-Match&amp;rdquo; header fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6719b1bf9f62a63630843f8cb129cfa51dc9d1" translate="yes" xml:space="preserve">
          <source>Enables saving of files to a disk. The &lt;code&gt;on&lt;/code&gt; parameter saves files with paths corresponding to the directives &lt;a href=&quot;ngx_http_core_module#alias&quot;&gt;alias&lt;/a&gt; or &lt;a href=&quot;ngx_http_core_module#root&quot;&gt;root&lt;/a&gt;. The &lt;code&gt;off&lt;/code&gt; parameter disables saving of files. In addition, the file name can be set explicitly using the &lt;code&gt;&lt;i&gt;string&lt;/i&gt;&lt;/code&gt; with variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c314d3ca724bbd09baffbc92b48613247e79a325" translate="yes" xml:space="preserve">
          <source>Enables session affinity, which causes requests from the same client to be passed to the same server in a group of servers. Three methods are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f29c2753900d4c95199ef7c0f81cb31865c0068a" translate="yes" xml:space="preserve">
          <source>Enables string replacement in responses with the specified MIME types in addition to &amp;ldquo;&lt;code&gt;text/html&lt;/code&gt;&amp;rdquo;. The special value &amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo; matches any MIME type (0.8.29).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0837917df2f9aa70db125f655381b4638e7f16b" translate="yes" xml:space="preserve">
          <source>Enables terminating all sessions to a proxied server after it was removed from the group or marked as permanently unavailable. This can occur because of &lt;a href=&quot;ngx_stream_core_module#resolver&quot;&gt;re-resolve&lt;/a&gt; or with the API &lt;a href=&quot;../http/ngx_http_api_module#deleteStreamUpstreamServer&quot;&gt;&lt;code&gt;DELETE&lt;/code&gt;&lt;/a&gt; command. A server can be marked as permanently unavailable if it is considered &lt;a href=&quot;ngx_stream_upstream_hc_module#health_check&quot;&gt;unhealthy&lt;/a&gt; or with the API &lt;a href=&quot;../http/ngx_http_api_module#patchStreamUpstreamServer&quot;&gt;&lt;code&gt;PATCH&lt;/code&gt;&lt;/a&gt; command. Each session is terminated when the next read or write event is processed for the client or proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b01e557095c7730ea2911b55f4ffcd694048eb" translate="yes" xml:space="preserve">
          <source>Enables the &lt;a href=&quot;http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt&quot;&gt;PROXY protocol&lt;/a&gt; for connections to a proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423eb38da01cfde0a2c67fd5d64f0e7f66c42cf2" translate="yes" xml:space="preserve">
          <source>Enables the SSL/TLS protocol for connections to a proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757d9d62a688bec89a51367321817104a766d85f" translate="yes" xml:space="preserve">
          <source>Enables the SSL/TLS protocol for connections to another cluster server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5aeb7f1692beda3b6332b7e740b73291846cef4" translate="yes" xml:space="preserve">
          <source>Enables the dry run mode. In this mode, requests processing rate is not limited, however, in the shared memory zone, the number of excessive requests is accounted as usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c575d4f706aafba693c3ef9729409cf20c94085" translate="yes" xml:space="preserve">
          <source>Enables the specified protocols for connections to a proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99a41da0766374ff0163f1602f96e1a2048df5f" translate="yes" xml:space="preserve">
          <source>Enables the specified protocols for connections to another cluster server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ba582ad05be57f3b409439300f425b03d34835" translate="yes" xml:space="preserve">
          <source>Enables the specified protocols for requests to a gRPC SSL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a751d2e62395d1371e2235694223df8041487d0" translate="yes" xml:space="preserve">
          <source>Enables the specified protocols for requests to a proxied HTTPS server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc8bb5bc999400d61eacce985f3ccd74f0bc75c0" translate="yes" xml:space="preserve">
          <source>Enables the specified protocols for requests to a secured uwsgi server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb170b6d965106b5b31170e1da8ed64cebb352a7" translate="yes" xml:space="preserve">
          <source>Enables the specified protocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d22195793c31339dd152b256e0f12f7e5be6ca" translate="yes" xml:space="preserve">
          <source>Enables the synchronization of shared memory zones between cluster nodes. Cluster nodes are defined using &lt;a href=&quot;#zone_sync_server&quot;&gt;zone_sync_server&lt;/a&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b6c21539850009721c966f9c49c27df1f729ceb" translate="yes" xml:space="preserve">
          <source>Enables the test for the &lt;code&gt;&lt;i&gt;flag&lt;/i&gt;&lt;/code&gt; presence in the memcached server response and sets the &amp;ldquo;&lt;code&gt;Content-Encoding&lt;/code&gt;&amp;rdquo; response header field to &amp;ldquo;&lt;code&gt;gzip&lt;/code&gt;&amp;rdquo; if the flag is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e1e12057386338476d2e7539c66b81f898810f" translate="yes" xml:space="preserve">
          <source>Enables the use of the &lt;code&gt;O_DIRECT&lt;/code&gt; flag (FreeBSD, Linux), the &lt;code&gt;F_NOCACHE&lt;/code&gt; flag (macOS), or the &lt;code&gt;directio()&lt;/code&gt; function (Solaris), when reading files that are larger than or equal to the specified &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt;. The directive automatically disables (0.7.15) the use of &lt;a href=&quot;#sendfile&quot;&gt;sendfile&lt;/a&gt; for a given request. It can be useful for serving large files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65442890189017b1ee794068fb7e06a54c3669df" translate="yes" xml:space="preserve">
          <source>Enables the use of the specified session log. The special value &lt;code&gt;off&lt;/code&gt; cancels all &lt;code&gt;session_log&lt;/code&gt; directives inherited from the previous configuration level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea5838c8792314eb664677af3e3f57aa505fa9c" translate="yes" xml:space="preserve">
          <source>Enables transformations in responses with the specified MIME types in addition to &amp;ldquo;&lt;code&gt;text/xml&lt;/code&gt;&amp;rdquo;. The special value &amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo; matches any MIME type (0.8.29). If the transformation result is an HTML response, its MIME type is changed to &amp;ldquo;&lt;code&gt;text/html&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8987ef262e1c18e87cfe0fff73cfb9b005cfeae8" translate="yes" xml:space="preserve">
          <source>Enables validation of JSON Web Token. The specified &lt;code&gt;&lt;i&gt;string&lt;/i&gt;&lt;/code&gt; is used as a &lt;code&gt;realm&lt;/code&gt;. Parameter value can contain variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5a31ca698638f49a86cbfd7289226d769438d5" translate="yes" xml:space="preserve">
          <source>Enables validation of user name and password using the &amp;ldquo;HTTP Basic Authentication&amp;rdquo; protocol. The specified parameter is used as a &lt;code&gt;&lt;i&gt;realm&lt;/i&gt;&lt;/code&gt;. Parameter value can contain variables (1.3.10, 1.2.7). The special value &lt;code&gt;off&lt;/code&gt; allows cancelling the effect of the &lt;code&gt;auth_basic&lt;/code&gt; directive inherited from the previous configuration level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6626def1ba7f6428ef6e0a475463d92c9a6a111a" translate="yes" xml:space="preserve">
          <source>Enables verification of client certificates. The verification result is passed in the &amp;ldquo;Auth-SSL-Verify&amp;rdquo; header of the &lt;a href=&quot;ngx_mail_auth_http_module#auth_http&quot;&gt;authentication&lt;/a&gt; request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdd4aefdd7155e3452e6691b0ead5a5baf3bcbf" translate="yes" xml:space="preserve">
          <source>Enables verification of client certificates. The verification result is stored in the &lt;a href=&quot;#var_ssl_client_verify&quot;&gt;$ssl_client_verify&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0533541f7a23f4ba65131191879912c615cafa48" translate="yes" xml:space="preserve">
          <source>Enables verification of client certificates. The verification result is stored in the &lt;a href=&quot;#var_ssl_client_verify&quot;&gt;$ssl_client_verify&lt;/a&gt; variable. If an error has occurred during the client certificate verification or a client has not presented the required certificate, the connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02725eed120d281ce33f1e252526fa692159f2eb" translate="yes" xml:space="preserve">
          <source>Encodes a URI by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2186c80d9104efc5b352dd5f75fc056208963c" translate="yes" xml:space="preserve">
          <source>Encodes a URI by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71c52711a24936e87649f5f6c786f704fc55482" translate="yes" xml:space="preserve">
          <source>Endpoints</source>
          <target state="translated">Endpoints</target>
        </trans-unit>
        <trans-unit id="220ca10dc90bf4162c05ecb80404e9516904a7fa" translate="yes" xml:space="preserve">
          <source>Ensure that paths to Perl, Mercurial and MSYS bin directories are added to PATH environment variable before you start build. To set Visual C environment run vcvarsall.bat script from Visual C directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17be2841d100915f342700f6362b4de2a821af4" translate="yes" xml:space="preserve">
          <source>Enumerations have types ending with &amp;ldquo;&lt;code&gt;_e&lt;/code&gt;&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238c1fc61bdff0e908021c90f0e57d16fb76e66b" translate="yes" xml:space="preserve">
          <source>Error Processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843d1cee2c608b83878c240efdbdbc58f52c6adf" translate="yes" xml:space="preserve">
          <source>Error description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="787aa1617c370e4574c5d20aafa7e724b4019196" translate="yes" xml:space="preserve">
          <source>Error:</source>
          <target state="translated">Error:</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="c5beec4cb59717ee4a3011425b3ab1af3f12e909" translate="yes" xml:space="preserve">
          <source>Event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14c9663c5dee1e5569157e50135c42d7d44f088" translate="yes" xml:space="preserve">
          <source>Event object &lt;code&gt;ngx_event_t&lt;/code&gt; in nginx provides a mechanism for notification that a specific event has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="b130ea757663113decdc79653e4f053d5529aea1" translate="yes" xml:space="preserve">
          <source>Exact names, wildcard names starting with an asterisk, and wildcard names ending with an asterisk are stored in three hash tables bound to the listen ports. The sizes of hash tables are optimized at the configuration phase so that a name can be found with the fewest CPU cache misses. The details of setting up hash tables are provided in a separate &lt;a href=&quot;../hash&quot;&gt;document&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78535c2333e42aed586c18d9ce54b8a5c46e7ca" translate="yes" xml:space="preserve">
          <source>Example Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a7c89c0f19c9a5c57fd25613960a14c61b136f" translate="yes" xml:space="preserve">
          <source>Example configuration of memcached upstream with keepalive connections:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caed331f02378875bdfa8b61bb2f26617e7a3c27" translate="yes" xml:space="preserve">
          <source>Example configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd89db1f1cda8ef51bd18b96cc5a7e12489fd6f" translate="yes" xml:space="preserve">
          <source>Example for Drupal/FastCGI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3038fdb628c057332f5390093991018f5ece34" translate="yes" xml:space="preserve">
          <source>Example for Wordpress and Joomla:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3a44306cd9a8f01de38633630f5963b3932eef" translate="yes" xml:space="preserve">
          <source>Example in proxying Mongrel:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93460c876d86613255ef3032cf58c1c690bc9581" translate="yes" xml:space="preserve">
          <source>Example of parameters usage (all of this needs to be typed in one line):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634c51d6c6f8acfb81ddf5725126145f7bcab7f3" translate="yes" xml:space="preserve">
          <source>Example syslog configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a10cd2de02a96f5250e92ad883536a8bb66539" translate="yes" xml:space="preserve">
          <source>Example using &lt;code&gt;ngx_errno&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788ae36c2b98597b085fb58d575a1eaf5124cf0f" translate="yes" xml:space="preserve">
          <source>Example with ranges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="0b683314085a39c582f9bb8213670d8e95c153da" translate="yes" xml:space="preserve">
          <source>Examples of requests and responses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17006f9969752bb9e3dec687779c58e6c4eb2875" translate="yes" xml:space="preserve">
          <source>Examples of status requests with this configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="17fc8e63bae3d87756cc501af236800881210fc3" translate="yes" xml:space="preserve">
          <source>Except for the nginx master process, all nginx processes do I/O and so have an event loop. (The nginx master process instead spends most of its time in the &lt;code&gt;sigsuspend()&lt;/code&gt; call waiting for signals to arrive.) The nginx event loop is implemented in the &lt;code&gt;ngx_process_events_and_timers()&lt;/code&gt; function, which is called repeatedly until the process exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82942f126b0385ee6491da6127f9b25821cde44c" translate="yes" xml:space="preserve">
          <source>Expire timers by calling &lt;code&gt;ngx_event_expire_timers()&lt;/code&gt;. The timer tree is iterated from the leftmost element to the right until an unexpired timeout is found. For each expired node the &lt;code&gt;timedout&lt;/code&gt; event flag is set, the &lt;code&gt;timer_set&lt;/code&gt; flag is reset, and the event handler is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="686938a8c95ddd954e18600e50b331335c2f99d4" translate="yes" xml:space="preserve">
          <source>Feature: &lt;a href=&quot;https://nodejs.org/api/crypto.html#crypto_class_hash&quot;&gt;Node.js style&lt;/a&gt;&lt;code&gt;Crypto&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26db0c9ebf672f8a2157c979fc8d2f2a7345ea07" translate="yes" xml:space="preserve">
          <source>Feature: &lt;a href=&quot;https://nodejs.org/api/fs.html#fs_file_system&quot;&gt;Node.js style&lt;/a&gt;&lt;code&gt;File system&lt;/code&gt; access methods: &lt;code&gt;fs.readFile()&lt;/code&gt;, &lt;code&gt;fs.readFileSync()&lt;/code&gt;, &lt;code&gt;fs.appendFile()&lt;/code&gt;, &lt;code&gt;fs.appendFileSync()&lt;/code&gt;, &lt;code&gt;fs.writeFile()&lt;/code&gt;, &lt;code&gt;fs.writeFileSync()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b475560eb1a061303fc29dc0f51469d34822b5b0" translate="yes" xml:space="preserve">
          <source>Feature: &lt;a href=&quot;reference#string_bytesfrom&quot;&gt;String.bytesFrom()&lt;/a&gt; method (decoding &lt;code&gt;hex&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, &lt;code&gt;base64url&lt;/code&gt; into a byte string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8130c23da3379b9e3e4de97d275a4adc17e68d3" translate="yes" xml:space="preserve">
          <source>Feature: &lt;a href=&quot;reference#string_padstart&quot;&gt;String.padStart()&lt;/a&gt; and &lt;a href=&quot;reference#string_padend&quot;&gt;String.padEnd()&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb48a7c197cde1e52bf67ae9d747a6be9000d30c" translate="yes" xml:space="preserve">
          <source>Feature: &lt;code&gt;Array.of()&lt;/code&gt;, &lt;code&gt;Array.prototype.fill()&lt;/code&gt;, &lt;code&gt;Array.prototype.find()&lt;/code&gt;, &lt;code&gt;Array.prototype.findIndex()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b7128a3d89ea098802ea27a9508a30d0b6183f" translate="yes" xml:space="preserve">
          <source>Feature: &lt;code&gt;Error&lt;/code&gt;, &lt;code&gt;EvalError&lt;/code&gt;, &lt;code&gt;InternalError&lt;/code&gt;, &lt;code&gt;RangeError&lt;/code&gt;, &lt;code&gt;ReferenceError&lt;/code&gt;, &lt;code&gt;SyntaxError&lt;/code&gt;, &lt;code&gt;TypeError&lt;/code&gt;, &lt;code&gt;URIError&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae1040c145850f9c2f78efb6a78bc4717881a1a" translate="yes" xml:space="preserve">
          <source>Feature: &lt;code&gt;Object.defineProperty()&lt;/code&gt;, &lt;code&gt;Object.defineProperties()&lt;/code&gt;, &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d9d3c73dce6340923a9260299449313af2b8fe" translate="yes" xml:space="preserve">
          <source>Feature: &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;, &lt;code&gt;Object.prototype.isPrototypeOf()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e075015e6d9c41a822e73006ccd5352e393dcc" translate="yes" xml:space="preserve">
          <source>Feature: &lt;code&gt;Object.keys()&lt;/code&gt;, &lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236b8502be33ea6d2af05a120c0b5bf17c8dd39f" translate="yes" xml:space="preserve">
          <source>Feature: &lt;code&gt;Object.preventExtensions()&lt;/code&gt;, &lt;code&gt;Object.isExtensible()&lt;/code&gt;, &lt;code&gt;Object.freeze()&lt;/code&gt;, &lt;code&gt;Object.isFrozen()&lt;/code&gt;, &lt;code&gt;Object.seal()&lt;/code&gt;, &lt;code&gt;Object.isSealed()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cdff023a1ea3880ed0018df9eecaa9a54717fe" translate="yes" xml:space="preserve">
          <source>Feature: &lt;code&gt;console.log()&lt;/code&gt; and &lt;code&gt;console.help()&lt;/code&gt; methods in interactive shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87dd0e60e7427efccbe070b66255fbc7227e3db" translate="yes" xml:space="preserve">
          <source>Feature: &lt;code&gt;console.time()&lt;/code&gt; and &lt;code&gt;console.timeEnd()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7167ad2d56aad105a91afc37ea54b591d7327812" translate="yes" xml:space="preserve">
          <source>Feature: &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;for-in&lt;/code&gt; loops support variable declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7936934d94e6d24eb476832e689df3b4d09d6adc" translate="yes" xml:space="preserve">
          <source>Feature: &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;clearTimeout()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e9b8eed8568affd21d5bc258877b736c43e340" translate="yes" xml:space="preserve">
          <source>Feature: Byte string to &lt;code&gt;hex&lt;/code&gt;, &lt;code&gt;base64&lt;/code&gt;, &lt;code&gt;base64url&lt;/code&gt; encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad15df805bdeb690470fd1e9fef54b3aab622cf" translate="yes" xml:space="preserve">
          <source>Feature: ES6 &lt;code&gt;Math&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033eeb5e2dc299e3b4414d27b946042b6ac63fb8" translate="yes" xml:space="preserve">
          <source>Feature: HTTP &lt;a href=&quot;reference#r_internal_redirect&quot;&gt;internalRedirect()&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78377604ab6ad3ea4c693bd57069171b26dcd9c2" translate="yes" xml:space="preserve">
          <source>Feature: HTTP &lt;code&gt;return()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4719a33cdd186f24658aab7b38c2def72d04d351" translate="yes" xml:space="preserve">
          <source>Feature: HTTP &lt;code&gt;subrequest()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe84fd411c12d90490695d415ef1522dd9bad2e" translate="yes" xml:space="preserve">
          <source>Feature: HTTP and stream &lt;code&gt;warn()&lt;/code&gt; and &lt;code&gt;error()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a87f241196d649bc83c9e66c4e47d8817c8019" translate="yes" xml:space="preserve">
          <source>Feature: HTTP request body getter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55881c8990a04908eec6b5e8d56f39904a392d4f" translate="yes" xml:space="preserve">
          <source>Feature: Interactive shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a053e1f5910196868f312460437d8e29bee706" translate="yes" xml:space="preserve">
          <source>Feature: JSON object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9f846b421df65964e3f011a9e84dc448d283cd" translate="yes" xml:space="preserve">
          <source>Feature: added &lt;a href=&quot;reference#global_process&quot;&gt;&lt;code&gt;process&lt;/code&gt;&lt;/a&gt; global object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f379646275718d8455de66c576f7e29ab27cc2c" translate="yes" xml:space="preserve">
          <source>Feature: added &lt;a href=&quot;reference#object_entries&quot;&gt;&lt;code&gt;Object.entries()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7671044222768c1e0ef19fc73470435e2f68c9" translate="yes" xml:space="preserve">
          <source>Feature: added &lt;a href=&quot;reference#object_values&quot;&gt;&lt;code&gt;Object.values()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a07a6316bccbdb76b7f37460bc4cf59e132567c" translate="yes" xml:space="preserve">
          <source>Feature: added &lt;code&gt;Function.prototype.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aec8114be7a780eae286f79cc3b91761becc0a5" translate="yes" xml:space="preserve">
          <source>Feature: added &lt;code&gt;Object.getOwnPropertyDescriptors()&lt;/code&gt;. Thanks to Artem S. Povalyukhin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a4683fadec9184877fa866514378f2962b6c05" translate="yes" xml:space="preserve">
          <source>Feature: added &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;. Thanks to Artem S. Povalyukhin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1a84ec5261c616caac4f1379d4c8e815e5d1a7" translate="yes" xml:space="preserve">
          <source>Feature: added &lt;code&gt;Object.prototype.propertyIsEnumerable()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd323d019930f4543dfcd662ecc4cb0fb2935c6" translate="yes" xml:space="preserve">
          <source>Feature: added &lt;code&gt;setImmediate()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5082398d70d0caa800e724261dd94385b9a7c1f" translate="yes" xml:space="preserve">
          <source>Feature: added array length setter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e425299b81b6b0eb05d772409cbdf3b2687fe456" translate="yes" xml:space="preserve">
          <source>Feature: added arrow functions support. Thanks to 洪志道 (Hong Zhi Dao) and Artem S. Povalyukhin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebdcd535c6d447fa3108a2575b9ae52f22cc1cc2" translate="yes" xml:space="preserve">
          <source>Feature: added block scoped function definitions support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a3c3d6a6694c1434ab9632c33a9c55c9c4a02d" translate="yes" xml:space="preserve">
          <source>Feature: added generic implementation of &lt;code&gt;Array.prototype.fill()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fc2064309557b92100c490438279be0fe09b098" translate="yes" xml:space="preserve">
          <source>Feature: added initial ES6 modules support. Default import and default export statements are supported. Thanks to 洪志道 (Hong Zhi Dao).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda054542bcf7323a67f97c460639a1f8831aac6" translate="yes" xml:space="preserve">
          <source>Feature: added labels support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0939c7272a4b4c88638c095965c01e9c2ee6abf3" translate="yes" xml:space="preserve">
          <source>Feature: added runtime support for property getter/setter. Thanks to 洪志道 (Hong Zhi Dao) and Artem S. Povalyukhin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a3150be2c327cc0ee6f33dd045b670f911ce07" translate="yes" xml:space="preserve">
          <source>Feature: added shebang support in CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad078a1d2bcd5845bc155b87a1c075ea7e69c2c" translate="yes" xml:space="preserve">
          <source>Feature: added support for RegExp &lt;code&gt;groups&lt;/code&gt; object (ES9).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021b008724878b2c7c5f82c32dfc7e3870ca84df" translate="yes" xml:space="preserve">
          <source>Feature: added support for building with GNU Readline library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b780c3b8a2759acc43b62c6ad275a25b828e356f" translate="yes" xml:space="preserve">
          <source>Feature: added support for delete operation in &lt;a href=&quot;reference#r_headers_out&quot;&gt;&lt;code&gt;r.headersOut{}&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f41e91b544367d2adfb25526a8b8e83b1c01fd" translate="yes" xml:space="preserve">
          <source>Feature: added support for module mode execution in CLI. In module mode global, this is unavailable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f0b51c96c4a2850b96b37e0438b292b3f4cb48" translate="yes" xml:space="preserve">
          <source>Feature: added support for setting nginx variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcdbeaf76649e711e28ca90c15c31644102a3dc" translate="yes" xml:space="preserve">
          <source>Feature: added support for shorthand property names for Object literals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d922c19aebafc6645a8b2f01a4ca52ea07eab496" translate="yes" xml:space="preserve">
          <source>Feature: added support for template literals. Thanks to 洪志道 (Hong Zhi Dao) and Artem S. Povalyukhin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c30d3aa432b3558fbc81bd72b9ff32cbcac975f" translate="yes" xml:space="preserve">
          <source>Feature: added support of binary literals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbe44ea335d154ff8afc20a30964daa7c5e9e6a" translate="yes" xml:space="preserve">
          <source>Feature: added the &lt;code&gt;js_path&lt;/code&gt; directive for &lt;a href=&quot;../http/ngx_http_js_module#js_path&quot;&gt;http&lt;/a&gt; and &lt;a href=&quot;../stream/ngx_stream_js_module#js_path&quot;&gt;stream&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4d59f2b3052d89ec43ab63d33a6b89c644516a" translate="yes" xml:space="preserve">
          <source>Feature: added the pretty string representation for values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0526bf58f8f7d84094f9b36c2f11e729fed8637" translate="yes" xml:space="preserve">
          <source>Feature: allowing variables and functions to be redeclared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c01fb8ac78e5a5db536cf6d352a5933e076002" translate="yes" xml:space="preserve">
          <source>Feature: arguments object support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792758345e0da2443e3685546f00a17e8da9fc94" translate="yes" xml:space="preserve">
          <source>Feature: correctly parsing floating point numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d3cd4dad082e0200a79309242cc3ffa7e73734" translate="yes" xml:space="preserve">
          <source>Feature: correctly printing floating point numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1e94e3de7ddfb0b5307ac460d47ec768616348" translate="yes" xml:space="preserve">
          <source>Feature: executing command from command line arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c333591ddd771c14fc03760d3fd4ea948895270" translate="yes" xml:space="preserve">
          <source>Feature: exponentiation operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b61ed44e94fcfeae6096656e9420e06abc98c1" translate="yes" xml:space="preserve">
          <source>Feature: extending &lt;code&gt;Object.defineProperty()&lt;/code&gt; spec conformance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac7d4fa3cb7a52c38a1b7220dedc4319b8b2fd5" translate="yes" xml:space="preserve">
          <source>Feature: hexadecimal (&lt;code&gt;0x1123&lt;/code&gt;) literals support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ab66ea47ffd916ab412e582c10c6ea1973d683" translate="yes" xml:space="preserve">
          <source>Feature: interactive shell by default if &lt;code&gt;libedit&lt;/code&gt; is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="204ab079211d2bb3e70216d046888729422a05ba" translate="yes" xml:space="preserve">
          <source>Feature: interactive shell prints backtrace on exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fe633260e90ebbcf8dcc90d8eee05bff6a0d8f" translate="yes" xml:space="preserve">
          <source>Feature: introduced compact form of backtraces to handle stack overflows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9274b690ec89e21a47e5a73d50083b4e7caa1f3" translate="yes" xml:space="preserve">
          <source>Feature: introduced quiet mode for CLI to handle simple expressions from stdin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae0c47d21b6729df7b22648c0c2bf1b12826df5" translate="yes" xml:space="preserve">
          <source>Feature: introduced sandboxing mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c248c46509f048441c26930382f509b2a5e549ed" translate="yes" xml:space="preserve">
          <source>Feature: made all constructor properties configurable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec35a21c51753913fc0888a95cae72ac0e809b6" translate="yes" xml:space="preserve">
          <source>Feature: made configurable &lt;code&gt;length&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, and most of built-in methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd72596476e2e70895ae76c917ec5e712f83bc09" translate="yes" xml:space="preserve">
          <source>Feature: making &lt;code&gt;__proto__&lt;/code&gt; accessor descriptor of &lt;code&gt;Object&lt;/code&gt; instances mutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3dc417b19a78be8e702166d572420c7d8d25d23" translate="yes" xml:space="preserve">
          <source>Feature: making built-in prototypes mutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a479d519d077bd41b4fb15cde12ee6a773dc57da" translate="yes" xml:space="preserve">
          <source>Feature: making global object mutable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f37c1150172683743e962a8e3188f96e2a7524" translate="yes" xml:space="preserve">
          <source>Feature: nested functions and function closures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc876562129be8e967d04a943a1c0dd15bdaaef2" translate="yes" xml:space="preserve">
          <source>Feature: nginx modules print backtrace on exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7839c293ed1781618fcfd80bc8206a4ca905efe" translate="yes" xml:space="preserve">
          <source>Feature: non-integer fractions support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ed34646b8c1af48e548ed8eeb2b1e64056a509" translate="yes" xml:space="preserve">
          <source>Feature: object level completions in interactive shell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2b932be226f6f1dcf1957c5298132df68284d8" translate="yes" xml:space="preserve">
          <source>Feature: octal literals support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540cf3fb52b44d27eca1203e1d07d1212669e645" translate="yes" xml:space="preserve">
          <source>Feature: reporting file name and function name in disassembler output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb941dc112abde95bf1c434c94cf987e572262a" translate="yes" xml:space="preserve">
          <source>Feature: reporting njs version by CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf06619b79cb34faf5fe0e807a25b300be13ff1" translate="yes" xml:space="preserve">
          <source>Feature: rest parameters syntax (destructuring is not supported). Thanks to Alexander Pyshchev.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1172e79ab8f07168193e4398f7ecaff8ecf48e32" translate="yes" xml:space="preserve">
          <source>Feature: scientific notation (&lt;code&gt;3.35e10&lt;/code&gt;) literals support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db63c9e6e878bc12e766a6baa9bf658647b0dc6" translate="yes" xml:space="preserve">
          <source>Feature: textual description for type converting exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddada8d8d1f8508b4630a3c2e3d2088725db1a35" translate="yes" xml:space="preserve">
          <source>Feature: various configure improvements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87da6570e97d37c4d09af824350d7d32cd6b0c0a" translate="yes" xml:space="preserve">
          <source>Feature: writable most of built-in properties and methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1ebe20dacd6ae2e75d30cfafe2625a9a05834f" translate="yes" xml:space="preserve">
          <source>Fields in &lt;code&gt;ngx_event_t&lt;/code&gt; include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a926222b8bec34819e069693ffbdca4d0b2f8b69" translate="yes" xml:space="preserve">
          <source>File System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdabcc15fdcb6db2739d3bf679a8edcc2e213be" translate="yes" xml:space="preserve">
          <source>File System Flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="6a3e51a7512dc7e94baa162dcae36852e69ed04f" translate="yes" xml:space="preserve">
          <source>Finally, files can be read and &lt;a href=&quot;#sendfile&quot;&gt;sent&lt;/a&gt; using multi-threading (1.7.11), without blocking a worker process:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986fbd324e6c29173cef4348d337ddf249f4336a" translate="yes" xml:space="preserve">
          <source>Find the timeout that is closest to expiring, by calling &lt;code&gt;ngx_event_find_timer()&lt;/code&gt;. This function finds the leftmost node in the timer tree and returns the number of milliseconds until the node expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff0c489b48961d76ed0987cf386a57e55dc2d0e" translate="yes" xml:space="preserve">
          <source>First of all &lt;code&gt;objs/ngx_auto_config.h&lt;/code&gt; file generated by configure should be included, because it defines a number of constants affecting various &lt;code&gt;#ifdef&lt;/code&gt;&amp;rsquo;s. After that, some basic types and definitions like &lt;code&gt;ngx_str_t&lt;/code&gt;, &lt;code&gt;ngx_table_elt_t&lt;/code&gt;, &lt;code&gt;ngx_uint_t&lt;/code&gt; etc. should be put at the beginning of the DTrace script. These definitions are compact, commonly used and unlikely to be frequently changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827a34af389ee1f79a43d2558e608f1aa0d5bac4" translate="yes" xml:space="preserve">
          <source>First, create the &lt;code&gt;/data/www&lt;/code&gt; directory and put an &lt;code&gt;index.html&lt;/code&gt; file with any text content into it and create the &lt;code&gt;/data/images&lt;/code&gt; directory and place some images in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d45917ea45ff768f563190869bb5d7488d2162c" translate="yes" xml:space="preserve">
          <source>First, define the proxied server by adding one more &lt;code&gt;server&lt;/code&gt; block to the nginx&amp;rsquo;s configuration file with the following contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41bf1b3efa502fb6ae58355c66e9c03ce2afff6a" translate="yes" xml:space="preserve">
          <source>Following is an example of a simple body filter that counts the number of bytes in the body. The result is available as the &lt;code&gt;$counter&lt;/code&gt; variable which can be used in the access log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299090156134c39fff9325f6ccb8f600e61ce6d0" translate="yes" xml:space="preserve">
          <source>Following is the example of a preaccess phase handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2113a7fe694496de426a529a280748126448ebc" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;debug&lt;/code&gt; logging to work, nginx needs to be built with &lt;code&gt;--with-debug&lt;/code&gt;, see &amp;ldquo;&lt;a href=&quot;debugging_log&quot;&gt;A debugging log&lt;/a&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675c5160bb46cd68e24ab3e56fef13d671e2685c" translate="yes" xml:space="preserve">
          <source>For C strings, nginx uses the unsigned character type pointer &lt;code&gt;u_char *&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fe07c8a5b183fac020701310aa4131b54c4574" translate="yes" xml:space="preserve">
          <source>For FastCGI servers, it is required to set &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_keep_conn&quot;&gt;fastcgi_keep_conn&lt;/a&gt; for keepalive connections to work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c6264724b3efb23b54b5127b2c44287486eb68" translate="yes" xml:space="preserve">
          <source>For HTTP, the &lt;a href=&quot;ngx_http_proxy_module#proxy_http_version&quot;&gt;proxy_http_version&lt;/a&gt; directive should be set to &amp;ldquo;&lt;code&gt;1.1&lt;/code&gt;&amp;rdquo; and the &amp;ldquo;Connection&amp;rdquo; header field should be cleared:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fadbcdb8c64d5443e2aabb9fa81b2743318369" translate="yes" xml:space="preserve">
          <source>For Linux, nginx &lt;a href=&quot;https://nginx.org/en/linux_packages.html&quot;&gt;packages&lt;/a&gt; from nginx.org can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53af671f04e60d2f649ac6f00f99bed92846e99f" translate="yes" xml:space="preserve">
          <source>For Linux, njs modules &lt;a href=&quot;https://nginx.org/en/linux_packages.html#dynmodules&quot;&gt;packages&lt;/a&gt; can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c100928fda6b30d201696db804df8d540b596ff8" translate="yes" xml:space="preserve">
          <source>For a matching request with a non-zero &lt;code&gt;start&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; argument, nginx will read the metadata from the file, prepare the stream with the requested time range, and send it to the client. This has the same overhead as described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c84647b0b408c85c2ace6dd90661a8ea212785" translate="yes" xml:space="preserve">
          <source>For a resolution of the OCSP responder hostname, the &lt;a href=&quot;ngx_http_core_module#resolver&quot;&gt;resolver&lt;/a&gt; directive should also be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdacad5b6ae8004496fb73793c817e76621770e" translate="yes" xml:space="preserve">
          <source>For allocating in shared memory, nginx provides the slab pool &lt;code&gt;ngx_slab_pool_t&lt;/code&gt; type. A slab pool for allocating memory is automatically created in each nginx shared zone. The pool is located in the beginning of the shared zone and can be accessed by the expression &lt;code&gt;(ngx_slab_pool_t *) shm_zone-&amp;gt;shm.addr&lt;/code&gt;. To allocate memory in a shared zone, call either &lt;code&gt;ngx_slab_alloc(pool, size)&lt;/code&gt; or &lt;code&gt;ngx_slab_calloc(pool, size)&lt;/code&gt;. To free memory, call &lt;code&gt;ngx_slab_free(pool, p)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00615089094cab5ef566362e212246dddc44b9d" translate="yes" xml:space="preserve">
          <source>For case-insensitive operating systems such as macOS and Cygwin, matching with prefix strings ignores a case (0.7.7). However, comparison is limited to one-byte locales.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6506cb746aaffa1b657cff38f7946abd04f36ca8" translate="yes" xml:space="preserve">
          <source>For dealing with the body of a client request, nginx provides the &lt;code&gt;ngx_http_read_client_request_body(r, post_handler)&lt;/code&gt; and &lt;code&gt;ngx_http_discard_request_body(r)&lt;/code&gt; functions. The first function reads the request body and makes it available via the &lt;code&gt;request_body&lt;/code&gt; request field. The second function instructs nginx to discard (read and ignore) the request body. One of these functions must be called for every request. Normally, the content handler makes the call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dc474f00168a96e74762c996d745ea2571a8b7" translate="yes" xml:space="preserve">
          <source>For debug logging, the debug mask is checked as well. The debug masks are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8734b7f809457505a457475ae1d68d3469e1b3dc" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;#status_zone&quot;&gt;status_zone&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700664c7e54d5fa0d90f8cf910fbc1759f0940ea" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;../stream/ngx_stream_upstream_module#server&quot;&gt;server&lt;/a&gt; the following data are provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c41667ce121c96ecd6603520a885b0e1272f95" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;../stream/ngx_stream_upstream_module#zone&quot;&gt;dynamically configurable&lt;/a&gt;&lt;a href=&quot;../stream/ngx_stream_upstream_module#upstream&quot;&gt;group&lt;/a&gt;, the following data are provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69da5b0ebf1d80c586c67e5f6b60c24efed62974" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;server&lt;/a&gt;, the following data are provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a77bca044c6ba16541ffb68c90363369153c71c" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;ngx_http_upstream_module#zone&quot;&gt;dynamically configurable&lt;/a&gt;&lt;a href=&quot;ngx_http_upstream_module#upstream&quot;&gt;group&lt;/a&gt;, the following data are provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2bffbc982e7bc8f0a3ff1111f900b3c331966f" translate="yes" xml:space="preserve">
          <source>For each cache (configured by &lt;a href=&quot;ngx_http_proxy_module#proxy_cache_path&quot;&gt;proxy_cache_path&lt;/a&gt; and the likes):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9cde7df42f256c913c3552fc78a80a39dc0bea" translate="yes" xml:space="preserve">
          <source>For each client HTTP request the &lt;code&gt;ngx_http_request_t&lt;/code&gt; object is created. Some of the fields of this object are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3420db7ac6dcbb5b825c0d561180c075e0c85f06" translate="yes" xml:space="preserve">
          <source>For each logger, a severity level controls which messages are written to the log (only events assigned that level or higher are logged). The following severity levels are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e984723f00b592bf9d65340ab0da64ddb0f2cd50" translate="yes" xml:space="preserve">
          <source>For each media file, two URIs are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9085cc79945409796e3e2fb8a3e8f76a66b1e049" translate="yes" xml:space="preserve">
          <source>For each memory slot size (8, 16, 32, 64, 128, etc.) the following data are provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd197533ee1ab0af035cf6f84fc24990c000a7dd" translate="yes" xml:space="preserve">
          <source>For each shared memory zone that uses slab allocator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435b787a84a2b47076d71049067a6e6626c08770" translate="yes" xml:space="preserve">
          <source>For example, a simplistic module called &lt;code&gt;ngx_foo_module&lt;/code&gt; might look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dafcee529b52b7f0ca001083ac8369edcf3b639" translate="yes" xml:space="preserve">
          <source>For example, if a client requests a playlist &lt;code&gt;http://example.com/hls/test.mp4.m3u8?a=1&amp;amp;b=2&lt;/code&gt;, the arguments &lt;code&gt;a=1&lt;/code&gt; and &lt;code&gt;b=2&lt;/code&gt; will be added to URIs of fragments after the arguments &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650bcb42f47eae3b539e082742e7cdaee0d6082e" translate="yes" xml:space="preserve">
          <source>For example, if the following response is received from the authentication server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0e597329dfe54d8de6f3ac4731ae7bfc82ca4b" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;Foo&lt;/code&gt; header can be accessed with the syntax &lt;code&gt;headersIn.foo&lt;/code&gt; or &lt;code&gt;headersIn['Foo']&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4abc1cf8cc420d0015b4b0ba6dd94a3b8426033" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;Foo&lt;/code&gt; header can be accessed with the syntax &lt;code&gt;headersOut.foo&lt;/code&gt; or &lt;code&gt;headersOut['Foo']&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136f353541c86f934fc5dd57721c2fb2554a5285" translate="yes" xml:space="preserve">
          <source>For example, the directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53687e61aaa51c7ff5c34e42b5c91d7776b3efb7" translate="yes" xml:space="preserve">
          <source>For example, to add a new primary server, send:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306ba38feb030c21da964d27c870de8084bf2907" translate="yes" xml:space="preserve">
          <source>For example, to stop nginx processes with waiting for the worker processes to finish serving current requests, the following command can be executed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b97cdf94b7248b5e0a892fe4c59131db1ec6c6" translate="yes" xml:space="preserve">
          <source>For example, to view the configuration of the whole group, send:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb601856ba3ea7dd01b7c721a6ac123424eec250" translate="yes" xml:space="preserve">
          <source>For general purposes, nginx code uses two integer types, &lt;code&gt;ngx_int_t&lt;/code&gt; and &lt;code&gt;ngx_uint_t&lt;/code&gt;, which are typedefs for &lt;code&gt;intptr_t&lt;/code&gt; and &lt;code&gt;uintptr_t&lt;/code&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef276a8e5ba7cbeca3fcbfdb86e4fd3b38833ba" translate="yes" xml:space="preserve">
          <source>For getting the list of all running nginx processes, the &lt;code&gt;ps&lt;/code&gt; utility may be used, for example, in the following way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4772fd6fff73949591b66a3a8982ef5972c4b40d" translate="yes" xml:space="preserve">
          <source>For gzip compression to work, nginx must be built with the zlib library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e30eb87add475e2252919721d4b1f4e927c7a38" translate="yes" xml:space="preserve">
          <source>For input and output operations buffers are linked in chains. A chain is a sequence of chain links of type &lt;code&gt;ngx_chain_t&lt;/code&gt;, defined as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345134aa7a27373f58392eb8bcc11b07f24843c0" translate="yes" xml:space="preserve">
          <source>For input/output operations, nginx provides the buffer type &lt;code&gt;ngx_buf_t&lt;/code&gt;. Normally, it's used to hold data to be written to a destination or read from a source. A buffer can reference data in memory or in a file and it's technically possible for a buffer to reference both at the same time. Memory for the buffer is allocated separately and is not related to the buffer structure &lt;code&gt;ngx_buf_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4478aa524a06d8d6fb1372b88d8ff0d16e407e87" translate="yes" xml:space="preserve">
          <source>For logging nginx uses &lt;code&gt;ngx_log_t&lt;/code&gt; objects. The nginx logger supports several types of output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3068f46ec21f649252e13f46bd3e30c34b5168c2" translate="yes" xml:space="preserve">
          <source>For more information on sending signals to nginx, see &lt;a href=&quot;control&quot;&gt;Controlling nginx&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe07a3ef1ac91027a84a13365af0c10d073e2e36" translate="yes" xml:space="preserve">
          <source>For nested claims and claims including a dot (&amp;ldquo;.&amp;rdquo;), the value of the variable cannot be evaluated; the &lt;a href=&quot;#auth_jwt_claim_set&quot;&gt;auth_jwt_claim_set&lt;/a&gt; directive should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb190a0f4c47bdcff224c3640a27216ffe1ae14e" translate="yes" xml:space="preserve">
          <source>For scripts that process &lt;code&gt;POST&lt;/code&gt; requests, the following three parameters are also required:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b1c81491c2979f11ed7decd064ec41321a1865" translate="yes" xml:space="preserve">
          <source>For some phases, return codes are treated in a slightly different way. At the content phase, any return code other that &lt;code&gt;NGX_DECLINED&lt;/code&gt; is considered a finalization code. Any return code from the location content handlers is considered a finalization code. At the access phase, in &lt;a href=&quot;../http/ngx_http_core_module#satisfy&quot;&gt;satisfy any&lt;/a&gt; mode, any return code other than &lt;code&gt;NGX_OK&lt;/code&gt;, &lt;code&gt;NGX_DECLINED&lt;/code&gt;, &lt;code&gt;NGX_AGAIN&lt;/code&gt;, &lt;code&gt;NGX_DONE&lt;/code&gt; is considered a denial. If no subsequent access handlers allow or deny access with a different code, the denial code will become the finalization code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75132660f52d992763ade42482198d52c013b686" translate="yes" xml:space="preserve">
          <source>For the 401 error, the client also receives the &amp;ldquo;WWW-Authenticate&amp;rdquo; header from the subrequest response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76b0e71389057f293958c576e6f2c851d123974" translate="yes" xml:space="preserve">
          <source>For the HTML &lt;a href=&quot;#autoindex_format&quot;&gt;format&lt;/a&gt;, specifies whether exact file sizes should be output in the directory listing, or rather rounded to kilobytes, megabytes, and gigabytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41db186117b84a48bd419b9e0244fb4b1669dd1" translate="yes" xml:space="preserve">
          <source>For the HTML &lt;a href=&quot;#autoindex_format&quot;&gt;format&lt;/a&gt;, specifies whether times in the directory listing should be output in the local time zone or UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0e9677a2f9c64d07fed362ba9dbd9940727f93" translate="yes" xml:space="preserve">
          <source>For the OCSP stapling to work, the certificate of the server certificate issuer should be known. If the &lt;a href=&quot;#ssl_certificate&quot;&gt;ssl_certificate&lt;/a&gt; file does not contain intermediate certificates, the certificate of the server certificate issuer should be present in the &lt;a href=&quot;#ssl_trusted_certificate&quot;&gt;ssl_trusted_certificate&lt;/a&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c96514204e1b6a05170f6c3156a77d0980b264" translate="yes" xml:space="preserve">
          <source>For the SMTP, the response additionally takes into account the &amp;ldquo;Auth-Error-Code&amp;rdquo; header &amp;mdash; if exists, it is used as a response code in case of an error. Otherwise, the 535 5.7.0 code will be added to the &amp;ldquo;Auth-Status&amp;rdquo; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f752d089a4274c87a67b989ed529dd5aa2bbadb0" translate="yes" xml:space="preserve">
          <source>For the SSL/TLS client connection (1.7.11), the &amp;ldquo;Auth-SSL&amp;rdquo; header is added, and &amp;ldquo;Auth-SSL-Verify&amp;rdquo; will contain the result of client certificate verification, if &lt;a href=&quot;ngx_mail_ssl_module#ssl_verify_client&quot;&gt;enabled&lt;/a&gt;: &amp;ldquo;&lt;code&gt;SUCCESS&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;FAILED:&lt;/code&gt;&lt;code&gt;&lt;i&gt;reason&lt;/i&gt;&lt;/code&gt;&amp;rdquo;, and &amp;ldquo;&lt;code&gt;NONE&lt;/code&gt;&amp;rdquo; if a certificate was not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7681cbbdf524858af1dbd287d9049459117f6aa8" translate="yes" xml:space="preserve">
          <source>For the requests &lt;a href=&quot;ngx_http_upstream_module#queue&quot;&gt;queue&lt;/a&gt;, the following data are provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a8dcff251b6049979e3e2ae97cc86f1985dc94" translate="yes" xml:space="preserve">
          <source>For the second case, it is possible to use basic HTTP client functionality available in nginx. For example, &lt;a href=&quot;http://hg.nginx.org/nginx/file/tip/src/event/ngx_event_openssl_stapling.c&quot;&gt;OCSP module&lt;/a&gt; implements simple HTTP client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f0fec298f1aad90d05b8afbd93060863332cb5" translate="yes" xml:space="preserve">
          <source>For these reasons, it is better to use exact names where possible. For example, if the most frequently requested names of a server are &lt;code&gt;example.org&lt;/code&gt; and &lt;code&gt;www.example.org&lt;/code&gt;, it is more efficient to define them explicitly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255502429c14c1d6e59f9f7f4fa29529e1994ac3" translate="yes" xml:space="preserve">
          <source>For third-party filter modules nginx provides a special slot &lt;code&gt;HTTP_AUX_FILTER_MODULES&lt;/code&gt;. To register a filter module in this slot, set the &lt;code&gt;ngx_module_type&lt;/code&gt; variable to &lt;code&gt;HTTP_AUX_FILTER&lt;/code&gt; in the module's configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0765876f340908fed483ea5440b7a9def5a17882" translate="yes" xml:space="preserve">
          <source>For this directive to work, nginx needs to be built with &lt;code&gt;--with-debug&lt;/code&gt;, see &amp;ldquo;&lt;a href=&quot;debugging_log&quot;&gt;A debugging log&lt;/a&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbfbc07b72c4cdcdc1bd3bc98d1f2a1a006d497" translate="yes" xml:space="preserve">
          <source>For verification to work, the certificate of the server certificate issuer, the root certificate, and all intermediate certificates should be configured as trusted using the &lt;a href=&quot;#ssl_trusted_certificate&quot;&gt;ssl_trusted_certificate&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841f832857c780b47f478b4f21d34d8995af64b8" translate="yes" xml:space="preserve">
          <source>Formatting</source>
          <target state="translated">Formatting</target>
        </trans-unit>
        <trans-unit id="d886838dc3e6c2a5fe8a21091aba647398a4bb5e" translate="yes" xml:space="preserve">
          <source>Full conversion tables from &lt;code&gt;koi8-r&lt;/code&gt; to &lt;code&gt;windows-1251&lt;/code&gt;, and from &lt;code&gt;koi8-r&lt;/code&gt; and &lt;code&gt;windows-1251&lt;/code&gt; to &lt;code&gt;utf-8&lt;/code&gt; are provided in the distribution files &lt;code&gt;conf/koi-win&lt;/code&gt;, &lt;code&gt;conf/koi-utf&lt;/code&gt;, and &lt;code&gt;conf/win-utf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783b3a4fa645e1d384d22d5a58207cd9b609a77b" translate="yes" xml:space="preserve">
          <source>Function pointers inside structures have defined types ending with &amp;ldquo;&lt;code&gt;_pt&lt;/code&gt;&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="0e44c8b638baa470dbb5f127964c092cc77ea465" translate="yes" xml:space="preserve">
          <source>Further reading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa0110759f629a80777d06b669f1141dea9a455" translate="yes" xml:space="preserve">
          <source>Furthermore, it is possible to change the response code to another using the &amp;ldquo;&lt;code&gt;=&lt;/code&gt;&lt;code&gt;&lt;i&gt;response&lt;/i&gt;&lt;/code&gt;&amp;rdquo; syntax, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08051995c434de1c4da94e508109529783f5c615" translate="yes" xml:space="preserve">
          <source>General information about nginx:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6bda4587aff077462187186bdf6576ccc550c7" translate="yes" xml:space="preserve">
          <source>General rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8270841522e7cee8169b63b7ba31993395f435a" translate="yes" xml:space="preserve">
          <source>Generally, the configuration file may include several &lt;code&gt;server&lt;/code&gt; blocks &lt;a href=&quot;http/request_processing&quot;&gt;distinguished&lt;/a&gt; by ports on which they &lt;a href=&quot;http/ngx_http_core_module#listen&quot;&gt;listen&lt;/a&gt; to and by &lt;a href=&quot;http/server_names&quot;&gt;server names&lt;/a&gt;. Once nginx decides which &lt;code&gt;server&lt;/code&gt; processes a request, it tests the URI specified in the request&amp;rsquo;s header against the parameters of the &lt;code&gt;location&lt;/code&gt; directives defined inside the &lt;code&gt;server&lt;/code&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7194ca0b10e6688ba0d3d58095be4ff51a7c31" translate="yes" xml:space="preserve">
          <source>Get a particular key-value pair from the HTTP keyval zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734f62148c0a3106e06f747209d0897e0850d02e" translate="yes" xml:space="preserve">
          <source>Get a particular key-value pair from the stream keyval zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a22d6488aa46d4064b8a0e0ed2aae936cd3505e" translate="yes" xml:space="preserve">
          <source>Given the request &lt;code&gt;r&lt;/code&gt; and previously compiled value &lt;code&gt;cv&lt;/code&gt;, the function evaluates the expression and writes the result to &lt;code&gt;res&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fcc9ac8d2e8ff887e90c9f1f70247f2f1a7777a" translate="yes" xml:space="preserve">
          <source>Global objects (&lt;a href=&quot;changes#njs0.3.3&quot;&gt;0.3.3&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6aff63863d0db02cfdc35fd58ba0911c8c04be0" translate="yes" xml:space="preserve">
          <source>Good response:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="380eb30f2d5ab1cdac2a8d64b79d28cfa75198ff" translate="yes" xml:space="preserve">
          <source>HMAC</source>
          <target state="translated">HMAC</target>
        </trans-unit>
        <trans-unit id="36e351356310e10cb4423492c7c49aa71f680a74" translate="yes" xml:space="preserve">
          <source>HS256, HS384, HS512</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="dc373d1615e508b4858b867d43e0776f99b36465" translate="yes" xml:space="preserve">
          <source>HTTP Cache:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e85157b8fea9582074d981dede048488ef099b" translate="yes" xml:space="preserve">
          <source>HTTP Keyval Shared Memory Zone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ff88c88f9daf0e877e2283fd349062ed6242f1" translate="yes" xml:space="preserve">
          <source>HTTP Request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838707913e8950f96d75766787d0b1701912c617" translate="yes" xml:space="preserve">
          <source>HTTP Requests to External Services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d995b34e7bc38ec4167ce63decefe2ad7fc95a" translate="yes" xml:space="preserve">
          <source>HTTP Requests:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb15ed4fd18a5de0ca60c7cc6780dc4b340978e5" translate="yes" xml:space="preserve">
          <source>HTTP Server Zone:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b78a78cec8d37fb951bc28db15831a17edf8a06" translate="yes" xml:space="preserve">
          <source>HTTP Upstream Server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94143cc9f3f5dc195478552e81ba01d9c5a10a9" translate="yes" xml:space="preserve">
          <source>HTTP Upstream:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0368090100595fbfea27e2441b032069cdbf0855" translate="yes" xml:space="preserve">
          <source>HTTP error code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c20c5c9b0462db071d6fc9c0e5b911321ede49f" translate="yes" xml:space="preserve">
          <source>HTTP method, by default the &lt;code&gt;GET&lt;/code&gt; method is used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82a1e5f981c58920ab0bb0550f092da97b9e9fd" translate="yes" xml:space="preserve">
          <source>HTTP method, read-only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52b8fab8c9c689643deec957f0d017ef684972a" translate="yes" xml:space="preserve">
          <source>HTTP request header fields are passed to a FastCGI server as parameters. In applications and scripts running as FastCGI servers, these parameters are usually made available as environment variables. For example, the &amp;ldquo;User-Agent&amp;rdquo; header field is passed as the &lt;code&gt;HTTP_USER_AGENT&lt;/code&gt; parameter. In addition to HTTP request header fields, it is possible to pass arbitrary parameters using the &lt;a href=&quot;#fastcgi_param&quot;&gt;fastcgi_param&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5a5554e576418b958ab25603434f91bb52cf83" translate="yes" xml:space="preserve">
          <source>HTTP version, read-only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b926336fd46dceb48d81514699838aea2b6c84" translate="yes" xml:space="preserve">
          <source>HTTPS server optimization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327af10f8c8e5d299d53d62e446d10a2780b143e" translate="yes" xml:space="preserve">
          <source>HUP</source>
          <target state="translated">HUP</target>
        </trans-unit>
        <trans-unit id="b81c4c9d53cdffd241261b0c9e46272b03b95efc" translate="yes" xml:space="preserve">
          <source>Handling a request &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; is more complex. It is matched by the prefix location &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; only, therefore, it is handled by this location. Then the &lt;a href=&quot;ngx_http_index_module#index&quot;&gt;index&lt;/a&gt; directive tests for the existence of index files according to its parameters and the &amp;ldquo;&lt;code&gt;root /data/www&lt;/code&gt;&amp;rdquo; directive. If the file &lt;code&gt;/data/www/index.html&lt;/code&gt; does not exist, and the file &lt;code&gt;/data/www/index.php&lt;/code&gt; exists, then the directive does an internal redirect to &amp;ldquo;&lt;code&gt;/index.php&lt;/code&gt;&amp;rdquo;, and nginx searches the locations again as if the request had been sent by a client. As we saw before, the redirected request will eventually be handled by the FastCGI server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="a13cd4be49a3b71f8ab645c5d2a99fdbb1716da2" translate="yes" xml:space="preserve">
          <source>Hash table functions are declared in &lt;code&gt;src/core/ngx_hash.h&lt;/code&gt;. Both exact and wildcard matching are supported. The latter requires extra setup and is described in a separate section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372bb225eb027feec0232495eaeef2b4be9349a5" translate="yes" xml:space="preserve">
          <source>Header files should include the so called &quot;header protection&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1386b626a2d0a1d2083e294997c662999585a0" translate="yes" xml:space="preserve">
          <source>Header filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209860c0683964e6198e2507d1f81236c601eac8" translate="yes" xml:space="preserve">
          <source>Header lines sent to a client have the prefix &amp;ldquo;&lt;code&gt;sent_http_&lt;/code&gt;&amp;rdquo;, for example, &lt;code&gt;$sent_http_content_range&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a736084a1d93a79112d65f3144a774a43aeaa05" translate="yes" xml:space="preserve">
          <source>Health check is passed if:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87398e24ea58e8cafa77352da02409bcf395978d" translate="yes" xml:space="preserve">
          <source>Health checks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6828cfbc333a631b3dffbd456481159ba7fc74a" translate="yes" xml:space="preserve">
          <source>Health checks can also be configured to test data obtained from the server. Tests are configured separately using the &lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt; directive and referenced in the &lt;code&gt;match&lt;/code&gt; parameter of the &lt;a href=&quot;#health_check&quot;&gt;health_check&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4fd621b2a738b9c80528ae6ba0387b5355d443c" translate="yes" xml:space="preserve">
          <source>Health checks can be configured for the UDP protocol:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872067677b3cfb7c5f0da65256e79e696da60534" translate="yes" xml:space="preserve">
          <source>Health checks can be configured to test the status code of a response, presence of certain header fields and their values, and the body contents. Tests are configured separately using the &lt;a href=&quot;#match&quot;&gt;match&lt;/a&gt; directive and referenced in the &lt;code&gt;match&lt;/code&gt; parameter of the &lt;a href=&quot;#health_check&quot;&gt;health_check&lt;/a&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977169a2f56615065497cd1735f54129679d50ec" translate="yes" xml:space="preserve">
          <source>Heap</source>
          <target state="translated">Heap</target>
        </trans-unit>
        <trans-unit id="0a4d55a8d778e5022fab701977c5d840bbc486d0" translate="yes" xml:space="preserve">
          <source>Hello World</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2b5f8e13d3308691d7960d4d635e1cf01bb3ec" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;ccv&lt;/code&gt; holds all parameters that are required to initialize the complex value &lt;code&gt;cv&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb897774693d7ee2f7c41d70e838958ed40277a4" translate="yes" xml:space="preserve">
          <source>Here, &lt;code&gt;cf&lt;/code&gt; is a pointer to nginx configuration and &lt;code&gt;name&lt;/code&gt; points to a string containing the variable name. The function returns &lt;code&gt;NGX_ERROR&lt;/code&gt; on error or a valid index otherwise, which is typically stored somewhere in the module's configuration for future use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6295679b32b6dca413cc16ef54a9f4ed28793a8e" translate="yes" xml:space="preserve">
          <source>Here, a client IP address serves as a key. Note that instead of &lt;code&gt;$remote_addr&lt;/code&gt;, the &lt;code&gt;$binary_remote_addr&lt;/code&gt; variable is used here. The &lt;code&gt;$remote_addr&lt;/code&gt; variable&amp;rsquo;s size can vary from 7 to 15 bytes. The stored state occupies either 32 or 64 bytes of memory on 32-bit platforms and always 64 bytes on 64-bit platforms. The &lt;code&gt;$binary_remote_addr&lt;/code&gt; variable&amp;rsquo;s size is always 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses. The stored state always occupies 32 or 64 bytes on 32-bit platforms and 64 bytes on 64-bit platforms. One megabyte zone can keep about 32 thousand 32-byte states or about 16 thousand 64-byte states. If the zone storage is exhausted, the server will return the &lt;a href=&quot;#limit_conn_status&quot;&gt;error&lt;/a&gt; to all further requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7cfbb7c3b1f0ade8fb7351e26e87fb690bad9a" translate="yes" xml:space="preserve">
          <source>Here, the key is a client IP address set by the &lt;code&gt;$binary_remote_addr&lt;/code&gt; variable. The size of &lt;code&gt;$binary_remote_addr&lt;/code&gt; is 4 bytes for IPv4 addresses or 16 bytes for IPv6 addresses. The stored state always occupies 32 or 64 bytes on 32-bit platforms and 64 bytes on 64-bit platforms. One megabyte zone can keep about 32 thousand 32-byte states or about 16 thousand 64-byte states. If the zone storage is exhausted, the server will close the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb758feac83bfb29acfe14ce0e7a89d8ea01913d" translate="yes" xml:space="preserve">
          <source>Here, the route is taken from the &amp;ldquo;&lt;code&gt;JSESSIONID&lt;/code&gt;&amp;rdquo; cookie if present in a request. Otherwise, the route from the URI is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4080d483f672c2faab5837c2b122762694132116" translate="yes" xml:space="preserve">
          <source>Here, the server name is set to an empty string that will match requests without the &amp;ldquo;Host&amp;rdquo; header field, and a special nginx&amp;rsquo;s non-standard code 444 is returned that closes the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6082baf71eedc019c872b8d2f5c4133cda8094f4" translate="yes" xml:space="preserve">
          <source>Here, the states are kept in a 10 megabyte zone &amp;ldquo;one&amp;rdquo;, and an average request processing rate for this zone cannot exceed 1 request per second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac8f6c15c955f3b23aaa97ab5ab40d6e05ba2838" translate="yes" xml:space="preserve">
          <source>Highest-priority SRV records (records with the same lowest-number priority value) are resolved as primary servers, the rest of SRV records are resolved as backup servers. If the &lt;a href=&quot;#backup&quot;&gt;backup&lt;/a&gt; parameter is specified for the server, high-priority SRV records are resolved as backup servers, the rest of SRV records are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d1440a57fe3055a56aa06d17a2e5270417ab3b" translate="yes" xml:space="preserve">
          <source>Hostname of the resolved server. The hostname is assigned automatically and cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1757ee8015a8c251c332071799105e755f08fd37" translate="yes" xml:space="preserve">
          <source>How many times the server became unavailable for client connections (state &amp;ldquo;&lt;code&gt;unavail&lt;/code&gt;&amp;rdquo;) due to the number of unsuccessful attempts reaching the &lt;a href=&quot;../stream/ngx_stream_upstream_module#max_fails&quot;&gt;max_fails&lt;/a&gt; threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed3247b9ed58be10b80ad1850880f3f803c92f7" translate="yes" xml:space="preserve">
          <source>How many times the server became unavailable for client requests (state &amp;ldquo;&lt;code&gt;unavail&lt;/code&gt;&amp;rdquo;) due to the number of unsuccessful attempts reaching the &lt;a href=&quot;ngx_http_upstream_module#max_fails&quot;&gt;max_fails&lt;/a&gt; threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b979979e84e11ea982e3df1b466045d99f9b03" translate="yes" xml:space="preserve">
          <source>How many times the server became unhealthy (state &amp;ldquo;&lt;code&gt;unhealthy&lt;/code&gt;&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d6a424409dcdb938bf8080f6fa522c73fad230" translate="yes" xml:space="preserve">
          <source>How nginx processes a TCP/UDP session</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1e403621e39f5fd62191a955ac613b641dab03" translate="yes" xml:space="preserve">
          <source>How nginx processes a request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc716af70df567d37043a0786c94796ecbd792d" translate="yes" xml:space="preserve">
          <source>How to prevent processing requests with undefined server names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccf3c0e6d75a1363a41c1fa2aee92092546eb7c" translate="yes" xml:space="preserve">
          <source>How-To</source>
          <target state="translated">How-To</target>
        </trans-unit>
        <trans-unit id="9b0181e81f05ce54b0cf87b6c113034089971d0e" translate="yes" xml:space="preserve">
          <source>However, if the SNI-enabled nginx is linked dynamically to an OpenSSL library without SNI support, nginx displays the warning:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c3f9b4869b6de1a489f31e3482baee6f89a057" translate="yes" xml:space="preserve">
          <source>However, if this field is not present in a client request header then nothing will be passed. In such a case it is better to use the &lt;code&gt;$host&lt;/code&gt; variable - its value equals the server name in the &amp;ldquo;Host&amp;rdquo; request header field or the primary server name if this field is not present:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec97186659278d82ecb2f3f9a96c59bd94f8bfa2" translate="yes" xml:space="preserve">
          <source>However, such usage should be limited to simple cases (like the above), since the digital references can easily be overwritten.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf962ebb2ed3364751c39ab6ebf56694539fa84" translate="yes" xml:space="preserve">
          <source>I/O events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f9d285fbda0238baeddbc6c75d48ca1b121a48" translate="yes" xml:space="preserve">
          <source>IPv6 addresses (0.7.36) are specified in square brackets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28fe0b84bd564763c18f7f87659a6e469e0704a" translate="yes" xml:space="preserve">
          <source>IPv6 addresses (0.7.58) are specified in square brackets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59e7452ec939ca836bc3969a8d0bd20efd6e0e4" translate="yes" xml:space="preserve">
          <source>IPv6 addresses are specified in square brackets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f8d1eafca9734e6e11ed8d49fde17bf03293a5" translate="yes" xml:space="preserve">
          <source>IPv6 addresses are supported starting from versions 1.3.0 and 1.2.1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abec331d8858b85575020654b4dea6c8d14e57a5" translate="yes" xml:space="preserve">
          <source>IPv6 addresses are supported starting from versions 1.3.2 and 1.2.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37e9ceaef532b489b503c4d9bd1a504b1fc938b" translate="yes" xml:space="preserve">
          <source>IPv6 prefixes are supported starting from versions 1.3.10 and 1.2.7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be35bbc3fdf0b7a4ee1006b55940d59fdc372b0" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#accept_mutex&quot;&gt;accept_mutex&lt;/a&gt; is enabled, specifies the maximum time during which a worker process will try to restart accepting new connections if another worker process is currently accepting new connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729768543d9f4a04272d605cfe73e5351fc3b67c" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#aio&quot;&gt;aio&lt;/a&gt; is enabled, specifies whether it is used for writing files. Currently, this only works when using &lt;code&gt;aio threads&lt;/code&gt; and is limited to writing temporary files with data received from proxied servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b231f05706e7ab967b25a11ae3c9b694b0281d8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#keepalive&quot;&gt;idle keepalive&lt;/a&gt; connections, multiple &lt;a href=&quot;../ngx_core_module#worker_processes&quot;&gt;workers&lt;/a&gt;, and the &lt;a href=&quot;#zone&quot;&gt;shared memory&lt;/a&gt; are enabled, the total number of active and idle connections to the proxied server may exceed the &lt;code&gt;max_conns&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e3db022799fd3be5e02a20b7e91c3c71653deb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;i&gt;uri&lt;/i&gt;&lt;/code&gt; processing leads to an error, the status code of the last occurred error is returned to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fda52fe72b2f1dcb27af5facf90cb48a9bc326" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;XCLIENT&lt;/code&gt; is disabled then nginx passes the &lt;code&gt;EHLO&lt;/code&gt; command with the &lt;a href=&quot;ngx_mail_core_module#server_name&quot;&gt;server name&lt;/a&gt; when connecting to the backend if the client has passed &lt;code&gt;EHLO&lt;/code&gt;, or &lt;code&gt;HELO&lt;/code&gt; with the server name, otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69574bbf35070098a73af9dffad8fe6cc0bd6d8c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;XCLIENT&lt;/code&gt; is enabled then nginx passes the following commands when connecting to the backend:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20db931d85d8e017f720b885949e21348c7d7fdc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;accept_mutex&lt;/code&gt; is enabled, worker processes will accept new connections by turn. Otherwise, all worker processes will be notified about new connections, and if volume of new connections is low, some of the worker processes may just waste system resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a032c049007be51572209ff8b2df11b3a88906" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;alias&lt;/code&gt; is used inside a location defined with a regular expression then such regular expression should contain captures and &lt;code&gt;alias&lt;/code&gt; should refer to these captures (0.7.40), for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f754fd66ce606b49b5912e20d58c3d4fed1f7b09" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;multi_accept&lt;/code&gt; is disabled, a worker process will accept one new connection at a time. Otherwise, a worker process will accept all new connections at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7883139ddeab43e88b1ff6922f6ff9661a256cd3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is a string, then it holds the subrequest arguments string. Otherwise, &lt;code&gt;options&lt;/code&gt; is expected to be an object with the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7488481f800be4221b9d5672226be64004126cb2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;proxy_pass&lt;/code&gt; is specified without a URI, the request URI is passed to the server in the same form as sent by a client when the original request is processed, or the full normalized request URI is passed when processing the changed URI:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c29d9630ab7135088817667439aa390e5a4e733" translate="yes" xml:space="preserve">
          <source>If HUP is sent to the master process, the output becomes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3b0f13c81272371163fc583096e572eb5957d5" translate="yes" xml:space="preserve">
          <source>If PHP was built with the &lt;code&gt;--enable-force-cgi-redirect&lt;/code&gt; configuration parameter, the &lt;code&gt;REDIRECT_STATUS&lt;/code&gt; parameter should also be passed with the value &amp;ldquo;200&amp;rdquo;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308dd8928ed04b956c81dc9e080b6da939096263" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; string includes the new request arguments, the previous request arguments are appended after them. If this is undesired, putting a question mark at the end of a replacement string avoids having them appended, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b29898c09de7c4c7f46a4d5d4bf27afac3ab980" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;i&gt;text&lt;/i&gt;&lt;/code&gt; contains variables, their values are substituted. A regular expression can contain positional and named captures that can later be used through variables, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9c7156c0ffbf7557f0c59d12b38beacb9e850d" translate="yes" xml:space="preserve">
          <source>If a certificate bundle has not been added, only the server certificate #0 will be shown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc7eb7f30209d2fc4729e4cfd1ad8923657994c" translate="yes" xml:space="preserve">
          <source>If a directive is specified inside the &lt;a href=&quot;ngx_http_core_module#location&quot;&gt;location&lt;/a&gt;, further processing of the request continues in this location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1abdb4766ef1c4b5eaa1e80c8dc37c9a707ddf" translate="yes" xml:space="preserve">
          <source>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a &lt;a href=&quot;ngx_http_upstream_module&quot;&gt;server group&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982ef0e5fa3ad62eaf6876922125fc3bb34d2f01" translate="yes" xml:space="preserve">
          <source>If a domain name resolves to several addresses, all of them will be used in a round-robin fashion. In addition, an address can be specified as a &lt;a href=&quot;ngx_stream_upstream_module&quot;&gt;server group&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c38a1db055ba2f61be92c19807e23829aa26d7" translate="yes" xml:space="preserve">
          <source>If a health check fails, the server will be considered unhealthy. If several health checks are defined for the same group of servers, a single failure of any check will make the corresponding server be considered unhealthy. Client connections are not passed to unhealthy servers and servers in the &amp;ldquo;checking&amp;rdquo; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99cecc74276c88bd23b1bb427f540c7fa4a4a46b" translate="yes" xml:space="preserve">
          <source>If a health check fails, the server will be considered unhealthy. If several health checks are defined for the same group of servers, a single failure of any check will make the corresponding server be considered unhealthy. Client requests are not passed to unhealthy servers and servers in the &amp;ldquo;checking&amp;rdquo; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f300438fb9e02597f12cca9b9cd475dfabdf785c" translate="yes" xml:space="preserve">
          <source>If a large number of server names are defined, another error message will appear:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3282d19821bdede352887aac7b4d8502ad3e6ae7" translate="yes" xml:space="preserve">
          <source>If a large number of server names are defined, or unusually long server names are defined, tuning the &lt;a href=&quot;ngx_http_core_module#server_names_hash_max_size&quot;&gt;server_names_hash_max_size&lt;/a&gt; and &lt;a href=&quot;ngx_http_core_module#server_names_hash_bucket_size&quot;&gt;server_names_hash_bucket_size&lt;/a&gt; directives at the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bc3678330e1c4d477f59498ba8584f0d0180a6" translate="yes" xml:space="preserve">
          <source>If a link has a limited lifetime, the expiration time is set in seconds since Epoch (Thu, 01 Jan 1970 00:00:00 GMT). The value is specified in the expression after the MD5 hash, and is separated by a comma. The expiration time passed in a request is available through the &lt;code&gt;$secure_link_expires&lt;/code&gt; variable for a use in the &lt;a href=&quot;#secure_link_md5&quot;&gt;secure_link_md5&lt;/a&gt; directive. If the expiration time is not specified, a link has the unlimited lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c3c2f8ade044ac7c18101134ad56e5e86923c5" translate="yes" xml:space="preserve">
          <source>If a location is defined by a prefix string that ends with the slash character, and requests are processed by one of &lt;a href=&quot;ngx_http_proxy_module#proxy_pass&quot;&gt;proxy_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_pass&quot;&gt;fastcgi_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_pass&quot;&gt;uwsgi_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_scgi_module#scgi_pass&quot;&gt;scgi_pass&lt;/a&gt;, &lt;a href=&quot;ngx_http_memcached_module#memcached_pass&quot;&gt;memcached_pass&lt;/a&gt;, or &lt;a href=&quot;ngx_http_grpc_module#grpc_pass&quot;&gt;grpc_pass&lt;/a&gt;, then the special processing is performed. In response to a request with URI equal to this string, but without the trailing slash, a permanent redirect with the code 301 will be returned to the requested URI with the slash appended. If this is not desired, an exact match of the URI and location could be defined like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5296c1ebb4e73e0dce03176d06e6e2468f77c585" translate="yes" xml:space="preserve">
          <source>If a matching request does not include the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; arguments, there is no overhead, and the file is sent simply as a static resource. Some players also support byte-range requests, and thus do not require this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4743b80ad71b42e884bc34aa424f79ffbc5f6c3" translate="yes" xml:space="preserve">
          <source>If a regular expression includes the &amp;ldquo;&lt;code&gt;}&lt;/code&gt;&amp;rdquo; or &amp;ldquo;&lt;code&gt;;&lt;/code&gt;&amp;rdquo; characters, the whole expressions should be enclosed in single or double quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd8826b8cf0d84ee26e5b1ef80dbdb62ba18dfd" translate="yes" xml:space="preserve">
          <source>If a server is the only server for a listen port, then nginx will not test server names at all (and will not build the hash tables for the listen port). However, there is one exception. If a server name is a regular expression with captures, then nginx has to execute the expression to get the captures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c178ede12c9ed741cef1afa9dcb7f97fdac41cb" translate="yes" xml:space="preserve">
          <source>If a server name is defined as &amp;ldquo;&lt;code&gt;$hostname&lt;/code&gt;&amp;rdquo; (0.9.4), the machine&amp;rsquo;s hostname is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95efb639d2fa8268b01c14517bef72315fd38342" translate="yes" xml:space="preserve">
          <source>If a source value matches one of the names of special parameters described below, it should be prefixed with the &amp;ldquo;&lt;code&gt;\&lt;/code&gt;&amp;rdquo; symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26ecff49cc23f00177e8061fcfd50153048d84b" translate="yes" xml:space="preserve">
          <source>If a third-party mp4 module was previously used, it should be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e1510ac95f73f787ee9685a90de9fe49e02179" translate="yes" xml:space="preserve">
          <source>If an HLS stream is protected with the &lt;a href=&quot;ngx_http_secure_link_module&quot;&gt;ngx_http_secure_link_module&lt;/a&gt; module, &lt;code&gt;$uri&lt;/code&gt; should not be used in the &lt;a href=&quot;ngx_http_secure_link_module#secure_link_md5&quot;&gt;secure_link_md5&lt;/a&gt; expression because this will cause errors when requesting the fragments. &lt;a href=&quot;ngx_http_map_module#map&quot;&gt;Base URI&lt;/a&gt; should be used instead of &lt;code&gt;$uri&lt;/code&gt; (&lt;code&gt;$hls_uri&lt;/code&gt; in the example):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ac01778ff94b17ec547f83e18d4d395ae07fcd" translate="yes" xml:space="preserve">
          <source>If an error response is processed by a proxied server or a FastCGI/uwsgi/SCGI/gRPC server, and the server may return different response codes (e.g., 200, 302, 401 or 404), it is possible to respond with the code it returns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc5cf7d7ca8950af7421fff0ffa987d45aaa465" translate="yes" xml:space="preserve">
          <source>If an expression does not fit into single line, it is wrapped. The preferred point to break a line is a binary operator. The continuation line is lined up with the start of expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa3005482753e3b2c474a273a82fa3d1968de95" translate="yes" xml:space="preserve">
          <source>If an upstream server cannot be selected immediately while processing a request, the request will be placed into the queue. The directive specifies the maximum &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; of requests that can be in the queue at the same time. If the queue is filled up, or the server to pass the request to cannot be selected within the time period specified in the &lt;code&gt;timeout&lt;/code&gt; parameter, the 502 (Bad Gateway) error will be returned to the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce2f914156342fb72466a5239f711205c528185" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;group&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt; access permissions are specified then &lt;code&gt;user&lt;/code&gt; permissions may be omitted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb1e5e6fe896dc0ff6a76040b17e3fde466dcce" translate="yes" xml:space="preserve">
          <source>If any component of the pathname is a symbolic link, access to a file is denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005a02195ba4426a77fb893348b2f34a65b4b7e2" translate="yes" xml:space="preserve">
          <source>If any of the specified substrings is found in the &amp;ldquo;User-Agent&amp;rdquo; request header field, the browser will be considered ancient. The special string &amp;ldquo;&lt;code&gt;netscape4&lt;/code&gt;&amp;rdquo; corresponds to the regular expression &amp;ldquo;&lt;code&gt;^Mozilla/[1-4]&lt;/code&gt;&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ec51f3dd81ffaca733bb296125afab4372707c" translate="yes" xml:space="preserve">
          <source>If any parameters are omitted, the corresponding cookie fields are not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b466585284f67046fb51ce5706c4e0ac87d6cc8" translate="yes" xml:space="preserve">
          <source>If caching is enabled, the header fields &amp;ldquo;If-Modified-Since&amp;rdquo;, &amp;ldquo;If-Unmodified-Since&amp;rdquo;, &amp;ldquo;If-None-Match&amp;rdquo;, &amp;ldquo;If-Match&amp;rdquo;, &amp;ldquo;Range&amp;rdquo;, and &amp;ldquo;If-Range&amp;rdquo; from the original request are not passed to the proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1052d5348593f446e220ed42cfffdc976a278ad7" translate="yes" xml:space="preserve">
          <source>If delaying of excessive requests while requests are being limited is not desired, the parameter &lt;code&gt;nodelay&lt;/code&gt; should be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7aa3181983cb18e1d081a1505cc8941709cec6f" translate="yes" xml:space="preserve">
          <source>If disabled, redirects issued by nginx will be relative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983b6b8e51b702c28fd6a3cd711b654ade6cbc27" translate="yes" xml:space="preserve">
          <source>If either the &lt;code&gt;buffer&lt;/code&gt; or &lt;code&gt;gzip&lt;/code&gt; (1.3.10, 1.2.7) parameter is used, writes to log will be buffered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1356b4adf2d22e853656fe55e68e5eed7dd22d87" translate="yes" xml:space="preserve">
          <source>If either the &lt;code&gt;buffer&lt;/code&gt; or &lt;code&gt;gzip&lt;/code&gt; parameter is used, writes to log will be buffered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19dd0a15ae7e1366d7cdec704893ce305c416be" translate="yes" xml:space="preserve">
          <source>If enabled, final images will be interlaced. For JPEG, final images will be in &amp;ldquo;progressive JPEG&amp;rdquo; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1502751c09bd4f3fd411c73b1096955b9f54738" translate="yes" xml:space="preserve">
          <source>If enabled, suppresses the output of the &amp;ldquo;&lt;code&gt;[an error occurred while processing the directive]&lt;/code&gt;&amp;rdquo; string if an error occurred during SSI processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae5f9a65d77416dbe6a9e2aec9ee874f7d0ac71" translate="yes" xml:space="preserve">
          <source>If identifiers are issued by multiple servers (services), each service should be assigned its own &lt;code&gt;&lt;i&gt;number&lt;/i&gt;&lt;/code&gt; to ensure that client identifiers are unique. For version 1 cookies, the default value is zero. For version 2 cookies, the default value is the number composed from the last four octets of the server&amp;rsquo;s IP address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84126538ea8cabfbc50450afbb7a886017f0ea59" translate="yes" xml:space="preserve">
          <source>If it is required to process requests without the &amp;ldquo;Host&amp;rdquo; header field in a &lt;a href=&quot;ngx_http_core_module#server&quot;&gt;server&lt;/a&gt; block which is not the default, an empty name should be specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0998296d68e276573eaab79243bc6bcfbd9a7590" translate="yes" xml:space="preserve">
          <source>If nginx fails to start and displays the error message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc87080f823ebf8f177578b32253dadc70ca6ad8" translate="yes" xml:space="preserve">
          <source>If no &lt;a href=&quot;ngx_http_core_module#server_name&quot;&gt;server_name&lt;/a&gt; is defined in a &lt;a href=&quot;ngx_http_core_module#server&quot;&gt;server&lt;/a&gt; block then nginx uses the empty name as the server name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8a5c98d5a8cc548cb1e592042ddaa7ed1ca953" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;encoding&lt;/code&gt; is specified, returns a specified Unicode string or byte string as in ECMAScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e211877ecfb30fc82ec7b2aaa5d7102f1ba593c" translate="yes" xml:space="preserve">
          <source>If not disabled, processing of these header fields has the following effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7343b180a1ccb94a728c2a6b2f892e4a9ecbd03a" translate="yes" xml:space="preserve">
          <source>If one of the servers needs to be temporarily removed, it should be marked with the &lt;code&gt;down&lt;/code&gt; parameter in order to preserve the current hashing of client IP addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e020079fbcac77c2f0c10d2021741f953d475cb" translate="yes" xml:space="preserve">
          <source>If only &lt;code&gt;&lt;i&gt;address&lt;/i&gt;&lt;/code&gt; is given, the port 80 is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d456a94c88b9bbeb3fb7071dce61b411b5ab137" translate="yes" xml:space="preserve">
          <source>If only caching &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt; is specified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097bc0fe15084cfa49e2a0c35e6927ffc1900fa8" translate="yes" xml:space="preserve">
          <source>If possible, the transmission of client data will be postponed until nginx has at least &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; bytes of data to send. The zero value disables postponing data transmission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c06ef229ebc200b91738979797ddb976d7fc721" translate="yes" xml:space="preserve">
          <source>If proxying SMTP does not require authentication, the request will look as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6035fea47ac92b2554fa92ea3287871b98f514c1" translate="yes" xml:space="preserve">
          <source>If recursive search is disabled then instead of the original client address that matches one of the trusted addresses, the last address sent in &amp;ldquo;X-Forwarded-For&amp;rdquo; will be used. If recursive search is enabled then instead of the original client address that matches one of the trusted addresses, the last non-trusted address sent in &amp;ldquo;X-Forwarded-For&amp;rdquo; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9dcc834dfc68c5a9a73eb1943968616767875aa" translate="yes" xml:space="preserve">
          <source>If recursive search is disabled, the original client address that matches one of the trusted addresses is replaced by the last address sent in the request header field defined by the &lt;a href=&quot;#real_ip_header&quot;&gt;real_ip_header&lt;/a&gt; directive. If recursive search is enabled, the original client address that matches one of the trusted addresses is replaced by the last non-trusted address sent in the request header field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c19111451d6b71829727a883c2e30f18b58fb2b" translate="yes" xml:space="preserve">
          <source>If requests without the &amp;ldquo;Host&amp;rdquo; header field should not be allowed, a server that just drops the requests can be defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb68a52317415949eecf3722547bae58eb47523" translate="yes" xml:space="preserve">
          <source>If several keys are specified, only the first key is used to encrypt TLS session tickets. This allows configuring key rotation, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ddc26eed0b4b2118d459279d3fc6279d05b99a" translate="yes" xml:space="preserve">
          <source>If several tests are specified, the response matches only if it matches all tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65de2649b49032ca3b3d491fc9bc861a1ad0da5b" translate="yes" xml:space="preserve">
          <source>If some part of the &amp;ldquo;&lt;code&gt;for&lt;/code&gt;&amp;rdquo; statement is omitted, this is indicated by the &amp;ldquo;&lt;code&gt;/* void */&lt;/code&gt;&amp;rdquo; comment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8908fec25ed867990ac104b1a3180ba9325c056" translate="yes" xml:space="preserve">
          <source>If some special functionality is required, not available with packages and ports, nginx can also be compiled from source files. While more flexible, this approach may be complex for a beginner. For more information, see &lt;a href=&quot;configure&quot;&gt;Building nginx from Sources&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392196546126d88213abe63c83e9dbc7216db854" translate="yes" xml:space="preserve">
          <source>If someone makes a request using an IP address instead of a server name, the &amp;ldquo;Host&amp;rdquo; request header field will contain the IP address and the request can be handled using the IP address as the server name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6418150e7560bd0291f930f9b9959c6d2a87d277" translate="yes" xml:space="preserve">
          <source>If the &amp;ldquo;&lt;code&gt;fields&lt;/code&gt;&amp;rdquo; value is empty, then only HTTP keyval zone names are output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba0b3ba2cd1a954339c25e2fa7cfe28b028d9a2" translate="yes" xml:space="preserve">
          <source>If the &amp;ldquo;&lt;code&gt;fields&lt;/code&gt;&amp;rdquo; value is empty, then only stream keyval zone names are output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b179e6d5ea543f80edb451131dae69ae0eaf39" translate="yes" xml:space="preserve">
          <source>If the &amp;ldquo;Auth-User&amp;rdquo; header exists in the response, it overrides the username used to authenticate with the backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbc85f8cc9ac253367af9866e9a2c00fcc19c1c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#fastcgi_cache_key&quot;&gt;cache key&lt;/a&gt; of a purge request ends with an asterisk (&amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo;), all cache entries matching the wildcard key will be removed from the cache. However, these entries will remain on the disk until they are deleted for either &lt;a href=&quot;#fastcgi_cache_path&quot;&gt;inactivity&lt;/a&gt;, or processed by the &lt;a href=&quot;#purger&quot;&gt;cache purger&lt;/a&gt; (1.7.12), or a client attempts to access them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0627e4747b216d4f1966eb76fe49f9beaa1b254" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#proxy_cache_key&quot;&gt;cache key&lt;/a&gt; of a purge request ends with an asterisk (&amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo;), all cache entries matching the wildcard key will be removed from the cache. However, these entries will remain on the disk until they are deleted for either &lt;a href=&quot;#proxy_cache_path&quot;&gt;inactivity&lt;/a&gt;, or processed by the &lt;a href=&quot;#purger&quot;&gt;cache purger&lt;/a&gt; (1.7.12), or a client attempts to access them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6774c34ad8ba74a023de464c7b54cc5397568d10" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#scgi_cache_key&quot;&gt;cache key&lt;/a&gt; of a purge request ends with an asterisk (&amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo;), all cache entries matching the wildcard key will be removed from the cache. However, these entries will remain on the disk until they are deleted for either &lt;a href=&quot;#scgi_cache_path&quot;&gt;inactivity&lt;/a&gt;, or processed by the &lt;a href=&quot;#purger&quot;&gt;cache purger&lt;/a&gt; (1.7.12), or a client attempts to access them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78ae48f1f8af47a153c6800a7efa2c6177c77b1" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#uwsgi_cache_key&quot;&gt;cache key&lt;/a&gt; of a purge request ends with an asterisk (&amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo;), all cache entries matching the wildcard key will be removed from the cache. However, these entries will remain on the disk until they are deleted for either &lt;a href=&quot;#uwsgi_cache_path&quot;&gt;inactivity&lt;/a&gt;, or processed by the &lt;a href=&quot;#purger&quot;&gt;cache purger&lt;/a&gt; (1.7.12), or a client attempts to access them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de53b821afda939dc06986c294b159b0d7e6c78d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;always&lt;/code&gt; parameter is specified (1.7.5), the header field will be added regardless of the response code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5855ca6c135a708ee218a8ad90ec21b3b54a9129" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;always&lt;/code&gt; parameter is specified the specified field will be added regardless of the response code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9d60fd0c5a2dc8c68a18b2eb12626102b86ccf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;connect&lt;/code&gt; parameter is specified, time to &lt;a href=&quot;#var_upstream_connect_time&quot;&gt;connect&lt;/a&gt; to the upstream server is used. If the &lt;code&gt;first_byte&lt;/code&gt; parameter is specified, time to receive the &lt;a href=&quot;#var_upstream_first_byte_time&quot;&gt;first byte&lt;/a&gt; of data is used. If the &lt;code&gt;last_byte&lt;/code&gt; is specified, time to receive the &lt;a href=&quot;#var_upstream_session_time&quot;&gt;last byte&lt;/a&gt; of data is used. If the &lt;code&gt;inflight&lt;/code&gt; parameter is specified (1.11.6), incomplete connections are also taken into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9566bfa8ea97d442f7b3edc26e2654cb1c0fc534" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;consistent&lt;/code&gt; parameter is specified, the &lt;a href=&quot;https://www.metabrew.com/article/libketama-consistent-hashing-algo-memcached-clients&quot;&gt;ketama&lt;/a&gt; consistent hashing method will be used instead. The method ensures that only a few keys will be remapped to different servers when a server is added to or removed from the group. This helps to achieve a higher cache hit ratio for caching servers. The method is compatible with the &lt;a href=&quot;https://metacpan.org/pod/Cache::Memcached::Fast&quot;&gt;Cache::Memcached::Fast&lt;/a&gt; Perl library with the &lt;code&gt;&lt;i&gt;ketama_points&lt;/i&gt;&lt;/code&gt; parameter set to 160.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc32979ae8bad8ce39a0bab16a68be9e1367416" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;gzip&lt;/code&gt; parameter is used, then the buffered data will be compressed before writing to the file. The compression level can be set between 1 (fastest, less compression) and 9 (slowest, best compression). By default, the buffer size is equal to 64K bytes, and the compression level is set to 1. Since the data is compressed in atomic blocks, the log file can be decompressed or read by &amp;ldquo;&lt;code&gt;zcat&lt;/code&gt;&amp;rdquo; at any time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6230db24a7a17ed61d8dc8d5343eb86b8046c1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;header&lt;/code&gt; parameter is specified, time to receive the &lt;a href=&quot;#var_upstream_header_time&quot;&gt;response header&lt;/a&gt; is used. If the &lt;code&gt;last_byte&lt;/code&gt; parameter is specified, time to receive the &lt;a href=&quot;#var_upstream_response_time&quot;&gt;full response&lt;/a&gt; is used. If the &lt;code&gt;inflight&lt;/code&gt; parameter is specified (1.11.6), incomplete requests are also taken into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3652406238ede803d82cbd4b84101d87e1a4b68e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;proxy_pass&lt;/code&gt; directive is specified with a URI, then when a request is passed to the server, the part of a &lt;a href=&quot;ngx_http_core_module#location&quot;&gt;normalized&lt;/a&gt; request URI matching the location is replaced by a URI specified in the directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0397a9e7ba6c9db8b1f98bcbb0c54daa70124c7b" translate="yes" xml:space="preserve">
          <source>If the client request method is listed in this directive then the response will be cached. &amp;ldquo;&lt;code&gt;GET&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;HEAD&lt;/code&gt;&amp;rdquo; methods are always added to the list, though it is recommended to specify them explicitly. See also the &lt;a href=&quot;#fastcgi_no_cache&quot;&gt;fastcgi_no_cache&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a5276109d083a1485ea39c34f899e5d259264d" translate="yes" xml:space="preserve">
          <source>If the client request method is listed in this directive then the response will be cached. &amp;ldquo;&lt;code&gt;GET&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;HEAD&lt;/code&gt;&amp;rdquo; methods are always added to the list, though it is recommended to specify them explicitly. See also the &lt;a href=&quot;#proxy_no_cache&quot;&gt;proxy_no_cache&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59687835b9b292d1e23719ee7902646fb3b8a06c" translate="yes" xml:space="preserve">
          <source>If the client request method is listed in this directive then the response will be cached. &amp;ldquo;&lt;code&gt;GET&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;HEAD&lt;/code&gt;&amp;rdquo; methods are always added to the list, though it is recommended to specify them explicitly. See also the &lt;a href=&quot;#scgi_no_cache&quot;&gt;scgi_no_cache&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a014826becefb2647d55ba9416ec3465d6c6114" translate="yes" xml:space="preserve">
          <source>If the client request method is listed in this directive then the response will be cached. &amp;ldquo;&lt;code&gt;GET&lt;/code&gt;&amp;rdquo; and &amp;ldquo;&lt;code&gt;HEAD&lt;/code&gt;&amp;rdquo; methods are always added to the list, though it is recommended to specify them explicitly. See also the &lt;a href=&quot;#uwsgi_no_cache&quot;&gt;uwsgi_no_cache&lt;/a&gt; directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb2c299ac010d517b9d801b00e1125fb1679013" translate="yes" xml:space="preserve">
          <source>If the currently allocated amount of memory is not large enough to accommodate the new elements, a new block of memory is allocated and the existing elements are copied to it. The new memory block is normally twice as large as the existing one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9031026d5719d075f63eb8c0d874d8209b8a7ff" translate="yes" xml:space="preserve">
          <source>If the directive is not present then either &lt;code&gt;*:80&lt;/code&gt; is used if nginx runs with the superuser privileges, or &lt;code&gt;*:8000&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb61d6bbefb86cdd797e4d9882b4b3d540ec55b6" translate="yes" xml:space="preserve">
          <source>If the directive is not set, the protocol can be detected automatically based on the well-known port specified in the &lt;a href=&quot;#listen&quot;&gt;listen&lt;/a&gt; directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0774a7b32816743ecbfd0403e8ef6c02f6b4a1" translate="yes" xml:space="preserve">
          <source>If the directive is not specified, the machine&amp;rsquo;s hostname is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dcad1ba4725b71ca3b645a5d4d35a255a38b018" translate="yes" xml:space="preserve">
          <source>If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on client sockets by using either &lt;code&gt;NOTE_LOWAT&lt;/code&gt; flag of the &lt;a href=&quot;../events#kqueue&quot;&gt;kqueue&lt;/a&gt; method or the &lt;code&gt;SO_SNDLOWAT&lt;/code&gt; socket option. In both cases the specified &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982648fecec0148dea6602265537b19306fe680f" translate="yes" xml:space="preserve">
          <source>If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on outgoing connections to a FastCGI server by using either &lt;code&gt;NOTE_LOWAT&lt;/code&gt; flag of the &lt;a href=&quot;../events#kqueue&quot;&gt;kqueue&lt;/a&gt; method, or the &lt;code&gt;SO_SNDLOWAT&lt;/code&gt; socket option, with the specified &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f3323fad0986a89fb5940d0e1889e598a42bc4" translate="yes" xml:space="preserve">
          <source>If the directive is set to a non-zero value, nginx will try to minimize the number of send operations on outgoing connections to a proxied server by using either &lt;code&gt;NOTE_LOWAT&lt;/code&gt; flag of the &lt;a href=&quot;../events#kqueue&quot;&gt;kqueue&lt;/a&gt; method, or the &lt;code&gt;SO_SNDLOWAT&lt;/code&gt; socket option, with the specified &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d58ef4f3d45344a46a3d23324e09b29fb0c4f9" translate="yes" xml:space="preserve">
          <source>If the directive is specified on the &lt;a href=&quot;#server&quot;&gt;server&lt;/a&gt; level, its value is only used if a server is a default one. The value specified also applies to all virtual servers listening on the same address and port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd557fb12cdfd627ff6e2109cffa99b4bbc18fc7" translate="yes" xml:space="preserve">
          <source>If the directive is specified with &lt;code&gt;if_not_empty&lt;/code&gt; (1.1.11) then such a parameter will be passed to the server only if its value is not empty:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d920dfc53ac7ec5266a1ecd8867c984c9ee15d" translate="yes" xml:space="preserve">
          <source>If the directive&amp;rsquo;s parameter is set to &amp;ldquo;&lt;code&gt;$hostname&lt;/code&gt;&amp;rdquo; (0.9.4), the machine&amp;rsquo;s hostname is inserted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="675adf87eb4b135448159349c27202a657088ac4" translate="yes" xml:space="preserve">
          <source>If the file is modified significantly, the list of authors should be updated, the new author is added to the top.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d93cfd6032c3e52905a27ace75407f39db9516" translate="yes" xml:space="preserve">
          <source>If the header does not include the &amp;ldquo;X-Accel-Expires&amp;rdquo; field, parameters of caching may be set in the header fields &amp;ldquo;Expires&amp;rdquo; or &amp;ldquo;Cache-Control&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0774e356f6838d1c47e4df5346ef62f47a71716" translate="yes" xml:space="preserve">
          <source>If the header includes the &amp;ldquo;Set-Cookie&amp;rdquo; field, such a response will not be cached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c3741228fc7ea5462bfa1d05cb485a6de6210f" translate="yes" xml:space="preserve">
          <source>If the header includes the &amp;ldquo;Vary&amp;rdquo; field with the special value &amp;ldquo;&lt;code&gt;*&lt;/code&gt;&amp;rdquo;, such a response will not be cached (1.7.7). If the header includes the &amp;ldquo;Vary&amp;rdquo; field with another value, such a response will be cached taking into account the corresponding request header fields (1.7.7).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721e8c92cfb74eb0eab73197244f8c7e72584da7" translate="yes" xml:space="preserve">
          <source>If the last request passed to the FastCGI server for populating a new cache element has not completed for the specified &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt;, one more request may be passed to the FastCGI server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3cbe21dcab84151a00d1bb3d0b0f131396f47eb" translate="yes" xml:space="preserve">
          <source>If the last request passed to the SCGI server for populating a new cache element has not completed for the specified &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt;, one more request may be passed to the SCGI server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f901f83bd7982b7bae0f9e81068054e0372a22" translate="yes" xml:space="preserve">
          <source>If the last request passed to the proxied server for populating a new cache element has not completed for the specified &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt;, one more request may be passed to the proxied server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b89a7506225a63b6708cc2cbee85de2b58aea6d" translate="yes" xml:space="preserve">
          <source>If the last request passed to the uwsgi server for populating a new cache element has not completed for the specified &lt;code&gt;&lt;i&gt;time&lt;/i&gt;&lt;/code&gt;, one more request may be passed to the uwsgi server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da1c61fc6ca55a47120f91458109902a0c4eec7" translate="yes" xml:space="preserve">
          <source>If the longest matching prefix location has the &amp;ldquo;&lt;code&gt;^~&lt;/code&gt;&amp;rdquo; modifier then regular expressions are not checked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd5aeca2681939e50ed513e9fe218e9db7a2af4" translate="yes" xml:space="preserve">
          <source>If the mark is set, it is compared with the first padding symbol in the base64 representation of the client identifier passed in a cookie. If they do not match, the cookie is resent with the specified mark, expiration time, and &amp;ldquo;P3P&amp;rdquo; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55624d9719c14adc63b5c7d7e2ccd4b3b95ae5ad" translate="yes" xml:space="preserve">
          <source>If the name &lt;a href=&quot;ngx_mail_core_module#resolver&quot;&gt;found&lt;/a&gt; by the client IP address points to the same address, it is passed in the &lt;code&gt;NAME&lt;/code&gt; parameter of the &lt;code&gt;XCLIENT&lt;/code&gt; command. If the name could not be found, points to a different address, or &lt;a href=&quot;ngx_mail_core_module#resolver&quot;&gt;resolver&lt;/a&gt; is not specified, the &lt;code&gt;[UNAVAILABLE]&lt;/code&gt; is passed in the &lt;code&gt;NAME&lt;/code&gt; parameter. If an error has occurred in the process of resolving, the &lt;code&gt;[TEMPUNAVAIL]&lt;/code&gt; value is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3cd90f996cc167bc039a4e96c4440d76c1e964" translate="yes" xml:space="preserve">
          <source>If the new master process exits then the old master process discards the &lt;code&gt;.oldbin&lt;/code&gt; suffix from the file name with the process ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f805dfd047a9d7d6d648b301e208b506b800ddd6" translate="yes" xml:space="preserve">
          <source>If the parameter is not &lt;code&gt;off&lt;/code&gt;, enables the cookie marking mechanism and sets the character used as a mark. This mechanism is used to add or change &lt;a href=&quot;#userid_p3p&quot;&gt;userid_p3p&lt;/a&gt; and/or a cookie expiration time while preserving the client identifier. A mark can be any letter of the English alphabet (case-sensitive), digit, or the &amp;ldquo;&lt;code&gt;=&lt;/code&gt;&amp;rdquo; character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a60b70572a54169dd2861fbf2d966144e7ec3e" translate="yes" xml:space="preserve">
          <source>If the requested link passes the authenticity check, the &lt;code&gt;$secure_link&lt;/code&gt; variable is set to the link extracted from the request URI. Otherwise, the &lt;code&gt;$secure_link&lt;/code&gt; variable is set to an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb74a55409692573fb1274eaa09800d24848a33" translate="yes" xml:space="preserve">
          <source>If the server certificate and the bundle have been concatenated in the wrong order, nginx will fail to start and will display the error message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a597c861b1ae0ebf1c66516842ce94920842af5" translate="yes" xml:space="preserve">
          <source>If the service name contains one or more dots, then the name is constructed by joining the service prefix and the server name. For example, to look up the &lt;code&gt;_http._tcp.backend.example.com&lt;/code&gt; and &lt;code&gt;server1.backend.example.com&lt;/code&gt; SRV records, it is necessary to specify the directives:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1aa22bc6d2fdb42307f5914853af82e172f915" translate="yes" xml:space="preserve">
          <source>If the service name does not contain a dot (&amp;ldquo;&lt;code&gt;.&lt;/code&gt;&amp;rdquo;), then the &lt;a href=&quot;https://tools.ietf.org/html/rfc2782&quot;&gt;RFC&lt;/a&gt;-compliant name is constructed and the TCP protocol is added to the service prefix. For example, to look up the &lt;code&gt;_http._tcp.backend.example.com&lt;/code&gt; SRV record, it is necessary to specify the directive:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ba16135ad93cfe19d2dfaa40ce7a3c05dc4036" translate="yes" xml:space="preserve">
          <source>If the source value matches more than one of the specified variants, e.g. both a mask and a regular expression match, the first matching variant will be chosen, in the following order of priority:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0077384c616480ad08900cd417444ba85c4159f3" translate="yes" xml:space="preserve">
          <source>If the specified regular expression matches a request URI, URI is changed as specified in the &lt;code&gt;&lt;i&gt;replacement&lt;/i&gt;&lt;/code&gt; string. The &lt;code&gt;rewrite&lt;/code&gt; directives are executed sequentially in order of their appearance in the configuration file. It is possible to terminate further processing of the directives using flags. If a replacement string starts with &amp;ldquo;&lt;code&gt;http://&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;https://&lt;/code&gt;&amp;rdquo;, or &amp;ldquo;&lt;code&gt;$scheme&lt;/code&gt;&amp;rdquo;, the processing stops and the redirect is returned to a client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdc064808ed9cc206ced38d586ac50d0b14294f" translate="yes" xml:space="preserve">
          <source>If the synchronization is enabled, removal of key-value pairs (no matter &lt;a href=&quot;../http/ngx_http_api_module#patchStreamKeyvalZoneKeyValue&quot;&gt;one&lt;/a&gt; or &lt;a href=&quot;../http/ngx_http_api_module#deleteStreamKeyvalZoneData&quot;&gt;all&lt;/a&gt;) will be performed only on a target cluster node. The same key-value pairs on other cluster nodes will be removed upon &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ff6d646ace9ae4206c9fee9c481c3bbad50807" translate="yes" xml:space="preserve">
          <source>If the synchronization is enabled, removal of key-value pairs (no matter &lt;a href=&quot;ngx_http_api_module#patchHttpKeyvalZoneKeyValue&quot;&gt;one&lt;/a&gt; or &lt;a href=&quot;ngx_http_api_module#deleteHttpKeyvalZoneData&quot;&gt;all&lt;/a&gt;) will be performed only on a target cluster node. The same key-value pairs on other cluster nodes will be removed upon &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df725002b7849115cc060dbff14332b34282b365" translate="yes" xml:space="preserve">
          <source>If the value of a header field is an empty string then this field will not be passed to a gRPC server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="586d2e3e2741c0b7bff7688281ebffdf2357dbd8" translate="yes" xml:space="preserve">
          <source>If the value of a header field is an empty string then this field will not be passed to a proxied server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6254c6181b10f8e68ff824b64b629e2f458c76" translate="yes" xml:space="preserve">
          <source>If the value of a variable does not represent a valid IP address then the &amp;ldquo;&lt;code&gt;255.255.255.255&lt;/code&gt;&amp;rdquo; address is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430ee52ce40b387a99e6fce6a9b61901ded575d3" translate="yes" xml:space="preserve">
          <source>If the variable is set to a non-empty string that is not &amp;ldquo;&lt;code&gt;0&lt;/code&gt;&amp;rdquo;, the client identifiers are reset. The special value &amp;ldquo;&lt;code&gt;log&lt;/code&gt;&amp;rdquo; additionally leads to the output of messages about the reset identifiers to the &lt;a href=&quot;../ngx_core_module#error_log&quot;&gt;error_log&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4586c7c5c46a7928148ed4727eb576f67e1558" translate="yes" xml:space="preserve">
          <source>If the zone storage is exhausted, the least recently used state is removed. Even if after that a new state cannot be created, the request is terminated with an &lt;a href=&quot;#limit_req_status&quot;&gt;error&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e80be18cad39c3e00074a3d3ec2e8a7a37e1858" translate="yes" xml:space="preserve">
          <source>If there are matches, captures can be accessed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40afdf9cbce49af4b9c667aedd69d3ac9dffa544" translate="yes" xml:space="preserve">
          <source>If there is no &amp;ldquo;Auth-Wait&amp;rdquo; header, an error will be returned and the connection will be closed. The current implementation allocates memory for each authentication attempt. The memory is freed only at the end of a session. Therefore, the number of invalid authentication attempts in a single session must be limited &amp;mdash; the server must respond without the &amp;ldquo;Auth-Wait&amp;rdquo; header after 10-20 attempts (the attempt number is passed in the &amp;ldquo;Auth-Login-Attempt&amp;rdquo; header).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6862706e49f77400696abcd85849c567006dca42" translate="yes" xml:space="preserve">
          <source>If there is no need to change URI and method during internal redirection it is possible to pass error processing into a named location:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2419b6667cb58c2e10229510cd607df9f9341db5" translate="yes" xml:space="preserve">
          <source>If there is only a single server in a group, &lt;code&gt;max_fails&lt;/code&gt;, &lt;code&gt;fail_timeout&lt;/code&gt; and &lt;code&gt;slow_start&lt;/code&gt; parameters are ignored, and such a server will never be considered unavailable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf0bdfbdaa3fd01d857963bc26a5b695f53cc5e" translate="yes" xml:space="preserve">
          <source>If there is the need to tie a client to a particular application server &amp;mdash; in other words, make the client&amp;rsquo;s session &amp;ldquo;sticky&amp;rdquo; or &amp;ldquo;persistent&amp;rdquo; in terms of always trying to select a particular server &amp;mdash; the ip-hash load balancing mechanism can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718fb8046b928005a371145395b4e14e560adf17" translate="yes" xml:space="preserve">
          <source>If upgrade was successful, then the QUIT signal should be sent to the old master process, and only new processes will stay:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803f3de67e47b52e3a4f2c08b7b8bfb2359b690f" translate="yes" xml:space="preserve">
          <source>If zero value is specified, no response is expected. However, if a response is received and the session is still not finished, the response will be handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b1af5bb232eddaf92937c5e650b4e8c00be839" translate="yes" xml:space="preserve">
          <source>Improvement: added exception strings where appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee03d7947832f2c3c0ca3773c24ade923d514491" translate="yes" xml:space="preserve">
          <source>Improvement: added information about illegal token in number parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12760b4fd51e758601ddc11d6dc2e688bde38b7e" translate="yes" xml:space="preserve">
          <source>Improvement: added support for multiple arguments in &lt;code&gt;console.log()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d08c449a725f8993803511615c057ea2c0024f4" translate="yes" xml:space="preserve">
          <source>Improvement: added support for null as a second argument of &lt;a href=&quot;reference#subrequest&quot;&gt;&lt;code&gt;r.subrequest()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b2c4aefb7cd1b3b441c2dcd7b3884c039bc30d" translate="yes" xml:space="preserve">
          <source>Improvement: added the debug for the returned status code in &lt;a href=&quot;../http/ngx_http_js_module#js_content&quot;&gt;js_content&lt;/a&gt; handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82b4188021637916ddde8463d571e3c82989908" translate="yes" xml:space="preserve">
          <source>Improvement: allowed uppercased &lt;code&gt;O&lt;/code&gt; in octal literal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9b5b7717389ef0f80b559a2f03e23eeb2bfd85" translate="yes" xml:space="preserve">
          <source>Improvement: code generator refactored and simplified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf3167a6549202747de0b2fb5c009c3ad7cd1ca" translate="yes" xml:space="preserve">
          <source>Improvement: code related to function invocation is refactored. Thanks to 洪志道 (Hong Zhi Dao).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b60473ab58f9e1892fc8c7bca20ac667ff38eff" translate="yes" xml:space="preserve">
          <source>Improvement: code related to parsing of objects, variables and functions is refactored. Thanks to 洪志道 (Hong Zhi Dao).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75327b67795dcc63cca0cbb0582ad418422c1b0" translate="yes" xml:space="preserve">
          <source>Improvement: code related to variables is refactored. Thanks to 洪志道 (Hong Zhi Dao).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbf475bd73df9c260b40b85517b37790e342911" translate="yes" xml:space="preserve">
          <source>Improvement: getting of special response headers in &lt;a href=&quot;reference#r_headers_out&quot;&gt;&lt;code&gt;r.headersOut{}&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f2342ab3c7e6ab6058cfe208b42b0154874b9b" translate="yes" xml:space="preserve">
          <source>Improvement: handling non-array values in &lt;code&gt;Array.prototype.slice()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f609af0e7d56a3e51630e0d13fc0dea2a7da34" translate="yes" xml:space="preserve">
          <source>Improvement: improved logging for &lt;a href=&quot;../http/ngx_http_js_module#js_set&quot;&gt;js_set&lt;/a&gt; and &lt;a href=&quot;../http/ngx_http_js_module#js_content&quot;&gt;js_content&lt;/a&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b586cff5bf715aa5f2c7d405c55c1c79d1dc80e" translate="yes" xml:space="preserve">
          <source>Improvement: improved wording for primitive type conversion exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df68cfbedd91a6556e34b0daec3279fe2e1c94d4" translate="yes" xml:space="preserve">
          <source>Improvement: improved wording for various exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="840deab4e2349f5251a2bcd1d3df816bb112140c" translate="yes" xml:space="preserve">
          <source>Improvement: large-value output improved in &lt;code&gt;console.log()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7e81b701dce4ecaf9dfcc878fdf639cbc25cf7" translate="yes" xml:space="preserve">
          <source>Improvement: moved njs vm to the &lt;code&gt;main&lt;/code&gt; configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75890099d48cc8a2dd306ffa2f529d17dc063d21" translate="yes" xml:space="preserve">
          <source>Improvement: parser is refactored. Thanks to 洪志道 (Hong Zhi Dao).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a879931e12ce5ae4bdb92ee3e51914fa5b3eb72c" translate="yes" xml:space="preserve">
          <source>Improvement: public header &lt;code&gt;cleanup. njscript.h&lt;/code&gt; is renamed to &lt;code&gt;njs.h&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f252cce21b1cf14e3caf75254bad2205166b80a" translate="yes" xml:space="preserve">
          <source>Improvement: reporting filenames in exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5d7340bd5e87678ba1b177bec40b6afcdc2fe3" translate="yes" xml:space="preserve">
          <source>Improvement: setting special response headers in &lt;a href=&quot;reference#r_headers_out&quot;&gt;&lt;code&gt;r.headersOut{}&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518964d65e2f1daea2c74fbf90f79f186ee87bff" translate="yes" xml:space="preserve">
          <source>Improvement: setting status code to 500 by default in the &lt;a href=&quot;../http/ngx_http_js_module#js_content&quot;&gt;js_content&lt;/a&gt; handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5244c99e9eaa55fcbc868e808227f16bd8c5b6be" translate="yes" xml:space="preserve">
          <source>Improvement: string output improved in &lt;code&gt;console.log()&lt;/code&gt; in a compliant way (without escaping and quotes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6e89c94a9ebe5cf7de8d4eec0aeafbaf203213" translate="yes" xml:space="preserve">
          <source>Improvement: using ES6 version of &lt;code&gt;ToInt32()&lt;/code&gt;, &lt;code&gt;ToUint32()&lt;/code&gt;, &lt;code&gt;ToLength()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1072bac89bc74384d87024c7833cc69143a9bc" translate="yes" xml:space="preserve">
          <source>Improvement: working with unknown methods in &lt;a href=&quot;reference#subrequest&quot;&gt;&lt;code&gt;r.subrequest()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1aee9e99a1e8ff82f054f69a561e9377085225b" translate="yes" xml:space="preserve">
          <source>In HTTP/2 and SPDY, each concurrent request is considered a separate connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccc62ab8fd3760a75073544bed118930b1c4205" translate="yes" xml:space="preserve">
          <source>In addition to that, HTTP code should include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd91b0955775bcd29afe30f4fb35a8117ac4d57" translate="yes" xml:space="preserve">
          <source>In addition, a &lt;code&gt;&lt;i&gt;URL&lt;/i&gt;&lt;/code&gt; for temporary redirect with the code 302 can be specified as the sole parameter. Such a parameter should start with the &amp;ldquo;&lt;code&gt;http://&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;https://&lt;/code&gt;&amp;rdquo;, or &amp;ldquo;&lt;code&gt;$scheme&lt;/code&gt;&amp;rdquo; string. A &lt;code&gt;&lt;i&gt;URL&lt;/i&gt;&lt;/code&gt; can contain variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8fd9462824838a32405aaafa45dd44e5a72e31" translate="yes" xml:space="preserve">
          <source>In addition, a charset can be set in the &amp;ldquo;X-Accel-Charset&amp;rdquo; response header field. This capability can be disabled using the &lt;a href=&quot;ngx_http_proxy_module#proxy_ignore_headers&quot;&gt;proxy_ignore_headers&lt;/a&gt;, &lt;a href=&quot;ngx_http_fastcgi_module#fastcgi_ignore_headers&quot;&gt;fastcgi_ignore_headers&lt;/a&gt;, &lt;a href=&quot;ngx_http_uwsgi_module#uwsgi_ignore_headers&quot;&gt;uwsgi_ignore_headers&lt;/a&gt;, &lt;a href=&quot;ngx_http_scgi_module#scgi_ignore_headers&quot;&gt;scgi_ignore_headers&lt;/a&gt;, and &lt;a href=&quot;ngx_http_grpc_module#grpc_ignore_headers&quot;&gt;grpc_ignore_headers&lt;/a&gt; directives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb671fc4157590e2d462ad91286482915549db3" translate="yes" xml:space="preserve">
          <source>In addition, all active keys and information about data are stored in a shared memory zone, whose &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt; and &lt;code&gt;&lt;i&gt;size&lt;/i&gt;&lt;/code&gt; are configured by the &lt;code&gt;keys_zone&lt;/code&gt; parameter. One megabyte zone can store about 8 thousand keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f832b0d1d9c47932c1976724daa31d007372021b" translate="yes" xml:space="preserve">
          <source>In addition, it is possible to specify a time of day using the &amp;ldquo;&lt;code&gt;@&lt;/code&gt;&amp;rdquo; prefix (0.7.9, 0.6.34):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ac2cb2061d8da4e237f23d229c4b8d1e5b683c" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;any&lt;/code&gt; parameter can be specified to cache any responses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfdb87d9583c1767561b5879ef25cafafd743e3" translate="yes" xml:space="preserve">
          <source>In addition, the server name can be passed together with the port of the proxied server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440471bb6a92e4385a0e2a01435da31cc7cd7e84" translate="yes" xml:space="preserve">
          <source>In addition, there are more directives and parameters that control server load balancing in nginx, e.g. &lt;a href=&quot;ngx_http_proxy_module#proxy_next_upstream&quot;&gt;proxy_next_upstream&lt;/a&gt;, &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;backup&lt;/a&gt;, &lt;a href=&quot;ngx_http_upstream_module#server&quot;&gt;down&lt;/a&gt;, and &lt;a href=&quot;ngx_http_upstream_module#keepalive&quot;&gt;keepalive&lt;/a&gt;. For more information please check our &lt;a href=&quot;../index&quot;&gt;reference documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9523a4f3b030da3e671ef82dddf3dbecac95a836" translate="yes" xml:space="preserve">
          <source>In case of an error, the output is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa37c96b62d786640dfcee408cdd5ebd99b7d52d" translate="yes" xml:space="preserve">
          <source>In case something does not work as expected, you may try to find out the reason in &lt;code&gt;access.log&lt;/code&gt; and &lt;code&gt;error.log&lt;/code&gt; files in the directory &lt;code&gt;/usr/local/nginx/logs&lt;/code&gt; or &lt;code&gt;/var/log/nginx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b029a860f5aec53b40c2dac21945824ec0c154a" translate="yes" xml:space="preserve">
          <source>In catch-all server examples the strange name &amp;ldquo;&lt;code&gt;_&lt;/code&gt;&amp;rdquo; can be seen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9dfcb4426267969dcb08d8873669c3da8bc2431" translate="yes" xml:space="preserve">
          <source>In contrast to the certificate set by &lt;a href=&quot;#ssl_client_certificate&quot;&gt;ssl_client_certificate&lt;/a&gt;, the list of these certificates will not be sent to clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b5d2410e9008b2a9ea9e2865b0926c633f6ec7" translate="yes" xml:space="preserve">
          <source>In nginx a list is a sequence of arrays, optimized for inserting a potentially large number of items. The &lt;code&gt;ngx_list_t&lt;/code&gt; list type is defined as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a78c8c409d8c170afac33f9e92dc746fbde8a9" translate="yes" xml:space="preserve">
          <source>In nginx a queue is an intrusive doubly linked list, with each node defined as follows:</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
