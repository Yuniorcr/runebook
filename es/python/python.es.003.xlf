<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="python">
    <body>
      <group id="python">
        <trans-unit id="6009e75cf38fb8c09d9e7cac6cfa218964c0b97b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;blocked&lt;/em&gt; is an iterable of module names that are replaced with &lt;code&gt;None&lt;/code&gt; in the module cache during the import to ensure that attempts to import them raise &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5be62a1b483cd7dbb8f076d619bb2b0e66013a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;br&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;br&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1348f25bb558d963a90e88bf109004c5b84c3c09" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;braced&lt;/em&gt; &amp;ndash; This group matches the brace enclosed placeholder name; it should not include either the delimiter or braces in the capturing group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da633a07e4fc6a29a8fecab56492eefeb8daea4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;braceidpattern&lt;/em&gt; &amp;ndash; This is like &lt;em&gt;idpattern&lt;/em&gt; but describes the pattern for braced placeholders. Defaults to &lt;code&gt;None&lt;/code&gt; which means to fall back to &lt;em&gt;idpattern&lt;/em&gt; (i.e. the same pattern is used both inside and outside braces). If given, this allows you to define different patterns for braced and unbraced placeholders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6466d612569bc5db10c01f86f621eb34abe0e9f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bs&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;bs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d6c264658fa91b0fee52204e72b9795ed6e0a921" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;buffer&lt;/em&gt; must be a writable &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. If &lt;em&gt;offset&lt;/em&gt; is given then the message will be written into the buffer from that position. Offset must be a non-negative integer less than the length of &lt;em&gt;buffer&lt;/em&gt; (in bytes).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd8755cb3adfd0bf31281754c59beb88315d556" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;buffering&lt;/em&gt; has the same meaning as for the built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function. It defaults to -1 which means that the default buffer size will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee13272464bebd9207ef626cf39c8f156a64905a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;buffering&lt;/em&gt; is an optional integer used to set the buffering policy. Pass 0 to switch buffering off (only allowed in binary mode), 1 to select line buffering (only usable in text mode), and an integer &amp;gt; 1 to indicate the size in bytes of a fixed-size chunk buffer. When no &lt;em&gt;buffering&lt;/em&gt; argument is given, the default buffering policy works as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25376ac14ba5be1e597b4b21f9046297843a701" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bufsize&lt;/em&gt; is the initial size of the buffer used to hold decompressed data. If more space is required, the buffer size will be increased as needed, so you don&amp;rsquo;t have to get this value exactly right; tuning it will only save a few calls to &lt;code&gt;malloc()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e5fc810b2a59d6b8bb8c9f30d800d5676a83be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bufsize&lt;/em&gt; will be supplied as the corresponding argument to the &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; function when creating the stdin/stdout/stderr pipe file objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c79e1eb639006313b1117912054c09bcdfd9dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bztar&lt;/em&gt;: bzip2&amp;rsquo;ed tar-file (if the &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; module is available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2381d1a9682bbfc56aef04f15c80beec7179a5e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cache_tag&lt;/em&gt; is the tag used by the import machinery in the filenames of cached modules. By convention, it would be a composite of the implementation&amp;rsquo;s name and version, like &lt;code&gt;'cpython-33'&lt;/code&gt;. However, a Python implementation may use some other value if appropriate. If &lt;code&gt;cache_tag&lt;/code&gt; is set to &lt;code&gt;None&lt;/code&gt;, it indicates that module caching should be disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51abb8a198c83a3a855864f04f782c3ba6f1211e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cafile&lt;/em&gt;, &lt;em&gt;capath&lt;/em&gt;, &lt;em&gt;cadata&lt;/em&gt; represent optional CA certificates to trust for certificate verification, as in &lt;a href=&quot;#ssl.SSLContext.load_verify_locations&quot;&gt;&lt;code&gt;SSLContext.load_verify_locations()&lt;/code&gt;&lt;/a&gt;. If all three are &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, this function can choose to trust the system&amp;rsquo;s default CA certificates instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b618eb00ac4e5f3d3b8b8d42ad85c6916e087398" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;callable&lt;/em&gt; is a callable used for creating objects for this type identifier. If a manager instance will be connected to the server using the &lt;a href=&quot;#multiprocessing.managers.BaseManager.connect&quot;&gt;&lt;code&gt;connect()&lt;/code&gt;&lt;/a&gt; method, or if the &lt;em&gt;create_method&lt;/em&gt; argument is &lt;code&gt;False&lt;/code&gt; then this can be left as &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc87e3cb2c13403210fc665017862e8b7c1978a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;callback&lt;/em&gt; will be called exactly once. If two callbacks are scheduled for exactly the same time, the order in which they are called is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2580f22c5141228c179d335f3770843471e45b30" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;category&lt;/em&gt; is a class (a subclass of &lt;a href=&quot;exceptions#Warning&quot;&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/a&gt;) of which the warning category must be a subclass in order to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013ce11adb0c561ef7c4921cb734357d7864de5c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;charjunk&lt;/em&gt;: A function that accepts a character (a string of length 1), and returns if the character is junk, or false if not. The default is module-level function &lt;a href=&quot;#difflib.IS_CHARACTER_JUNK&quot;&gt;&lt;code&gt;IS_CHARACTER_JUNK()&lt;/code&gt;&lt;/a&gt;, which filters out whitespace characters (a blank or tab; it&amp;rsquo;s a bad idea to include newline in this!).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad7ac05985510c1d4b8b641ca52a906bc2a867d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;charjunk&lt;/em&gt;: A function that accepts a single character argument (a string of length 1), and returns true if the character is junk. The default is &lt;code&gt;None&lt;/code&gt;, meaning that no character is considered junk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d35bd95604bca45b1a784d3f1172f3c62ad89e84" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;charset&lt;/em&gt; is the canonical name of a character set. &lt;em&gt;codecname&lt;/em&gt; is the name of a Python codec, as appropriate for the second argument to the &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s &lt;a href=&quot;stdtypes#str.encode&quot;&gt;&lt;code&gt;encode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4204a63058ef8cd46485ef9d7a1d42aa0514b772" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;charset&lt;/em&gt; is the input character set, and must be the canonical name of a character set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b6c6da2c816004128df8dc1be71552cf21f27c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;classCommand&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;classCommand&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a8617465205129a8836ef965d261f671c8934d65" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;client&lt;/em&gt; / &lt;strong&gt;server&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b8c81a3f58e6974f384dfc56fd177f23cb80c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;client_connected_cb&lt;/em&gt; can be a plain callable or a &lt;a href=&quot;asyncio-task#coroutine&quot;&gt;coroutine function&lt;/a&gt;; if it is a coroutine function, it will be automatically scheduled as a &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd1b9087ccf6e5c539dbb6104203904e480be77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;comment_prefixes&lt;/em&gt;, default value: &lt;code&gt;('#', ';')&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028a685ed4d8a9959eab9978e300ead31dd9791d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;compileflags&lt;/em&gt; gives the set of flags that should be used by the Python compiler when running the examples. If not specified, then it will default to the set of future-import flags that apply to &lt;em&gt;globs&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdeb3f853e7c26e447612c2814164e25906d9133" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;compression&lt;/em&gt; is the ZIP compression method to use when writing the archive, and should be &lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt;&lt;code&gt;ZIP_STORED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt;&lt;code&gt;ZIP_DEFLATED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt;&lt;code&gt;ZIP_BZIP2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt;&lt;code&gt;ZIP_LZMA&lt;/code&gt;&lt;/a&gt;; unrecognized values will cause &lt;a href=&quot;exceptions#NotImplementedError&quot;&gt;&lt;code&gt;NotImplementedError&lt;/code&gt;&lt;/a&gt; to be raised. If &lt;a href=&quot;#zipfile.ZIP_DEFLATED&quot;&gt;&lt;code&gt;ZIP_DEFLATED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#zipfile.ZIP_BZIP2&quot;&gt;&lt;code&gt;ZIP_BZIP2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#zipfile.ZIP_LZMA&quot;&gt;&lt;code&gt;ZIP_LZMA&lt;/code&gt;&lt;/a&gt; is specified but the corresponding module (&lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;bz2#module-bz2&quot;&gt;&lt;code&gt;bz2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;lzma#module-lzma&quot;&gt;&lt;code&gt;lzma&lt;/code&gt;&lt;/a&gt;) is not available, &lt;a href=&quot;exceptions#RuntimeError&quot;&gt;&lt;code&gt;RuntimeError&lt;/code&gt;&lt;/a&gt; is raised. The default is &lt;a href=&quot;#zipfile.ZIP_STORED&quot;&gt;&lt;code&gt;ZIP_STORED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12ab70d23d8d06a197777944c953ea981b19981" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;compresslevel&lt;/em&gt;, if given, must be an integer between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;9&lt;/code&gt;. The default is &lt;code&gt;9&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3834a03002b14c25ad40ff313034219b7a943f01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;computer_name&lt;/em&gt; is the name of the remote computer, of the form &lt;code&gt;r&quot;\\computername&quot;&lt;/code&gt;. If &lt;code&gt;None&lt;/code&gt;, the local computer is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f423113b649744bd8bda92d9ff58211d904574" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;conn&lt;/em&gt; and &lt;em&gt;addr&lt;/em&gt; are as per the instance variables described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22923effb7a9752158b1df520a85659b837d4194" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;content&lt;/em&gt; may be a string or bytes instance; the &lt;code&gt;expat&lt;/code&gt; reader module always produces strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b8ce1ec54f140ba9d5813f7620c6af6fba4ca8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; and &lt;em&gt;numlines&lt;/em&gt; are both optional keyword arguments. Set &lt;em&gt;context&lt;/em&gt; to &lt;code&gt;True&lt;/code&gt; when contextual differences are to be shown, else the default is &lt;code&gt;False&lt;/code&gt; to show the full files. &lt;em&gt;numlines&lt;/em&gt; defaults to &lt;code&gt;5&lt;/code&gt;. When &lt;em&gt;context&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;&lt;em&gt;numlines&lt;/em&gt; controls the number of context lines which surround the difference highlights. When &lt;em&gt;context&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;&lt;em&gt;numlines&lt;/em&gt; controls the number of lines which are shown before a difference highlight when using the &amp;ldquo;next&amp;rdquo; hyperlinks (setting to zero would cause the &amp;ldquo;next&amp;rdquo; hyperlinks to place the next difference highlight at the top of the browser without any leading context).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bbf36e10dbf9d3b3c6f6ed1881ad3ddd219b30" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; can be used to specify the context used for starting the worker processes. Usually a pool is created using the function &lt;code&gt;multiprocessing.Pool()&lt;/code&gt; or the &lt;a href=&quot;#multiprocessing.pool.Pool&quot;&gt;&lt;code&gt;Pool()&lt;/code&gt;&lt;/a&gt; method of a context object. In both cases &lt;em&gt;context&lt;/em&gt; is set appropriately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f33053e53ce5cc387bd36697c91adba09e078f05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; is a &lt;code&gt;dict&lt;/code&gt; object containing the following keys (new keys may be introduced in future Python versions):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36217babb50e45b83709379e8cb7a88dc5d062a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; parameter has the same meaning as in &lt;a href=&quot;#asyncio.loop.call_exception_handler&quot;&gt;&lt;code&gt;call_exception_handler()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c68375f42b4f0af5a0222a36bd09ebe60baf0c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;context&lt;/em&gt; parameter is a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object which allows bundling SSL configuration options, certificates and private keys into a single (potentially long-lived) structure. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c6fa7431f405ed39264c1a56f690787a376298" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;converters&lt;/em&gt;, default value: not set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50e64dcc1738a6d15f4981400e7b8b9bda5fefa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cookie&lt;/em&gt; is a &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instance. &lt;em&gt;request&lt;/em&gt; is an object implementing the interface defined by the documentation for &lt;a href=&quot;#http.cookiejar.CookieJar.add_cookie_header&quot;&gt;&lt;code&gt;CookieJar.add_cookie_header()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b988754a0324bf98332449b8b00baa2aed8372b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;cookie&lt;/em&gt; is a &lt;a href=&quot;#http.cookiejar.Cookie&quot;&gt;&lt;code&gt;Cookie&lt;/code&gt;&lt;/a&gt; instance. &lt;em&gt;request&lt;/em&gt; is an object implementing the interface defined by the documentation for &lt;a href=&quot;#http.cookiejar.CookieJar.extract_cookies&quot;&gt;&lt;code&gt;CookieJar.extract_cookies()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9b0c5818f9139d53ceab6593a59b37f13d3ac6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;create&lt;/em&gt; controls whether a new shared memory block is created (&lt;code&gt;True&lt;/code&gt;) or an existing shared memory block is attached (&lt;code&gt;False&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e34b28379b51f0b0dfb8616d502c729b60ee01e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;create_method&lt;/em&gt; determines whether a method should be created with name &lt;em&gt;typeid&lt;/em&gt; which can be used to tell the server process to create a new shared object and return a proxy for it. By default it is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8e393053c92d1da949efe5f16d3642d7dd968d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;data&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ab904f54d24142b11fe5b86bae3bc618645622de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt; is a non-empty bytes object containing the received data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029d9f8184c71718da088170593ba71f47fd70f6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt; must be a record describing the new data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd2883f88fc08fb0e184aa42c3e758d5a84d795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt; must be an object specifying additional data to be sent to the server, or &lt;code&gt;None&lt;/code&gt; if no such data is needed. See &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c15432051028a1b2fabf2519610396a5a68546" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt; must be an object specifying additional data to send to the server, or &lt;code&gt;None&lt;/code&gt; if no such data is needed. Currently HTTP requests are the only ones that use &lt;em&gt;data&lt;/em&gt;. The supported object types include bytes, file-like objects, and iterables of bytes-like objects. If no &lt;code&gt;Content-Length&lt;/code&gt; nor &lt;code&gt;Transfer-Encoding&lt;/code&gt; header field has been provided, &lt;a href=&quot;#urllib.request.HTTPHandler&quot;&gt;&lt;code&gt;HTTPHandler&lt;/code&gt;&lt;/a&gt; will set these headers according to the type of &lt;em&gt;data&lt;/em&gt;. &lt;code&gt;Content-Length&lt;/code&gt; will be used to send bytes objects, while &lt;code&gt;Transfer-Encoding: chunked&lt;/code&gt; as specified in &lt;a href=&quot;https://tools.ietf.org/html/rfc7230.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 7230&lt;/strong&gt;&lt;/a&gt;, Section 3.3.1 will be used to send files and other iterables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d329ee1a9ceab13d0c8a8fab3a104995e27760" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt;: directory for data files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06970e08bffa697a291a2e244b40275186536c38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data&lt;/em&gt;: initial chunk of data to hash, which must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt;. It can be passed only as positional argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2d36e372d90dd9c463c2e4ed07851997129306" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;data_size_limit&lt;/em&gt; specifies the maximum number of bytes that will be accepted in a &lt;code&gt;DATA&lt;/code&gt; command. A value of &lt;code&gt;None&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; means no limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288e085fdc1c6e9a678da8d5bc5dc3954aaf3860" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;database&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; giving the pathname (absolute or relative to the current working directory) of the database file to be opened. You can use &lt;code&gt;&quot;:memory:&quot;&lt;/code&gt; to open a database connection to a database that resides in RAM instead of on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108a45e45cf015e79404078efbd72adb47324575" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;date1&lt;/em&gt; is considered less than &lt;em&gt;date2&lt;/em&gt; when &lt;em&gt;date1&lt;/em&gt; precedes &lt;em&gt;date2&lt;/em&gt; in time. (4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d311dc97cc4c69c426224ee0c36a4d01a8dbbd27" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;date2&lt;/em&gt; is &lt;code&gt;timedelta.days&lt;/code&gt; days removed from &lt;em&gt;date1&lt;/em&gt;. (1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9ccdca0a208c28ac718680e7247c31b44bbee8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;date2&lt;/em&gt; is moved forward in time if &lt;code&gt;timedelta.days &amp;gt; 0&lt;/code&gt;, or backward if &lt;code&gt;timedelta.days &amp;lt; 0&lt;/code&gt;. Afterward &lt;code&gt;date2 - date1 == timedelta.days&lt;/code&gt;. &lt;code&gt;timedelta.seconds&lt;/code&gt; and &lt;code&gt;timedelta.microseconds&lt;/code&gt; are ignored. &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; is raised if &lt;code&gt;date2.year&lt;/code&gt; would be smaller than &lt;a href=&quot;#datetime.MINYEAR&quot;&gt;&lt;code&gt;MINYEAR&lt;/code&gt;&lt;/a&gt; or larger than &lt;a href=&quot;#datetime.MAXYEAR&quot;&gt;&lt;code&gt;MAXYEAR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f4f58074cfd9c65dcbc2b924b8405ba9d6e2e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;datefmt&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;datefmt&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1c9c7d6fe2445b24fc051a68695e72cb9d58b910" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;datetime1&lt;/em&gt; is considered less than &lt;em&gt;datetime2&lt;/em&gt; when &lt;em&gt;datetime1&lt;/em&gt; precedes &lt;em&gt;datetime2&lt;/em&gt; in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af90badb3e619635841ef142a85d6f1240bad962" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dateutil.tz&lt;/em&gt; library brings the &lt;em&gt;IANA timezone database&lt;/em&gt; (also known as the Olson database) to Python, and its usage is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0809765801c235c113f52aef9433616da84803d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;debug&lt;/em&gt; can be set from &lt;code&gt;0&lt;/code&gt; (no debug messages) up to &lt;code&gt;3&lt;/code&gt; (all debug messages). The messages are written to &lt;code&gt;sys.stderr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5959e20259956b2e9c74c11d9b0c49550921b5dd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;decode_data&lt;/em&gt; specifies whether the data portion of the SMTP transaction should be decoded using UTF-8. The default is &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; cannot be set to &lt;code&gt;True&lt;/code&gt; at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d008e5684bfb6b10e583cbfbd0737747519e3d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;decode_data&lt;/em&gt; specifies whether the data portion of the SMTP transaction should be decoded using UTF-8. When &lt;em&gt;decode_data&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt; (the default), the server advertises the &lt;code&gt;8BITMIME&lt;/code&gt; extension (&lt;a href=&quot;https://tools.ietf.org/html/rfc6152.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 6152&lt;/strong&gt;&lt;/a&gt;), accepts the &lt;code&gt;BODY=8BITMIME&lt;/code&gt; parameter to the &lt;code&gt;MAIL&lt;/code&gt; command, and when present passes it to &lt;a href=&quot;#smtpd.SMTPServer.process_message&quot;&gt;&lt;code&gt;process_message()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;kwargs['mail_options']&lt;/code&gt; list. &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; cannot be set to &lt;code&gt;True&lt;/code&gt; at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4ee5e50941112e97d0af5f4f06d010efefea76" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default&lt;/em&gt; is the value to return if the information is not available, or if the transport does not support querying it with the given third-party event loop implementation or on the current platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cc3d5bc9b97b3d2246ebad4077dbaf7aeb782a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;default_section&lt;/em&gt;, default value: &lt;code&gt;configparser.DEFAULTSECT&lt;/code&gt; (that is: &lt;code&gt;&quot;DEFAULT&quot;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5e50eaa86a85c4954d4f8f3217df664fe53cf6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;defaults&lt;/em&gt; can be &lt;code&gt;None&lt;/code&gt; or an &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-iterable&quot;&gt;iterable&lt;/a&gt; of default values. Since fields with a default value must come after any fields without a default, the &lt;em&gt;defaults&lt;/em&gt; are applied to the rightmost parameters. For example, if the fieldnames are &lt;code&gt;['x', 'y', 'z']&lt;/code&gt; and the defaults are &lt;code&gt;(1, 2)&lt;/code&gt;, then &lt;code&gt;x&lt;/code&gt; will be a required argument, &lt;code&gt;y&lt;/code&gt; will default to &lt;code&gt;1&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; will default to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9326606041cfb2059853887dbebb585547a8b58" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;defaults&lt;/em&gt;, default value: &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6ccd5b8bf978826a159aaa04c3fbdeb70d296a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;delimiter&lt;/em&gt; &amp;ndash; This is the literal string describing a placeholder introducing delimiter. The default value is &lt;code&gt;$&lt;/code&gt;. Note that this should &lt;em&gt;not&lt;/em&gt; be a regular expression, as the implementation will call &lt;a href=&quot;re#re.escape&quot;&gt;&lt;code&gt;re.escape()&lt;/code&gt;&lt;/a&gt; on this string as needed. Note further that you cannot change the delimiter after class creation (i.e. a different delimiter must be set in the subclass&amp;rsquo;s class namespace).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4e5104396f1f5ce0e100017578238c6339648a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;delimiters&lt;/em&gt;, default value: &lt;code&gt;('=', ':')&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e64abf8cff13a265a48aacb9a36a7e7d720433" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;depth&lt;/em&gt;: maximal depth of tree (1 to 255, 255 if unlimited, 1 in sequential mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180e69b201a8a47ce24048abf9431e493c48afbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;description&lt;/em&gt; can be provided to describe the format, and will be returned by the &lt;a href=&quot;#shutil.get_unpack_formats&quot;&gt;&lt;code&gt;get_unpack_formats()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85549d2408c9bd6f8e0add9882d61c945c595db0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;description&lt;/em&gt; is used by &lt;a href=&quot;#shutil.get_archive_formats&quot;&gt;&lt;code&gt;get_archive_formats()&lt;/code&gt;&lt;/a&gt; which returns the list of archivers. Defaults to an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b67d924d970b690a6fbd631bd1189067c6336a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;detect_types&lt;/em&gt; defaults to 0 (i. e. off, no type detection), you can set it to any combination of &lt;a href=&quot;#sqlite3.PARSE_DECLTYPES&quot;&gt;&lt;code&gt;PARSE_DECLTYPES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#sqlite3.PARSE_COLNAMES&quot;&gt;&lt;code&gt;PARSE_COLNAMES&lt;/code&gt;&lt;/a&gt; to turn type detection on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981dede2bba6db6f045e2ac54b5e24b896f0ef0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;device&lt;/em&gt; is the audio device filename to use. If it is not specified, this module first looks in the environment variable &lt;code id=&quot;index-0&quot;&gt;AUDIODEV&lt;/code&gt; for a device to use. If not found, it falls back to &lt;code&gt;/dev/dsp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ada909878e050bfe0fc00c7465ad5633292fca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dict_type&lt;/em&gt;, default value: &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f871e1d4a6369b89d40d55bf489af5dc79022671" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;digest_size&lt;/em&gt;: size of output digest in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007b877216de396e755abc71c3c9d2b91601846b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dirpath&lt;/em&gt; is a string, the path to the directory. &lt;em&gt;dirnames&lt;/em&gt; is a list of the names of the subdirectories in &lt;em&gt;dirpath&lt;/em&gt; (excluding &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt;). &lt;em&gt;filenames&lt;/em&gt; is a list of the names of the non-directory files in &lt;em&gt;dirpath&lt;/em&gt;. Note that the names in the lists contain no path components. To get a full path (which begins with &lt;em&gt;top&lt;/em&gt;) to a file or directory in &lt;em&gt;dirpath&lt;/em&gt;, do &lt;code&gt;os.path.join(dirpath, name)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2859bfe9fb554dd720bc5cb08ccf5c5fb8a9ebba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dirpath&lt;/em&gt;, &lt;em&gt;dirnames&lt;/em&gt; and &lt;em&gt;filenames&lt;/em&gt; are identical to &lt;a href=&quot;#os.walk&quot;&gt;&lt;code&gt;walk()&lt;/code&gt;&lt;/a&gt; output, and &lt;em&gt;dirfd&lt;/em&gt; is a file descriptor referring to the directory &lt;em&gt;dirpath&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9810af6703f309fd47e9fbacc13448ca5f7f2a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;disable_existing_loggers&lt;/em&gt; - whether any existing non-root loggers are to be disabled. This setting mirrors the parameter of the same name in &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt;. If absent, this parameter defaults to &lt;code&gt;True&lt;/code&gt;. This value is ignored if &lt;em&gt;incremental&lt;/em&gt; is &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12235d809e777b162269bbb341c4fc9bd9b2c6d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dklen&lt;/em&gt; is the length of the derived key. If &lt;em&gt;dklen&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then the digest size of the hash algorithm &lt;em&gt;hash_name&lt;/em&gt; is used, e.g. 64 for SHA-512.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a95bda0ab6df1b15b780d89c2e98a8a025462c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;dst&lt;/em&gt; must be the complete target file name; look at &lt;a href=&quot;#shutil.copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; for a copy that accepts a target directory path. If &lt;em&gt;src&lt;/em&gt; and &lt;em&gt;dst&lt;/em&gt; specify the same file, &lt;a href=&quot;#shutil.SameFileError&quot;&gt;&lt;code&gt;SameFileError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5bb70975f98621d7ed5119cc8fcbd24fc451df" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;elem&lt;/em&gt; is an element tree or an individual element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1bb46af9fdcdd5f0f4c0fa18d44530dc2855b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;element&lt;/em&gt; is the root element. The tree is initialized with the contents of the XML &lt;em&gt;file&lt;/em&gt; if given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9843007738de39c9e9ff8caf4fbe51e57fed131f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;element_factory&lt;/em&gt;, when given, must be a callable accepting two positional arguments: a tag and a dict of attributes. It is expected to return a new element instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b51897b6db35826329ab970036d3280c9f25caa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;empty_lines_in_values&lt;/em&gt;, default value: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6eccdcee9b41b91a617e4848a706a4efa5fadea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;enable_SMTPUTF8&lt;/em&gt; determines whether the &lt;code&gt;SMTPUTF8&lt;/code&gt; extension (as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;) should be enabled. The default is &lt;code&gt;False&lt;/code&gt;. When &lt;code&gt;True&lt;/code&gt;, &lt;code&gt;SMTPUTF8&lt;/code&gt; is accepted as a parameter to the &lt;code&gt;MAIL&lt;/code&gt; command and when present is passed to &lt;a href=&quot;#smtpd.SMTPServer.process_message&quot;&gt;&lt;code&gt;process_message()&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;kwargs['mail_options']&lt;/code&gt; list. &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; cannot be set to &lt;code&gt;True&lt;/code&gt; at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c69a65cfe7b7b658df8737275b519bb1deb7fe1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;enable_SMTPUTF8&lt;/em&gt; determines whether the &lt;code&gt;SMTPUTF8&lt;/code&gt; extension (as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc6531.html&quot; id=&quot;index-7&quot;&gt;&lt;strong&gt;RFC 6531&lt;/strong&gt;&lt;/a&gt;) should be enabled. The default is &lt;code&gt;False&lt;/code&gt;. &lt;em&gt;decode_data&lt;/em&gt; and &lt;em&gt;enable_SMTPUTF8&lt;/em&gt; cannot be set to &lt;code&gt;True&lt;/code&gt; at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c51f1fc7a50be1ce0e1496f76e787256a41690" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; defaults to &lt;code&gt;'utf-8'&lt;/code&gt;. &lt;em&gt;errors&lt;/em&gt; defaults to &lt;code&gt;'replace'&lt;/code&gt;, meaning invalid sequences are replaced by a placeholder character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691e0a0372811b8b7b92eed45fa8664facb1a33a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; defines the character encoding to use for the metadata in the archive. The default value is &lt;a href=&quot;sys#sys.getfilesystemencoding&quot;&gt;&lt;code&gt;sys.getfilesystemencoding()&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;'ascii'&lt;/code&gt; as a fallback. Depending on whether the archive is read or written, the metadata must be either decoded or encoded. If &lt;em&gt;encoding&lt;/em&gt; is not set appropriately, this conversion may fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7aa5550e1a648cd12c5f4fe31dfd8e32326e6b1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; gives the name of the encoding that the stream will be decoded or encoded with. It defaults to &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding(False)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f87281a2f743da03307d7ccf36ec28d88f87b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; for no encoding or the name of the program used to encode (e.g. &lt;strong&gt;compress&lt;/strong&gt; or &lt;strong&gt;gzip&lt;/strong&gt;). The encoding is suitable for use as a &lt;em&gt;Content-Encoding&lt;/em&gt; header, &lt;strong&gt;not&lt;/strong&gt; as a &lt;em&gt;Content-Transfer-Encoding&lt;/em&gt; header. The mappings are table driven. Encoding suffixes are case sensitive; type suffixes are first tried case sensitively, then case insensitively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff92ed5a9af18f6ee804568dc08dffd3a594b6b6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; is the name of the encoding used to decode or encode the file. This should only be used in text mode. The default encoding is platform dependent (whatever &lt;a href=&quot;locale#locale.getpreferredencoding&quot;&gt;&lt;code&gt;locale.getpreferredencoding()&lt;/code&gt;&lt;/a&gt; returns), but any &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-text-encoding&quot;&gt;text encoding&lt;/a&gt; supported by Python can be used. See the &lt;a href=&quot;codecs#module-codecs&quot;&gt;&lt;code&gt;codecs&lt;/code&gt;&lt;/a&gt; module for the list of supported encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af62b9f32594adeb4d66f2e87470a4b9bd0050ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;encoding&lt;/em&gt; specifies the encoding which is to be used for the file. Any encoding that encodes to and decodes from bytes is allowed, and the data types supported by the file methods depend on the codec used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdba4de4daa27d67ac16f7fd8d1cf6bb8911efe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;err_msg&lt;/em&gt;: Error message, can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76b437bbf0bd9fc061e42deaeecdefbac2a01ac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;errors&lt;/em&gt; is an optional string that specifies how encoding and decoding errors are to be handled&amp;mdash;this cannot be used in binary mode. A variety of standard error handlers are available (listed under &lt;a href=&quot;codecs#error-handlers&quot;&gt;Error Handlers&lt;/a&gt;), though any error handling name that has been registered with &lt;a href=&quot;codecs#codecs.register_error&quot;&gt;&lt;code&gt;codecs.register_error()&lt;/code&gt;&lt;/a&gt; is also valid. The standard names include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d608bf4a8fe34cd52b64f236d3408ba7fb0ae2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;errors&lt;/em&gt; is an optional string that specifies how encoding and decoding errors are to be handled. Pass &lt;code&gt;'strict'&lt;/code&gt; to raise a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; exception if there is an encoding error (the default of &lt;code&gt;None&lt;/code&gt; has the same effect), or pass &lt;code&gt;'ignore'&lt;/code&gt; to ignore errors. (Note that ignoring encoding errors can lead to data loss.) &lt;code&gt;'replace'&lt;/code&gt; causes a replacement marker (such as &lt;code&gt;'?'&lt;/code&gt;) to be inserted where there is malformed data. &lt;code&gt;'backslashreplace'&lt;/code&gt; causes malformed data to be replaced by a backslashed escape sequence. When writing, &lt;code&gt;'xmlcharrefreplace'&lt;/code&gt; (replace with the appropriate XML character reference) or &lt;code&gt;'namereplace'&lt;/code&gt; (replace with &lt;code&gt;\N{...}&lt;/code&gt; escape sequences) can be used. Any other error handling name that has been registered with &lt;a href=&quot;codecs#codecs.register_error&quot;&gt;&lt;code&gt;codecs.register_error()&lt;/code&gt;&lt;/a&gt; is also valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5ea3df010940091084e201b01bed525a80bca7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;errors&lt;/em&gt; may be given to define the error handling. It defaults to &lt;code&gt;'strict'&lt;/code&gt; which causes a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to be raised in case an encoding error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a2c7815f3885dced013d2b11e1571b296cb81b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;errors&lt;/em&gt; may be given to define the error handling. It defaults to &lt;code&gt;'strict'&lt;/code&gt;, which causes &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; to be raised in case an encoding error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc77642dabd9bc3d17e0fa4ff51f583981205c36" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;escaped&lt;/em&gt; &amp;ndash; This group matches the escape sequence, e.g. &lt;code&gt;$$&lt;/code&gt;, in the default pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2602d2fe2693cc74c5845d35e440bf10fc6ce44a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;eventmask&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;eventmask&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9565a91107efbf72c4917b201714d8217e873e1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;eventmask&lt;/em&gt; is an optional bitmask describing the type of events you want to check for, and can be a combination of the constants &lt;code&gt;POLLIN&lt;/code&gt;, &lt;code&gt;POLLPRI&lt;/code&gt;, and &lt;code&gt;POLLOUT&lt;/code&gt;, described in the table below. If not specified, the default value used will check for all 3 types of events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e13ef155ba6eae677c9b9fd35bcbd90d8fe7ed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;eventmask&lt;/em&gt; is an optional bitmask describing the type of events you want to check for. The constants are the same that with &lt;code&gt;poll()&lt;/code&gt; object. The default value is a combination of the constants &lt;code&gt;POLLIN&lt;/code&gt;, &lt;code&gt;POLLPRI&lt;/code&gt;, and &lt;code&gt;POLLOUT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85059782032b60dfd066d2e0addb16be547f6176" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;example&lt;/em&gt; is the example about to be processed. &lt;em&gt;exc_info&lt;/em&gt; is a tuple containing information about the unexpected exception (as returned by &lt;a href=&quot;sys#sys.exc_info&quot;&gt;&lt;code&gt;sys.exc_info()&lt;/code&gt;&lt;/a&gt;). &lt;em&gt;test&lt;/em&gt; is the test containing &lt;em&gt;example&lt;/em&gt;. &lt;em&gt;out&lt;/em&gt; is the output function that was passed to &lt;a href=&quot;#doctest.DocTestRunner.run&quot;&gt;&lt;code&gt;DocTestRunner.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e247b37a8bd8787f7f97911aff7803aaa42c156" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;example&lt;/em&gt; is the example about to be processed. &lt;em&gt;got&lt;/em&gt; is the actual output from the example. &lt;em&gt;test&lt;/em&gt; is the test containing &lt;em&gt;example&lt;/em&gt;. &lt;em&gt;out&lt;/em&gt; is the output function that was passed to &lt;a href=&quot;#doctest.DocTestRunner.run&quot;&gt;&lt;code&gt;DocTestRunner.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95ec944452550ac6bf4e7e6465182179f751280" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;example&lt;/em&gt; is the example about to be processed. &lt;em&gt;test&lt;/em&gt; is the test &lt;em&gt;containing example&lt;/em&gt;. &lt;em&gt;out&lt;/em&gt; is the output function that was passed to &lt;a href=&quot;#doctest.DocTestRunner.run&quot;&gt;&lt;code&gt;DocTestRunner.run()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc04cc5af346c22622a72bf686666fecee8c3f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exc_traceback&lt;/em&gt;: Exception traceback, can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a807f97d1d4f85ccb27e5ed21273e70eb2d1fa05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exc_type&lt;/em&gt;: Exception type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c23ee0fcf6f75ab8d4d1c0721ace73b62f004c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exc_value&lt;/em&gt;: Exception value, can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01db21a1485f51108648bb7eed119736aeb1be35" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;except&lt;/em&gt; that if the coroutine containing it is cancelled, the Task running in &lt;code&gt;something()&lt;/code&gt; is not cancelled. From the point of view of &lt;code&gt;something()&lt;/code&gt;, the cancellation did not happen. Although its caller is still cancelled, so the &amp;ldquo;await&amp;rdquo; expression still raises a &lt;a href=&quot;asyncio-exceptions#asyncio.CancelledError&quot;&gt;&lt;code&gt;CancelledError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38307316c897245b450870d9674a1f273e88195" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exclude_attrs&lt;/em&gt;: a set of attribute names that should not be serialised</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d1e439d148aa0a2a8be2d171773929148770a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exclude_tags&lt;/em&gt;: a set of tag names that should not be serialised</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f593f8276556a46fa8d67db51e068bfebfdcb64e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;executor&lt;/em&gt; must be an instance of &lt;a href=&quot;concurrent.futures#concurrent.futures.ThreadPoolExecutor&quot;&gt;&lt;code&gt;concurrent.futures.ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1cd50a1a80f5472d9a39e3bfddc0e2d7df1a2b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;exposed&lt;/em&gt; is used to specify a sequence of method names which proxies for this typeid should be allowed to access using &lt;a href=&quot;#multiprocessing.managers.BaseProxy._callmethod&quot;&gt;&lt;code&gt;BaseProxy._callmethod()&lt;/code&gt;&lt;/a&gt;. (If &lt;em&gt;exposed&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then &lt;code&gt;proxytype._exposed_&lt;/code&gt; is used instead if it exists.) In the case where no exposed list is specified, all &amp;ldquo;public methods&amp;rdquo; of the shared object will be accessible. (Here a &amp;ldquo;public method&amp;rdquo; means any attribute which has a &lt;a href=&quot;https://docs.python.org/3.8/reference/datamodel.html#object.__call__&quot;&gt;&lt;code&gt;__call__()&lt;/code&gt;&lt;/a&gt; method and whose name does not begin with &lt;code&gt;'_'&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430c33cec05e54d894e06be98323444a2ca05d85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;extract_dir&lt;/em&gt; is the name of the target directory where the archive is unpacked. If not provided, the current working directory is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c48f3d293bc0c234f9cf0901512306340d84bf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fallback&lt;/em&gt; set to &lt;code&gt;True&lt;/code&gt; makes asyncio to manually read and send the file when the platform does not support the sendfile system call (e.g. Windows or SSL socket on Unix).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75fb94fbaae7415fa7bff818e306c50ac8aeedf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fallback&lt;/em&gt;, when set to &lt;code&gt;True&lt;/code&gt;, makes asyncio manually read and send the file when the platform does not support the sendfile syscall (e.g. Windows or SSL socket on Unix).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc9dd296edcae3a5a963541b85421d306467420" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt; can be set to either &lt;a href=&quot;socket#socket.AF_INET&quot;&gt;&lt;code&gt;socket.AF_INET&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;socket#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt; to force the socket to use IPv4 or IPv6. If not set, the &lt;em&gt;family&lt;/em&gt; will be determined from host name (defaults to &lt;code&gt;AF_UNSPEC&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3cd24ebbdc1eead0f4a392de7dfb45f5d421b32" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt; is the type of socket (or named pipe) to use. This can be one of the strings &lt;code&gt;'AF_INET'&lt;/code&gt; (for a TCP socket), &lt;code&gt;'AF_UNIX'&lt;/code&gt; (for a Unix domain socket) or &lt;code&gt;'AF_PIPE'&lt;/code&gt; (for a Windows named pipe). Of these only the first is guaranteed to be available. If &lt;em&gt;family&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then the family is inferred from the format of &lt;em&gt;address&lt;/em&gt;. If &lt;em&gt;address&lt;/em&gt; is also &lt;code&gt;None&lt;/code&gt; then a default is chosen. This default is the family which is assumed to be the fastest available. See &lt;a href=&quot;#multiprocessing-address-formats&quot;&gt;Address Formats&lt;/a&gt;. Note that if &lt;em&gt;family&lt;/em&gt; is &lt;code&gt;'AF_UNIX'&lt;/code&gt; and address is &lt;code&gt;None&lt;/code&gt; then the socket will be created in a private temporary directory created using &lt;a href=&quot;tempfile#tempfile.mkstemp&quot;&gt;&lt;code&gt;tempfile.mkstemp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18d4cd5abae5871e96dbdf26e9bea5c0f5059e4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt; should be either &lt;a href=&quot;#socket.AF_INET&quot;&gt;&lt;code&gt;AF_INET&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#socket.AF_INET6&quot;&gt;&lt;code&gt;AF_INET6&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;backlog&lt;/em&gt; is the queue size passed to &lt;a href=&quot;#socket.socket.listen&quot;&gt;&lt;code&gt;socket.listen()&lt;/code&gt;&lt;/a&gt;; when &lt;code&gt;0&lt;/code&gt; a default reasonable value is chosen. &lt;em&gt;reuse_port&lt;/em&gt; dictates whether to set the &lt;code&gt;SO_REUSEPORT&lt;/code&gt; socket option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172f74bf8e83e70a3e9f6f8e2bebb033cf53cc8b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt;, &lt;em&gt;proto&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt; are the optional address family, protocol and flags to be passed through to &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt; for &lt;em&gt;host&lt;/em&gt; resolution. If given, these should all be integers from the corresponding &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5195186b1c7825b647dad14b809e41a043338ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;family&lt;/em&gt;, &lt;em&gt;proto&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt; are the optional address family, protocol and flags to be passed through to getaddrinfo() for &lt;em&gt;host&lt;/em&gt; resolution. If given, these should all be integers from the corresponding &lt;a href=&quot;socket#module-socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt; module constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c64bb7bff9bf6b69684f3b0d99abe40a3c73c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fanout&lt;/em&gt;: fanout (0 to 255, 0 if unlimited, 1 in sequential mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927b17ea6ed9fe24ea9e8e608d3d0e46c7803976" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fd&lt;/em&gt; is the integer file descriptor of the pipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36380001fc7dc285809f376fbda054fa33556cbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fd&lt;/em&gt; is the integer file descriptor that was closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ebca906d90d841c07ebcc3e1eed359c5fb274b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;feat&lt;/em&gt; and &lt;em&gt;mask&lt;/em&gt; are unsigned 32bit integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54fcc1286b345aa64c1eb5c65d5bd57f9e7722e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fget&lt;/em&gt; is a function for getting an attribute value. &lt;em&gt;fset&lt;/em&gt; is a function for setting an attribute value. &lt;em&gt;fdel&lt;/em&gt; is a function for deleting an attribute value. And &lt;em&gt;doc&lt;/em&gt; creates a docstring for the attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e5e50b531731f8e9bdc5b82814d726dcc17462" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt; giving the pathname (absolute or relative to the current working directory) of the file to be opened or an integer file descriptor of the file to be wrapped. (If a file descriptor is given, it is closed when the returned I/O object is closed, unless &lt;em&gt;closefd&lt;/em&gt; is set to &lt;code&gt;False&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce333c98706e21d0e0601f57060559e541fb8a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file&lt;/em&gt; must be a regular file object open in binary mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fb76d2f9ed3ae3037b8f626ce2121db771a22f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file&lt;/em&gt; must be a regular file object opened in binary mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f592285f817085ce3a54652c6007454ab942ad3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file_name&lt;/em&gt; is the name of the file to load registry data from. This file must have been created with the &lt;a href=&quot;#winreg.SaveKey&quot;&gt;&lt;code&gt;SaveKey()&lt;/code&gt;&lt;/a&gt; function. Under the file allocation table (FAT) file system, the filename may not have an extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21caf723b15c2d16148bab2ac5eca20765e170bd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;file_name&lt;/em&gt; is the name of the file to save registry data to. This file cannot already exist. If this filename includes an extension, it cannot be used on file allocation table (FAT) file systems by the &lt;a href=&quot;#winreg.LoadKey&quot;&gt;&lt;code&gt;LoadKey()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1094cc2173d8a7173b1ad2f31af7c84836a9a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filemode&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;filemode&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8dcead532b80dc9fb40f0838681a62a1dfccb951" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filename&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;filename&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c9ded2375c347fef97c0303ce660b9af1eb35fd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filename&lt;/em&gt; is the filename to be substituted for &lt;code&gt;%s&lt;/code&gt; in the command line; the default value is &lt;code&gt;'/dev/null'&lt;/code&gt; which is almost certainly not what you want, so usually you&amp;rsquo;ll override it by specifying a filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe4632e41e6c1ec78c51cab38d25b22af3a92cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filename&lt;/em&gt; is the name of file in which to save cookies. If &lt;em&gt;filename&lt;/em&gt; is not specified, &lt;code&gt;self.filename&lt;/code&gt; is used (whose default is the value passed to the constructor, if any); if &lt;code&gt;self.filename&lt;/code&gt; is &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcaf70eda8f60862ee243eacb5438d46e839740d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filename&lt;/em&gt; should be the path to a file or directory on the filesystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1a1c4dc0a6c834a09b320b23fcda6f172bbf3c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fileobj&lt;/em&gt; is not closed, when &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e8506e902ad2ad40fcd48378aada5e660fd34e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fileobj&lt;/em&gt; is the file object to monitor. It may either be an integer file descriptor or an object with a &lt;code&gt;fileno()&lt;/code&gt; method. &lt;em&gt;events&lt;/em&gt; is a bitwise mask of events to monitor. &lt;em&gt;data&lt;/em&gt; is an opaque object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009f38484704d91a695753502822247c81069016" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fileobj&lt;/em&gt; must be a file object previously registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8050504faa48dbcbe356c8a41099095643949074" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filterfunc&lt;/em&gt;, if given, must be a function taking a single string argument. It will be passed each path (including each individual full file path) before it is added to the archive. If &lt;em&gt;filterfunc&lt;/em&gt; returns a false value, the path will not be added, and if it is a directory its contents will be ignored. For example, if our test files are all either in &lt;code&gt;test&lt;/code&gt; directories or start with the string &lt;code&gt;test_&lt;/code&gt;, we can use a &lt;em&gt;filterfunc&lt;/em&gt; to exclude them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c2af6e2636ddbec1d1d14e6fcb176c0a0dc9b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;filters&lt;/em&gt; - the corresponding value will be a dict in which each key is a filter id and each value is a dict describing how to configure the corresponding Filter instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18defc7206188ac573ae4614612512c837ac3492" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; &amp;ndash; The regular expression flags that will be applied when compiling the regular expression used for recognizing substitutions. The default value is &lt;code&gt;re.IGNORECASE&lt;/code&gt;. Note that &lt;code&gt;re.VERBOSE&lt;/code&gt; will always be added to the flags, so custom &lt;em&gt;idpattern&lt;/em&gt;s must follow conventions for verbose regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da3acf9bf0611e10487dcd1d58836648480597a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; is a bitmask for &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f7aff633f8a45b09ea29bd4a0c311124852254a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; is deprecated and completely ignored. However, when supplied, its value must be &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;select.EPOLL_CLOEXEC&lt;/code&gt;, otherwise &lt;code&gt;OSError&lt;/code&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8025d0081b9105b73b150ee2b2ade3fd315d63" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;flags&lt;/em&gt; specifies the nature of the mapping. &lt;code&gt;MAP_PRIVATE&lt;/code&gt; creates a private copy-on-write mapping, so changes to the contents of the mmap object will be private to this process, and &lt;code&gt;MAP_SHARED&lt;/code&gt; creates a mapping that&amp;rsquo;s shared with all other processes mapping the same areas of the file. The default value is &lt;code&gt;MAP_SHARED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659a6ea17b80c5dee0bc5fb0922edc0f05a58c82" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;foldspaces&lt;/em&gt; is a flag that specifies whether the &amp;lsquo;y&amp;rsquo; short sequence should be accepted as shorthand for 4 consecutive spaces (ASCII 0x20). This feature is not supported by the &amp;ldquo;standard&amp;rdquo; Ascii85 encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd6459dbc2b50631e7e056cd75a4b5c28138796" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;foldspaces&lt;/em&gt; is an optional flag that uses the special short sequence &amp;lsquo;y&amp;rsquo; instead of 4 consecutive spaces (ASCII 0x20) as supported by &amp;lsquo;btoa&amp;rsquo;. This feature is not supported by the &amp;ldquo;standard&amp;rdquo; Ascii85 encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c079df71e1a725bce4df3832eaf389af6ed973" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;force&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;force&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f2c4916a297253e425c6756ecc597aabaa9ca9b8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fork&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;fork&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3b322a32760c13efaabf701a03387efc54c5b4b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;forkserver&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;forkserver&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7bcb7ec9bf32d2969f141a03b6df92d8470242f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;format&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;format&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d5baab8f1c3cbde01d015562d6bf788f39248b5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;format&lt;/em&gt; controls the archive format for writing. It must be one of the constants &lt;a href=&quot;#tarfile.USTAR_FORMAT&quot;&gt;&lt;code&gt;USTAR_FORMAT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#tarfile.GNU_FORMAT&quot;&gt;&lt;code&gt;GNU_FORMAT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#tarfile.PAX_FORMAT&quot;&gt;&lt;code&gt;PAX_FORMAT&lt;/code&gt;&lt;/a&gt; that are defined at module level. When reading, format will be automatically detected, even if different formats are present in a single archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0ba449c17f5e9e76a52cb13eab1fc8d761a0c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;format&lt;/em&gt; is the archive format: one of &amp;ldquo;zip&amp;rdquo;, &amp;ldquo;tar&amp;rdquo;, &amp;ldquo;gztar&amp;rdquo;, &amp;ldquo;bztar&amp;rdquo;, or &amp;ldquo;xztar&amp;rdquo;. Or any other format registered with &lt;a href=&quot;#shutil.register_unpack_format&quot;&gt;&lt;code&gt;register_unpack_format()&lt;/code&gt;&lt;/a&gt;. If not provided, &lt;a href=&quot;#shutil.unpack_archive&quot;&gt;&lt;code&gt;unpack_archive()&lt;/code&gt;&lt;/a&gt; will use the archive file name extension and see if an unpacker was registered for that extension. In case none is found, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5729daf838d0df4cb6f66f5dd5e552441b642e3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;formatters&lt;/em&gt; - the corresponding value will be a dict in which each key is a formatter id and each value is a dict describing how to configure the corresponding &lt;a href=&quot;logging#logging.Formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049a6103bad1d94b8c9986e27c9f73acce01cb8f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fp&lt;/em&gt; is a file-like object pointing to the &lt;code&gt;config.h&lt;/code&gt;-like file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efd3eefb9368b9a8703608f6ec612832c75e2b6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fresh&lt;/em&gt; is an iterable of additional module names that are also removed from the &lt;code&gt;sys.modules&lt;/code&gt; cache before doing the import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1bb58d10c4ac28c4b910974612fdc5bf44161c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fromdesc&lt;/em&gt; and &lt;em&gt;todesc&lt;/em&gt; are interpreted as unescaped HTML and should be properly escaped while receiving input from untrusted sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4f46fb1ea108658b7110a26678ca94dd894f3a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fromdesc&lt;/em&gt; and &lt;em&gt;todesc&lt;/em&gt; are optional keyword arguments to specify from/to file column header strings (both default to an empty string).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba44330bcbc2dc1114ef21e0de587a40cd868e89" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;func&lt;/em&gt; is executed asynchronously and several calls to &lt;em&gt;func&lt;/em&gt; may be made concurrently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcda0a4e83ff885494fec1b3bd6b0ce1cd4b1595" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;func&lt;/em&gt; is the foreign function object itself, this allows reusing the same callable object to check or post process the results of several functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2921a5b310a1e6e1ab7e15ff4c54bb6c5f6f38af" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;func&lt;/em&gt; must be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-descriptor&quot;&gt;descriptor&lt;/a&gt; or a callable (objects which are both, like normal functions, are handled as descriptors).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024bb4acb83475ce9198a02837de2120c51f5017" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;function&lt;/em&gt; is the callable that will be used to unpack archives. The callable will receive the &lt;em&gt;base_name&lt;/em&gt; of the file to create, followed by the &lt;em&gt;base_dir&lt;/em&gt; (which defaults to &lt;a href=&quot;os#os.curdir&quot;&gt;&lt;code&gt;os.curdir&lt;/code&gt;&lt;/a&gt;) to start archiving from. Further arguments are passed as keyword arguments: &lt;em&gt;owner&lt;/em&gt;, &lt;em&gt;group&lt;/em&gt;, &lt;em&gt;dry_run&lt;/em&gt; and &lt;em&gt;logger&lt;/em&gt; (as passed in &lt;a href=&quot;#shutil.make_archive&quot;&gt;&lt;code&gt;make_archive()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990936aa4489c5f653a5a98ec8e4af0ffe9aaece" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;function&lt;/em&gt; is the callable that will be used to unpack archives. The callable will receive the path of the archive, followed by the directory the archive must be extracted to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b6d1e9091e4faf1c20414208edf1dea530e49a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;globs&lt;/em&gt;, &lt;em&gt;name&lt;/em&gt;, &lt;em&gt;filename&lt;/em&gt;, and &lt;em&gt;lineno&lt;/em&gt; are attributes for the new &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; object. See the documentation for &lt;a href=&quot;#doctest.DocTest&quot;&gt;&lt;code&gt;DocTest&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d10d68a92e0adde0b3a4eda6439be998e9cd481" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;group&lt;/em&gt; should be &lt;code&gt;None&lt;/code&gt;; reserved for future extension when a &lt;code&gt;ThreadGroup&lt;/code&gt; class is implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019f52d59b96c6517916e7da958d78720531b67a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;gztar&lt;/em&gt;: gzip&amp;rsquo;ed tar-file (if the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module is available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20097f41e30e844a4d97257ed244d77e1982c3db" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;handler&lt;/em&gt; should be an instance of &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;. The following methods are searched, and added to the possible chains (note that HTTP errors are a special case). Note that, in the following, &lt;em&gt;protocol&lt;/em&gt; should be replaced with the actual protocol to handle, for example &lt;code&gt;http_response()&lt;/code&gt; would be the HTTP protocol response handler. Also &lt;em&gt;type&lt;/em&gt; should be replaced with the actual HTTP code, for example &lt;code&gt;http_error_404()&lt;/code&gt; would handle HTTP 404 errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775a06a4279815d8c68952a5fa26e292e4ffb2ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;handlers&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;handlers&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0363a10c59e9a720d4ae2455f81f8b33fffcb15f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;handlers&lt;/em&gt; - the corresponding value will be a dict in which each key is a handler id and each value is a dict describing how to configure the corresponding Handler instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5376df0c122869a14ef9954243b6dd2d24ccda23" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;happy_eyeballs_delay&lt;/em&gt;, if given, enables Happy Eyeballs for this connection. It should be a floating-point number representing the amount of time in seconds to wait for a connection attempt to complete, before starting the next attempt in parallel. This is the &amp;ldquo;Connection Attempt Delay&amp;rdquo; as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc8305.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 8305&lt;/strong&gt;&lt;/a&gt;. A sensible default value recommended by the RFC is &lt;code&gt;0.25&lt;/code&gt; (250 milliseconds).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19002ecd80402af1eff18e40cbfefbae4b38c43a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;hatype&lt;/em&gt; - Optional integer specifying the ARP hardware address type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d1a18981114ad20cba03c9e1e513532cdd5c58" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;headers&lt;/em&gt; should be a dictionary, and will be treated as if &lt;a href=&quot;#urllib.request.Request.add_header&quot;&gt;&lt;code&gt;add_header()&lt;/code&gt;&lt;/a&gt; was called with each key and value as arguments. This is often used to &amp;ldquo;spoof&amp;rdquo; the &lt;code&gt;User-Agent&lt;/code&gt; header value, which is used by a browser to identify itself &amp;ndash; some HTTP servers only allow requests coming from common browsers as opposed to scripts. For example, Mozilla Firefox may identify itself as &lt;code&gt;&quot;Mozilla/5.0
(X11; U; Linux i686) Gecko/20071127 Firefox/2.0.0.11&quot;&lt;/code&gt;, while &lt;a href=&quot;urllib#module-urllib&quot;&gt;&lt;code&gt;urllib&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s default user agent string is &lt;code&gt;&quot;Python-urllib/2.6&quot;&lt;/code&gt; (on Python 2.6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87ca8377a1ba9bb844a40bc193fe5417a02560cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;hexversion&lt;/em&gt; is the implementation version in hexadecimal format, like &lt;a href=&quot;#sys.hexversion&quot;&gt;&lt;code&gt;sys.hexversion&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749fee2926f260c25058e37076c4b793429880a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;host&lt;/em&gt; is either an authority (e.g. &lt;code&gt;&quot;python.org&quot;&lt;/code&gt;) or a URL containing an authority component (e.g. &lt;code&gt;&quot;http://python.org/&quot;&lt;/code&gt;). In either case, the authority must not contain a userinfo component (so, &lt;code&gt;&quot;python.org&quot;&lt;/code&gt; and &lt;code&gt;&quot;python.org:80&quot;&lt;/code&gt; are fine, &lt;code&gt;&quot;joe:password@python.org&quot;&lt;/code&gt; is not).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7c85740e002f6c63bfa13b0df1e70b1e04fa7a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;i&lt;/em&gt;th item of &lt;em&gt;s&lt;/em&gt;, origin 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12adb3301b1a2ea74f32412cd0f3ea5334e15169" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;idpattern&lt;/em&gt; &amp;ndash; This is the regular expression describing the pattern for non-braced placeholders. The default value is the regular expression &lt;code&gt;(?a:[_a-z][_a-z0-9]*)&lt;/code&gt;. If this is given and &lt;em&gt;braceidpattern&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; this pattern will also apply to braced placeholders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1411d49f7fef974f9ae49c3130f7b8cd4e2f910f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ifname&lt;/em&gt; - String specifying the device name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6825d2a77e54718ef87fe8bcb66f7642cf9ab7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ignore_discard&lt;/em&gt;: save even cookies set to be discarded. &lt;em&gt;ignore_expires&lt;/em&gt;: save even cookies that have expired</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3c705874a6311b52a47fc891e2bad904e773d2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ignorechars&lt;/em&gt; should be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like object&lt;/a&gt; or ASCII string containing characters to ignore from the input. This should only contain whitespace characters, and by default contains all whitespace characters in ASCII.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9575b552fbe6ff97c18fb1557b3f236141972f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;implementation&lt;/em&gt;: The name of the underlying C function used to get the clock value. Refer to &lt;a href=&quot;#time-clock-id-constants&quot;&gt;Clock ID Constants&lt;/a&gt; for possible values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a231e9a2b50cc33783fd90ec5fdcfea78e47a15" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;in_dict&lt;/em&gt; can also be a string specifying the name of the dictionary, which will then be fetched by importing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c1450a41a7842a43b4c20bdaed54707db1e3ed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;in_dict&lt;/em&gt; can be a dictionary or a mapping like container. If it is a mapping then it must at least support getting, setting and deleting items plus iterating over keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e50a620019c6d1eb1ecd04050d93a070068ae01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;include&lt;/em&gt;: directory for non-platform-specific header files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e43eb4121b976ddbb2d42cabb6588f37024b659" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;incremental&lt;/em&gt; - whether the configuration is to be interpreted as incremental to the existing configuration. This value defaults to &lt;code&gt;False&lt;/code&gt;, which means that the specified configuration replaces the existing configuration with the same semantics as used by the existing &lt;a href=&quot;#logging.config.fileConfig&quot;&gt;&lt;code&gt;fileConfig()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b103b81fdfbdb5223f4482c7c0170431bc193bc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;index&lt;/em&gt; is an integer that identifies the index of the key to retrieve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b238a08563d77f477a1c8c8e336a3f0d32becace" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;index&lt;/em&gt; is an integer that identifies the index of the value to retrieve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312fca48ffe0a3d02824b7ca7f719ed965b37a0e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;info&lt;/em&gt; is a dict providing more information for the callback. The following keys are currently defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2468320ac7c78509ec5803020a6212cf10b99ae3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;init_or_size&lt;/em&gt; must be an integer which specifies the size of the array, or a bytes object which will be used to initialize the array items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73e8214aa211bf054cf4489c96f6d19e92a20c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;init_or_size&lt;/em&gt; must be an integer which specifies the size of the array, or a string which will be used to initialize the array items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbe4ce4a1318cb9eba56ce798113704d1f3cd34" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;initializer&lt;/em&gt; is an optional callable that is called at the start of each worker process; &lt;em&gt;initargs&lt;/em&gt; is a tuple of arguments passed to the initializer. Should &lt;em&gt;initializer&lt;/em&gt; raise an exception, all currently pending jobs will raise a &lt;a href=&quot;#concurrent.futures.process.BrokenProcessPool&quot;&gt;&lt;code&gt;BrokenProcessPool&lt;/code&gt;&lt;/a&gt;, as well any attempt to submit more jobs to the pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82de8883530e800a032741e57bc608b0520afc43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;initializer&lt;/em&gt; is an optional callable that is called at the start of each worker thread; &lt;em&gt;initargs&lt;/em&gt; is a tuple of arguments passed to the initializer. Should &lt;em&gt;initializer&lt;/em&gt; raise an exception, all currently pending jobs will raise a &lt;a href=&quot;#concurrent.futures.thread.BrokenThreadPool&quot;&gt;&lt;code&gt;BrokenThreadPool&lt;/code&gt;&lt;/a&gt;, as well as any attempt to submit more jobs to the pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634d994be54521c060187c2c7273fdeecc736fc3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;inline_comment_prefixes&lt;/em&gt;, default value: &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a807765cd4f1f863a9842655deab83e4e8611435" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;inner_size&lt;/em&gt;: inner digest size (0 to 64 for BLAKE2b, 0 to 32 for BLAKE2s, 0 in sequential mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8c181abfc4c08d0ba643db3684019e25defb23" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;integer&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;integer&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="492cce424bb68d29df8b4dcbf735e456a1c9c8b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;interleave&lt;/em&gt; controls address reordering when a host name resolves to multiple IP addresses. If &lt;code&gt;0&lt;/code&gt; or unspecified, no reordering is done, and addresses are tried in the order returned by &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt;. If a positive integer is specified, the addresses are interleaved by address family, and the given integer is interpreted as &amp;ldquo;First Address Family Count&amp;rdquo; as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc8305.html&quot; id=&quot;index-4&quot;&gt;&lt;strong&gt;RFC 8305&lt;/strong&gt;&lt;/a&gt;. The default is &lt;code&gt;0&lt;/code&gt; if &lt;em&gt;happy_eyeballs_delay&lt;/em&gt; is not specified, and &lt;code&gt;1&lt;/code&gt; if it is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6da0ed040c0fc2389d25d7736dd52b8984358c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;interpolation&lt;/em&gt;, default value: &lt;code&gt;configparser.BasicInterpolation&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85a495b156a22278cb58f4255011b8648b17192" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;invalid&lt;/em&gt; &amp;ndash; This group matches any other delimiter pattern (usually a single delimiter), and it should appear last in the regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf20d24accf748c3213a370737ef8a0bab2bfb54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;invalidation_mode&lt;/em&gt; should be a member of the &lt;a href=&quot;#py_compile.PycInvalidationMode&quot;&gt;&lt;code&gt;PycInvalidationMode&lt;/code&gt;&lt;/a&gt; enum and controls how the generated bytecode cache is invalidated at runtime. The default is &lt;a href=&quot;#py_compile.PycInvalidationMode.CHECKED_HASH&quot;&gt;&lt;code&gt;PycInvalidationMode.CHECKED_HASH&lt;/code&gt;&lt;/a&gt; if the &lt;code id=&quot;index-3&quot;&gt;SOURCE_DATE_EPOCH&lt;/code&gt; environment variable is set, otherwise the default is &lt;a href=&quot;#py_compile.PycInvalidationMode.TIMESTAMP&quot;&gt;&lt;code&gt;PycInvalidationMode.TIMESTAMP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd467fe669c98fdc811fe92969ee9809a09b6f9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;invalidation_mode&lt;/em&gt; should be a member of the &lt;a href=&quot;py_compile#py_compile.PycInvalidationMode&quot;&gt;&lt;code&gt;py_compile.PycInvalidationMode&lt;/code&gt;&lt;/a&gt; enum and controls how the generated pycs are invalidated at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2018866b8d71df63c730a0fc550889fc2599c7b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;items&lt;/em&gt; becomes the new selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bd78c89875be990b54b1ad021805737ce4fb05" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; is a handle returned by &lt;a href=&quot;#winreg.ConnectRegistry&quot;&gt;&lt;code&gt;ConnectRegistry()&lt;/code&gt;&lt;/a&gt; or one of the constants &lt;a href=&quot;#winreg.HKEY_USERS&quot;&gt;&lt;code&gt;HKEY_USERS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#winreg.HKEY_LOCAL_MACHINE&quot;&gt;&lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cbe2adbfb3765bd589691363d2b0d253811cb4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; is an already open key, or one of the predefined &lt;a href=&quot;#hkey-constants&quot;&gt;HKEY_* constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b59f1aa71d38093b3d181b4e796948c30d16ac8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; is the &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; instance corresponding to a ready file object. &lt;em&gt;events&lt;/em&gt; is a bitmask of events ready on this file object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1c3d0b5c1365d14e341733388af17c6e8b2bcd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; is the name of the field desired, which represents the type of activity to be performed; the default value is &amp;lsquo;view&amp;rsquo;, since in the most common case you simply want to view the body of the MIME-typed data. Other possible values might be &amp;lsquo;compose&amp;rsquo; and &amp;lsquo;edit&amp;rsquo;, if you wanted to create a new body of the given MIME type or alter the existing body data. See &lt;a href=&quot;https://tools.ietf.org/html/rfc1524.html&quot; id=&quot;index-1&quot;&gt;&lt;strong&gt;RFC 1524&lt;/strong&gt;&lt;/a&gt; for a complete list of these fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ba50389a99d111b46d794a8ea7e5a6cf55f141" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; is the predefined handle to connect to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf0cd057031f2c8a1b1555d9a571ecabb852c06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; specifies a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-key-function&quot;&gt;key function&lt;/a&gt; of one argument that is used to extract a comparison key from each input element. The default value is &lt;code&gt;None&lt;/code&gt; (compare the elements directly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4b51b93fb4bdcfa7e0e3674f54f74ca9ddf508" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; specifies a function of one argument that is used to extract a comparison key from each element in &lt;em&gt;iterable&lt;/em&gt; (for example, &lt;code&gt;key=str.lower&lt;/code&gt;). The default value is &lt;code&gt;None&lt;/code&gt; (compare the elements directly).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33a19355f1e0c031df570da7f43674df2705145" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt; specifies a function of one argument that is used to extract a comparison key from each list element (for example, &lt;code&gt;key=str.lower&lt;/code&gt;). The key corresponding to each item in the list is calculated once and then used for the entire sorting process. The default value of &lt;code&gt;None&lt;/code&gt; means that list items are sorted directly without calculating a separate key value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c6d4f45816d08dd41bc68a94d865c8624578e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;key&lt;/em&gt;: key for keyed hashing (up to 64 bytes for BLAKE2b, up to 32 bytes for BLAKE2s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8510e241f3b93d967e95751900f9c8178bf9b29" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; are a legacy alternative to &lt;em&gt;context&lt;/em&gt; &amp;ndash; they can point to PEM-formatted private key and certificate chain files (respectively) for the SSL connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcc5f3bf2370f218ba59be6306e21390fa78000" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; are a legacy alternative to &lt;em&gt;context&lt;/em&gt; - they can point to PEM-formatted private key and certificate chain files, respectively, for the SSL connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7920572aa4f055056a62073c83a190a130bb8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; are a legacy alternative to &lt;em&gt;context&lt;/em&gt;, and can point to a PEM formatted private key and certificate chain file for the SSL connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ae73da3b108bb1401b0793378aa79f2c3b02ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;keyfile&lt;/em&gt; and &lt;em&gt;certfile&lt;/em&gt; are a legacy alternative to &lt;em&gt;ssl_context&lt;/em&gt; - they can point to PEM-formatted private key and certificate chain files for the SSL connection. Note that the &lt;em&gt;keyfile&lt;/em&gt;/&lt;em&gt;certfile&lt;/em&gt; parameters are mutually exclusive with &lt;em&gt;ssl_context&lt;/em&gt;, a &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;keyfile&lt;/em&gt;/&lt;em&gt;certfile&lt;/em&gt; is provided along with &lt;em&gt;ssl_context&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209ad4e2747cc107c2f689d3277d2c594466fc79" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;kw&lt;/em&gt; is extra keyword args to pass to &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen()&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;subprocess#subprocess.Popen&quot;&gt;&lt;code&gt;subprocess.Popen&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365e42c54f5621cb260a47b46535f64501b186b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;kwargs&lt;/em&gt; is a dictionary containing additional information. It is empty if &lt;code&gt;decode_data=True&lt;/code&gt; was given as an init argument, otherwise it contains the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0d9d5cad0f20cceb8ad4af2faf107060c44378" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;kwargs&lt;/em&gt; is a dictionary of keyword arguments for the target invocation. Defaults to &lt;code&gt;{}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c934145b0f1e6945f6567939ee12c0e14bc766" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;last_node&lt;/em&gt;: boolean indicating whether the processed node is the last one (&lt;code&gt;False&lt;/code&gt; for sequential mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518e343a9d25b30238032b55f97324014f1a24fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;layoutspec&lt;/em&gt;, if specified, is expected to be a list or some other sequence type (excluding strings), where each item should be a tuple and the first item is the layout name and the second item should have the format described in &lt;a href=&quot;#layouts&quot;&gt;Layouts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cfff0d55a43917194d5d4ac22f4763fd9aa92e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;leaf_size&lt;/em&gt;: maximal byte length of leaf (0 to 2**32-1, 0 if unlimited or in sequential mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c763754df45f9e7b346ad1cfc169bef93da398" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;len&lt;/em&gt; is the number of bytes to lock, &lt;em&gt;start&lt;/em&gt; is the byte offset at which the lock starts, relative to &lt;em&gt;whence&lt;/em&gt;, and &lt;em&gt;whence&lt;/em&gt; is as with &lt;a href=&quot;io#io.IOBase.seek&quot;&gt;&lt;code&gt;io.IOBase.seek()&lt;/code&gt;&lt;/a&gt;, specifically:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb5b7f412faa65b59f954692bdd6cf81b6c47c3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;level&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;level&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3a322d203999c747e850600f0b62f6df2e497479" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;level&lt;/em&gt; is the compression level &amp;ndash; an integer from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt; or &lt;code&gt;-1&lt;/code&gt;. A value of &lt;code&gt;1&lt;/code&gt; (Z_BEST_SPEED) is fastest and produces the least compression, while a value of &lt;code&gt;9&lt;/code&gt; (Z_BEST_COMPRESSION) is slowest and produces the most. &lt;code&gt;0&lt;/code&gt; (Z_NO_COMPRESSION) is no compression. The default value is &lt;code&gt;-1&lt;/code&gt; (Z_DEFAULT_COMPRESSION). Z_DEFAULT_COMPRESSION represents a default compromise between speed and compression (currently equivalent to level 6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aace655cc88ee60a72e68e307ac13fd18d020dbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;level&lt;/em&gt; specifies whether to use absolute or relative imports. &lt;code&gt;0&lt;/code&gt; (the default) means only perform absolute imports. Positive values for &lt;em&gt;level&lt;/em&gt; indicate the number of parent directories to search relative to the directory of the module calling &lt;a href=&quot;#__import__&quot;&gt;&lt;code&gt;__import__()&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;https://www.python.org/dev/peps/pep-0328&quot; id=&quot;index-14&quot;&gt;&lt;strong&gt;PEP 328&lt;/strong&gt;&lt;/a&gt; for the details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4611bbbbb0d21ee721e5e3e80fdff6177b12d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;limit&lt;/em&gt; determines the buffer size limit used by the returned &lt;a href=&quot;#asyncio.StreamReader&quot;&gt;&lt;code&gt;StreamReader&lt;/code&gt;&lt;/a&gt; instance. By default the &lt;em&gt;limit&lt;/em&gt; is set to 64 KiB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8f0e64c22faf2a9a77561773b3515c2f893a85" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;linejunk&lt;/em&gt; and &lt;em&gt;charjunk&lt;/em&gt; are optional keyword arguments passed into &lt;a href=&quot;#difflib.ndiff&quot;&gt;&lt;code&gt;ndiff()&lt;/code&gt;&lt;/a&gt; (used by &lt;a href=&quot;#difflib.HtmlDiff&quot;&gt;&lt;code&gt;HtmlDiff&lt;/code&gt;&lt;/a&gt; to generate the side by side HTML differences). See &lt;a href=&quot;#difflib.ndiff&quot;&gt;&lt;code&gt;ndiff()&lt;/code&gt;&lt;/a&gt; documentation for argument default values and descriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da51652c4447ea7c9cef4663004e5b565d62d98" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;linejunk&lt;/em&gt;: A function that accepts a single string argument, and returns true if the string is junk, or false if not. The default is &lt;code&gt;None&lt;/code&gt;. There is also a module-level function &lt;a href=&quot;#difflib.IS_LINE_JUNK&quot;&gt;&lt;code&gt;IS_LINE_JUNK()&lt;/code&gt;&lt;/a&gt;, which filters out lines without visible characters, except for at most one pound character (&lt;code&gt;'#'&lt;/code&gt;) &amp;ndash; however the underlying &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; class does a dynamic analysis of which lines are so frequent as to constitute noise, and this usually works better than using this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="552dff676a70a03d726c2189187f0abbc2f42225" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;linejunk&lt;/em&gt;: A function that accepts a single string argument, and returns true if the string is junk. The default is &lt;code&gt;None&lt;/code&gt;, meaning that no line is considered junk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f956413fe5c9f1cc3dba4aeecbcf50173ce009e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;lineno&lt;/em&gt; is an integer that the line number where the warning occurred must match, or &lt;code&gt;0&lt;/code&gt; to match all line numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1066554218d32cc75d16a2640e2af6ad7205b44d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;linesep&lt;/em&gt; specifies the characters used to separate the lines of the folded header. It defaults to the most useful value for Python application code (&lt;code&gt;\n&lt;/code&gt;), but &lt;code&gt;\r\n&lt;/code&gt; can be specified in order to produce headers with RFC-compliant line separators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4097ba30f7ec02338fcafc545a0c86b06be509" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;loader&lt;/em&gt; is the instance of &lt;a href=&quot;#unittest.TestLoader&quot;&gt;&lt;code&gt;TestLoader&lt;/code&gt;&lt;/a&gt; doing the loading. &lt;em&gt;standard_tests&lt;/em&gt; are the tests that would be loaded by default from the module. It is common for test modules to only want to add or remove tests from the standard set of tests. The third argument is used when loading packages as part of test discovery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9a901546caf20af3b8326caff02f2e405bc3cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;local_addr&lt;/em&gt;, if given, is a &lt;code&gt;(local_host, local_port)&lt;/code&gt; tuple used to bind the socket to locally. The &lt;em&gt;local_host&lt;/em&gt; and &lt;em&gt;local_port&lt;/em&gt; are looked up using &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384d3bc9e0061827ad1ab920af651231eaa554c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;local_addr&lt;/em&gt;, if given, is a &lt;code&gt;(local_host, local_port)&lt;/code&gt; tuple used to bind the socket to locally. The &lt;em&gt;local_host&lt;/em&gt; and &lt;em&gt;local_port&lt;/em&gt; are looked up using &lt;code&gt;getaddrinfo()&lt;/code&gt;, similarly to &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f61d0ff6673513114aa4e046d549461943a73a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;logger&lt;/em&gt; must be an object compatible with &lt;a href=&quot;https://www.python.org/dev/peps/pep-0282&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;PEP 282&lt;/strong&gt;&lt;/a&gt;, usually an instance of &lt;a href=&quot;logging#logging.Logger&quot;&gt;&lt;code&gt;logging.Logger&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72bdfd9be3a7c42e9d25f4ead230115761fdc10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;loggers&lt;/em&gt; - the corresponding value will be a dict in which each key is a logger name and each value is a dict describing how to configure the corresponding Logger instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475dd28e9b18a622e5a06bb19714eb0266ff4249" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;longopts&lt;/em&gt;, if specified, must be a list of strings with the names of the long options which should be supported. The leading &lt;code&gt;'--'&lt;/code&gt; characters should not be included in the option name. Long options which require an argument should be followed by an equal sign (&lt;code&gt;'='&lt;/code&gt;). Optional arguments are not supported. To accept only long options, &lt;em&gt;shortopts&lt;/em&gt; should be an empty string. Long options on the command line can be recognized so long as they provide a prefix of the option name that matches exactly one of the accepted options. For example, if &lt;em&gt;longopts&lt;/em&gt; is &lt;code&gt;['foo', 'frob']&lt;/code&gt;, the option &lt;code&gt;--fo&lt;/code&gt; will match as &lt;code&gt;--foo&lt;/code&gt;, but &lt;code&gt;--f&lt;/code&gt; will not match uniquely, so &lt;a href=&quot;#getopt.GetoptError&quot;&gt;&lt;code&gt;GetoptError&lt;/code&gt;&lt;/a&gt; will be raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112fec253310b3974981748f871ace136d6d173d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ls&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ls&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="891c63a393c754750fb2d728794ec9e2feebb716" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mail_options&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;mail_options&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="be807a9b4d1face342aed2a169cb407da94e421a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;map&lt;/em&gt; is the socket map to use for connections (an initially empty dictionary is a suitable value). If not specified the &lt;a href=&quot;asyncore#module-asyncore&quot;&gt;&lt;code&gt;asyncore&lt;/code&gt;&lt;/a&gt; global socket map is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ee0eb7ed0c42963b811c23e850a7c4c5e39ffa" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mask&lt;/em&gt; is a set of signal numbers (e.g. {&lt;code&gt;signal.SIGINT&lt;/code&gt;, &lt;code&gt;signal.SIGTERM&lt;/code&gt;}). Use &lt;a href=&quot;#signal.valid_signals&quot;&gt;&lt;code&gt;valid_signals()&lt;/code&gt;&lt;/a&gt; for a full mask including all signals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ddcdd88656fb2b39c2b069ad74b21bbc250cbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxlinelen&lt;/em&gt;, if given, overrides the instance&amp;rsquo;s value for the maximum line length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc644b1a264ee6258a670dbb5ac0a43e1da9bcb5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maxtasksperchild&lt;/em&gt; is the number of tasks a worker process can complete before it will exit and be replaced with a fresh worker process, to enable unused resources to be freed. The default &lt;em&gt;maxtasksperchild&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, which means worker processes will live as long as the pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e325499d9eb44e8d99ffc250fe69b62ba362acd7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mechanism&lt;/em&gt; specifies which authentication mechanism is to be used - it should appear in the instance variable &lt;code&gt;capabilities&lt;/code&gt; in the form &lt;code&gt;AUTH=mechanism&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43681d23fc467a357917cf000b3870f6193f2140" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mechanism&lt;/em&gt; specifies which authentication mechanism is to be used as argument to the &lt;code&gt;AUTH&lt;/code&gt; command; the valid values are those listed in the &lt;code&gt;auth&lt;/code&gt; element of &lt;code&gt;esmtp_features&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574cb99b9edd3a5ed0279d66cc5e5a54f31738d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;message&lt;/em&gt; is a string containing a regular expression that the start of the warning message must match. The expression is compiled to always be case-insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d2f7911d9a4c3b69cff21cb086bdc6ff1cdf8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;metaclass&lt;/em&gt; is the appropriate metaclass, &lt;em&gt;namespace&lt;/em&gt; is the prepared class namespace and &lt;em&gt;kwds&lt;/em&gt; is an updated copy of the passed in &lt;em&gt;kwds&lt;/em&gt; argument with any &lt;code&gt;'metaclass'&lt;/code&gt; entry removed. If no &lt;em&gt;kwds&lt;/em&gt; argument is passed in, this will be an empty dict.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a2cfdabc4cb2e68c60f1a1366b8a9b50747541" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;method&lt;/em&gt; is the compression algorithm. Currently, the only supported value is &lt;code&gt;DEFLATED&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2ba2acc912f3de2a84d7ae06d7c77abe2fb78a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;method&lt;/em&gt; should be a string that indicates the HTTP request method that will be used (e.g. &lt;code&gt;'HEAD'&lt;/code&gt;). If provided, its value is stored in the &lt;a href=&quot;#urllib.request.Request.method&quot;&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; attribute and is used by &lt;a href=&quot;#urllib.request.Request.get_method&quot;&gt;&lt;code&gt;get_method()&lt;/code&gt;&lt;/a&gt;. The default is &lt;code&gt;'GET'&lt;/code&gt; if &lt;em&gt;data&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; or &lt;code&gt;'POST'&lt;/code&gt; otherwise. Subclasses may indicate a different default method by setting the &lt;a href=&quot;#urllib.request.Request.method&quot;&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; attribute in the class itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b051247e179dcc268a881c5347c0b24f6a10874" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;method_to_typeid&lt;/em&gt; is a mapping used to specify the return type of those exposed methods which should return a proxy. It maps method names to typeid strings. (If &lt;em&gt;method_to_typeid&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then &lt;code&gt;proxytype._method_to_typeid_&lt;/code&gt; is used instead if it exists.) If a method&amp;rsquo;s name is not a key of this mapping or if the mapping is &lt;code&gt;None&lt;/code&gt; then the object returned by the method will be copied by value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec3adaa786444d4b36fa7d18b44906869b10f52" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; has to be a string of the form &lt;code&gt;'filemode[:compression]'&lt;/code&gt;, it defaults to &lt;code&gt;'r'&lt;/code&gt;. Here is a full list of mode combinations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26538ac5f2e5eded83d3fc7a4b0836e7fcefea9f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; is a permission mask passed to &lt;a href=&quot;os#os.access&quot;&gt;&lt;code&gt;os.access()&lt;/code&gt;&lt;/a&gt;, by default determining if the file exists and executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c44ccda76fcd2a57b2771e0e4a0e3eed15ebc3d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; is an optional string that specifies the mode in which the file is opened. It defaults to &lt;code&gt;'r'&lt;/code&gt; which means open for reading in text mode. Other common values are &lt;code&gt;'w'&lt;/code&gt; for writing (truncating the file if it already exists), &lt;code&gt;'x'&lt;/code&gt; for exclusive creation and &lt;code&gt;'a'&lt;/code&gt; for appending (which on &lt;em&gt;some&lt;/em&gt; Unix systems, means that &lt;em&gt;all&lt;/em&gt; writes append to the end of the file regardless of the current seek position). In text mode, if &lt;em&gt;encoding&lt;/em&gt; is not specified the encoding used is platform dependent: &lt;code&gt;locale.getpreferredencoding(False)&lt;/code&gt; is called to get the current locale encoding. (For reading and writing raw bytes use binary mode and leave &lt;em&gt;encoding&lt;/em&gt; unspecified.) The available modes are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b855b23d7b199197afa633d15f8bcdcd71337466" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; is either &lt;code&gt;'r'&lt;/code&gt; to read from an existing archive, &lt;code&gt;'a'&lt;/code&gt; to append data to an existing file, &lt;code&gt;'w'&lt;/code&gt; to create a new file overwriting an existing one, or &lt;code&gt;'x'&lt;/code&gt; to create a new file only if it does not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67edab1181cf75d4023a8f8bfed8e01f07b76ec5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mode&lt;/em&gt; is one of &lt;code&gt;'r'&lt;/code&gt; for read-only (record) access, &lt;code&gt;'w'&lt;/code&gt; for write-only (playback) access and &lt;code&gt;'rw'&lt;/code&gt; for both. Since many sound cards only allow one process to have the recorder or player open at a time, it is a good idea to open the device only for the activity needed. Further, some sound cards are half-duplex: they can be opened for reading or writing, but not both at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194dfafc60e8d39e7a157e06a7e840530692cc79" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;module&lt;/em&gt; is a string containing a regular expression that the module name must match. The expression is compiled to be case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb1abd1732b3133f997493c8f26a423d710fda72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;module_globals&lt;/em&gt;, if supplied, should be the global namespace in use by the code for which the warning is issued. (This argument is used to support displaying source for modules found in zipfiles or other non-filesystem import sources).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1059b526208ac2e9bc8e8aa81932aa4c5749598f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;monotonic&lt;/em&gt;: &lt;code&gt;True&lt;/code&gt; if the clock cannot go backward, &lt;code&gt;False&lt;/code&gt; otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a7fb15cccc8b55ee5faae86f963ff2603447e1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;msg&lt;/em&gt; may be a string containing characters in the ASCII range, or a byte string. A string is encoded to bytes using the ascii codec, and lone &lt;code&gt;\r&lt;/code&gt; and &lt;code&gt;\n&lt;/code&gt; characters are converted to &lt;code&gt;\r\n&lt;/code&gt; characters. A byte string is not modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7226fc9350ff1c16b9b15baf1838ba37d774e042" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;mu&lt;/em&gt; is the mean angle, expressed in radians between 0 and 2*&lt;em&gt;pi&lt;/em&gt;, and &lt;em&gt;kappa&lt;/em&gt; is the concentration parameter, which must be greater than or equal to zero. If &lt;em&gt;kappa&lt;/em&gt; is equal to zero, this distribution reduces to a uniform random angle over the range 0 to 2*&lt;em&gt;pi&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29867368dadd4831caebbad83bed52e442b47586" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;n&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;n&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5187e1c80d06845b74ac7fb061959abdc7dd431" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;n&lt;/em&gt; is the CPU/Memory cost factor, &lt;em&gt;r&lt;/em&gt; the block size, &lt;em&gt;p&lt;/em&gt; parallelization factor and &lt;em&gt;maxmem&lt;/em&gt; limits memory (OpenSSL 1.1.0 defaults to 32 MiB). &lt;em&gt;dklen&lt;/em&gt; is the length of the derived key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d03ef25bc471c5c65d7a4a90e85f9e231c6d4c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; and &lt;em&gt;value&lt;/em&gt; are passed to &lt;code&gt;BaseHeader&lt;/code&gt; from the &lt;a href=&quot;email.policy#email.policy.EmailPolicy.header_factory&quot;&gt;&lt;code&gt;header_factory&lt;/code&gt;&lt;/a&gt; call. The string value of any header object is the &lt;em&gt;value&lt;/em&gt; fully decoded to unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddf24a56d355f474aa6b824844403ece18f0e4b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; has to be a value from the list returned by &lt;a href=&quot;#sysconfig.get_path_names&quot;&gt;&lt;code&gt;get_path_names()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68664f0448ca40ac234b6afb26f6091543ea1c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is a string representing the piece of transport-specific information to get.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce0f2dfe5d82c70cd585087f591bc79f9380d9d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is an arbitrary string and &lt;em&gt;shape&lt;/em&gt; is a tuple of pairs of coordinates: Install the corresponding polygon shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572eacadf79d3a5ee7b0143b32d45595580cdf76" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is an arbitrary string and shape is a (compound) &lt;a href=&quot;#turtle.Shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; object: Install the corresponding compound shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96b15e8109e73bef4712e356fa2ee22415cc117" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the algorithm name and operation mode as string, e.g. &lt;code&gt;sha256&lt;/code&gt;, &lt;code&gt;hmac(sha256)&lt;/code&gt;, &lt;code&gt;cbc(aes)&lt;/code&gt; or &lt;code&gt;drbg_nopr_ctr_aes256&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71f89a5c3d670af76788c7c2b4130825ee44d7d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the header field to add. Keyword arguments can be used to set MIME parameters for the header field. Each parameter must be a string or &lt;code&gt;None&lt;/code&gt;. Underscores in parameter names are converted to dashes, since dashes are illegal in Python identifiers, but many MIME parameter names include dashes. If the parameter value is a string, it is added to the header value parameters in the form &lt;code&gt;name=&quot;value&quot;&lt;/code&gt;. If it is &lt;code&gt;None&lt;/code&gt;, only the parameter name is added. (This is used for MIME parameters without a value.) Example usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f439b5f111ee93d8ba0f7daed442bc5b42f80e1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the implementation&amp;rsquo;s identifier, e.g. &lt;code&gt;'cpython'&lt;/code&gt;. The actual string is defined by the Python implementation, but it is guaranteed to be lower case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101e1531b196c65d6a1f52baff21ede69b2bf2f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the name of a gif-file and &lt;em&gt;shape&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;: Install the corresponding image shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6167e20d7dbb52ad059c054088a06902ab3febc9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the name of the CAB file in the MSI file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7953607bb4f8bd4b06e7b6668cba77287d315323" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the name of the header to be mapped. It will be converted to lower case in the registry. &lt;em&gt;cls&lt;/em&gt; is the specialized class to be used, along with &lt;em&gt;base_class&lt;/em&gt;, to create the class used to instantiate headers that match &lt;em&gt;name&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b5ccbec471b6256726beb1b7e82e376c40bde71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the pathname of the archive. &lt;em&gt;name&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. It can be omitted if &lt;em&gt;fileobj&lt;/em&gt; is given. In this case, the file object&amp;rsquo;s &lt;code&gt;name&lt;/code&gt; attribute is used if it exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8449bfb867db8eb3de6067b91872569f3b6f6192" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the thread name. By default, a unique name is constructed of the form &amp;ldquo;Thread-&lt;em&gt;N&lt;/em&gt;&amp;rdquo; where &lt;em&gt;N&lt;/em&gt; is a small decimal number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76505c2b54cfe3efabc69577be2d262010ef0aab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the unique name for the requested shared memory, as described in the definition for &lt;a href=&quot;#multiprocessing.shared_memory.SharedMemory&quot;&gt;&lt;code&gt;SharedMemory&lt;/code&gt;&lt;/a&gt;. When attaching to an existing &lt;code&gt;ShareableList&lt;/code&gt;, specify its shared memory block&amp;rsquo;s unique name while leaving &lt;code&gt;sequence&lt;/code&gt; set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc489b01b1de31b3e1f1c98b91da30b26780a322" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt; is the unique name for the requested shared memory, specified as a string. When creating a new shared memory block, if &lt;code&gt;None&lt;/code&gt; (the default) is supplied for the name, a novel name will be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d8ad37c7c0f3bf4516ff5d771a51fe774f15ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;name&lt;/em&gt;: If the mock has a name then it will be used in the repr of the mock. This can be useful for debugging. The name is propagated to child mocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a07c21d10bc84f1714168f2e320cb8829fdccb0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;named&lt;/em&gt; &amp;ndash; This group matches the unbraced placeholder name; it should not include the delimiter in capturing group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36ce558bcce6753271128634120447cc38fc4de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nbytes&lt;/em&gt; is the total number of bytes that were written to the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b23a1a168fc90e7afe2739f2d0027dad4f37ed2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;newPathname&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;newPathname&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ef5aafa7adfbf63029491642eeab1bb7da366b2a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;new_callable&lt;/em&gt; allows you to specify a different class, or callable object, that will be called to create the &lt;em&gt;new&lt;/em&gt; object. By default &lt;a href=&quot;#unittest.mock.AsyncMock&quot;&gt;&lt;code&gt;AsyncMock&lt;/code&gt;&lt;/a&gt; is used for async functions and &lt;a href=&quot;#unittest.mock.MagicMock&quot;&gt;&lt;code&gt;MagicMock&lt;/code&gt;&lt;/a&gt; for the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a3cbd37fb21fcccb2cee9eec9460c49d7ab0c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;newline&lt;/em&gt; controls how line endings are handled. It can be &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;'\n'&lt;/code&gt;, &lt;code&gt;'\r'&lt;/code&gt;, and &lt;code&gt;'\r\n'&lt;/code&gt;. It works as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297328730b7171b7685deec78b22042bdfa09922" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nnn&lt;/em&gt; should be a three-digit HTTP error code. This method is also not defined in &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt;, but will be called, if it exists, on an instance of a subclass, when an HTTP error with code &lt;em&gt;nnn&lt;/em&gt; occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bde707dc826b549c6ccfd6131dc8ae4a42f1d9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node_depth&lt;/em&gt;: node depth (0 to 255, 0 for leaves, or in sequential mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67ac102232fdfd3524e957cdbf2d0ea432b06c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;node_offset&lt;/em&gt;: node offset (0 to 2**64-1 for BLAKE2b, 0 to 2**48-1 for BLAKE2s, 0 for the first, leftmost, leaf, or in sequential mode).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4211ef1d68261fa6da3302cdbb8c6735fdc7c8b3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nt&lt;/em&gt;: scheme for NT platforms like Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3753d31148e7986f7376f5d812819b906bb500" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;nt_user&lt;/em&gt;: scheme for NT platforms, when the &lt;em&gt;user&lt;/em&gt; option is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1df293354ae69464f23d2530a760ff6d6dc5de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;obj&lt;/em&gt; argument as is, if &lt;em&gt;obj&lt;/em&gt; is a &lt;a href=&quot;#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;asyncio-task#asyncio.Task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt;, or a Future-like object (&lt;a href=&quot;#asyncio.isfuture&quot;&gt;&lt;code&gt;isfuture()&lt;/code&gt;&lt;/a&gt; is used for the test.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c150ee03c6c5c7dc85dc0bcd47d02ab948e87ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;obj&lt;/em&gt; is either a network or address object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154e892adfa2eec9951ce6d5c29b567c58df36a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;object&lt;/em&gt;: Object causing the exception, can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488a2d193cfb92faea0d2776a583d68712798d34" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;object_hook&lt;/em&gt; is an optional function that will be called with the result of any object literal decoded (a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;). The return value of &lt;em&gt;object_hook&lt;/em&gt; will be used instead of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This feature can be used to implement custom decoders (e.g. &lt;a href=&quot;http://www.jsonrpc.org&quot;&gt;JSON-RPC&lt;/a&gt; class hinting).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbaef1ffa1cc620d2cb659bd80d4ecf26a97577" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;object_hook&lt;/em&gt;, if specified, will be called with the result of every JSON object decoded and its return value will be used in place of the given &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This can be used to provide custom deserializations (e.g. to support JSON-RPC class hinting).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d445c29f8e5f44848f17637fd4fbbbb2877343cc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;object_pairs_hook&lt;/em&gt; is an optional function that will be called with the result of any object literal decoded with an ordered list of pairs. The return value of &lt;em&gt;object_pairs_hook&lt;/em&gt; will be used instead of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This feature can be used to implement custom decoders. If &lt;em&gt;object_hook&lt;/em&gt; is also defined, the &lt;em&gt;object_pairs_hook&lt;/em&gt; takes priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404870b4e7df0d1b5bd465deb399d57fd8ab8d86" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;object_pairs_hook&lt;/em&gt;, if specified will be called with the result of every JSON object decoded with an ordered list of pairs. The return value of &lt;em&gt;object_pairs_hook&lt;/em&gt; will be used instead of the &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt;. This feature can be used to implement custom decoders. If &lt;em&gt;object_hook&lt;/em&gt; is also defined, the &lt;em&gt;object_pairs_hook&lt;/em&gt; takes priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8915d81e392d3d9e25606a9860dfdfdd04b932" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;offset&lt;/em&gt; may be specified as a non-negative integer offset. mmap references will be relative to the offset from the beginning of the file. &lt;em&gt;offset&lt;/em&gt; defaults to 0. &lt;em&gt;offset&lt;/em&gt; must be a multiple of &lt;code&gt;ALLOCATIONGRANULARITY&lt;/code&gt; which is equal to &lt;code&gt;PAGESIZE&lt;/code&gt; on Unix systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db095f97ed958b630d0c3f9609b1a9d2c5cf672" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;offset&lt;/em&gt; may be specified as a non-negative integer offset. mmap references will be relative to the offset from the beginning of the file. &lt;em&gt;offset&lt;/em&gt; defaults to 0. &lt;em&gt;offset&lt;/em&gt; must be a multiple of the &lt;code&gt;ALLOCATIONGRANULARITY&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8905064eb314a4aa5fddeeac26eff5ac16ffa1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;offset&lt;/em&gt; tells from where to start reading the file. If specified, &lt;em&gt;count&lt;/em&gt; is the total number of bytes to transmit as opposed to sending the file until EOF is reached. File position is always updated, even when this method raises an error, and &lt;a href=&quot;io#io.IOBase.tell&quot;&gt;&lt;code&gt;file.tell()&lt;/code&gt;&lt;/a&gt; can be used to obtain the actual number of bytes sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d578bd21229d2749f3a34b1b3cafc2ab8656b0b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;onerror&lt;/em&gt; is a function which gets called with one argument (the name of the package which was being imported) if any exception occurs while trying to import a package. If no &lt;em&gt;onerror&lt;/em&gt; function is supplied, &lt;a href=&quot;exceptions#ImportError&quot;&gt;&lt;code&gt;ImportError&lt;/code&gt;&lt;/a&gt;s are caught and ignored, while all other exceptions are propagated, terminating the search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f279d5891e29108b6b3d4d27a14f07b500027a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;optimize&lt;/em&gt; controls the optimization level and is passed to the built-in &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; function. The default of &lt;code&gt;-1&lt;/code&gt; selects the optimization level of the current interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71eb9eb8b4fca52bc0de1483f3bd1483c03e02df" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;optimize&lt;/em&gt; specifies the optimization level for the compiler. It is passed to the built-in &lt;a href=&quot;functions#compile&quot;&gt;&lt;code&gt;compile()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7df815cf7aa6a7d1ed732b70d8bf43898ec5c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;options&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;options&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f94d1bbba4fe9d0886f14c8bab5de4af1a975834" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;origin_req_host&lt;/em&gt; should be the request-host of the origin transaction, as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;. It defaults to &lt;code&gt;http.cookiejar.request_host(self)&lt;/code&gt;. This is the host name or IP address of the original request that was initiated by the user. For example, if the request is for an image in an HTML document, this should be the request-host of the request for the page containing the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0c3f2bcc879526ed9761239df9fabd5a27653a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;owner&lt;/em&gt; and &lt;em&gt;group&lt;/em&gt; are used when creating a tar archive. By default, uses the current owner and group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf9d5f4c66070ebc77660818ba5ba422fc0e35c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4ac9b07469d6a751cb09a1ad03230ac2fa9dae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements. &lt;em&gt;resource&lt;/em&gt; is the name of the resource to open within &lt;em&gt;package&lt;/em&gt;; it may not contain path separators and it may not have sub-resources (i.e. it cannot be a directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef9be94d623a628b9a8c21ac83097ad3c39991d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements. &lt;em&gt;resource&lt;/em&gt; is the name of the resource to open within &lt;em&gt;package&lt;/em&gt;; it may not contain path separators and it may not have sub-resources (i.e. it cannot be a directory). &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; have the same meaning as with built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95ca2a94976f0f830fed2638d5444ac8091925b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements. &lt;em&gt;resource&lt;/em&gt; is the name of the resource to open within &lt;em&gt;package&lt;/em&gt;; it may not contain path separators and it may not have sub-resources (i.e. it cannot be a directory). &lt;em&gt;encoding&lt;/em&gt; and &lt;em&gt;errors&lt;/em&gt; have the same meaning as with built-in &lt;a href=&quot;functions#open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. This function returns the contents of the resource as &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8bebfc6abd359879a61fd11f85423f82f5a11d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements. &lt;em&gt;resource&lt;/em&gt; is the name of the resource to open within &lt;em&gt;package&lt;/em&gt;; it may not contain path separators and it may not have sub-resources (i.e. it cannot be a directory). This function returns a &lt;code&gt;typing.BinaryIO&lt;/code&gt; instance, a binary I/O stream open for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab70288d9e21754a43960754887ad6d1037396ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;package&lt;/em&gt; is either a name or a module object which conforms to the &lt;code&gt;Package&lt;/code&gt; requirements. &lt;em&gt;resource&lt;/em&gt; is the name of the resource to open within &lt;em&gt;package&lt;/em&gt;; it may not contain path separators and it may not have sub-resources (i.e. it cannot be a directory). This function returns the contents of the resource as &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae191e29161d9334e69f9b88a01ad3bfc0c50193" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pad&lt;/em&gt; controls whether the input is padded to a multiple of 4 before encoding. Note that the &lt;code&gt;btoa&lt;/code&gt; implementation always pads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14e3a0acd76109e60987dd709bed9a32f45a669" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;paramflags&lt;/em&gt; must be a tuple of the same length as &lt;code&gt;argtypes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7c7e063add44c11d2ed737271f7b11c5b60662" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;parent&lt;/em&gt; is the item ID of the parent item, or the empty string to create a new top-level item. &lt;em&gt;index&lt;/em&gt; is an integer, or the value &amp;ldquo;end&amp;rdquo;, specifying where in the list of parent&amp;rsquo;s children to insert the new item. If &lt;em&gt;index&lt;/em&gt; is less than or equal to zero, the new node is inserted at the beginning; if &lt;em&gt;index&lt;/em&gt; is greater than or equal to the current number of children, it is inserted at the end. If &lt;em&gt;iid&lt;/em&gt; is specified, it is used as the item identifier; &lt;em&gt;iid&lt;/em&gt; must not already exist in the tree. Otherwise, a new unique identifier is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f714a8484fb76bf9a523db891e84d03cbd7cb0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;parse_constant&lt;/em&gt;, if specified, will be called with one of the following strings: &lt;code&gt;'-Infinity'&lt;/code&gt;, &lt;code&gt;'Infinity'&lt;/code&gt;, &lt;code&gt;'NaN'&lt;/code&gt;. This can be used to raise an exception if invalid JSON numbers are encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dfb63933c843529789a2958d12ab7497e27ab5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;parse_float&lt;/em&gt;, if specified, will be called with the string of every JSON float to be decoded. By default, this is equivalent to &lt;code&gt;float(num_str)&lt;/code&gt;. This can be used to use another datatype or parser for JSON floats (e.g. &lt;a href=&quot;decimal#decimal.Decimal&quot;&gt;&lt;code&gt;decimal.Decimal&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b47fbded3829cfa454a09c01dc7c09dd0cab9f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;parse_int&lt;/em&gt;, if specified, will be called with the string of every JSON int to be decoded. By default, this is equivalent to &lt;code&gt;int(num_str)&lt;/code&gt;. This can be used to use another datatype or parser for JSON integers (e.g. &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9e9bf187ea12aeff80abd79cf677e7b0b71d3b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pass_fds&lt;/em&gt; is an optional sequence of file descriptors to keep open between the parent and child. Providing any &lt;em&gt;pass_fds&lt;/em&gt; forces &lt;em&gt;close_fds&lt;/em&gt; to be &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;. (POSIX only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec71fdfb552b1d240d1cb0a1d5f291d6449bbb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;password&lt;/em&gt; and &lt;em&gt;salt&lt;/em&gt; must be &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-bytes-like-object&quot;&gt;bytes-like objects&lt;/a&gt;. Applications and libraries should limit &lt;em&gt;password&lt;/em&gt; to a sensible length (e.g. 1024). &lt;em&gt;salt&lt;/em&gt; should be about 16 or more bytes from a proper source, e.g. &lt;a href=&quot;os#os.urandom&quot;&gt;&lt;code&gt;os.urandom()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7839ae0d0cdd0bf968c5cacfee5c07c7fa9514" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; is the name of a Unix domain socket and is required, unless a &lt;em&gt;sock&lt;/em&gt; parameter is specified. Abstract Unix sockets, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; paths are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f888052b8bfb5b57cc9d5132e385b30f02572c30" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; is the name of a Unix domain socket, and is required, unless a &lt;em&gt;sock&lt;/em&gt; argument is provided. Abstract Unix sockets, &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pathlib#pathlib.Path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; paths are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f16974b60754377bb5200c2bceeff6b7ea22ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; is the path to a directory that should contain subdirectories &amp;ldquo;common&amp;rdquo;, &amp;ldquo;posix&amp;rdquo;, &amp;ldquo;nt&amp;rdquo;, each containing scripts destined for the bin directory in the environment. The contents of &amp;ldquo;common&amp;rdquo; and the directory corresponding to &lt;a href=&quot;os#os.name&quot;&gt;&lt;code&gt;os.name&lt;/code&gt;&lt;/a&gt; are copied after some text replacement of placeholders:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db45b099ada7f15b17f38370efe252d4167ed236" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. If &lt;em&gt;path&lt;/em&gt; is of type &lt;code&gt;bytes&lt;/code&gt; (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface), the filenames returned will also be of type &lt;code&gt;bytes&lt;/code&gt;; in all other circumstances, they will be of type &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f64e304d6458662b2862556c0537e77f2052778" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; may be a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-path-like-object&quot;&gt;path-like object&lt;/a&gt;. If &lt;em&gt;path&lt;/em&gt; is of type &lt;code&gt;bytes&lt;/code&gt; (directly or indirectly through the &lt;a href=&quot;#os.PathLike&quot;&gt;&lt;code&gt;PathLike&lt;/code&gt;&lt;/a&gt; interface), the type of the &lt;a href=&quot;#os.DirEntry.name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#os.DirEntry.path&quot;&gt;&lt;code&gt;path&lt;/code&gt;&lt;/a&gt; attributes of each &lt;a href=&quot;#os.DirEntry&quot;&gt;&lt;code&gt;os.DirEntry&lt;/code&gt;&lt;/a&gt; will be &lt;code&gt;bytes&lt;/code&gt;; in all other circumstances, they will be of type &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c87ed186824af77bf13af119168259e5487eac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;path&lt;/em&gt; should be either &lt;code&gt;None&lt;/code&gt; or a list of paths to look for modules in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b35362032484b48698c2a64491533bbe4df084" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pathsegments&lt;/em&gt; is specified similarly to &lt;a href=&quot;#pathlib.PurePath&quot;&gt;&lt;code&gt;PurePath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd960023d041d53d1ef7f58af7785c02194d4d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;person&lt;/em&gt;: personalization string (up to 16 bytes for BLAKE2b, up to 8 bytes for BLAKE2s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e36acd548db6ae9682d7437653c581d70999986" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;phase&lt;/em&gt; can be one of two values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933b32f69b33849ddda5635375cf153bf2384a1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pipe&lt;/em&gt; is &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file-like object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3dac00613850d8eeaa51afcc4a5d0931aa6b390" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pipe&lt;/em&gt; is a &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file-like object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa471abbb8e6f06a0a79054de74445e5165cd0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pkttype&lt;/em&gt; - Optional integer specifying the packet type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629e153ab406c4ad1cc9d24f3455a1d0e5dcfe62" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;platform&lt;/em&gt; will be &lt;code&gt;2 (VER_PLATFORM_WIN32_NT)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852842d51dcfd315860b340c23b8f19baf731b0c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;platform_version&lt;/em&gt; returns the accurate major version, minor version and build number of the current operating system, rather than the version that is being emulated for the process. It is intended for use in logging rather than for feature detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcb7906258863ffa5ebc61d514ea7d29d4b392d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;platinclude&lt;/em&gt;: directory for platform-specific header files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cf2b1921a63836455c537c2d5bcd4452fa9bab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;platlib&lt;/em&gt;: directory for site-specific, platform-specific files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b19d176d8099fe4a3942edfc710c690b806fa6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;platstdlib&lt;/em&gt;: directory containing the standard Python library files that are platform-specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e805c81d09f5d0bf0d70ce3773ddf71c1a804ffc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;plist&lt;/em&gt; can be a list containing named parameters; the default value is simply an empty list. Each entry in the list must be a string containing the parameter name, an equals sign (&lt;code&gt;'='&lt;/code&gt;), and the parameter&amp;rsquo;s value. Mailcap entries can contain named parameters like &lt;code&gt;%{foo}&lt;/code&gt;, which will be replaced by the value of the parameter named &amp;lsquo;foo&amp;rsquo;. For example, if the command line &lt;code&gt;showpartial
%{id} %{number} %{total}&lt;/code&gt; was in a mailcap file, and &lt;em&gt;plist&lt;/em&gt; was set to &lt;code&gt;['id=1', 'number=2', 'total=3']&lt;/code&gt;, the resulting command line would be &lt;code&gt;'showpartial 1 2 3'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d603072f89b740cff72c80e6832239aaebd509f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;policy&lt;/em&gt; is an object implementing the &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed4e041fe8421c614f508978fbea6aaa3d08fff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;policy&lt;/em&gt; is an object implementing the &lt;a href=&quot;#http.cookiejar.CookiePolicy&quot;&gt;&lt;code&gt;CookiePolicy&lt;/code&gt;&lt;/a&gt; interface. For the other arguments, see the documentation for the corresponding attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be723247201071d2f8a479a4aab8e52c21a6a9e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pos&lt;/em&gt; is either the string &amp;ldquo;end&amp;rdquo;, an integer index, or the name of a managed child. If &lt;em&gt;child&lt;/em&gt; is already managed by the notebook, moves it to the specified position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7739f72eaa69877600187d114aff6a954136c3cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;posix_home&lt;/em&gt;: scheme for Posix platforms used when a &lt;em&gt;home&lt;/em&gt; option is used upon installation. This scheme is used when a component is installed through Distutils with a specific home prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68ee43fe5d51e02069e86da1cccede31b5cdef9f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;posix_prefix&lt;/em&gt;: scheme for Posix platforms like Linux or Mac OS X. This is the default scheme used when Python or a component is installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd0158924ac67f5ba64e880bb9231f42a224118" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;posix_user&lt;/em&gt;: scheme for Posix platforms used when a component is installed through Distutils and the &lt;em&gt;user&lt;/em&gt; option is used. This scheme defines paths located under the user home directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649eda5e12f3e013955f4aa916f8b3c2d024ffbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prec&lt;/em&gt; is an integer in the range [&lt;code&gt;1&lt;/code&gt;, &lt;a href=&quot;#decimal.MAX_PREC&quot;&gt;&lt;code&gt;MAX_PREC&lt;/code&gt;&lt;/a&gt;] that sets the precision for arithmetic operations in the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca39fbf97049d374d05c8838984bed387cb035b7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;preferencelist&lt;/em&gt; must be a sequence of strings from the set &lt;code&gt;related&lt;/code&gt;, &lt;code&gt;html&lt;/code&gt;, and &lt;code&gt;plain&lt;/code&gt;, and indicates the order of preference for the content type of the part returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf7f5941b299baaa2ce22721922034a5658977a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prefix&lt;/em&gt; is a string to output on the front of every module name on output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11997f714b5d682724f80f7caaae5a66c6477e6b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;processes&lt;/em&gt; is the number of worker processes to use. If &lt;em&gt;processes&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt; then the number returned by &lt;a href=&quot;os#os.cpu_count&quot;&gt;&lt;code&gt;os.cpu_count()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50b2f063eed83d74924c5ca75110601ef9c0f10" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;product_type&lt;/em&gt; may be one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2369277826ec68fb6152c8f0d178e18339f1b2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;prot&lt;/em&gt;, if specified, gives the desired memory protection; the two most useful values are &lt;code&gt;PROT_READ&lt;/code&gt; and &lt;code&gt;PROT_WRITE&lt;/code&gt;, to specify that the pages may be read or written. &lt;em&gt;prot&lt;/em&gt; defaults to &lt;code&gt;PROT_READ | PROT_WRITE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbfcfe0f637a8e421ba2580330efa0bc7351a471" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;proto&lt;/em&gt; - An in network-byte-order integer specifying the Ethernet protocol number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f549d968a00b80f94daa81053363f143a935e0f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol_factory&lt;/em&gt; is called without arguments and is expected to return a &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;protocol&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12643fd099c33d928b3a1970fa1bc566abb3aa31" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol_factory&lt;/em&gt; must be a callable returning a &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;protocol&lt;/a&gt; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063a846f293efa02ee5f55fa9273d976bdf5ffa3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;protocol_factory&lt;/em&gt; must be a callable returning an &lt;a href=&quot;asyncio-protocol#asyncio-protocol&quot;&gt;asyncio protocol&lt;/a&gt; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d6b1b9a598a7933a08096a31b5b1a4e6ccb86e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;proxytype&lt;/em&gt; is a subclass of &lt;a href=&quot;#multiprocessing.managers.BaseProxy&quot;&gt;&lt;code&gt;BaseProxy&lt;/code&gt;&lt;/a&gt; which is used to create proxies for shared objects with this &lt;em&gt;typeid&lt;/em&gt;. If &lt;code&gt;None&lt;/code&gt; then a proxy class is created automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6a06eb7ab45f68d5d2f000130d91f4df599129" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;purelib&lt;/em&gt;: directory for site-specific, non-platform-specific files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3549e79c6b50b1a2b901e928f9d7436c27a3e71b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;qname_aware_attrs&lt;/em&gt;: a set of qname aware attribute names in which prefixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf8b96b060ee924106fb6c0b2a5ffd2ab4df815" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;qname_aware_tags&lt;/em&gt;: a set of qname aware tag names in which prefixes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bccdcf7d59ce5ff8135ddbb6bcf62b0fa54898" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rcpt_options&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;rcpt_options&lt;/em&gt;:</target>
        </trans-unit>
        <trans-unit id="1b16007a5ed87b1b1db3d9fc110ea11750b12d04" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;read_data&lt;/em&gt; is a string for the &lt;code&gt;read()&lt;/code&gt;, &lt;a href=&quot;io#io.IOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;io#io.IOBase.readlines&quot;&gt;&lt;code&gt;readlines()&lt;/code&gt;&lt;/a&gt; methods of the file handle to return. Calls to those methods will take data from &lt;em&gt;read_data&lt;/em&gt; until it is depleted. The mock of these methods is pretty simplistic: every time the &lt;em&gt;mock&lt;/em&gt; is called, the &lt;em&gt;read_data&lt;/em&gt; is rewound to the start. If you need more control over the data that you are feeding to the tested code you will need to customize this mock for yourself. When that is insufficient, one of the in-memory filesystem packages on &lt;a href=&quot;https://pypi.org&quot;&gt;PyPI&lt;/a&gt; can offer a realistic filesystem for testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1172b5a2dde51b1f9ffaad23f01287ecb37c5795" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reader&lt;/em&gt; and &lt;em&gt;writer&lt;/em&gt; are &lt;a href=&quot;#io.RawIOBase&quot;&gt;&lt;code&gt;RawIOBase&lt;/code&gt;&lt;/a&gt; objects that are readable and writeable respectively. If the &lt;em&gt;buffer_size&lt;/em&gt; is omitted it defaults to &lt;a href=&quot;#io.DEFAULT_BUFFER_SIZE&quot;&gt;&lt;code&gt;DEFAULT_BUFFER_SIZE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab325f043fa3b1715da4cb130e6cf07a3d464c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;realm&lt;/em&gt;, &lt;em&gt;uri&lt;/em&gt;, &lt;em&gt;user&lt;/em&gt;, &lt;em&gt;passwd&lt;/em&gt; are as for &lt;a href=&quot;#urllib.request.HTTPPasswordMgr.add_password&quot;&gt;&lt;code&gt;HTTPPasswordMgr.add_password()&lt;/code&gt;&lt;/a&gt;. &lt;em&gt;is_authenticated&lt;/em&gt; sets the initial value of the &lt;code&gt;is_authenticated&lt;/code&gt; flag for the given URI or list of URIs. If &lt;em&gt;is_authenticated&lt;/em&gt; is specified as &lt;code&gt;True&lt;/code&gt;, &lt;em&gt;realm&lt;/em&gt; is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1edf36610a58ec0e457b8b45f199a9e6944f9e43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;records&lt;/em&gt; should be a list of tuples, each one containing all fields of a record according to the schema of the table. For optional fields, &lt;code&gt;None&lt;/code&gt; can be passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c77faedebc643f4afaddb104f6cd7da69ef54a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rel_tol&lt;/em&gt; is the relative tolerance &amp;ndash; it is the maximum allowed difference between &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt;, relative to the larger absolute value of &lt;em&gt;a&lt;/em&gt; or &lt;em&gt;b&lt;/em&gt;. For example, to set a tolerance of 5%, pass &lt;code&gt;rel_tol=0.05&lt;/code&gt;. The default tolerance is &lt;code&gt;1e-09&lt;/code&gt;, which assures that the two values are the same within about 9 decimal digits. &lt;em&gt;rel_tol&lt;/em&gt; must be greater than zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bafae5c3c7d7da967a6e373108b85688be34f2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;remote_addr&lt;/em&gt;, if given, is a &lt;code&gt;(remote_host, remote_port)&lt;/code&gt; tuple used to connect the socket to a remote address. The &lt;em&gt;remote_host&lt;/em&gt; and &lt;em&gt;remote_port&lt;/em&gt; are looked up using &lt;a href=&quot;#asyncio.loop.getaddrinfo&quot;&gt;&lt;code&gt;getaddrinfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa552276c3a3e915ad2ae5953b93849442d3346" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;req&lt;/em&gt; will be a &lt;a href=&quot;#urllib.request.Request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object, &lt;em&gt;fp&lt;/em&gt; will be a file-like object with the HTTP error body, &lt;em&gt;code&lt;/em&gt; will be the three-digit code of the error, &lt;em&gt;msg&lt;/em&gt; will be the user-visible explanation of the code and &lt;em&gt;hdrs&lt;/em&gt; will be a mapping object with the headers of the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d1b6edda34cb99481fa76c0afa7a91d15521d7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reserved&lt;/em&gt; can be anything &amp;ndash; zero is always passed to the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca4651a919baa6ea0ffcf88762b68e97fc409e88" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reserved&lt;/em&gt; is a reserved integer, and must be zero. The default is zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7ebffed13455a477ec520a4ad9fbbe55612162" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;resolution&lt;/em&gt;: The resolution of the clock in seconds (&lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ee83c9ed4286f4a08cdcbbefe30f4faec9c2e6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;result&lt;/em&gt; is what the foreign function returns, as specified by the &lt;code&gt;restype&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5d2dfd0f6307bae47d5339e9c592b712fea99f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;return_value&lt;/em&gt;, and &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; are keyword only argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300931c48e14677821b6f452e1a130931c07494d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;return_value&lt;/em&gt;: The value returned when the mock is called. By default this is a new Mock (created on first access). See the &lt;a href=&quot;#unittest.mock.Mock.return_value&quot;&gt;&lt;code&gt;return_value&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4146bd2f7a64431bd671f3f95a204693a879ea43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;return_when&lt;/em&gt; indicates when this function should return. It must be one of the following constants:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce791c6913cffdb954e1fbe529854ceee03736a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reuse_address&lt;/em&gt; tells the kernel to reuse a local socket in &lt;code&gt;TIME_WAIT&lt;/code&gt; state, without waiting for its natural timeout to expire. If not specified will automatically be set to &lt;code&gt;True&lt;/code&gt; on Unix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c22cfe8f1b6c65440360d318068e54af1012b4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reuse_port&lt;/em&gt; tells the kernel to allow this endpoint to be bound to the same port as other existing endpoints are bound to, so long as they all set this flag when being created. This option is not supported on Windows and some Unixes. If the &lt;code&gt;SO_REUSEPORT&lt;/code&gt; constant is not defined then this capability is unsupported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31509fbaa2c1ff143a214e1bd2bc51d94108712" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reuse_port&lt;/em&gt; tells the kernel to allow this endpoint to be bound to the same port as other existing endpoints are bound to, so long as they all set this flag when being created. This option is not supported on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec0d8dab92c0284115057e13fa8a77d962dcbc9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reverse&lt;/em&gt; is a boolean value. If set to &lt;code&gt;True&lt;/code&gt;, then the input elements are merged as if each comparison were reversed. To achieve behavior similar to &lt;code&gt;sorted(itertools.chain(*iterables), reverse=True)&lt;/code&gt;, all iterables must be sorted from largest to smallest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341e5e2d1d4fec7fb78516e742a5b38d9c100170" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;reverse&lt;/em&gt; is a boolean value. If set to &lt;code&gt;True&lt;/code&gt;, then the list elements are sorted as if each comparison were reversed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443fac44ffffc97f0ffcebd0dbd0141d864ffc0a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rewrite_prefixes&lt;/em&gt;: set to true to replace namespace prefixes by &amp;ldquo;n{number}&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084e4c36b308be95ea24d1499bab59f8d7c7c4ef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rlist&lt;/em&gt;: wait until ready for reading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd5eb0e5ea0bc70a42905b779cb2cd4fea41372" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;root&lt;/em&gt; - this will be the configuration for the root logger. Processing of the configuration will be as for any logger, except that the &lt;code&gt;propagate&lt;/code&gt; setting will not be applicable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ed99ee0dd769612f62730cec4f95fae7be2fac0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;root&lt;/em&gt; specifies an alternative root directory to install relative to. If &lt;em&gt;root&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, then installation uses the default install location for the current environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb2569333704de196e14ef7a4832f809c5180a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;root_dir&lt;/em&gt; and &lt;em&gt;base_dir&lt;/em&gt; both default to the current directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763b7c874d3008c9f56a2400bf08d918ae5a87be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;root_dir&lt;/em&gt; is a directory that will be the root directory of the archive; for example, we typically chdir into &lt;em&gt;root_dir&lt;/em&gt; before creating the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5989fe7e304cf3083c857985fff3e4b5dfa968e0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rounds&lt;/em&gt; specifies the number of rounds for &lt;code&gt;METHOD_SHA256&lt;/code&gt;, &lt;code&gt;METHOD_SHA512&lt;/code&gt; and &lt;code&gt;METHOD_BLOWFISH&lt;/code&gt;. For &lt;code&gt;METHOD_SHA256&lt;/code&gt; and &lt;code&gt;METHOD_SHA512&lt;/code&gt; it must be an integer between &lt;code&gt;1000&lt;/code&gt; and &lt;code&gt;999_999_999&lt;/code&gt;, the default is &lt;code&gt;5000&lt;/code&gt;. For &lt;code&gt;METHOD_BLOWFISH&lt;/code&gt; it must be a power of two between &lt;code&gt;16&lt;/code&gt; (2&lt;sup&gt;4&lt;/sup&gt;) and &lt;code&gt;2_147_483_648&lt;/code&gt; (2&lt;sup&gt;31&lt;/sup&gt;), the default is &lt;code&gt;4096&lt;/code&gt; (2&lt;sup&gt;12&lt;/sup&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294eac9c89e6ec816bf7fec87f4bb7a5713cf9c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rs&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;rs&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b55e611e55cf187d175d6d36b29ffb72f419f207" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;s&lt;/em&gt; may be an instance of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;. If it is an instance of &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;, then &lt;em&gt;charset&lt;/em&gt; is the encoding of that byte string, and a &lt;a href=&quot;exceptions#UnicodeError&quot;&gt;&lt;code&gt;UnicodeError&lt;/code&gt;&lt;/a&gt; will be raised if the string cannot be decoded with that character set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ccb7b677fcc52a6d9918f40beba91fdba3c273" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;salt&lt;/em&gt; (either a random 2 or 16 character string, possibly prefixed with &lt;code&gt;$digit$&lt;/code&gt; to indicate the method) which will be used to perturb the encryption algorithm. The characters in &lt;em&gt;salt&lt;/em&gt; must be in the set &lt;code&gt;[./a-zA-Z0-9]&lt;/code&gt;, with the exception of Modular Crypt Format which prefixes a &lt;code&gt;$digit$&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040bbb045fab6621a94c428639938b7dbf4f4b31" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;salt&lt;/em&gt;: salt for randomized hashing (up to 16 bytes for BLAKE2b, up to 8 bytes for BLAKE2s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbff3a694a8455b6639dd8cc621e4d064f7bdee6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;schema&lt;/em&gt; must be a module object containing &lt;code&gt;tables&lt;/code&gt; and &lt;code&gt;_Validation_records&lt;/code&gt; attributes; typically, &lt;a href=&quot;#msilib.schema&quot;&gt;&lt;code&gt;msilib.schema&lt;/code&gt;&lt;/a&gt; should be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d7f1df1b15fd81dc83b87cde130d75bbfaf6c9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;scheme&lt;/em&gt; parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102ca116d9c0813a3537df33f561afaba953c3f3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;scope&lt;/em&gt; is one of &lt;code&gt;TIPC_ZONE_SCOPE&lt;/code&gt;, &lt;code&gt;TIPC_CLUSTER_SCOPE&lt;/code&gt;, and &lt;code&gt;TIPC_NODE_SCOPE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf62fc55e9b420a9222d1aed2dfb39b0b0ff582" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;scripts&lt;/em&gt;: directory for script files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c797c4d361b3b5c49e79f49a54e504d5bfc5e755" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sequence&lt;/em&gt; is used in populating a new &lt;code&gt;ShareableList&lt;/code&gt; full of values. Set to &lt;code&gt;None&lt;/code&gt; to instead attach to an already existing &lt;code&gt;ShareableList&lt;/code&gt; by its unique shared memory name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff9753186de105aa6ad86dd61281798c6fcc643" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;server_hostname&lt;/em&gt; sets or overrides the hostname that the target server&amp;rsquo;s certificate will be matched against. Should only be passed if &lt;em&gt;ssl&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;. By default the value of the &lt;em&gt;host&lt;/em&gt; argument is used. If &lt;em&gt;host&lt;/em&gt; is empty, there is no default and you must pass a value for &lt;em&gt;server_hostname&lt;/em&gt;. If &lt;em&gt;server_hostname&lt;/em&gt; is an empty string, hostname matching is disabled (which is a serious security risk, allowing for potential man-in-the-middle attacks).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64f44a8e3b18696d6652f97e50d26ea70658f7c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;server_hostname&lt;/em&gt;: sets or overrides the host name that the target server&amp;rsquo;s certificate will be matched against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef0b9ce3b5fc35d7ab01bfff8ee8da6a0ff74ff" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;server_side&lt;/em&gt; pass &lt;code&gt;True&lt;/code&gt; when a server-side connection is being upgraded (like the one created by &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;create_server()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66bb98e6a7a97c8ec178bfde96f88e4be64b2c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;session&lt;/em&gt;, see &lt;a href=&quot;#ssl.SSLSocket.session&quot;&gt;&lt;code&gt;session&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25078c51f06f74104ce4500d1c8cb0aef55d474" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;shape&lt;/em&gt; can be any of the built-in shapes, e.g: arrow, turtle, etc. For more info try &lt;code&gt;help(shape)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cd2b833fce781d3986f9e94174fd634924b90d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;side_effect&lt;/em&gt;: A function to be called whenever the Mock is called. See the &lt;a href=&quot;#unittest.mock.Mock.side_effect&quot;&gt;&lt;code&gt;side_effect&lt;/code&gt;&lt;/a&gt; attribute. Useful for raising exceptions or dynamically changing return values. The function is called with the same arguments as the mock, and unless it returns &lt;a href=&quot;#unittest.mock.DEFAULT&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt;&lt;/a&gt;, the return value of this function is used as the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fba5376d262131f111441c275f9105ff2255d71" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;size&lt;/em&gt; is a requested size for the test (in arbitrary, test-interpreted units.) &lt;em&gt;memuse&lt;/em&gt; is the number of bytes per unit for the test, or a good estimate of it. For example, a test that needs two byte buffers, of 4 GiB each, could be decorated with &lt;code&gt;@bigmemtest(size=_4G, memuse=2)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30eda4c978f214c03bba290e9a1b08d6e95c48b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;size&lt;/em&gt; specifies the requested number of bytes when creating a new shared memory block. Because some platforms choose to allocate chunks of memory based upon that platform&amp;rsquo;s memory page size, the exact size of the shared memory block may be larger or equal to the size requested. When attaching to an existing shared memory block, the &lt;code&gt;size&lt;/code&gt; parameter is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c8e5ab2ef7894666d9c6efb5a4df93f6b14983" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;size&lt;/em&gt;, if given, is passed as size argument to the stream&amp;rsquo;s &lt;a href=&quot;#codecs.StreamReader.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2a2dadc63144013827107ddeaf21b214a45c62" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sizehint&lt;/em&gt; informs epoll about the expected number of events to be registered. It must be positive, or &lt;code&gt;-1&lt;/code&gt; to use the default. It is only used on older systems where &lt;code&gt;epoll_create1()&lt;/code&gt; is not available; otherwise it has no effect (though its value is still checked).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a0a7333d294d8df28e64c48bb016deb5a287d4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sizehint&lt;/em&gt; is the recommended minimum size for the returned buffer. It is acceptable to return smaller or larger buffers than what &lt;em&gt;sizehint&lt;/em&gt; suggests. When set to -1, the buffer size can be arbitrary. It is an error to return a buffer with a zero size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbe6801b47e038554a987349f940563e0f12cb1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sizehint&lt;/em&gt;, if given, is passed as the &lt;em&gt;size&lt;/em&gt; argument to the stream&amp;rsquo;s &lt;a href=&quot;#codecs.StreamReader.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63007b9d99b4a8047c461eae2ec6d56efb65251" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt; can optionally be specified in order to use a preexisting socket object. If specified, &lt;em&gt;host&lt;/em&gt; and &lt;em&gt;port&lt;/em&gt; must not be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd8ab465c0f09471c99146aee5fdd1e6d217796" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt; can optionally be specified in order to use a preexisting, already connected, &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; object to be used by the transport. If specified, &lt;em&gt;local_addr&lt;/em&gt; and &lt;em&gt;remote_addr&lt;/em&gt; should be omitted (must be &lt;a href=&quot;constants#None&quot;&gt;&lt;code&gt;None&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3703a5b1837ae3a114be82edbcf05c114f5b16dc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt; is a preexisting socket object returned from &lt;a href=&quot;socket#socket.socket.accept&quot;&gt;&lt;code&gt;socket.accept&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1697981f9591b0041aca3c221f83244667e36e47" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt; must be a non-blocking &lt;a href=&quot;socket#socket.SOCK_STREAM&quot;&gt;&lt;code&gt;socket.SOCK_STREAM&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d1c19f2f9ffd44e30a1db467caa1d9a1e6d7e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt; must be a non-blocking socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25521f8b2e0ca587ac7df8c1c01862fabff82e9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sock&lt;/em&gt;, if given, should be an existing, already connected &lt;a href=&quot;socket#socket.socket&quot;&gt;&lt;code&gt;socket.socket&lt;/code&gt;&lt;/a&gt; object to be used by the transport. If &lt;em&gt;sock&lt;/em&gt; is given, none of &lt;em&gt;host&lt;/em&gt;, &lt;em&gt;port&lt;/em&gt;, &lt;em&gt;family&lt;/em&gt;, &lt;em&gt;proto&lt;/em&gt;, &lt;em&gt;flags&lt;/em&gt;, &lt;em&gt;happy_eyeballs_delay&lt;/em&gt;, &lt;em&gt;interleave&lt;/em&gt; and &lt;em&gt;local_addr&lt;/em&gt; should be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3bc71c76f2661835bd533556b2c16b43c5a045" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;source&lt;/em&gt; is the source string; &lt;em&gt;filename&lt;/em&gt; is the optional filename from which source was read, defaulting to &lt;code&gt;'&amp;lt;input&amp;gt;'&lt;/code&gt;; and &lt;em&gt;symbol&lt;/em&gt; is the optional grammar start symbol, which should be either &lt;code&gt;'single'&lt;/code&gt; (the default) or &lt;code&gt;'eval'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ae0cc80f68567368d7cf61b0d394878877d7d2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;source&lt;/em&gt;, if supplied, is the destroyed object which emitted a &lt;a href=&quot;exceptions#ResourceWarning&quot;&gt;&lt;code&gt;ResourceWarning&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce62d796bed09c3bcd2bc762a89327fe977ab41b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sourcelines&lt;/em&gt; may contain surrogateescaped binary data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32654ef41a9fb27f99c706243df5ab867a9a0a7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;spawn&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;spawn&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2697e3b8f52d05f6a6457521905c0cdb5d1240ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;spec&lt;/em&gt;, &lt;em&gt;create&lt;/em&gt; and the other arguments to &lt;a href=&quot;#unittest.mock.patch.object&quot;&gt;&lt;code&gt;patch.object()&lt;/code&gt;&lt;/a&gt; have the same meaning as they do for &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0e6b44a7299b7baf03cd43b09e08afa8a1c315" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;spec&lt;/em&gt;: This can be either a list of strings or an existing object (a class or instance) that acts as the specification for the mock object. If you pass in an object then a list of strings is formed by calling dir on the object (excluding unsupported magic attributes and methods). Accessing any attribute not in this list will raise an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5468ab84cbdf028e26dda3df66b9c07c65d8ccf9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;spec_set&lt;/em&gt;: A stricter variant of &lt;em&gt;spec&lt;/em&gt;. If used, attempting to &lt;em&gt;set&lt;/em&gt; or get an attribute on the mock that isn&amp;rsquo;t on the object passed as &lt;em&gt;spec_set&lt;/em&gt; will raise an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bcb88c223556b1f7d09f4cd1a039864fea07fc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sql_script&lt;/em&gt; can be an instance of &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3a1d4998a64088d0f7ff8aae199dc1178f6255" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl&lt;/em&gt; can be set to an &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; instance to enable TLS over the accepted connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f9566ad5f8b0028f01a9889b7df52908b13ee8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl&lt;/em&gt; can be set to an &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt; to enable SSL over the accepted connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e869a8c9ddfc9b16c8c7140d2486f377721ce9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl&lt;/em&gt;: if given and not false, a SSL/TLS transport is created (by default a plain TCP transport is created). If &lt;em&gt;ssl&lt;/em&gt; is a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object, this context is used to create the transport; if &lt;em&gt;ssl&lt;/em&gt; is &lt;a href=&quot;constants#True&quot;&gt;&lt;code&gt;True&lt;/code&gt;&lt;/a&gt;, a default context returned from &lt;a href=&quot;ssl#ssl.create_default_context&quot;&gt;&lt;code&gt;ssl.create_default_context()&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6be189add9a7c37b3e56859a0bad8de060758bf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl_handshake_timeout&lt;/em&gt; is (for a TLS connection) the time in seconds to wait for the TLS handshake to complete before aborting the connection. &lt;code&gt;60.0&lt;/code&gt; seconds if &lt;code&gt;None&lt;/code&gt; (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456e28ae78ae1cf165f16ebc6e46e737bf9f40a1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl_handshake_timeout&lt;/em&gt; is (for a TLS server) the time in seconds to wait for the TLS handshake to complete before aborting the connection. &lt;code&gt;60.0&lt;/code&gt; seconds if &lt;code&gt;None&lt;/code&gt; (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411eea074e24891d546b9e5671ee9790b899670e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ssl_handshake_timeout&lt;/em&gt; is (for an SSL connection) the time in seconds to wait for the SSL handshake to complete before aborting the connection. &lt;code&gt;60.0&lt;/code&gt; seconds if &lt;code&gt;None&lt;/code&gt; (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22235b87f57810efcc2ca3019a6005601329f6cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sslcontext&lt;/em&gt;: a configured instance of &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffe1a7a0b86afa02240be611377542078b34715" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;start&lt;/em&gt; defaults to &lt;a href=&quot;os#os.curdir&quot;&gt;&lt;code&gt;os.curdir&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214e1ae9db539298e672b1b5f4e9d0161edfabbe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;start_dir&lt;/em&gt; can be a dotted module name as well as a directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb1ef708a75dd6aafd7831d0ad26958c7e1a2c5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;start_serving&lt;/em&gt; set to &lt;code&gt;True&lt;/code&gt; (the default) causes the created server to start accepting connections immediately. When set to &lt;code&gt;False&lt;/code&gt;, the user should await on &lt;a href=&quot;#asyncio.Server.start_serving&quot;&gt;&lt;code&gt;Server.start_serving()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#asyncio.Server.serve_forever&quot;&gt;&lt;code&gt;Server.serve_forever()&lt;/code&gt;&lt;/a&gt; to make the server to start accepting connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8ca59bba38fa2a3770bc1500ebd45e9ce074f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;state&lt;/em&gt; is a tuple containing the state of the coder. The coder returns a tuple &lt;code&gt;(adpcmfrag, newstate)&lt;/code&gt;, and the &lt;em&gt;newstate&lt;/em&gt; should be passed to the next call of &lt;a href=&quot;#audioop.lin2adpcm&quot;&gt;&lt;code&gt;lin2adpcm()&lt;/code&gt;&lt;/a&gt;. In the initial call, &lt;code&gt;None&lt;/code&gt; can be passed as the state. &lt;em&gt;adpcmfrag&lt;/em&gt; is the ADPCM coded fragment packed 2 4-bit values per byte.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3abf469e5d43058d89d6afc6608a2481431f43" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;state&lt;/em&gt; is a tuple containing the state of the converter. The converter returns a tuple &lt;code&gt;(newfragment, newstate)&lt;/code&gt;, and &lt;em&gt;newstate&lt;/em&gt; should be passed to the next call of &lt;a href=&quot;#audioop.ratecv&quot;&gt;&lt;code&gt;ratecv()&lt;/code&gt;&lt;/a&gt;. The initial call should pass &lt;code&gt;None&lt;/code&gt; as the state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b69c2f0626f6555a6461a8b758fe90d4f02bc4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;state&lt;/em&gt; should have been obtained from a previous call to &lt;a href=&quot;#random.getstate&quot;&gt;&lt;code&gt;getstate()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#random.setstate&quot;&gt;&lt;code&gt;setstate()&lt;/code&gt;&lt;/a&gt; restores the internal state of the generator to what it was at the time &lt;a href=&quot;#random.getstate&quot;&gt;&lt;code&gt;getstate()&lt;/code&gt;&lt;/a&gt; was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7964472b3e1f4840fb9b8e551ba654c0aba65e56" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;statespec&lt;/em&gt; will usually be a list or a tuple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a70bae85e6a8da1b63ff37e5926ccd8b0eabae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stderr&lt;/em&gt; can be any of these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7aef713ec22b6beadbe20718e3bdc931d10c67a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdin&lt;/em&gt; can be any of these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410d0e9fe0316fc8e6dc20e1354d4e847efe1a77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; specify the executed program&amp;rsquo;s standard input, standard output and standard error file handles, respectively. Valid values are &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt;, an existing file descriptor (a positive integer), an existing &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-file-object&quot;&gt;file object&lt;/a&gt;, and &lt;code&gt;None&lt;/code&gt;. &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt; indicates that a new pipe to the child should be created. &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt; indicates that the special file &lt;a href=&quot;os#os.devnull&quot;&gt;&lt;code&gt;os.devnull&lt;/code&gt;&lt;/a&gt; will be used. With the default settings of &lt;code&gt;None&lt;/code&gt;, no redirection will occur; the child&amp;rsquo;s file handles will be inherited from the parent. Additionally, &lt;em&gt;stderr&lt;/em&gt; can be &lt;a href=&quot;#subprocess.STDOUT&quot;&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/a&gt;, which indicates that the stderr data from the applications should be captured into the same file handle as for stdout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54a6de088cd72df7bc763cdf32664ed4afc7bbc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdin&lt;/em&gt;, &lt;em&gt;stdout&lt;/em&gt; and &lt;em&gt;stderr&lt;/em&gt; specify the executed program&amp;rsquo;s standard input, standard output and standard error file handles, respectively. Valid values are &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt;, an existing file descriptor (a positive integer), an existing file object, and &lt;code&gt;None&lt;/code&gt;. &lt;a href=&quot;#subprocess.PIPE&quot;&gt;&lt;code&gt;PIPE&lt;/code&gt;&lt;/a&gt; indicates that a new pipe to the child should be created. &lt;a href=&quot;#subprocess.DEVNULL&quot;&gt;&lt;code&gt;DEVNULL&lt;/code&gt;&lt;/a&gt; indicates that the special file &lt;a href=&quot;os#os.devnull&quot;&gt;&lt;code&gt;os.devnull&lt;/code&gt;&lt;/a&gt; will be used. With the default settings of &lt;code&gt;None&lt;/code&gt;, no redirection will occur; the child&amp;rsquo;s file handles will be inherited from the parent. Additionally, &lt;em&gt;stderr&lt;/em&gt; can be &lt;a href=&quot;#subprocess.STDOUT&quot;&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/a&gt;, which indicates that the stderr data from the child process should be captured into the same file handle as for &lt;em&gt;stdout&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a7c17ff0056e4e514e9be14bbc12ff4f4e7916" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdlib&lt;/em&gt;: directory containing the standard Python library files that are not platform-specific.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82b15e9b48c9da2008f3a04b8af49f3d4b5344f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stdout&lt;/em&gt; can be any of these:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8651b228bc44bde58832844bef40bd21440bdf2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stop&lt;/em&gt; is an optional callback accepting an object in the wrapper chain as its sole argument that allows the unwrapping to be terminated early if the callback returns a true value. If the callback never returns a true value, the last object in the chain is returned as usual. For example, &lt;a href=&quot;#inspect.signature&quot;&gt;&lt;code&gt;signature()&lt;/code&gt;&lt;/a&gt; uses this to stop unwrapping if any object in the chain has a &lt;code&gt;__signature__&lt;/code&gt; attribute defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bdc6da9e9f5aa5b00544bf4759e5d0da7efad2e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;strategy&lt;/em&gt; is used to tune the compression algorithm. Possible values are &lt;code&gt;Z_DEFAULT_STRATEGY&lt;/code&gt;, &lt;code&gt;Z_FILTERED&lt;/code&gt;, &lt;code&gt;Z_HUFFMAN_ONLY&lt;/code&gt;, &lt;code&gt;Z_RLE&lt;/code&gt; (zlib 1.2.0.1) and &lt;code&gt;Z_FIXED&lt;/code&gt; (zlib 1.2.2.2).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19f33df28cf1fe7451d396e9d557b3086c43726" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;stream&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;stream&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38588dc6f38c30a1bf295d73d750b067f4da031e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;strict&lt;/em&gt;, default value: &lt;code&gt;True&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef88de0812f2c9ddc69105b97f546ca9c11e114" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;string&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;string&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0c754c61c8aebe994d7075c0be7619949a9c0d8e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;string&lt;/em&gt; may be either a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d90073b2a989ad236b6b8efa3553a3601ba4ca1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;string&lt;/em&gt; must be a &lt;a href=&quot;stdtypes#str&quot;&gt;&lt;code&gt;str&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030c320faf127bf6d6e2642c2a2f000866b35d68" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;strip_text&lt;/em&gt;: set to true to strip whitespace before and after text content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ce00e2c0a1096a748da9ac5052e2323e57bb12" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;style&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;style&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="faf21e7d3515a15d782653fbe11fd1aa8efb2dbf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that holds the name of the subkey with which the value is associated. If this parameter is &lt;code&gt;None&lt;/code&gt; or empty, the function retrieves the value set by the &lt;a href=&quot;#winreg.SetValue&quot;&gt;&lt;code&gt;SetValue()&lt;/code&gt;&lt;/a&gt; method for the key identified by &lt;em&gt;key&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ce0db54a909a592a89f35ca86dbf7dcc98f2ad" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that identifies the sub_key to open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e30bb8e9bf4f0c665d60670efb836611f745679" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that identifies the subkey to load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57be84cef8cbe4f8581c6fb6b273afc3e416c1a6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that must be a subkey of the key identified by the &lt;em&gt;key&lt;/em&gt; parameter. This value must not be &lt;code&gt;None&lt;/code&gt;, and the key may not have subkeys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31f7eea7bab258828d5ed4a0dfa4623dcddae5a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that names the key this method opens or creates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30fcddca285dea3959889a93d7cf414bbbb4ddb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sub_key&lt;/em&gt; is a string that names the subkey with which the value is associated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82d878339b177d70fac586903263c9e1aa3caa3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;t&lt;/em&gt; must have the same length as the slice it is replacing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb01cc4122058c69b5440430ff2616f553530e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tabsize&lt;/em&gt; is an optional keyword argument to specify tab stop spacing and defaults to &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6652365f06780375a86b2f726b3158c7839e91" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tagname&lt;/em&gt;, if specified and not &lt;code&gt;None&lt;/code&gt;, is a string giving a tag name for the mapping. Windows allows you to have many different mappings against the same file. If you specify the name of an existing tag, that tag is opened, otherwise a new tag of this name is created. If this parameter is omitted or &lt;code&gt;None&lt;/code&gt;, the mapping is created without a name. Avoiding the use of the tag parameter will assist in keeping your code portable between Unix and Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bd4d78d20ebc2e0b0fb313c52ce957a02cd228" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tar&lt;/em&gt;: Uncompressed tar file. Uses POSIX.1-2001 pax format for new archives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72109b24d9d837b926f66baeac6941aa4f82e38" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tar&lt;/em&gt;: uncompressed tar file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bda02966216850dfd23fec2a652eed2ef1c4fe" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;target&lt;/em&gt; is the callable object to be invoked by the &lt;a href=&quot;#threading.Thread.run&quot;&gt;&lt;code&gt;run()&lt;/code&gt;&lt;/a&gt; method. Defaults to &lt;code&gt;None&lt;/code&gt;, meaning nothing is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab67726261778ac77e28c33396f2f3e2e925d51" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;target&lt;/em&gt; should be a string in the form &lt;code&gt;'package.module.ClassName'&lt;/code&gt;. The &lt;em&gt;target&lt;/em&gt; is imported and the specified object replaced with the &lt;em&gt;new&lt;/em&gt; object, so the &lt;em&gt;target&lt;/em&gt; must be importable from the environment you are calling &lt;a href=&quot;#unittest.mock.patch&quot;&gt;&lt;code&gt;patch()&lt;/code&gt;&lt;/a&gt; from. The target is imported when the decorated function is executed, not at decoration time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7d552b17c2c5314617d09e181b88003869ed4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;thread&lt;/em&gt;: Thread which raised the exception, can be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43aa69b85cbb08e0f2c74610a4ab37295dabc2c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;timeout&lt;/em&gt; (a float or int), if specified, can be used to control the maximum number of seconds to wait before returning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50858e1ff60d5153f879e7ea21c4d57bc3c07e9f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;timeout&lt;/em&gt; can be used to control the maximum number of seconds to wait before returning. &lt;em&gt;timeout&lt;/em&gt; can be an int or float. If &lt;em&gt;timeout&lt;/em&gt; is not specified or &lt;code&gt;None&lt;/code&gt;, there is no limit to the wait time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd08055011347fa6e9ea55ab90d607eff6c92a96" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;timeout&lt;/em&gt; can either be &lt;code&gt;None&lt;/code&gt; or a float or int number of seconds to wait for. If &lt;em&gt;timeout&lt;/em&gt; is &lt;code&gt;None&lt;/code&gt;, block until the future completes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0945c9faa173df868a9eedb4df0cbdd27cfc48" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tl&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;tl&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09e67bff435a688e8c5f16f27cc676e9dc6d0ffb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tr&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;tr&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0881e6d84ff14f5867712c7cf9e7b0cdc8e706b5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;transport&lt;/em&gt; and &lt;em&gt;protocol&lt;/em&gt; instances that methods like &lt;a href=&quot;#asyncio.loop.create_server&quot;&gt;&lt;code&gt;create_server()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#asyncio.loop.create_connection&quot;&gt;&lt;code&gt;create_connection()&lt;/code&gt;&lt;/a&gt; return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3380662779ca4b850fd5013cbada93ff47e4f265" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;ts&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ts&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="50f88e5501b2fce98a3f2f9bb2ffe74ca46e4070" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; is an integer that specifies the type of the data. Currently this must be &lt;a href=&quot;#winreg.REG_SZ&quot;&gt;&lt;code&gt;REG_SZ&lt;/code&gt;&lt;/a&gt;, meaning only strings are supported. Use the &lt;a href=&quot;#winreg.SetValueEx&quot;&gt;&lt;code&gt;SetValueEx()&lt;/code&gt;&lt;/a&gt; function for support for other data types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1116b87f1f5c67142cd3866cb10c8016e0e0154" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; is an integer that specifies the type of the data. See &lt;a href=&quot;#value-types&quot;&gt;Value Types&lt;/a&gt; for the available types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e58a3fb3ec84d18b86930673344b55c1081775" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type&lt;/em&gt; is the algorithm type as string, e.g. &lt;code&gt;aead&lt;/code&gt;, &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;skcipher&lt;/code&gt; or &lt;code&gt;rng&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca707730b3052fc43d3db7817523c353de3c525" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;type_&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;type_&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4aeef8d5994128b08bb266c5f49f0c11371f34a9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;typecode_or_type&lt;/em&gt; determines the type of the elements of the returned array: it is either a ctypes type or a one character typecode of the kind used by the &lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; module. If &lt;em&gt;size_or_initializer&lt;/em&gt; is an integer then it determines the length of the array, and the array will be initially zeroed. Otherwise &lt;em&gt;size_or_initializer&lt;/em&gt; is a sequence which is used to initialize the array and whose length determines the length of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b6bcab5e5e5b8614340cb6e14cdc96eba2674d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;typecode_or_type&lt;/em&gt; determines the type of the elements of the returned array: it is either a ctypes type or a one character typecode of the kind used by the &lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; module. If &lt;em&gt;size_or_initializer&lt;/em&gt; is an integer, then it determines the length of the array, and the array will be initially zeroed. Otherwise, &lt;em&gt;size_or_initializer&lt;/em&gt; is a sequence which is used to initialize the array and whose length determines the length of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e191b3197f583521e3bdcbf0cf2e589905a8d2ed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;typecode_or_type&lt;/em&gt; determines the type of the returned object: it is either a ctypes type or a one character typecode of the kind used by the &lt;a href=&quot;array#module-array&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; module. &lt;em&gt;*args&lt;/em&gt; is passed on to the constructor for the type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5219d24b5d457df7757d71797ee051df23f82ae7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;typeid&lt;/em&gt; is a &amp;ldquo;type identifier&amp;rdquo; which is used to identify a particular type of shared object. This must be a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734feb15230826195ddf25ba04bbae38bbb251cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unlink()&lt;/em&gt; was called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424bf3db3e91d7e2e9732edf5d152ae828030af2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unsafe&lt;/em&gt;: By default if any attribute starts with &lt;em&gt;assert&lt;/em&gt; or &lt;em&gt;assret&lt;/em&gt; will raise an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;. Passing &lt;code&gt;unsafe=True&lt;/code&gt; will allow access to these attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f500970421acebc8cd68d6346d8602ea00032c6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;unverifiable&lt;/em&gt; should indicate whether the request is unverifiable, as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc2965.html&quot; id=&quot;index-3&quot;&gt;&lt;strong&gt;RFC 2965&lt;/strong&gt;&lt;/a&gt;. It defaults to &lt;code&gt;False&lt;/code&gt;. An unverifiable request is one whose URL the user did not have the option to approve. For example, if the request is for an image in an HTML document, and the user had no option to approve the automatic fetching of the image, this should be true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79195dad2fc1ffba31a318d692d25414d199d01" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;upgrade&lt;/em&gt; indicates whether or not to upgrade an existing installation of an earlier version of &lt;code&gt;pip&lt;/code&gt; to the bundled version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbe3e116fcc92dbbc87b01a5b78eb2594dc7d98" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;uri&lt;/em&gt; can be either a single URI, or a sequence of URIs. &lt;em&gt;realm&lt;/em&gt;, &lt;em&gt;user&lt;/em&gt; and &lt;em&gt;passwd&lt;/em&gt; must be strings. This causes &lt;code&gt;(user, passwd)&lt;/code&gt; to be used as authentication tokens when authentication for &lt;em&gt;realm&lt;/em&gt; and a super-URI of any of the given URIs is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008a5a893aa61954e766a9cca187919302f23f5a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;url&lt;/em&gt; should be a string containing a valid URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1bc8cb26d5aac96cabf71ccc6e637e735d55a53" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;user&lt;/em&gt; can be a system user name or a uid; the same applies to &lt;em&gt;group&lt;/em&gt;. At least one argument is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10dfb073e00f1147e7b0bed6c62fb58b305a6641" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;user&lt;/em&gt; indicates whether to use the user scheme rather than installing globally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c328e1ecac1affe97e0cc900e7047c20ef5b6ff2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;using_IDLE&lt;/em&gt;: Set this to &lt;code&gt;True&lt;/code&gt; if you regularly work with IDLE and its -n switch (&amp;ldquo;no subprocess&amp;rdquo;). This will prevent &lt;a href=&quot;#turtle.exitonclick&quot;&gt;&lt;code&gt;exitonclick()&lt;/code&gt;&lt;/a&gt; to enter the mainloop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2822bab0d8152ef5bb971d14cbe4b60d55987cdf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; can be an integer, string, tuple, &lt;a href=&quot;functions#float&quot;&gt;&lt;code&gt;float&lt;/code&gt;&lt;/a&gt;, or another &lt;a href=&quot;#decimal.Decimal&quot;&gt;&lt;code&gt;Decimal&lt;/code&gt;&lt;/a&gt; object. If no &lt;em&gt;value&lt;/em&gt; is given, returns &lt;code&gt;Decimal('0')&lt;/code&gt;. If &lt;em&gt;value&lt;/em&gt; is a string, it should conform to the decimal numeric string syntax after leading and trailing whitespace characters, as well as underscores throughout, are removed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd067d9a9455a99a665bcd1437172ad060a7510d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; is a string that identifies the value to remove.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4596c06248032e80dbe69454e233d9d48dd14f7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; is a string that specifies the new value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3fd4d3efc021240749ccbe1d45396f82c6aa290" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; may contain surrogateescaped binary data. There should be no surrogateescaped binary data in the string returned by the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2d4e432ed9658dfc9574c500c6f022c99de5b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; may contain surrogateescaped binary data. There should be no surrogateescaped binary data in the value returned by the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ee4f93e842f4c1fdb497093b2526f7475a5f9a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt; may contain surrogateescaped binary data. These could be converted back into binary data in the returned bytes object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a28a431df12b6f0df562db744c8e1404fe51935" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value_name&lt;/em&gt; is a string indicating the value to query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdf8d2ecc7108f85efa52d4e4314c3214492f21" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value_name&lt;/em&gt; is a string that names the subkey with which the value is associated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7357b40847945e10f90e7de964f42e0cbedb5e6c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;values&lt;/em&gt; can be a dictionary of values to set in the dictionary. &lt;em&gt;values&lt;/em&gt; can also be an iterable of &lt;code&gt;(key, value)&lt;/code&gt; pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de589f63da0cf7a8eb51f161cb64ba81713ba525" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;verbosity&lt;/em&gt; controls the level of output to &lt;a href=&quot;sys#sys.stdout&quot;&gt;&lt;code&gt;sys.stdout&lt;/code&gt;&lt;/a&gt; from the bootstrapping operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7804c88a5abd1c7967d77c31ad206fdda51354" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;version&lt;/em&gt; - to be set to an integer value representing the schema version. The only valid value at present is 1, but having this key allows the schema to evolve while still preserving backwards compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b516d289aaab557e633dd7d2e6176b49ea13cc6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;version&lt;/em&gt; is a named tuple, in the same format as &lt;a href=&quot;#sys.version_info&quot;&gt;&lt;code&gt;sys.version_info&lt;/code&gt;&lt;/a&gt;. It represents the version of the Python &lt;em&gt;implementation&lt;/em&gt;. This has a distinct meaning from the specific version of the Python &lt;em&gt;language&lt;/em&gt; to which the currently running interpreter conforms, which &lt;code&gt;sys.version_info&lt;/code&gt; represents. For example, for PyPy 1.8 &lt;code&gt;sys.implementation.version&lt;/code&gt; might be &lt;code&gt;sys.version_info(1, 8, 0, 'final', 0)&lt;/code&gt;, whereas &lt;code&gt;sys.version_info&lt;/code&gt; would be &lt;code&gt;sys.version_info(2, 7, 2, 'final', 0)&lt;/code&gt;. For CPython they are the same value, since it is the reference implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2a1834b7db30b9a8bef05c3353ecba9928a723" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;width&lt;/em&gt; is a decimal integer defining the minimum field width. If not specified, then the field width will be determined by the content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab4905108d8772eefd20ede1fcab6a22a476a4a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;windll&lt;/em&gt; does not try to select one of them by magic, you must access the version you need by specifying &lt;code&gt;GetModuleHandleA&lt;/code&gt; or &lt;code&gt;GetModuleHandleW&lt;/code&gt; explicitly, and then call it with bytes or string objects respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eaf5bcd804764250211985428430f8bbcc63c7a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;with_comments&lt;/em&gt;: set to true to include comments (default: false)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fa0fdd6e3a383c3c2e71e3b567d31ffb1146e33" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wlist&lt;/em&gt;: wait until ready for writing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6323e6e924d1492ff9d74bb1d9ff37bd0eedcd7f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;word&lt;/em&gt; will usually be a user&amp;rsquo;s password as typed at a prompt or in a graphical interface. The optional &lt;em&gt;salt&lt;/em&gt; is either a string as returned from &lt;a href=&quot;#crypt.mksalt&quot;&gt;&lt;code&gt;mksalt()&lt;/code&gt;&lt;/a&gt;, one of the &lt;code&gt;crypt.METHOD_*&lt;/code&gt; values (though not all may be available on all platforms), or a full encrypted password including salt, as returned by this function. If &lt;em&gt;salt&lt;/em&gt; is not provided, the strongest method will be used (as returned by &lt;a href=&quot;#crypt.methods&quot;&gt;&lt;code&gt;methods()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d72ae5967389f33b155d7e1fd996e19e0cbfa34" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wrapcol&lt;/em&gt; controls whether the output should have newline (&lt;code&gt;b'\n'&lt;/code&gt;) characters added to it. If this is non-zero, each output line will be at most this many characters long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bdb249b1bb970fff39247b79c6aacf4ea8d88a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wrapcolumn&lt;/em&gt; is an optional keyword to specify column number where lines are broken and wrapped, defaults to &lt;code&gt;None&lt;/code&gt; where lines are not wrapped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698006fca767945daf3f214770c258d791b9532d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;wraps&lt;/em&gt;: Item for the mock object to wrap. If &lt;em&gt;wraps&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt; then calling the Mock will pass the call through to the wrapped object (returning the real result). Attribute access on the mock will return a Mock object that wraps the corresponding attribute of the wrapped object (so attempting to access an attribute that doesn&amp;rsquo;t exist will raise an &lt;a href=&quot;exceptions#AttributeError&quot;&gt;&lt;code&gt;AttributeError&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daeaadf94b10ca686506ff85a595caf45a3b0508" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; and &lt;em&gt;y&lt;/em&gt; are pixel coordinates relative to the widget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf0ac41c7ccf3cefddb3dbf60603300d7d0c7ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; converted to floating point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ba7c93cfb6c0fddb5cb7096fc38bf2de680fdf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; converted to integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c21fb764d04ff7b58492908ebc2fda60e489cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; negated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe977a7ac07d80aa9ce8f091b9aa10a5699b83c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; rounded to &lt;em&gt;n&lt;/em&gt; digits, rounding half to even. If &lt;em&gt;n&lt;/em&gt; is omitted, it defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec7bc077e3609721a358c436ec534de55feb136" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; shifted left by &lt;em&gt;n&lt;/em&gt; bits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0717b6e7a354958d6b329b7a2a078b942efdaa8d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; shifted right by &lt;em&gt;n&lt;/em&gt; bits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63380121fdd00a6cb7d962279216442592059d93" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; to the power &lt;em&gt;y&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e4af95208a90a6018492decafe9e9f39b2e429" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; truncated to &lt;a href=&quot;numbers#numbers.Integral&quot;&gt;&lt;code&gt;Integral&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6009996e5b2429c8b5d2a8684173570975192359" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;x&lt;/em&gt; unchanged</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29d75d14274b4158f7f304298f7cc2311479fe2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xlist&lt;/em&gt;: wait for an &amp;ldquo;exceptional condition&amp;rdquo; (see the manual page for what your system considers such a condition)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba55a062d24fbed6df1dd5a260105f5d3e40f46" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;xztar&lt;/em&gt;: xz&amp;rsquo;ed tar-file (if the &lt;a href=&quot;lzma#module-lzma&quot;&gt;&lt;code&gt;lzma&lt;/code&gt;&lt;/a&gt; module is available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2108a87ba6e7c24019360b0d396276667afa4947" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;zdict&lt;/em&gt; is a predefined compression dictionary. This is a sequence of bytes (such as a &lt;a href=&quot;stdtypes#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; object) containing subsequences that are expected to occur frequently in the data that is to be compressed. Those subsequences that are expected to be most common should come at the end of the dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63010be52d85f9625ec2f17e23e58ba4f6d89134" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;zip&lt;/em&gt;: ZIP file (if the &lt;a href=&quot;zlib#module-zlib&quot;&gt;&lt;code&gt;zlib&lt;/code&gt;&lt;/a&gt; module is available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d67c696029fb6518ed510c37a94c1475cdf39db5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;zip&lt;/em&gt;: ZIP file (unpacking compressed files works only if the corresponding module is available).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fda1ec2062e7811ba1c1974475acf44ffa1e49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(Unix version)&lt;/strong&gt; Maps &lt;em&gt;length&lt;/em&gt; bytes from the file specified by the file descriptor &lt;em&gt;fileno&lt;/em&gt;, and returns a mmap object. If &lt;em&gt;length&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, the maximum length of the map will be the current size of the file when &lt;a href=&quot;#mmap.mmap&quot;&gt;&lt;code&gt;mmap&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2237686a0f06855ef648b8c2de6b9b06fe0f206f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;(Windows version)&lt;/strong&gt; Maps &lt;em&gt;length&lt;/em&gt; bytes from the file specified by the file handle &lt;em&gt;fileno&lt;/em&gt;, and creates a mmap object. If &lt;em&gt;length&lt;/em&gt; is larger than the current size of the file, the file is extended to contain &lt;em&gt;length&lt;/em&gt; bytes. If &lt;em&gt;length&lt;/em&gt; is &lt;code&gt;0&lt;/code&gt;, the maximum length of the map is the current size of the file, except that if the file is empty Windows raises an exception (you cannot create an empty mapping on Windows).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec0baf973799b29570eb6e23a422ba9161fb532" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ATTENTION&lt;/strong&gt;: in user-defined coordinate systems angles may appear distorted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf826dc4e06c9af7beca41decbccbe23be63b670" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Automatic junk heuristic:&lt;/strong&gt;&lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; supports a heuristic that automatically treats certain sequence items as junk. The heuristic counts how many times each individual item appears in the sequence. If an item&amp;rsquo;s duplicates (after the first one) account for more than 1% of the sequence and the sequence is at least 200 items long, this item is marked as &amp;ldquo;popular&amp;rdquo; and is treated as junk for the purpose of sequence matching. This heuristic can be turned off by setting the &lt;code&gt;autojunk&lt;/code&gt; argument to &lt;code&gt;False&lt;/code&gt; when creating the &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e5aca25d85db9edca4cdb9bde370ef847e6065" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BLAKE2b&lt;/strong&gt;, optimized for 64-bit platforms and produces digests of any size between 1 and 64 bytes,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7265c9652764212c6fc1826c7d4221933c3899c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;BLAKE2s&lt;/strong&gt;, optimized for 8- to 32-bit platforms and produces digests of any size between 1 and 32 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4158503ba123a166f3ab13d066e805acdb3b82c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Binary operations&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2ec13c2128f4cf2a693ccae2c551f6f53231834" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Auto history is enabled by default, and changes to this do not persist across multiple sessions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3dc9d6665bc06d8ec869ecd632bcf3f7360a4e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Bytecode is an implementation detail of the CPython interpreter. No guarantees are made that bytecode will not be added, removed, or changed between versions of Python. Use of this module should not be considered to work across Python VMs or Python releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9341218c458820f2dccca05c5b4463cb09b28f05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; CPython generates implicit parameter names of the form &lt;code&gt;.0&lt;/code&gt; on the code objects used to implement comprehensions and generator expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97fcf41b403be65df277113532b3e59702eadf34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Currently, the prime used is &lt;code&gt;P = 2**31 - 1&lt;/code&gt; on machines with 32-bit C longs and &lt;code&gt;P = 2**61 - 1&lt;/code&gt; on machines with 64-bit C longs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55162de2666e66a02a868281d253fdea69627655" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; In CPython, due to the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-global-interpreter-lock&quot;&gt;Global Interpreter Lock&lt;/a&gt;, only one thread can execute Python code at once (even though certain performance-oriented libraries might overcome this limitation). If you want your application to make better use of the computational resources of multi-core machines, you are advised to use &lt;a href=&quot;multiprocessing#module-multiprocessing&quot;&gt;&lt;code&gt;multiprocessing&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;concurrent.futures#concurrent.futures.ProcessPoolExecutor&quot;&gt;&lt;code&gt;concurrent.futures.ProcessPoolExecutor&lt;/code&gt;&lt;/a&gt;. However, threading is still an appropriate model if you want to run multiple I/O-bound tasks simultaneously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="492257c252d2162358caaa9d15f724320907cbdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; In other implementations of Python, this type may be identical to &lt;code&gt;GetSetDescriptorType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aefb412991d19b792a5700334695c01638933dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Member descriptors are attributes defined in extension modules via &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyMemberDef&quot;&gt;&lt;code&gt;PyMemberDef&lt;/code&gt;&lt;/a&gt; structures. For Python implementations without such types, this method will always return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d3685c4164467992c69ebd0814c395baa7e4d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Other built-in types such as &lt;a href=&quot;stdtypes#tuple&quot;&gt;&lt;code&gt;tuple&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;functions#int&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt; do not support weak references even when subclassed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ca8126205676d59efc9a11dc0a2e61fbacf3b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Prior to version 3.4, extension modules written in C were not fully searched by doctest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15454e67e258b779957990665d8a28f3a0aed3f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Some common encodings can bypass the codecs lookup machinery to improve performance. These optimization opportunities are only recognized by CPython for a limited set of (case insensitive) aliases: utf-8, utf8, latin-1, latin1, iso-8859-1, iso8859-1, mbcs (Windows only), ascii, us-ascii, utf-16, utf16, utf-32, utf32, and the same using underscores instead of dashes. Using alternative aliases for these encodings may result in slower execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4faa3b5c440817e8250d12c84912151e2a2eec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; The &lt;a href=&quot;#module-math&quot;&gt;&lt;code&gt;math&lt;/code&gt;&lt;/a&gt; module consists mostly of thin wrappers around the platform C math library functions. Behavior in exceptional cases follows Annex F of the C99 standard where appropriate. The current implementation will raise &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; for invalid operations like &lt;code&gt;sqrt(-1.0)&lt;/code&gt; or &lt;code&gt;log(0.0)&lt;/code&gt; (where C99 Annex F recommends signaling invalid operation or divide-by-zero), and &lt;a href=&quot;exceptions#OverflowError&quot;&gt;&lt;code&gt;OverflowError&lt;/code&gt;&lt;/a&gt; for results that overflow (for example, &lt;code&gt;exp(1000.0)&lt;/code&gt;). A NaN will not be returned from any of the functions above unless one or more of the input arguments was a NaN; in that case, most functions will return a NaN, but (again following C99 Annex F) there are some exceptions to this rule, for example &lt;code&gt;pow(float('nan'), 0.0)&lt;/code&gt; or &lt;code&gt;hypot(float('nan'), float('inf'))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f6497d11a911475340dd90e1d30eac485de3d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; The &lt;a href=&quot;#sys.gettrace&quot;&gt;&lt;code&gt;gettrace()&lt;/code&gt;&lt;/a&gt; function is intended only for implementing debuggers, profilers, coverage tools and the like. Its behavior is part of the implementation platform, rather than part of the language definition, and thus may not be available in all Python implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6553df4dd7fd16d574c433603a5716df1afc05df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; The &lt;a href=&quot;#sys.settrace&quot;&gt;&lt;code&gt;settrace()&lt;/code&gt;&lt;/a&gt; function is intended only for implementing debuggers, profilers, coverage tools and the like. Its behavior is part of the implementation platform, rather than part of the language definition, and thus may not be available in all Python implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171031c8526a7b267104411039cf364944dadb12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This function is specific to CPython. The exact output format is not defined here, and may change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b043433a413f6d75811a7a3a5940b821d4b258a2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This function relies on Python stack frame support in the interpreter, which isn&amp;rsquo;t guaranteed to exist in all implementations of Python. If running in an implementation without Python stack frame support this function returns &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639a23f6bda4deebbdaf26606e402f2fc76087a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This function relies on the generator exposing a Python stack frame for introspection, which isn&amp;rsquo;t guaranteed to be the case in all implementations of Python. In such cases, this function will always return an empty dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19494722c95838e78a57a0e3c040ecbc1a6e00c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This function should be used for internal and specialized purposes only. It is not guaranteed to exist in all implementations of Python.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe676952ea1a38c3928f6ec6f3da30c17da31b27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This is a CPython-specific way of accessing options passed through &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id5&quot;&gt;&lt;code&gt;-X&lt;/code&gt;&lt;/a&gt;. Other implementations may export them through other means, or not at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cf02496d363c6460454d533a2e69d5af6c9bbc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This is the address of the object in memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74807a63d6553dea1f285bb77c635e9dfebc9489" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This method has a C implementation which is reentrant. That is, a &lt;code&gt;put()&lt;/code&gt; or &lt;code&gt;get()&lt;/code&gt; call can be interrupted by another &lt;code&gt;put()&lt;/code&gt; call in the same thread without deadlocking or corrupting internal state inside the queue. This makes it appropriate for use in destructors such as &lt;code&gt;__del__&lt;/code&gt; methods or &lt;a href=&quot;weakref#module-weakref&quot;&gt;&lt;code&gt;weakref&lt;/code&gt;&lt;/a&gt; callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0462914bde9c235949c5990fc70c46de5a9795c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; This table is generated from the CPython documentation, and may not represent events raised by other implementations. See your runtime specific documentation for actual events raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d82d06e79615a9c6d93637b99b6ec40ae8122e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; Under some circumstances, &lt;a href=&quot;#statistics.median_grouped&quot;&gt;&lt;code&gt;median_grouped()&lt;/code&gt;&lt;/a&gt; may coerce data points to floats. This behaviour is likely to change in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de16f0520053b3277f6467fabc32453af96115aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; When tracing is enabled (see &lt;a href=&quot;#sys.settrace&quot;&gt;&lt;code&gt;settrace()&lt;/code&gt;&lt;/a&gt;), Python hooks are only traced if the callable has a &lt;code&gt;__cantrace__&lt;/code&gt; member that is set to a true value. Otherwise, trace functions will skip the hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8386faad59f6550022cb9c8b75d87e4d0b9dbb16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; While a list is being sorted, the effect of attempting to mutate, or even inspect, the list is undefined. The C implementation of Python makes the list appear empty for the duration, and raises &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; if it can detect that the list has been mutated during a sort.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c38dba2f7064f8f54918fd6a5102d18720d170d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CPython implementation detail:&lt;/strong&gt; getsets are attributes defined in extension modules via &lt;a href=&quot;https://docs.python.org/3.8/c-api/structures.html#c.PyGetSetDef&quot;&gt;&lt;code&gt;PyGetSetDef&lt;/code&gt;&lt;/a&gt; structures. For Python implementations without such types, this method will always return &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4bf71d4ef8d3042310de66d4b26a5fce288efa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caveats:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Caveats:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05bbdd1d96c557b1ac257f8af27265190b8470a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Combinatoric iterators:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf8b75d3387b14474be95033546a654f5dffef2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Coroutine opcodes&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28965c7b81253658c8d242174a36d16862180e18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do not import this module directly.&lt;/strong&gt; Instead, import the module &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt;, which provides a &lt;em&gt;portable&lt;/em&gt; version of this interface. On Unix, the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module provides a superset of the &lt;a href=&quot;#module-posix&quot;&gt;&lt;code&gt;posix&lt;/code&gt;&lt;/a&gt; interface. On non-Unix operating systems the &lt;a href=&quot;#module-posix&quot;&gt;&lt;code&gt;posix&lt;/code&gt;&lt;/a&gt; module is not available, but a subset is always available through the &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; interface. Once &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; is imported, there is &lt;em&gt;no&lt;/em&gt; performance penalty in using it instead of &lt;a href=&quot;#module-posix&quot;&gt;&lt;code&gt;posix&lt;/code&gt;&lt;/a&gt;. In addition, &lt;a href=&quot;os#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; provides some additional functionality, such as automatically calling &lt;a href=&quot;os#os.putenv&quot;&gt;&lt;code&gt;putenv()&lt;/code&gt;&lt;/a&gt; when an entry in &lt;code&gt;os.environ&lt;/code&gt; is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3d140c8e464f134cec3b0eebd38bf683f55d62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Examples&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Examples&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dd3f9dd8c7ca024000e95c26bbda044b48526f40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Facilities&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Facilities&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4ca59162910af234b26740c0c419b5e64fbfdcf7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;General instructions&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b026bf538c6a0c54c54f758482fdffe0f2974ade" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; Context Variables should be created at the top module level and never in closures. &lt;a href=&quot;#contextvars.Context&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; objects hold strong references to context variables which prevents context variables from being properly garbage collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294bdae65d01132af01390d8aee686901798a957" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;In-place operations&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb14015dd2ba90242d34d81de5b2808be579f40" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Infinite iterators:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa53bd5dcf55512438559763e613b8fe2cec580" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Iterators terminating on the shortest input sequence:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b44a2e3c83f7503f4a8bb5a2c6739a2e8fb0283" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Miscellaneous opcodes&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbaa14a9a5b2357a05d29766739c056528e6fbfe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The functions registered via this module are not called when the program is killed by a signal not handled by Python, when a Python fatal internal error is detected, or when &lt;a href=&quot;os#os._exit&quot;&gt;&lt;code&gt;os._exit()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b11c8f8527518e026032bb5e1d3d725b5c07f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Column #0 always refers to the tree column, even if show=&amp;rdquo;tree&amp;rdquo; is not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e2f186da33f2e2f1480ad645fec1a9ea56dc52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Optional in-place filtering:&lt;/strong&gt; if the keyword argument &lt;code&gt;inplace=True&lt;/code&gt; is passed to &lt;a href=&quot;#fileinput.input&quot;&gt;&lt;code&gt;fileinput.input()&lt;/code&gt;&lt;/a&gt; or to the &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; constructor, the file is moved to a backup file and standard output is directed to the input file (if a file of the same name as the backup file already exists, it will be replaced silently). This makes it possible to write a filter that rewrites its input file in place. If the &lt;em&gt;backup&lt;/em&gt; parameter is given (typically as &lt;code&gt;backup='.&amp;lt;some extension&amp;gt;'&lt;/code&gt;), it specifies the extension for the backup file, and the backup file remains around; by default, the extension is &lt;code&gt;'.bak'&lt;/code&gt; and it is deleted when the output file is closed. In-place filtering is disabled when standard input is read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9755fc4e4b399ef70352037e1dea62605875423d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 235&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505437942a34d6f3f8da1ade35532a2bf34ab583" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 263&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2fba048de7e9e870c91689be2bfe36747d8d2ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 302&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9b54ac605b3df692e9ae6fa6d6ef22c0c03414" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 3120&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b0be36183407d2999977660fae12cae84f27d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 3147&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a07a10139d05155fd0bb133d283324353bd308d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 328&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2419327fdce81995cd9f1a2e6d0bb4e937c084f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 366&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2eca0ecb92c6596e9a6332cbb8c17dd58f2d34f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 420&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fec51973f7524c859d90b0e2563cade1ff961c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 451&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62a6cbf717ac5016c38f0c51ff5d132a5ce4eff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 488&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4128d24126dcd672f5ae21550fead189add72cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 489&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67601f5a339b0307f184824480cf1304c2b0d374" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 506&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="863bab90498379c28f6e98e0a2b308c0bd5c82df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;PEP 552&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ed9fbcbd43a7ad302e13dd3274bdc3908b9020" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pipes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Pipes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b9c1a2552358e056d8b75644338993b63d73fc05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Priorities&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Priorities&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6706067083d966ce401707005631a2a8916e7fe9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Queues&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Queues&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="80444cf823830354956441795d1cd425dafb4e7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 1422: Privacy Enhancement for Internet Electronic Mail: Part II: Certificate-Based Key Management&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047e4ba5cb23c1a5cbb89583194894c03c718b3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 4086: Randomness Requirements for Security&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684b5b5f11bbd83abed1ff460d58d36bd8756df0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 5246: The Transport Layer Security (TLS) Protocol Version 1.2&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857c4ce645c7bde5770e18429f54051f80b1d718" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="825361ff2d40c1a75232dae516063a700b4f23ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 6066: Transport Layer Security (TLS) Extensions&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41a77ceffb3e6e51b21d098649cd0e0d8e7030f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;RFC 7525: Recommendations for Secure Use of Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799a693b93c6aaa443f835ddf216413e5f8bba8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SSLv2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SSLv2&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c26b36ff1a4674ddf17ede2b23340d0787f4468c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;SSLv3&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;SSLv3&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d41c414e5f7d5a6dd6fdfa9b8d8f4f78edf0d9b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Server process&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f795eea167a8134da9a074aad2013cac188482e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Shared memory&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e9d804a4631f03d4e5a0278b1e2f22b4ca91a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/__future__.py&quot;&gt;Lib/__future__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c8d6b31630ea9c73c8406d8d3bb42a1a335d6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/_collections_abc.py&quot;&gt;Lib/_collections_abc.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba5d83d4e1746a06edc522c87c60030ecbafbbd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/_dummy_thread.py&quot;&gt;Lib/_dummy_thread.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b4642a018b041f7afd673bfc649c2ad20d80d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/abc.py&quot;&gt;Lib/abc.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb93f6d932c2d7f972bfb19a431c3d9688aacb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/aifc.py&quot;&gt;Lib/aifc.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00e0d3bc7312aa6f65b9991a35d88a4e47c7ac29" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/argparse.py&quot;&gt;Lib/argparse.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065a09107ace218e31d50930195bf303f70332ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/ast.py&quot;&gt;Lib/ast.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7b75c42ee72e1a453d91a408c581dded43efec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asynchat.py&quot;&gt;Lib/asynchat.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8a120d1b5249c9e5415e688f39e38bcc266bf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/events.py&quot;&gt;Lib/asyncio/events.py&lt;/a&gt;, &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_events.py&quot;&gt;Lib/asyncio/base_events.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfc716633c82085801f067328a8e1c63e0874a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/exceptions.py&quot;&gt;Lib/asyncio/exceptions.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bb4db21bf62d1f099ad01723b9ecb4cf4a5ec4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/futures.py&quot;&gt;Lib/asyncio/futures.py&lt;/a&gt;, &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_futures.py&quot;&gt;Lib/asyncio/base_futures.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d603b1a6fda1d5313eb25eb64af4e7275dc2520d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/locks.py&quot;&gt;Lib/asyncio/locks.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123850d49475233ec797997704c50588d2f42d9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/proactor_events.py&quot;&gt;Lib/asyncio/proactor_events.py&lt;/a&gt;, &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/windows_events.py&quot;&gt;Lib/asyncio/windows_events.py&lt;/a&gt;, &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/windows_utils.py&quot;&gt;Lib/asyncio/windows_utils.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fdd52910fcf44d8685e5806c23073c65713e93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/protocols.py&quot;&gt;Lib/asyncio/protocols.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaa0aa920b3d1d7dae693179a05a1695cfc3f03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/queues.py&quot;&gt;Lib/asyncio/queues.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5058dbcad110d1d9c62ce97765e1053280ae2dc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/streams.py&quot;&gt;Lib/asyncio/streams.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19dfb42babc4c839166c12efe162594c6cfb45a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/subprocess.py&quot;&gt;Lib/asyncio/subprocess.py&lt;/a&gt;, &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/base_subprocess.py&quot;&gt;Lib/asyncio/base_subprocess.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeae49ec82718dbd3edb21b5eb9d00820247550c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncio/transports.py&quot;&gt;Lib/asyncio/transports.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e75575fe09d022332ec018126a18624ea5c80b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/asyncore.py&quot;&gt;Lib/asyncore.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc388b572aa810b42afe8f07d2bd60b976f11a36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/base64.py&quot;&gt;Lib/base64.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3b41e6517a41340e2b75fe440c4e3d1cfeea03" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/bdb.py&quot;&gt;Lib/bdb.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1fdc144fb2b409f0affa2f6d6172b9a8d2f16a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/binhex.py&quot;&gt;Lib/binhex.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a36846267fd2d13ef80d8b497b30d233998a26" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/bisect.py&quot;&gt;Lib/bisect.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11bc824c08682acdd000cc4fe3dde10170c0c7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/bz2.py&quot;&gt;Lib/bz2.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c781082220a5a06c38354b7916c73bc7b6c5d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/calendar.py&quot;&gt;Lib/calendar.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e001d2066a4d477d896a094a49918510d714e311" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/cgi.py&quot;&gt;Lib/cgi.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0126b70de7bb61ac0ceff36a547f3ac0b4460ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/cgitb.py&quot;&gt;Lib/cgitb.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d4e9fb9346d6b03824afe45275a258f09b6180" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/chunk.py&quot;&gt;Lib/chunk.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0633ea1f461f22cc41abc7d834122fddaa270a3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/cmd.py&quot;&gt;Lib/cmd.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e998f4ff5a40eadd9c4e5d2177933fda162cf195" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/code.py&quot;&gt;Lib/code.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990fedeee722db7a0229bf55bc8dd63118394f67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/codecs.py&quot;&gt;Lib/codecs.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d154bd9cde237875cb9c1e75b9e0e971d38bcd87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/codeop.py&quot;&gt;Lib/codeop.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b95f118ae5c824c1d34e987c9b226e1a2050282" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/collections/__init__.py&quot;&gt;Lib/collections/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9941807569e23afba496b3e5e7735dfc4206bb80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/colorsys.py&quot;&gt;Lib/colorsys.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b57a92d4d1e7d1bd198a3bc5aa5ad2467cd5eed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/compileall.py&quot;&gt;Lib/compileall.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8c252f06ede6a6a7b5fe646d1cebbf6e987b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/concurrent/futures/thread.py&quot;&gt;Lib/concurrent/futures/thread.py&lt;/a&gt; and &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/concurrent/futures/process.py&quot;&gt;Lib/concurrent/futures/process.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61abb13f6374fefca94b291619e048ddf396668d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/configparser.py&quot;&gt;Lib/configparser.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0df11d6ba6dd1b4474ef2a2c96ff070792c72e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/contextlib.py&quot;&gt;Lib/contextlib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed92b1a54f3a793321252c8338f4154ace957792" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/copy.py&quot;&gt;Lib/copy.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb854659fccc36aed26e71527664acb1dc082b9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/copyreg.py&quot;&gt;Lib/copyreg.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a155e5210ac0b48a2e5c9319aa3e74d3118319" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/crypt.py&quot;&gt;Lib/crypt.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892aaf02accbbd38f807e76d974ff129937beb01" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/csv.py&quot;&gt;Lib/csv.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856915874ca0cc6987791403d92ab3949cf87f17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dataclasses.py&quot;&gt;Lib/dataclasses.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b226da9dfcd8433ab010ad109d51bdb86dbcb25a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/datetime.py&quot;&gt;Lib/datetime.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1a7fc2a98c72dcdc6fad94de588088fb4a644d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/__init__.py&quot;&gt;Lib/dbm/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fb130990a09843aa0d3dbcaf105e28fee98ae1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/dumb.py&quot;&gt;Lib/dbm/dumb.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce5ebe1d29d6eb5cb4280a1593359663f1849e4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/gnu.py&quot;&gt;Lib/dbm/gnu.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b046903cf0f44fbbe12b0d9740fd29ca6c89e166" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dbm/ndbm.py&quot;&gt;Lib/dbm/ndbm.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591895fdd04fa9854d84881fa0623d93fe0361df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/decimal.py&quot;&gt;Lib/decimal.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e27a221130d592913d1c6c72370507cb049a53c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/difflib.py&quot;&gt;Lib/difflib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2148453f6f6524a7d9ba273244f2ad3d35f1900" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dis.py&quot;&gt;Lib/dis.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98568e5436ed9bfd3ee513cafcde88e3bd2c996" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/doctest.py&quot;&gt;Lib/doctest.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca85feb077a8bba390a68950fc083ac9b016765" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/dummy_threading.py&quot;&gt;Lib/dummy_threading.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a77c388106c0360b4f2b80b4d0f4fc3d8e053ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/__init__.py&quot;&gt;Lib/email/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b609ac7020759075ae186e2298cdd2a404cc7146" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/charset.py&quot;&gt;Lib/email/charset.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe4d6b2d583df5e79d89293832e97eec97f79f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/contentmanager.py&quot;&gt;Lib/email/contentmanager.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fcfe94c530f186e5f0c3207cd510372ae4ac688" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/encoders.py&quot;&gt;Lib/email/encoders.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ed540414ae2835f165164526280c181d497d72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/errors.py&quot;&gt;Lib/email/errors.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f4183fd4b30a102297e52b5afdd90afae382ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/generator.py&quot;&gt;Lib/email/generator.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edaaadf0f4871296a7545d27686eb474c3dfcf7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/header.py&quot;&gt;Lib/email/header.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4ec5ff0da5cdf86a6fa1ad3959b9cd43088be2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/headerregistry.py&quot;&gt;Lib/email/headerregistry.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc77642686ee8537bc409dbcc44d58a52902b156" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/iterators.py&quot;&gt;Lib/email/iterators.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aba30f51cb417a970d755824f223cde345f39d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/message.py&quot;&gt;Lib/email/message.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481c83a34bf024a4ed19b3a18054c8554fcedc7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/mime/&quot;&gt;Lib/email/mime/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6b1d76dc581fce2d9970ac3b8d875e8bc51fd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/parser.py&quot;&gt;Lib/email/parser.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fa4a91936b7a4912ddd9fc90d0322490b47118" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/policy.py&quot;&gt;Lib/email/policy.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bd8c132f62e08e81565f89d57cd14f7d7dba65" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/email/utils.py&quot;&gt;Lib/email/utils.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee13879fd69b8b84127ff65a767a56dc2f7a5ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/enum.py&quot;&gt;Lib/enum.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31278fb777c23b763d39ca5a3a29f97f666975b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/filecmp.py&quot;&gt;Lib/filecmp.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37f8a3e0c34494d3e606c1f67bd40e8ee1b9e76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/fileinput.py&quot;&gt;Lib/fileinput.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a842d885a5e0240a1faca05db38f83fbe2d9f5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/fnmatch.py&quot;&gt;Lib/fnmatch.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7b5e73602e7e24432cce995b13182079ecb6a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/fractions.py&quot;&gt;Lib/fractions.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bdec4174fd9f358de92d35d59526db0ef02275d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/ftplib.py&quot;&gt;Lib/ftplib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15ed107400a5bfbb93a7923397aa6f70412c5e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/functools.py&quot;&gt;Lib/functools.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ca0d772a66c1a72a0d1c2f3b359eaf2543d76a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/getopt.py&quot;&gt;Lib/getopt.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1656ff4c6a86f01b71be7d9898426ef5261d959b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/getpass.py&quot;&gt;Lib/getpass.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea83648059b3d923ad4cd8cea8a6b321ed7dd38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/gettext.py&quot;&gt;Lib/gettext.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6345c0357fecb5904353dd65a6249b826186c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/glob.py&quot;&gt;Lib/glob.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fed861500e10395ae10c60cf3c551f11273dd88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/gzip.py&quot;&gt;Lib/gzip.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc7a73d0f520a9be7e565d420330414915144e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/hashlib.py&quot;&gt;Lib/hashlib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2715615949288dfbd8a2f5e12a56d0789fd05473" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/heapq.py&quot;&gt;Lib/heapq.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb059f74bec375236c651b1c458f691c5e2f78f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/hmac.py&quot;&gt;Lib/hmac.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6558755ee44e079e7e401022b861765eef28ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/html/__init__.py&quot;&gt;Lib/html/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02961fbf485eaf0829e24917a22c128657b48929" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/html/entities.py&quot;&gt;Lib/html/entities.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b632ef5d92d7d5759480b4181e2c1f46764c763" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/html/parser.py&quot;&gt;Lib/html/parser.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c4e1f5e7480678973557413bacb88eeb802297e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/http/__init__.py&quot;&gt;Lib/http/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3023c05070bd87ed26b851608460b8b6215a9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/http/client.py&quot;&gt;Lib/http/client.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c8a29424811261cba2c944642fe67c521a5c49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/http/cookiejar.py&quot;&gt;Lib/http/cookiejar.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b2dbacbd14576b38fca895f185c4e71c38a777" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/http/cookies.py&quot;&gt;Lib/http/cookies.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397d895f144dcf1a4834dec5f3dc104d7acc0e88" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/http/server.py&quot;&gt;Lib/http/server.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4fae7599828fd9d942cb5488667313d7e84c49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/idlelib/&quot;&gt;Lib/idlelib/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d4ffdbabfa6f03f6a9e5b0a733eb9309e3125a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/imaplib.py&quot;&gt;Lib/imaplib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36e101e513db028db1972df097cc96a0601e2d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/imghdr.py&quot;&gt;Lib/imghdr.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbeb089857e841bb261ade211335d7a57d3ac5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/importlib/__init__.py&quot;&gt;Lib/importlib/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20af6f2bdf179ce41ddd104a8daaa94c1425b9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/importlib/abc.py&quot;&gt;Lib/importlib/abc.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e3bf5f5769efebfffb51758f3db35f8af11496" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/importlib/machinery.py&quot;&gt;Lib/importlib/machinery.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8324c7e6bf8e97ec63d319bf9a312ffc4d56d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/importlib/resources.py&quot;&gt;Lib/importlib/resources.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21bccae93af5168294f1ee7dc2635cca28cf026" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/importlib/util.py&quot;&gt;Lib/importlib/util.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9441f9164484173f12873481007829f730308447" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/inspect.py&quot;&gt;Lib/inspect.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940e7cf945661db6aaccb63c051322e3ef2f12c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/io.py&quot;&gt;Lib/io.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e84d528ad97cc41a95a0255abc4a46bc39a944" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/ipaddress.py&quot;&gt;Lib/ipaddress.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceb04f1ad7c15fd5f8aa5eac12b83d644ea09f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/json/__init__.py&quot;&gt;Lib/json/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600bc21947db05cc41b16193401f426d8e18f9a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/json/tool.py&quot;&gt;Lib/json/tool.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12885f8c6dfb1fdb84651563c16d22fd5e25e24d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/keyword.py&quot;&gt;Lib/keyword.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f0a92eb6e01ef79a36c7424cd33a1c784e5190" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/linecache.py&quot;&gt;Lib/linecache.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b159a61e08fc8d49265048c7a69dbf6bb145b8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/locale.py&quot;&gt;Lib/locale.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd40486a32664c1f2db9f819453f51ab1ea656c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/logging/__init__.py&quot;&gt;Lib/logging/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd6c3027e8228c8c2fdcef46f04be6e28f5a86c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/logging/config.py&quot;&gt;Lib/logging/config.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a9f58d350e9150f4f1deab77fd6680484325a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/logging/handlers.py&quot;&gt;Lib/logging/handlers.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605a67213d0ade63ca238247edcae738d8683a71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/lzma.py&quot;&gt;Lib/lzma.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fd5d433a2ad6d604ea5a57317aa55cffaae7ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/mailbox.py&quot;&gt;Lib/mailbox.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a027586b9080a1f881e36e00d122136755b365d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/mailcap.py&quot;&gt;Lib/mailcap.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc9a3c915d870a6a9d75e75e2ce1693f7796c16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/mimetypes.py&quot;&gt;Lib/mimetypes.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5727756056fdb4a4bab41522a6d16f8fe626a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/modulefinder.py&quot;&gt;Lib/modulefinder.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c13050f96868f5c7367a36440cb68846620195c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/msilib/__init__.py&quot;&gt;Lib/msilib/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4de357ae7d204be8fe906601a88c68922db368d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/multiprocessing/&quot;&gt;Lib/multiprocessing/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46ce4ba00988f83348e215dcf37e1e634d533ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/multiprocessing/shared_memory.py&quot;&gt;Lib/multiprocessing/shared_memory.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c1e572623b74ad0cea08ed99df8161e5cb4af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/netrc.py&quot;&gt;Lib/netrc.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968f8059abcc78c343e9103da88e1cf32789c6e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/nntplib.py&quot;&gt;Lib/nntplib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152afe786614a6bcd83835441c8a5656fdb2afb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/numbers.py&quot;&gt;Lib/numbers.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6131c6b5b480e988224fccabc362d0c3c3427f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/operator.py&quot;&gt;Lib/operator.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168910911f1a69039b109bdc5721859dcee78b8e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/os.py&quot;&gt;Lib/os.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad8fe90851a38fde894c4852fa1a4f427212b2c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pathlib.py&quot;&gt;Lib/pathlib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d708b507523804fc04aed250b085bf7e2a2647" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pdb.py&quot;&gt;Lib/pdb.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af9e850aed52273222ee56cd2de1c56c625e1ad6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pickle.py&quot;&gt;Lib/pickle.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68984504d9579753b6d2224259e505ee6739cdd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pickletools.py&quot;&gt;Lib/pickletools.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cf9d009e22df6a5f753538c0c529b624ec1b23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pipes.py&quot;&gt;Lib/pipes.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda42b57c4dcfe3e32ee8b0d4a47ee4994908736" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pkgutil.py&quot;&gt;Lib/pkgutil.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f5ce2bd66a2fc3c9622a23b330c5f800736a80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/platform.py&quot;&gt;Lib/platform.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7b1cd5a187bdb12e6f6abb1a91ccedc1e6f4ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/plistlib.py&quot;&gt;Lib/plistlib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7338c702c6e6dec56bade010165e0f8dde439bf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/poplib.py&quot;&gt;Lib/poplib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32eb667629946c1db7c1548fb3992ca62ec94cec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/posixpath.py&quot;&gt;Lib/posixpath.py&lt;/a&gt; (for POSIX) and &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/ntpath.py&quot;&gt;Lib/ntpath.py&lt;/a&gt; (for Windows NT).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4a463b3a0b3274f60ea93989ab8e6dd0cf31f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pprint.py&quot;&gt;Lib/pprint.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f481bdf54215ca12aa6df6a5dca265697629e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/profile.py&quot;&gt;Lib/profile.py&lt;/a&gt; and &lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pstats.py&quot;&gt;Lib/pstats.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f0342b3a92ce5f63f5e1a6f097e9a1da351262" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pty.py&quot;&gt;Lib/pty.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="179ee42e5e39f165bda9bc982ff51dced96b36d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/py_compile.py&quot;&gt;Lib/py_compile.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a84053c9008edabb54121648b24b4c4c074417d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pyclbr.py&quot;&gt;Lib/pyclbr.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20a960a9a50e629fffd0ea2b354bf3a2cbf8e52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/pydoc.py&quot;&gt;Lib/pydoc.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed722fa6bb6d0e2dd38854ebfd00d1778e96ac97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/queue.py&quot;&gt;Lib/queue.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a9a5ee869c6c0a467d84fa17c1e6c0526e4972" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/quopri.py&quot;&gt;Lib/quopri.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7181c3f1d3a64036c8eebf21334b772f3f45a57a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/random.py&quot;&gt;Lib/random.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67ca553d2f9c02b3673d7ed9cb52f909421e389" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/re.py&quot;&gt;Lib/re.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9430cd6958663e640cb46b7f701ad35f9de17cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/reprlib.py&quot;&gt;Lib/reprlib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f89abb3a884310420747f0b39dbf01b5eafbb4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/rlcompleter.py&quot;&gt;Lib/rlcompleter.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995bac69716195919239486f861a8d2f70683445" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/runpy.py&quot;&gt;Lib/runpy.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5682803c9aea2c814fb5487c85fd4a24b02db9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/sched.py&quot;&gt;Lib/sched.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82f5133884942b1fb2877b35a5b717cbf0ab0b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/secrets.py&quot;&gt;Lib/secrets.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e68244782487f07013cf49fe5198bb633c459e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/selectors.py&quot;&gt;Lib/selectors.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7323adfc94951913bd764b77dfd2a6c1b619f23d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/shelve.py&quot;&gt;Lib/shelve.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e64d862c248d56d61e561ba7225f37928d1737" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/shlex.py&quot;&gt;Lib/shlex.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17951c53c499879bdce05af1ed90a448c7539035" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/shutil.py&quot;&gt;Lib/shutil.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065d5c8674f9b7c7fa369b30dc0e573c3949943c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/site.py&quot;&gt;Lib/site.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe261019d9fb5263eecacb6fbc1027a522b0945" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/smtpd.py&quot;&gt;Lib/smtpd.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1d0a8418568270ff67b47c086e872403d6233c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/smtplib.py&quot;&gt;Lib/smtplib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483fa27c8d3bf93738921f5e0ea6ebe4c4de58ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/sndhdr.py&quot;&gt;Lib/sndhdr.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e6281049cd8ec5d0837ec302de8b4fb4f192d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/socket.py&quot;&gt;Lib/socket.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e856775762aace3a72f828477f4a1502c663e272" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/socketserver.py&quot;&gt;Lib/socketserver.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5210bc6f7efda353fb5c417ac57c7cfd1bfbfc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/sqlite3/&quot;&gt;Lib/sqlite3/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79006cca5bc665d86c3372f5eb94ee49738fa7b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/ssl.py&quot;&gt;Lib/ssl.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86e9df3fa6f560653ea472a5fe5912ca1dab613" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/stat.py&quot;&gt;Lib/stat.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92372b326e4f85d9de8075df7e21a586f89cebe1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/statistics.py&quot;&gt;Lib/statistics.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bec2c03b7b31db99f4c0412835dc5e3fce6c2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/string.py&quot;&gt;Lib/string.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de5eccd4b8c09b3947d0f6405cd9edede089812" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/stringprep.py&quot;&gt;Lib/stringprep.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9936b1dde3337631a1322b95ec2b109b41e804c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/struct.py&quot;&gt;Lib/struct.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ea89b07829a3f946a0396855bbc06a42244594" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/subprocess.py&quot;&gt;Lib/subprocess.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c610460210deb8bbf6bdd8b43080d025a4a8a421" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/symbol.py&quot;&gt;Lib/symbol.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ccb2e79bac1961c0e6b7f9a7de6b914c164962" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/symtable.py&quot;&gt;Lib/symtable.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823bda82b7cacc376cfdbe500ab51de374ee4673" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/sysconfig.py&quot;&gt;Lib/sysconfig.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54abe90045c8c8b69472bf6f9b90ca114d2d4714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/tabnanny.py&quot;&gt;Lib/tabnanny.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a65f4e9d26b30f95b85645ac085f78c6de1838" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/tarfile.py&quot;&gt;Lib/tarfile.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f72c2317aa57d409fffe64e610a42ad1be972a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/telnetlib.py&quot;&gt;Lib/telnetlib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41c70f3d3fccd88db7a0823f43ae7f62479f0ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/tempfile.py&quot;&gt;Lib/tempfile.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c93b05fe2bc0d17bdb88b354042ca25720ea4c3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/textwrap.py&quot;&gt;Lib/textwrap.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25eae9e1d21ce6439523ae102a2b7c5202b2a2b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/threading.py&quot;&gt;Lib/threading.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef4a0925ce5e419f2f5f0adf2bae9db2906fcd3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/timeit.py&quot;&gt;Lib/timeit.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d382784eebe94299554ae96a36000f2a39ea89b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/tkinter/__init__.py&quot;&gt;Lib/tkinter/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfa7d6b68e5cdad9be498b750219f65137f210b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/tkinter/scrolledtext.py&quot;&gt;Lib/tkinter/scrolledtext.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f4c5420d3f8d718e3c8310261b31e5aaf93b05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/tkinter/tix.py&quot;&gt;Lib/tkinter/tix.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33e349def033e7bf5847c5e5cbd1741a6d4e48b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/tkinter/ttk.py&quot;&gt;Lib/tkinter/ttk.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03df664b72e920ce86fe9d9803fdbe42aab251f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/token.py&quot;&gt;Lib/token.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8d3842b0f40462bfbfccb9cb4d1d30be53a9b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/tokenize.py&quot;&gt;Lib/tokenize.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9760ac3b08300e4870fcc9d332fe5cbc4e13223" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/trace.py&quot;&gt;Lib/trace.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6219f9170acfbb14bdc07345ad16ac693530910" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/traceback.py&quot;&gt;Lib/traceback.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5456f5086461c109b2b3b06ad3f181cf43301c99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/tracemalloc.py&quot;&gt;Lib/tracemalloc.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db132841957d6334cc4c717d09fb106125cd377f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/tty.py&quot;&gt;Lib/tty.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afdbeb10d677c6c36308b7022e05e4e784d465d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/turtle.py&quot;&gt;Lib/turtle.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf5ae5288dda38de4f4d4e370f929e2add6377a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/types.py&quot;&gt;Lib/types.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90c33ff89ec4ac039b588cddc7ceeb9ae7191ca2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/typing.py&quot;&gt;Lib/typing.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20747835bd5adc09fce302c662266074bb7e8f53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/unittest/__init__.py&quot;&gt;Lib/unittest/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a94ed7479886928730a16762faa0d80ffc7d123" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/unittest/mock.py&quot;&gt;Lib/unittest/mock.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55206b0c68fa823c15e2475bdb681c2874148c3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/urllib/&quot;&gt;Lib/urllib/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7a6c8899a2b1ad511b5a88f8863fd223f4d247" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/urllib/error.py&quot;&gt;Lib/urllib/error.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18cb5361cb115ce612b6406d275a939e1d0fdec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/urllib/parse.py&quot;&gt;Lib/urllib/parse.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ece79d4c1f0bd0982ac6919f0c5d431cf40f8ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/urllib/request.py&quot;&gt;Lib/urllib/request.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d953c086a3ea766d3dc11569c306944ad82fa2eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/urllib/robotparser.py&quot;&gt;Lib/urllib/robotparser.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e70ccdfa976533e6d5fb4d323a589b1366dc2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/uu.py&quot;&gt;Lib/uu.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14224ce39151bd6c40258dcd12ffc712d5a1a781" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/uuid.py&quot;&gt;Lib/uuid.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b813890f586b10a0f986ab4a46075c20fbddd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/venv/&quot;&gt;Lib/venv/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2042ebbc7c8e94e9c994f91d2e84de0ad7269264" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/warnings.py&quot;&gt;Lib/warnings.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f85409125a02164af6a11825446ff1cf4daf229" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/wave.py&quot;&gt;Lib/wave.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5eb7aefa14eee65ce382a2e31d1bb6b3ad0bfd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/weakref.py&quot;&gt;Lib/weakref.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea067e9febc0ea23e755fcfaac521cb8b49a2b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/webbrowser.py&quot;&gt;Lib/webbrowser.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c407e94015fd4a7c1895ad15ade7f9dff8d81d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xdrlib.py&quot;&gt;Lib/xdrlib.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391a7a046e1cb3e0bad162190727cc8ecdf5a5d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xml/&quot;&gt;Lib/xml/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265d922c8b6b018ebcdeb7b8e2b3062de410aae2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xml/dom/__init__.py&quot;&gt;Lib/xml/dom/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4b2d21641936a778e734db2e0306428e294049" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xml/dom/minidom.py&quot;&gt;Lib/xml/dom/minidom.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bba77c9b279815c1c38d6054144164f6343558" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xml/dom/pulldom.py&quot;&gt;Lib/xml/dom/pulldom.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e5be932f4b9b9e6855cba1d1c479b05f0638be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xml/etree/ElementTree.py&quot;&gt;Lib/xml/etree/ElementTree.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc17c7063fa1a7aa9f2cef293b00880ecfe1be1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xml/sax/__init__.py&quot;&gt;Lib/xml/sax/__init__.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc12d6e5339753f82440171f48c367e77354dcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xml/sax/handler.py&quot;&gt;Lib/xml/sax/handler.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680e467d178fc2cf187e35225a875702222db151" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xml/sax/saxutils.py&quot;&gt;Lib/xml/sax/saxutils.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ccff58cbef85550279c218d7dfd7f7447ab8912" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xml/sax/xmlreader.py&quot;&gt;Lib/xml/sax/xmlreader.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce40b692a1b9ec7f691e43a393e0043686a5ccb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xmlrpc/client.py&quot;&gt;Lib/xmlrpc/client.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64f7b2b8f8bdc41a1bbb8e23a3e80a98b099dece" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/xmlrpc/server.py&quot;&gt;Lib/xmlrpc/server.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb2ae24bb9f4a72833f21a2fac55767482f5b51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/zipapp.py&quot;&gt;Lib/zipapp.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92499bea3656d9443b756261007b21dd180b87e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/zipfile.py&quot;&gt;Lib/zipfile.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139484a30b27e977e650ea4b08bb07ad6a6486f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Source code:&lt;/strong&gt;&lt;a href=&quot;https://github.com/python/cpython/tree/3.8/Lib/zipimport.py&quot;&gt;Lib/zipimport.py&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c737343a5372510b09e9559c0adb03cbd6d9d690" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Subclassing requirements:&lt;/strong&gt; Subclasses of &lt;a href=&quot;#collections.UserList&quot;&gt;&lt;code&gt;UserList&lt;/code&gt;&lt;/a&gt; are expected to offer a constructor which can be called with either no arguments or one argument. List operations which return a new sequence attempt to create an instance of the actual implementation class. To do so, it assumes that the constructor can be called with a single parameter, which is a sequence object used as a data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2683001a642fcc8f82e0d560b6279162e644cf97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLS&lt;/strong&gt;&lt;a href=&quot;#id9&quot; id=&quot;id1&quot;&gt;3&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;TLS&lt;/strong&gt;&lt;a href=&quot;#id9&quot; id=&quot;id1&quot;&gt;3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d3e9b7ca918a0ac123a933c9cb44169c9ca2ad04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLSv1.1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TLSv1.1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="491554c170a78578c317f00d4a56dcb0f4aad45f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLSv1.2&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TLSv1.2&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2986cfa675737a0757a0267ea99bebf9512661e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLSv1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;TLSv1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7cb500bffb5c1a2f2f1abcc906a9f85b4fbd035" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This module is automatically imported during initialization.&lt;/strong&gt; The automatic import can be suppressed using the interpreter&amp;rsquo;s &lt;a href=&quot;https://docs.python.org/3.8/using/cmdline.html#id3&quot;&gt;&lt;code&gt;-S&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34307caacaf4be2b0e0102caf10cb23542e5ba6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Timing:&lt;/strong&gt; The basic Ratcliff-Obershelp algorithm is cubic time in the worst case and quadratic time in the expected case. &lt;a href=&quot;#difflib.SequenceMatcher&quot;&gt;&lt;code&gt;SequenceMatcher&lt;/code&gt;&lt;/a&gt; is quadratic time for the worst case and has expected-case behavior dependent in a complicated way on how many elements the sequences have in common; best case time is linear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9614f448d9567882a91b6f28e26bdfbbeedf8c9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unary operations&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c987670962596b797107056cf7d472a0501aefcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unix&lt;/strong&gt;: &lt;code&gt;wait(object_list, timeout)&lt;/code&gt; almost equivalent &lt;code&gt;select.select(object_list, [], [], timeout)&lt;/code&gt;. The difference is that, if &lt;a href=&quot;select#select.select&quot;&gt;&lt;code&gt;select.select()&lt;/code&gt;&lt;/a&gt; is interrupted by a signal, it can raise &lt;a href=&quot;exceptions#OSError&quot;&gt;&lt;code&gt;OSError&lt;/code&gt;&lt;/a&gt; with an error number of &lt;code&gt;EINTR&lt;/code&gt;, whereas &lt;a href=&quot;#multiprocessing.connection.wait&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt; will not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5485b1dbdbea11ca06520cf9e9b0834f63c79bb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Vulnerable&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Vulnerable&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2f225de10e7f7938ca0b9608e58d1024c23d160" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; this will check only the presence of the required methods, not their type signatures!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6975783ad4a8a5fe0beaab44743838f2e3bd58a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Windows&lt;/strong&gt;: An item in &lt;em&gt;object_list&lt;/em&gt; must either be an integer handle which is waitable (according to the definition used by the documentation of the Win32 function &lt;code&gt;WaitForMultipleObjects()&lt;/code&gt;) or it can be an object with a &lt;code&gt;fileno()&lt;/code&gt; method which returns a socket handle or pipe handle. (Note that pipe handles and socket handles are &lt;strong&gt;not&lt;/strong&gt; waitable handles.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664b92d7517bae426b50c7ec531cb50b44d7624f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;add&lt;/strong&gt; &amp;ndash; &lt;code&gt;True&lt;/code&gt; or &lt;code&gt;False&lt;/code&gt; &amp;ndash; if &lt;code&gt;True&lt;/code&gt;, a new binding will be added, otherwise it will replace a former binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e94de75543894cbd3c5f58661af052477f47278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;align&lt;/strong&gt; &amp;ndash; one of the strings &amp;ldquo;left&amp;rdquo;, &amp;ldquo;center&amp;rdquo; or right&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dfcb6e6c211814fd54536779be56b94f338eee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;angle&lt;/strong&gt; &amp;ndash; a number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1109a062ce098d5125eb9a19948f6552a0759b97" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;angle&lt;/strong&gt; &amp;ndash; a number (integer or float)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08912e8a482fd0895297f7d2a103bcebb3f461fe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;angle&lt;/strong&gt; &amp;ndash; a number (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ead2ee36d1ce0536e39961f30ea2422a9fa6e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;arg&lt;/strong&gt; &amp;ndash; object to be written to the TurtleScreen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e47485446994e50fb9e2f5bc01c55a8e22dcb8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;args&lt;/strong&gt; &amp;ndash; Variable data to merge into the &lt;em&gt;msg&lt;/em&gt; argument to obtain the event description.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a303b2b004f2b0a14dd92c85d22a1760aeb9c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;args&lt;/strong&gt; &amp;ndash; a color string or three numbers in the range 0..colormode or a 3-tuple of such numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba4003c77e287f42c17f1b64c92eb5f04dd0949" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;bg&lt;/strong&gt; &amp;ndash; colorstring or color-tuple, new background color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9844d53fb1b77dbc4916bff7d278f0185d17e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;btn&lt;/strong&gt; &amp;ndash; number of the mouse-button, defaults to 1 (left mouse button)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5458c8a4bf71fa9c96b52e1d33b615ba4cb8bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;canvas&lt;/strong&gt; &amp;ndash; a &lt;code&gt;tkinter.Canvas&lt;/code&gt;, a &lt;a href=&quot;#turtle.ScrolledCanvas&quot;&gt;&lt;code&gt;ScrolledCanvas&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;#turtle.TurtleScreen&quot;&gt;&lt;code&gt;TurtleScreen&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a173e61064bc2565fade94d3d5499c4fb0822c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;canvheight&lt;/strong&gt; &amp;ndash; positive integer, new height of canvas in pixels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5aabd86a14615d720c880a8a8648c7188dc5480" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;canvwidth&lt;/strong&gt; &amp;ndash; positive integer, new width of canvas in pixels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b969357f4d904330ef66001d5e7f826a1ae510f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cmode&lt;/strong&gt; &amp;ndash; one of the values 1.0 or 255</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3619863f74f145385637a77671d27440e8cf12f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;color&lt;/strong&gt; &amp;ndash; a colorstring or a numeric color tuple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df7719e41d3af43fd5b0ef6a7cd727df6838d11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cv&lt;/strong&gt; &amp;ndash; a &lt;code&gt;tkinter.Canvas&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc779d07ad9a3ba99c5fd0fbc5e42d7326a92968" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;default&lt;/strong&gt; &amp;ndash; number (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f772a2e372ff94b064ac054d457ca3c96d2d79ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;default_name&lt;/strong&gt; &amp;ndash; The default name for the log file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88fe825927eb07e85e7d6b649391e99ba31bd69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;defaults&lt;/strong&gt; &amp;ndash; Defaults to be passed to the ConfigParser can be specified in this argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa323700f8e9e6dc2f17b99ff93dd79b6d6975bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;delay&lt;/strong&gt; &amp;ndash; nonnegative integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9187ec0be2ca0f8805b4a896bfb22d773fcfe675" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;delay&lt;/strong&gt; &amp;ndash; positive integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393494e0e07ac19080e4d60241267482f28603b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dest&lt;/strong&gt; &amp;ndash; The destination filename. This is normally what the source is rotated to, e.g. &amp;lsquo;test.log.1&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da292b8f6bf90e4f9b546501ef7c0a0269cfd2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;disable_existing_loggers&lt;/strong&gt; &amp;ndash; If specified as &lt;code&gt;False&lt;/code&gt;, loggers which exist when this call is made are left enabled. The default is &lt;code&gt;True&lt;/code&gt; because this enables old behaviour in a backward-compatible way. This behaviour is to disable any existing non-root loggers unless they or their ancestors are explicitly named in the logging configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a615d8c4ecc3cacb6f162812beddb585ac68d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;distance&lt;/strong&gt; &amp;ndash; a number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aecd4d3d2ae3f7f0ae51de27c96d83e237f8b6da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;distance&lt;/strong&gt; &amp;ndash; a number (integer or float)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c066ef6faee9c891e79c32d88c980463ef2f0b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;exc_info&lt;/strong&gt; &amp;ndash; An exception tuple with the current exception information, or &lt;code&gt;None&lt;/code&gt; if no exception information is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06ab0a865edf6fb54c736c89c7f08b57a388687" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;extent&lt;/strong&gt; &amp;ndash; a number (or &lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eaacfad698e7c77a5b046849056856d58b5b1de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;factory&lt;/strong&gt; &amp;ndash; The factory callable to be used to instantiate a log record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a329e3b04700396e08c86332045160e6ecfb34dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;filename&lt;/strong&gt; &amp;ndash; a string, used as filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81615e72d8b94d11a20431aaae260ce918dbb16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fill&lt;/strong&gt; &amp;ndash; a color the &lt;em&gt;poly&lt;/em&gt; will be filled with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d39149d0a4d1446b2f4f393e8ee80978c3272dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fname&lt;/strong&gt; &amp;ndash; A filename, or a file-like object, or an instance derived from &lt;a href=&quot;configparser#configparser.RawConfigParser&quot;&gt;&lt;code&gt;RawConfigParser&lt;/code&gt;&lt;/a&gt;. If a &lt;code&gt;RawConfigParser&lt;/code&gt;-derived instance is passed, it is used as is. Otherwise, a &lt;code&gt;Configparser&lt;/code&gt; is instantiated, and the configuration read by it from the object passed in &lt;code&gt;fname&lt;/code&gt;. If that has a &lt;a href=&quot;readline#module-readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; method, it is assumed to be a file-like object and read using &lt;a href=&quot;configparser#configparser.ConfigParser.read_file&quot;&gt;&lt;code&gt;read_file()&lt;/code&gt;&lt;/a&gt;; otherwise, it is assumed to be a filename and passed to &lt;a href=&quot;configparser#configparser.ConfigParser.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae11672777cbbf60cfd266e568de1451c653674" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;font&lt;/strong&gt; &amp;ndash; a triple (fontname, fontsize, fonttype)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9f0829d9c23b95adda67aa6e27960296c16aa4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fullcircle&lt;/strong&gt; &amp;ndash; a number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939ea021167590a728dcec936e2111bd53bc2c00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fun&lt;/strong&gt; &amp;ndash; a function with no arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c53dd8d0a0b5e6f92a3a3401470be8ddc978944" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fun&lt;/strong&gt; &amp;ndash; a function with no arguments or &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149f5ef6b7858bfc3ad16db03d9812e0aeb8f583" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fun&lt;/strong&gt; &amp;ndash; a function with two arguments which will be called with the coordinates of the clicked point on the canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e800096f03356d3252945bad724908f47428cf83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;func&lt;/strong&gt; &amp;ndash; The name of the function or method from which the logging call was invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c904b9447713e53d5c676e0fdedf62d19aeb91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;handle_list&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;handle_list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a676e0dee2a0361d0c0ce12c3e8c451e6e1ac595" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;height&lt;/strong&gt; &amp;ndash; if an integer, the height in pixels, if a float, a fraction of the screen; default is 75% of screen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5d64a86cd9bd08971614505b7bfb835806c488" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;key&lt;/strong&gt; &amp;ndash; a string: key (e.g. &amp;ldquo;a&amp;rdquo;) or key-symbol (e.g. &amp;ldquo;space&amp;rdquo;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfeba1329b518b71e5e30a46a17868969e217e83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;level&lt;/strong&gt; &amp;ndash; The numeric level of the logging event (one of DEBUG, INFO etc.) Note that this is converted to &lt;em&gt;two&lt;/em&gt; attributes of the LogRecord: &lt;code&gt;levelno&lt;/code&gt; for the numeric value and &lt;code&gt;levelname&lt;/code&gt; for the corresponding level name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef418d1b7e05ef4d698fb95782d2ba6eac566846" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;lineno&lt;/strong&gt; &amp;ndash; The line number in the source file where the logging call was made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1126b90440a04d1f5bc9f2eda3e7274d8f3aebbb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;llx&lt;/strong&gt; &amp;ndash; a number, x-coordinate of lower left corner of canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab99ae4c4bfcbec200a82dfc163a756dab96cb4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;lly&lt;/strong&gt; &amp;ndash; a number, y-coordinate of lower left corner of canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d9d1a4f15372265234972c18a9196a81c61f9c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;master&lt;/strong&gt; &amp;ndash; some Tkinter widget to contain the ScrolledCanvas, i.e. a Tkinter-canvas with scrollbars added</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf4c1659141209b45cda20214425565736aa933" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;maxval&lt;/strong&gt; &amp;ndash; number (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3608b6e952019ed40123d2759c50b043ae34a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;minval&lt;/strong&gt; &amp;ndash; number (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bd3babee195ef186b585d4dffe60302e1580ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mode&lt;/strong&gt; &amp;ndash; one of the strings &amp;ldquo;standard&amp;rdquo;, &amp;ldquo;logo&amp;rdquo; or &amp;ldquo;world&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d8c9fe337716b98c8989bd8e4dcb16ea9aae4a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;move&lt;/strong&gt; &amp;ndash; True/False</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d095b10f2a64a48d5fa54b06a432bb829c0e4ef7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;msg&lt;/strong&gt; &amp;ndash; The event description message, possibly a format string with placeholders for variable data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe7b1457cc49ff1b0076505f826801e615fd3aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;n&lt;/strong&gt; &amp;ndash; an integer (or &lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3304be4a273806aa514f2512eb3ac34f74bf51dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;n&lt;/strong&gt; &amp;ndash; nonnegative integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3da7239009d11bcbb6076c644de1ba2dbe82433" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; &amp;ndash; The name of the logger used to log the event represented by this LogRecord. Note that this name will always have this value, even though it may be emitted by a handler attached to a different (ancestor) logger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d11525e6963eb33bc9bb622e0e1bae15e02c521" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; &amp;ndash; a string which is a valid shapename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d40a31bf33ed292dad94c628d7f431735a94247" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt; and &lt;strong&gt;package&lt;/strong&gt; work the same as for &lt;code&gt;import_module()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba523b3e659a6a825de1fe9ff2cee17480611ae7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;not following symlinks:&lt;/strong&gt; If &lt;em&gt;follow_symlinks&lt;/em&gt; is &lt;code&gt;False&lt;/code&gt;, and the last element of the path to operate on is a symbolic link, the function will operate on the symbolic link itself rather than the file pointed to by the link. (For POSIX systems, Python will call the &lt;code&gt;l...&lt;/code&gt; variant of the function.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c3211ff76304f973aa25c0655c89fdb7f0e135" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;outline&lt;/strong&gt; &amp;ndash; a color for the poly&amp;rsquo;s outline (if given)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43671623d484d9ceb20bd1f70ea1c2f45329e6e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;outline&lt;/strong&gt; &amp;ndash; positive number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d1ef8672fbd96b5c77106deb733ec9c21f4172" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pathname&lt;/strong&gt; &amp;ndash; The full pathname of the source file where the logging call was made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d27bf08ce62436dc37a73c977b013504967038" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;paths relative to directory descriptors:&lt;/strong&gt; If &lt;em&gt;dir_fd&lt;/em&gt; is not &lt;code&gt;None&lt;/code&gt;, it should be a file descriptor referring to a directory, and the path to operate on should be relative; path will then be relative to that directory. If the path is absolute, &lt;em&gt;dir_fd&lt;/em&gt; is ignored. (For POSIX systems, Python will call the variant of the function with an &lt;code&gt;at&lt;/code&gt; suffix and possibly prefixed with &lt;code&gt;f&lt;/code&gt; (e.g. call &lt;code&gt;faccessat&lt;/code&gt; instead of &lt;code&gt;access&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20e721cc2b9f11bf0339ac5a04a86dc9c6332d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pen&lt;/strong&gt; &amp;ndash; a dictionary with some or all of the below listed keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03269c075a8ffcd524539517ff93ba351fd7165a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pendict&lt;/strong&gt; &amp;ndash; one or more keyword-arguments with the below listed keys as keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95916cdf2283eeb81c9559d29534c79d4335b0fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;picname&lt;/strong&gt; &amp;ndash; a string, name of a gif-file or &lt;code&gt;&quot;nopic&quot;&lt;/code&gt;, or &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="785a276a71267849be4ce9ff14529098348523aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;poly&lt;/strong&gt; &amp;ndash; a polygon, i.e. a tuple of pairs of numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7d91a72dc18dbd069f0523f7a1bc09afbe2432" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prompt&lt;/strong&gt; &amp;ndash; string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a02c74d3c375e0d39a08db42b8e18e822ee6a27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pydoc -b&lt;/strong&gt; will start the server and additionally open a web browser to a module index page. Each served page has a navigation bar at the top where you can &lt;em&gt;Get&lt;/em&gt; help on an individual item, &lt;em&gt;Search&lt;/em&gt; all modules with a keyword in their synopsis line, and go to the &lt;em&gt;Module index&lt;/em&gt;, &lt;em&gt;Topics&lt;/em&gt; and &lt;em&gt;Keywords&lt;/em&gt; pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f910a1d03e348e3661574c248e48a63780276f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;pydoc -n &amp;lt;hostname&amp;gt;&lt;/strong&gt; will start the server listening at the given hostname. By default the hostname is &amp;lsquo;localhost&amp;rsquo; but if you want the server to be reached from other machines, you may want to change the host name that the server responds to. During development this is especially useful if you want to run pydoc from within a container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1143247a33e9e4d3fefa3bdd3d9609937e068568" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;radius&lt;/strong&gt; &amp;ndash; a number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02316ab81c9dde50cccfbddf8e62245e161d09f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;rmode&lt;/strong&gt; &amp;ndash; one of the strings &amp;ldquo;auto&amp;rdquo;, &amp;ldquo;user&amp;rdquo;, &amp;ldquo;noresize&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127576c6a1efa26597bd73f1978f52a6f87b31d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;shear&lt;/strong&gt; &amp;ndash; number (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9100dd8a07ae3ce6c46842411deb32615ac5b0c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;sinfo&lt;/strong&gt; &amp;ndash; A text string representing stack information from the base of the stack in the current thread, up to the logging call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b98b2700ab37c639f4dad0ba687d9f2a1c0d62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;size&lt;/strong&gt; &amp;ndash; an integer &amp;gt;= 1 (if given)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378b8b01479a5477dd0975d41ce83baf6d9473a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;size&lt;/strong&gt; &amp;ndash; an integer or &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb08fc1f061d46210a5a39fe56126cc503d3b7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;source&lt;/strong&gt; &amp;ndash; The source filename. This is normally the base filename, e.g. &amp;lsquo;test.log&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de33ce2e439472c99d1f0e700e28af83d35f9d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;specifying a file descriptor:&lt;/strong&gt; Normally the &lt;em&gt;path&lt;/em&gt; argument provided to functions in the &lt;a href=&quot;#module-os&quot;&gt;&lt;code&gt;os&lt;/code&gt;&lt;/a&gt; module must be a string specifying a file path. However, some functions now alternatively accept an open file descriptor for their &lt;em&gt;path&lt;/em&gt; argument. The function will then operate on the file referred to by the descriptor. (For POSIX systems, Python will call the variant of the function prefixed with &lt;code&gt;f&lt;/code&gt; (e.g. call &lt;code&gt;fchdir&lt;/code&gt; instead of &lt;code&gt;chdir&lt;/code&gt;).)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02cb854b61243b25f8465f84a03ebce81f23355" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;speed&lt;/strong&gt; &amp;ndash; an integer in the range 0..10 or a speedstring (see below)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918e1a38573cf2c21943936fc30d021c3413876e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stampid&lt;/strong&gt; &amp;ndash; an integer, must be return value of previous &lt;a href=&quot;#turtle.stamp&quot;&gt;&lt;code&gt;stamp()&lt;/code&gt;&lt;/a&gt; call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6a22ed92cba364c996a8b27480595eeb765b2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;startx&lt;/strong&gt; &amp;ndash; if positive, starting position in pixels from the left edge of the screen, if negative from the right edge, if &lt;code&gt;None&lt;/code&gt;, center window horizontally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f2dac68b23863dd962455561f6faf18f8c49ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;starty&lt;/strong&gt; &amp;ndash; if positive, starting position in pixels from the top edge of the screen, if negative from the bottom edge, if &lt;code&gt;None&lt;/code&gt;, center window vertically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72d16e99e9c0168231936e3dc5b04e04e97723b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;steps&lt;/strong&gt; &amp;ndash; an integer (or &lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdbe37e707ebcfc64b3d5454dfb6d96b685cd39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stream&lt;/strong&gt; &amp;ndash; The stream that the handler should use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cc830275c62b28fadaa39e8262485cb535e10e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stretch_len&lt;/strong&gt; &amp;ndash; positive number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf8db7a01c2af5664690392d52aa71aa2b2f291" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;stretch_wid&lt;/strong&gt; &amp;ndash; positive number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dd20b98fff57343935ad70a6cb54c1aa6cc069" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;t11&lt;/strong&gt; &amp;ndash; a number (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112ad7c45ba967c6ae192a730261f464f6cd6b6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;t12&lt;/strong&gt; &amp;ndash; a number (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eebf5397054fde5d774b0d435f8a5665d49f280" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;t21&lt;/strong&gt; &amp;ndash; a number (optional)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9dcc8dac45a092091199c3fbaab3fecb9beaa7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;t&lt;/strong&gt; &amp;ndash; a number &amp;gt;= 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0753673e4dbbf6d766ceca9f434f2c93248cc2ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;title&lt;/strong&gt; &amp;ndash; string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e12bda62c94c0e7da1317a33ab55468092044ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;titlestring&lt;/strong&gt; &amp;ndash; a string that is shown in the titlebar of the turtle graphics window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62511bc2ffecff70627cee894e691cdd419965e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;to_angle&lt;/strong&gt; &amp;ndash; a number (integer or float)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a9ad0c2cc3dbc0fdc452aa426066fa2892c46d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type_&lt;/strong&gt; &amp;ndash; one of the strings &amp;ldquo;polygon&amp;rdquo;, &amp;ldquo;image&amp;rdquo;, &amp;ldquo;compound&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52791bafbd98faa69f4dc55155cfa7abaa8d0d21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;unittest&lt;/strong&gt; supports these command-line options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32a3ac0af3e49b0e2df3a51e358ce5198883f9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;urx&lt;/strong&gt; &amp;ndash; a number, x-coordinate of upper right corner of canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb1579022862cb4e97ae8899adff6d798db8b4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ury&lt;/strong&gt; &amp;ndash; a number, y-coordinate of upper right corner of canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440811d89483e5f5d08425f315daedd9448a7cf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;width&lt;/strong&gt; &amp;ndash; a positive number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2833688e2f7268d226317f381d73a689b924d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;width&lt;/strong&gt; &amp;ndash; if an integer, a size in pixels, if a float, a fraction of the screen; default is 50% of screen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b758cf4bcfdcce84b7b122b1068cb1c2303a6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; &amp;ndash; a number (integer or float)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56970fd4783bb9d25fdc12f31508d654cd955105" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; &amp;ndash; a number or a pair/vector of numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e607dff3ff31dd3b9cb2306f04b714bb58d6a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;x&lt;/strong&gt; &amp;ndash; a number or a pair/vector of numbers or a turtle instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b605f455b5f2cac0de889772c8c999c00e158f36" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xgettext&lt;/strong&gt;, &lt;strong&gt;pygettext&lt;/strong&gt;, and similar tools generate &lt;code&gt;.po&lt;/code&gt; files that are message catalogs. They are structured human-readable files that contain every marked string in the source code, along with a placeholder for the translated versions of these strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ed40a8d339181331903ece50e38fa3db592e1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; &amp;ndash; a number (integer or float)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a5ae2aeb2858d2fcccc938a9d739c04523c9d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; &amp;ndash; a number if &lt;em&gt;x&lt;/em&gt; is a number, else &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb7877f1e57ed83a47e89edc7686dda3a953fda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;y&lt;/strong&gt; &amp;ndash; a number or &lt;code&gt;None&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="4938627f5816b5ae7fb54cc26ab941d2366748a0" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;handler of last resort&amp;rdquo; is available through this attribute. This is a &lt;a href=&quot;logging.handlers#logging.StreamHandler&quot;&gt;&lt;code&gt;StreamHandler&lt;/code&gt;&lt;/a&gt; writing to &lt;code&gt;sys.stderr&lt;/code&gt; with a level of &lt;code&gt;WARNING&lt;/code&gt;, and is used to handle logging events in the absence of any logging configuration. The end result is to just print the message to &lt;code&gt;sys.stderr&lt;/code&gt;. This replaces the earlier error message saying that &amp;ldquo;no handlers could be found for logger XYZ&amp;rdquo;. If you need the earlier behaviour for some reason, &lt;code&gt;lastResort&lt;/code&gt; can be set to &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f847b707937d2debc981d1a940a55a9b2cbc29e" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;shelf&amp;rdquo; is a persistent, dictionary-like object. The difference with &amp;ldquo;dbm&amp;rdquo; databases is that the values (not the keys!) in a shelf can be essentially arbitrary Python objects &amp;mdash; anything that the &lt;a href=&quot;pickle#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module can handle. This includes most class instances, recursive data types, and objects containing lots of shared sub-objects. The keys are ordinary strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3a682a1a461f5c76aec34cabfcc80c69410c70" translate="yes" xml:space="preserve">
          <source>A (Very) Quick Look at Tcl/Tk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6132c80629a6e4f00ed7c65db1d110105e1785" translate="yes" xml:space="preserve">
          <source>A 32-bit number in big-endian format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fa5b0ca70183819b80ed146583d21d9f4d9cb5" translate="yes" xml:space="preserve">
          <source>A 32-bit number in little-endian format. Equivalent to &lt;a href=&quot;#winreg.REG_DWORD&quot;&gt;&lt;code&gt;REG_DWORD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4bcb6cba74a0de72a6674fcffc97c0e64173fd" translate="yes" xml:space="preserve">
          <source>A 33-element string array that contains the ASCII mnemonics for the thirty-two ASCII control characters from 0 (NUL) to 0x1f (US), in order, plus the mnemonic &lt;code&gt;SP&lt;/code&gt; for the space character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b164fa00122654df3b33365da6b8d92a909c5e" translate="yes" xml:space="preserve">
          <source>A 64-bit number in little-endian format. Equivalent to &lt;a href=&quot;#winreg.REG_QWORD&quot;&gt;&lt;code&gt;REG_QWORD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16026548e63384604304a63f83550ccdab40d6ff" translate="yes" xml:space="preserve">
          <source>A 64-bit number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c7be053b3563917bfdcb97f111887cf2b14b76" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#ast.NodeVisitor&quot;&gt;&lt;code&gt;NodeVisitor&lt;/code&gt;&lt;/a&gt; subclass that walks the abstract syntax tree and allows modification of nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cbdb5091e96554113ea60c9d65b3894a6964f4f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#asyncore.dispatcher&quot;&gt;&lt;code&gt;dispatcher&lt;/code&gt;&lt;/a&gt; subclass which adds simple buffered output capability, useful for simple clients. For more sophisticated usage use &lt;a href=&quot;asynchat#asynchat.async_chat&quot;&gt;&lt;code&gt;asynchat.async_chat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618ac86b8a9b70e414ed21681125871273038cf2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#calendar.Calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object provides several methods that can be used for preparing the calendar data for formatting. This class doesn&amp;rsquo;t do any formatting itself. This is the job of subclasses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2386a42bde5d4776f0cec7236b1fbc495ea25089" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#chunk.Chunk&quot;&gt;&lt;code&gt;Chunk&lt;/code&gt;&lt;/a&gt; object supports the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf3b7abf4a69ad4ea56b226870fcdb2e09207a5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt; instance has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df53351781ccb0e6fd2f3308673935ea96c01e7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt; instance or subclass instance is a line-oriented interpreter framework. There is no good reason to instantiate &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt; itself; rather, it&amp;rsquo;s useful as a superclass of an interpreter class you define yourself in order to inherit &lt;a href=&quot;#cmd.Cmd&quot;&gt;&lt;code&gt;Cmd&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s methods and encapsulate action methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964e36b135de8145caefd7519572c321cd48f050" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; class is provided for quickly linking a number of mappings so they can be treated as a single unit. It is often much faster than creating a new dictionary and running multiple &lt;a href=&quot;stdtypes#dict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e315596b570fa86563e8e66e8ed72d1e4d47d43e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; groups multiple dicts or other mappings together to create a single, updateable view. If no &lt;em&gt;maps&lt;/em&gt; are specified, a single empty dictionary is provided so that a new chain always has at least one mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d5d230952712da1e9b47ecbc6f3c0ab3993ff5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt; incorporates the underlying mappings by reference. So, if one of the underlying mappings gets updated, those changes will be reflected in &lt;a href=&quot;#collections.ChainMap&quot;&gt;&lt;code&gt;ChainMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a69db06db86957b3d0dcb7a992903a56c10827" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;stdtypes#dict&quot;&gt;&lt;code&gt;dict&lt;/code&gt;&lt;/a&gt; subclass for counting hashable objects. It is a collection where elements are stored as dictionary keys and their counts are stored as dictionary values. Counts are allowed to be any integer value including zero or negative counts. The &lt;a href=&quot;#collections.Counter&quot;&gt;&lt;code&gt;Counter&lt;/code&gt;&lt;/a&gt; class is similar to bags or multisets in other languages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e2b57c504775badbfca243abb54c5ae3902e52" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object represents a date (year, month and day) in an idealized calendar, the current Gregorian calendar indefinitely extended in both directions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f08094411b67914f67449fcb06ca7650a4eedc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;d&lt;/em&gt; is aware if both of the following hold:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201497af92db380bdde8c4e002731468e8412d76" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#datetime.datetime&quot;&gt;&lt;code&gt;datetime&lt;/code&gt;&lt;/a&gt; object is a single object containing all the information from a &lt;a href=&quot;#datetime.date&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; object and a &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969e4c818db3a3b04319559cc59480db49bb0b2a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#datetime.time&quot;&gt;&lt;code&gt;time&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;t&lt;/em&gt; is aware if both of the following hold:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0470466602ed8a87c5e16b89e5cfd42d7111a7f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#datetime.timedelta&quot;&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; object represents a duration, the difference between two dates or times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0281ba2e7dbc4e9bd59c9818fdb802c30a59e1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#email.headerregistry.ParameterizedMIMEHeader&quot;&gt;&lt;code&gt;ParameterizedMIMEHeader&lt;/code&gt;&lt;/a&gt; class that handles the &lt;em&gt;Content-Disposition&lt;/em&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a1d097cb84a6bebaf05d5ed01e745ff444d8bf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#email.headerregistry.ParameterizedMIMEHeader&quot;&gt;&lt;code&gt;ParameterizedMIMEHeader&lt;/code&gt;&lt;/a&gt; class that handles the &lt;em&gt;Content-Type&lt;/em&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6227df34c0d66a8e2625821633e563b52077926" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; object encapsulates a set of attributes and methods that control the behavior of various components of the email package during use. &lt;a href=&quot;#email.policy.Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; instances can be passed to various classes and methods in the email package to alter the default behavior. The settable values and their defaults are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541b1cd1ee5155e075811df2ffdd03fc195eb615" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#fileinput.FileInput&quot;&gt;&lt;code&gt;FileInput&lt;/code&gt;&lt;/a&gt; instance can be used as a context manager in the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. In this example, &lt;em&gt;input&lt;/em&gt; is closed after the &lt;code&gt;with&lt;/code&gt; statement is exited, even if an exception occurs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7199cdecdad52a965d22b0bd8503207445a0cad0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#ftplib.FTP&quot;&gt;&lt;code&gt;FTP&lt;/code&gt;&lt;/a&gt; subclass which adds TLS support to FTP as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc4217.html&quot; id=&quot;index-2&quot;&gt;&lt;strong&gt;RFC 4217&lt;/strong&gt;&lt;/a&gt;. Connect as usual to port 21 implicitly securing the FTP control connection before authenticating. Securing the data connection requires the user to explicitly ask for it by calling the &lt;a href=&quot;#ftplib.FTP_TLS.prot_p&quot;&gt;&lt;code&gt;prot_p()&lt;/code&gt;&lt;/a&gt; method. &lt;em&gt;context&lt;/em&gt; is a &lt;a href=&quot;ssl#ssl.SSLContext&quot;&gt;&lt;code&gt;ssl.SSLContext&lt;/code&gt;&lt;/a&gt; object which allows bundling SSL configuration options, certificates and private keys into a single (potentially long-lived) structure. Please read &lt;a href=&quot;ssl#ssl-security&quot;&gt;Security considerations&lt;/a&gt; for best practices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c41b14f3d80daef2bd4361ea6b4ae42780540c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#http.cookiejar.CookieJar&quot;&gt;&lt;code&gt;CookieJar&lt;/code&gt;&lt;/a&gt; which can load cookies from, and perhaps save cookies to, a file on disk. Cookies are &lt;strong&gt;NOT&lt;/strong&gt; loaded from the named file until either the &lt;a href=&quot;#http.cookiejar.FileCookieJar.load&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http.cookiejar.FileCookieJar.revert&quot;&gt;&lt;code&gt;revert()&lt;/code&gt;&lt;/a&gt; method is called. Subclasses of this class are documented in section &lt;a href=&quot;#file-cookie-jar-classes&quot;&gt;FileCookieJar subclasses and co-operation with web browsers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cddbce1cc41d3b1e16a476fa211f6c37e51bba" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt;&lt;code&gt;FileCookieJar&lt;/code&gt;&lt;/a&gt; that can load from and save cookies to disk in format compatible with the libwww-perl library&amp;rsquo;s &lt;code&gt;Set-Cookie3&lt;/code&gt; file format. This is convenient if you want to store cookies in a human-readable file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149ec4f495d4dc13cc906f57e38bc5d13046825a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#http.cookiejar.FileCookieJar&quot;&gt;&lt;code&gt;FileCookieJar&lt;/code&gt;&lt;/a&gt; that can load from and save cookies to disk in the Mozilla &lt;code&gt;cookies.txt&lt;/code&gt; file format (which is also used by the Lynx and Netscape browsers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618daa53df35516c78ec2415b8ca795afd9ad24d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#http.server.BaseHTTPRequestHandler&quot;&gt;&lt;code&gt;BaseHTTPRequestHandler&lt;/code&gt;&lt;/a&gt; instance has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a934f3460313c296f235e5448fb34a05a92e6d2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; has the notion of an &lt;em&gt;element&lt;/em&gt;, which is the atomic memory unit handled by the originating object &lt;em&gt;obj&lt;/em&gt;. For many simple types such as &lt;a href=&quot;#bytes&quot;&gt;&lt;code&gt;bytes&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#bytearray&quot;&gt;&lt;code&gt;bytearray&lt;/code&gt;&lt;/a&gt;, an element is a single byte, but other types such as &lt;a href=&quot;array#array.array&quot;&gt;&lt;code&gt;array.array&lt;/code&gt;&lt;/a&gt; may have bigger elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631f55592011c6846a1358c071f9f4a404d80c3c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#memoryview&quot;&gt;&lt;code&gt;memoryview&lt;/code&gt;&lt;/a&gt; supports slicing and indexing to expose its data. One-dimensional slicing will result in a subview:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2e10d1f62ed55af919333feaa7f88ec36c92e8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#netrc.netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt; instance has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a0087bfee269dce95678ac3b9682473b56562b0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#netrc.netrc&quot;&gt;&lt;code&gt;netrc&lt;/code&gt;&lt;/a&gt; instance or subclass instance encapsulates data from a netrc file. The initialization argument, if present, specifies the file to parse. If no argument is given, the file &lt;code&gt;.netrc&lt;/code&gt; in the user&amp;rsquo;s home directory &amp;ndash; as determined by &lt;a href=&quot;os.path#os.path.expanduser&quot;&gt;&lt;code&gt;os.path.expanduser()&lt;/code&gt;&lt;/a&gt; &amp;ndash; will be read. Otherwise, a &lt;a href=&quot;exceptions#FileNotFoundError&quot;&gt;&lt;code&gt;FileNotFoundError&lt;/code&gt;&lt;/a&gt; exception will be raised. Parse errors will raise &lt;a href=&quot;#netrc.NetrcParseError&quot;&gt;&lt;code&gt;NetrcParseError&lt;/code&gt;&lt;/a&gt; with diagnostic information including the file name, line number, and terminating token. If no argument is specified on a POSIX system, the presence of passwords in the &lt;code&gt;.netrc&lt;/code&gt; file will raise a &lt;a href=&quot;#netrc.NetrcParseError&quot;&gt;&lt;code&gt;NetrcParseError&lt;/code&gt;&lt;/a&gt; if the file ownership or permissions are insecure (owned by a user other than the user running the process, or accessible for read or write by any other user). This implements security behavior equivalent to that of ftp and other programs that use &lt;code&gt;.netrc&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49cc25a79c273a5420f71a38f1f0f2d4b04d7ce" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#pickle.PickleBuffer&quot;&gt;&lt;code&gt;PickleBuffer&lt;/code&gt;&lt;/a&gt; object &lt;em&gt;signals&lt;/em&gt; that the underlying buffer is eligible for out-of-band data transfer. Those objects remain compatible with normal usage of the &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; module. However, consumers can also opt-in to tell &lt;a href=&quot;#module-pickle&quot;&gt;&lt;code&gt;pickle&lt;/code&gt;&lt;/a&gt; that they will handle those buffers by themselves.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cd82909cd1a7c3ba5721334075ca1b0f0c8b66" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#selectors.BaseSelector&quot;&gt;&lt;code&gt;BaseSelector&lt;/code&gt;&lt;/a&gt; is used to wait for I/O event readiness on multiple file objects. It supports file stream registration, unregistration, and a method to wait for I/O events on those streams, with an optional timeout. It&amp;rsquo;s an abstract base class, so cannot be instantiated. Use &lt;a href=&quot;#selectors.DefaultSelector&quot;&gt;&lt;code&gt;DefaultSelector&lt;/code&gt;&lt;/a&gt; instead, or one of &lt;a href=&quot;#selectors.SelectSelector&quot;&gt;&lt;code&gt;SelectSelector&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#selectors.KqueueSelector&quot;&gt;&lt;code&gt;KqueueSelector&lt;/code&gt;&lt;/a&gt; etc. if you want to specifically use an implementation, and your platform supports it. &lt;a href=&quot;#selectors.BaseSelector&quot;&gt;&lt;code&gt;BaseSelector&lt;/code&gt;&lt;/a&gt; and its concrete implementations support the &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-context-manager&quot;&gt;context manager&lt;/a&gt; protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f6891ba806863e7cd76a9dd3d3438215bc13dc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#selectors.SelectorKey&quot;&gt;&lt;code&gt;SelectorKey&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;collections#collections.namedtuple&quot;&gt;&lt;code&gt;namedtuple&lt;/code&gt;&lt;/a&gt; used to associate a file object to its underlying file descriptor, selected event mask and attached data. It is returned by several &lt;a href=&quot;#selectors.BaseSelector&quot;&gt;&lt;code&gt;BaseSelector&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1830b93cf48ea902605817d748af6f71984c5670" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#shelve.Shelf&quot;&gt;&lt;code&gt;Shelf&lt;/code&gt;&lt;/a&gt; object can also be used as a context manager, in which case it will be automatically closed when the &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; block ends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21ffe11a5865bab64e220be31ceec22ee477e69" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; instance has the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623a66052824a0112e0746cbf3b4b292a91c83c0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; instance or subclass instance is a lexical analyzer object. The initialization argument, if present, specifies where to read characters from. It must be a file-/stream-like object with &lt;a href=&quot;io#io.TextIOBase.read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;io#io.TextIOBase.readline&quot;&gt;&lt;code&gt;readline()&lt;/code&gt;&lt;/a&gt; methods, or a string. If no argument is given, input will be taken from &lt;code&gt;sys.stdin&lt;/code&gt;. The second optional argument is a filename string, which sets the initial value of the &lt;a href=&quot;#shlex.shlex.infile&quot;&gt;&lt;code&gt;infile&lt;/code&gt;&lt;/a&gt; attribute. If the &lt;em&gt;instream&lt;/em&gt; argument is omitted or equal to &lt;code&gt;sys.stdin&lt;/code&gt;, this second argument defaults to &amp;ldquo;stdin&amp;rdquo;. The &lt;em&gt;posix&lt;/em&gt; argument defines the operational mode: when &lt;em&gt;posix&lt;/em&gt; is not true (default), the &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; instance will operate in compatibility mode. When operating in POSIX mode, &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; will try to be as close as possible to the POSIX shell parsing rules. The &lt;em&gt;punctuation_chars&lt;/em&gt; argument provides a way to make the behaviour even closer to how real shells parse. This can take a number of values: the default value, &lt;code&gt;False&lt;/code&gt;, preserves the behaviour seen under Python 3.5 and earlier. If set to &lt;code&gt;True&lt;/code&gt;, then parsing of the characters &lt;code&gt;();&amp;lt;&amp;gt;|&amp;amp;&lt;/code&gt; is changed: any run of these characters (considered punctuation characters) is returned as a single token. If set to a non-empty string of characters, those characters will be used as the punctuation characters. Any characters in the &lt;a href=&quot;#shlex.shlex.wordchars&quot;&gt;&lt;code&gt;wordchars&lt;/code&gt;&lt;/a&gt; attribute that appear in &lt;em&gt;punctuation_chars&lt;/em&gt; will be removed from &lt;a href=&quot;#shlex.shlex.wordchars&quot;&gt;&lt;code&gt;wordchars&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#improved-shell-compatibility&quot;&gt;Improved Compatibility with Shells&lt;/a&gt; for more information. &lt;em&gt;punctuation_chars&lt;/em&gt; can be set only upon &lt;a href=&quot;#shlex.shlex&quot;&gt;&lt;code&gt;shlex&lt;/code&gt;&lt;/a&gt; instance creation and can&amp;rsquo;t be modified later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b4b10f7e1e2b966b58c2c6770ff71c3e4e4490" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#sqlite3.Cursor&quot;&gt;&lt;code&gt;Cursor&lt;/code&gt;&lt;/a&gt; instance has the following attributes and methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ce699f5d66c4599f4f325544b9c35e0a9cffd2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#sqlite3.Row&quot;&gt;&lt;code&gt;Row&lt;/code&gt;&lt;/a&gt; instance serves as a highly optimized &lt;a href=&quot;#sqlite3.Connection.row_factory&quot;&gt;&lt;code&gt;row_factory&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;#sqlite3.Connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt; objects. It tries to mimic a tuple in most of its features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5417fa493d80f56d9834e0969ddfecff2953be" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#ssl.TLSVersion&quot;&gt;&lt;code&gt;TLSVersion&lt;/code&gt;&lt;/a&gt; enum member representing the highest supported TLS version. The value defaults to &lt;a href=&quot;#ssl.TLSVersion.MAXIMUM_SUPPORTED&quot;&gt;&lt;code&gt;TLSVersion.MAXIMUM_SUPPORTED&lt;/code&gt;&lt;/a&gt;. The attribute is read-only for protocols other than &lt;a href=&quot;#ssl.PROTOCOL_TLS&quot;&gt;&lt;code&gt;PROTOCOL_TLS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ssl.PROTOCOL_TLS_CLIENT&quot;&gt;&lt;code&gt;PROTOCOL_TLS_CLIENT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#ssl.PROTOCOL_TLS_SERVER&quot;&gt;&lt;code&gt;PROTOCOL_TLS_SERVER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3d6bbddb5b0f0a9a352f5b5946a2a713fd97ff" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process does not inherit the error mode of the calling process. Instead, the new process gets the default error mode. This feature is particularly useful for multithreaded shell applications that run with hard errors disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822f0fe060a18c91c9bab3051a38db8f90fb6c9a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process group will be created. This flag is necessary for using &lt;a href=&quot;os#os.kill&quot;&gt;&lt;code&gt;os.kill()&lt;/code&gt;&lt;/a&gt; on the subprocess.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b28e23bf5c4691fcd51eb57cbec1201ce37825f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process is not associated with the job.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703ece153e6ef3b6445941428e1984a87b4dddc8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process will have a below average priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16bf4e621568c5f4e74d91bda257a856e4509073" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process will have a high priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3e2d0d49f91e6523947594fb18b4ea3996a0ae" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process will have an above average priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de9de3675e68d229a70569d685e4c14ed62c509" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process will have an idle (lowest) priority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43354ce3192c8d02c652616703de56bfc46d5826" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process will have an normal priority. (default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b27f88e31caeb18d302b7040e9dfdec3c45f9c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process will have realtime priority. You should almost never use REALTIME_PRIORITY_CLASS, because this interrupts system threads that manage mouse input, keyboard input, and background disk flushing. This class can be appropriate for applications that &amp;ldquo;talk&amp;rdquo; directly to hardware or that perform brief tasks that should have limited interruptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92d3a3f0cc68f700bfe49944291e59529ef41fc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process will not create a window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908ce8aededa49368b50457e76fca02242cf4254" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt;&lt;code&gt;creationflags&lt;/code&gt; parameter to specify that a new process will not inherit its parent&amp;rsquo;s console. This value cannot be used with CREATE_NEW_CONSOLE.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0e433e7a05bfc38286a0c12151485c83f26e1d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt; object can be used as a context manager in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. It will automatically be closed when the block is completed. Please note that in the event of an exception an archive opened for writing will not be finalized; only the internally used file object will be closed. See the &lt;a href=&quot;#tar-examples&quot;&gt;Examples&lt;/a&gt; section for a use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efab9fed2b8f40c44bf1667dddefceaf24feb7d2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object also provides some convenient query methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbaa0bb9f10a21d88d3f3e146041bad634afa84" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#tarfile.TarInfo&quot;&gt;&lt;code&gt;TarInfo&lt;/code&gt;&lt;/a&gt; object represents one member in a &lt;a href=&quot;#tarfile.TarFile&quot;&gt;&lt;code&gt;TarFile&lt;/code&gt;&lt;/a&gt;. Aside from storing all required attributes of a file (like file type, size, time, permissions, owner etc.), it provides some useful methods to determine its type. It does &lt;em&gt;not&lt;/em&gt; contain the file&amp;rsquo;s data itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3802b57908a2a49b6b01c0f0062daa6434151c4b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#telnetlib.Telnet&quot;&gt;&lt;code&gt;Telnet&lt;/code&gt;&lt;/a&gt; object is a context manager and can be used in a &lt;a href=&quot;https://docs.python.org/3.8/reference/compound_stmts.html#with&quot;&gt;&lt;code&gt;with&lt;/code&gt;&lt;/a&gt; statement. When the &lt;code&gt;with&lt;/code&gt; block ends, the &lt;a href=&quot;#telnetlib.Telnet.close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method is called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b418478fbd40b68a1401c83cd98e940a4400dbd" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#traceback.StackSummary&quot;&gt;&lt;code&gt;StackSummary&lt;/code&gt;&lt;/a&gt; representing the traceback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7eb692d76a5f24af6c1522968a2ac60f2f115d8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#traceback.TracebackException&quot;&gt;&lt;code&gt;TracebackException&lt;/code&gt;&lt;/a&gt; of the original &lt;code&gt;__cause__&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f325826d6929040817db50fc54e065f0f0cddce" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#traceback.TracebackException&quot;&gt;&lt;code&gt;TracebackException&lt;/code&gt;&lt;/a&gt; of the original &lt;code&gt;__context__&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf5e6a92242fcf83e26fea423fd5886140f180d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#unittest.TestResult&quot;&gt;&lt;code&gt;TestResult&lt;/code&gt;&lt;/a&gt; object stores the results of a set of tests. The &lt;a href=&quot;#unittest.TestCase&quot;&gt;&lt;code&gt;TestCase&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#unittest.TestSuite&quot;&gt;&lt;code&gt;TestSuite&lt;/code&gt;&lt;/a&gt; classes ensure that results are properly recorded; test authors do not need to worry about recording the outcome of tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d41bb94947f43421d8b9a20f21d8e7c5ba6eb5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#urllib.request.BaseHandler&quot;&gt;&lt;code&gt;BaseHandler&lt;/code&gt;&lt;/a&gt; subclass may also change its &lt;code&gt;handler_order&lt;/code&gt; attribute to modify its position in the handlers list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09578c2784accd900de9c16011bc93d6ae8d6d6b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt;&lt;code&gt;Fault&lt;/code&gt;&lt;/a&gt; object encapsulates the content of an XML-RPC fault tag. Fault objects have the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bfd09719bcd476e1e48c1a7f5fa1c5b76af331" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt;&lt;code&gt;ProtocolError&lt;/code&gt;&lt;/a&gt; object describes a protocol error in the underlying transport layer (such as a 404 &amp;lsquo;not found&amp;rsquo; error if the server named by the URI does not exist). It has the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029d8ed2e1ba08f18b33a51f6fa97e40270b9b40" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt;&lt;code&gt;ServerProxy&lt;/code&gt;&lt;/a&gt; instance has a method corresponding to each remote procedure call accepted by the XML-RPC server. Calling the method performs an RPC, dispatched by both name and argument signature (e.g. the same method name can be overloaded with multiple argument signatures). The RPC finishes by returning a value, which may be either returned data in a conformant type or a &lt;a href=&quot;#xmlrpc.client.Fault&quot;&gt;&lt;code&gt;Fault&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#xmlrpc.client.ProtocolError&quot;&gt;&lt;code&gt;ProtocolError&lt;/code&gt;&lt;/a&gt; object indicating an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f5f6e8368f7fd646f7954ef053eaba175e5d9c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#xmlrpc.client.ServerProxy&quot;&gt;&lt;code&gt;ServerProxy&lt;/code&gt;&lt;/a&gt; instance is an object that manages communication with a remote XML-RPC server. The required first argument is a URI (Uniform Resource Indicator), and will normally be the URL of the server. The optional second argument is a transport factory instance; by default it is an internal &lt;code&gt;SafeTransport&lt;/code&gt; instance for https: URLs and an internal HTTP &lt;code&gt;Transport&lt;/code&gt; instance otherwise. The optional third argument is an encoding, by default UTF-8. The optional fourth argument is a debugging flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b61c4237783480098cc1c3c123301cd0ec96d1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future-like&lt;/code&gt;&lt;/a&gt; object that runs a Python &lt;a href=&quot;#coroutine&quot;&gt;coroutine&lt;/a&gt;. Not thread-safe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17211a69cf454d4669d81e4fc3499434656c73b5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;asyncio-future#asyncio.Future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; is a special &lt;strong&gt;low-level&lt;/strong&gt; awaitable object that represents an &lt;strong&gt;eventual result&lt;/strong&gt; of an asynchronous operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aaf1be047948377f0a9898c401dcc838c0ff80" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;binascii#binascii.Error&quot;&gt;&lt;code&gt;binascii.Error&lt;/code&gt;&lt;/a&gt; exception is raised if &lt;em&gt;s&lt;/em&gt; is incorrectly padded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736c1290b28c0c1b0b6d1a1c053e4977f8105836" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;binascii#binascii.Error&quot;&gt;&lt;code&gt;binascii.Error&lt;/code&gt;&lt;/a&gt; is raised if &lt;em&gt;s&lt;/em&gt; is incorrectly padded or if there are non-alphabet characters present in the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519fad3a13698a900c54a3907e9cd012dc0dcd6c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;exceptions#BlockingIOError&quot;&gt;&lt;code&gt;BlockingIOError&lt;/code&gt;&lt;/a&gt; is raised if the underlying raw stream is in non blocking-mode, and has no data available at the moment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9e63f63266a458877292ed9889ee463e8cd846" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;exceptions#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be raised if the object is of an unsupported type or a container that contains objects of unsupported types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e53f43ea419841dfa2abdd976aa4b7445ab49928" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;exceptions#UserWarning&quot;&gt;&lt;code&gt;UserWarning&lt;/code&gt;&lt;/a&gt; subclass issued when password input may be echoed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f81dd210ab5a2bda7782cfafdf990e8fd67db1" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;exceptions#ValueError&quot;&gt;&lt;code&gt;ValueError&lt;/code&gt;&lt;/a&gt; will be raised if &lt;a href=&quot;#subprocess.Popen&quot;&gt;&lt;code&gt;Popen&lt;/code&gt;&lt;/a&gt; is called with invalid arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe7146e2de2d65e627df883106ef1157ebbefa7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;http://tix.sourceforge.net/dist/current/man/html/TixCmd/tixBalloon.htm&quot;&gt;Balloon&lt;/a&gt; that pops up over a widget to provide help. When the user moves the cursor inside a widget to which a Balloon widget has been bound, a small pop-up window with a descriptive message will be shown on the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3be9d8e10c441d631159cd54e8982987db80ff" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://bugs.python.org/issue35924&quot;&gt;bug in ncurses&lt;/a&gt;, the backend for this Python module, can cause SegFaults when resizing windows. This is fixed in ncurses-6.1-20190511. If you are stuck with an earlier ncurses, you can avoid triggering this if you do not call &lt;a href=&quot;#curses.window.addstr&quot;&gt;&lt;code&gt;addstr()&lt;/code&gt;&lt;/a&gt; with a &lt;em&gt;str&lt;/em&gt; that has embedded newlines. Instead, call &lt;a href=&quot;#curses.window.addstr&quot;&gt;&lt;code&gt;addstr()&lt;/code&gt;&lt;/a&gt; separately for each line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b08dc01418b6aa0877cc9cb2106a03fa0af3b9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://code.activestate.com/recipes/305268/&quot;&gt;greatly simplified read-only version of Chainmap&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944525a89cbb03788bd6f05f00feee3892443e43" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://docs.python.org/3.8/glossary.html#term-decorator&quot;&gt;decorator&lt;/a&gt; for &lt;a href=&quot;#importlib.abc.Loader.load_module&quot;&gt;&lt;code&gt;importlib.abc.Loader.load_module()&lt;/code&gt;&lt;/a&gt; to handle selecting the proper module object to load with. The decorated method is expected to have a call signature taking two positional arguments (e.g. &lt;code&gt;load_module(self, module)&lt;/code&gt;) for which the second argument will be the module &lt;strong&gt;object&lt;/strong&gt; to be used by the loader. Note that the decorator will not work on static methods because of the assumption of two arguments.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
