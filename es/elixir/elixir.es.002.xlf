<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="elixir">
    <body>
      <group id="elixir">
        <trans-unit id="82406285fba627e3ff78c7bc533d685601370bb2" translate="yes" xml:space="preserve">
          <source>.quarter_of_year (3)</source>
          <target state="translated">.quarter_of_year (3)</target>
        </trans-unit>
        <trans-unit id="21f523c0d6cf923bf7aac6d92af1a4f1128c28d2" translate="yes" xml:space="preserve">
          <source>.query_decoder (1)</source>
          <target state="translated">.query_decoder (1)</target>
        </trans-unit>
        <trans-unit id="4d5cceb886cfc4f6e51890d6c19e66b59ed36872" translate="yes" xml:space="preserve">
          <source>.quoted_literal? (1)</source>
          <target state="translated">.quoted_literal? (1)</target>
        </trans-unit>
        <trans-unit id="c0cbc932fee4c92b522f3e234d6dc7e3957c49b0" translate="yes" xml:space="preserve">
          <source>.raise (1)</source>
          <target state="translated">.raise (1)</target>
        </trans-unit>
        <trans-unit id="9a62d81716ef236036c1406922d877dd4b0723de" translate="yes" xml:space="preserve">
          <source>.random (1)</source>
          <target state="translated">.random (1)</target>
        </trans-unit>
        <trans-unit id="915b4c05d46f086f3224209ef1bee6edc8031429" translate="yes" xml:space="preserve">
          <source>.range (2)</source>
          <target state="translated">.range (2)</target>
        </trans-unit>
        <trans-unit id="7259b3bb67532f54910027b2f973fb03618e7bb9" translate="yes" xml:space="preserve">
          <source>.ratio (1)</source>
          <target state="translated">.ratio (1)</target>
        </trans-unit>
        <trans-unit id="6152f4fbdcd2dcd978e2d3561251b79c336089ea" translate="yes" xml:space="preserve">
          <source>.re_pattern (1)</source>
          <target state="translated">.re_pattern (1)</target>
        </trans-unit>
        <trans-unit id="c4922285b6a1b13fec8b9115f57615316568b7d0" translate="yes" xml:space="preserve">
          <source>.read (1)</source>
          <target state="translated">.read (1)</target>
        </trans-unit>
        <trans-unit id="9bcf7fe5bb3e3774a29717beb691a1374a06d6e6" translate="yes" xml:space="preserve">
          <source>.read (2)</source>
          <target state="translated">.read (2)</target>
        </trans-unit>
        <trans-unit id="6aa73a7cdaa868d9c51c51e0c54340c7c02eff46" translate="yes" xml:space="preserve">
          <source>.read! (1)</source>
          <target state="translated">.read! (1)</target>
        </trans-unit>
        <trans-unit id="5a566b6f5db39ab0800c782e252f0612238d6e2d" translate="yes" xml:space="preserve">
          <source>.read_link (1)</source>
          <target state="translated">.read_link (1)</target>
        </trans-unit>
        <trans-unit id="796e37faedc1955d17a5ec818b065138d430d5a4" translate="yes" xml:space="preserve">
          <source>.read_link! (1)</source>
          <target state="translated">.read_link! (1)</target>
        </trans-unit>
        <trans-unit id="c0e7be4955d3dbace682bdc094c61c007960dbc7" translate="yes" xml:space="preserve">
          <source>.read_timer (1)</source>
          <target state="translated">.read_timer (1)</target>
        </trans-unit>
        <trans-unit id="1e115b6e310e082522e5ac36e6ff0e78d11f83bd" translate="yes" xml:space="preserve">
          <source>.recompile (1)</source>
          <target state="translated">.recompile (1)</target>
        </trans-unit>
        <trans-unit id="d400d6df157444dc9247e9bd868196c536169e60" translate="yes" xml:space="preserve">
          <source>.recompile! (1)</source>
          <target state="translated">.recompile! (1)</target>
        </trans-unit>
        <trans-unit id="e8103b3fb5557faec38b1cf5a46b09cb7bc27433" translate="yes" xml:space="preserve">
          <source>.reduce (2)</source>
          <target state="translated">.reduce (2)</target>
        </trans-unit>
        <trans-unit id="18fa7d7ed9f0e0aa034779c8bac211d164b4b941" translate="yes" xml:space="preserve">
          <source>.reduce (3)</source>
          <target state="translated">.reduce (3)</target>
        </trans-unit>
        <trans-unit id="33f5efe4cbd37482678f19d75d87af0af44dfce3" translate="yes" xml:space="preserve">
          <source>.reduce_while (3)</source>
          <target state="translated">.reduce_while (3)</target>
        </trans-unit>
        <trans-unit id="25c6f063266cae3c8a8c7bf4e499d22e0876e2b6" translate="yes" xml:space="preserve">
          <source>.regex? (1)</source>
          <target state="translated">.regex? (1)</target>
        </trans-unit>
        <trans-unit id="61b3a8fc37677bc898e372642d635fc5688bc132" translate="yes" xml:space="preserve">
          <source>.register (2)</source>
          <target state="translated">.register (2)</target>
        </trans-unit>
        <trans-unit id="f86f33d244431b6143953d39664b793d5002de3f" translate="yes" xml:space="preserve">
          <source>.register (3)</source>
          <target state="translated">.register (3)</target>
        </trans-unit>
        <trans-unit id="ec2b0b920c6e63d6427c0b021de26058f870d908" translate="yes" xml:space="preserve">
          <source>.register_attribute (3)</source>
          <target state="translated">.register_attribute (3)</target>
        </trans-unit>
        <trans-unit id="0fb1c34bc6d78af0b9c6cb8550499b3b6294b194" translate="yes" xml:space="preserve">
          <source>.registered (0)</source>
          <target state="translated">.registered (0)</target>
        </trans-unit>
        <trans-unit id="e1e8d72019931614f87a931d1217171a997bc4b4" translate="yes" xml:space="preserve">
          <source>.registry (0)</source>
          <target state="translated">.registry (0)</target>
        </trans-unit>
        <trans-unit id="324cb1aa925cc1f95bfe25d489080f779cd27e36" translate="yes" xml:space="preserve">
          <source>.regular? (2)</source>
          <target state="translated">.regular? (2)</target>
        </trans-unit>
        <trans-unit id="036503d8fa3493abc2f9716aedfd55b63f330d9e" translate="yes" xml:space="preserve">
          <source>.reject (2)</source>
          <target state="translated">.reject (2)</target>
        </trans-unit>
        <trans-unit id="b9c458b95d721281324ddaf3f77cb9c9354174c3" translate="yes" xml:space="preserve">
          <source>.relative (1)</source>
          <target state="translated">.relative (1)</target>
        </trans-unit>
        <trans-unit id="6535a0f754251153702af6d4a2e4f74163d11002" translate="yes" xml:space="preserve">
          <source>.relative_to (2)</source>
          <target state="translated">.relative_to (2)</target>
        </trans-unit>
        <trans-unit id="7dbf99562ca0772885de2727c8c043ab6b8e81d3" translate="yes" xml:space="preserve">
          <source>.relative_to_cwd (1)</source>
          <target state="translated">.relative_to_cwd (1)</target>
        </trans-unit>
        <trans-unit id="2b6a126fdc0e9e8487cba541ab01707a35b5dff9" translate="yes" xml:space="preserve">
          <source>.remove_backend (2)</source>
          <target state="translated">.remove_backend (2)</target>
        </trans-unit>
        <trans-unit id="083b9c20116ce0828042e55cbd5c0cf89c4019f7" translate="yes" xml:space="preserve">
          <source>.remove_translator (1)</source>
          <target state="translated">.remove_translator (1)</target>
        </trans-unit>
        <trans-unit id="3a2b717f5b21399404c9508445877f4f6bbee49c" translate="yes" xml:space="preserve">
          <source>.rename (2)</source>
          <target state="translated">.rename (2)</target>
        </trans-unit>
        <trans-unit id="1f094166ffb7482a8c8b08eb44953f02bf36cbc7" translate="yes" xml:space="preserve">
          <source>.rename! (2)</source>
          <target state="translated">.rename! (2)</target>
        </trans-unit>
        <trans-unit id="a020bb1818d4a83753c5b4203865ba90a23cb2aa" translate="yes" xml:space="preserve">
          <source>.repeatedly (1)</source>
          <target state="translated">.repeatedly (1)</target>
        </trans-unit>
        <trans-unit id="f51db4d3ed240828fa60e22c90b4efc69457d61a" translate="yes" xml:space="preserve">
          <source>.replace (4)</source>
          <target state="translated">.replace (4)</target>
        </trans-unit>
        <trans-unit id="a2fac86b4e5c931c6185fdebe0d6b9097f3695a0" translate="yes" xml:space="preserve">
          <source>.replace! (3)</source>
          <target state="translated">.replace! (3)</target>
        </trans-unit>
        <trans-unit id="6c3414f9e2fd4a7cb07f1f24a7891ad1f321c918" translate="yes" xml:space="preserve">
          <source>.replace_at (3)</source>
          <target state="translated">.replace_at (3)</target>
        </trans-unit>
        <trans-unit id="a0ba274f9b4874ed895b9637800a271fb5b92f54" translate="yes" xml:space="preserve">
          <source>.replace_leading (3)</source>
          <target state="translated">.replace_leading (3)</target>
        </trans-unit>
        <trans-unit id="90be5d3632bd76b51d8c05e68cea99bb76a38dfc" translate="yes" xml:space="preserve">
          <source>.replace_prefix (3)</source>
          <target state="translated">.replace_prefix (3)</target>
        </trans-unit>
        <trans-unit id="2b196108daf1ebaccead0c2da1f75dd55ad23638" translate="yes" xml:space="preserve">
          <source>.replace_suffix (3)</source>
          <target state="translated">.replace_suffix (3)</target>
        </trans-unit>
        <trans-unit id="a50c56766ceb3c005ecd63029e28a09d2ee54c47" translate="yes" xml:space="preserve">
          <source>.replace_trailing (3)</source>
          <target state="translated">.replace_trailing (3)</target>
        </trans-unit>
        <trans-unit id="1297ce657feff975cd67e669bce8a92c7b60b077" translate="yes" xml:space="preserve">
          <source>.reply (2)</source>
          <target state="translated">.reply (2)</target>
        </trans-unit>
        <trans-unit id="e94a462c2ab938f96a59eed5f8148fddec187fc8" translate="yes" xml:space="preserve">
          <source>.require_file (2)</source>
          <target state="translated">.require_file (2)</target>
        </trans-unit>
        <trans-unit id="24b65e525d06478fe7faaa999e8776bf8af7cc44" translate="yes" xml:space="preserve">
          <source>.required_files (0)</source>
          <target state="translated">.required_files (0)</target>
        </trans-unit>
        <trans-unit id="f4afdded01d60583926755f80ee4a2a902151356" translate="yes" xml:space="preserve">
          <source>.requirement (0)</source>
          <target state="translated">.requirement (0)</target>
        </trans-unit>
        <trans-unit id="12559c817480cf7f0bc82f843286f45914662495" translate="yes" xml:space="preserve">
          <source>.reset_metadata (1)</source>
          <target state="translated">.reset_metadata (1)</target>
        </trans-unit>
        <trans-unit id="8e6d4a7cf6883a4ff1ec3bcec55ca787d0e5abe8" translate="yes" xml:space="preserve">
          <source>.resource (3)</source>
          <target state="translated">.resource (3)</target>
        </trans-unit>
        <trans-unit id="6a0de781a11b978981972c2f820e9f7914a09946" translate="yes" xml:space="preserve">
          <source>.restart (0)</source>
          <target state="translated">.restart (0)</target>
        </trans-unit>
        <trans-unit id="69609e0f59f10b638a65942dc3ddbf600109c352" translate="yes" xml:space="preserve">
          <source>.restart_child (2)</source>
          <target state="translated">.restart_child (2)</target>
        </trans-unit>
        <trans-unit id="95fc06fc820d60ae9d1808a37588bc745ed9d242" translate="yes" xml:space="preserve">
          <source>.restart_type (0)</source>
          <target state="translated">.restart_type (0)</target>
        </trans-unit>
        <trans-unit id="214dbe59c0392757702a722e7531e5bc6f8c5718" translate="yes" xml:space="preserve">
          <source>.reverse (1)</source>
          <target state="translated">.reverse (1)</target>
        </trans-unit>
        <trans-unit id="98412bb139b10b6c0a7d652019c5cc8ed2fe99cb" translate="yes" xml:space="preserve">
          <source>.reverse (2)</source>
          <target state="translated">.reverse (2)</target>
        </trans-unit>
        <trans-unit id="3e44ec01ff912914f353d7392e6af51a696d2eea" translate="yes" xml:space="preserve">
          <source>.reverse_slice (3)</source>
          <target state="translated">.reverse_slice (3)</target>
        </trans-unit>
        <trans-unit id="566ff0ca3064ee8a242aae9bb1dfb78d8eee25e7" translate="yes" xml:space="preserve">
          <source>.rm (1)</source>
          <target state="translated">.rm (1)</target>
        </trans-unit>
        <trans-unit id="cea4cc14ae44b3f714567d9081df444ce67ecd94" translate="yes" xml:space="preserve">
          <source>.rm! (1)</source>
          <target state="translated">.rm! (1)</target>
        </trans-unit>
        <trans-unit id="cc1a70d641a17f5b10d31053c7826e4a3e82c7de" translate="yes" xml:space="preserve">
          <source>.rm_rf (1)</source>
          <target state="translated">.rm_rf (1)</target>
        </trans-unit>
        <trans-unit id="ca0b5194766ccf62e1fbd41cb9ff7e75a2f69133" translate="yes" xml:space="preserve">
          <source>.rm_rf! (1)</source>
          <target state="translated">.rm_rf! (1)</target>
        </trans-unit>
        <trans-unit id="db2683adb2720a134c52c7beaa73dc88416f93be" translate="yes" xml:space="preserve">
          <source>.rmdir (1)</source>
          <target state="translated">.rmdir (1)</target>
        </trans-unit>
        <trans-unit id="156004382936c2b15e06e6b0dba4f8d745d376e2" translate="yes" xml:space="preserve">
          <source>.rmdir! (1)</source>
          <target state="translated">.rmdir! (1)</target>
        </trans-unit>
        <trans-unit id="44ea72fbe0a4a971bc8d660e229fb59e6db9c711" translate="yes" xml:space="preserve">
          <source>.rootname (1)</source>
          <target state="translated">.rootname (1)</target>
        </trans-unit>
        <trans-unit id="8e58bcbf61a53e5c82d67e2f5c71ac176cfe20a1" translate="yes" xml:space="preserve">
          <source>.rootname (2)</source>
          <target state="translated">.rootname (2)</target>
        </trans-unit>
        <trans-unit id="9aab3127a5f004088712a0a0bc7ef4f65eaa40cf" translate="yes" xml:space="preserve">
          <source>.round (2)</source>
          <target state="translated">.round (2)</target>
        </trans-unit>
        <trans-unit id="a124c24ba0c827d5839a011309fbd94060c5f1cf" translate="yes" xml:space="preserve">
          <source>.run (0)</source>
          <target state="translated">.run (0)</target>
        </trans-unit>
        <trans-unit id="0d5dd4e26d459d98b566f493af7eaa73f434a830" translate="yes" xml:space="preserve">
          <source>.run (1)</source>
          <target state="translated">.run (1)</target>
        </trans-unit>
        <trans-unit id="c60763a45dc41380807c4f6fe7f24d0fcc186d85" translate="yes" xml:space="preserve">
          <source>.run (3)</source>
          <target state="translated">.run (3)</target>
        </trans-unit>
        <trans-unit id="b036ec98eb9ec2d26028c0aa90cd33b99b2f26d4" translate="yes" xml:space="preserve">
          <source>.safe_concat (1)</source>
          <target state="translated">.safe_concat (1)</target>
        </trans-unit>
        <trans-unit id="e425fea389ea379d35b770079963c18f6c4d8eee" translate="yes" xml:space="preserve">
          <source>.safe_concat (2)</source>
          <target state="translated">.safe_concat (2)</target>
        </trans-unit>
        <trans-unit id="592339a81bd1b4d7d4c465376c0f5be42f295b29" translate="yes" xml:space="preserve">
          <source>.scan (2)</source>
          <target state="translated">.scan (2)</target>
        </trans-unit>
        <trans-unit id="e7edfae081614bfa0ee9d3fb144f4ab0b11b0437" translate="yes" xml:space="preserve">
          <source>.scan (3)</source>
          <target state="translated">.scan (3)</target>
        </trans-unit>
        <trans-unit id="e5f4b6a5718ef598a921a0a4482322c3abd810a2" translate="yes" xml:space="preserve">
          <source>.schedulers (0)</source>
          <target state="translated">.schedulers (0)</target>
        </trans-unit>
        <trans-unit id="500188403f0d500025d43aa8a1dd019a2e699be2" translate="yes" xml:space="preserve">
          <source>.schedulers_online (0)</source>
          <target state="translated">.schedulers_online (0)</target>
        </trans-unit>
        <trans-unit id="0a6a7843c7d8933f2e205884ac0542678b15e0b5" translate="yes" xml:space="preserve">
          <source>.second (0)</source>
          <target state="translated">.second (0)</target>
        </trans-unit>
        <trans-unit id="f5161a17d2f24e19d968630a5be8b8a695a16653" translate="yes" xml:space="preserve">
          <source>.select (2)</source>
          <target state="translated">.select (2)</target>
        </trans-unit>
        <trans-unit id="05048bbacf6d2bce7ef43d623dd76c355c53f8ac" translate="yes" xml:space="preserve">
          <source>.self (0)</source>
          <target state="translated">.self (0)</target>
        </trans-unit>
        <trans-unit id="98b47d91b1483db07cdeb9e878eb33ae813124b7" translate="yes" xml:space="preserve">
          <source>.send (3)</source>
          <target state="translated">.send (3)</target>
        </trans-unit>
        <trans-unit id="57ba63c22660a3aea0b454f5e6fa53dca02b28e2" translate="yes" xml:space="preserve">
          <source>.send_after (4)</source>
          <target state="translated">.send_after (4)</target>
        </trans-unit>
        <trans-unit id="82a64e3a13fb7767aa2a91877b116c4b5e02c2f8" translate="yes" xml:space="preserve">
          <source>.server (0)</source>
          <target state="translated">.server (0)</target>
        </trans-unit>
        <trans-unit id="119d330aef7af01359c31f3ca27910bf366e67c8" translate="yes" xml:space="preserve">
          <source>.set_cookie (2)</source>
          <target state="translated">.set_cookie (2)</target>
        </trans-unit>
        <trans-unit id="bea8efa18d97b2a2e5cff76e35cbb0a6ecd40d8d" translate="yes" xml:space="preserve">
          <source>.shell (0)</source>
          <target state="translated">.shell (0)</target>
        </trans-unit>
        <trans-unit id="785b5d068a6ad2f0cfe94a57c4969ea124db3ea2" translate="yes" xml:space="preserve">
          <source>.shell (1)</source>
          <target state="translated">.shell (1)</target>
        </trans-unit>
        <trans-unit id="4468f08b07df9badbe26a47c99d320ea2d3b377f" translate="yes" xml:space="preserve">
          <source>.shift_zone (3)</source>
          <target state="translated">.shift_zone (3)</target>
        </trans-unit>
        <trans-unit id="22b283ba02c376b9e7a4ced3f7997fa82d61ad7e" translate="yes" xml:space="preserve">
          <source>.shuffle (1)</source>
          <target state="translated">.shuffle (1)</target>
        </trans-unit>
        <trans-unit id="f6a0558a199852d8ac585911127db7f747ae1a9c" translate="yes" xml:space="preserve">
          <source>.shutdown (2)</source>
          <target state="translated">.shutdown (2)</target>
        </trans-unit>
        <trans-unit id="3ebe62413bd8e81cb69b958d0ac969988423c2ec" translate="yes" xml:space="preserve">
          <source>.size (1)</source>
          <target state="translated">.size (1)</target>
        </trans-unit>
        <trans-unit id="0fe3cb59c3ed23f2a1d4b6639ca48bbc9be16dd5" translate="yes" xml:space="preserve">
          <source>.sleep (1)</source>
          <target state="translated">.sleep (1)</target>
        </trans-unit>
        <trans-unit id="9b9fe6246e281c02d3ff387e0878911c36600227" translate="yes" xml:space="preserve">
          <source>.slice (2)</source>
          <target state="translated">.slice (2)</target>
        </trans-unit>
        <trans-unit id="52ef4ee612133b7281a16f4662de589ec167f061" translate="yes" xml:space="preserve">
          <source>.slice (3)</source>
          <target state="translated">.slice (3)</target>
        </trans-unit>
        <trans-unit id="12afcf20991e22c01fa7ba643934f6de518b10d5" translate="yes" xml:space="preserve">
          <source>.sort (1)</source>
          <target state="translated">.sort (1)</target>
        </trans-unit>
        <trans-unit id="a4cc75d48eb1801c97fda2bb37e92c8d30c540f2" translate="yes" xml:space="preserve">
          <source>.sort (2)</source>
          <target state="translated">.sort (2)</target>
        </trans-unit>
        <trans-unit id="d9c8b80fcc092f972300ea35bde45ad7a2be5ebf" translate="yes" xml:space="preserve">
          <source>.sort_by (3)</source>
          <target state="translated">.sort_by (3)</target>
        </trans-unit>
        <trans-unit id="b6b3146d1358947371e899533b9a1ef7e6f7e669" translate="yes" xml:space="preserve">
          <source>.source (1)</source>
          <target state="translated">.source (1)</target>
        </trans-unit>
        <trans-unit id="4330384f5822eb687d6c62ab5db9ff4072198412" translate="yes" xml:space="preserve">
          <source>.spawn (2)</source>
          <target state="translated">.spawn (2)</target>
        </trans-unit>
        <trans-unit id="1ded959ef1c74e857fff6c0e97dd7c5af42a95ff" translate="yes" xml:space="preserve">
          <source>.spawn (3)</source>
          <target state="translated">.spawn (3)</target>
        </trans-unit>
        <trans-unit id="38d6a918f31ec5656a109df4dfc044c74bd008ab" translate="yes" xml:space="preserve">
          <source>.spawn (4)</source>
          <target state="translated">.spawn (4)</target>
        </trans-unit>
        <trans-unit id="2a21aea9b7c48bfc40b4a8485342563345355545" translate="yes" xml:space="preserve">
          <source>.spawn (5)</source>
          <target state="translated">.spawn (5)</target>
        </trans-unit>
        <trans-unit id="d03b10addb888369e0f37c7a8e786006394788ed" translate="yes" xml:space="preserve">
          <source>.spawn_link (2)</source>
          <target state="translated">.spawn_link (2)</target>
        </trans-unit>
        <trans-unit id="c5dd2e85995d135a197d76472479fad8f3ec4c0e" translate="yes" xml:space="preserve">
          <source>.spawn_link (4)</source>
          <target state="translated">.spawn_link (4)</target>
        </trans-unit>
        <trans-unit id="042ce407a8aa4ea978c1e6daf3a949a2f849af5e" translate="yes" xml:space="preserve">
          <source>.spawn_opt (0)</source>
          <target state="translated">.spawn_opt (0)</target>
        </trans-unit>
        <trans-unit id="e4db412b50c7fa728d8764b1eb9e9475e8bb79b5" translate="yes" xml:space="preserve">
          <source>.spawn_opts (0)</source>
          <target state="translated">.spawn_opts (0)</target>
        </trans-unit>
        <trans-unit id="4c0d3fe5cd7bb9b91f62098d4637e3f4234458f0" translate="yes" xml:space="preserve">
          <source>.spec (0)</source>
          <target state="translated">.spec (0)</target>
        </trans-unit>
        <trans-unit id="b82440b539251110d64b27230f67574315745c2f" translate="yes" xml:space="preserve">
          <source>.spec (1)</source>
          <target state="translated">.spec (1)</target>
        </trans-unit>
        <trans-unit id="022d47b9308aa28ce8753d49c4a78dd7fa12a8ee" translate="yes" xml:space="preserve">
          <source>.spec (2)</source>
          <target state="translated">.spec (2)</target>
        </trans-unit>
        <trans-unit id="5bcf0de931e0b37792c56a9be487ff3eaad7e322" translate="yes" xml:space="preserve">
          <source>.spec_to_callback (2)</source>
          <target state="translated">.spec_to_callback (2)</target>
        </trans-unit>
        <trans-unit id="64cb5296e5fdc22a9184f5421e75a9d56c5c71f3" translate="yes" xml:space="preserve">
          <source>.special_form? (2)</source>
          <target state="translated">.special_form? (2)</target>
        </trans-unit>
        <trans-unit id="c4a7d6823d34adbacd63a1d4c52c556af1cc1871" translate="yes" xml:space="preserve">
          <source>.split (1)</source>
          <target state="translated">.split (1)</target>
        </trans-unit>
        <trans-unit id="049123a53ff9f8e9cb46a799d1c6e1b0cdde56f0" translate="yes" xml:space="preserve">
          <source>.split (2)</source>
          <target state="translated">.split (2)</target>
        </trans-unit>
        <trans-unit id="5956575f144b1a111a98d2f7f07ec3cf1f95d465" translate="yes" xml:space="preserve">
          <source>.split (3)</source>
          <target state="translated">.split (3)</target>
        </trans-unit>
        <trans-unit id="c5cb5baf21c4c6d0098e97169f9175534d929415" translate="yes" xml:space="preserve">
          <source>.split_at (2)</source>
          <target state="translated">.split_at (2)</target>
        </trans-unit>
        <trans-unit id="c1eeff3919f8a86a84013945438f811242fe3eb9" translate="yes" xml:space="preserve">
          <source>.split_while (2)</source>
          <target state="translated">.split_while (2)</target>
        </trans-unit>
        <trans-unit id="b45ac2df95d43341575baa9b6ea240bd80300521" translate="yes" xml:space="preserve">
          <source>.split_with (2)</source>
          <target state="translated">.split_with (2)</target>
        </trans-unit>
        <trans-unit id="9e74b2d4a7e2609fdacb3d1b81a10e453ff03434" translate="yes" xml:space="preserve">
          <source>.splitter (3)</source>
          <target state="translated">.splitter (3)</target>
        </trans-unit>
        <trans-unit id="c9257554765f9724254cd647961920537f4ff4cd" translate="yes" xml:space="preserve">
          <source>.stacktrace (0)</source>
          <target state="translated">.stacktrace (0)</target>
        </trans-unit>
        <trans-unit id="9ed38ad555eaef93ddb6bbf9a03f22193b1c52b0" translate="yes" xml:space="preserve">
          <source>.stacktrace_entry (0)</source>
          <target state="translated">.stacktrace_entry (0)</target>
        </trans-unit>
        <trans-unit id="35007f23e736c0499c33f1e95886987573d68d63" translate="yes" xml:space="preserve">
          <source>.start (1)</source>
          <target state="translated">.start (1)</target>
        </trans-unit>
        <trans-unit id="41b215d8850d9094a0d3b89140c03606697127cc" translate="yes" xml:space="preserve">
          <source>.start (2)</source>
          <target state="translated">.start (2)</target>
        </trans-unit>
        <trans-unit id="37f803ff4aa44a02bf3b42822fc3b32360f8c9f4" translate="yes" xml:space="preserve">
          <source>.start (3)</source>
          <target state="translated">.start (3)</target>
        </trans-unit>
        <trans-unit id="eb6839dd01b2c5f7b6b371a504dff4fdfae500e1" translate="yes" xml:space="preserve">
          <source>.start (4)</source>
          <target state="translated">.start (4)</target>
        </trans-unit>
        <trans-unit id="0512505db1b51eed21a84f2f78757371cb87cbca" translate="yes" xml:space="preserve">
          <source>.start_child (2)</source>
          <target state="translated">.start_child (2)</target>
        </trans-unit>
        <trans-unit id="295cd8bc6ba55cd34886380c10bd9068bea94d75" translate="yes" xml:space="preserve">
          <source>.start_link (1)</source>
          <target state="translated">.start_link (1)</target>
        </trans-unit>
        <trans-unit id="bf5efc52cf31a4f33aea010cbd94ddc568120f5a" translate="yes" xml:space="preserve">
          <source>.start_link (2)</source>
          <target state="translated">.start_link (2)</target>
        </trans-unit>
        <trans-unit id="4b1f6cdc4b583a47563a9f5c6d7d8a6d28b52eb1" translate="yes" xml:space="preserve">
          <source>.start_link (3)</source>
          <target state="translated">.start_link (3)</target>
        </trans-unit>
        <trans-unit id="4cb8262ff36fba9c95fbe6e758cdde275974bf68" translate="yes" xml:space="preserve">
          <source>.start_link (4)</source>
          <target state="translated">.start_link (4)</target>
        </trans-unit>
        <trans-unit id="1dcd55ed902f8127779a4eca89a141a46b8e8206" translate="yes" xml:space="preserve">
          <source>.start_phase (3)</source>
          <target state="translated">.start_phase (3)</target>
        </trans-unit>
        <trans-unit id="aca24bd8dbdeaf889d985400d299115f77578551" translate="yes" xml:space="preserve">
          <source>.start_type (0)</source>
          <target state="translated">.start_type (0)</target>
        </trans-unit>
        <trans-unit id="6a08338df25422a7021884b6565801645f2f2de1" translate="yes" xml:space="preserve">
          <source>.started? (0)</source>
          <target state="translated">.started? (0)</target>
        </trans-unit>
        <trans-unit id="622c9006fb9a92e21f2eaba923aab296702e23f5" translate="yes" xml:space="preserve">
          <source>.started_applications (1)</source>
          <target state="translated">.started_applications (1)</target>
        </trans-unit>
        <trans-unit id="0f727a075e22894125cc6975891b0df90e07f709" translate="yes" xml:space="preserve">
          <source>.starts_with? (2)</source>
          <target state="translated">.starts_with? (2)</target>
        </trans-unit>
        <trans-unit id="26903de3653949740d66c30395e9669deee64354" translate="yes" xml:space="preserve">
          <source>.stat (2)</source>
          <target state="translated">.stat (2)</target>
        </trans-unit>
        <trans-unit id="5c9303b7e3061f0abc1e3cb0655f75bc711eec93" translate="yes" xml:space="preserve">
          <source>.stat! (2)</source>
          <target state="translated">.stat! (2)</target>
        </trans-unit>
        <trans-unit id="47226602450c399a36d64a5a35d5e870811b0406" translate="yes" xml:space="preserve">
          <source>.stat_options (0)</source>
          <target state="translated">.stat_options (0)</target>
        </trans-unit>
        <trans-unit id="f504464a3d0d7788b508d1327c018eb304cd6b4e" translate="yes" xml:space="preserve">
          <source>.state (0)</source>
          <target state="translated">.state (0)</target>
        </trans-unit>
        <trans-unit id="03423e432f40ccc0ccc2a95a504bf765f2f9cbae" translate="yes" xml:space="preserve">
          <source>.std_offset (0)</source>
          <target state="translated">.std_offset (0)</target>
        </trans-unit>
        <trans-unit id="d95f61b9b865912d4b45e028a7a30ff8e5fdadcb" translate="yes" xml:space="preserve">
          <source>.stop (0)</source>
          <target state="translated">.stop (0)</target>
        </trans-unit>
        <trans-unit id="805acc1864e91880ee72435ef9f965fa37129156" translate="yes" xml:space="preserve">
          <source>.stop (1)</source>
          <target state="translated">.stop (1)</target>
        </trans-unit>
        <trans-unit id="ca123a29c1ca1d0854b2eb4463b19336ae7dfd64" translate="yes" xml:space="preserve">
          <source>.stop (3)</source>
          <target state="translated">.stop (3)</target>
        </trans-unit>
        <trans-unit id="9bd3b1364be662804060fa56c368d62781002be4" translate="yes" xml:space="preserve">
          <source>.strategy (0)</source>
          <target state="translated">.strategy (0)</target>
        </trans-unit>
        <trans-unit id="be27f6afe07b8ec3a5e82c2be7c4b956e83cafa5" translate="yes" xml:space="preserve">
          <source>.stream (2)</source>
          <target state="translated">.stream (2)</target>
        </trans-unit>
        <trans-unit id="3a4b4e839daddb4bb4ac921859fba9d9b5aeff6e" translate="yes" xml:space="preserve">
          <source>.stream! (3)</source>
          <target state="translated">.stream! (3)</target>
        </trans-unit>
        <trans-unit id="57802c76dacd77387dab92156b2a03529f9405a3" translate="yes" xml:space="preserve">
          <source>.stream_mode (0)</source>
          <target state="translated">.stream_mode (0)</target>
        </trans-unit>
        <trans-unit id="fe2cc386bc9c6006f31f5da51c99dd62e93ab01c" translate="yes" xml:space="preserve">
          <source>.string_to_quoted (2)</source>
          <target state="translated">.string_to_quoted (2)</target>
        </trans-unit>
        <trans-unit id="00d5dec405da69105202b1438f30d2a575af4558" translate="yes" xml:space="preserve">
          <source>.string_to_quoted! (2)</source>
          <target state="translated">.string_to_quoted! (2)</target>
        </trans-unit>
        <trans-unit id="f554b0fda355060f9151f6d7a7eae8a8aabed5b4" translate="yes" xml:space="preserve">
          <source>.struct! (2)</source>
          <target state="translated">.struct! (2)</target>
        </trans-unit>
        <trans-unit id="2c8e13441221a77b7d80b002425b4af2f09cdcac" translate="yes" xml:space="preserve">
          <source>.subset? (2)</source>
          <target state="translated">.subset? (2)</target>
        </trans-unit>
        <trans-unit id="fa9735a6bd6deafeb51869ce69ed969fd97418ac" translate="yes" xml:space="preserve">
          <source>.suite_result (0)</source>
          <target state="translated">.suite_result (0)</target>
        </trans-unit>
        <trans-unit id="0667c94237af23a33609f1393f622dcb6c4a7176" translate="yes" xml:space="preserve">
          <source>.sum (1)</source>
          <target state="translated">.sum (1)</target>
        </trans-unit>
        <trans-unit id="14fb1d2e7486d11bc308cc4c7d61b86fd5f92636" translate="yes" xml:space="preserve">
          <source>.sup_flags (0)</source>
          <target state="translated">.sup_flags (0)</target>
        </trans-unit>
        <trans-unit id="e2794165d9637f9897f43808299ba73144afa075" translate="yes" xml:space="preserve">
          <source>.supervisor (0)</source>
          <target state="translated">.supervisor (0)</target>
        </trans-unit>
        <trans-unit id="c44ffb914517c3bed0a9475fb8496e1d5885ea0e" translate="yes" xml:space="preserve">
          <source>.system_time (0)</source>
          <target state="translated">.system_time (0)</target>
        </trans-unit>
        <trans-unit id="1ca73f08a3369fe71a1f720a3982803a261b1ca2" translate="yes" xml:space="preserve">
          <source>.system_time (1)</source>
          <target state="translated">.system_time (1)</target>
        </trans-unit>
        <trans-unit id="5a125dcf85b5a5e3a31046360617debcea2f5dca" translate="yes" xml:space="preserve">
          <source>.t (0)</source>
          <target state="translated">.t (0)</target>
        </trans-unit>
        <trans-unit id="ce940b0344ac89b51a67b061ee62f567933d664f" translate="yes" xml:space="preserve">
          <source>.t (1)</source>
          <target state="translated">.t (1)</target>
        </trans-unit>
        <trans-unit id="6d6aa2329db8e1891a9a067f81272cee78399a9b" translate="yes" xml:space="preserve">
          <source>.t (2)</source>
          <target state="translated">.t (2)</target>
        </trans-unit>
        <trans-unit id="323e7f541dc6e5d182a3e85b40e550e8938d3574" translate="yes" xml:space="preserve">
          <source>.take (2)</source>
          <target state="translated">.take (2)</target>
        </trans-unit>
        <trans-unit id="66935b44c369dca4852ebf8c337a47ed3218689e" translate="yes" xml:space="preserve">
          <source>.take_every (2)</source>
          <target state="translated">.take_every (2)</target>
        </trans-unit>
        <trans-unit id="6a076236dc8370ca3600e60e99b363151fca3803" translate="yes" xml:space="preserve">
          <source>.take_random (2)</source>
          <target state="translated">.take_random (2)</target>
        </trans-unit>
        <trans-unit id="5b849d7db58f8228488d32bc625e13301de07276" translate="yes" xml:space="preserve">
          <source>.take_while (2)</source>
          <target state="translated">.take_while (2)</target>
        </trans-unit>
        <trans-unit id="452befff7c63de7ee954382e6a94c6c40d02e43c" translate="yes" xml:space="preserve">
          <source>.target (0)</source>
          <target state="translated">.target (0)</target>
        </trans-unit>
        <trans-unit id="aed9f2a2243fc8339ed1248276ac0737d3e786ad" translate="yes" xml:space="preserve">
          <source>.target (1)</source>
          <target state="translated">.target (1)</target>
        </trans-unit>
        <trans-unit id="94d3e69415528790c9ea0c0a50d1f9377cc3b777" translate="yes" xml:space="preserve">
          <source>.terminate (2)</source>
          <target state="translated">.terminate (2)</target>
        </trans-unit>
        <trans-unit id="bab0f657056b4834e25c1a0c069be826c6220720" translate="yes" xml:space="preserve">
          <source>.terminate_child (2)</source>
          <target state="translated">.terminate_child (2)</target>
        </trans-unit>
        <trans-unit id="344936cde936ad68f1019ef6c5e06d055a528895" translate="yes" xml:space="preserve">
          <source>.time (0)</source>
          <target state="translated">.time (0)</target>
        </trans-unit>
        <trans-unit id="0cf5457006b3178b99d460de697eff660fe6bef2" translate="yes" xml:space="preserve">
          <source>.time_from_day_fraction (1)</source>
          <target state="translated">.time_from_day_fraction (1)</target>
        </trans-unit>
        <trans-unit id="0e785526c9673b7c65203bc04d706d6cb6ec4513" translate="yes" xml:space="preserve">
          <source>.time_offset (0)</source>
          <target state="translated">.time_offset (0)</target>
        </trans-unit>
        <trans-unit id="010713efa7c6e5de24688928e563a8242ac3733c" translate="yes" xml:space="preserve">
          <source>.time_offset (1)</source>
          <target state="translated">.time_offset (1)</target>
        </trans-unit>
        <trans-unit id="37b03c05873de044d05a7167ae5c2bd528a2cf2b" translate="yes" xml:space="preserve">
          <source>.time_to_day_fraction (4)</source>
          <target state="translated">.time_to_day_fraction (4)</target>
        </trans-unit>
        <trans-unit id="69e5ef805c3b98d36be39d480c80615e6a0a2827" translate="yes" xml:space="preserve">
          <source>.time_to_string (4)</source>
          <target state="translated">.time_to_string (4)</target>
        </trans-unit>
        <trans-unit id="58fc21ba086c23d1899f2fa37a79588b57f302ca" translate="yes" xml:space="preserve">
          <source>.time_unit (0)</source>
          <target state="translated">.time_unit (0)</target>
        </trans-unit>
        <trans-unit id="c3651f640c84831eeaba48675065495278d10a1d" translate="yes" xml:space="preserve">
          <source>.time_zone (0)</source>
          <target state="translated">.time_zone (0)</target>
        </trans-unit>
        <trans-unit id="e0e2ab52d01e32b013b1e77ec4c9eebcfa32d716" translate="yes" xml:space="preserve">
          <source>.time_zone_database (0)</source>
          <target state="translated">.time_zone_database (0)</target>
        </trans-unit>
        <trans-unit id="dfa489b637ace214922bade2862dbe8956d6ae46" translate="yes" xml:space="preserve">
          <source>.timer (1)</source>
          <target state="translated">.timer (1)</target>
        </trans-unit>
        <trans-unit id="acbf47da8e87914b075bd44514146e0ccdb715df" translate="yes" xml:space="preserve">
          <source>.tmp_dir (0)</source>
          <target state="translated">.tmp_dir (0)</target>
        </trans-unit>
        <trans-unit id="0386c7d632b36942a92eb29c25ac962f025b2324" translate="yes" xml:space="preserve">
          <source>.tmp_dir! (0)</source>
          <target state="translated">.tmp_dir! (0)</target>
        </trans-unit>
        <trans-unit id="bc9354dcc69ceeb463a6e017261272aa372ec028" translate="yes" xml:space="preserve">
          <source>.to_argv (2)</source>
          <target state="translated">.to_argv (2)</target>
        </trans-unit>
        <trans-unit id="6037d1e1094db6301e88a51f5374b55f394d4094" translate="yes" xml:space="preserve">
          <source>.to_atom (1)</source>
          <target state="translated">.to_atom (1)</target>
        </trans-unit>
        <trans-unit id="3b7732d8853fff2f73b6776e8484c26a989bc41b" translate="yes" xml:space="preserve">
          <source>.to_charlist (1)</source>
          <target state="translated">.to_charlist (1)</target>
        </trans-unit>
        <trans-unit id="177acde52af1a381714b34204e734b4927ff70d6" translate="yes" xml:space="preserve">
          <source>.to_charlist (2)</source>
          <target state="translated">.to_charlist (2)</target>
        </trans-unit>
        <trans-unit id="58fdd20f5c6677864f415a276aca8298dc531cf2" translate="yes" xml:space="preserve">
          <source>.to_date (1)</source>
          <target state="translated">.to_date (1)</target>
        </trans-unit>
        <trans-unit id="a58a797cf9fecf48b8f61eee82fac18c5c7c99d0" translate="yes" xml:space="preserve">
          <source>.to_erl (1)</source>
          <target state="translated">.to_erl (1)</target>
        </trans-unit>
        <trans-unit id="349586a76405acbed7475b36f4c074df9b1ecdab" translate="yes" xml:space="preserve">
          <source>.to_existing_atom (1)</source>
          <target state="translated">.to_existing_atom (1)</target>
        </trans-unit>
        <trans-unit id="4cc77b04396ae34e2aa482f7d52317442d9d0d40" translate="yes" xml:space="preserve">
          <source>.to_float (1)</source>
          <target state="translated">.to_float (1)</target>
        </trans-unit>
        <trans-unit id="2c9dcd60aaa5deb8f2998b3478d84a0f705df1d7" translate="yes" xml:space="preserve">
          <source>.to_integer (1)</source>
          <target state="translated">.to_integer (1)</target>
        </trans-unit>
        <trans-unit id="bd275d185d699e20925fc70f0c9e90ea9d5ae065" translate="yes" xml:space="preserve">
          <source>.to_integer (2)</source>
          <target state="translated">.to_integer (2)</target>
        </trans-unit>
        <trans-unit id="a08b59808efd3e0ba1197b5c74f2ab66acd24c08" translate="yes" xml:space="preserve">
          <source>.to_iso8601 (2)</source>
          <target state="translated">.to_iso8601 (2)</target>
        </trans-unit>
        <trans-unit id="7096169a774d12313de330019965df1b2381c7a5" translate="yes" xml:space="preserve">
          <source>.to_list (1)</source>
          <target state="translated">.to_list (1)</target>
        </trans-unit>
        <trans-unit id="18a22ca4cee34fae163f90a8b3bc3315c93abd85" translate="yes" xml:space="preserve">
          <source>.to_naive (1)</source>
          <target state="translated">.to_naive (1)</target>
        </trans-unit>
        <trans-unit id="99dd8202590f771992af7a23fd11f7093000659b" translate="yes" xml:space="preserve">
          <source>.to_string (1)</source>
          <target state="translated">.to_string (1)</target>
        </trans-unit>
        <trans-unit id="017d2d6309b6fe0083dae6b3efeae99a9a8fae91" translate="yes" xml:space="preserve">
          <source>.to_string (2)</source>
          <target state="translated">.to_string (2)</target>
        </trans-unit>
        <trans-unit id="5bfe0ccc09236f881a49f931932fd6dff9c584de" translate="yes" xml:space="preserve">
          <source>.to_time (1)</source>
          <target state="translated">.to_time (1)</target>
        </trans-unit>
        <trans-unit id="ad6a857066f79b3ea4600817a83df07e22ffa509" translate="yes" xml:space="preserve">
          <source>.to_tuple (1)</source>
          <target state="translated">.to_tuple (1)</target>
        </trans-unit>
        <trans-unit id="82daa8a2327bfda8569c72628752e71d58c7aeda" translate="yes" xml:space="preserve">
          <source>.to_unix (2)</source>
          <target state="translated">.to_unix (2)</target>
        </trans-unit>
        <trans-unit id="90ce7d8b4fa96875dbbb10cff210240639e24531" translate="yes" xml:space="preserve">
          <source>.touch (2)</source>
          <target state="translated">.touch (2)</target>
        </trans-unit>
        <trans-unit id="43060af58c9853d9f20b7b5ebcb1ecc29f7871c1" translate="yes" xml:space="preserve">
          <source>.touch! (2)</source>
          <target state="translated">.touch! (2)</target>
        </trans-unit>
        <trans-unit id="0c4d93e2cbe64f01e06103df1b140c02030783b5" translate="yes" xml:space="preserve">
          <source>.transform (3)</source>
          <target state="translated">.transform (3)</target>
        </trans-unit>
        <trans-unit id="b9c33fffc67de27076c37e827fc05ad4dc3da9e9" translate="yes" xml:space="preserve">
          <source>.transform (4)</source>
          <target state="translated">.transform (4)</target>
        </trans-unit>
        <trans-unit id="b3243e91ee195958585bd434c9be3b54107397e4" translate="yes" xml:space="preserve">
          <source>.traverse (4)</source>
          <target state="translated">.traverse (4)</target>
        </trans-unit>
        <trans-unit id="59cf2682c55b732e295cb78bfbe98f1a2b2f86c3" translate="yes" xml:space="preserve">
          <source>.trim (1)</source>
          <target state="translated">.trim (1)</target>
        </trans-unit>
        <trans-unit id="6fd7f58667f22d7c0b47ca58c1caf5e1088e2c32" translate="yes" xml:space="preserve">
          <source>.trim (2)</source>
          <target state="translated">.trim (2)</target>
        </trans-unit>
        <trans-unit id="4902b414218ef4272077e359f37ad2a508149f92" translate="yes" xml:space="preserve">
          <source>.trim_leading (1)</source>
          <target state="translated">.trim_leading (1)</target>
        </trans-unit>
        <trans-unit id="bcae12d2770dec1a6f3144a9a39bfca82daa7349" translate="yes" xml:space="preserve">
          <source>.trim_leading (2)</source>
          <target state="translated">.trim_leading (2)</target>
        </trans-unit>
        <trans-unit id="1a19496157db36ad6980b047b8e92d66e7707757" translate="yes" xml:space="preserve">
          <source>.trim_trailing (1)</source>
          <target state="translated">.trim_trailing (1)</target>
        </trans-unit>
        <trans-unit id="577342d2fb33293da72675355f22dfddd251e1f7" translate="yes" xml:space="preserve">
          <source>.trim_trailing (2)</source>
          <target state="translated">.trim_trailing (2)</target>
        </trans-unit>
        <trans-unit id="6d56bfc25798ea4fef50686f15cb6ce5de0da617" translate="yes" xml:space="preserve">
          <source>.truncate (2)</source>
          <target state="translated">.truncate (2)</target>
        </trans-unit>
        <trans-unit id="67230556dd46351b14d7abb635a7d44dddeb91b4" translate="yes" xml:space="preserve">
          <source>.type (1)</source>
          <target state="translated">.type (1)</target>
        </trans-unit>
        <trans-unit id="4c56fdb9a01ca7c069d4ea672d08ebed04df7ce7" translate="yes" xml:space="preserve">
          <source>.underscore (1)</source>
          <target state="translated">.underscore (1)</target>
        </trans-unit>
        <trans-unit id="07c6ee0d24bc0a875735cff9bd769d9fbc07bd63" translate="yes" xml:space="preserve">
          <source>.undigits (2)</source>
          <target state="translated">.undigits (2)</target>
        </trans-unit>
        <trans-unit id="34db23875e8bed3323b513bc6e77366a2701d21b" translate="yes" xml:space="preserve">
          <source>.unescape_string (1)</source>
          <target state="translated">.unescape_string (1)</target>
        </trans-unit>
        <trans-unit id="6e8701ef714e1d4b96edaf44be258a68d940f1f7" translate="yes" xml:space="preserve">
          <source>.unescape_string (2)</source>
          <target state="translated">.unescape_string (2)</target>
        </trans-unit>
        <trans-unit id="90a17358a739327110eb4d8b58fc9b8f560f32f8" translate="yes" xml:space="preserve">
          <source>.unfold (2)</source>
          <target state="translated">.unfold (2)</target>
        </trans-unit>
        <trans-unit id="611c6c97ae0f2def04e40fd659bb94e73aada276" translate="yes" xml:space="preserve">
          <source>.union (2)</source>
          <target state="translated">.union (2)</target>
        </trans-unit>
        <trans-unit id="fd642534ebf4088a48122c8ce1c709ca6142142e" translate="yes" xml:space="preserve">
          <source>.uniq (1)</source>
          <target state="translated">.uniq (1)</target>
        </trans-unit>
        <trans-unit id="c169583d8fc22dcac9e48431951d6817e95e6503" translate="yes" xml:space="preserve">
          <source>.uniq_by (2)</source>
          <target state="translated">.uniq_by (2)</target>
        </trans-unit>
        <trans-unit id="4b52c607d8be5bc6091da10989ea4e28fd3705a5" translate="yes" xml:space="preserve">
          <source>.unique_integer (1)</source>
          <target state="translated">.unique_integer (1)</target>
        </trans-unit>
        <trans-unit id="3409721e93c5a99edd35be2170a2e67c9353b3a5" translate="yes" xml:space="preserve">
          <source>.unlink (1)</source>
          <target state="translated">.unlink (1)</target>
        </trans-unit>
        <trans-unit id="e8e0d1d7cf12048eab87582374800e99052c587f" translate="yes" xml:space="preserve">
          <source>.unload (1)</source>
          <target state="translated">.unload (1)</target>
        </trans-unit>
        <trans-unit id="cd519be1f1c764ea8d4ec3c4a4585a106e4cfb6e" translate="yes" xml:space="preserve">
          <source>.unpipe (1)</source>
          <target state="translated">.unpipe (1)</target>
        </trans-unit>
        <trans-unit id="d28d53d4b944b999a1a781dbbb0d788150db8525" translate="yes" xml:space="preserve">
          <source>.unregister (1)</source>
          <target state="translated">.unregister (1)</target>
        </trans-unit>
        <trans-unit id="bc25db233221d4a84519959d2e2a9378f83267f7" translate="yes" xml:space="preserve">
          <source>.unregister (2)</source>
          <target state="translated">.unregister (2)</target>
        </trans-unit>
        <trans-unit id="33b157b7cc5a646bccdcda1b7df160d6d3d5f7d4" translate="yes" xml:space="preserve">
          <source>.unregister_match (4)</source>
          <target state="translated">.unregister_match (4)</target>
        </trans-unit>
        <trans-unit id="307bac1e2288b99d744eb613e6093dfb32a1e5e3" translate="yes" xml:space="preserve">
          <source>.unrequire_files (1)</source>
          <target state="translated">.unrequire_files (1)</target>
        </trans-unit>
        <trans-unit id="e2692f8d9cd09a071bfaa5f6e05aab5723becb04" translate="yes" xml:space="preserve">
          <source>.unzip (1)</source>
          <target state="translated">.unzip (1)</target>
        </trans-unit>
        <trans-unit id="021d82ff28e10315f55c22634a44a248982bcfad" translate="yes" xml:space="preserve">
          <source>.upcase (2)</source>
          <target state="translated">.upcase (2)</target>
        </trans-unit>
        <trans-unit id="21b77ea9cd06a9d8064617eee067357fceea9909" translate="yes" xml:space="preserve">
          <source>.update (3)</source>
          <target state="translated">.update (3)</target>
        </trans-unit>
        <trans-unit id="5f7a7e7fc3b584c0d844ca4f8a74d13ecf0664f6" translate="yes" xml:space="preserve">
          <source>.update (4)</source>
          <target state="translated">.update (4)</target>
        </trans-unit>
        <trans-unit id="6e5da82bf1219c5a138907413de7c02b43b89728" translate="yes" xml:space="preserve">
          <source>.update (5)</source>
          <target state="translated">.update (5)</target>
        </trans-unit>
        <trans-unit id="27506e6e6d7f61c58024e62d26a4e26d5230c636" translate="yes" xml:space="preserve">
          <source>.update! (3)</source>
          <target state="translated">.update! (3)</target>
        </trans-unit>
        <trans-unit id="78744db51f921fe3388314262cf9955d896b2dba" translate="yes" xml:space="preserve">
          <source>.update_at (3)</source>
          <target state="translated">.update_at (3)</target>
        </trans-unit>
        <trans-unit id="d9e6355e70a412058dad4470fc4a1520f0fa8b6b" translate="yes" xml:space="preserve">
          <source>.update_meta (2)</source>
          <target state="translated">.update_meta (2)</target>
        </trans-unit>
        <trans-unit id="ff728571d7eabd0d6b719e6a09045116828e94dc" translate="yes" xml:space="preserve">
          <source>.update_value (3)</source>
          <target state="translated">.update_value (3)</target>
        </trans-unit>
        <trans-unit id="561bfd5c77f4968f71b889335dc05360321029ea" translate="yes" xml:space="preserve">
          <source>.url_decode64 (2)</source>
          <target state="translated">.url_decode64 (2)</target>
        </trans-unit>
        <trans-unit id="435cd0bd8fe9a4bd464595dede03c18b79c1381c" translate="yes" xml:space="preserve">
          <source>.url_decode64! (2)</source>
          <target state="translated">.url_decode64! (2)</target>
        </trans-unit>
        <trans-unit id="54f424bfd8c1b0d276aad82fcbeb3f5cc11dd80c" translate="yes" xml:space="preserve">
          <source>.url_encode64 (2)</source>
          <target state="translated">.url_encode64 (2)</target>
        </trans-unit>
        <trans-unit id="6a0c4d97d714449c8cd3d367b0c8040089f9e503" translate="yes" xml:space="preserve">
          <source>.user_home (0)</source>
          <target state="translated">.user_home (0)</target>
        </trans-unit>
        <trans-unit id="974322b38293af88006e050d38dd5ad7a73ede6d" translate="yes" xml:space="preserve">
          <source>.user_home! (0)</source>
          <target state="translated">.user_home! (0)</target>
        </trans-unit>
        <trans-unit id="9fc7a5750b0370655acf703960927d2605c4176a" translate="yes" xml:space="preserve">
          <source>.utc_now (1)</source>
          <target state="translated">.utc_now (1)</target>
        </trans-unit>
        <trans-unit id="76d583da1ac1536cd04e075163313423f76f242d" translate="yes" xml:space="preserve">
          <source>.utc_offset (0)</source>
          <target state="translated">.utc_offset (0)</target>
        </trans-unit>
        <trans-unit id="ec6d578032496972ee9f53b471ad8d6f4284a6b3" translate="yes" xml:space="preserve">
          <source>.utc_today (1)</source>
          <target state="translated">.utc_today (1)</target>
        </trans-unit>
        <trans-unit id="29d5020a842cf794b3f70f82a88e5e83d657f4ca" translate="yes" xml:space="preserve">
          <source>.valid? (1)</source>
          <target state="translated">.valid? (1)</target>
        </trans-unit>
        <trans-unit id="a560fad386f2c482fb89ad458f4a190f8a79c047" translate="yes" xml:space="preserve">
          <source>.valid_date? (3)</source>
          <target state="translated">.valid_date? (3)</target>
        </trans-unit>
        <trans-unit id="763ce6c1274693ff037cdc00f24f37d4d8e81ab3" translate="yes" xml:space="preserve">
          <source>.valid_time? (4)</source>
          <target state="translated">.valid_time? (4)</target>
        </trans-unit>
        <trans-unit id="10ed312597431b49ddb814597ce9e5cde15da1c1" translate="yes" xml:space="preserve">
          <source>.validate (1)</source>
          <target state="translated">.validate (1)</target>
        </trans-unit>
        <trans-unit id="cde09936022bdccca975985315756f7f8ffd3fa3" translate="yes" xml:space="preserve">
          <source>.value (0)</source>
          <target state="translated">.value (0)</target>
        </trans-unit>
        <trans-unit id="6a968568e1de8f40cca89be5c09dd7f3e460b3e5" translate="yes" xml:space="preserve">
          <source>.values (0)</source>
          <target state="translated">.values (0)</target>
        </trans-unit>
        <trans-unit id="a21e57a0362d22ba574c1e278db9e57d126c6c56" translate="yes" xml:space="preserve">
          <source>.values (1)</source>
          <target state="translated">.values (1)</target>
        </trans-unit>
        <trans-unit id="dd150accae78c33f3c346c135f49e6a2159a52e8" translate="yes" xml:space="preserve">
          <source>.var (2)</source>
          <target state="translated">.var (2)</target>
        </trans-unit>
        <trans-unit id="44e3660b0329b93cac3641c8edfbf10f8998472f" translate="yes" xml:space="preserve">
          <source>.version (0)</source>
          <target state="translated">.version (0)</target>
        </trans-unit>
        <trans-unit id="4b387eec933c6da32966c656d9f9dd04a7d04132" translate="yes" xml:space="preserve">
          <source>.warn (1)</source>
          <target state="translated">.warn (1)</target>
        </trans-unit>
        <trans-unit id="046540f27602afe74e3cc53864cef39924a5c59a" translate="yes" xml:space="preserve">
          <source>.warn (2)</source>
          <target state="translated">.warn (2)</target>
        </trans-unit>
        <trans-unit id="43fd265c70353012248fc402e0b5b5417053c390" translate="yes" xml:space="preserve">
          <source>.week (0)</source>
          <target state="translated">.week (0)</target>
        </trans-unit>
        <trans-unit id="3028d77ae735055691e6bb1ce543031936d16ca4" translate="yes" xml:space="preserve">
          <source>.whereis (1)</source>
          <target state="translated">.whereis (1)</target>
        </trans-unit>
        <trans-unit id="254bc77fae0afb966f2840444a87c946d786b9bb" translate="yes" xml:space="preserve">
          <source>.which_children (1)</source>
          <target state="translated">.which_children (1)</target>
        </trans-unit>
        <trans-unit id="4ccfff1f2511f1896ead05f4f58c489fe086cafb" translate="yes" xml:space="preserve">
          <source>.width (0)</source>
          <target state="translated">.width (0)</target>
        </trans-unit>
        <trans-unit id="dc35c1a1771eee79e675bdb5ce0f6f4390698614" translate="yes" xml:space="preserve">
          <source>.wildcard (2)</source>
          <target state="translated">.wildcard (2)</target>
        </trans-unit>
        <trans-unit id="8bf5ea5b441206f740baa523055d080815e3e0c0" translate="yes" xml:space="preserve">
          <source>.with_index (2)</source>
          <target state="translated">.with_index (2)</target>
        </trans-unit>
        <trans-unit id="722a62f51437d2c70d64a3cac9b7409b46c822d9" translate="yes" xml:space="preserve">
          <source>.wrap (1)</source>
          <target state="translated">.wrap (1)</target>
        </trans-unit>
        <trans-unit id="fe986c41f3d417e76e43fe2a6622bfde172922c0" translate="yes" xml:space="preserve">
          <source>.write (2)</source>
          <target state="translated">.write (2)</target>
        </trans-unit>
        <trans-unit id="f522363ce9c5d09afb7d8505fc06a85c23f1ba6c" translate="yes" xml:space="preserve">
          <source>.write (3)</source>
          <target state="translated">.write (3)</target>
        </trans-unit>
        <trans-unit id="5986e952e6862e218db4fdedf9384f86497abb80" translate="yes" xml:space="preserve">
          <source>.write! (3)</source>
          <target state="translated">.write! (3)</target>
        </trans-unit>
        <trans-unit id="9fe5ccb88688e43810665d92024d7e854209b836" translate="yes" xml:space="preserve">
          <source>.write_stat (3)</source>
          <target state="translated">.write_stat (3)</target>
        </trans-unit>
        <trans-unit id="5312d952274a1e9ba1a404332bacad1e8580e5f1" translate="yes" xml:space="preserve">
          <source>.write_stat! (3)</source>
          <target state="translated">.write_stat! (3)</target>
        </trans-unit>
        <trans-unit id="071765a725d2880b25071069c3612198e0e952b2" translate="yes" xml:space="preserve">
          <source>.year (0)</source>
          <target state="translated">.year (0)</target>
        </trans-unit>
        <trans-unit id="ce97c83dff5615ac6290628fe23ca8c27e7d69b6" translate="yes" xml:space="preserve">
          <source>.year_of_era (1)</source>
          <target state="translated">.year_of_era (1)</target>
        </trans-unit>
        <trans-unit id="b68e0b491713511099ca4f8333cae8aa9cfb6569" translate="yes" xml:space="preserve">
          <source>.yield (2)</source>
          <target state="translated">.yield (2)</target>
        </trans-unit>
        <trans-unit id="05ca4bc4e9ff55557b0bad52dcf9362fcb201622" translate="yes" xml:space="preserve">
          <source>.yield_many (2)</source>
          <target state="translated">.yield_many (2)</target>
        </trans-unit>
        <trans-unit id="46abcd50325a3a74762ab515f965448c116c4d6f" translate="yes" xml:space="preserve">
          <source>.zip (1)</source>
          <target state="translated">.zip (1)</target>
        </trans-unit>
        <trans-unit id="654ea200c81df624c6f82a720ef6bf6ab15a3d3c" translate="yes" xml:space="preserve">
          <source>.zip (2)</source>
          <target state="translated">.zip (2)</target>
        </trans-unit>
        <trans-unit id="0b1b99d07ed3961d729df7402662328d207e47c1" translate="yes" xml:space="preserve">
          <source>.zone_abbr (0)</source>
          <target state="translated">.zone_abbr (0)</target>
        </trans-unit>
        <trans-unit id="54de6b21984beda7f194a730fb54c6f15de698e2" translate="yes" xml:space="preserve">
          <source>.||| (2)</source>
          <target state="translated">.||| (2)</target>
        </trans-unit>
        <trans-unit id="a4db8c12e78f1fb9b34cc473cece8d22b18d145d" translate="yes" xml:space="preserve">
          <source>.~~~expr (1)</source>
          <target state="translated">.~~~expr (1)</target>
        </trans-unit>
        <trans-unit id="c3af06326f672b3edf369870accca0fb5ec45d3f" translate="yes" xml:space="preserve">
          <source>/ (2)</source>
          <target state="translated">/ (2)</target>
        </trans-unit>
        <trans-unit id="4f7f1594236c0fbc16137ca5acdcba65c435e7d4" translate="yes" xml:space="preserve">
          <source>0.30000000000000004.com</source>
          <target state="translated">0.30000000000000004.com</target>
        </trans-unit>
        <trans-unit id="797e9eeed26839f05c943e250aae6edc4f5f75f0" translate="yes" xml:space="preserve">
          <source>1 bit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12be5a733d4e7c2c68e33e8d459f2ca422978cd8" translate="yes" xml:space="preserve">
          <source>17 - 17 (and Erlang/OTP 18 from v1.0.5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3154e1e6354ba929ddf275f1684d46db311c80" translate="yes" xml:space="preserve">
          <source>17 - 18</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99353971f15429b486345a185786dafa52a4f79d" translate="yes" xml:space="preserve">
          <source>18 - 18 (and Erlang/OTP 19 from v1.2.6)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ad2ca2cb42d40e76a92256f589e337574d7a92" translate="yes" xml:space="preserve">
          <source>18 - 19</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f82c4855f4152c0febd7d6891662169e30c0ce8" translate="yes" xml:space="preserve">
          <source>18 - 19 (and Erlang/OTP 20 from v1.4.5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ffb6ed2639899f58170e12cd6a71d46af3ad19" translate="yes" xml:space="preserve">
          <source>18 - 20</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2c5b12a4916701996f0e48af333d8152df2bbc" translate="yes" xml:space="preserve">
          <source>19 - 20 (and Erlang/OTP 21 from v1.6.6)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40547be0716aa6370c1adbe36927d41e5ed4d85c" translate="yes" xml:space="preserve">
          <source>19 - 22</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f564faaf356e53316b6ac8aa0b88c0b690918a6" translate="yes" xml:space="preserve">
          <source>20 - 22</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c0b76dea61323bf18f79dfa3d07ef5b3129e268" translate="yes" xml:space="preserve">
          <source>8 bits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58064491a28587fe8ce3fb20b38ff66257bfedc7" translate="yes" xml:space="preserve">
          <source>:: (2)</source>
          <target state="translated">:: (2)</target>
        </trans-unit>
        <trans-unit id="e936b466a7dd5690a5fa3158eb6c733f1b7efc4d" translate="yes" xml:space="preserve">
          <source>:trim - when &lt;code&gt;true&lt;/code&gt;, does not emit empty patterns</source>
          <target state="translated">:trim - when &lt;code&gt;true&lt;/code&gt;, does not emit empty patterns</target>
        </trans-unit>
        <trans-unit id="78d7d855af61c240eff226576114817df380fbdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#alias/2&quot;&gt;&lt;code&gt;alias/2&lt;/code&gt;&lt;/a&gt; can be used to set up an alias for any module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba8231934e058efa5af35fcc44b4506a6cd2b2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#alias/2&quot;&gt;&lt;code&gt;alias/2&lt;/code&gt;&lt;/a&gt; is used to set up aliases, often useful with modules' names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e223b63686f94ce4c0b8a08b627b5bb92eac5889" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#apply/3&quot;&gt;&lt;code&gt;apply/3&lt;/code&gt;&lt;/a&gt; is used to invoke functions where the module, function name or arguments are defined dynamically at runtime. For this reason, you can't invoke macros using &lt;a href=&quot;#apply/3&quot;&gt;&lt;code&gt;apply/3&lt;/code&gt;&lt;/a&gt;, only functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03cf544c042dabd09e9399b56517dcab1ecd0063" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#at/1&quot;&gt;&lt;code&gt;at/1&lt;/code&gt;&lt;/a&gt; can also be used to pop elements out of a list or a key inside of a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd30ea12312ba95e88ea2ac10c22f452ae4a99f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#b/1&quot;&gt;&lt;code&gt;b/1&lt;/code&gt;&lt;/a&gt; - prints callbacks info and docs for a given module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33f414c9d8d88d4635810fa30f493808ffd5203" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#c/1&quot;&gt;&lt;code&gt;c/1&lt;/code&gt;&lt;/a&gt; - compiles a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2a6b2080a1dbbd95b83812d02d76fd22a97170" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#c/2&quot;&gt;&lt;code&gt;c/2&lt;/code&gt;&lt;/a&gt; - compiles a file and writes bytecode to the given path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36805d957865aeb5731697b68bc5a6b4cc851209" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#c:handle_cast/2&quot;&gt;&lt;code&gt;handle_cast/2&lt;/code&gt;&lt;/a&gt; will be called on the server to handle the request. In case the &lt;code&gt;server&lt;/code&gt; is on a node which is not yet connected to the caller one, the semantics differ depending on the used Erlang/OTP version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c0bff422a598acfce8890a5e23c2c8952d7402" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#c:handle_info/2&quot;&gt;&lt;code&gt;handle_info/2&lt;/code&gt;&lt;/a&gt; can be used in many situations, such as handling monitor DOWN messages sent by &lt;a href=&quot;process#monitor/1&quot;&gt;&lt;code&gt;Process.monitor/1&lt;/code&gt;&lt;/a&gt;. Another use case for &lt;a href=&quot;#c:handle_info/2&quot;&gt;&lt;code&gt;handle_info/2&lt;/code&gt;&lt;/a&gt; is to perform periodic work, with the help of &lt;a href=&quot;process#send_after/4&quot;&gt;&lt;code&gt;Process.send_after/4&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8faf371ac438766f5d4ece4f89d80e4b840d3b7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#c:terminate/2&quot;&gt;&lt;code&gt;terminate/2&lt;/code&gt;&lt;/a&gt; is called if a callback (except &lt;a href=&quot;#c:init/1&quot;&gt;&lt;code&gt;init/1&lt;/code&gt;&lt;/a&gt;) does one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fe8d8fd0c22f01a6c2d2428ff854e3256ea136" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#cd/1&quot;&gt;&lt;code&gt;cd/1&lt;/code&gt;&lt;/a&gt; - changes the current directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8ae2cdc45d94055a013a198c7f828cd4527640" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ceil/2&quot;&gt;&lt;code&gt;ceil/2&lt;/code&gt;&lt;/a&gt; also accepts a precision to round a floating-point value down to an arbitrary number of fractional digits (between 0 and 15).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e525263a797ef9980018f5f7d9cfba0ca463743" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#clear/0&quot;&gt;&lt;code&gt;clear/0&lt;/code&gt;&lt;/a&gt; - clears the screen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c527beae3e47cb8cd2d48c60c32ea5ad6c5867" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#compile_file/2&quot;&gt;&lt;code&gt;compile_file/2&lt;/code&gt;&lt;/a&gt; - compiles a file without tracking its name. Compiles the file multiple times when invoked multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5563e31843bde627a06ab8faa53773c350745a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#compile_file/2&quot;&gt;&lt;code&gt;compile_file/2&lt;/code&gt;&lt;/a&gt; must be used when you are interested in the modules defined in a file, without tracking. &lt;a href=&quot;#eval_file/2&quot;&gt;&lt;code&gt;eval_file/2&lt;/code&gt;&lt;/a&gt; should be used when you are interested in the result of evaluating the file rather than the modules it defines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe41d012674e940e9b890a2c880de83bbaf6e14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#config/2&quot;&gt;&lt;code&gt;config/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#config/3&quot;&gt;&lt;code&gt;config/3&lt;/code&gt;&lt;/a&gt; are used to define key-value configuration for a given application. Once Mix starts, it will automatically evaluate the configuration file and persist the configuration above into &lt;code&gt;:some_app&lt;/code&gt;'s application environment, which can be accessed in as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20407dfaccdb3c652309e5535f3c0720195369dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; supports keyword lists (&lt;a href=&quot;keyword&quot;&gt;&lt;code&gt;Keyword&lt;/code&gt;&lt;/a&gt;) and maps (&lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;) out of the box. The key can be of any type and it returns &lt;code&gt;nil&lt;/code&gt; if the key does not exist:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c415c45f0425a9299db2d7f17984d52a1846e8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Config.Reader&lt;/code&gt;&lt;/a&gt; can also be used as a &lt;a href=&quot;config.provider&quot;&gt;&lt;code&gt;Config.Provider&lt;/code&gt;&lt;/a&gt;. When used as a provider, it expects a single argument: which the configuration path (as outlined in &lt;a href=&quot;config.provider#t:config_path/0&quot;&gt;&lt;code&gt;Config.Provider.config_path/0&lt;/code&gt;&lt;/a&gt;) for the configuration to be read and loaded during the system boot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a769c70d0f19740ee9e9a578ad0641bb9e6bea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Config&lt;/code&gt;&lt;/a&gt; also provides a low-level API for evaluating and reading configuration, under the &lt;a href=&quot;config.reader&quot;&gt;&lt;code&gt;Config.Reader&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732f5cc35587568c284d948b11874cd6e854239a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; is Elixir's default environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3c40b317abebbb167812cca900619ba1f7d166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Kernel&lt;/code&gt;&lt;/a&gt; provides the basic capabilities the Elixir standard library is built on top of. It is recommended to explore the standard library for advanced functionality. Here are the main groups of modules in the standard library (this list is not a complete reference, see the documentation sidebar for all entries).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3787d3e05b5eecfdaa8c0796f2a03ae7b1ce04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; supports a wide range of configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd68e0f8e0d6a4bafc60a1575f4e03ad0aea4bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; supports different backends where log messages are written to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c1674717208bde80b8a0372284e4f070cf6f84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt; is built on top of &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, this means that they share many properties, including logarithmic time complexity. See the documentation for &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; for more information on its execution time complexity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4c8d05cbcb62e578f63ade7a7eb18757f49f22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt; is the &quot;go to&quot; set data structure in Elixir. A set can be constructed using &lt;a href=&quot;mapset#new/0&quot;&gt;&lt;code&gt;MapSet.new/0&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8af873f077fe6a3067b1eaaa8b4872ac220cbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt;s can also be constructed starting from other collection-type data structures: for example, see &lt;a href=&quot;mapset#new/1&quot;&gt;&lt;code&gt;MapSet.new/1&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;enum#into/2&quot;&gt;&lt;code&gt;Enum.into/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3ab7cf9c12683942a777d4e2ecf9cb34bd5c1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;OptionParser&lt;/code&gt;&lt;/a&gt; provides some conveniences out of the box, such as aliases and automatic handling of negation switches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287ff7438ae35434519ba324f007f05eca5350d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Registry&lt;/code&gt;&lt;/a&gt; has a dispatch mechanism that allows developers to implement custom dispatch logic triggered from the caller. For example, let's say we have a duplicate registry started as so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c8ecbb7654db4f15e150bb55478bb07e38f74e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; parsing and requirements follow &lt;a href=&quot;https://semver.org/&quot;&gt;SemVer 2.0 schema&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e165edd75ef1d144a2b1897abce4e883a8510a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;mix deps&lt;/code&gt;&lt;/a&gt; task lists all dependencies in the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c194a72a2e6af3f92acf19e631802649d6af8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#content&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt; can be used to start the current application dependencies, the application itself, and optionally run some code in its context. For long running systems, this is typically done with the &lt;code&gt;--no-halt&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc829cd334353e3327d51d0beaf3e3cfc7454aa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#convert_time_unit/3&quot;&gt;&lt;code&gt;convert_time_unit/3&lt;/code&gt;&lt;/a&gt; accepts an additional time unit (other than the ones in the &lt;a href=&quot;#t:time_unit/0&quot;&gt;&lt;code&gt;time_unit/0&lt;/code&gt;&lt;/a&gt; type) called &lt;code&gt;:native&lt;/code&gt;. &lt;code&gt;:native&lt;/code&gt; is the time unit used by the Erlang runtime system. It's determined when the runtime starts and stays the same until the runtime is stopped, but could differ the next time the runtime is started on the same machine. For this reason, you should use this function to convert &lt;code&gt;:native&lt;/code&gt; time units to a predictable unit before you display them to humans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2981f3550ed4de0cd0b04005c90a7d5db21cd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#cwd!/0&quot;&gt;cwd!()&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#cwd!/0&quot;&gt;cwd!()&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="e1e042b912117d186b1b9a96485169cefa7eb8f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#cwd/0&quot;&gt;cwd()&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#cwd/0&quot;&gt;cwd()&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="d7ae42d418c0312c1973a6003d0cfb6823fa81a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#defstruct/1&quot;&gt;&lt;code&gt;defstruct/1&lt;/code&gt;&lt;/a&gt;, however, allows protocol implementations to be &lt;em&gt;derived&lt;/em&gt;. This can be done by defining a &lt;code&gt;@derive&lt;/code&gt; attribute as a list before invoking &lt;a href=&quot;#defstruct/1&quot;&gt;&lt;code&gt;defstruct/1&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e41f98ee14ad181dc12eee39c33f03226a909ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#delete/2&quot;&gt;delete(dict, key)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08303900d3ba106c48ed5e57988a61c51086bab1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#delete/2&quot;&gt;delete(set, term)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a2f7afd43b90175a15800e560fb801d8eae796" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#delete/2&quot;&gt;delete(set, value)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81dd8858238349447b6fe041b8351d7515696bda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#difference/2&quot;&gt;difference(set1, set2)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b76c64d700f53fe14742bfb0455a821e70744ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#disjoint?/2&quot;&gt;disjoint?(set1, set2)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c5d9be0bf9b91b442b654ad3cbce652583c9a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#div/2&quot;&gt;&lt;code&gt;div/2&lt;/code&gt;&lt;/a&gt; performs &lt;em&gt;truncated&lt;/em&gt; integer division. This means that the result is always rounded towards zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab3d2982bba7840374047e83681b1d69d9fde27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#drop/2&quot;&gt;drop(dict, keys)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d31ee7a8e5a04768e8c64603efd9fad9f577b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#empty/1&quot;&gt;empty(dict)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#empty/1&quot;&gt;empty(dict)&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="dcbe1daf3ac550c1267cb2efc5cc0baf2a2b88d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#empty/1&quot;&gt;empty(set)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#empty/1&quot;&gt;empty(set)&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="4a9c8cd27b6d738adad697cf7d79e7acbbf3a784" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ensure_compiled/1&quot;&gt;&lt;code&gt;ensure_compiled/1&lt;/code&gt;&lt;/a&gt; does not apply to dependencies, as dependencies must be compiled upfront.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c4a6236d7ffa924e5ec9cc525727ca7cecbc8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#equal?/2&quot;&gt;equal?(dict1, dict2)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54919a86597e135d143e0f4b67e144b3cc72b514" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#equal?/2&quot;&gt;equal?(set1, set2)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc546b5e70e4b01fce5d62db1d53623bf936b6ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#escape/2&quot;&gt;&lt;code&gt;escape/2&lt;/code&gt;&lt;/a&gt; is used to escape &lt;em&gt;values&lt;/em&gt; (either directly passed or variable bound), while &lt;a href=&quot;kernel.specialforms#quote/2&quot;&gt;&lt;code&gt;Kernel.SpecialForms.quote/2&lt;/code&gt;&lt;/a&gt; produces syntax trees for expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91a8392defff7b5af86b8696920416d244a2fe5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#eval_file/2&quot;&gt;&lt;code&gt;eval_file/2&lt;/code&gt;&lt;/a&gt; - evaluates the file contents without tracking its name. It returns the result of the last expression in the file, instead of the modules defined in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e98bda2a25d0097510fec969900f6e688669e4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#expand_once/2&quot;&gt;&lt;code&gt;expand_once/2&lt;/code&gt;&lt;/a&gt; performs the expansion just once. Check &lt;a href=&quot;#expand/2&quot;&gt;&lt;code&gt;expand/2&lt;/code&gt;&lt;/a&gt; to perform expansion until the node can no longer be expanded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2953513f94727e3d2609b1aac0b2adb55c7a11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#exports/1&quot;&gt;&lt;code&gt;exports/1&lt;/code&gt;&lt;/a&gt; - shows all exports (functions + macros) in a module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4129b78364ee5394c0c00f9c3b21b31b598d41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#fetch!/2&quot;&gt;fetch!(dict, key)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84514506a84dcef1898cca7f64405cfb4e5f8bee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#fetch/2&quot;&gt;fetch(dict, key)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8489d3c134c68291ac867ac646492533c2283a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#fetch/2&quot;&gt;fetch(hash_dict, key)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d591087d8bd8ed0eb29d516388320474b84a99f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#filter/1&quot;&gt;&lt;code&gt;filter/1&lt;/code&gt;&lt;/a&gt; can also be used to pop elements out of a list or a key inside of a list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edaee7de1b9efe61d8351700886db26d9365ca4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#floor/2&quot;&gt;&lt;code&gt;floor/2&lt;/code&gt;&lt;/a&gt; also accepts a precision to round a floating-point value down to an arbitrary number of fractional digits (between 0 and 15). The operation is performed on the binary floating point, without a conversion to decimal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee6375a5313d1fd1ec6d2e01e3598fc9ec498f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#flush/0&quot;&gt;&lt;code&gt;flush/0&lt;/code&gt;&lt;/a&gt; - flushes all messages sent to the shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3e6d45e9eb35cacc9167a6b7398bea7f1c76f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#get/3&quot;&gt;get(dict, key, default \\ nil)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942f7d02e34b3d17e1d0d499a7e54e0d8ac0efbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#get_and_update/3&quot;&gt;get_and_update(dict, key, fun)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e28e44f5eec92188579900f4d1adfd1c14edfaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#get_docs/2&quot;&gt;get_docs(module, kind)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd661fd7d88408bcf303743f95a841f277534d73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#get_env/3&quot;&gt;&lt;code&gt;get_env/3&lt;/code&gt;&lt;/a&gt; is commonly used to read the configuration of your OTP applications. Since Mix configurations are commonly used to configure applications, we will use this as a point of illustration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d07d43b03096228b2203cb924a6b0df79f5901" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#get_lazy/3&quot;&gt;get_lazy(dict, key, fun)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960547d3e858bc17fcf1aa0f6cdeda1fe52e0561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#h/0&quot;&gt;&lt;code&gt;h/0&lt;/code&gt;&lt;/a&gt; - prints this help message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19743c5e3f1e55ed9bb4b3747254749bbe801074" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#h/1&quot;&gt;&lt;code&gt;h/1&lt;/code&gt;&lt;/a&gt; - prints help for the given module, function or macro</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f3928b1fea5a216142862476187687eb9f056c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#has_key?/2&quot;&gt;has_key?(dict, key)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542de0dc11f6406feaf48cc1a1c3418d9a0d57b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#i/0&quot;&gt;&lt;code&gt;i/0&lt;/code&gt;&lt;/a&gt; - prints information about the last value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3232ca8d2b54ddb6e46bb7adb36d94138246a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#i/1&quot;&gt;&lt;code&gt;i/1&lt;/code&gt;&lt;/a&gt; - prints information about the given term</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b7992c622a25e70d6cc1eaf54cbfec52f0ba98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#import/2&quot;&gt;&lt;code&gt;import/2&lt;/code&gt;&lt;/a&gt; allows one to easily access functions or macros from other modules without using the qualified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093c0d5ebe9f5e05ba0f4cc8533618f2e6e4cc92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#import/2&quot;&gt;&lt;code&gt;import/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#require/2&quot;&gt;&lt;code&gt;require/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#alias/2&quot;&gt;&lt;code&gt;alias/2&lt;/code&gt;&lt;/a&gt; are called directives and all have lexical scope. This means you can set up aliases inside specific functions and it won't affect the overall scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde41dba58ef541088f0074187dd943ba343cc55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#inspect/2&quot;&gt;&lt;code&gt;inspect/2&lt;/code&gt;&lt;/a&gt; accepts a list of options that are internally translated to an &lt;a href=&quot;inspect.opts&quot;&gt;&lt;code&gt;Inspect.Opts&lt;/code&gt;&lt;/a&gt; struct. Check the docs for &lt;a href=&quot;inspect.opts&quot;&gt;&lt;code&gt;Inspect.Opts&lt;/code&gt;&lt;/a&gt; to see the supported options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41111c4ae67883b3e4b10edc0bb2736303ed7a5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#intersection/2&quot;&gt;intersection(set1, set2)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2012e7856bf92a92696ec61b42a5122e1f3e03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#keys/1&quot;&gt;keys(dict)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#keys/1&quot;&gt;keys(dict)&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="21469ff53a86e84cb99346e603811407ee806cfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#load_paths/1&quot;&gt;load_paths(config \\ config())&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36933612b6ddafd4a93469ea8e9eb29d0f2879f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ls/0&quot;&gt;&lt;code&gt;ls/0&lt;/code&gt;&lt;/a&gt; - lists the contents of the current directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357070272385cf37a2b3676ff8a2f0236ef38d77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ls/1&quot;&gt;&lt;code&gt;ls/1&lt;/code&gt;&lt;/a&gt; - lists the contents of the specified directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937dc8e29d8e16d36112873c1db74192550f1264" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#match?/2&quot;&gt;&lt;code&gt;match?/2&lt;/code&gt;&lt;/a&gt; is very useful when filtering or finding a value in an enumerable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fe73b263a9c473980ecf4275a7ab090477fd7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#member?/2&quot;&gt;member?(hash_set, term)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c16597820f6ee73998d6f7273ca35133bc26ce0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#member?/2&quot;&gt;member?(set, value)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6269c098b59a845bb12e870649d93b6be43ff553" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#merge/2&quot;&gt;merge(dict1, dict2)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c567012ee0b39c9e08ece9e8fbd87e8e277afcc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#merge/3&quot;&gt;merge(dict1, dict2, fun \\ fn _k, _v1, v2 -&amp;gt; v2 end)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32c7734f32fdda3ab98a2fdca724da1d1380f08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#merge/3&quot;&gt;merge(dict1, dict2, fun)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc7f77edda390ab731b361b022928d7511c8111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#monotonic_time/0&quot;&gt;&lt;code&gt;monotonic_time/0&lt;/code&gt;&lt;/a&gt; - a monotonically increasing time provided by the Erlang VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd18f509b6397e9de353d6fb5362f68cec91191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#new/0&quot;&gt;new()&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#new/0&quot;&gt;new()&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="e9c8cbbbe0a35441c474d83f5d1330c8e11e0da5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#normalize/2&quot;&gt;normalize(string, form)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd1f0bee8764f45f2016bbfe3eb361778b6cb62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#on_exit/2&quot;&gt;&lt;code&gt;on_exit/2&lt;/code&gt;&lt;/a&gt; callbacks are executed in a separate process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10fa7599dadd84a391e836539ed53c120867b0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#on_exit/2&quot;&gt;&lt;code&gt;on_exit/2&lt;/code&gt;&lt;/a&gt; callbacks are registered on demand, usually to undo an action performed by a setup callback. &lt;a href=&quot;#on_exit/2&quot;&gt;&lt;code&gt;on_exit/2&lt;/code&gt;&lt;/a&gt; may also take a reference, allowing the callback to be overridden in the future. A registered &lt;a href=&quot;#on_exit/2&quot;&gt;&lt;code&gt;on_exit/2&lt;/code&gt;&lt;/a&gt; callback will always run, while failures in &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;setup_all&lt;/code&gt; will stop all remaining setup callbacks from executing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13679077fc10788639cdfcbf83c026a056f086e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#on_exit/2&quot;&gt;&lt;code&gt;on_exit/2&lt;/code&gt;&lt;/a&gt; is usually called from &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;setup_all&lt;/code&gt; callbacks, often to undo the action performed during the setup. However, &lt;a href=&quot;#on_exit/2&quot;&gt;&lt;code&gt;on_exit/2&lt;/code&gt;&lt;/a&gt; may also be called dynamically, where a reference can be used to guarantee the callback will be invoked only once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52941cfe919ba60ab5181f1cd40ddfa9e431276d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#open/1&quot;&gt;&lt;code&gt;open/1&lt;/code&gt;&lt;/a&gt; - opens the source for the given module or function in your editor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616a152b7bcfedd472109cf2da7e140858d58658" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#os_time/0&quot;&gt;&lt;code&gt;os_time/0&lt;/code&gt;&lt;/a&gt; - the time reported by the operating system (OS). This time may be adjusted forwards or backwards in time with no limitation;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47618cc3fff22e30c4fa8a838689e5afd75bdf3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pid/1&quot;&gt;&lt;code&gt;pid/1&lt;/code&gt;&lt;/a&gt; - creates a PID from a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b396f330b2d26b583023bf778c5d20b00657f19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pid/3&quot;&gt;&lt;code&gt;pid/3&lt;/code&gt;&lt;/a&gt; - creates a PID with the 3 integer arguments passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c546ba1c71d9f4b3b42f1eca1be4c5226ede16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pop/3&quot;&gt;pop(dict, key, default \\ nil)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d958a61e393278e0cd00dfa95d6462ae94d0de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pop_lazy/3&quot;&gt;pop_lazy(dict, key, fun)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a32e4c4efef832bec82bafc3435f8f33576ba8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#port/1&quot;&gt;&lt;code&gt;port/1&lt;/code&gt;&lt;/a&gt; - creates a port from a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d6e996940334346a20be14c9b3b86e99e9995c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#port/2&quot;&gt;&lt;code&gt;port/2&lt;/code&gt;&lt;/a&gt; - creates a port with the 2 non-negative integers passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b56db0d4266f24e1be5a5a75f185a2b867a3c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put/2&quot;&gt;put(hash_set, term)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92a98e4aec650b063d50b90c0e5c2ecf4a58e51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put/2&quot;&gt;put(set, value)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d04e3a694af60374a34ec1c1f670e9675e6c4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put/3&quot;&gt;put(dict, key, val)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe77848f6c13900c88bbba3db80cc7e52053336" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put/3&quot;&gt;put(hash_dict, key, value)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ede5d93f863557ef60a0cfcd65d2b14db27caf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_new/3&quot;&gt;put_new(dict, key, val)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5859581451c1388b3f90772ea1a5899cdbcd1a7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_new/3&quot;&gt;put_new(dict, key, value)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f9dcb56f607fb0463dea76bcd2016a4ae7aa15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#put_new_lazy/3&quot;&gt;put_new_lazy(dict, key, fun)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bc267e5bbeb49cd6316153821954a130d550ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#pwd/0&quot;&gt;&lt;code&gt;pwd/0&lt;/code&gt;&lt;/a&gt; - prints the current working directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66ab0c44b60260b1922b59d48d9918424bcad1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#quote/2&quot;&gt;&lt;code&gt;quote/2&lt;/code&gt;&lt;/a&gt; is commonly used with macros for code generation. As an exercise, let's define a macro that multiplies a number by itself (squared). In practice, there is no reason to define such a macro (and it would actually be seen as a bad practice), but it is simple enough that it allows us to focus on the important aspects of quotes and macros:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432ad72c509b39a05b51f6d7016a1e5a9a0e9561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#r/1&quot;&gt;&lt;code&gt;r/1&lt;/code&gt;&lt;/a&gt; - recompiles the given module's source file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe953d840ff484f4d47fa7141ee2396cc838dfda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#recompile/0&quot;&gt;&lt;code&gt;recompile/0&lt;/code&gt;&lt;/a&gt; - recompiles the current project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2641f619dd648de7f2a8f4ba6ae66ecbe9546e15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ref/1&quot;&gt;&lt;code&gt;ref/1&lt;/code&gt;&lt;/a&gt; - creates a reference from a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca63085b656baaf8f7c03a10c631ff95442ada4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#ref/4&quot;&gt;&lt;code&gt;ref/4&lt;/code&gt;&lt;/a&gt; - creates a reference with the 4 integer arguments passed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f84befdbaf87d56d6c67aaa7889235e21fc1c26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#register/2&quot;&gt;&lt;code&gt;register/2&lt;/code&gt;&lt;/a&gt; will fail with &lt;a href=&quot;argumenterror&quot;&gt;&lt;code&gt;ArgumentError&lt;/code&gt;&lt;/a&gt; in any of the following cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692a9f8d5ab97690237195e650af7549bbfeccb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#rem/2&quot;&gt;&lt;code&gt;rem/2&lt;/code&gt;&lt;/a&gt; uses truncated division, which means that the result will always have the sign of the &lt;code&gt;dividend&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4a4f917b7b8512b9162cbfcb3f1fae13b14d05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#require/2&quot;&gt;&lt;code&gt;require/2&lt;/code&gt;&lt;/a&gt; also accepts &lt;code&gt;:as&lt;/code&gt; as an option so it automatically sets up an alias. Please check &lt;a href=&quot;#alias/2&quot;&gt;&lt;code&gt;alias/2&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd720a446e83ac002314dfba21c7ddbba473fdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#require_file/2&quot;&gt;&lt;code&gt;require_file/2&lt;/code&gt;&lt;/a&gt; - compiles a file and tracks its name. It does not compile the file again if it has been previously required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db62760a6bd2ae37d69aeb9d32f9381ac521a61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#reraise/3&quot;&gt;&lt;code&gt;reraise/3&lt;/code&gt;&lt;/a&gt; works like &lt;a href=&quot;#reraise/2&quot;&gt;&lt;code&gt;reraise/2&lt;/code&gt;&lt;/a&gt;, except it passes arguments to the &lt;code&gt;exception/1&lt;/code&gt; function as explained in &lt;a href=&quot;#raise/2&quot;&gt;&lt;code&gt;raise/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf62aeb4917bf9d2722711b98514001abb4ae56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#runtime_info/0&quot;&gt;&lt;code&gt;runtime_info/0&lt;/code&gt;&lt;/a&gt; - prints runtime info (versions, memory usage, stats)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670385fd32e9e3b9a7c4c663f7f0cb7315758a04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#shell/0&quot;&gt;&lt;code&gt;shell/0&lt;/code&gt;&lt;/a&gt; can be used as a wrapper for the current shell. It contains conveniences for requesting information from the user, printing to the shell and so forth. The Mix shell is swappable (see &lt;a href=&quot;#shell/1&quot;&gt;&lt;code&gt;shell/1&lt;/code&gt;&lt;/a&gt;), allowing developers to use a test shell that simply sends messages to the current process instead of performing IO (see &lt;a href=&quot;mix.shell.process&quot;&gt;&lt;code&gt;Mix.Shell.Process&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1074851f3734f3047627448f2599b6305359932" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#size/1&quot;&gt;size(dict)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#size/1&quot;&gt;size(dict)&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="a5a425f34864ede71fe5bf04bb55427a45ad9852" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#size/1&quot;&gt;size(hash_dict)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#size/1&quot;&gt;size(hash_dict)&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="91013c472684dbabf10e72d62b7f2caad1f76ad7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#size/1&quot;&gt;size(hash_set)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#size/1&quot;&gt;size(hash_set)&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="cf57ab0fa902659f022d607ffa9fb6c5433c4505" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#size/1&quot;&gt;size(set)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#size/1&quot;&gt;size(set)&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="626936a828311dd14b698515aef75533cf4167fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#sort_by/3&quot;&gt;&lt;code&gt;sort_by/3&lt;/code&gt;&lt;/a&gt; differs from &lt;a href=&quot;#sort/2&quot;&gt;&lt;code&gt;sort/2&lt;/code&gt;&lt;/a&gt; in that it only calculates the comparison value for each element in the enumerable once instead of once for each element in each comparison. If the same function is being called on both elements, it's also more compact to use &lt;a href=&quot;#sort_by/3&quot;&gt;&lt;code&gt;sort_by/3&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60559b4d2bc362042b28b138a4983ccd249ff688" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#split/1&quot;&gt;&lt;code&gt;split/1&lt;/code&gt;&lt;/a&gt; also supports splitting the string representation of Elixir modules (that is, the result of calling &lt;a href=&quot;atom#to_string/1&quot;&gt;&lt;code&gt;Atom.to_string/1&lt;/code&gt;&lt;/a&gt; with the module name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1a388d5c100ac7ac8e4edd0ad0fcbb43dc6670" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#split/2&quot;&gt;split(dict, keys)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a839f6b19f4a93c95f17bd70815a5f5ae1fec25c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#start_supervised/2&quot;&gt;&lt;code&gt;start_supervised/2&lt;/code&gt;&lt;/a&gt; is used to start processes under a supervisor. The supervisor is linked to the current test process. The supervisor as well as all child processes are guaranteed to terminate before any &lt;a href=&quot;#on_exit/2&quot;&gt;&lt;code&gt;on_exit/2&lt;/code&gt;&lt;/a&gt; callback runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea299a71c57ad54bbb1291b5b0bf8eaa7d98b70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#subset?/2&quot;&gt;subset?(set1, set2)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b91c1b6b06a551d28217e67c82245c59f5fc42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#system_time/0&quot;&gt;&lt;code&gt;system_time/0&lt;/code&gt;&lt;/a&gt; - the VM view of the &lt;a href=&quot;#os_time/0&quot;&gt;&lt;code&gt;os_time/0&lt;/code&gt;&lt;/a&gt;. The system time and operating system time may not match in case of time warps although the VM works towards aligning them. This time is not monotonic (i.e., it may decrease) as its behaviour is configured &lt;a href=&quot;http://www.erlang.org/doc/apps/erts/time_correction.html#Time_Warp_Modes&quot;&gt;by the VM time warp mode&lt;/a&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a910d3097d863ddaa69e25ca634c9c2d0ff09fdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#take/2&quot;&gt;take(dict, keys)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fc84cdb5a0b8ff72b9989e5b4643fd4bc66ed6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#to_list/1&quot;&gt;to_list(dict)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#to_list/1&quot;&gt;to_list(dict)&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="efb54c0d5025af3d4094af3e276cbb346dbb4882" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#to_list/1&quot;&gt;to_list(set)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#to_list/1&quot;&gt;to_list(set)&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="cc576d218475236e4dc49535c74b57512f19ba48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#union/2&quot;&gt;union(set1, set2)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b5e1a313d2c2c23b34751f70c011ce157d81d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#update!/3&quot;&gt;update!(dict, key, fun)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343e6495a34913d90dfeee777a4b16105de5362e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#update/4&quot;&gt;update(dict, key, initial, fun)&lt;/a&gt;deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13df65c251ab570de036866a2084466ac9678138" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#v/0&quot;&gt;&lt;code&gt;v/0&lt;/code&gt;&lt;/a&gt; - retrieves the last value from the history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebecc318b3d2d265221375fdc3eaf1a5d83f9bad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#v/1&quot;&gt;&lt;code&gt;v/1&lt;/code&gt;&lt;/a&gt; - retrieves the nth value from the history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89de67b62d3947c0be1ba98d00e4e8a6a80621cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#values/1&quot;&gt;values(dict)&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;#values/1&quot;&gt;values(dict)&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="89b7bc005a97dedd184505f2be99cff7715414cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;access&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; behaviour (v1.1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2312d6e1e9cf0800c59c148ad084c51c47eb454a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;access&quot;&gt;&lt;code&gt;Access&lt;/code&gt;&lt;/a&gt; protocol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679b37e595484d9fc0cd50fb4098f4f1c6dcd97a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;access#key/2&quot;&gt;&lt;code&gt;Access.key/2&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5600c390fd95aa133dc65b2718412e59fa26a569" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;agent&quot;&gt;&lt;code&gt;Agent&lt;/code&gt;&lt;/a&gt; - a process that encapsulates mutable state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fadcb94573afb3ae4360d77cf5a94507fd777a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;application&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; - functions for starting, stopping and configuring applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada0e57fa63190500b57980459c6cca9af4c9c67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atom&quot;&gt;&lt;code&gt;Atom&lt;/code&gt;&lt;/a&gt; - literal constants with a name (&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt; are atoms)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4820ccbf93c1a5b1380aff95449c20dd61cfcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;atom#to_charlist/1&quot;&gt;&lt;code&gt;Atom.to_charlist/1&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758975c4db219a3c7145cc7ebb2fcce7fb26cd94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;behaviour&quot;&gt;&lt;code&gt;Behaviour&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445ac1058547657fe8c046fdb4e5632d48756b76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;behaviour&quot;&gt;Behaviour&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;behaviour&quot;&gt;Behaviour&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="013bec668aaac8f218848531ec08b2a89b618632" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;code#fetch_docs/1&quot;&gt;&lt;code&gt;Code.fetch_docs/1&lt;/code&gt;&lt;/a&gt; (v1.7)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bee9a0422d93b29f329c0e84f62573c27e26534" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collectable&quot;&gt;&lt;code&gt;Collectable&lt;/code&gt;&lt;/a&gt; - collects data into a data type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e55103db5e4aafb96d9f51c7409782359e457f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compatibility-and-deprecations&quot;&gt;Compatibility and Deprecations&lt;/a&gt; - lists compatibility between every Elixir version and Erlang/OTP, release schema; lists all deprecated functions, when they were deprecated and alternatives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5ed830b8465bda03ed4fbe9c550f8560bb69a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;year-month-day&lt;/code&gt; structs in a given calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e550c6b2ed71574a9746da60c35a36d487fb29b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; - date and time with time zone in a given calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8d3de86cba5b22a096e2826c8ddea6c6f0b158" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dict&quot;&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/a&gt; behaviour</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1914ba907a5f1e4ec8c80d44abf493b0726f696" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dict&quot;&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39825d1772b5b1a2f24197c12a97a67dc153c3f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dict&quot;&gt;Dict&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;dict&quot;&gt;Dict&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="d3a9d446e4836fed468abd2d5b72711f810ac8dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eex.smartengine&quot;&gt;&lt;code&gt;EEx.SmartEngine&lt;/code&gt;&lt;/a&gt; also adds some macros to your template. An example is the &lt;code&gt;@&lt;/code&gt; macro which allows easy data access in a template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63797069a047def501f22e01206b5ebd7134049f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eex.smartengine&quot;&gt;&lt;code&gt;EEx.SmartEngine&lt;/code&gt;&lt;/a&gt; supports the following tags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6c1914106621f3faea84b544f4c70b9ae63923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#chunk_every/2&quot;&gt;&lt;code&gt;Enum.chunk_every/2&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;enum#chunk_every/4&quot;&gt;&lt;code&gt;/3/4&lt;/code&gt;&lt;/a&gt; (v1.5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888f82824a50d67bc70d98facfb6921cb05352cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#filter/2&quot;&gt;&lt;code&gt;Enum.filter/2&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;enum#map/2&quot;&gt;&lt;code&gt;Enum.map/2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;kernel.specialforms#for/1&quot;&gt;&lt;code&gt;for&lt;/code&gt;&lt;/a&gt; comprehensions (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122c34d48485a8c5ee221db9f5e783c990d7ab47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#reduce/3&quot;&gt;&lt;code&gt;Enum.reduce/3&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51c7494938c643e5335c166af830e0b47ff5ac5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#split_with/2&quot;&gt;&lt;code&gt;Enum.split_with/2&lt;/code&gt;&lt;/a&gt; (v1.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9e582da918763db2cf4cbbd636d03f0195d200" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enum#uniq_by/2&quot;&gt;&lt;code&gt;Enum.uniq_by/2&lt;/code&gt;&lt;/a&gt; (v1.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92f7918a869dce5a34221ab0fb92f16cb1a24c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;enumerable&quot;&gt;&lt;code&gt;Enumerable&lt;/code&gt;&lt;/a&gt; - handles collections in Elixir. The &lt;a href=&quot;enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt; module provides eager functions for working with collections, the &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; module provides lazy functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06573a30d3dff341741845957678d655e9f24f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; - data raised from errors and unexpected scenarios</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24323c1643aa3f2cab24e1c281c0739d997bcbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception#c:exception/1&quot;&gt;&lt;code&gt;exception/1&lt;/code&gt;&lt;/a&gt; - receives the arguments given to &lt;a href=&quot;#raise/2&quot;&gt;&lt;code&gt;raise/2&lt;/code&gt;&lt;/a&gt; and returns the exception struct. The default implementation accepts either a set of keyword arguments that is merged into the struct or a string to be used as the exception's message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da79dc8b7e6dda7a4839029589a73700ecfb40d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;exception#c:message/1&quot;&gt;&lt;code&gt;message/1&lt;/code&gt;&lt;/a&gt; - receives the exception struct and must return its message. Most commonly exceptions have a message field which by default is accessed by this function. However, if an exception does not have a message field, this function must be explicitly implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa893aba9adbea62e75ebf17fe7aa6c05132d58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; - interacts with the underlying file system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7cc8382dfd08befe9d22047f4cb8e9c10e4ec1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;file#cwd/0&quot;&gt;&lt;code&gt;File.cwd/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;file#cwd!/0&quot;&gt;&lt;code&gt;File.cwd!/0&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed791ec1f305367f1251021a074c3493fb448ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; - numbers with floating point precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628db3956f9656a4eab855b6279e3700843072fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;float#to_charlist/1&quot;&gt;&lt;code&gt;Float.to_charlist/1&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f77cb9307029ca83f2601b2468feef0e62bbdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; - a reference to code chunk, created with the &lt;a href=&quot;kernel.specialforms#fn/1&quot;&gt;&lt;code&gt;fn/1&lt;/code&gt;&lt;/a&gt; special form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc254b00fa9be6d23bb09d518a444c087113b41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;genevent&quot;&gt;&lt;code&gt;GenEvent&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b13b92debe24e5fd72fbe00c5c6b84c509c7fea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;genevent&quot;&gt;GenEvent&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;genevent&quot;&gt;GenEvent&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="f19798e8cccab8b331a8e7ea097fe7ea8b6d5701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; - a generic client-server API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc50c15ee7bda07784f610aa4c41d5292bed8b7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;guards&quot;&gt;Guards&lt;/a&gt; - an introduction to guards and extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4099fcd532e11a1754b3549275a545b84ee7647" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hashdict&quot;&gt;&lt;code&gt;HashDict&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67853cbe36d8992f341e8d848f7c64c81ca8e19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hashdict&quot;&gt;HashDict&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;hashdict&quot;&gt;HashDict&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="02ed12ef05a83bc01b20ffa896346a8b3afe3948" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hashset&quot;&gt;&lt;code&gt;HashSet&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f749aa213b1a947baf76d2cb85e36db59de285a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;hashset&quot;&gt;HashSet&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;hashset&quot;&gt;HashSet&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="8797cbf9efdc4b107ca802435805d98aa89c338a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://erlang.org/doc/man/crypto.html&quot;&gt;The crypto module&lt;/a&gt; contains hashing functions, digital signatures, encryption and more:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ae928409d30748349041f92760e1d28714ecc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://erlang.org/doc/man/digraph.html&quot;&gt;The digraph module&lt;/a&gt; (as well as &lt;a href=&quot;http://erlang.org/doc/man/digraph_utils.html&quot;&gt;digraph_utils&lt;/a&gt;) contains functions for dealing with directed graphs built of vertices and edges. After constructing the graph, the algorithms in there will help find, for instance, the shortest path between two vertices, or loops in the graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8922981ddbbc76ed868b5540fcd574ab81e49ce1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://erlang.org/doc/man/math.html&quot;&gt;The &lt;code&gt;math&lt;/code&gt; module&lt;/a&gt; contains common mathematical operations covering trigonometry, exponential, and logarithmic functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb9bb87633cb56ec093eab1635f5aca2a12085a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://erlang.org/doc/man/msacc.html&quot;&gt;Microstate accounting&lt;/a&gt; measures how much time the runtime spends in several low-level tasks in a short time interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6180a449e0129448dcbf4d34fe9842e88b24154f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://erlang.org/doc/man/rand.html&quot;&gt;&lt;code&gt;rand&lt;/code&gt; has functions&lt;/a&gt; for returning random values and setting the random seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d933121db66239c24c796b279acaeeb84e7ee994" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://erlang.org/doc/man/zip.html&quot;&gt;The &lt;code&gt;zip&lt;/code&gt; module&lt;/a&gt; lets you read and write ZIP files to and from disk or memory, as well as extracting file information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7512d34a188b1454f38b869f76dc77f518f81da9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://erlang.org/doc/man/zlib.html&quot;&gt;The &lt;code&gt;zlib&lt;/code&gt; module&lt;/a&gt; deals with data compression in zlib format, as found in the &lt;code&gt;gzip&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e066a4249aba44980d9c9dbd271c69334759b83c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://learnyousomeerlang.com/&quot;&gt;Learn You Some Erlang for Great Good!&lt;/a&gt; is an excellent introduction to Erlang, its design principles, standard library, best practices, and much more. Once you have read through the crash course mentioned above, you&amp;rsquo;ll be able to safely skip the first couple of chapters in the book that mostly deal with the syntax. When you reach &lt;a href=&quot;http://learnyousomeerlang.com/the-hitchhikers-guide-to-concurrency&quot;&gt;The Hitchhiker&amp;rsquo;s Guide to Concurrency&lt;/a&gt; chapter, that&amp;rsquo;s where the real fun starts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527c375ae2fd09354ac632ba4d7098d35a5efe9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#float_to_binary-2&quot;&gt;&lt;code&gt;:erlang.float_to_binary/2&lt;/code&gt;&lt;/a&gt; (Erlang/OTP 17)</source>
          <target state="translated">&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#float_to_binary-2&quot;&gt;&lt;code&gt;:erlang.float_to_binary/2&lt;/code&gt;&lt;/a&gt; (Erlang/OTP 17)</target>
        </trans-unit>
        <trans-unit id="2d19a6eca5a4914177cf17cffaf03207dffaf7d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#float_to_list-2&quot;&gt;&lt;code&gt;:erlang.float_to_list/2&lt;/code&gt;&lt;/a&gt; (Erlang/OTP 17)</source>
          <target state="translated">&lt;a href=&quot;http://www.erlang.org/doc/man/erlang.html#float_to_list-2&quot;&gt;&lt;code&gt;:erlang.float_to_list/2&lt;/code&gt;&lt;/a&gt; (Erlang/OTP 17)</target>
        </trans-unit>
        <trans-unit id="bccb444dd383e36e8167ca285ba8947e7bff742c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.erlang.org/doc/man/gen_event.html&quot;&gt;&lt;code&gt;:gen_event&lt;/code&gt;&lt;/a&gt; (Erlang/OTP 17)</source>
          <target state="translated">&lt;a href=&quot;http://www.erlang.org/doc/man/gen_event.html&quot;&gt;&lt;code&gt;:gen_event&lt;/code&gt;&lt;/a&gt; (Erlang/OTP 17)</target>
        </trans-unit>
        <trans-unit id="5ab3db52b3ac10cb7551a80191234e2828659202" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#get_state-2&quot;&gt;&lt;code&gt;:sys.get_state/2&lt;/code&gt;&lt;/a&gt; - allows retrieval of the state of the process. In the case of a GenServer process, it will be the callback module state, as passed into the callback functions as last argument.</source>
          <target state="translated">&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#get_state-2&quot;&gt;&lt;code&gt;:sys.get_state/2&lt;/code&gt;&lt;/a&gt; - allows retrieval of the state of the process. In the case of a GenServer process, it will be the callback module state, as passed into the callback functions as last argument.</target>
        </trans-unit>
        <trans-unit id="c1a29456f5598a26784c0511bef806f007ef8b03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#get_status-2&quot;&gt;&lt;code&gt;:sys.get_status/2&lt;/code&gt;&lt;/a&gt; - allows retrieval of the status of the process. This status includes the process dictionary, if the process is running or is suspended, the parent PID, the debugger state, and the state of the behaviour module, which includes the callback module state (as returned by &lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#get_state-2&quot;&gt;&lt;code&gt;:sys.get_state/2&lt;/code&gt;&lt;/a&gt;). It's possible to change how this status is represented by defining the optional &lt;a href=&quot;genserver#c:format_status/2&quot;&gt;&lt;code&gt;GenServer.format_status/2&lt;/code&gt;&lt;/a&gt; callback.</source>
          <target state="translated">&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#get_status-2&quot;&gt;&lt;code&gt;:sys.get_status/2&lt;/code&gt;&lt;/a&gt; - allows retrieval of the status of the process. This status includes the process dictionary, if the process is running or is suspended, the parent PID, the debugger state, and the state of the behaviour module, which includes the callback module state (as returned by &lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#get_state-2&quot;&gt;&lt;code&gt;:sys.get_state/2&lt;/code&gt;&lt;/a&gt;). It's possible to change how this status is represented by defining the optional &lt;a href=&quot;genserver#c:format_status/2&quot;&gt;&lt;code&gt;GenServer.format_status/2&lt;/code&gt;&lt;/a&gt; callback.</target>
        </trans-unit>
        <trans-unit id="73155ebc8b4163e289b18c9b9c82d272bc7c4d3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#no_debug-2&quot;&gt;&lt;code&gt;:sys.no_debug/2&lt;/code&gt;&lt;/a&gt; - turns off all debug handlers for the given process. It is very important to switch off debugging once we're done. Excessive debug handlers or those that should be turned off, but weren't, can seriously damage the performance of the system.</source>
          <target state="translated">&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#no_debug-2&quot;&gt;&lt;code&gt;:sys.no_debug/2&lt;/code&gt;&lt;/a&gt; - turns off all debug handlers for the given process. It is very important to switch off debugging once we're done. Excessive debug handlers or those that should be turned off, but weren't, can seriously damage the performance of the system.</target>
        </trans-unit>
        <trans-unit id="3a8c38a33fc1c45f8d07dee36349936e113d02c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#statistics-3&quot;&gt;&lt;code&gt;:sys.statistics/3&lt;/code&gt;&lt;/a&gt; - manages collection of process statistics.</source>
          <target state="translated">&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#statistics-3&quot;&gt;&lt;code&gt;:sys.statistics/3&lt;/code&gt;&lt;/a&gt; - manages collection of process statistics.</target>
        </trans-unit>
        <trans-unit id="a926524e19dafa82499ec3c2f24df7b90ba72673" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#suspend-2&quot;&gt;&lt;code&gt;:sys.suspend/2&lt;/code&gt;&lt;/a&gt; - allows to suspend a process so that it only replies to system messages but no other messages. A suspended process can be reactivated via &lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#resume-2&quot;&gt;&lt;code&gt;:sys.resume/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#suspend-2&quot;&gt;&lt;code&gt;:sys.suspend/2&lt;/code&gt;&lt;/a&gt; - allows to suspend a process so that it only replies to system messages but no other messages. A suspended process can be reactivated via &lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#resume-2&quot;&gt;&lt;code&gt;:sys.resume/2&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="13a6ec3007196670fa5daaab2a50902477e0f31d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#trace-3&quot;&gt;&lt;code&gt;:sys.trace/3&lt;/code&gt;&lt;/a&gt; - prints all the system events to &lt;code&gt;:stdio&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.erlang.org/doc/man/sys.html#trace-3&quot;&gt;&lt;code&gt;:sys.trace/3&lt;/code&gt;&lt;/a&gt; - prints all the system events to &lt;code&gt;:stdio&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="4fde4b0d4b08f3393de8e6befe8f4b3e8dab943f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/ANSI_escape_code&quot;&gt;ANSI escape sequences&lt;/a&gt; are characters embedded in text used to control formatting, color, and other output options on video text terminals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baaca2c16396ae8aec17073fb4ec69a254b77521" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;Domain-specific languages (DSL)&lt;/a&gt; allow developers to tailor their application to a particular domain. You don&amp;rsquo;t need macros in order to have a DSL: every data structure and every function you define in your module is part of your Domain-specific language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cefad1bc054ac390ca25f176e7ea08bded242f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/andytill/erlyberly&quot;&gt;erlyberly&lt;/a&gt; is a GUI for tracing during development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abdf288d40c71ff2ddddbbc395c9176b72ccbc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/koudelka/visualixir&quot;&gt;visualixir&lt;/a&gt; is a development-time process message visualizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e37a8c79beaf751f6d64fa8c83aedab63dcb98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/shinyscorpion/wObserver&quot;&gt;wObserver&lt;/a&gt; observes production nodes through a web interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fd0ca294ef076a32cf28bfb7f828586451b007" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hex.pm/packages/gen_stage&quot;&gt;&lt;code&gt;GenStage&lt;/code&gt;&lt;/a&gt; (v1.3);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae22bd64d472c4bb0cc4e6d99a2a88d43fdd91d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/elixir/Agent.html&quot;&gt;Agent&lt;/a&gt; - Simple wrappers around state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f60f9e7ae7c38ca8a97abd3b47fe19bf562b03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/elixir/Agent.html&quot;&gt;Agents&lt;/a&gt; are simple wrappers around state. If all you want from a process is to keep state, agents are a great fit. Let&amp;rsquo;s start an &lt;code&gt;iex&lt;/code&gt; session inside the project with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a087ca3842ed69cbd2c8e2431561a1f1b86ebe7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/elixir/GenServer.html&quot;&gt;GenServer&lt;/a&gt; - &amp;ldquo;Generic servers&amp;rdquo; (processes) that encapsulate state, provide sync and async calls, support code reloading, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd481e0651795a82ae8a5c19464d6df98304df58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/elixir/Map.html&quot;&gt;The &lt;code&gt;Map&lt;/code&gt; module&lt;/a&gt; provides a very similar API to the &lt;code&gt;Keyword&lt;/code&gt; module with convenience functions to manipulate maps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebeb881ff87a0b3f7eaa6896717cd0e6791a05d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/elixir/Module.html#register_attribute/3&quot;&gt;&lt;code&gt;Module.register_attribute/3&lt;/code&gt;&lt;/a&gt; is used to register the attribute, this function takes the same options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88134bc9f0330dff5fd74dd01c120f8f2ac9fe58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/elixir/Task.html&quot;&gt;Task&lt;/a&gt; - Asynchronous units of computation that allow spawning a process and potentially retrieving its result at a later time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b90a9ea20c672d44a0b1bb3128d702928e8ccb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/elixir/Task.html&quot;&gt;The Task module&lt;/a&gt; provides this functionality exactly. For example, it has a &lt;code&gt;start_link/1&lt;/code&gt; function that receives an anonymous function and executes it inside a new process that will be of a supervision tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f84d99eaf7af6ce7e3e83f3005c30265dcd0197" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.Case.html&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; will then define the &lt;code&gt;__using__/1&lt;/code&gt; macro:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85c55fac5ed572af382ff64e43e9b4c5e2c057c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/iex/IEx.Helpers.html#import_file_if_available/1&quot;&gt;&lt;code&gt;IEx.Helpers.import_file_if_available/1&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307aa17f877134bba51c4b9b9764117a2b8deb46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hexdocs.pm/mix/Mix.Project.html#compile_path/1&quot;&gt;&lt;code&gt;Mix.Project.compile_path/1&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62d5c33973c26b49ee7351e5aad40f26cc188dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex#break!/2&quot;&gt;&lt;code&gt;IEx.break!/2&lt;/code&gt;&lt;/a&gt; allows patterns to be given, triggering the breakpoint only in some occasions. For example, to trigger the breakpoint only when the first argument is the &quot;foo=bar&quot; string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a752ba1fbf6d1ead30a36c0b5cbec169b74970c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex#break!/2&quot;&gt;&lt;code&gt;IEx.break!/2&lt;/code&gt;&lt;/a&gt; is a convenience macro that allows breakpoints to be given in the &lt;code&gt;Mod.fun/arity&lt;/code&gt; format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fab2f4253174c91c83e96fdb8f65c84f866a225" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex#pry/0&quot;&gt;&lt;code&gt;IEx.pry/0&lt;/code&gt;&lt;/a&gt; can be used when you are able to modify the source code directly and recompile it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236d2e025c3a44905a391a43646219c6dbfb822d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#break!/2&quot;&gt;&lt;code&gt;IEx.Helpers.break!/2&lt;/code&gt;&lt;/a&gt; - sets up a breakpoint for a given &lt;code&gt;Mod.fun/arity&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70737da8a56e41b8fcf27c8e172ac6c4eff532af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#break!/4&quot;&gt;&lt;code&gt;IEx.Helpers.break!/4&lt;/code&gt;&lt;/a&gt; - sets up a breakpoint for the given module, function, arity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493a579a17140508b797b3180a837293de5c85fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#breaks/0&quot;&gt;&lt;code&gt;IEx.Helpers.breaks/0&lt;/code&gt;&lt;/a&gt; - prints all breakpoints and their IDs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e721fcd7e3ff5d7d987ac1b9c8bdb53dbd569319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#continue/0&quot;&gt;&lt;code&gt;IEx.Helpers.continue/0&lt;/code&gt;&lt;/a&gt; - continues until the next breakpoint in the same shell</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29d4ec9b04b34c15c572797925cc88bbb70fc88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#open/0&quot;&gt;&lt;code&gt;IEx.Helpers.open/0&lt;/code&gt;&lt;/a&gt; - opens editor on the current breakpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ed030dd4f3c7a5e5360e6b4d1a6748af8c7592" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#remove_breaks/0&quot;&gt;&lt;code&gt;IEx.Helpers.remove_breaks/0&lt;/code&gt;&lt;/a&gt; - removes all breakpoints in all modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccf28573f376b3868e300388342b40fbbc31e90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#remove_breaks/1&quot;&gt;&lt;code&gt;IEx.Helpers.remove_breaks/1&lt;/code&gt;&lt;/a&gt; - removes all breakpoints in a given module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75205d9584cce25deafe0053700fd0a58aff0054" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#reset_break/1&quot;&gt;&lt;code&gt;IEx.Helpers.reset_break/1&lt;/code&gt;&lt;/a&gt; - sets the number of stops on the given ID to zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8490a3cafeeb102647cebcd76fee394214554a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#reset_break/3&quot;&gt;&lt;code&gt;IEx.Helpers.reset_break/3&lt;/code&gt;&lt;/a&gt; - sets the number of stops on the given module, function, arity to zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d837f5774928819d9b6f089198fcadfa3ca0a6db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#respawn/0&quot;&gt;&lt;code&gt;IEx.Helpers.respawn/0&lt;/code&gt;&lt;/a&gt; - starts a new shell (breakpoints will ask for permission once more)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24346f082b3682f3d7b5999912606a02176e9d42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;iex.helpers#whereami/1&quot;&gt;&lt;code&gt;IEx.Helpers.whereami/1&lt;/code&gt;&lt;/a&gt; - shows the current location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9afbb0b7100ba1395e6e31902c73bdf9e79d3f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;inspect&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; - converts data types into their programming language representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14080e1ce13e9fd7ef50c8b3935d7a36eba968f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;inspect.algebra#concat/2&quot;&gt;&lt;code&gt;Inspect.Algebra.concat/2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;inspect.algebra#nest/2&quot;&gt;&lt;code&gt;Inspect.Algebra.nest/2&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63abcf65d6da82e2139fa97224293234cf7a7156" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;inspect.algebra#container_doc/6&quot;&gt;&lt;code&gt;Inspect.Algebra.container_doc/6&lt;/code&gt;&lt;/a&gt; (v1.6)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94abb7e47a0edc1a1df4fa43606af0c3dbe3e35c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; - whole numbers (not fractions)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f50c80f64fdf6b2537571cb6239a6d5a4e6495cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;integer#floor_div/2&quot;&gt;&lt;code&gt;Integer.floor_div/2&lt;/code&gt;&lt;/a&gt; performs &lt;em&gt;floored&lt;/em&gt; integer division. This means that the result is always rounded towards negative infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bfde425420c74584f637e439fe48a2574b3d437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;integer#mod/2&quot;&gt;&lt;code&gt;Integer.mod/2&lt;/code&gt;&lt;/a&gt; uses floored division, which means that the result will always have the sign of the &lt;code&gt;divisor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb281c41c920fb2ce914129c0c8252f004c83b8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;integer#to_charlist/1&quot;&gt;&lt;code&gt;Integer.to_charlist/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;integer#to_charlist/2&quot;&gt;&lt;code&gt;Integer.to_charlist/2&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a42b3d45a287c54627c76d803d51c06365b07a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io&quot;&gt;&lt;code&gt;IO&lt;/code&gt;&lt;/a&gt; - handles input and output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401482342936897c716901d64b4c371722b56314" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;io#stream/2&quot;&gt;&lt;code&gt;IO.stream/2&lt;/code&gt;&lt;/a&gt; - streams input lines, one by one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7d72f36caa7c2b5b2ff6146bf2bf23d7fbe105" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#!=/2&quot;&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/a&gt; - inequality</source>
          <target state="translated">&lt;a href=&quot;kernel#!=/2&quot;&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/a&gt; - inequality</target>
        </trans-unit>
        <trans-unit id="44928f496b4ec66087e8058dc33aefbfe3bba761" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#!=/2&quot;&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#!==/2&quot;&gt;&lt;code&gt;!==&lt;/code&gt;&lt;/a&gt; act as the negation of &lt;a href=&quot;kernel#==/2&quot;&gt;&lt;code&gt;==&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="translated">&lt;a href=&quot;kernel#!=/2&quot;&gt;&lt;code&gt;!=&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#!==/2&quot;&gt;&lt;code&gt;!==&lt;/code&gt;&lt;/a&gt; act as the negation of &lt;a href=&quot;kernel#==/2&quot;&gt;&lt;code&gt;==&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt;, respectively.</target>
        </trans-unit>
        <trans-unit id="956766110cef35b2e9ae55f60ecf0e15ccd32132" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#!==/2&quot;&gt;&lt;code&gt;!==&lt;/code&gt;&lt;/a&gt; - strict inequality</source>
          <target state="translated">&lt;a href=&quot;kernel#!==/2&quot;&gt;&lt;code&gt;!==&lt;/code&gt;&lt;/a&gt; - strict inequality</target>
        </trans-unit>
        <trans-unit id="d086078701a425a5d8af1e5923f8c5f661076c32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#%253C/2&quot;&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/a&gt; - less than</source>
          <target state="translated">&lt;a href=&quot;kernel#%253C/2&quot;&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/a&gt; - less than</target>
        </trans-unit>
        <trans-unit id="6a858b9f15f9255980e5d6ab5b9ed6085a1ec480" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#%253C=/2&quot;&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/a&gt; - less than or equal</source>
          <target state="translated">&lt;a href=&quot;kernel#%253C=/2&quot;&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/a&gt; - less than or equal</target>
        </trans-unit>
        <trans-unit id="ec3aae46dd3b2957ca6c803e618ca2d454536b63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#%253E/2&quot;&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/a&gt; - greater than</source>
          <target state="translated">&lt;a href=&quot;kernel#%253E/2&quot;&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/a&gt; - greater than</target>
        </trans-unit>
        <trans-unit id="bad3c1a446543560361021411b471811a822ca80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#%253E=/2&quot;&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/a&gt; - greater than or equal</source>
          <target state="translated">&lt;a href=&quot;kernel#%253E=/2&quot;&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/a&gt; - greater than or equal</target>
        </trans-unit>
        <trans-unit id="d6fd879f7fbda8712413b14f38d440126ac33260" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#++/2&quot;&gt;&lt;code&gt;Kernel.++/2&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;keyword#merge/2&quot;&gt;&lt;code&gt;Keyword.merge/2&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81edb50affff017fd4c78ab69c9732fcd23833cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#==/2&quot;&gt;&lt;code&gt;==&lt;/code&gt;&lt;/a&gt; - equality</source>
          <target state="translated">&lt;a href=&quot;kernel#==/2&quot;&gt;&lt;code&gt;==&lt;/code&gt;&lt;/a&gt; - equality</target>
        </trans-unit>
        <trans-unit id="d6373d1dea3f72773512684b17e4554750af340b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt; - strict equality</source>
          <target state="translated">&lt;a href=&quot;kernel#===/2&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt; - strict equality</target>
        </trans-unit>
        <trans-unit id="d50a1bbf5f39b9b5e499516328a99dd8b3455df7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#binary_part/3&quot;&gt;&lt;code&gt;Kernel.binary_part/3&lt;/code&gt;&lt;/a&gt; - retrieves part of the binary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31731373ebbd530a72b54c3ecae9dbc411fc641a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#bit_size/1&quot;&gt;&lt;code&gt;Kernel.bit_size/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#byte_size/1&quot;&gt;&lt;code&gt;Kernel.byte_size/1&lt;/code&gt;&lt;/a&gt; - size related functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ee23cd839fad8b76f84c61d88e5036e1318fb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#elem/2&quot;&gt;&lt;code&gt;elem/2&lt;/code&gt;&lt;/a&gt; - accesses a tuple by index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14db2097d7c369c66d61e72a4d7e1089959a1050" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#in/2&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#in/2&quot;&gt;&lt;code&gt;not in&lt;/code&gt;&lt;/a&gt; operators (as long as the right-hand side is a list or a range)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d075045bff234c81053a95cb775403c016450ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#in/2&quot;&gt;&lt;code&gt;left not in right&lt;/code&gt;&lt;/a&gt; (v1.5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc1ba8838a2d04df5622dd4223983bc8e7489a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#is_bitstring/1&quot;&gt;&lt;code&gt;Kernel.is_bitstring/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#is_binary/1&quot;&gt;&lt;code&gt;Kernel.is_binary/1&lt;/code&gt;&lt;/a&gt; - type checking function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc3d5c9cb701ff73aeee6e64446ed86e97387d6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#length/1&quot;&gt;&lt;code&gt;Kernel.length/1&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5380e723e001d844dbffb13d7555b396b27c61d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#map_size/1&quot;&gt;&lt;code&gt;Kernel.map_size/1&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0d727f8697aec4fe9421230a64b03f074737c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#put_elem/3&quot;&gt;&lt;code&gt;put_elem/3&lt;/code&gt;&lt;/a&gt; - inserts a value into a tuple by index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd4cd0672b3e0108a4ea2a74ef1b8389ba96292" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#round/1&quot;&gt;&lt;code&gt;Kernel.round/1&lt;/code&gt;&lt;/a&gt;: rounds a number to the nearest integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f948d905439d2a0c299d500e65f59eafc1fc72e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#spawn/1&quot;&gt;&lt;code&gt;Kernel.spawn/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#spawn/3&quot;&gt;&lt;code&gt;Kernel.spawn/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8dd45c2986b5466e155fed664d72780240eb880" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#spawn_link/1&quot;&gt;&lt;code&gt;Kernel.spawn_link/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#spawn_link/3&quot;&gt;&lt;code&gt;Kernel.spawn_link/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b33a6d77ee10d3896110318310d8df68a11c4a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#spawn_monitor/1&quot;&gt;&lt;code&gt;Kernel.spawn_monitor/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;kernel#spawn_monitor/3&quot;&gt;&lt;code&gt;Kernel.spawn_monitor/3&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe1d348591d5d58878fae0dad336ac75e64be1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#to_charlist/1&quot;&gt;&lt;code&gt;Kernel.to_charlist/1&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56569bd6d1ccae3dc4f8b288bbdaa8e4e6c073e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#trunc/1&quot;&gt;&lt;code&gt;Kernel.trunc/1&lt;/code&gt;&lt;/a&gt;: returns the integer part of a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1736c0f512d71c21d28048b84d47160e0d0638d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel#tuple_size/1&quot;&gt;&lt;code&gt;tuple_size/1&lt;/code&gt;&lt;/a&gt; - gets the number of elements in a tuple</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5329f14893f56b1338c928c11ded4649e19128" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel.parallelcompiler#compile/2&quot;&gt;&lt;code&gt;Kernel.ParallelCompiler.compile/2&lt;/code&gt;&lt;/a&gt; (v1.6)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2605f587503743395c775e1a8b96ba0e0959c243" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel.parallelcompiler#compile_to_path/2&quot;&gt;&lt;code&gt;Kernel.ParallelCompiler.compile_to_path/2&lt;/code&gt;&lt;/a&gt; (v1.6)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a908725c59e852aa58c82f596e8daaef29aab4c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel.parallelcompiler#require/2&quot;&gt;&lt;code&gt;Kernel.ParallelCompiler.require/2&lt;/code&gt;&lt;/a&gt; (v1.6)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39df66d403ad72e03f1177997de48314f6fef6ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;kernel.specialforms#case/2&quot;&gt;&lt;code&gt;case&lt;/code&gt;&lt;/a&gt; expressions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f04ee7f5ea3ea9d2ea4aabd268fc218237b5fde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;keyword&quot;&gt;&lt;code&gt;Keyword&lt;/code&gt;&lt;/a&gt; (v1.0) or &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; (v1.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46bd51027a52a5c06878cdc26a5940c1f4a0a3c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;keyword&quot;&gt;&lt;code&gt;Keyword&lt;/code&gt;&lt;/a&gt; - lists of two-element tuples, often representing optional values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1808c5aba683953e07b23568838a4cbf3213e040" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;keyword#fetch/2&quot;&gt;&lt;code&gt;Keyword.fetch/2&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;keyword#put/3&quot;&gt;&lt;code&gt;Keyword.put/3&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57129571e06512cc488daaa034e469c54e513e78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;library-guidelines&quot;&gt;Library Guidelines&lt;/a&gt; - general guidelines, anti-patterns, and rules for those writing libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7019b2aa11f474aa98fcc6637f5ae10481eb5169" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; - collections of a variable number of elements (linked lists)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb11d5da3f381518ff7095f37fee63acaf9f12a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;list.chars&quot;&gt;&lt;code&gt;List.Chars&lt;/code&gt;&lt;/a&gt; - converts data types to their outside world representation as charlists (non-programming based)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596e6a5790861f9d9406b936a10a0990f7846289" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;list.chars#to_charlist/1&quot;&gt;&lt;code&gt;List.Chars.to_charlist/1&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fafa6839687326ae20fa7198ed2c8823f5edbf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macro#camelize/1&quot;&gt;&lt;code&gt;Macro.camelize/1&lt;/code&gt;&lt;/a&gt; (v1.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3bc71da6d18f33cc765a631fad8f51e71ce882a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;macro#underscore/1&quot;&gt;&lt;code&gt;Macro.underscore/1&lt;/code&gt;&lt;/a&gt; (v1.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53a8f12967cb90f29250ca3b32564c8ea11a421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; (v1.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc51a877a5375ad424be171380eb7f3f9f17caf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; - collections of key-value pairs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4298d7827688314cbfc9f6cf9fd315b7f58483e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;map#fetch/2&quot;&gt;&lt;code&gt;Map.fetch/2&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;map#put/3&quot;&gt;&lt;code&gt;Map.put/3&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c8c58934d3ea6eb49e7cf6585e2674ae5559b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mapset&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt; (v1.1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fc121cea9d78e50d3b4053289f786c999e762d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mapset&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt; - unordered collections of unique elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153b940fc16b79ef4d210062b171932f8f5f6234" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mapset&quot;&gt;&lt;code&gt;MapSet&lt;/code&gt;&lt;/a&gt; data structure (v1.1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e023475fc4df9fffc15d6fc0a0d7717e5b83415" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.invalidtaskerror&quot;&gt;&lt;code&gt;Mix.InvalidTaskError&lt;/code&gt;&lt;/a&gt; - raised if the task is not a valid &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Mix.Task&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ec1ff81d7f1080936b0febb0aa952f910aa1fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.notaskerror&quot;&gt;&lt;code&gt;Mix.NoTaskError&lt;/code&gt;&lt;/a&gt; - raised if the task could not be found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c677e3f1f259755fa3f96be0c45316596ebc797" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.tasks.compile&quot;&gt;&lt;code&gt;mix compile&lt;/code&gt;&lt;/a&gt; - compiles the current project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a8d5016761f4053bcdaa56708cc845b615425d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.tasks.run&quot;&gt;&lt;code&gt;mix run&lt;/code&gt;&lt;/a&gt; - runs a particular command inside the project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2358ed348da2582570341409ccc481a62c1e53df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;mix.tasks.test&quot;&gt;&lt;code&gt;mix test&lt;/code&gt;&lt;/a&gt; - runs tests for the given project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c316fd8d5de1f8da8fbd200c8c42fd187eef614a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;module#create/3&quot;&gt;&lt;code&gt;Module.create/3&lt;/code&gt;&lt;/a&gt; works similarly to &lt;a href=&quot;kernel#defmodule/2&quot;&gt;&lt;code&gt;Kernel.defmodule/2&lt;/code&gt;&lt;/a&gt; and return the same results. While one could also use &lt;code&gt;defmodule&lt;/code&gt; to define modules dynamically, this function is preferred when the module body is given by a quoted expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a552ca3d68c4940b63204e106377afb5227900f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;naivedatetime&quot;&gt;&lt;code&gt;NaiveDateTime&lt;/code&gt;&lt;/a&gt; - date and time without time zone in a given calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795fcfd3094435b941433023a73deca26dfd15dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;naming-conventions&quot;&gt;Elixir's naming conventions&lt;/a&gt; recommend aliases to be in &lt;code&gt;CamelCase&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04263e351a4b9f4ffac59f718fd002f1edc70330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;naming-conventions&quot;&gt;Elixir's naming conventions&lt;/a&gt; recommend calls to be in &lt;code&gt;snake_case&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8316ade5b0d5c78eacb485f81af0dcb76b700814" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;naming-conventions&quot;&gt;Elixir's naming conventions&lt;/a&gt; recommend variables to be in &lt;code&gt;snake_case&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aeb50ce30bbcec0b868786c63869980dfef20db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;naming-conventions&quot;&gt;Naming Conventions&lt;/a&gt; - naming conventions for Elixir code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1a01bf8100f2dc6664e2ecd2165950596b4e0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;operators&quot;&gt;Operators&lt;/a&gt; - lists all Elixir operators and their precedence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188040d4851406ab2a5a59ffe0852c6206852147" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; - manipulates file system paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63556b745fa1ef0e326ba71846b76e95c98a91b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt; - mechanisms to interact with the external world</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20d5bebe6399b29580eff6e2cdd45c0d588f543" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; - light-weight threads of execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606c252e169e9c4e539fa9db90eabec991bb35c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; - inclusive ranges between two integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc6688699dc2b5b21fef9b970e35579a335a81c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;regex&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; - regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487ac6755b4c02bc28d7061363a4998010ba678a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;registry&quot;&gt;&lt;code&gt;Registry&lt;/code&gt;&lt;/a&gt; - a key-value process-based storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1addb47a75508c95b4cb5ad44d02d66134f5c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;registry#start_link/1&quot;&gt;&lt;code&gt;Registry.start_link/1&lt;/code&gt;&lt;/a&gt; (v1.5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babb4391b8d36cffa3c844020cc65115068900ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; behaviour</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4872ecd581bd5d5c32141c3ba9059c36d4fd620e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd9d29e037018e9cb2ac8314b28dcb9ef427700" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt;Set&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="c400517e882dc05623cc9e3890c5e761d86491f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stream#chunk_every/2&quot;&gt;&lt;code&gt;Stream.chunk_every/2&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;stream#chunk_every/4&quot;&gt;&lt;code&gt;/3/4&lt;/code&gt;&lt;/a&gt; (v1.5)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7308bab347b3ace0d38312450217267bba64a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stream#filter/2&quot;&gt;&lt;code&gt;Stream.filter/2&lt;/code&gt;&lt;/a&gt; + &lt;a href=&quot;stream#map/2&quot;&gt;&lt;code&gt;Stream.map/2&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512e2c04c0bf27e903d762614cf171047bce02e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stream#transform/3&quot;&gt;&lt;code&gt;Stream.transform/3&lt;/code&gt;&lt;/a&gt; is useful as it can be used as the basis to implement many of the functions defined in this module. For example, we can implement &lt;code&gt;Stream.take(enum, n)&lt;/code&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee12740be56e212e671452cc643e0050c7e1dfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;stream#uniq_by/2&quot;&gt;&lt;code&gt;Stream.uniq_by/2&lt;/code&gt;&lt;/a&gt; (v1.2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f3ecde3d37829aa2a988dba11a36d52f8cfe7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; - UTF-8 encoded binaries representing characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac3856bd61205ddc217ecf80566010d0c3da394" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#to_charlist/1&quot;&gt;&lt;code&gt;String.to_charlist/1&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7db21feca244e40ddb6f5b0b21af55f8dd292cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#trim/1&quot;&gt;&lt;code&gt;String.trim/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;string#trim/2&quot;&gt;&lt;code&gt;String.trim/2&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a544fc6791cd22422f9ad0a46a15e5d0dd0630" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#trim_leading/1&quot;&gt;&lt;code&gt;String.trim_leading/1&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;string#trim_trailing/1&quot;&gt;&lt;code&gt;String.trim_trailing/1&lt;/code&gt;&lt;/a&gt; (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563abdd13980ad64f48fcbf3b03db61d1b237bf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string#valid?/1&quot;&gt;&lt;code&gt;String.valid?/1&lt;/code&gt;&lt;/a&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f6f3d0c667d647e6ddc029090ac49965be7a1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;string.chars&quot;&gt;&lt;code&gt;String.Chars&lt;/code&gt;&lt;/a&gt; - converts data types to their outside world representation as strings (non-programming based)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a281e3c3982802a2d7e0f03de2dc69e269adfd23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; - a process that is responsible for starting, supervising and shutting down other processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ad9a8d4bcebd61f4d41a38bdedc9d784f438d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;supervisor&quot;&gt;&lt;code&gt;Supervisor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;genserver&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; (v1.0);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a94a2f9b4e9ae17eee4aa7581def0182495d1f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;supervisor.spec&quot;&gt;Supervisor.Spec&lt;/a&gt;deprecated</source>
          <target state="translated">&lt;a href=&quot;supervisor.spec&quot;&gt;Supervisor.Spec&lt;/a&gt;deprecated</target>
        </trans-unit>
        <trans-unit id="76ee3a3ae51868023fc07ab81d63b7a2ac9c1148" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;syntax-reference&quot;&gt;Syntax Reference&lt;/a&gt; - the language syntax reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af5e4ad711d14caadcd783a42263dee82c6061e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;system&quot;&gt;&lt;code&gt;System&lt;/code&gt;&lt;/a&gt; - reads and writes system information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3529bfa579838f5bdafbc4181cf1f5810d706b35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;system#cwd/0&quot;&gt;&lt;code&gt;System.cwd/0&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;system#cwd!/0&quot;&gt;&lt;code&gt;System.cwd!/0&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3656a28e8c3171699f4777a61d95c0748d5a2233" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;task&quot;&gt;&lt;code&gt;Task&lt;/code&gt;&lt;/a&gt; - a process that performs computations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd47395f9e512a1ae5e7ce3f460221262cf87a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;task#await/2&quot;&gt;&lt;code&gt;Task.await/2&lt;/code&gt;&lt;/a&gt; is used to read the message sent by the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ced8b3db18e9b20a34db397b977cd042451a23f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;task#yield/2&quot;&gt;&lt;code&gt;Task.yield/2&lt;/code&gt;&lt;/a&gt; is an alternative to &lt;a href=&quot;#await/2&quot;&gt;&lt;code&gt;await/2&lt;/code&gt;&lt;/a&gt; where the caller will temporarily block, waiting until the task replies or crashes. If the result does not arrive within the timeout, it can be called again at a later moment. This allows checking for the result of a task multiple times. If a reply does not arrive within the desired time, &lt;a href=&quot;task#shutdown/2&quot;&gt;&lt;code&gt;Task.shutdown/2&lt;/code&gt;&lt;/a&gt; can be used to stop the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3bb77534e241922cdacc4ca0f17ab8d309bf0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;task#yield_many/2&quot;&gt;&lt;code&gt;Task.yield_many/2&lt;/code&gt;&lt;/a&gt; allows developers to spawn multiple tasks and retrieve the results received in a given timeframe. If we combine it with &lt;a href=&quot;task#shutdown/2&quot;&gt;&lt;code&gt;Task.shutdown/2&lt;/code&gt;&lt;/a&gt;, it allows us to gather those results and cancel the tasks that have not replied in time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81526bfa2cfadb8e6d1a8fcedacb01165467d5a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;task.supervisor&quot;&gt;&lt;code&gt;Task.Supervisor&lt;/code&gt;&lt;/a&gt; - a supervisor for managing tasks exclusively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1542b25d8ddcaf84821d707d4a4beadabf4c4392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; - &lt;code&gt;hour:minute:second&lt;/code&gt; structs in a given calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423a093cfcce1218c50d111caa55a4649f40f5dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;tuple&quot;&gt;&lt;code&gt;Tuple&lt;/code&gt;&lt;/a&gt; - collections of a fixed number of elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233de3022fd955515e9dde638037598bfc4b6bb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typespecs&quot;&gt;Typespecs&lt;/a&gt;- types and function specifications, including list of types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9947e13d7b243b2482e95e48f7279d04adf2b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;typespecs#built-in-types&quot;&gt;&lt;code&gt;charlist/0&lt;/code&gt;&lt;/a&gt; type (v1.3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfda3e2f0cfcff1eaf58b193b4a046745f63578" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;unicode-syntax&quot;&gt;Unicode Syntax&lt;/a&gt; - outlines Elixir support for Unicode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296ebd621ab9e6ccee9d86d9480e7bbc3484dd44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; - representation of URIs that identify resources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6362264ced78e4b2ee85130e03aeff8fe6f7aad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;uri#query_decoder/1&quot;&gt;&lt;code&gt;URI.query_decoder/1&lt;/code&gt;&lt;/a&gt; - decodes a query string, pair by pair</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd193c2eaf6d61258dd27f9f3b33c6573439e1a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;version&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; - representation of versions and requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c491c5ace435fbb7ea23b4692f93f04abdc356ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;writing-documentation&quot;&gt;Writing Documentation&lt;/a&gt; - guidelines for writing documentation in Elixir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a7ac7ea1051805cbafe8369a454d82fd7548df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="612bae2db797cfc8c5ffa671c68d7b5ee9f766c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$date&lt;/code&gt; - the date the log message was sent</source>
          <target state="translated">&lt;code&gt;$date&lt;/code&gt; - the date the log message was sent</target>
        </trans-unit>
        <trans-unit id="1e27cf791ece301fbe4bc7aa23bf0cc05260b3be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$level&lt;/code&gt; - the log level</source>
          <target state="translated">&lt;code&gt;$level&lt;/code&gt; - the log level</target>
        </trans-unit>
        <trans-unit id="39a7e37f7d9d33acf3128f33dd5006d745b27f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$levelpad&lt;/code&gt; - sets to a single space if level is 4 characters long, otherwise set to the empty space. Used to align the message after level.</source>
          <target state="translated">&lt;code&gt;$levelpad&lt;/code&gt; - sets to a single space if level is 4 characters long, otherwise set to the empty space. Used to align the message after level.</target>
        </trans-unit>
        <trans-unit id="1316ea0587adeaa791140a7a0ae72ee2ac489f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$message&lt;/code&gt; - the log message</source>
          <target state="translated">&lt;code&gt;$message&lt;/code&gt; - the log message</target>
        </trans-unit>
        <trans-unit id="d78545a44192ff2a450487193efd3fd049d8d9e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$metadata&lt;/code&gt; - user controlled data presented in &lt;code&gt;&quot;key=val key2=val2 &quot;&lt;/code&gt; format</source>
          <target state="translated">&lt;code&gt;$metadata&lt;/code&gt; - user controlled data presented in &lt;code&gt;&quot;key=val key2=val2 &quot;&lt;/code&gt; format</target>
        </trans-unit>
        <trans-unit id="0d31e6ec447b40d5f46c2f9a1efc3b2b01720311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$node&lt;/code&gt; - the node that prints the message</source>
          <target state="translated">&lt;code&gt;$node&lt;/code&gt; - the node that prints the message</target>
        </trans-unit>
        <trans-unit id="f1f43a0541c4ad09bd7ce46628e2f3dad01a6c48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;$time&lt;/code&gt; - the time the log message was sent</source>
          <target state="translated">&lt;code&gt;$time&lt;/code&gt; - the time the log message was sent</target>
        </trans-unit>
        <trans-unit id="09dd76e424c7b93db8c98b46f96ab4b7e44fff16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%counter&lt;/code&gt; - the index of the history</source>
          <target state="translated">&lt;code&gt;%counter&lt;/code&gt; - the index of the history</target>
        </trans-unit>
        <trans-unit id="d8560d1fb9e0d1d9c2360164d2a153384d6968c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%node&lt;/code&gt; - the name of the local node</source>
          <target state="translated">&lt;code&gt;%node&lt;/code&gt; - the name of the local node</target>
        </trans-unit>
        <trans-unit id="672ac2f0caf0c9907bcc10ae9cd5d61fb31cac63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;%prefix&lt;/code&gt; - a prefix given by &lt;a href=&quot;iex.server&quot;&gt;&lt;code&gt;IEx.Server&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;%prefix&lt;/code&gt; - a prefix given by &lt;a href=&quot;iex.server&quot;&gt;&lt;code&gt;IEx.Server&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="320189d02b0c5a020b30c186a89050798f9c0b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;&amp;amp;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;and&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;&amp;amp;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;and&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21f345ad5b3f281af29d18ac4edd975e035a12a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;amp;List.flatten(&amp;amp;1, &amp;amp;2)&lt;/code&gt; is the same as writing &lt;code&gt;fn(list, tail) -&amp;gt; List.flatten(list, tail) end&lt;/code&gt; which in this case is equivalent to &lt;code&gt;&amp;amp;List.flatten/2&lt;/code&gt;. You can read more about the capture operator &lt;code&gt;&amp;amp;&lt;/code&gt; in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#&amp;amp;/1&quot;&gt;the &lt;code&gt;Kernel.SpecialForms&lt;/code&gt; documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;amp;List.flatten(&amp;amp;1, &amp;amp;2)&lt;/code&gt; is the same as writing &lt;code&gt;fn(list, tail) -&amp;gt; List.flatten(list, tail) end&lt;/code&gt; which in this case is equivalent to &lt;code&gt;&amp;amp;List.flatten/2&lt;/code&gt;. You can read more about the capture operator &lt;code&gt;&amp;amp;&lt;/code&gt; in &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.SpecialForms.html#&amp;amp;/1&quot;&gt;the &lt;code&gt;Kernel.SpecialForms&lt;/code&gt; documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="60e337837782cdcb3fc4cbb44614054b4b7da067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;-&lt;/code&gt;&lt;code&gt;\\&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;-&lt;/code&gt;&lt;code&gt;\\&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca5b94838549faf56cf1f898f1878ddccd283877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="969208821482ea86f305f30697cb9d7862ca00cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0a441bfb43acf588242c3b4d8045e36b151e965" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Continue&amp;gt;&lt;/code&gt; includes the code point &lt;code&gt;@&lt;/code&gt; (0040)</source>
          <target state="translated">&lt;code&gt;&amp;lt;Continue&amp;gt;&lt;/code&gt; includes the code point &lt;code&gt;@&lt;/code&gt; (0040)</target>
        </trans-unit>
        <trans-unit id="0de3e622fcddc0b95bb4bdae86439b3888f05db2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Ending&amp;gt;&lt;/code&gt; is an addition specific to Elixir that includes only the code points &lt;code&gt;?&lt;/code&gt; (003F) and &lt;code&gt;!&lt;/code&gt; (0021).</source>
          <target state="translated">&lt;code&gt;&amp;lt;Ending&amp;gt;&lt;/code&gt; is an addition specific to Elixir that includes only the code points &lt;code&gt;?&lt;/code&gt; (003F) and &lt;code&gt;!&lt;/code&gt; (0021).</target>
        </trans-unit>
        <trans-unit id="a8fbb08325d95aa54fe836015c4d47374e309e81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Start&amp;gt;&lt;/code&gt; includes the code point &lt;code&gt;_&lt;/code&gt; (005F)</source>
          <target state="translated">&lt;code&gt;&amp;lt;Start&amp;gt;&lt;/code&gt; includes the code point &lt;code&gt;_&lt;/code&gt; (005F)</target>
        </trans-unit>
        <trans-unit id="4839d335a8ae5a0140206f57ce5caa63a3067f1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;Start&amp;gt;&lt;/code&gt; must not include Lu (letter uppercase) and Lt (letter titlecase) characters</source>
          <target state="translated">&lt;code&gt;&amp;lt;Start&amp;gt;&lt;/code&gt; must not include Lu (letter uppercase) and Lt (letter titlecase) characters</target>
        </trans-unit>
        <trans-unit id="98e88aaa56490fe81e943ef8b58b60ab2a605c47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;'&lt;/code&gt; and &lt;code&gt;'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'&lt;/code&gt; and &lt;code&gt;'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ced4b60b59e50d6abcd98a00d3c18b7582dee8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;()&lt;/code&gt; to mean &lt;code&gt;nil&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;()&lt;/code&gt; to mean &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af3815890bb9fddf633ab22d174f8331ae8c0dc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65fca8dd52bcc94cd91907287a2eec2f45e807e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;**&lt;/code&gt; - two adjacent &lt;code&gt;*&lt;/code&gt;'s used as a single pattern will match all files and zero or more directories and subdirectories.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; - two adjacent &lt;code&gt;*&lt;/code&gt;'s used as a single pattern will match all files and zero or more directories and subdirectories.</target>
        </trans-unit>
        <trans-unit id="913c4def43547f4bdffd11069ca7716e201b37b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt; - matches any number of characters up to the end of the filename, the next dot, or the next slash.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; - matches any number of characters up to the end of the filename, the next dot, or the next slash.</target>
        </trans-unit>
        <trans-unit id="587da06c8291c46e06bdbb9176600c30b3b41d54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="900c75466aa12e18548994e5461439a213678a3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;++&lt;/code&gt;&lt;code&gt;--&lt;/code&gt;&lt;code&gt;..&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;++&lt;/code&gt;&lt;code&gt;--&lt;/code&gt;&lt;code&gt;..&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a58721e317a663f3f70bd919555e501c8280c19c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de79e88c802c67e1f45a25313a7ec08ba966c8f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;^&lt;/code&gt;&lt;code&gt;not&lt;/code&gt;&lt;code&gt;~~~&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;!&lt;/code&gt;&lt;code&gt;^&lt;/code&gt;&lt;code&gt;not&lt;/code&gt;&lt;code&gt;~~~&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f445404dca862751f9d3a37c114efbd9e811952f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--all-warnings&lt;/code&gt; - prints warnings even from files that do not need to be recompiled</source>
          <target state="translated">&lt;code&gt;--all-warnings&lt;/code&gt; - prints warnings even from files that do not need to be recompiled</target>
        </trans-unit>
        <trans-unit id="4b8a687e1c3d4c7059beb741070aedbf831935d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--all&lt;/code&gt; - lists all dependencies, regardless of specified environment</source>
          <target state="translated">&lt;code&gt;--all&lt;/code&gt; - lists all dependencies, regardless of specified environment</target>
        </trans-unit>
        <trans-unit id="7138babb409aa5bcb643da6c1ce133ec426df184" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--callers&lt;/code&gt; - prints detailed information about immediate callers and called functions</source>
          <target state="translated">&lt;code&gt;--callers&lt;/code&gt; - prints detailed information about immediate callers and called functions</target>
        </trans-unit>
        <trans-unit id="f39169f061172b9a6408f95c09393c8c4e547d08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--calls&lt;/code&gt; - filters out any results with a call count lower than this</source>
          <target state="translated">&lt;code&gt;--calls&lt;/code&gt; - filters out any results with a call count lower than this</target>
        </trans-unit>
        <trans-unit id="7e7ee2fb9e2750e179dd2d5f79f35ca5c81d631b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--color&lt;/code&gt; - enables color in the output</source>
          <target state="translated">&lt;code&gt;--color&lt;/code&gt; - enables color in the output</target>
        </trans-unit>
        <trans-unit id="bbe1bf0ba94c35c8c0b64cc65dee85a93b3c7d97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--cover&lt;/code&gt; - runs coverage tool. See &quot;Coverage&quot; section below</source>
          <target state="translated">&lt;code&gt;--cover&lt;/code&gt; - runs coverage tool. See &quot;Coverage&quot; section below</target>
        </trans-unit>
        <trans-unit id="537776f3e19c8156b9b4cb5c9b44ad31fac1b954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--debug-info&lt;/code&gt; (&lt;code&gt;--no-debug-info&lt;/code&gt;) - attaches (or not) debug info to compiled modules</source>
          <target state="translated">&lt;code&gt;--debug-info&lt;/code&gt; (&lt;code&gt;--no-debug-info&lt;/code&gt;) - attaches (or not) debug info to compiled modules</target>
        </trans-unit>
        <trans-unit id="2e71c7eec1662685ae39d65f3cd4513527a81b56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--detached&lt;/code&gt; in CLI</source>
          <target state="translated">&lt;code&gt;--detached&lt;/code&gt; in CLI</target>
        </trans-unit>
        <trans-unit id="522e165adfbaeb1dba0dfafad28e640111a723d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--details&lt;/code&gt; - includes profile data for each profiled process</source>
          <target state="translated">&lt;code&gt;--details&lt;/code&gt; - includes profile data for each profiled process</target>
        </trans-unit>
        <trans-unit id="fa7f6b1febe2093b6122a66083f218d11394b3a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--docs&lt;/code&gt; (&lt;code&gt;--no-docs&lt;/code&gt;) - attaches (or not) documentation to compiled modules</source>
          <target state="translated">&lt;code&gt;--docs&lt;/code&gt; (&lt;code&gt;--no-docs&lt;/code&gt;) - attaches (or not) documentation to compiled modules</target>
        </trans-unit>
        <trans-unit id="2774bf1f5e318d03163965240fc058392bec9a75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--erl &quot;-detached&quot;&lt;/code&gt; (v1.0)</source>
          <target state="translated">&lt;code&gt;--erl &quot;-detached&quot;&lt;/code&gt; (v1.0)</target>
        </trans-unit>
        <trans-unit id="a5c80d56523e6d299cfbe7900c94e84ba3aad286" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--erl-config&lt;/code&gt; - path to an Erlang term file that will be loaded as Mix config</source>
          <target state="translated">&lt;code&gt;--erl-config&lt;/code&gt; - path to an Erlang term file that will be loaded as Mix config</target>
        </trans-unit>
        <trans-unit id="bdff8a846979ab1b31f0ea3245910bd0dc1f3fff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--eval&lt;/code&gt;, &lt;code&gt;-e&lt;/code&gt; - evaluate the given code</source>
          <target state="translated">&lt;code&gt;--eval&lt;/code&gt;, &lt;code&gt;-e&lt;/code&gt; - evaluate the given code</target>
        </trans-unit>
        <trans-unit id="a440958607c6615ac2e5544ae60214283a1cbdd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--eval&lt;/code&gt;, &lt;code&gt;-e&lt;/code&gt; - evaluates the given code</source>
          <target state="translated">&lt;code&gt;--eval&lt;/code&gt;, &lt;code&gt;-e&lt;/code&gt; - evaluates the given code</target>
        </trans-unit>
        <trans-unit id="54700bf6946f1ab2ec54efd5ba8530fda1c599b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--exclude&lt;/code&gt; - excludes tests that match the filter</source>
          <target state="translated">&lt;code&gt;--exclude&lt;/code&gt; - excludes tests that match the filter</target>
        </trans-unit>
        <trans-unit id="b129b7bd958066bad0375a9d3064dc024c2f0c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--exclude&lt;/code&gt; - paths to exclude</source>
          <target state="translated">&lt;code&gt;--exclude&lt;/code&gt; - paths to exclude</target>
        </trans-unit>
        <trans-unit id="2d2bb14c4d0a11a8acb6f718cd89db3ceb4db8bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--failed&lt;/code&gt; - runs only tests that failed the last time they ran</source>
          <target state="translated">&lt;code&gt;--failed&lt;/code&gt; - runs only tests that failed the last time they ran</target>
        </trans-unit>
        <trans-unit id="827fd7d1824f40c1c77948119dcb078d520931cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces checking regardless of modification time</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - forces checking regardless of modification time</target>
        </trans-unit>
        <trans-unit id="1792de50526771f9f0bd7589f5649e9f5be310a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces compilation</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - forces compilation</target>
        </trans-unit>
        <trans-unit id="6c571a4483ee220d311fcbf826219ae8e72d2827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--force&lt;/code&gt; - forces compilation regardless of modification times</source>
          <target state="translated">&lt;code&gt;--force&lt;/code&gt; - forces compilation regardless of modification times</target>
        </trans-unit>
        <trans-unit id="4cf3d73af1fb02da21a08d68dabdcaf60474361f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--format&lt;/code&gt; - can be set to one of:</source>
          <target state="translated">&lt;code&gt;--format&lt;/code&gt; - can be set to one of:</target>
        </trans-unit>
        <trans-unit id="c25726aab25951d6c2de929997db087ff0b0037f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--formatter&lt;/code&gt; - sets the formatter module that will print the results. Defaults to &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.CLIFormatter.html&quot;&gt;&lt;code&gt;ExUnit.CLIFormatter&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;--formatter&lt;/code&gt; - sets the formatter module that will print the results. Defaults to &lt;a href=&quot;https://hexdocs.pm/ex_unit/ExUnit.CLIFormatter.html&quot;&gt;&lt;code&gt;ExUnit.CLIFormatter&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5611ba927fd610547497b87d876016c4d9c11edf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--ignore-module-conflict&lt;/code&gt; - does not emit warnings if a module was previously defined</source>
          <target state="translated">&lt;code&gt;--ignore-module-conflict&lt;/code&gt; - does not emit warnings if a module was previously defined</target>
        </trans-unit>
        <trans-unit id="38b17980402cd74c65c5537ece25ddf3c7e363d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include-siblings&lt;/code&gt; - includes dependencies that have &lt;code&gt;:in_umbrella&lt;/code&gt; set to true in the current project in the reports. This can be used to find callers or to analyze graphs between projects</source>
          <target state="translated">&lt;code&gt;--include-siblings&lt;/code&gt; - includes dependencies that have &lt;code&gt;:in_umbrella&lt;/code&gt; set to true in the current project in the reports. This can be used to find callers or to analyze graphs between projects</target>
        </trans-unit>
        <trans-unit id="f8447b429dc984ac90fea158a175108107c469ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--include&lt;/code&gt; - includes tests that match the filter</source>
          <target state="translated">&lt;code&gt;--include&lt;/code&gt; - includes tests that match the filter</target>
        </trans-unit>
        <trans-unit id="68eaaaa9732497644badfa0a728baf028028fdbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--label&lt;/code&gt; - only shows relationships with the given label The labels are &quot;compile&quot;, &quot;struct&quot; and &quot;runtime&quot;</source>
          <target state="translated">&lt;code&gt;--label&lt;/code&gt; - only shows relationships with the given label The labels are &quot;compile&quot;, &quot;struct&quot; and &quot;runtime&quot;</target>
        </trans-unit>
        <trans-unit id="726b9e7538119807f0b95629722d0a2bd2e56cda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--limit&lt;/code&gt; - filters out any results with a call count less than the limit</source>
          <target state="translated">&lt;code&gt;--limit&lt;/code&gt; - filters out any results with a call count less than the limit</target>
        </trans-unit>
        <trans-unit id="ecd45c4a461fa90e57e476227b6f93e4f181afc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--list&lt;/code&gt; - lists all enabled compilers</source>
          <target state="translated">&lt;code&gt;--list&lt;/code&gt; - lists all enabled compilers</target>
        </trans-unit>
        <trans-unit id="28912ea9cbc84b0a333b1f3925634b64e0383314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--listen-on-stdin&lt;/code&gt; - runs tests, and then listens on stdin. Receiving a newline will result in the tests being run again. Very useful when combined with &lt;code&gt;--stale&lt;/code&gt; and external commands which produce output on stdout upon file system modifications</source>
          <target state="translated">&lt;code&gt;--listen-on-stdin&lt;/code&gt; - runs tests, and then listens on stdin. Receiving a newline will result in the tests being run again. Very useful when combined with &lt;code&gt;--stale&lt;/code&gt; and external commands which produce output on stdout upon file system modifications</target>
        </trans-unit>
        <trans-unit id="8715f025eb829996e6cb41c84fcb3b65473dea67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--long-compilation-threshold N&lt;/code&gt; - sets the &quot;long compilation&quot; threshold (in seconds) to &lt;code&gt;N&lt;/code&gt; (see the docs for &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.ParallelCompiler.html#compile/2&quot;&gt;&lt;code&gt;Kernel.ParallelCompiler.compile/2&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;--long-compilation-threshold N&lt;/code&gt; - sets the &quot;long compilation&quot; threshold (in seconds) to &lt;code&gt;N&lt;/code&gt; (see the docs for &lt;a href=&quot;https://hexdocs.pm/elixir/Kernel.ParallelCompiler.html#compile/2&quot;&gt;&lt;code&gt;Kernel.ParallelCompiler.compile/2&lt;/code&gt;&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="9bd0839c0d2416e67aed50b67d05c3ac283f058b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--matching&lt;/code&gt; - only profile calls matching the given &lt;code&gt;Module.function/arity&lt;/code&gt; pattern</source>
          <target state="translated">&lt;code&gt;--matching&lt;/code&gt; - only profile calls matching the given &lt;code&gt;Module.function/arity&lt;/code&gt; pattern</target>
        </trans-unit>
        <trans-unit id="878401e009de0585d7e6fb3eab427ef18c25cb93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--max-cases&lt;/code&gt; - sets the maximum number of tests running asynchronously. Only tests from different modules run in parallel. Defaults to twice the number of cores</source>
          <target state="translated">&lt;code&gt;--max-cases&lt;/code&gt; - sets the maximum number of tests running asynchronously. Only tests from different modules run in parallel. Defaults to twice the number of cores</target>
        </trans-unit>
        <trans-unit id="6c40e9c73fb0b3b3f8bda43d85c8d4e456c7d521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--max-failures&lt;/code&gt; - the suite stops evaluating tests when this number of test failures is reached. It runs all tests if omitted</source>
          <target state="translated">&lt;code&gt;--max-failures&lt;/code&gt; - the suite stops evaluating tests when this number of test failures is reached. It runs all tests if omitted</target>
        </trans-unit>
        <trans-unit id="cb7e689cfd398b25e0e488101bddb1bae5de3234" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--module&lt;/code&gt; - filters out any results not pertaining to the given module</source>
          <target state="translated">&lt;code&gt;--module&lt;/code&gt; - filters out any results not pertaining to the given module</target>
        </trans-unit>
        <trans-unit id="6c07f7b26f62a3a7f84d89f9a8ef3b13fbdff49b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-archives-check&lt;/code&gt; - does not check archives</source>
          <target state="translated">&lt;code&gt;--no-archives-check&lt;/code&gt; - does not check archives</target>
        </trans-unit>
        <trans-unit id="ea311f18572b295d63e7a3eec0212a0ba5f37315" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-archives-check&lt;/code&gt; - skips checking of archives</source>
          <target state="translated">&lt;code&gt;--no-archives-check&lt;/code&gt; - skips checking of archives</target>
        </trans-unit>
        <trans-unit id="1c8b8de617e15059f40a389d93bd1ca71cfa9460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-color&lt;/code&gt; - disables color in the output</source>
          <target state="translated">&lt;code&gt;--no-color&lt;/code&gt; - disables color in the output</target>
        </trans-unit>
        <trans-unit id="6d6628d5c91dd15476bc39e5dbd6ce99b637f3bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - does not compile even if files require compilation</source>
          <target state="translated">&lt;code&gt;--no-compile&lt;/code&gt; - does not compile even if files require compilation</target>
        </trans-unit>
        <trans-unit id="99392dda5c512dab0deed58e2063b9dd7eb5a957" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-compile&lt;/code&gt; - does not compile, even if files require compilation</source>
          <target state="translated">&lt;code&gt;--no-compile&lt;/code&gt; - does not compile, even if files require compilation</target>
        </trans-unit>
        <trans-unit id="01722bc34e1e2f3cb7ba6a2a7c15ecef99e9ed53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-deps-check&lt;/code&gt; - does not check dependencies</source>
          <target state="translated">&lt;code&gt;--no-deps-check&lt;/code&gt; - does not check dependencies</target>
        </trans-unit>
        <trans-unit id="4eacb01561319d3b453ffe243ff7e8165b919a61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-deps-check&lt;/code&gt; - skips checking of dependencies</source>
          <target state="translated">&lt;code&gt;--no-deps-check&lt;/code&gt; - skips checking of dependencies</target>
        </trans-unit>
        <trans-unit id="916541657cb9f6bec3ebd5bfa32a030e7095ce2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-elixir-version-check&lt;/code&gt; - does not check the Elixir version from &lt;code&gt;mix.exs&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--no-elixir-version-check&lt;/code&gt; - does not check the Elixir version from &lt;code&gt;mix.exs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8035cda315456c3d6b7ac3a19c4b962f7bcbeb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-elixir-version-check&lt;/code&gt; - does not check the Elixir version from mix.exs</source>
          <target state="translated">&lt;code&gt;--no-elixir-version-check&lt;/code&gt; - does not check the Elixir version from mix.exs</target>
        </trans-unit>
        <trans-unit id="39178ceee30f55244179a5cb024b34f28d9ba535" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-halt&lt;/code&gt; - does not halt the system after running the command</source>
          <target state="translated">&lt;code&gt;--no-halt&lt;/code&gt; - does not halt the system after running the command</target>
        </trans-unit>
        <trans-unit id="568a490842f2b72036f1e61cc6e8a7d856db30e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-mix-exs&lt;/code&gt; - allows the command to run even if there is no mix.exs</source>
          <target state="translated">&lt;code&gt;--no-mix-exs&lt;/code&gt; - allows the command to run even if there is no mix.exs</target>
        </trans-unit>
        <trans-unit id="f9c47e295e7df8ff1132942297f9d68773585802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-protocol-consolidation&lt;/code&gt; - skips protocol consolidation</source>
          <target state="translated">&lt;code&gt;--no-protocol-consolidation&lt;/code&gt; - skips protocol consolidation</target>
        </trans-unit>
        <trans-unit id="4b77cf4c238bb6f18492c34cb6bd22c2dfa9c5f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-start&lt;/code&gt; - does not start applications after compilation</source>
          <target state="translated">&lt;code&gt;--no-start&lt;/code&gt; - does not start applications after compilation</target>
        </trans-unit>
        <trans-unit id="9f21b2ffee00a1fcb419835382ef1c0f0b8e9bff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-warmup&lt;/code&gt; - does not execute code once before profiling</source>
          <target state="translated">&lt;code&gt;--no-warmup&lt;/code&gt; - does not execute code once before profiling</target>
        </trans-unit>
        <trans-unit id="e8ca2641d5a1fe80356ac98e1e0435b866c99ee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-warmup&lt;/code&gt; - skips the warmup step before profiling</source>
          <target state="translated">&lt;code&gt;--no-warmup&lt;/code&gt; - skips the warmup step before profiling</target>
        </trans-unit>
        <trans-unit id="f91bb9d694b30304d263282b364a21c0fa4d0785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only-nodes&lt;/code&gt; - only shows the node names (no edges)</source>
          <target state="translated">&lt;code&gt;--only-nodes&lt;/code&gt; - only shows the node names (no edges)</target>
        </trans-unit>
        <trans-unit id="333a8cd444220f78913f4cfe0730190ff29ddaa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--only&lt;/code&gt; - runs only tests that match the filter</source>
          <target state="translated">&lt;code&gt;--only&lt;/code&gt; - runs only tests that match the filter</target>
        </trans-unit>
        <trans-unit id="38df593fe3865407a26f4a2b7ca2905ab883817b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--parallel&lt;/code&gt;, &lt;code&gt;-p&lt;/code&gt; - makes all requires parallel</source>
          <target state="translated">&lt;code&gt;--parallel&lt;/code&gt;, &lt;code&gt;-p&lt;/code&gt; - makes all requires parallel</target>
        </trans-unit>
        <trans-unit id="37ac00f417999d0774684f020ef2b4b57eb969d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--preload-modules&lt;/code&gt; - preloads all modules defined in applications</source>
          <target state="translated">&lt;code&gt;--preload-modules&lt;/code&gt; - preloads all modules defined in applications</target>
        </trans-unit>
        <trans-unit id="01494812d74e545da1e1defbcb844b59fe181f6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--raise&lt;/code&gt; - raises if the test suite failed</source>
          <target state="translated">&lt;code&gt;--raise&lt;/code&gt; - raises if the test suite failed</target>
        </trans-unit>
        <trans-unit id="eda0d2121e6ec7e2266b83aa7a93a290098af96f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--require&lt;/code&gt;, &lt;code&gt;-r&lt;/code&gt; - executes the given pattern/file</source>
          <target state="translated">&lt;code&gt;--require&lt;/code&gt;, &lt;code&gt;-r&lt;/code&gt; - executes the given pattern/file</target>
        </trans-unit>
        <trans-unit id="33cd6742d9b1ec9410c866fbd63fffbf0238954b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--require&lt;/code&gt;, &lt;code&gt;-r&lt;/code&gt; - requires pattern before running the command</source>
          <target state="translated">&lt;code&gt;--require&lt;/code&gt;, &lt;code&gt;-r&lt;/code&gt; - requires pattern before running the command</target>
        </trans-unit>
        <trans-unit id="3083c950ea24959f68005aa337392c4b7b6265c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--return-errors&lt;/code&gt; - returns error status and diagnostics instead of exiting on error</source>
          <target state="translated">&lt;code&gt;--return-errors&lt;/code&gt; - returns error status and diagnostics instead of exiting on error</target>
        </trans-unit>
        <trans-unit id="88013f972497d520bceeef31f4d1c2c98dec41f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--seed&lt;/code&gt; - seeds the random number generator used to randomize the order of tests; &lt;code&gt;--seed 0&lt;/code&gt; disables randomization</source>
          <target state="translated">&lt;code&gt;--seed&lt;/code&gt; - seeds the random number generator used to randomize the order of tests; &lt;code&gt;--seed 0&lt;/code&gt; disables randomization</target>
        </trans-unit>
        <trans-unit id="f1cb6065759e01d07320e753611ea7250c5217dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sink&lt;/code&gt; - displays all files that reference the given file (directly or indirectly)</source>
          <target state="translated">&lt;code&gt;--sink&lt;/code&gt; - displays all files that reference the given file (directly or indirectly)</target>
        </trans-unit>
        <trans-unit id="5cc03307608423b54c288c4e9bf5a93b39bd8c12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--slowest&lt;/code&gt; - prints timing information for the N slowest tests. Automatically sets &lt;code&gt;--trace&lt;/code&gt; and &lt;code&gt;--preload-modules&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--slowest&lt;/code&gt; - prints timing information for the N slowest tests. Automatically sets &lt;code&gt;--trace&lt;/code&gt; and &lt;code&gt;--preload-modules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0ecff763b154e11a3a0d74f5300dcacedd56a63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sort key&lt;/code&gt; - sorts the output by given key: &lt;code&gt;acc&lt;/code&gt; (default) or &lt;code&gt;own&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--sort key&lt;/code&gt; - sorts the output by given key: &lt;code&gt;acc&lt;/code&gt; (default) or &lt;code&gt;own&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db2c4c5ff49654340496a49bb7c06262cc510475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--sort&lt;/code&gt; - sorts the results by &lt;code&gt;time&lt;/code&gt; or &lt;code&gt;calls&lt;/code&gt; (default: &lt;code&gt;time&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;--sort&lt;/code&gt; - sorts the results by &lt;code&gt;time&lt;/code&gt; or &lt;code&gt;calls&lt;/code&gt; (default: &lt;code&gt;time&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="b26f9f08c7f32f64f804789eab37300e90fc23fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--source&lt;/code&gt; - displays all files that the given source file references (directly or indirectly)</source>
          <target state="translated">&lt;code&gt;--source&lt;/code&gt; - displays all files that the given source file references (directly or indirectly)</target>
        </trans-unit>
        <trans-unit id="df641f035cd100611c807c58602f94b1c01adb45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--stale&lt;/code&gt; - runs only tests which reference modules that changed since the last time tests were ran with &lt;code&gt;--stale&lt;/code&gt;. You can read more about this option in the &quot;Stale&quot; section below</source>
          <target state="translated">&lt;code&gt;--stale&lt;/code&gt; - runs only tests which reference modules that changed since the last time tests were ran with &lt;code&gt;--stale&lt;/code&gt;. You can read more about this option in the &quot;Stale&quot; section below</target>
        </trans-unit>
        <trans-unit id="75fde89a7538cb80b2f5892df820f2332bdb6db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--time&lt;/code&gt; - filters out any results that took lower than specified (in &amp;micro;s)</source>
          <target state="translated">&lt;code&gt;--time&lt;/code&gt; - filters out any results that took lower than specified (in &amp;micro;s)</target>
        </trans-unit>
        <trans-unit id="cbdf7ba051ab9c6bbea636da1a5ceba3503662a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--timeout&lt;/code&gt; - sets the timeout for the tests</source>
          <target state="translated">&lt;code&gt;--timeout&lt;/code&gt; - sets the timeout for the tests</target>
        </trans-unit>
        <trans-unit id="a5968b7b14dbfd3d4c4fa51114eedbcef7327a09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--trace&lt;/code&gt; - runs tests with detailed reporting. Automatically sets &lt;code&gt;--max-cases&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;. Note that in trace mode test timeouts will be ignored as timeout is set to &lt;code&gt;:infinity&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--trace&lt;/code&gt; - runs tests with detailed reporting. Automatically sets &lt;code&gt;--max-cases&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;. Note that in trace mode test timeouts will be ignored as timeout is set to &lt;code&gt;:infinity&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f61195ee0afe2a7c5fccccfa111edadc33eb6b85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--warnings-as-errors&lt;/code&gt; - treats warnings as errors and returns a non-zero exit code</source>
          <target state="translated">&lt;code&gt;--warnings-as-errors&lt;/code&gt; - treats warnings as errors and returns a non-zero exit code</target>
        </trans-unit>
        <trans-unit id="c33ef09ac6b3502120d4298a6af7177cb85de29e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--warnings-as-errors&lt;/code&gt; - treats warnings in the current project as errors and return a non-zero exit code</source>
          <target state="translated">&lt;code&gt;--warnings-as-errors&lt;/code&gt; - treats warnings in the current project as errors and return a non-zero exit code</target>
        </trans-unit>
        <trans-unit id="2fc68dac6dc8514b1a9fed093fdedcdc813f99ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; and &lt;code&gt;/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f9e5df77b841ed1090a4f8410d9c954aea00daf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/U&lt;/code&gt; (v1.1)</source>
          <target state="translated">&lt;code&gt;/U&lt;/code&gt; (v1.1)</target>
        </trans-unit>
        <trans-unit id="291b62c3beef98c2335e59fa4912815e7f714495" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;/r&lt;/code&gt; option in &lt;a href=&quot;regex&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;/r&lt;/code&gt; option in &lt;a href=&quot;regex&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df737b1e12e05573a42a852bcd1407aaafabc009" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0&lt;/code&gt; - if there is no matching message in the mailbox, the timeout will occur immediately</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31097e40149dbd3988acc8d4b1311ddd0d99274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o001&lt;/code&gt; - execute permission: other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bbb3322e7e493338806be21e65a46759149714f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o002&lt;/code&gt; - write permission: other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b652aa959a0346aafcecfdac049f696b40942a8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o004&lt;/code&gt; - read permission: other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20a6b167f555bfc0b63c0567375794b88cc781d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o010&lt;/code&gt; - execute permission: group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1122a2884ce64782740fe0827e9c0c42e575b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o020&lt;/code&gt; - write permission: group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3af5be11967de594a5ab60eea0b44ed1c7d6b26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o040&lt;/code&gt; - read permission: group</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8bf8687b8e5a759bf9d49eb2dfdab1ded0b731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o100&lt;/code&gt; - execute permission: owner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2364ceaf1e663d934bfae57960cf17770698b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o200&lt;/code&gt; - write permission: owner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c848c5d34c1092d4c466fe2af469d9e9db593a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0o400&lt;/code&gt; - read permission: owner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b5132494fc2edc417787787b4be34d5c4cb6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;0xHEX&lt;/code&gt; (v1.0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7267de70a3a03e53a733ceefaa278aee0f430894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;::&lt;/code&gt; means that the function on the left side &lt;em&gt;returns&lt;/em&gt; a value whose type is what&amp;rsquo;s on the right side. Function specs are written with the &lt;code&gt;@spec&lt;/code&gt; directive, placed right before the function definition. The &lt;code&gt;round/1&lt;/code&gt; function could be written as:</source>
          <target state="translated">&lt;code&gt;::&lt;/code&gt; means that the function on the left side &lt;em&gt;returns&lt;/em&gt; a value whose type is what&amp;rsquo;s on the right side. Function specs are written with the &lt;code&gt;@spec&lt;/code&gt; directive, placed right before the function definition. The &lt;code&gt;round/1&lt;/code&gt; function could be written as:</target>
        </trans-unit>
        <trans-unit id="4521efb66eb5e2360ee82a3e719d7406030a0403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:abs&lt;/code&gt; - (boolean) when &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt; is treated as relative to the current monotonic time. When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt; is the absolute value of the Erlang monotonic time at which &lt;code&gt;msg&lt;/code&gt; should be delivered to &lt;code&gt;dest&lt;/code&gt;. To read more about Erlang monotonic time and other time-related concepts, look at the documentation for the &lt;a href=&quot;system&quot;&gt;&lt;code&gt;System&lt;/code&gt;&lt;/a&gt; module. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:abs&lt;/code&gt; - (boolean) when &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt; is treated as relative to the current monotonic time. When &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt; is the absolute value of the Erlang monotonic time at which &lt;code&gt;msg&lt;/code&gt; should be delivered to &lt;code&gt;dest&lt;/code&gt;. To read more about Erlang monotonic time and other time-related concepts, look at the documentation for the &lt;a href=&quot;system&quot;&gt;&lt;code&gt;System&lt;/code&gt;&lt;/a&gt; module. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="d2f074fc6de86695a18292aaf89e93ac0f14d597" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:accumulate&lt;/code&gt; - several calls to the same attribute will accumulate instead of overriding the previous one. New attributes are always added to the top of the accumulated list.</source>
          <target state="translated">&lt;code&gt;:accumulate&lt;/code&gt; - several calls to the same attribute will accumulate instead of overriding the previous one. New attributes are always added to the top of the accumulated list.</target>
        </trans-unit>
        <trans-unit id="1fcae26b7b0636fa02bce9ebb3cb0b3d5abe4e9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:active&lt;/code&gt; - the count of all actively running child processes managed by this supervisor</source>
          <target state="translated">&lt;code&gt;:active&lt;/code&gt; - the count of all actively running child processes managed by this supervisor</target>
        </trans-unit>
        <trans-unit id="a5eb942413bc8d853aa8f542bbcea8a306fd8370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:aliases&lt;/code&gt; - a list of task aliases. For more information, check out the &quot;Aliases&quot; section in the documentation for the &lt;a href=&quot;mix&quot;&gt;&lt;code&gt;Mix&lt;/code&gt;&lt;/a&gt; module. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:aliases&lt;/code&gt; - a list of task aliases. For more information, check out the &quot;Aliases&quot; section in the documentation for the &lt;a href=&quot;mix&quot;&gt;&lt;code&gt;Mix&lt;/code&gt;&lt;/a&gt; module. Defaults to &lt;code&gt;[]&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="0ab92366f4fc76ba23b935612ed1c53e95db740b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:aliases&lt;/code&gt; - a list of tuples with the alias and its target</source>
          <target state="translated">&lt;code&gt;:aliases&lt;/code&gt; - a list of tuples with the alias and its target</target>
        </trans-unit>
        <trans-unit id="c8fc957df4e5736b10df85918af0dad49cc12ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:aliases&lt;/code&gt; - see the &quot;Aliases&quot; section below</source>
          <target state="translated">&lt;code&gt;:aliases&lt;/code&gt; - see the &quot;Aliases&quot; section below</target>
        </trans-unit>
        <trans-unit id="c7d6d99578177a7e8a0f27bd1b17c65a0d3efabd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:alive_prompt&lt;/code&gt; - used when &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt;&lt;code&gt;Node.alive?/0&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:alive_prompt&lt;/code&gt; - used when &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt;&lt;code&gt;Node.alive?/0&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31c8da84fd5705c5745022cf1b203625becf8a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:all&lt;/code&gt; - all captured subpatterns including the complete matching string (this is the default)</source>
          <target state="translated">&lt;code&gt;:all&lt;/code&gt; - all captured subpatterns including the complete matching string (this is the default)</target>
        </trans-unit>
        <trans-unit id="7a91b3cd8d76a8fa6991851485bcaffb09fe126a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:all_but_first&lt;/code&gt; - all but the first matching subpattern, i.e. all explicitly captured subpatterns, but not the complete matching part of the string</source>
          <target state="translated">&lt;code&gt;:all_but_first&lt;/code&gt; - all but the first matching subpattern, i.e. all explicitly captured subpatterns, but not the complete matching part of the string</target>
        </trans-unit>
        <trans-unit id="91918dd8a10073443b332f33763e6aa24e8332b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:all_names&lt;/code&gt; - captures all names in the Regex</source>
          <target state="translated">&lt;code&gt;:all_names&lt;/code&gt; - captures all names in the Regex</target>
        </trans-unit>
        <trans-unit id="1e9d29dc168f0783899b8e58a6b2413f3a76018e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:allow_nonexistent_atoms&lt;/code&gt; - see the &quot;Parsing unknown switches&quot; section below</source>
          <target state="translated">&lt;code&gt;:allow_nonexistent_atoms&lt;/code&gt; - see the &quot;Parsing unknown switches&quot; section below</target>
        </trans-unit>
        <trans-unit id="8d131d269f741254b20823188ba4014a5dbda88d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:allow_pre&lt;/code&gt; (boolean) - when &lt;code&gt;false&lt;/code&gt;, pre-release versions will not match unless the operand is a pre-release version. Defaults to &lt;code&gt;true&lt;/code&gt;. For examples, please refer to the table above under the &quot;Requirements&quot; section.</source>
          <target state="translated">&lt;code&gt;:allow_pre&lt;/code&gt; (boolean) - when &lt;code&gt;false&lt;/code&gt;, pre-release versions will not match unless the operand is a pre-release version. Defaults to &lt;code&gt;true&lt;/code&gt;. For examples, please refer to the table above under the &quot;Requirements&quot; section.</target>
        </trans-unit>
        <trans-unit id="f43bf36ddbfd772da72000a29d2d227902843677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:app&lt;/code&gt; - the app that starts with the escript. Defaults to app name. Set it to &lt;code&gt;nil&lt;/code&gt; if no application should be started.</source>
          <target state="translated">&lt;code&gt;:app&lt;/code&gt; - the app that starts with the escript. Defaults to app name. Set it to &lt;code&gt;nil&lt;/code&gt; if no application should be started.</target>
        </trans-unit>
        <trans-unit id="5007b8a45951d5573468c1b280b8949a82b13e70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:app&lt;/code&gt; - when set to &lt;code&gt;false&lt;/code&gt;, does not read the app file for this dependency. By default, the app file is read</source>
          <target state="translated">&lt;code&gt;:app&lt;/code&gt; - when set to &lt;code&gt;false&lt;/code&gt;, does not read the app file for this dependency. By default, the app file is read</target>
        </trans-unit>
        <trans-unit id="76a374a494c4b682b48c537607ed28d7d7ca5eed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:append&lt;/code&gt; - the file will be opened for writing, and it will be created if it does not exist. Every write operation to a file opened with append will take place at the end of the file.</source>
          <target state="translated">&lt;code&gt;:append&lt;/code&gt; - the file will be opened for writing, and it will be created if it does not exist. Every write operation to a file opened with append will take place at the end of the file.</target>
        </trans-unit>
        <trans-unit id="aaeb7d272198859be41859bd55e062152f9f69cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:append_first&lt;/code&gt; option in &lt;a href=&quot;kernel#defdelegate/2&quot;&gt;&lt;code&gt;Kernel.defdelegate/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:append_first&lt;/code&gt; option in &lt;a href=&quot;kernel#defdelegate/2&quot;&gt;&lt;code&gt;Kernel.defdelegate/2&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20988cf8cfc56b4226e8ddca56e6e3d46dc87990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:application&lt;/code&gt; - the current application</source>
          <target state="translated">&lt;code&gt;:application&lt;/code&gt; - the current application</target>
        </trans-unit>
        <trans-unit id="56f83ef1508d909d20a94523ff82e2adf056c28b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:arg0&lt;/code&gt; - sets the command arg0</source>
          <target state="translated">&lt;code&gt;:arg0&lt;/code&gt; - sets the command arg0</target>
        </trans-unit>
        <trans-unit id="84020d860f82d1a83862393258e63197ab308bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:arity&lt;/code&gt; - (integer) the number of arguments the function is to be called with.</source>
          <target state="translated">&lt;code&gt;:arity&lt;/code&gt; - (integer) the number of arguments the function is to be called with.</target>
        </trans-unit>
        <trans-unit id="90b0a1d7ef2d2c37e84774f9382128fdc89cbcd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as&lt;/code&gt; - the function to call on the target given in &lt;code&gt;:to&lt;/code&gt;. This parameter is optional and defaults to the name being delegated (&lt;code&gt;funs&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:as&lt;/code&gt; - the function to call on the target given in &lt;code&gt;:to&lt;/code&gt;. This parameter is optional and defaults to the name being delegated (&lt;code&gt;funs&lt;/code&gt;).</target>
        </trans-unit>
        <trans-unit id="a193be5bdbb46f900203a45e88e7da67185a2c99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as_char_lists&lt;/code&gt; value in &lt;a href=&quot;inspect.opts#t:t/0&quot;&gt;&lt;code&gt;Inspect.Opts.t/0&lt;/code&gt;&lt;/a&gt; type</source>
          <target state="translated">&lt;code&gt;:as_char_lists&lt;/code&gt; value in &lt;a href=&quot;inspect.opts#t:t/0&quot;&gt;&lt;code&gt;Inspect.Opts.t/0&lt;/code&gt;&lt;/a&gt; type</target>
        </trans-unit>
        <trans-unit id="87a4c0055bcfdec950152ed8097ff43cabc13d45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:as_charlists&lt;/code&gt; value (v1.3)</source>
          <target state="translated">&lt;code&gt;:as_charlists&lt;/code&gt; value (v1.3)</target>
        </trans-unit>
        <trans-unit id="773c5585973d244ca06db6b9e506648f27b7ecf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:assert_receive_timeout&lt;/code&gt; - the timeout to be used on &lt;code&gt;assert_receive&lt;/code&gt; calls in milliseconds, defaults to &lt;code&gt;100&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:assert_receive_timeout&lt;/code&gt; - the timeout to be used on &lt;code&gt;assert_receive&lt;/code&gt; calls in milliseconds, defaults to &lt;code&gt;100&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="1205e1c5ed1bb5f3aa1831f2aec5365c2277fb15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:async&lt;/code&gt; - (boolean) when &lt;code&gt;false&lt;/code&gt;, the request for cancellation is synchronous. When &lt;code&gt;true&lt;/code&gt;, the request for cancellation is asynchronous, meaning that the request to cancel the timer is issued and &lt;code&gt;:ok&lt;/code&gt; is returned right away. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:async&lt;/code&gt; - (boolean) when &lt;code&gt;false&lt;/code&gt;, the request for cancellation is synchronous. When &lt;code&gt;true&lt;/code&gt;, the request for cancellation is asynchronous, meaning that the request to cancel the timer is issued and &lt;code&gt;:ok&lt;/code&gt; is returned right away. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="70717c3aa296e089f4c263b2d126aba4c02882b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:async&lt;/code&gt; - configures tests in this module to run concurrently with tests in other modules. Tests in the same module never run concurrently. It should be enabled only if tests do not change any global state. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:async&lt;/code&gt; - configures tests in this module to run concurrently with tests in other modules. Tests in the same module never run concurrently. It should be enabled only if tests do not change any global state. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="3b538ec5bfa5f7de2c886ae97bf16b53b5fb313f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:async&lt;/code&gt; - if the test case is in async mode</source>
          <target state="translated">&lt;code&gt;:async&lt;/code&gt; - if the test case is in async mode</target>
        </trans-unit>
        <trans-unit id="51fba88cf8c4b9e78d9a2cf96e8a1c08a62bcbf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:attributes&lt;/code&gt; - a keyword list with all persisted attributes</source>
          <target state="translated">&lt;code&gt;:attributes&lt;/code&gt; - a keyword list with all persisted attributes</target>
        </trans-unit>
        <trans-unit id="4b2e695b6cbfd2b85c207c5e2c98f2077a60b202" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:autorun&lt;/code&gt; - if ExUnit should run by default on exit. Defaults to &lt;code&gt;true&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:autorun&lt;/code&gt; - if ExUnit should run by default on exit. Defaults to &lt;code&gt;true&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="1c8059405d3cdce4a528b9cd4ac86ebc56cdad49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:backends&lt;/code&gt; - the backends to be used. Defaults to &lt;code&gt;[:console]&lt;/code&gt;. See the &quot;Backends&quot; section for more information.</source>
          <target state="translated">&lt;code&gt;:backends&lt;/code&gt; - the backends to be used. Defaults to &lt;code&gt;[:console]&lt;/code&gt;. See the &quot;Backends&quot; section for more information.</target>
        </trans-unit>
        <trans-unit id="ef85c6df134efeb6d027f68a4dbc0c2b206bdc36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:base&lt;/code&gt; - prints integers as &lt;code&gt;:binary&lt;/code&gt;, &lt;code&gt;:octal&lt;/code&gt;, &lt;code&gt;:decimal&lt;/code&gt;, or &lt;code&gt;:hex&lt;/code&gt;, defaults to &lt;code&gt;:decimal&lt;/code&gt;. When inspecting binaries any &lt;code&gt;:base&lt;/code&gt; other than &lt;code&gt;:decimal&lt;/code&gt; implies &lt;code&gt;binaries: :as_binaries&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:base&lt;/code&gt; - prints integers as &lt;code&gt;:binary&lt;/code&gt;, &lt;code&gt;:octal&lt;/code&gt;, &lt;code&gt;:decimal&lt;/code&gt;, or &lt;code&gt;:hex&lt;/code&gt;, defaults to &lt;code&gt;:decimal&lt;/code&gt;. When inspecting binaries any &lt;code&gt;:base&lt;/code&gt; other than &lt;code&gt;:decimal&lt;/code&gt; implies &lt;code&gt;binaries: :as_binaries&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="ad6382784af12dd21fc39d66a5c2bb24fff27b2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:binaries&lt;/code&gt; - when &lt;code&gt;:as_strings&lt;/code&gt; all binaries will be printed as strings, non-printable bytes will be escaped.</source>
          <target state="translated">&lt;code&gt;:binaries&lt;/code&gt; - when &lt;code&gt;:as_strings&lt;/code&gt; all binaries will be printed as strings, non-printable bytes will be escaped.</target>
        </trans-unit>
        <trans-unit id="5d8a31615330118b7cb2718da80ba80b28070bf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:binary&lt;/code&gt; - opens the file in binary mode, disabling special handling of unicode sequences (default mode).</source>
          <target state="translated">&lt;code&gt;:binary&lt;/code&gt; - opens the file in binary mode, disabling special handling of unicode sequences (default mode).</target>
        </trans-unit>
        <trans-unit id="3c45124a259150c99e6b6f5feb4f0b7589e6e20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:bind_quoted&lt;/code&gt; - passes a binding to the macro. Whenever a binding is given, &lt;a href=&quot;#unquote/1&quot;&gt;&lt;code&gt;unquote/1&lt;/code&gt;&lt;/a&gt; is automatically disabled.</source>
          <target state="translated">&lt;code&gt;:bind_quoted&lt;/code&gt; - passes a binding to the macro. Whenever a binding is given, &lt;a href=&quot;#unquote/1&quot;&gt;&lt;code&gt;unquote/1&lt;/code&gt;&lt;/a&gt; is automatically disabled.</target>
        </trans-unit>
        <trans-unit id="24c305373a10b201f7857da615524911c9e2994d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:bind_quoted&lt;/code&gt; will translate to the same code as the example above. &lt;code&gt;:bind_quoted&lt;/code&gt; can be used in many cases and is seen as good practice, not only because it helps prevent us from running into common mistakes, but also because it allows us to leverage other tools exposed by macros, such as unquote fragments discussed in some sections below.</source>
          <target state="translated">&lt;code&gt;:bind_quoted&lt;/code&gt; will translate to the same code as the example above. &lt;code&gt;:bind_quoted&lt;/code&gt; can be used in many cases and is seen as good practice, not only because it helps prevent us from running into common mistakes, but also because it allows us to leverage other tools exposed by macros, such as unquote fragments discussed in some sections below.</target>
        </trans-unit>
        <trans-unit id="e75f055662a966c3ac4d23b1f65a615d6ed0a5d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:binding&lt;/code&gt; - an initial set of variables for the evaluator</source>
          <target state="translated">&lt;code&gt;:binding&lt;/code&gt; - an initial set of variables for the evaluator</target>
        </trans-unit>
        <trans-unit id="e5627a6848f16665e3976cd59c764cb2f9240492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:blame_diff&lt;/code&gt; - ... when blaming source with no match</source>
          <target state="translated">&lt;code&gt;:blame_diff&lt;/code&gt; - ... when blaming source with no match</target>
        </trans-unit>
        <trans-unit id="c81ff59c85fc924fa179aea38251f0610f37d711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:boolean&lt;/code&gt; - sets the value to &lt;code&gt;true&lt;/code&gt; when given (see also the &quot;Negation switches&quot; section below)</source>
          <target state="translated">&lt;code&gt;:boolean&lt;/code&gt; - sets the value to &lt;code&gt;true&lt;/code&gt; when given (see also the &quot;Negation switches&quot; section below)</target>
        </trans-unit>
        <trans-unit id="af269ab1f373eed4ebf588209c6d7519011e2b5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:branch&lt;/code&gt; - the Git branch to checkout</source>
          <target state="translated">&lt;code&gt;:branch&lt;/code&gt; - the Git branch to checkout</target>
        </trans-unit>
        <trans-unit id="2f4a71a8a1979c21f1b4c022926a0137a6279455" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:break&lt;/code&gt; - If &lt;code&gt;:strict&lt;/code&gt;, always break between each element. If &lt;code&gt;:flex&lt;/code&gt;, breaks only when necessary. If &lt;code&gt;:maybe&lt;/code&gt;, chooses &lt;code&gt;:flex&lt;/code&gt; only if all elements are text-based, otherwise is &lt;code&gt;:strict&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:break&lt;/code&gt; - If &lt;code&gt;:strict&lt;/code&gt;, always break between each element. If &lt;code&gt;:flex&lt;/code&gt;, breaks only when necessary. If &lt;code&gt;:maybe&lt;/code&gt;, chooses &lt;code&gt;:flex&lt;/code&gt; only if all elements are text-based, otherwise is &lt;code&gt;:strict&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="314b0f0cc6b1b6cfd34d23a546b65d0e3cb10d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:brutal_kill&lt;/code&gt; - the child process is unconditionally and immediately terminated using &lt;code&gt;Process.exit(child, :kill)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:brutal_kill&lt;/code&gt; - the child process is unconditionally and immediately terminated using &lt;code&gt;Process.exit(child, :kill)&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="500eb8b45714f83acf97bca387c62cc53f3e9ab1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:brutal_kill&lt;/code&gt; - the child process is unconditionally terminated using &lt;code&gt;Process.exit(child, :kill)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:brutal_kill&lt;/code&gt; - the child process is unconditionally terminated using &lt;code&gt;Process.exit(child, :kill)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4eded5f5526c4d93d705fb757c6fa9c41a88419" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:brutal_kill&lt;/code&gt;: the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; is killed and so &lt;a href=&quot;#c:terminate/2&quot;&gt;&lt;code&gt;terminate/2&lt;/code&gt;&lt;/a&gt; is not called.</source>
          <target state="translated">&lt;code&gt;:brutal_kill&lt;/code&gt;: the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;GenServer&lt;/code&gt;&lt;/a&gt; is killed and so &lt;a href=&quot;#c:terminate/2&quot;&gt;&lt;code&gt;terminate/2&lt;/code&gt;&lt;/a&gt; is not called.</target>
        </trans-unit>
        <trans-unit id="0108e8ed764cccaf8a9622769a03ccd87ef72f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:build&lt;/code&gt; - the Elixir version, short Git revision hash and Erlang/OTP release it was compiled with</source>
          <target state="translated">&lt;code&gt;:build&lt;/code&gt; - the Elixir version, short Git revision hash and Erlang/OTP release it was compiled with</target>
        </trans-unit>
        <trans-unit id="4824520c87255a8ae92b31057e50421c5984aca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:build_embedded&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, embeds all code and priv content in the &lt;code&gt;_build&lt;/code&gt; directory instead of using symlinks.</source>
          <target state="translated">&lt;code&gt;:build_embedded&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, embeds all code and priv content in the &lt;code&gt;_build&lt;/code&gt; directory instead of using symlinks.</target>
        </trans-unit>
        <trans-unit id="4b5484c26fc9650759dc8657559a91cb44689618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:build_path&lt;/code&gt; - the directory where build artifacts should be written to. This option is intended only for child apps within a larger umbrella application so that each child app can use the common &lt;code&gt;_build&lt;/code&gt; directory of the parent umbrella. In a non-umbrella context, configuring this has undesirable side-effects (such as skipping some compiler checks) and should be avoided.</source>
          <target state="translated">&lt;code&gt;:build_path&lt;/code&gt; - the directory where build artifacts should be written to. This option is intended only for child apps within a larger umbrella application so that each child app can use the common &lt;code&gt;_build&lt;/code&gt; directory of the parent umbrella. In a non-umbrella context, configuring this has undesirable side-effects (such as skipping some compiler checks) and should be avoided.</target>
        </trans-unit>
        <trans-unit id="dd99a2c33b55d1a69a9587b4bb0af10426a0b947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:build_per_environment&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt;, builds will be &lt;em&gt;per-environment&lt;/em&gt;. If &lt;code&gt;false&lt;/code&gt;, builds will go in &lt;code&gt;_build/shared&lt;/code&gt; regardless of the Mix environment. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:build_per_environment&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt;, builds will be &lt;em&gt;per-environment&lt;/em&gt;. If &lt;code&gt;false&lt;/code&gt;, builds will go in &lt;code&gt;_build/shared&lt;/code&gt; regardless of the Mix environment. Defaults to &lt;code&gt;true&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="7d0167414ab3cf6453dfc901a3d259f8711132ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:callee&lt;/code&gt; - a tuple containing the module, function, and arity of the call</source>
          <target state="translated">&lt;code&gt;:callee&lt;/code&gt; - a tuple containing the module, function, and arity of the call</target>
        </trans-unit>
        <trans-unit id="85ae32a071915b3533546d64e72c73927eeb9ae4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:caller_module&lt;/code&gt; - the module where the function is called</source>
          <target state="translated">&lt;code&gt;:caller_module&lt;/code&gt; - the module where the function is called</target>
        </trans-unit>
        <trans-unit id="ef939268ba77317d76f85a3b7dd66198140767ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:callers&lt;/code&gt; - prints detailed information about immediate callers and called functions</source>
          <target state="translated">&lt;code&gt;:callers&lt;/code&gt; - prints detailed information about immediate callers and called functions</target>
        </trans-unit>
        <trans-unit id="e2ab4664ff39cf3a52162945342d572197e78f29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:calls&lt;/code&gt; - filters out any results with a call count lower than this</source>
          <target state="translated">&lt;code&gt;:calls&lt;/code&gt; - filters out any results with a call count lower than this</target>
        </trans-unit>
        <trans-unit id="2bd1894f5a3f5a30fcd5c811ec646b681b9c1263" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:capture&lt;/code&gt; - what to capture in the result. Check the moduledoc for &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; to see the possible capture values.</source>
          <target state="translated">&lt;code&gt;:capture&lt;/code&gt; - what to capture in the result. Check the moduledoc for &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Regex&lt;/code&gt;&lt;/a&gt; to see the possible capture values.</target>
        </trans-unit>
        <trans-unit id="6d8b30c9bda8b9d5c925c50ff71b04cc0624b302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:capture_log&lt;/code&gt; - if ExUnit should default to keeping track of log messages and print them on test failure. Can be overridden for individual tests via &lt;code&gt;@tag capture_log: false&lt;/code&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:capture_log&lt;/code&gt; - if ExUnit should default to keeping track of log messages and print them on test failure. Can be overridden for individual tests via &lt;code&gt;@tag capture_log: false&lt;/code&gt;. Defaults to &lt;code&gt;false&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="eb32d02cd5e283de334001ed1dbc2a75c5e14397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:capture_log&lt;/code&gt; - see the &quot;Log Capture&quot; section below</source>
          <target state="translated">&lt;code&gt;:capture_log&lt;/code&gt; - see the &quot;Log Capture&quot; section below</target>
        </trans-unit>
        <trans-unit id="e71fb20ea5f67c8b80dc6f80c30eb36f8786b79e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:case&lt;/code&gt; - specifies the character case to accept when decoding</source>
          <target state="translated">&lt;code&gt;:case&lt;/code&gt; - specifies the character case to accept when decoding</target>
        </trans-unit>
        <trans-unit id="16866b7a1d0f42f9879a9ae9c5c4f646d1217a30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:case&lt;/code&gt; - specifies the character case to use when encoding</source>
          <target state="translated">&lt;code&gt;:case&lt;/code&gt; - specifies the character case to use when encoding</target>
        </trans-unit>
        <trans-unit id="21508534dad45b8bec3ece213d2d2a6622d96eb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cd&lt;/code&gt; - the directory to run the command in</source>
          <target state="translated">&lt;code&gt;:cd&lt;/code&gt; - the directory to run the command in</target>
        </trans-unit>
        <trans-unit id="54d002aa167c3fc26d4d02239a204fbde9f4f9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:char_lists&lt;/code&gt; key in &lt;a href=&quot;inspect.opts#t:t/0&quot;&gt;&lt;code&gt;Inspect.Opts.t/0&lt;/code&gt;&lt;/a&gt; type</source>
          <target state="translated">&lt;code&gt;:char_lists&lt;/code&gt; key in &lt;a href=&quot;inspect.opts#t:t/0&quot;&gt;&lt;code&gt;Inspect.Opts.t/0&lt;/code&gt;&lt;/a&gt; type</target>
        </trans-unit>
        <trans-unit id="864527a5099f3d301dca0b94a93fcfccd5332eec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:charlist&lt;/code&gt; - when this term is given, read operations on the file will return charlists rather than binaries.</source>
          <target state="translated">&lt;code&gt;:charlist&lt;/code&gt; - when this term is given, read operations on the file will return charlists rather than binaries.</target>
        </trans-unit>
        <trans-unit id="4cf2f98473b195ebd5a623fec480eec38f98f68e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:charlists&lt;/code&gt; - when &lt;code&gt;:as_charlists&lt;/code&gt; all lists will be printed as charlists, non-printable elements will be escaped.</source>
          <target state="translated">&lt;code&gt;:charlists&lt;/code&gt; - when &lt;code&gt;:as_charlists&lt;/code&gt; all lists will be printed as charlists, non-printable elements will be escaped.</target>
        </trans-unit>
        <trans-unit id="773bfbbd557b43af1872e6c9b5cc9dd563a09fc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:charlists&lt;/code&gt; key (v1.3)</source>
          <target state="translated">&lt;code&gt;:charlists&lt;/code&gt; key (v1.3)</target>
        </trans-unit>
        <trans-unit id="70fae83d098f90d9742bc1d8962c366ab05ab9d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:colors&lt;/code&gt; - a keyword list of coloring options.</source>
          <target state="translated">&lt;code&gt;:colors&lt;/code&gt; - a keyword list of coloring options.</target>
        </trans-unit>
        <trans-unit id="e033c888260b3113e091932a43193eb0cfdcb129" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:colors&lt;/code&gt; - a keyword list of colors to be used by some formatters. The only option so far is &lt;code&gt;[enabled: boolean]&lt;/code&gt; which defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt;&lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:colors&lt;/code&gt; - a keyword list of colors to be used by some formatters. The only option so far is &lt;code&gt;[enabled: boolean]&lt;/code&gt; which defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt;&lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt;&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="bc7ea4612df433c6d6a52f40d6ecdce8939022e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:columns&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, attach a &lt;code&gt;:column&lt;/code&gt; key to the quoted metadata. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:columns&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, attach a &lt;code&gt;:column&lt;/code&gt; key to the quoted metadata. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="0b0bb6b405ded48dd2b80233764246532f1bc166" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:comment&lt;/code&gt; - comment line to follow shebang directive in the escript. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:comment&lt;/code&gt; - comment line to follow shebang directive in the escript. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="44e5f44f2d2d0dc61a0facf8a51c018903af6f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile&lt;/code&gt; - a command (string) to compile the dependency; defaults to a &lt;code&gt;mix&lt;/code&gt;, &lt;code&gt;rebar&lt;/code&gt; or &lt;code&gt;make&lt;/code&gt; command</source>
          <target state="translated">&lt;code&gt;:compile&lt;/code&gt; - a command (string) to compile the dependency; defaults to a &lt;code&gt;mix&lt;/code&gt;, &lt;code&gt;rebar&lt;/code&gt; or &lt;code&gt;make&lt;/code&gt; command</target>
        </trans-unit>
        <trans-unit id="6a7ce00c3fdd346c7c28a9ad3b30ec5a6219d039" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile&lt;/code&gt; - a list with compiler metadata</source>
          <target state="translated">&lt;code&gt;:compile&lt;/code&gt; - a list with compiler metadata</target>
        </trans-unit>
        <trans-unit id="0e002f290bf581858fcbce0a01cac58885e7e4b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile_time_application&lt;/code&gt; - sets the &lt;code&gt;:application&lt;/code&gt; metadata value to the configured value at compilation time. This configuration is usually only useful for build tools to automatically add the application to the metadata for &lt;a href=&quot;logger#debug/2&quot;&gt;&lt;code&gt;Logger.debug/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;logger#info/2&quot;&gt;&lt;code&gt;Logger.info/2&lt;/code&gt;&lt;/a&gt;, etc. style of calls.</source>
          <target state="translated">&lt;code&gt;:compile_time_application&lt;/code&gt; - sets the &lt;code&gt;:application&lt;/code&gt; metadata value to the configured value at compilation time. This configuration is usually only useful for build tools to automatically add the application to the metadata for &lt;a href=&quot;logger#debug/2&quot;&gt;&lt;code&gt;Logger.debug/2&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;logger#info/2&quot;&gt;&lt;code&gt;Logger.info/2&lt;/code&gt;&lt;/a&gt;, etc. style of calls.</target>
        </trans-unit>
        <trans-unit id="b0b6bde1dfdbdb0192aa284dd56c5604692f0bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compile_time_purge_matching&lt;/code&gt; - purges &lt;em&gt;at compilation time&lt;/em&gt; all calls that match the given conditions. This means that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; calls with level lower than this option will be completely removed at compile time, accruing no overhead at runtime. This configuration expects a list of keyword lists. Each keyword list contains a metadata key and the matching value that should be purged. A special key named &lt;code&gt;:level_lower_than&lt;/code&gt; can be used to purge all messages with a lower logger level. Remember that if you want to purge log calls from a dependency, the dependency must be recompiled.</source>
          <target state="translated">&lt;code&gt;:compile_time_purge_matching&lt;/code&gt; - purges &lt;em&gt;at compilation time&lt;/em&gt; all calls that match the given conditions. This means that &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; calls with level lower than this option will be completely removed at compile time, accruing no overhead at runtime. This configuration expects a list of keyword lists. Each keyword list contains a metadata key and the matching value that should be purged. A special key named &lt;code&gt;:level_lower_than&lt;/code&gt; can be used to purge all messages with a lower logger level. Remember that if you want to purge log calls from a dependency, the dependency must be recompiled.</target>
        </trans-unit>
        <trans-unit id="fef4d56e6d5f352d2eff46ec9e2c0a7f3e55a258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compilers&lt;/code&gt; - compilers to run, defaults to &lt;a href=&quot;mix#compilers/0&quot;&gt;&lt;code&gt;Mix.compilers/0&lt;/code&gt;&lt;/a&gt;, which are &lt;code&gt;[:yecc, :leex, :erlang, :elixir, :xref, :app]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:compilers&lt;/code&gt; - compilers to run, defaults to &lt;a href=&quot;mix#compilers/0&quot;&gt;&lt;code&gt;Mix.compilers/0&lt;/code&gt;&lt;/a&gt;, which are &lt;code&gt;[:yecc, :leex, :erlang, :elixir, :xref, :app]&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="26d947e4118c95ae88ec5e2804d30860c642617e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:compressed&lt;/code&gt; - makes it possible to read or write gzip compressed files.</source>
          <target state="translated">&lt;code&gt;:compressed&lt;/code&gt; - makes it possible to read or write gzip compressed files.</target>
        </trans-unit>
        <trans-unit id="360858d505123f225c8071b11354794cec2ec9ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:config_path&lt;/code&gt; - a string representing the path of the main config file. See &lt;a href=&quot;#config_files/0&quot;&gt;&lt;code&gt;config_files/0&lt;/code&gt;&lt;/a&gt; for more information. Defaults to &lt;code&gt;&quot;config/config.exs&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:config_path&lt;/code&gt; - a string representing the path of the main config file. See &lt;a href=&quot;#config_files/0&quot;&gt;&lt;code&gt;config_files/0&lt;/code&gt;&lt;/a&gt; for more information. Defaults to &lt;code&gt;&quot;config/config.exs&quot;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="e3ae31ccf107015968b992bab69027e0706435bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:console&lt;/code&gt; - logs messages to the console (enabled by default)</source>
          <target state="translated">&lt;code&gt;:console&lt;/code&gt; - logs messages to the console (enabled by default)</target>
        </trans-unit>
        <trans-unit id="c3f29d28cd3787157664a0925f5ceb0ee2cd6162" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:consolidate_protocols&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, runs protocol consolidation via the &lt;code&gt;compile.protocols&lt;/code&gt; task. The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:consolidate_protocols&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, runs protocol consolidation via the &lt;code&gt;compile.protocols&lt;/code&gt; task. The default value is &lt;code&gt;true&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="4c1164c25317f2871f53de609b2457c7b6d769ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:consolidated?&lt;/code&gt; - returns whether the protocol is consolidated</source>
          <target state="translated">&lt;code&gt;:consolidated?&lt;/code&gt; - returns whether the protocol is consolidated</target>
        </trans-unit>
        <trans-unit id="b1a617523747506294cfff867728cd74ca9ea565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:cont&lt;/code&gt; - the enumeration should continue</source>
          <target state="translated">&lt;code&gt;:cont&lt;/code&gt; - the enumeration should continue</target>
        </trans-unit>
        <trans-unit id="312e96f5abb41a11aa4d2ca265e6662b9de8270c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:context&lt;/code&gt; - sets the resolution context.</source>
          <target state="translated">&lt;code&gt;:context&lt;/code&gt; - sets the resolution context.</target>
        </trans-unit>
        <trans-unit id="45e7aa3927c034de9a5e74418ba211afa85591ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:count&lt;/code&gt; - counts the number of times the switch is given</source>
          <target state="translated">&lt;code&gt;:count&lt;/code&gt; - counts the number of times the switch is given</target>
        </trans-unit>
        <trans-unit id="af4d41f25ac0d75bd759954004651278a6469992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:crash_reason&lt;/code&gt; - a two-element tuple with the throw/error/exit reason as first argument and the stacktrace as second. A throw will always be &lt;code&gt;{:nocatch, term}&lt;/code&gt;. An error is always an &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; struct. All other entries are exits. The console backend ignores this metadata by default but it can be useful to other backends, such as the ones that report errors to third-party services</source>
          <target state="translated">&lt;code&gt;:crash_reason&lt;/code&gt; - a two-element tuple with the throw/error/exit reason as first argument and the stacktrace as second. A throw will always be &lt;code&gt;{:nocatch, term}&lt;/code&gt;. An error is always an &lt;a href=&quot;https://hexdocs.pm/elixir/Exception.html&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt; struct. All other entries are exits. The console backend ignores this metadata by default but it can be useful to other backends, such as the ones that report errors to third-party services</target>
        </trans-unit>
        <trans-unit id="bad041f28c0f5d18e5ca098270781d96c4bf90a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:custom_options&lt;/code&gt; (since v1.9.0) - a keyword list storing custom user-defined options. Useful when implementing the &lt;a href=&quot;inspect&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol for nested structs to pass the custom options through.</source>
          <target state="translated">&lt;code&gt;:custom_options&lt;/code&gt; (since v1.9.0) - a keyword list storing custom user-defined options. Useful when implementing the &lt;a href=&quot;inspect&quot;&gt;&lt;code&gt;Inspect&lt;/code&gt;&lt;/a&gt; protocol for nested structs to pass the custom options through.</target>
        </trans-unit>
        <trans-unit id="7ba1042479c5c37f3209bbf7d986103d4f5442d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:date&lt;/code&gt; - a string representation of the ISO8601 date and time it was built</source>
          <target state="translated">&lt;code&gt;:date&lt;/code&gt; - a string representation of the ISO8601 date and time it was built</target>
        </trans-unit>
        <trans-unit id="6f82f085a250ea7fd0719d7180ec22aed8086392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug&lt;/code&gt; - color for debug messages. Defaults to: &lt;code&gt;:cyan&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:debug&lt;/code&gt; - color for debug messages. Defaults to: &lt;code&gt;:cyan&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="681f370fb1331eef535f91a454cc7417a9cad1c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug&lt;/code&gt; - for debug-related messages</source>
          <target state="translated">&lt;code&gt;:debug&lt;/code&gt; - for debug-related messages</target>
        </trans-unit>
        <trans-unit id="8ec3dc955cd25e2703b69e0d1c25a8a24af0b82f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug&lt;/code&gt; - if present, the corresponding function in the &lt;a href=&quot;http://www.erlang.org/doc/man/sys.html&quot;&gt;&lt;code&gt;:sys&lt;/code&gt; module&lt;/a&gt; is invoked</source>
          <target state="translated">&lt;code&gt;:debug&lt;/code&gt; - if present, the corresponding function in the &lt;a href=&quot;http://www.erlang.org/doc/man/sys.html&quot;&gt;&lt;code&gt;:sys&lt;/code&gt; module&lt;/a&gt; is invoked</target>
        </trans-unit>
        <trans-unit id="a366246852f8587a2d5b667869aea111b89d9e9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:debug_info&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, retain debug information in the compiled module. This allows a developer to reconstruct the original source code. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:debug_info&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, retain debug information in the compiled module. This allows a developer to reconstruct the original source code. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="da4455354fdf5c3fffd2fce8e5f3a011ddb7fcd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default_prompt&lt;/code&gt; - used when &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt;&lt;code&gt;Node.alive?/0&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:default_prompt&lt;/code&gt; - used when &lt;a href=&quot;https://hexdocs.pm/elixir/Node.html#alive?/0&quot;&gt;&lt;code&gt;Node.alive?/0&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="748975cfd744cc0c4c15209a0a65f0a44c13867d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:default_task&lt;/code&gt; - a string representing the default task to be run by &lt;code&gt;mix&lt;/code&gt; when no task is specified. Defaults to &lt;code&gt;&quot;run&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:default_task&lt;/code&gt; - a string representing the default task to be run by &lt;code&gt;mix&lt;/code&gt; when no task is specified. Defaults to &lt;code&gt;&quot;run&quot;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="4349740b52fa25b60adb8c75e6f1e2c5e3174407" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:delayed_write&lt;/code&gt;, &lt;code&gt;:raw&lt;/code&gt;, &lt;code&gt;:ram&lt;/code&gt;, &lt;code&gt;:read_ahead&lt;/code&gt;, &lt;code&gt;:sync&lt;/code&gt;, &lt;code&gt;{:encoding, ...}&lt;/code&gt;, &lt;code&gt;{:read_ahead, pos_integer}&lt;/code&gt;, &lt;code&gt;{:delayed_write, non_neg_integer, non_neg_integer}&lt;/code&gt; - for more information about these options see &lt;a href=&quot;http://www.erlang.org/doc/man/file.html#open-2&quot;&gt;&lt;code&gt;:file.open/2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:delayed_write&lt;/code&gt;, &lt;code&gt;:raw&lt;/code&gt;, &lt;code&gt;:ram&lt;/code&gt;, &lt;code&gt;:read_ahead&lt;/code&gt;, &lt;code&gt;:sync&lt;/code&gt;, &lt;code&gt;{:encoding, ...}&lt;/code&gt;, &lt;code&gt;{:read_ahead, pos_integer}&lt;/code&gt;, &lt;code&gt;{:delayed_write, non_neg_integer, non_neg_integer}&lt;/code&gt; - for more information about these options see &lt;a href=&quot;http://www.erlang.org/doc/man/file.html#open-2&quot;&gt;&lt;code&gt;:file.open/2&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="98f6e2dc36fcc6b45118ebe7fb97b952e45de6cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:deps&lt;/code&gt; - a list of dependencies of this project. Refer to the documentation for the &lt;a href=&quot;mix.tasks.deps&quot;&gt;&lt;code&gt;Mix.Tasks.Deps&lt;/code&gt;&lt;/a&gt; task for more information. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:deps&lt;/code&gt; - a list of dependencies of this project. Refer to the documentation for the &lt;a href=&quot;mix.tasks.deps&quot;&gt;&lt;code&gt;Mix.Tasks.Deps&lt;/code&gt;&lt;/a&gt; task for more information. Defaults to &lt;code&gt;[]&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="2c8b1c05b88b106947f059059e28dc60fe86e8e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:deps_path&lt;/code&gt; - directory where dependencies are stored. Also see &lt;a href=&quot;#deps_path/1&quot;&gt;&lt;code&gt;deps_path/1&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;&quot;deps&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:deps_path&lt;/code&gt; - directory where dependencies are stored. Also see &lt;a href=&quot;#deps_path/1&quot;&gt;&lt;code&gt;deps_path/1&lt;/code&gt;&lt;/a&gt;. Defaults to &lt;code&gt;&quot;deps&quot;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="65ffa1c92105b5cfc7acab4e0af14311447acdaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:depth&lt;/code&gt; - only returns dependencies to the depth level, a depth of 1 will only return top-level dependencies</source>
          <target state="translated">&lt;code&gt;:depth&lt;/code&gt; - only returns dependencies to the depth level, a depth of 1 will only return top-level dependencies</target>
        </trans-unit>
        <trans-unit id="b8f1874ab0b8fbcc80869d95903a0dd1f91f05c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:describe&lt;/code&gt; - the describe block the test belongs to</source>
          <target state="translated">&lt;code&gt;:describe&lt;/code&gt; - the describe block the test belongs to</target>
        </trans-unit>
        <trans-unit id="356c33fd11a467f3b716eeaa3c087835a4642a40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:dest&lt;/code&gt; - the destination directory for the BEAM files. When using &lt;a href=&quot;#compile/2&quot;&gt;&lt;code&gt;compile/2&lt;/code&gt;&lt;/a&gt;, this information is only used to properly annotate the BEAM files before they are loaded into memory. If you want a file to actually be written to &lt;code&gt;dest&lt;/code&gt;, use &lt;a href=&quot;#compile_to_path/3&quot;&gt;&lt;code&gt;compile_to_path/3&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;:dest&lt;/code&gt; - the destination directory for the BEAM files. When using &lt;a href=&quot;#compile/2&quot;&gt;&lt;code&gt;compile/2&lt;/code&gt;&lt;/a&gt;, this information is only used to properly annotate the BEAM files before they are loaded into memory. If you want a file to actually be written to &lt;code&gt;dest&lt;/code&gt;, use &lt;a href=&quot;#compile_to_path/3&quot;&gt;&lt;code&gt;compile_to_path/3&lt;/code&gt;&lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="2538cd271b193546bd4d878c826cf89e60eee09a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:details&lt;/code&gt; - includes profile data for each profiled process</source>
          <target state="translated">&lt;code&gt;:details&lt;/code&gt; - includes profile data for each profiled process</target>
        </trans-unit>
        <trans-unit id="29f022f42efa6ac9d98b08d2435b207f23c308b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:dev&lt;/code&gt; - the default environment</source>
          <target state="translated">&lt;code&gt;:dev&lt;/code&gt; - the default environment</target>
        </trans-unit>
        <trans-unit id="dcaf3dec0c41e1f5e8c230f476d5271b4f67b65c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:dev&lt;/code&gt; - the one in which Mix tasks (like &lt;code&gt;compile&lt;/code&gt;) run by default</source>
          <target state="translated">&lt;code&gt;:dev&lt;/code&gt; - the one in which Mix tasks (like &lt;code&gt;compile&lt;/code&gt;) run by default</target>
        </trans-unit>
        <trans-unit id="7232a5b83835049ee81f4046c8518f44296e42ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:device&lt;/code&gt; - the device to log error messages to. Defaults to &lt;code&gt;:user&lt;/code&gt; but can be changed to something else such as &lt;code&gt;:standard_error&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:device&lt;/code&gt; - the device to log error messages to. Defaults to &lt;code&gt;:user&lt;/code&gt; but can be changed to something else such as &lt;code&gt;:standard_error&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="fa7fc2533374e65d713f33e47954135bd97ce842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:discard_threshold&lt;/code&gt; - if the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; manager has more than &lt;code&gt;:discard_threshold&lt;/code&gt; messages in its queue, &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; will change to &lt;em&gt;discard mode&lt;/em&gt; and messages will be discarded directly in the clients. &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; will return to &lt;em&gt;sync mode&lt;/em&gt; once the number of messages in the queue is reduced to one below the &lt;code&gt;discard_threshold&lt;/code&gt;. Defaults to 500 messages.</source>
          <target state="translated">&lt;code&gt;:discard_threshold&lt;/code&gt; - if the &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; manager has more than &lt;code&gt;:discard_threshold&lt;/code&gt; messages in its queue, &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; will change to &lt;em&gt;discard mode&lt;/em&gt; and messages will be discarded directly in the clients. &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; will return to &lt;em&gt;sync mode&lt;/em&gt; once the number of messages in the queue is reduced to one below the &lt;code&gt;discard_threshold&lt;/code&gt;. Defaults to 500 messages.</target>
        </trans-unit>
        <trans-unit id="c18481ed9b9a339a384cee8ee3e6e2c0d48f4d2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:discard_threshold_for_error_logger&lt;/code&gt; - if &lt;code&gt;:error_logger&lt;/code&gt; has more than &lt;code&gt;discard_threshold&lt;/code&gt; messages in its inbox, messages will be dropped until the message queue goes down to &lt;code&gt;discard_threshold * 0.75&lt;/code&gt; entries. The threshold will be checked once again after 10% of threshold messages are processed, to avoid messages from being constantly dropped. For example, if the threshold is 500 (the default) and the inbox has 600 messages, 225 messages will dropped, bringing the inbox down to 375 (0.75 &lt;em&gt; threshold) entries and 50 (0.1 &lt;/em&gt; threshold) messages will be processed before the threshold is checked once again.</source>
          <target state="translated">&lt;code&gt;:discard_threshold_for_error_logger&lt;/code&gt; - if &lt;code&gt;:error_logger&lt;/code&gt; has more than &lt;code&gt;discard_threshold&lt;/code&gt; messages in its inbox, messages will be dropped until the message queue goes down to &lt;code&gt;discard_threshold * 0.75&lt;/code&gt; entries. The threshold will be checked once again after 10% of threshold messages are processed, to avoid messages from being constantly dropped. For example, if the threshold is 500 (the default) and the inbox has 600 messages, 225 messages will dropped, bringing the inbox down to 375 (0.75 &lt;em&gt; threshold) entries and 50 (0.1 &lt;/em&gt; threshold) messages will be processed before the threshold is checked once again.</target>
        </trans-unit>
        <trans-unit id="d16ff7330a226fe871171f28f408062ba7ab708f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:discard_threshold_periodic_check&lt;/code&gt; - a periodic check that checks and reports if logger is discarding messages. It logs a warn message whenever the system is (or continues) in discard mode and it logs a warn message whenever if the system was discarding messages but stopped doing so after the previous check. By default it runs every &lt;code&gt;30_000&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;:discard_threshold_periodic_check&lt;/code&gt; - a periodic check that checks and reports if logger is discarding messages. It logs a warn message whenever the system is (or continues) in discard mode and it logs a warn message whenever if the system was discarding messages but stopped doing so after the previous check. By default it runs every &lt;code&gt;30_000&lt;/code&gt; milliseconds.</target>
        </trans-unit>
        <trans-unit id="5f8d22ad3b29ab798774e0d9075473e0e9e58703" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_bold&lt;/code&gt; - (bright)</source>
          <target state="translated">&lt;code&gt;:doc_bold&lt;/code&gt; - (bright)</target>
        </trans-unit>
        <trans-unit id="c76fb43a8cfa20e7d652c378e76b5231769f65ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_code&lt;/code&gt; - the attributes for code blocks (cyan, bright)</source>
          <target state="translated">&lt;code&gt;:doc_code&lt;/code&gt; - the attributes for code blocks (cyan, bright)</target>
        </trans-unit>
        <trans-unit id="bd48a018181c208feb037ca024cb0fe8eca850ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_headings&lt;/code&gt; - h1 and h2 (yellow, bright)</source>
          <target state="translated">&lt;code&gt;:doc_headings&lt;/code&gt; - h1 and h2 (yellow, bright)</target>
        </trans-unit>
        <trans-unit id="54e1dae42dae1fac42ee2a23ba3c6ee5ee860f9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_inline_code&lt;/code&gt; - inline code (cyan)</source>
          <target state="translated">&lt;code&gt;:doc_inline_code&lt;/code&gt; - inline code (cyan)</target>
        </trans-unit>
        <trans-unit id="03756bea266f9b3003d144361ec0ff1c52038387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_title&lt;/code&gt; - the overall heading for the output (reverse, yellow, bright)</source>
          <target state="translated">&lt;code&gt;:doc_title&lt;/code&gt; - the overall heading for the output (reverse, yellow, bright)</target>
        </trans-unit>
        <trans-unit id="81a7b5ae0ab7ed320d67e3110119b97105fe3bbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:doc_underline&lt;/code&gt; - (underline)</source>
          <target state="translated">&lt;code&gt;:doc_underline&lt;/code&gt; - (underline)</target>
        </trans-unit>
        <trans-unit id="1dbc0ce4530bceb58cac498314dfccaf2bc16aec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:docs&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, retain documentation in the compiled module. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:docs&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, retain documentation in the compiled module. Defaults to &lt;code&gt;true&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="ccb3326b6537cb358fba659cd34bec6b2ab0a257" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:done&lt;/code&gt; is passed as a command when no further values will be injected. This is useful when there's a need to close resources or normalizing values. A collectable must be returned when the command is &lt;code&gt;:done&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:done&lt;/code&gt; is passed as a command when no further values will be injected. This is useful when there's a need to close resources or normalizing values. A collectable must be returned when the command is &lt;code&gt;:done&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="952825bf21042f7f214fcbdbb10e28419c785862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eacces&lt;/code&gt; - missing permission for reading the file, or for searching one of the parent directories</source>
          <target state="translated">&lt;code&gt;:eacces&lt;/code&gt; - missing permission for reading the file, or for searching one of the parent directories</target>
        </trans-unit>
        <trans-unit id="b1ff086a676868908ef67a293bc6627fba51140b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eacces&lt;/code&gt; - missing permission for the file or one of its parents</source>
          <target state="translated">&lt;code&gt;:eacces&lt;/code&gt; - missing permission for the file or one of its parents</target>
        </trans-unit>
        <trans-unit id="e6b36c2a1032622d4a4d6168546b4bbc9d7d45c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eacces&lt;/code&gt; - missing permission for writing the file or searching one of the parent directories</source>
          <target state="translated">&lt;code&gt;:eacces&lt;/code&gt; - missing permission for writing the file or searching one of the parent directories</target>
        </trans-unit>
        <trans-unit id="9f0ceebf88c0e7454da8d62044ddf9518a134bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eacces&lt;/code&gt; - missing search or write permissions for the parent directories of &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:eacces&lt;/code&gt; - missing search or write permissions for the parent directories of &lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d7e5a19325351f92bf8bfbcb6e4b8cabf375150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eacces&lt;/code&gt; - the command does not point to an executable file</source>
          <target state="translated">&lt;code&gt;:eacces&lt;/code&gt; - the command does not point to an executable file</target>
        </trans-unit>
        <trans-unit id="cad6abbd025ec6eb167e068b2e00a4068430b8f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:each_cycle&lt;/code&gt; - after the given files are compiled, invokes this function that return a list with potentially more files to compile</source>
          <target state="translated">&lt;code&gt;:each_cycle&lt;/code&gt; - after the given files are compiled, invokes this function that return a list with potentially more files to compile</target>
        </trans-unit>
        <trans-unit id="cab07037df62a66a3bc83cee466f8793e6a4fa9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:each_file&lt;/code&gt; - for each file compiled, invokes the callback passing the file</source>
          <target state="translated">&lt;code&gt;:each_file&lt;/code&gt; - for each file compiled, invokes the callback passing the file</target>
        </trans-unit>
        <trans-unit id="cf7b9937a823cd09db22ce5cceb392547443fce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:each_long_compilation&lt;/code&gt; - for each file that takes more than a given timeout (see the &lt;code&gt;:long_compilation_threshold&lt;/code&gt; option) to compile, invoke this callback passing the file as its argument</source>
          <target state="translated">&lt;code&gt;:each_long_compilation&lt;/code&gt; - for each file that takes more than a given timeout (see the &lt;code&gt;:long_compilation_threshold&lt;/code&gt; option) to compile, invoke this callback passing the file as its argument</target>
        </trans-unit>
        <trans-unit id="59c62eef896cd8d9456aa074ddac5a5016f96c9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:each_module&lt;/code&gt; - for each module compiled, invokes the callback passing the file, module and the module bytecode</source>
          <target state="translated">&lt;code&gt;:each_module&lt;/code&gt; - for each module compiled, invokes the callback passing the file, module and the module bytecode</target>
        </trans-unit>
        <trans-unit id="2e3bcdd1a2047ef25cd1a08636476e6d77afe98f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eagain&lt;/code&gt; - there are no more available operating system processes</source>
          <target state="translated">&lt;code&gt;:eagain&lt;/code&gt; - there are no more available operating system processes</target>
        </trans-unit>
        <trans-unit id="a88a3b738e038a29e53424ec10268ed52a69ed70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eexist&lt;/code&gt; - there is already a file or directory named &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:eexist&lt;/code&gt; - there is already a file or directory named &lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c569953dc2e94f0a737eba07f3f5222c11f14e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:einval&lt;/code&gt; - filename had an improper type, such as tuple</source>
          <target state="translated">&lt;code&gt;:einval&lt;/code&gt; - filename had an improper type, such as tuple</target>
        </trans-unit>
        <trans-unit id="fbac08f99fa254b946bd8ab1b216fd7f77f5b7ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:einval&lt;/code&gt; - path is not a symbolic link</source>
          <target state="translated">&lt;code&gt;:einval&lt;/code&gt; - path is not a symbolic link</target>
        </trans-unit>
        <trans-unit id="72c2fd3cb6f9166cb09ead95fc9e2e13d47e5c79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eisdir&lt;/code&gt; - the named file is a directory</source>
          <target state="translated">&lt;code&gt;:eisdir&lt;/code&gt; - the named file is a directory</target>
        </trans-unit>
        <trans-unit id="651e4cab7112acf3270e7f1896a314d80c8db9ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:elixirc_options&lt;/code&gt; - compilation options that apply to Elixir's compiler. They are the same as the command line options listed above. They must be specified as atoms and use underscores instead of dashes (for example, &lt;code&gt;:debug_info&lt;/code&gt;). These options can always be overridden from the command line and they have the same defaults as their command line counterparts, as documented above.</source>
          <target state="translated">&lt;code&gt;:elixirc_options&lt;/code&gt; - compilation options that apply to Elixir's compiler. They are the same as the command line options listed above. They must be specified as atoms and use underscores instead of dashes (for example, &lt;code&gt;:debug_info&lt;/code&gt;). These options can always be overridden from the command line and they have the same defaults as their command line counterparts, as documented above.</target>
        </trans-unit>
        <trans-unit id="f1e6c6f0f639cf8a5cf20cbd11cb01841fd3b7b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:elixirc_paths&lt;/code&gt; - directories to find source files. Defaults to &lt;code&gt;[&quot;lib&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:elixirc_paths&lt;/code&gt; - directories to find source files. Defaults to &lt;code&gt;[&quot;lib&quot;]&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="cccbe8f39470ee20cccec70c87f01935c76923f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:embed_elixir&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt; embeds Elixir and its children apps (&lt;code&gt;ex_unit&lt;/code&gt;, &lt;code&gt;mix&lt;/code&gt;, etc.) mentioned in the &lt;code&gt;:applications&lt;/code&gt; list inside the &lt;code&gt;application/0&lt;/code&gt; function in &lt;code&gt;mix.exs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:embed_elixir&lt;/code&gt; - if &lt;code&gt;true&lt;/code&gt; embeds Elixir and its children apps (&lt;code&gt;ex_unit&lt;/code&gt;, &lt;code&gt;mix&lt;/code&gt;, etc.) mentioned in the &lt;code&gt;:applications&lt;/code&gt; list inside the &lt;code&gt;application/0&lt;/code&gt; function in &lt;code&gt;mix.exs&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="33e7b7c1a73931c0c4a0ee9fd4693c49e27fdd02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:emfile&lt;/code&gt; - there are no more available file descriptors (for the operating system process that the Erlang emulator runs in)</source>
          <target state="translated">&lt;code&gt;:emfile&lt;/code&gt; - there are no more available file descriptors (for the operating system process that the Erlang emulator runs in)</target>
        </trans-unit>
        <trans-unit id="2468b2ea1beef09e91f0e2289620f2f182848867" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:emu_args&lt;/code&gt; - emulator arguments to embed in the escript file. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:emu_args&lt;/code&gt; - emulator arguments to embed in the escript file. Defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="882c0e3abdc286cf6040091a4c5625e33de15d11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enabled&lt;/code&gt; - boolean value that allows for switching the coloring on and off</source>
          <target state="translated">&lt;code&gt;:enabled&lt;/code&gt; - boolean value that allows for switching the coloring on and off</target>
        </trans-unit>
        <trans-unit id="06f63776b25960b20d2a19331b5ace5c14a73d1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enabled&lt;/code&gt; - boolean value that allows for switching the coloring on and off. Defaults to: &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt;&lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:enabled&lt;/code&gt; - boolean value that allows for switching the coloring on and off. Defaults to: &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt;&lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c10c5fef4163fa7a9c0fc8136bdf142a4d8d0b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enabled&lt;/code&gt; - shows ANSI formatting (defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt;&lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;:enabled&lt;/code&gt; - shows ANSI formatting (defaults to &lt;a href=&quot;https://hexdocs.pm/elixir/IO.ANSI.html#enabled?/0&quot;&gt;&lt;code&gt;IO.ANSI.enabled?/0&lt;/code&gt;&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="4c096724bd83650a760568a218b2effa1c51b7b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enametoolong&lt;/code&gt; - the external command given was too long</source>
          <target state="translated">&lt;code&gt;:enametoolong&lt;/code&gt; - the external command given was too long</target>
        </trans-unit>
        <trans-unit id="7baca3bb150d64e17a73c60bc395550d3f266a8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enfile&lt;/code&gt; - the file table is full (for the entire operating system)</source>
          <target state="translated">&lt;code&gt;:enfile&lt;/code&gt; - the file table is full (for the entire operating system)</target>
        </trans-unit>
        <trans-unit id="aba3e663e86d5b07dd58e8a7eae197d96df10879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:engine&lt;/code&gt; - the EEx engine to be used for compilation.</source>
          <target state="translated">&lt;code&gt;:engine&lt;/code&gt; - the EEx engine to be used for compilation.</target>
        </trans-unit>
        <trans-unit id="814f99ae2ca73876d415da60f83490728cbd4cb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enoent&lt;/code&gt; - a component of &lt;code&gt;path&lt;/code&gt; does not exist</source>
          <target state="translated">&lt;code&gt;:enoent&lt;/code&gt; - a component of &lt;code&gt;path&lt;/code&gt; does not exist</target>
        </trans-unit>
        <trans-unit id="380b5ad014b356d6d2296f68b2b9f805380ab7e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enoent&lt;/code&gt; - a component of the file name does not exist</source>
          <target state="translated">&lt;code&gt;:enoent&lt;/code&gt; - a component of the file name does not exist</target>
        </trans-unit>
        <trans-unit id="dba8835e197222e8dc613a153563411b9ba07a6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enoent&lt;/code&gt; - path does not exist</source>
          <target state="translated">&lt;code&gt;:enoent&lt;/code&gt; - path does not exist</target>
        </trans-unit>
        <trans-unit id="41da83e2602197774b3acbc9b9320f635cd73bd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enoent&lt;/code&gt; - the command does not point to an existing file</source>
          <target state="translated">&lt;code&gt;:enoent&lt;/code&gt; - the command does not point to an existing file</target>
        </trans-unit>
        <trans-unit id="12ce31f30da80d734ecbe64ef214b9bedbc005a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enoent&lt;/code&gt; - the file does not exist</source>
          <target state="translated">&lt;code&gt;:enoent&lt;/code&gt; - the file does not exist</target>
        </trans-unit>
        <trans-unit id="a9a67a7014247712cb81925ea23d1dccb7b257a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enomem&lt;/code&gt; - there is not enough memory for the contents of the file</source>
          <target state="translated">&lt;code&gt;:enomem&lt;/code&gt; - there is not enough memory for the contents of the file</target>
        </trans-unit>
        <trans-unit id="b2a8aa1de1f49aad3c3d07c7dbc41acf283778fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enomem&lt;/code&gt; - there was not enough memory to create the port</source>
          <target state="translated">&lt;code&gt;:enomem&lt;/code&gt; - there was not enough memory to create the port</target>
        </trans-unit>
        <trans-unit id="f0348bd594037ce9b59c812e6e8e729ddb0c4f2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enospc&lt;/code&gt; - there is no space left on the device</source>
          <target state="translated">&lt;code&gt;:enospc&lt;/code&gt; - there is no space left on the device</target>
        </trans-unit>
        <trans-unit id="c96e285bec5866819ee45da5a24da7d78f550b73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enotdir&lt;/code&gt; - a component of &lt;code&gt;path&lt;/code&gt; is not a directory</source>
          <target state="translated">&lt;code&gt;:enotdir&lt;/code&gt; - a component of &lt;code&gt;path&lt;/code&gt; is not a directory</target>
        </trans-unit>
        <trans-unit id="4cdecadca53bc900ea87bf95e3c10d579001af56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enotdir&lt;/code&gt; - a component of &lt;code&gt;path&lt;/code&gt; is not a directory; on some platforms, &lt;code&gt;:enoent&lt;/code&gt; is returned instead</source>
          <target state="translated">&lt;code&gt;:enotdir&lt;/code&gt; - a component of &lt;code&gt;path&lt;/code&gt; is not a directory; on some platforms, &lt;code&gt;:enoent&lt;/code&gt; is returned instead</target>
        </trans-unit>
        <trans-unit id="979df61dc45d3ba8ae2ba676f39b57a7937e62cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enotdir&lt;/code&gt; - a component of the file name is not a directory; on some platforms, &lt;code&gt;:enoent&lt;/code&gt; is returned instead</source>
          <target state="translated">&lt;code&gt;:enotdir&lt;/code&gt; - a component of the file name is not a directory; on some platforms, &lt;code&gt;:enoent&lt;/code&gt; is returned instead</target>
        </trans-unit>
        <trans-unit id="ab3e6dee7546260f7f2e0e3337ba3ad512628a6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:enotsup&lt;/code&gt; - symbolic links are not supported on the current platform</source>
          <target state="translated">&lt;code&gt;:enotsup&lt;/code&gt; - symbolic links are not supported on the current platform</target>
        </trans-unit>
        <trans-unit id="e2565f477328e171e896ee6eec30071d0c1a641c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - a list of the environment or free variables. For named functions, the returned list is always empty.</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - a list of the environment or free variables. For named functions, the returned list is always empty.</target>
        </trans-unit>
        <trans-unit id="ea18571ff6f9e62b8539e43d3ce352232521efa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - an enumerable of tuples containing environment key-value as binary</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - an enumerable of tuples containing environment key-value as binary</target>
        </trans-unit>
        <trans-unit id="c212698788c0c3cf999c4c9210fcb33e71ada52b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - the &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; used for the evaluator</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - the &lt;a href=&quot;https://hexdocs.pm/elixir/Macro.Env.html&quot;&gt;&lt;code&gt;Macro.Env&lt;/code&gt;&lt;/a&gt; used for the evaluator</target>
        </trans-unit>
        <trans-unit id="d2df36a10ba0acd1172601b2ab7430af4776ea46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:env&lt;/code&gt; - the environment (as an atom) to run the dependency on; defaults to &lt;code&gt;:prod&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:env&lt;/code&gt; - the environment (as an atom) to run the dependency on; defaults to &lt;code&gt;:prod&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="264f872f83cb34b029ee82794a94fa87ee30e3c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eof&lt;/code&gt; - end of file was encountered</source>
          <target state="translated">&lt;code&gt;:eof&lt;/code&gt; - end of file was encountered</target>
        </trans-unit>
        <trans-unit id="e27af3f5d0ec3d22a4638ec72e094b63583d8670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eperm&lt;/code&gt; - the file is a directory and user is not super-user</source>
          <target state="translated">&lt;code&gt;:eperm&lt;/code&gt; - the file is a directory and user is not super-user</target>
        </trans-unit>
        <trans-unit id="296de1e8a396af58fe47df8df1a26f280b2a6f2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eprof&lt;/code&gt; provides time information of each function call and can be useful when you want to discover the bottlenecks related to this.</source>
          <target state="translated">&lt;code&gt;:eprof&lt;/code&gt; provides time information of each function call and can be useful when you want to discover the bottlenecks related to this.</target>
        </trans-unit>
        <trans-unit id="85b0d166023eb8d76d48d62891f0b8840481da6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eq&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; are equal</source>
          <target state="translated">&lt;code&gt;:eq&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt; are equal</target>
        </trans-unit>
        <trans-unit id="42e3393a93a5d008b00386cc1f5d6d3cb903166c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:erlc_include_path&lt;/code&gt; - directory for adding include files. Defaults to &lt;code&gt;&quot;include&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:erlc_include_path&lt;/code&gt; - directory for adding include files. Defaults to &lt;code&gt;&quot;include&quot;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="76fbc236e0e56887b4a1173fbbd7833ac0a51999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:erlc_options&lt;/code&gt; - compilation options that apply to Erlang's compiler. Defaults to &lt;code&gt;[:debug_info]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:erlc_options&lt;/code&gt; - compilation options that apply to Erlang's compiler. Defaults to &lt;code&gt;[:debug_info]&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="3f62f0a8c8e564eedbaf5cfb6fe00eb53e17ba10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:erlc_paths&lt;/code&gt; - directories to find source files. Defaults to &lt;code&gt;[&quot;src&quot;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:erlc_paths&lt;/code&gt; - directories to find source files. Defaults to &lt;code&gt;[&quot;src&quot;]&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="7fd5376d781013643d2a9bb659eb6afe794f9504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error&lt;/code&gt; - color for error messages. Defaults to: &lt;code&gt;:red&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:error&lt;/code&gt; - color for error messages. Defaults to: &lt;code&gt;:red&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31a10a3b8dbd4c7aab40dfa8071f1356ef413681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:error&lt;/code&gt; - for errors</source>
          <target state="translated">&lt;code&gt;:error&lt;/code&gt; - for errors</target>
        </trans-unit>
        <trans-unit id="095353125fb7342ff1e76eeb308d2be2c1435d33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eval_error&lt;/code&gt; - ... error messages</source>
          <target state="translated">&lt;code&gt;:eval_error&lt;/code&gt; - ... error messages</target>
        </trans-unit>
        <trans-unit id="c48cddb9aad3016c44aebe1180d8c1a5b3c6847d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eval_info&lt;/code&gt; - ... various informational messages</source>
          <target state="translated">&lt;code&gt;:eval_info&lt;/code&gt; - ... various informational messages</target>
        </trans-unit>
        <trans-unit id="74dca15ff7a946fe32a0ef8bc6862bc832ee0f65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eval_interrupt&lt;/code&gt; - ... interrupt messages</source>
          <target state="translated">&lt;code&gt;:eval_interrupt&lt;/code&gt; - ... interrupt messages</target>
        </trans-unit>
        <trans-unit id="5b2132d42c0d9ac00454b2b79efdaf4ed739b2f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:eval_result&lt;/code&gt; - color for an expression's resulting value</source>
          <target state="translated">&lt;code&gt;:eval_result&lt;/code&gt; - color for an expression's resulting value</target>
        </trans-unit>
        <trans-unit id="2c30d8efab4a195ded9404d6420e728a84a8a5c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exclude&lt;/code&gt; - a list of modules and &lt;code&gt;{module, function, arity}&lt;/code&gt; tuples to ignore when checking cross references. For example: &lt;code&gt;[MissingModule, {MissingModule2, :missing_func, 2}]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:exclude&lt;/code&gt; - a list of modules and &lt;code&gt;{module, function, arity}&lt;/code&gt; tuples to ignore when checking cross references. For example: &lt;code&gt;[MissingModule, {MissingModule2, :missing_func, 2}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3aacf92c87e88a742e82f66c11c07a55063a2c0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exclude&lt;/code&gt; - specifies which tests are run by skipping tests that match the filter;</source>
          <target state="translated">&lt;code&gt;:exclude&lt;/code&gt; - specifies which tests are run by skipping tests that match the filter;</target>
        </trans-unit>
        <trans-unit id="a50a207f30c1900f8498e7905fc0b436bcb53c0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exclusive&lt;/code&gt; - the file, when opened for writing, is created if it does not exist. If the file exists, open will return &lt;code&gt;{:error, :eexist}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:exclusive&lt;/code&gt; - the file, when opened for writing, is created if it does not exist. If the file exists, open will return &lt;code&gt;{:error, :eexist}&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="43f1aa8016ab1d7111601bd69dcc885274399e5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:existing_atoms_only&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, raises an error when non-existing atoms are found by the tokenizer. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:existing_atoms_only&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, raises an error when non-existing atoms are found by the tokenizer. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="62419e96d71347357821fbab4e9cb8a3d94de1eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:exit&lt;/code&gt; (default) - the process that spawned the tasks exits.</source>
          <target state="translated">&lt;code&gt;:exit&lt;/code&gt; (default) - the process that spawned the tasks exits.</target>
        </trans-unit>
        <trans-unit id="229c31d3d046115e0277c4ff36de8c1bb035ad00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:extra_arguments&lt;/code&gt; - arguments that are prepended to the arguments specified in the child spec given to &lt;a href=&quot;#start_child/2&quot;&gt;&lt;code&gt;start_child/2&lt;/code&gt;&lt;/a&gt;. Defaults to an empty list.</source>
          <target state="translated">&lt;code&gt;:extra_arguments&lt;/code&gt; - arguments that are prepended to the arguments specified in the child spec given to &lt;a href=&quot;#start_child/2&quot;&gt;&lt;code&gt;start_child/2&lt;/code&gt;&lt;/a&gt;. Defaults to an empty list.</target>
        </trans-unit>
        <trans-unit id="3caf6d681898f3fe21b3b0cf5131dd8537107f91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:failures_manifest_file&lt;/code&gt; - specifies a path to the file used to store failures between runs;</source>
          <target state="translated">&lt;code&gt;:failures_manifest_file&lt;/code&gt; - specifies a path to the file used to store failures between runs;</target>
        </trans-unit>
        <trans-unit id="b18ee74d75fa7b22f6e73ab616e6edbc0fad1232" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - a binary representing the file where the function is called</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - a binary representing the file where the function is called</target>
        </trans-unit>
        <trans-unit id="83628dfc3abcd80d61383bcec6b39bcaffa88388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the current file</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - the current file</target>
        </trans-unit>
        <trans-unit id="d0dd18cb8d2841e659e12fd4302ec0cc14b0a9e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the file on which the test was defined</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - the file on which the test was defined</target>
        </trans-unit>
        <trans-unit id="1dda279c58d3f4e3d298d509ea820785a89eb59b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the file to be considered in the evaluation</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - the file to be considered in the evaluation</target>
        </trans-unit>
        <trans-unit id="45a2ed8e87c341b33312269f359bd716ab23a0dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the file to be used in the template. Defaults to the given file the template is read from or to &quot;nofile&quot; when compiling from a string.</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - the file to be used in the template. Defaults to the given file the template is read from or to &quot;nofile&quot; when compiling from a string.</target>
        </trans-unit>
        <trans-unit id="b26d07d235ad36a11f2c9180f1b8b89ff982b674" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the file which contains the string, used for error reporting</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - the file which contains the string, used for error reporting</target>
        </trans-unit>
        <trans-unit id="6dc611c640f269caa3a82ea22a15287fbceecf4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:file&lt;/code&gt; - the filename to be reported in case of parsing errors. Defaults to &quot;nofile&quot;.</source>
          <target state="translated">&lt;code&gt;:file&lt;/code&gt; - the filename to be reported in case of parsing errors. Defaults to &quot;nofile&quot;.</target>
        </trans-unit>
        <trans-unit id="d0942c719b872d1e450e24ed84a86dd40a82be46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:first&lt;/code&gt; - only the first captured subpattern, which is always the complete matching part of the string; all explicitly captured subpatterns are discarded</source>
          <target state="translated">&lt;code&gt;:first&lt;/code&gt; - only the first captured subpattern, which is always the complete matching part of the string; all explicitly captured subpatterns are discarded</target>
        </trans-unit>
        <trans-unit id="0c322fe960fab972ffb0306d0c1e3f93c7a45f1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:first&lt;/code&gt; - the initial date on the range</source>
          <target state="translated">&lt;code&gt;:first&lt;/code&gt; - the initial date on the range</target>
        </trans-unit>
        <trans-unit id="14be838ed8119c6a73fcc8eb15b33319b54eb430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:float&lt;/code&gt; - parses the value as a float</source>
          <target state="translated">&lt;code&gt;:float&lt;/code&gt; - parses the value as a float</target>
        </trans-unit>
        <trans-unit id="3475cb10aa8d5ec710e0de9630be3ccc49770d29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:flush&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, guarantees all messages currently sent to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; are processed before the backend is added</source>
          <target state="translated">&lt;code&gt;:flush&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, guarantees all messages currently sent to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; are processed before the backend is added</target>
        </trans-unit>
        <trans-unit id="1fdcf21ae48a19d0dae3448e91103e49902e7e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:flush&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, guarantees all messages currently sent to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; are processed before the backend is removed</source>
          <target state="translated">&lt;code&gt;:flush&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, guarantees all messages currently sent to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; are processed before the backend is removed</target>
        </trans-unit>
        <trans-unit id="228b588ba959d003fc6777e1934745da21242700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, forces the application to recompile</source>
          <target state="translated">&lt;code&gt;:force&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, forces the application to recompile</target>
        </trans-unit>
        <trans-unit id="c60922aca7a67e715351593e65c1ec5bec306d07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:force_do_end_blocks&lt;/code&gt; (since v1.9.0) - when &lt;code&gt;true&lt;/code&gt;, converts all inline usages of &lt;code&gt;do: ...&lt;/code&gt;, &lt;code&gt;else: ...&lt;/code&gt; and friends into &lt;code&gt;do/end&lt;/code&gt; blocks. Defaults to &lt;code&gt;false&lt;/code&gt;. Notice this option is convergent: once you set it to &lt;code&gt;true&lt;/code&gt;, all keywords will be converted. If you set it to &lt;code&gt;false&lt;/code&gt; later on, &lt;code&gt;do/end&lt;/code&gt; blocks won't be converted back to keywords.</source>
          <target state="translated">&lt;code&gt;:force_do_end_blocks&lt;/code&gt; (since v1.9.0) - when &lt;code&gt;true&lt;/code&gt;, converts all inline usages of &lt;code&gt;do: ...&lt;/code&gt;, &lt;code&gt;else: ...&lt;/code&gt; and friends into &lt;code&gt;do/end&lt;/code&gt; blocks. Defaults to &lt;code&gt;false&lt;/code&gt;. Notice this option is convergent: once you set it to &lt;code&gt;true&lt;/code&gt;, all keywords will be converted. If you set it to &lt;code&gt;false&lt;/code&gt; later on, &lt;code&gt;do/end&lt;/code&gt; blocks won't be converted back to keywords.</target>
        </trans-unit>
        <trans-unit id="ade4fd03ee5517dde1fbb47e40df60fa69b41ef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:format&lt;/code&gt; - the format message used to print logs. Defaults to: &lt;code&gt;&quot;\n$time $metadata[$level] $levelpad$message\n&quot;&lt;/code&gt;. It may also be a &lt;code&gt;{module, function}&lt;/code&gt; tuple that is invoked with the log level, the message, the current timestamp and the metadata.</source>
          <target state="translated">&lt;code&gt;:format&lt;/code&gt; - the format message used to print logs. Defaults to: &lt;code&gt;&quot;\n$time $metadata[$level] $levelpad$message\n&quot;&lt;/code&gt;. It may also be a &lt;code&gt;{module, function}&lt;/code&gt; tuple that is invoked with the log level, the message, the current timestamp and the metadata.</target>
        </trans-unit>
        <trans-unit id="e03a54c5f8b4324d96f5c6b90954ebbb1a8b9b0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:format&lt;/code&gt; - the logging format for that backend</source>
          <target state="translated">&lt;code&gt;:format&lt;/code&gt; - the logging format for that backend</target>
        </trans-unit>
        <trans-unit id="d84013ec019cc9e2e56bab38728273e94b8c9ecf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:formatters&lt;/code&gt; - the formatters that will print results, defaults to &lt;code&gt;[ExUnit.CLIFormatter]&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:formatters&lt;/code&gt; - the formatters that will print results, defaults to &lt;code&gt;[ExUnit.CLIFormatter]&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="9f21f13df07bdf313c4311849a2c4c7d71db3176" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:from&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definition to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include&lt;/code&gt; attribute used in Erlang modules.</source>
          <target state="translated">&lt;code&gt;:from&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definition to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include&lt;/code&gt; attribute used in Erlang modules.</target>
        </trans-unit>
        <trans-unit id="33d20068b8df920861904c1e148ff56e88ba75e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:from&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definitions to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include&lt;/code&gt; attribute used in Erlang modules.</source>
          <target state="translated">&lt;code&gt;:from&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definitions to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include&lt;/code&gt; attribute used in Erlang modules.</target>
        </trans-unit>
        <trans-unit id="1f9317e56bb2aad56e242ff43ddc563cc63a8a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:from_lib&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definition to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include_lib&lt;/code&gt; attribute used in Erlang modules.</source>
          <target state="translated">&lt;code&gt;:from_lib&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definition to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include_lib&lt;/code&gt; attribute used in Erlang modules.</target>
        </trans-unit>
        <trans-unit id="d49003a32cd3f3c1ef902e3bb6624c660fbdd61f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:from_lib&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definitions to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include_lib&lt;/code&gt; attribute used in Erlang modules.</source>
          <target state="translated">&lt;code&gt;:from_lib&lt;/code&gt; - (binary representing a path to a file) path to the Erlang file that contains the record definitions to extract; with this option, this function uses the same path lookup used by the &lt;code&gt;-include_lib&lt;/code&gt; attribute used in Erlang modules.</target>
        </trans-unit>
        <trans-unit id="ea5551a489aceb85424c07198983288e56fbcb33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:function&lt;/code&gt; - the current function</source>
          <target state="translated">&lt;code&gt;:function&lt;/code&gt; - the current function</target>
        </trans-unit>
        <trans-unit id="e9b6a139e4df7c770149c0dfecde94fd08d77125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:function&lt;/code&gt; - the function to invoke on the child to start it</source>
          <target state="translated">&lt;code&gt;:function&lt;/code&gt; - the function to invoke on the child to start it</target>
        </trans-unit>
        <trans-unit id="578ef5825dd77b7c34a43996dbea0fcbbb9ec47d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:functions&lt;/code&gt; - a keyword list of public functions and their arities</source>
          <target state="translated">&lt;code&gt;:functions&lt;/code&gt; - a keyword list of public functions and their arities</target>
        </trans-unit>
        <trans-unit id="695e339aa1be99725be5ebefbbb7b3d3ce31cf9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:functions&lt;/code&gt; - a list of tuples where the first element is a module and the second a list of imported function names and arity; the list of function names and arity must be sorted</source>
          <target state="translated">&lt;code&gt;:functions&lt;/code&gt; - a list of tuples where the first element is a module and the second a list of imported function names and arity; the list of function names and arity must be sorted</target>
        </trans-unit>
        <trans-unit id="54f87ff51516faee1c969434f3cd87556e10c219" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:functions&lt;/code&gt; - returns keyword list of protocol functions and their arities</source>
          <target state="translated">&lt;code&gt;:functions&lt;/code&gt; - returns keyword list of protocol functions and their arities</target>
        </trans-unit>
        <trans-unit id="adcd93b7e5a3a91b160c873261ed426da6ae6e76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gen_server&lt;/code&gt; module documentation</source>
          <target state="translated">&lt;code&gt;:gen_server&lt;/code&gt; module documentation</target>
        </trans-unit>
        <trans-unit id="908d027ada7a560cb6fda994b55682e5a4c4df2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:generated&lt;/code&gt; - marks the given chunk as generated so it does not emit warnings. Currently it only works on special forms (for example, you can annotate a &lt;code&gt;case&lt;/code&gt; but not an &lt;code&gt;if&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;:generated&lt;/code&gt; - marks the given chunk as generated so it does not emit warnings. Currently it only works on special forms (for example, you can annotate a &lt;code&gt;case&lt;/code&gt; but not an &lt;code&gt;if&lt;/code&gt;).</target>
        </trans-unit>
        <trans-unit id="d5e52154a6efa12057a7eb0fcb84cf6b60caafd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:git&lt;/code&gt; - the Git repository URI</source>
          <target state="translated">&lt;code&gt;:git&lt;/code&gt; - the Git repository URI</target>
        </trans-unit>
        <trans-unit id="aa05859c2357283ba9d40ac1c5dbb182a99b3630" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:github&lt;/code&gt; - a shortcut for specifying Git repos from GitHub, uses &lt;code&gt;:git&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:github&lt;/code&gt; - a shortcut for specifying Git repos from GitHub, uses &lt;code&gt;:git&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70bfc766be50b86a1c2ec8aba9ecab3a461e466f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:global&lt;/code&gt; - (boolean) if &lt;code&gt;true&lt;/code&gt;, all occurrences of &lt;code&gt;pattern&lt;/code&gt; are replaced with &lt;code&gt;replacement&lt;/code&gt;, otherwise only the first occurrence is replaced. Defaults to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:global&lt;/code&gt; - (boolean) if &lt;code&gt;true&lt;/code&gt;, all occurrences of &lt;code&gt;pattern&lt;/code&gt; are replaced with &lt;code&gt;replacement&lt;/code&gt;, otherwise only the first occurrence is replaced. Defaults to &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="097c07e7f6a5f99133f7bd86225e34ba3db42f30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:global&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, replaces only the first occurrence (defaults to &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;:global&lt;/code&gt; - when &lt;code&gt;false&lt;/code&gt;, replaces only the first occurrence (defaults to &lt;code&gt;true&lt;/code&gt;)</target>
        </trans-unit>
        <trans-unit id="c9131108aa90aaaa873d754ba826d5ebab6b0f22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:gt&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is greater than &lt;code&gt;right&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:gt&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is greater than &lt;code&gt;right&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ecf8939a635a10f38ca06d893312c92484c3f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:halt&lt;/code&gt; - the enumeration should halt immediately</source>
          <target state="translated">&lt;code&gt;:halt&lt;/code&gt; - the enumeration should halt immediately</target>
        </trans-unit>
        <trans-unit id="4ce6f05ffbb38e1c066d27620fc8cea9f0d957f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:handle_otp_reports&lt;/code&gt; - redirects OTP reports to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; so they are formatted in Elixir terms. This effectively disables Erlang standard logger. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:handle_otp_reports&lt;/code&gt; - redirects OTP reports to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; so they are formatted in Elixir terms. This effectively disables Erlang standard logger. Defaults to &lt;code&gt;true&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="f7ac6d846aeb20f43f7c6a37e2d65861ac53133e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:handle_sasl_reports&lt;/code&gt; - redirects supervisor, crash and progress reports to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; so they are formatted in Elixir terms. Your application must guarantee &lt;code&gt;:sasl&lt;/code&gt; is started before &lt;code&gt;:logger&lt;/code&gt;. This means you may see some initial reports written in Erlang syntax until the Logger application kicks in. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:handle_sasl_reports&lt;/code&gt; - redirects supervisor, crash and progress reports to &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;Logger&lt;/code&gt;&lt;/a&gt; so they are formatted in Elixir terms. Your application must guarantee &lt;code&gt;:sasl&lt;/code&gt; is started before &lt;code&gt;:logger&lt;/code&gt;. This means you may see some initial reports written in Erlang syntax until the Logger application kicks in. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="fa5396ef39aafd9ba1ea29f7f97ecacb20e94fc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:hibernate_after&lt;/code&gt; - if present, the GenServer process awaits any message for the given number of milliseconds and if no message is received, the process goes into hibernation automatically (by calling &lt;a href=&quot;http://www.erlang.org/doc/man/proc_lib.html#hibernate-3&quot;&gt;&lt;code&gt;:proc_lib.hibernate/3&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;:hibernate_after&lt;/code&gt; - if present, the GenServer process awaits any message for the given number of milliseconds and if no message is received, the process goes into hibernation automatically (by calling &lt;a href=&quot;http://www.erlang.org/doc/man/proc_lib.html#hibernate-3&quot;&gt;&lt;code&gt;:proc_lib.hibernate/3&lt;/code&gt;&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="4a93d555b0c183bd3e89ff6543fe00eceb84bf8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - a name used to identify the child specification internally by the supervisor; defaults to the given module name for the child worker/supervisor</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; - a name used to identify the child specification internally by the supervisor; defaults to the given module name for the child worker/supervisor</target>
        </trans-unit>
        <trans-unit id="5d2bd5a3289d5f6402dff634a2e01ba7da04a087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - any term used to identify the child specification internally by the supervisor; defaults to the given module. In the case of conflicting &lt;code&gt;:id&lt;/code&gt; values, the supervisor will refuse to initialize and require explicit IDs. This key is required.</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; - any term used to identify the child specification internally by the supervisor; defaults to the given module. In the case of conflicting &lt;code&gt;:id&lt;/code&gt; values, the supervisor will refuse to initialize and require explicit IDs. This key is required.</target>
        </trans-unit>
        <trans-unit id="9aa32f91c5c26e445e55e9f0a92bec59b0bb5531" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:id&lt;/code&gt; - the child specification identifier, defaults to the current module</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; - the child specification identifier, defaults to the current module</target>
        </trans-unit>
        <trans-unit id="6cf5bda6391a8cb3a87b388b9b9dc7c603361838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ignore_module_conflict&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, override modules that were already defined without raising errors. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:ignore_module_conflict&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, override modules that were already defined without raising errors. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="8f3adeb15d5af28ec79c623e1e9fe8447ae6c460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:impls&lt;/code&gt; - if consolidated, returns &lt;code&gt;{:consolidated, modules}&lt;/code&gt; with the list of modules implementing the protocol, otherwise &lt;code&gt;:not_consolidated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:impls&lt;/code&gt; - if consolidated, returns &lt;code&gt;{:consolidated, modules}&lt;/code&gt; with the list of modules implementing the protocol, otherwise &lt;code&gt;:not_consolidated&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a09ae807547a81a4c9084cbbf34a410fa00e607" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:in_umbrella&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, sets a path dependency pointing to &quot;../#{app}&quot;, sharing the same environment as the current application</source>
          <target state="translated">&lt;code&gt;:in_umbrella&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, sets a path dependency pointing to &quot;../#{app}&quot;, sharing the same environment as the current application</target>
        </trans-unit>
        <trans-unit id="40146d329bda497ffaba403a459f39a54b2c565a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:include&lt;/code&gt; - specifies which tests are run by skipping tests that do not match the filter. Keep in mind that all tests are included by default, so unless they are excluded first, the &lt;code&gt;:include&lt;/code&gt; option has no effect. To only run the tests that match the &lt;code&gt;:include&lt;/code&gt; filter, exclude the &lt;code&gt;:test&lt;/code&gt; tag first (see the documentation for &lt;a href=&quot;exunit.case&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; for more information on tags);</source>
          <target state="translated">&lt;code&gt;:include&lt;/code&gt; - specifies which tests are run by skipping tests that do not match the filter. Keep in mind that all tests are included by default, so unless they are excluded first, the &lt;code&gt;:include&lt;/code&gt; option has no effect. To only run the tests that match the &lt;code&gt;:include&lt;/code&gt; filter, exclude the &lt;code&gt;:test&lt;/code&gt; tag first (see the documentation for &lt;a href=&quot;exunit.case&quot;&gt;&lt;code&gt;ExUnit.Case&lt;/code&gt;&lt;/a&gt; for more information on tags);</target>
        </trans-unit>
        <trans-unit id="a5c5c52acb1644d22f65a7aa211c2a5ea34cc440" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:include_captures&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, includes in the result the matches of the regular expression. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:include_captures&lt;/code&gt; - when &lt;code&gt;true&lt;/code&gt;, includes in the result the matches of the regular expression. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="1d219f634d918b08b542c36093a04ed56c728d7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:includes&lt;/code&gt; - (a list of directories as binaries) if the record being extracted depends on relative includes, this option allows developers to specify the directory where those relative includes exist.</source>
          <target state="translated">&lt;code&gt;:includes&lt;/code&gt; - (a list of directories as binaries) if the record being extracted depends on relative includes, this option allows developers to specify the directory where those relative includes exist.</target>
        </trans-unit>
        <trans-unit id="8bc58eb044e96d2ac4139b46539604afbedd1b1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:index&lt;/code&gt; - (integer) an index into the module function table.</source>
          <target state="translated">&lt;code&gt;:index&lt;/code&gt; - (integer) an index into the module function table.</target>
        </trans-unit>
        <trans-unit id="e190ebd964c6f74899c9d9ea4ffd4740fba1a7dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:infinity&lt;/code&gt; - if the child process is a supervisor, this is a mechanism to give the subtree enough time to shut down; it can also be used with workers with care</source>
          <target state="translated">&lt;code&gt;:infinity&lt;/code&gt; - if the child process is a supervisor, this is a mechanism to give the subtree enough time to shut down; it can also be used with workers with care</target>
        </trans-unit>
        <trans-unit id="47e7c339f719f1ba87b731d97bfd8f2dcdfe4c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:infinity&lt;/code&gt; - the process should wait indefinitely for a matching message, this is the same as not using the after clause</source>
          <target state="translated">&lt;code&gt;:infinity&lt;/code&gt; - the process should wait indefinitely for a matching message, this is the same as not using the after clause</target>
        </trans-unit>
        <trans-unit id="8df0395a89aeadf01011c4db9e8cf8cc24826aa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:infinity&lt;/code&gt; - works as an integer except the supervisor will wait indefinitely for the child to terminate. If the child process is a supervisor, the recommended value is &lt;code&gt;:infinity&lt;/code&gt; to give the supervisor and its children enough time to shut down. This option can be used with regular workers but doing so is discouraged and requires extreme care. If not used carefully, the child process will never terminate, preventing your application from terminating as well.</source>
          <target state="translated">&lt;code&gt;:infinity&lt;/code&gt; - works as an integer except the supervisor will wait indefinitely for the child to terminate. If the child process is a supervisor, the recommended value is &lt;code&gt;:infinity&lt;/code&gt; to give the supervisor and its children enough time to shut down. This option can be used with regular workers but doing so is discouraged and requires extreme care. If not used carefully, the child process will never terminate, preventing your application from terminating as well.</target>
        </trans-unit>
        <trans-unit id="a8dbf7115e02240f2b176ba4da6652e8aa75a9b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:infinity&lt;/code&gt; | &lt;code&gt;non_neg_integer()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:infinity&lt;/code&gt; | &lt;code&gt;non_neg_integer()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="135a9903ff3ba53daebd5f5053e4a9ac895c2b35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:info&lt;/code&gt; - (boolean) whether to return information about the timer being cancelled. When the &lt;code&gt;:async&lt;/code&gt; option is &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then either an integer or &lt;code&gt;false&lt;/code&gt; (like described above) is returned. If &lt;code&gt;:async&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;:ok&lt;/code&gt; is returned. If &lt;code&gt;:async&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, a message in the form &lt;code&gt;{:cancel_timer, timer_ref, result}&lt;/code&gt; (where &lt;code&gt;result&lt;/code&gt; is an integer or &lt;code&gt;false&lt;/code&gt; like described above) is sent to the caller of this function when the cancellation has been performed. If &lt;code&gt;:async&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, no message is sent. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:info&lt;/code&gt; - (boolean) whether to return information about the timer being cancelled. When the &lt;code&gt;:async&lt;/code&gt; option is &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then either an integer or &lt;code&gt;false&lt;/code&gt; (like described above) is returned. If &lt;code&gt;:async&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;:ok&lt;/code&gt; is returned. If &lt;code&gt;:async&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, a message in the form &lt;code&gt;{:cancel_timer, timer_ref, result}&lt;/code&gt; (where &lt;code&gt;result&lt;/code&gt; is an integer or &lt;code&gt;false&lt;/code&gt; like described above) is sent to the caller of this function when the cancellation has been performed. If &lt;code&gt;:async&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;:info&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, no message is sent. Defaults to &lt;code&gt;true&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="8b4933296bfab87bd658b44b43cd6498e0a849be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:info&lt;/code&gt; - color for info messages. Defaults to: &lt;code&gt;:normal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:info&lt;/code&gt; - color for info messages. Defaults to: &lt;code&gt;:normal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db645ea766baec875bdf8d97dda08c9614892961" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:info&lt;/code&gt; - for information of any kind</source>
          <target state="translated">&lt;code&gt;:info&lt;/code&gt; - for information of any kind</target>
        </trans-unit>
        <trans-unit id="677f9abb255ccba412c00a34754e5e872e282b40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:initial_call&lt;/code&gt; - the initial call that started the process</source>
          <target state="translated">&lt;code&gt;:initial_call&lt;/code&gt; - the initial call that started the process</target>
        </trans-unit>
        <trans-unit id="9cdb50280c19d880b5cc4cf058f9492f0538d03e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:inspect_fun&lt;/code&gt; (since v1.9.0) - a function to build algebra documents, defaults to &lt;a href=&quot;inspect#inspect/2&quot;&gt;&lt;code&gt;Inspect.inspect/2&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;:inspect_fun&lt;/code&gt; (since v1.9.0) - a function to build algebra documents, defaults to &lt;a href=&quot;inspect#inspect/2&quot;&gt;&lt;code&gt;Inspect.inspect/2&lt;/code&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="478c72c9e8ca03f1a7e7055f56f5b7cba72029b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:integer&lt;/code&gt; - parses the value as an integer</source>
          <target state="translated">&lt;code&gt;:integer&lt;/code&gt; - parses the value as an integer</target>
        </trans-unit>
        <trans-unit id="fdbc470f79fb94903328c6f39edfa25e4814ce3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:into&lt;/code&gt; - injects the result into the given collectable, defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:into&lt;/code&gt; - injects the result into the given collectable, defaults to &lt;code&gt;&quot;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="70064458c46048674fd3049e7898d1e0f4d3430a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:keep&lt;/code&gt; - keeps duplicated elements instead of overriding them; works with all types except &lt;code&gt;:count&lt;/code&gt;. Specifying &lt;code&gt;switch_name: :keep&lt;/code&gt; assumes the type of &lt;code&gt;:switch_name&lt;/code&gt; will be &lt;code&gt;:string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:keep&lt;/code&gt; - keeps duplicated elements instead of overriding them; works with all types except &lt;code&gt;:count&lt;/code&gt;. Specifying &lt;code&gt;switch_name: :keep&lt;/code&gt; assumes the type of &lt;code&gt;:switch_name&lt;/code&gt; will be &lt;code&gt;:string&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="39d97c4ff4023dee72a8c0e860d2fb1c6d67bc66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:keys&lt;/code&gt; - choose if keys are &lt;code&gt;:unique&lt;/code&gt; or &lt;code&gt;:duplicate&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:keys&lt;/code&gt; - choose if keys are &lt;code&gt;:unique&lt;/code&gt; or &lt;code&gt;:duplicate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd71fc337316f4ab6feab2c88cf3c5e5a766588b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:kill_task&lt;/code&gt; - the task that timed out is killed. The value emitted for that task is &lt;code&gt;{:exit, :timeout}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:kill_task&lt;/code&gt; - the task that timed out is killed. The value emitted for that task is &lt;code&gt;{:exit, :timeout}&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="24a084d67c6640e0923595e52dbfd91d8bb01a31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:last&lt;/code&gt; - the last date on the range</source>
          <target state="translated">&lt;code&gt;:last&lt;/code&gt; - the last date on the range</target>
        </trans-unit>
        <trans-unit id="1225144aa27034b0d81c58de0f7464a08642bee8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:level&lt;/code&gt; - the level to be logged by this backend. Note that messages are filtered by the general &lt;code&gt;:level&lt;/code&gt; configuration for the &lt;code&gt;:logger&lt;/code&gt; application first.</source>
          <target state="translated">&lt;code&gt;:level&lt;/code&gt; - the level to be logged by this backend. Note that messages are filtered by the general &lt;code&gt;:level&lt;/code&gt; configuration for the &lt;code&gt;:logger&lt;/code&gt; application first.</target>
        </trans-unit>
        <trans-unit id="e82ef36071e632e2a67467c8c1bc95888dbb2911" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:level&lt;/code&gt; - the logging level for that backend</source>
          <target state="translated">&lt;code&gt;:level&lt;/code&gt; - the logging level for that backend</target>
        </trans-unit>
        <trans-unit id="e57043745e815564b62acd811fcada5bed6106a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:level&lt;/code&gt; - the logging level. Attempting to log any message with severity less than the configured level will simply cause the message to be ignored. Keep in mind that each backend may have its specific level, too.</source>
          <target state="translated">&lt;code&gt;:level&lt;/code&gt; - the logging level. Attempting to log any message with severity less than the configured level will simply cause the message to be ignored. Keep in mind that each backend may have its specific level, too.</target>
        </trans-unit>
        <trans-unit id="9bf3d1b72789db394754467f50936fef78e2e7b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:limit&lt;/code&gt; - filters out any results with a call count less than the limit</source>
          <target state="translated">&lt;code&gt;:limit&lt;/code&gt; - filters out any results with a call count less than the limit</target>
        </trans-unit>
        <trans-unit id="96babec87fbfa1c0a7cbedd90ec6c4d8521799f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:limit&lt;/code&gt; - limits the number of items that are inspected for tuples, bitstrings, maps, lists and any other collection of items. It does not apply to printable strings nor printable charlists and defaults to 50. If you don't want to limit the number of items to a particular number, use &lt;code&gt;:infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:limit&lt;/code&gt; - limits the number of items that are inspected for tuples, bitstrings, maps, lists and any other collection of items. It does not apply to printable strings nor printable charlists and defaults to 50. If you don't want to limit the number of items to a particular number, use &lt;code&gt;:infinity&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="4cad28eb5f13df59acaa32093a5192458d9e4265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - an integer representing the line where the function is called</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - an integer representing the line where the function is called</target>
        </trans-unit>
        <trans-unit id="116b911288ea64fa4603f7a07c910262702ea937" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - sets the quoted expressions to have the given line.</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - sets the quoted expressions to have the given line.</target>
        </trans-unit>
        <trans-unit id="a6ebd1e3836bd7a3b8c0f87fe479605c7530172f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the current line</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - the current line</target>
        </trans-unit>
        <trans-unit id="94adff86d5306cecbe77a7b2a6606dcb16528005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the line on which the script starts</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - the line on which the script starts</target>
        </trans-unit>
        <trans-unit id="25084f08da62ccd2201c3fa92937e3b739b7ebb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the line on which the test was defined</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - the line on which the test was defined</target>
        </trans-unit>
        <trans-unit id="1b989307db0050c4efcd1ee3d0a43e008ff59b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the line the string starts, used for error reporting</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - the line the string starts, used for error reporting</target>
        </trans-unit>
        <trans-unit id="11a2b66d58cf07b5048d9e8d53162ec8ead79bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the line to be used as the template start. Defaults to 1.</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - the line to be used as the template start. Defaults to 1.</target>
        </trans-unit>
        <trans-unit id="e5c61f6182fbc8078913b865f784e03908578b8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line&lt;/code&gt; - the starting line of the string being parsed. Defaults to 1.</source>
          <target state="translated">&lt;code&gt;:line&lt;/code&gt; - the starting line of the string being parsed. Defaults to 1.</target>
        </trans-unit>
        <trans-unit id="77bb2d3b2eeb04279005e57fde106fd5ff0f8325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:line_length&lt;/code&gt; - the line length to aim for when formatting the document. Defaults to 98. Note this value is used as reference but it is not enforced by the formatter as sometimes user intervention is required. See &quot;Running the formatter&quot; section</source>
          <target state="translated">&lt;code&gt;:line_length&lt;/code&gt; - the line length to aim for when formatting the document. Defaults to 98. Note this value is used as reference but it is not enforced by the formatter as sometimes user intervention is required. See &quot;Running the formatter&quot; section</target>
        </trans-unit>
        <trans-unit id="cb1b1a65b908cbf7ce8cd7fdbed7020e111e6090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:listeners&lt;/code&gt; - a list of named processes which are notified of &lt;code&gt;:register&lt;/code&gt; and &lt;code&gt;:unregister&lt;/code&gt; events. The registered process must be monitored by the listener if the listener wants to be notified if the registered process crashes.</source>
          <target state="translated">&lt;code&gt;:listeners&lt;/code&gt; - a list of named processes which are notified of &lt;code&gt;:register&lt;/code&gt; and &lt;code&gt;:unregister&lt;/code&gt; events. The registered process must be monitored by the listener if the listener wants to be notified if the registered process crashes.</target>
        </trans-unit>
        <trans-unit id="8e4270b3e26050f47c1f14b584eb23a882fd38e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:local&lt;/code&gt; - returns a &lt;code&gt;{date, time}&lt;/code&gt; tuple using the machine time</source>
          <target state="translated">&lt;code&gt;:local&lt;/code&gt; - returns a &lt;code&gt;{date, time}&lt;/code&gt; tuple using the machine time</target>
        </trans-unit>
        <trans-unit id="66efb4896e446c1f34523926e772a137032a5ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:local&lt;/code&gt; - returns a &lt;code&gt;{date, time}&lt;/code&gt; tuple using the same time zone as the machine</source>
          <target state="translated">&lt;code&gt;:local&lt;/code&gt; - returns a &lt;code&gt;{date, time}&lt;/code&gt; tuple using the same time zone as the machine</target>
        </trans-unit>
        <trans-unit id="bc19a16ae5fa4808e1f40602f2d27dcd7c7e005c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:locals_without_parens&lt;/code&gt; - a keyword list of name and arity pairs that should be kept without parens whenever possible. The arity may be the atom &lt;code&gt;:*&lt;/code&gt;, which implies all arities of that name. The formatter already includes a list of functions and this option augments this list.</source>
          <target state="translated">&lt;code&gt;:locals_without_parens&lt;/code&gt; - a keyword list of name and arity pairs that should be kept without parens whenever possible. The arity may be the atom &lt;code&gt;:*&lt;/code&gt;, which implies all arities of that name. The formatter already includes a list of functions and this option augments this list.</target>
        </trans-unit>
        <trans-unit id="cfcd07593239051faf246484efaebb97ba82d930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:location&lt;/code&gt; - when set to &lt;code&gt;:keep&lt;/code&gt;, keeps the current line and file from quote. Read the Stacktrace information section below for more information.</source>
          <target state="translated">&lt;code&gt;:location&lt;/code&gt; - when set to &lt;code&gt;:keep&lt;/code&gt;, keeps the current line and file from quote. Read the Stacktrace information section below for more information.</target>
        </trans-unit>
        <trans-unit id="5137daa216d64ac53bf38b99f22806a1235171de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:lockfile&lt;/code&gt; - the name of the lockfile used by the &lt;code&gt;mix deps.*&lt;/code&gt; family of tasks. Defaults to &lt;code&gt;&quot;mix.lock&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:lockfile&lt;/code&gt; - the name of the lockfile used by the &lt;code&gt;mix deps.*&lt;/code&gt; family of tasks. Defaults to &lt;code&gt;&quot;mix.lock&quot;&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="d7ba0e954b25d27630807b5856f0184e746d75a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:logs&lt;/code&gt; - the captured logs</source>
          <target state="translated">&lt;code&gt;:logs&lt;/code&gt; - the captured logs</target>
        </trans-unit>
        <trans-unit id="74e254f6115f1df6d06f6416aceed432de1bf551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:long_compilation_threshold&lt;/code&gt; - the timeout (in seconds) after the &lt;code&gt;:each_long_compilation&lt;/code&gt; callback is invoked; defaults to &lt;code&gt;15&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:long_compilation_threshold&lt;/code&gt; - the timeout (in seconds) after the &lt;code&gt;:each_long_compilation&lt;/code&gt; callback is invoked; defaults to &lt;code&gt;15&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cd67b3fb5df5bb1987fc9dbcb07baac6819559b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:lower&lt;/code&gt; - only allows lower case characters</source>
          <target state="translated">&lt;code&gt;:lower&lt;/code&gt; - only allows lower case characters</target>
        </trans-unit>
        <trans-unit id="7d6e8730dd800cefae2baf72ae743c0716279a2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:lower&lt;/code&gt; - uses lower case characters</source>
          <target state="translated">&lt;code&gt;:lower&lt;/code&gt; - uses lower case characters</target>
        </trans-unit>
        <trans-unit id="f9d48af9aa8969ec86a7796ad15c7f82335435a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ls_device&lt;/code&gt; - ... device entries (ls helper)</source>
          <target state="translated">&lt;code&gt;:ls_device&lt;/code&gt; - ... device entries (ls helper)</target>
        </trans-unit>
        <trans-unit id="76a0375cdb3b60feccfdda63d1a539b46cb68d2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:ls_directory&lt;/code&gt; - ... for directory entries (ls helper)</source>
          <target state="translated">&lt;code&gt;:ls_directory&lt;/code&gt; - ... for directory entries (ls helper)</target>
        </trans-unit>
        <trans-unit id="506569494edc9248d6a2f2302b4439f2e96276ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:lt&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is less than &lt;code&gt;right&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;:lt&lt;/code&gt; if &lt;code&gt;left&lt;/code&gt; is less than &lt;code&gt;right&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea8b474d5276b62fa7ce3871c317e1304b154515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:macros&lt;/code&gt; - (keyword list of macro names and values) if the record being extracted depends on the values of macros, this option allows the value of those macros to be set.</source>
          <target state="translated">&lt;code&gt;:macros&lt;/code&gt; - (keyword list of macro names and values) if the record being extracted depends on the values of macros, this option allows the value of those macros to be set.</target>
        </trans-unit>
        <trans-unit id="bdd6fc4b3174a22178b58fcac0146935fec07be2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:macros&lt;/code&gt; - a keyword list of public macros and their arities</source>
          <target state="translated">&lt;code&gt;:macros&lt;/code&gt; - a keyword list of public macros and their arities</target>
        </trans-unit>
        <trans-unit id="7f42bda26ea8c1a6a9dd3b2a40ab9a327bd93d39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:macros&lt;/code&gt; - a list of tuples where the first element is a module and the second a list of imported macro names and arity; the list of function names and arity must be sorted</source>
          <target state="translated">&lt;code&gt;:macros&lt;/code&gt; - a list of tuples where the first element is a module and the second a list of imported macro names and arity; the list of function names and arity must be sorted</target>
        </trans-unit>
        <trans-unit id="6312c0d6714796c2204270cb1e7d3871b5ef9d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:main_module&lt;/code&gt; - the module to be invoked once the escript starts. The module must contain a function named &lt;code&gt;main/1&lt;/code&gt; that will receive the command line arguments as binaries.</source>
          <target state="translated">&lt;code&gt;:main_module&lt;/code&gt; - the module to be invoked once the escript starts. The module must contain a function named &lt;code&gt;main/1&lt;/code&gt; that will receive the command line arguments as binaries.</target>
        </trans-unit>
        <trans-unit id="49eaeb78baf611c9045b2d73f47f2e066d78d4be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:manager&lt;/code&gt; - Mix can also compile Rebar, Rebar3 and makefile projects and can fetch sub dependencies of Rebar and Rebar3 projects. Mix will try to infer the type of project but it can be overridden with this option by setting it to &lt;code&gt;:mix&lt;/code&gt;, &lt;code&gt;:rebar3&lt;/code&gt;, &lt;code&gt;:rebar&lt;/code&gt; or &lt;code&gt;:make&lt;/code&gt;. In case there are conflicting definitions, the first manager in the list above will be picked up. For example, if a dependency is found with &lt;code&gt;:rebar3&lt;/code&gt; and &lt;code&gt;:rebar&lt;/code&gt; managers in different part of the trees, &lt;code&gt;:rebar3&lt;/code&gt; will be automatically picked. You can find the manager by running &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;mix deps&lt;/code&gt;&lt;/a&gt; and override it by setting the &lt;code&gt;:override&lt;/code&gt; option in a top-level project.</source>
          <target state="translated">&lt;code&gt;:manager&lt;/code&gt; - Mix can also compile Rebar, Rebar3 and makefile projects and can fetch sub dependencies of Rebar and Rebar3 projects. Mix will try to infer the type of project but it can be overridden with this option by setting it to &lt;code&gt;:mix&lt;/code&gt;, &lt;code&gt;:rebar3&lt;/code&gt;, &lt;code&gt;:rebar&lt;/code&gt; or &lt;code&gt;:make&lt;/code&gt;. In case there are conflicting definitions, the first manager in the list above will be picked up. For example, if a dependency is found with &lt;code&gt;:rebar3&lt;/code&gt; and &lt;code&gt;:rebar&lt;/code&gt; managers in different part of the trees, &lt;code&gt;:rebar3&lt;/code&gt; will be automatically picked. You can find the manager by running &lt;a href=&quot;#content&quot;&gt;&lt;code&gt;mix deps&lt;/code&gt;&lt;/a&gt; and override it by setting the &lt;code&gt;:override&lt;/code&gt; option in a top-level project.</target>
        </trans-unit>
        <trans-unit id="96e15db9e5bfbc4ba5285a2fe5b52aa94a4f5e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:match_dot&lt;/code&gt; - (boolean) if &lt;code&gt;false&lt;/code&gt;, the special wildcard characters &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; will not match files starting with a dot (&lt;code&gt;.&lt;/code&gt;). If &lt;code&gt;true&lt;/code&gt;, files starting with a &lt;code&gt;.&lt;/code&gt; will not be treated specially. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:match_dot&lt;/code&gt; - (boolean) if &lt;code&gt;false&lt;/code&gt;, the special wildcard characters &lt;code&gt;*&lt;/code&gt; and &lt;code&gt;?&lt;/code&gt; will not match files starting with a dot (&lt;code&gt;.&lt;/code&gt;). If &lt;code&gt;true&lt;/code&gt;, files starting with a &lt;code&gt;.&lt;/code&gt; will not be treated specially. Defaults to &lt;code&gt;false&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="25cfe17ed4d0c17b8947d4488da46751a3647b1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:matching&lt;/code&gt; - only profile calls matching the given pattern in form of &lt;code&gt;{module, function, arity}&lt;/code&gt;, where each element may be replaced by &lt;code&gt;:_&lt;/code&gt; to allow any value</source>
          <target state="translated">&lt;code&gt;:matching&lt;/code&gt; - only profile calls matching the given pattern in form of &lt;code&gt;{module, function, arity}&lt;/code&gt;, where each element may be replaced by &lt;code&gt;:_&lt;/code&gt; to allow any value</target>
        </trans-unit>
        <trans-unit id="3147b5a0fb2e849450b365c6255880763733efd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_buffer&lt;/code&gt; - maximum events to buffer while waiting for a confirmation from the IO device (default: 32). Once the buffer is full, the backend will block until a confirmation is received.</source>
          <target state="translated">&lt;code&gt;:max_buffer&lt;/code&gt; - maximum events to buffer while waiting for a confirmation from the IO device (default: 32). Once the buffer is full, the backend will block until a confirmation is received.</target>
        </trans-unit>
        <trans-unit id="905d135eadf49d07d81b9fabb6a7350712b5784a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_cases&lt;/code&gt; - maximum number of tests to run in parallel. Only tests from different modules run in parallel. It defaults to &lt;code&gt;System.schedulers_online * 2&lt;/code&gt; to optimize both CPU-bound and IO-bound tests;</source>
          <target state="translated">&lt;code&gt;:max_cases&lt;/code&gt; - maximum number of tests to run in parallel. Only tests from different modules run in parallel. It defaults to &lt;code&gt;System.schedulers_online * 2&lt;/code&gt; to optimize both CPU-bound and IO-bound tests;</target>
        </trans-unit>
        <trans-unit id="8fab015d698bee7727fc36fea627deb3b1e8c230" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_children&lt;/code&gt; - the maximum amount of children to be running under this supervisor at the same time. When &lt;code&gt;:max_children&lt;/code&gt; is exceeded, &lt;a href=&quot;#start_child/2&quot;&gt;&lt;code&gt;start_child/2&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;{:error, :max_children}&lt;/code&gt;. Defaults to &lt;code&gt;:infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:max_children&lt;/code&gt; - the maximum amount of children to be running under this supervisor at the same time. When &lt;code&gt;:max_children&lt;/code&gt; is exceeded, &lt;a href=&quot;#start_child/2&quot;&gt;&lt;code&gt;start_child/2&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;{:error, :max_children}&lt;/code&gt;. Defaults to &lt;code&gt;:infinity&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="d8c502e807b79f572af6b184e4e525ad8d305506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_concurrency&lt;/code&gt; - sets the maximum number of tasks to run at the same time. Defaults to &lt;a href=&quot;system#schedulers_online/0&quot;&gt;&lt;code&gt;System.schedulers_online/0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;:max_concurrency&lt;/code&gt; - sets the maximum number of tasks to run at the same time. Defaults to &lt;a href=&quot;system#schedulers_online/0&quot;&gt;&lt;code&gt;System.schedulers_online/0&lt;/code&gt;&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d8a51fd2c88faac4f54fbf9a61f83b1a8681a6d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_failures&lt;/code&gt; - the suite stops evaluating tests when this number of test failures is reached. All tests within a module that fail when using the &lt;code&gt;setup_all/1,2&lt;/code&gt; callbacks are counted as failures. Defaults to &lt;code&gt;:infinity&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;:max_failures&lt;/code&gt; - the suite stops evaluating tests when this number of test failures is reached. All tests within a module that fail when using the &lt;code&gt;setup_all/1,2&lt;/code&gt; callbacks are counted as failures. Defaults to &lt;code&gt;:infinity&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="c1f0fbb4a29b3387f5201046cd2e3ba65a10f3c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_restarts&lt;/code&gt; - the maximum number of restarts allowed in a time frame. Defaults to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:max_restarts&lt;/code&gt; - the maximum number of restarts allowed in a time frame. Defaults to &lt;code&gt;3&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="438e5847c9117bcb9f43069717cac9034ce9351b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_restarts&lt;/code&gt;, &lt;code&gt;:max_seconds&lt;/code&gt; and &lt;code&gt;:max_children&lt;/code&gt; - as specified in &lt;a href=&quot;dynamicsupervisor&quot;&gt;&lt;code&gt;DynamicSupervisor&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">&lt;code&gt;:max_restarts&lt;/code&gt;, &lt;code&gt;:max_seconds&lt;/code&gt; and &lt;code&gt;:max_children&lt;/code&gt; - as specified in &lt;a href=&quot;dynamicsupervisor&quot;&gt;&lt;code&gt;DynamicSupervisor&lt;/code&gt;&lt;/a&gt;;</target>
        </trans-unit>
        <trans-unit id="92a2af847d15488a31b261836f27642231b4a122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_seconds&lt;/code&gt; - the time frame in seconds in which &lt;code&gt;:max_restarts&lt;/code&gt; applies. Defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:max_seconds&lt;/code&gt; - the time frame in seconds in which &lt;code&gt;:max_restarts&lt;/code&gt; applies. Defaults to &lt;code&gt;5&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="2dc0a0ea17c02ef8f2ffa4b965899530fd408446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:max_seconds&lt;/code&gt; - the time frame in which &lt;code&gt;:max_restarts&lt;/code&gt; applies. Defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:max_seconds&lt;/code&gt; - the time frame in which &lt;code&gt;:max_restarts&lt;/code&gt; applies. Defaults to &lt;code&gt;5&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="c61041dd58d74bdbedb62c521c7f4749e88c0bb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:md5&lt;/code&gt; - the MD5 of the module</source>
          <target state="translated">&lt;code&gt;:md5&lt;/code&gt; - the MD5 of the module</target>
        </trans-unit>
        <trans-unit id="d988deaf0e7f29872de2d461c32db3cfe2b75adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;:meta&lt;/code&gt; - a keyword list of metadata to be attached to the registry.</source>
          <target state="translated">&lt;code&gt;:meta&lt;/code&gt; - a keyword list of metadata to be attached to the registry.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
