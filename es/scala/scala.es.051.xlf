<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="es" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="88de5da471f90d27d734db4cc0e81e7e06b1e92c" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e91a469c3777e4a0c6f96dcc1510b4508d8f91" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76df68c15db8728b1e38f7dc8070c6f2cda88fd1" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;../mutable/reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7341ae70a563de2ea01b89f7962fc3cc31109c" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63fae76de30c6ab2be51a90b78fbd11d91f84a5" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18c8429634a71870e61fa66c21da111ee1a9bc7" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e76d02f74447449d8dac86837e01e5a1dc0706" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8aff14090229fb6beb41dfa824e1d68d4e7cd8" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db58b67cd9d887788c0cf03dd8ba565cc83310cd" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3f51fdb80ad6c7914034756e5204489b3c0d6c" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29eedc3aedcf3cccd6d0021c063825eccc218e59" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dce5b50a35c953e0a8dff97d328f92a4435b33b" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecc545d6e0de1722d68d8d31f45af9f760525f0" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d27f3cff6ab2c36fe55f9a8176349cd47d9b2a" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4290ce882c39ea587e6ff418810d5c3d5c727cfb" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a17263772895d3150760bdc382a40067237c9d5" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f566405c689a49606838b41b83296a0182502e" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9933fe5b26a5c607309159b1c8c180466301fe" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45c4db71d277ad0b3172c4ea040adc5d6da30fd" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b5a687f68415a6dcfd1ae59b36327562cf6683" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fcf92ceaa2e99c67135ef31b303172cfe8ec6c" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e172fd2222642e28d22e01ba7369c0cafd985f3d" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470a6dc8e1eddf446d63c7acfda1d13c9cd2a334" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62821f6ff2523dd661f75e644c439a97232e2839" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95edfe8237a456ebab388db3ba07b6c3c96858e" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6c9fe3a41593fc8f5b42fba0831bb68c452cde" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0b06d2a18ef8af96a9869d2b28b8597ae931c1" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.newBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.newBuilder.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61ef1a27b7ad243a386f36ad80d398e9ab7069c" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63313b0680948e6da49da641975e4d9d0a24d087" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;initialCapacity&quot;&gt;initialCapacity: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;loadFactor&quot;&gt;loadFactor: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e7264c43bcf573d24ac4c48019202ebee4bf2a" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;initialCapacity&quot;&gt;initialCapacity: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;loadFactor&quot;&gt;loadFactor: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234ba27d10731e453e23f87e84e93af229238552" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;orderedBy&quot;&gt;orderedBy: &lt;a href=&quot;treeseqmap%24%24orderby&quot; id=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot; name=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot;&gt;OrderBy&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;mutable.Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="167067680af08ce3ac798f1c3f914e381b2c5d48" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c231f1c8db1e34365365911c621789fd4a0fc949" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94de4deb7acfa5701a363531158c0300b3a5bc69" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ffd3719d9b7d8cff3deb64f1c7900376e83308" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.newBuilder.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcba58fa66e8e4c6320f1446204974be444a4e47" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bef6d289226659be24d51559e28e39666b1b6ee" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf7eb745182170338b25d8fc284fcc2bc38f61f" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.newBuilder.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fb474000c61d1f581484b5ae06f1a56f994852" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23151e922f56d160375f6ed9c5fe03a19485c8a5" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccbe6b7b27dae485a3d2da8069acb1194cf6d96" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de430da5142ed6184bba8c7e124292ba0477671" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;mutable.Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f086a655e7625bbeb98b2d5f04931043ff41ecf4" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../mutable/growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471786ad6c49ce47e6b24ffe424c614fc55ffdf7" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../mutable/reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d26a51589bf9423d7afd9173c9d6b9366a744d0" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../mutable/reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795f722d6ac131136d7a726440dd33d3fd4013e8" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487914f5e1e3733604e3687c2a4a2cd393a32ff4" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6735c78086ce220b7757dbd71143eee1a3964b9e" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4475d66f71a86060e0000a5210020f6e68df48b3" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4a5b69c8e54cef3d6cb898bf9cb955b5d02d67" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd518378bfff6436287d46a0e80bb7ba3cf5ffa" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2db1e301edc96c819f510b5e0bcfe6b364b24d" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b613ec1a5fc5f70f80960d1a9925a2a3b3e89c" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;immutable/seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;immutable.SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50b42b17c44982d4efa348cd3a2ba3866238a7b" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991c622659b22797571b95e5e8bbb17f5a273584" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.MapFactory.Delegate.C&quot;&gt;C&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.Delegate.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa33dd5fb4d9157228bc91baa25b175e72e74fc1" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;t&quot;&gt;t: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.newBuilder.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arraybuilder&quot; id=&quot;scala.collection.mutable.ArrayBuilder&quot; name=&quot;scala.collection.mutable.ArrayBuilder&quot;&gt;ArrayBuilder&lt;/a&gt;[&lt;span name=&quot;scala.Array.newBuilder.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76281b185abb7a3776eb9df2fdd38f1301f40022" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa97772a54d7ea26d582dafddea9176f322a793" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a2097008f4e43f074825da5e2367f3e61d992c" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;]: &lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.newBuilder.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.newBuilder.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8f2c303e88820dd1421298bc799fa1ab01d5d4" translate="yes" xml:space="preserve">
          <source>def newBuilder[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;Y&quot;&gt;Y&lt;/span&gt;]: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.newBuilder.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.newBuilder.Y&quot;&gt;Y&lt;/span&gt;), &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.newBuilder.X&quot;&gt;X&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.newBuilder.Y&quot;&gt;Y&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864c9a7cf89dce1375715971c8f2a66f12177b8a" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;), &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ee1859494f240c5a482074af98c26b7d28105b" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7833f168f309a07083a9641c8c86d7fd3f3aac" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4910dcf4a3ee3d548266ba87b4225e09503a1fc" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3d675eb08ecaabb121550de8f43882f48479ad" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a82fc56d3d05451dd2c2f46d9d871edb14d7676" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;), &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89199ec3e11b09c1c6d03aa4441f1113deaecbc2" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7978d03224409158aad5c002634162f68ef01556" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f0d71b216082083ecffd2dd8d952443062bf5c" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff30d8e95a064b00073080d2196ced8990bee76" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82df4599a152458097dfca06009fc8d69952907" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f45c6c459369ebe49c40a901e7ecbe7da1f7332" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6d12b0dac2872bbce0dd57865ad51df18a826e" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f73e30cf28164aca0084f918d3ca19b940f94a2" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad59b58e3e38c2efe5f8287491717152a1adeb24" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d170c04ce8737af5da5d76db41854313e65875bd" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c2dcbc345f5c2530687bb2047c160373543327" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30fc9963c4f8a4f09a078d8da4de01c91a9b531" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e89cffe8cfcb2168c2ca9cdc07dfd01a861a147" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace1094c33c4573b839c218b25cdd3a1255cf259" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4eaa01a19f33aeef0d18685dc36090d06114212" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9b35035c25ead3a9259788a00017f134eacb63" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17196f2e63694c436aa647f67c739c5ae07769a" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a5beda211c01a1640a1a46b64a866a8dee1827" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fc4ce42e1fd638de4df282519d3dcb34b8c7a7" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6d714bb3e63caa4e11904fa62be26e3f53bda44" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6edaddbced948112db51c7b6a599ba5aea28ebe" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2202b3f6ad72fde4ce910e75b58e36f901adad3f" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fccc5e7ba166ff0a2dc9df63c9d68e9e13b9461" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4329da7e30c2d9ca38e2a21bf7ede2231dc07469" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beddb1598552452eb157aa9841f52d974b092d7d" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0f675baddc19b4cfa46756f3fe2475ab4811d9" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c483ff50715bff9baa4dbc6ea239de2056a90b" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7bd20c85cf18672a20099342d2742189b14ce7" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcdc5478125a51afb31c8a2ad73ff965ff0e711" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2c635e502889a8a97fecc0200b35d7a64e7b92" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428c596c9d49616954366bc67850e9ca48662fb7" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcd2e4d077defadcc9a1a29493a8b114428094f" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd3d6f0a864b8401d1f5f058747c1a74fab842d" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e49f9772f86f003bcbb2cc4552a355827d7cd2" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adc8d757970ea2fc04124507a16b24e6d483e93" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2cb8392033661d4caf4c2e56d50c0c1e8283dd" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148228590613f154fe3e8f74e92a18a74608541c" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d653c04b24f22a3de2e0d3bd6118a6c9fec60f91" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6091d9c9b228389ce10a37cbaf9c66b6fbc4456" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7427fe7af3f7d1184c07892728e93ca8278fdb58" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56a51fe56e063c8d3990599f79d54c802a2ecf8" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a61323d9ce5877fa83fbe7e7ac949f4d9e1251" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f262d5689b142fbb03ac8c4758fb2a66c8b073" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b1356d77a3726c63944095c5c054ddf44feb54" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d7793d5da2285e49a685a03ac852aa8b5203b35" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589cf17589b5cd6cc4539f1adbf1139c2c042cea" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2d0b6946d1621956160d813959b1a385e1a534" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a3bb98edf13f361228f00a2244f43ab766c8cf" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40bb381b1fb7e6bf22f14b9f94c9c158efdb38f" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59021892f3d4412b633e2f10086d88f94e0e8d23" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743ead8d4a18fc73ed817bde7b83824e4bd35efa" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ca7feb41c3d64e16939544d1060f70ed8e5d9f" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80aa80b359feeb636d3d63a2f51e80b56eb396e" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a06de0d952d04b1138a53e03f7932ac1201f46a" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f4bf624f675bae6e1e362b9c3c17639d470543" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9757633f0f9e51db5b20b50cdb11e19049697b" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3854970dac72f1360898fb1adf6228369d1818" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b4bbf2b8afd5a50accb0a9f9f3b70430c02ffb" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e52bd0f87aa99049e6f1796df7c7f6fbf691a3" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;../mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3172fb9860922f0127591384ac3f5aa2ed4bb87" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace51d5c238f8248e1a22ea25254055a3d9a5b41" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb9d9eacfad7d4eb0756671d64126fe62b0b655" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45aeabe747ae2ac5dfe4a661c424f5b029e1325a" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075d2d5061dbeea3d2b3c5812f379dc4c8675e37" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6155e3d580177a9abadaf7b7614d58ba26c82215" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4865610b6a707c879c41f949ddb78a6d0c3e609d" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bda65262d975c5006fee20ee9809f680813c77b" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835c3721cbfa3a8b58fe4b711bc8574358bcfd14" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444c5c72ebe1c2f7012455b62335bf2ed56f4f51" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]), &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0696eb09fa907768ccdd925c9a247d3b8f214b1" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;), &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d210beba4b0100d28d4a9fad73de934076f4f9d4" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102066f7ccb91a2c434b0046ac86885f37a3bf61" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7295e3c601b30590ae2c882fb14a5b816c2bb0" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d740a53e84c2d4c678f742f07edb9d4c962bfa" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6dd4ce093c92c5ff951d6337f885df65b0f5ff" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22ebb52aacafea393d64b26fb9828c19d07b2fc" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba66458ac2e221c47b6ce0d567bab24da989208" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e3bceaccfb192ac0b2511f4b49128d724057fb" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530949c175b5ed1bcc9b5641d176ca4ef6a2bf81" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c094595e7ba869500c92181a20a5248dac0bdd9" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16323de1c433d2f96ed350c3708c3fc4bd35164" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f52d9637021ac002c94fccb674a32c12638c14" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0acecd9979f91add6f841dd29d4f6161f2b9166b" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e671ce9376f5e721a627421e16ad4612e930a81a" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21c63792604aad0464ac52469ec6ec79e6ca588" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16f00629fef730257da3843091949ff1d06b61f" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68f773085dff1355e7f70c79f9567b9cc1457556" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08d8f2e76aece17a1b1f892a5469f2550fd39e8" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88556b290659425412a95d0d270ccaa9ca45cf5" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948666809e31feea7a6778e3c11f6dd9029284b7" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6937bb849d87ee7b7da5a59d566a4ebd7bbb811a" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c935c926b0c7409d0d6f76abc7d5b17bfb269577" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adb654a7a8e0224b0bfc130b4b17953e87d5054" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a2530118ff970fdbd8c55868c5a4fcd6dcdfbb" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052d699e50aeacdccdbc1bb948145ebbcddafe67" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce38ae45f87a1218e8a498a817087b4fc59ec786" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8223e810fe90b94b4344ead4d2064347d804cd" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ebaab9dce41ab63c402f914cc60f14a1f45cdd" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368c1be6229f96b34f4d5affdd09ee9197f677c0" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd76cb84b7a07f9956264df2f88dd51c0879d780" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337398a50c7761c35c2e6994758a8022e3d09470" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc964489dcc4fae3d5716447212d68ce1cd63e8" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e53515c89be2da858936524e4d7f46d80519439" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719130830cd1ff72419cc943476f796c32e9d658" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a6d31f04c244fb1457692f3bed9ecaf1cc398c" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165b9b373e07656c673341a5f4439714c50bf148" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e485f5b8a4783e5143f83f999bc18d87b6fa4e" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab135d82bce0d26dac78b7fee15003634802e1d" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099f7c8347033c800ae856fe791865b9c3917ce7" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab9ef775a7d8f6b378124911148f25bba87c0bb" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6862e75447d6dc86d78ce8e6195d4d0844afcfd4" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee020fefbb123964148f4343278aa654e7b4e086" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;collection/mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06b5ec78f0e13941679c15b4dc13d140ee1b1a7" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2abcdb14d77e13dd79efec5a811e964c64a7a961" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9bef5793779fde3b7d2017d78c04e0a1fcfb18" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5276ae606b596f1fb6178ab44a614a8806047a" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aca40f7fb7b1c1d2ad3b02f4841cc4faacf9058" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e779d78eb44748477f7e4e929f8326b99bf07277" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bfa7da08fe5123d2ffe721dbd59fa5d998abbc" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b83eb8246918efe66e969ea8a6cf611e0a4b78" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2538c90814f9846b7918cee9ec596bf908b10d" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75776b558b1a9a0aab6d884614ef4668a39513a" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e831dd6217d6fbb8266a9a323721267cdf25e651" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="249e6148c55e373a932407a720ce51f5a4c6c394" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99491544f3cdb9e2881cb68575cfa025eead75b5" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb9cfc276bc9493ef6057bcefdac43016e16517" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5410fb5f7f1244184277a561cc85fef69b2c508" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000f8851313497993b1a732e68c70855ba118202" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22548132aa4a8c3487365617c6f278ab56222b84" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d44fb3143fcd296043909354957b0fb3fe4d473" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfbbf8f11fa40a4097b620c9519c17b53b36569" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef1c03b6d621869cf0ac083c202bf4c1180a81c" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;), &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838c49ae1d61f14dcdf091f41de36a1ddd1cefda" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d77d64eef7ea56a818048576daebc90d95a7289" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc337f2a5c6974d54ad5b6cbf00dd8ba2988754a" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211bbbcb78d7c59726d735e54412d2cef707974b" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae1e3efa31d12fc801cfd889b887911677c7feb" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e46aec04751ef8470b42243cf7824aa72768c0" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d603ef124ae4968eb63631f03a940b3d1b87a05" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3cc0f13ea65ba59436327ddb05628dad9cbf9dd" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3aab354d4e0c2ddb40a98fa3d3e5ca94dd64cb" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0a650946f09cc2c6d6a48c1c1ee771b913fe14" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812654484a4aad28f4df099bb97a7212aeb24762" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd0e5379bcb13efba9dcb5ed7bd39c0ab1bc32f" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692aa567458fdf362e65b4308d3f1f30178f2bd1" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3794194ccd6970abb4c867d91ce7c0e3b9dc8d" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5268d66556cbea4d37974a505b0dc79717ad46bc" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c240b6d83533b88837aac1e64c987590452dffe7" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364852f5446c6f836d0c06f4ac059e006c802e45" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef02d7e29f4cf45878afefa5cf21421bd136ae12" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da09d63b9a2ed62695f18ea45b020c6fdbfe1ff" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8a35e41a5ac356d991a6d399f37f0db5f72b9e" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c46d95c87adb70fb33520dadd56e424a5c3c74" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ee0acc3f259a6191667a1dfc2c3639ab5d9b6a" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e69fb6f0e868498e41a5b044347c5c599578b1" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564b6a1beca88f8b614c793fa5c9425a42d543f2" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bf27ee9b11c135096255ac8dbfb0204e0e0e06e" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719fbe4fcdaa64dad4e459210760d192857ac655" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66467e64b5265469e9a44bcebaf72525094c53aa" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f3ddbbfa33459d53a36157f369be6b257418c7" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e714cdb0b8663c51421dc5650c1840c15d7eedfb" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e7b7681da1aa30c8d35d7781fe521b55bd4818" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca5d4da91be17b638d29899beefb97f8a55772c" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48594b21d3c518af597cd621fc5416e9814932e1" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cc23f94add38a7bff643bdf65bfcc5aca9af47" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8422da719b236d529317c7f2424a67e9fdc1d8c8" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e4cdc82253f14cbe0ac73d2e49306cffcccab2" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752b9cc8a378973c60f1bdcd53373913c5464887" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b2a9ccc61287c5f25839d03800ede47b4f80be" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09101dd62636e3b97cc3009acc5699cdebcbcee" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f807e6820cb3d4418d3e09f67cd88c94ae1b96" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77843446128da89900c24e858bfd250dfaa7c58d" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd61fef7e2dc54c92c31a9ec89d2bdad8afd099" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d668e02a11a7afcf121dfb39b5ae8558d824ba" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4339f03cfcda806e3ece52de9e113b4c7a2172" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20de675d5c3c86b6a121eaa140b5e5ae670de141" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6193d0f40e3256953297be27dbf2b277228a2c" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722c66d7a6200d49a95a864dec9246090195c12d" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61031c7c05a732e89773b518424e829395fbc17" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554f1c83fc46049075a811e931205f6840f2ada0" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f38ab15426be63f8b4abed0ef43840a7d0483c6" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81d09863ef572abc50a2a4cf0f4f04ba84d9a39" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e83c4882286aac31bbf148d0b0e0cd1c799694" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da894ac07732ffd3a3c9ff0e6c01de3859be2c19" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b531f803ea6237e6e973ce9efa8e5ccc5390d4f9" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45dc4ec0cb892839a386010ab5e4c700e566fce8" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8264258a2b991cd6891c77ab6707ef8e4280e611" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682734a40ec1c91014b8ca4cf18ef1177d0a7ad2" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b77d03396b7ffabd17a4e43d1e703fc49e233c" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b5101e4c301e2266dc25dc11373b6ee856bc39" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f2a7bfe84d838da06ca25c559ab3356e2dcc4c" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9c290e9df7f5b3a99fb0754f225d271a4be08b" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af67e47daa70319a1e08cf9c488050f97d91cbe" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9313da1a6bb82e31a796b7dfd655533df79336" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6222c1cb9e894677d8be89ee1bdaff8c477a5de2" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca704dd704ff421afb5cbf76268152379a51acd5" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31edeccff386ef66bee0633876583b7c857cf82c" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe7f0b6f9d48d6fd3e6929a41379e4144dcd313" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91395bde0c794652deba0af9600bceb56f42c394" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4beb3b638db50cd94b15ab496b48e3579a99b9df" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc49a24e07816b7cdbf7e1f2a3a2da7c69c2e33f" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecd1d64509de92d8476a564ac2bc069ea5696de" translate="yes" xml:space="preserve">
          <source>def newSpecificBuilder: &lt;a href=&quot;mutable/builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f19a52ecf7f0b3a2854ae2fb994ad3b2a796127" translate="yes" xml:space="preserve">
          <source>def newUnrolled: &lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254d828e306f81da645fd69f2ad3c87d01d41c27" translate="yes" xml:space="preserve">
          <source>def next(): &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c30342656f03969fb2688efd84d2b0ed946e06" translate="yes" xml:space="preserve">
          <source>def next(): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83bced5d029284c7f36aa0b9b247d687c21d30f" translate="yes" xml:space="preserve">
          <source>def next(): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2deea1158f535c47f7e3e2cc48232767cfb4b56b" translate="yes" xml:space="preserve">
          <source>def next(): &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18053ffc8b9ef26fea1e7687069fd29a9de9afe6" translate="yes" xml:space="preserve">
          <source>def next(): &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b8a084f4735203a331a2114c4c67ba306f601e" translate="yes" xml:space="preserve">
          <source>def next(): &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01cb87096e7ca312367b62dcad53eb9460998538" translate="yes" xml:space="preserve">
          <source>def next: &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623ac598e4e46f8b9c6da1cf1965cfaf80e82c76" translate="yes" xml:space="preserve">
          <source>def nextAfter(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;direction&quot;&gt;direction: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78648dec83da3b68d14ceb9e884cbe54d2d7a3b6" translate="yes" xml:space="preserve">
          <source>def nextAfter(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;direction&quot;&gt;direction: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d68623d97139ce730e28090749f389aea3e720" translate="yes" xml:space="preserve">
          <source>def nextBoolean(): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4987fe384b449f1d7f75c4eff69d6eeb1706165f" translate="yes" xml:space="preserve">
          <source>def nextBytes(&lt;span name=&quot;bytes&quot;&gt;bytes: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab52fdee0e9ef2a607e8f469011572b3421359a" translate="yes" xml:space="preserve">
          <source>def nextBytes(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd6bbd34ed00d90e8b57f98462fe8b391e86b53" translate="yes" xml:space="preserve">
          <source>def nextDouble(): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcae3d70d79adfaf9f615c7864d193106f3771e" translate="yes" xml:space="preserve">
          <source>def nextDown(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3ecf254d7b0472291b75aef9aec6cc88ab2ae4f" translate="yes" xml:space="preserve">
          <source>def nextDown(&lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ccb965e76dfd44d9e7c4efa4334099f980b384" translate="yes" xml:space="preserve">
          <source>def nextFloat(): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21edd3af6972cad8b90b362e57b60f82a8448c7d" translate="yes" xml:space="preserve">
          <source>def nextGaussian(): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc2e4314caa2e1f85dc52990177c4de52dfd2335" translate="yes" xml:space="preserve">
          <source>def nextInt(): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059176524b4913b3a8a67b9021d2e4050444af1f" translate="yes" xml:space="preserve">
          <source>def nextInt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23288569aa9e56f2ee035f08f6b71179949fe98" translate="yes" xml:space="preserve">
          <source>def nextLong(): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74977c86d8d6e613bc81e53821c8d4b4f71d2bb" translate="yes" xml:space="preserve">
          <source>def nextLong(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88aa79ff777f13e0eb076d81ada1644be32c01d" translate="yes" xml:space="preserve">
          <source>def nextOption(): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b0a6bfe54d3cecf172a210baa722a69e728009" translate="yes" xml:space="preserve">
          <source>def nextOption(): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3be946bd9e6010a703996c011f34aba58798da8" translate="yes" xml:space="preserve">
          <source>def nextOption(): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465ef6fc73724410c0fc322f5ad2e02a71b11ac6" translate="yes" xml:space="preserve">
          <source>def nextOption(): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20163a98ed124aa6dcb92fdb53a6ff8c9d0503d" translate="yes" xml:space="preserve">
          <source>def nextOption(): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d786388fbc1068ef088cae451e5ff9f118978189" translate="yes" xml:space="preserve">
          <source>def nextOption(): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7372d95d04574ecc9962cdaf291e810e8d2c4b44" translate="yes" xml:space="preserve">
          <source>def nextOption(): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eb07fe05bdf098fb26745f6f6e59c765be37a0e" translate="yes" xml:space="preserve">
          <source>def nextOption(): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64efa1b89796a0cf4cb28a9656af882340a55015" translate="yes" xml:space="preserve">
          <source>def nextPrintableChar(): &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79ae1ffa6ee3c59560c2f374f149cbb122a34d7" translate="yes" xml:space="preserve">
          <source>def nextString(&lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7619ba9b2286734be7f5fdb316061919462a52" translate="yes" xml:space="preserve">
          <source>def nextUp(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f041f71622fb692502256deeee057320503c05d" translate="yes" xml:space="preserve">
          <source>def nextUp(&lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c20efc7bcabc4035e47fd9b03c20bd3fc2c011" translate="yes" xml:space="preserve">
          <source>def nonEmpty: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a2c92afacc5f2e2b39b4f78496bfc401635680" translate="yes" xml:space="preserve">
          <source>def nonEmpty: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a272f305bbc2ae85314e34762e0ed05808fb2c" translate="yes" xml:space="preserve">
          <source>def nonEmpty: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e018bec0dc484ef48f945caffbdb268ea6e979e" translate="yes" xml:space="preserve">
          <source>def nonReadOnly: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebac6d08979a89c390141911f65d2fcbf1d33c64" translate="yes" xml:space="preserve">
          <source>def now: &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a45bcde48b5310974864a0726d62a1e2b92289" translate="yes" xml:space="preserve">
          <source>def nwords: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41e751cbab1a4987bbf3d2cbaeb85c85e5d49ef" translate="yes" xml:space="preserve">
          <source>def occCounts[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;sq&quot;&gt;sq: &lt;a href=&quot;../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.occCounts.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.occCounts.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113783d15993a0ab08dfe6a77674916faa58b299" translate="yes" xml:space="preserve">
          <source>def occCounts[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;sq&quot;&gt;sq: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.occCounts.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.occCounts.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3047339b052a319ba0e9a17f87f9dbeca1d29455" translate="yes" xml:space="preserve">
          <source>def occCounts[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;sq&quot;&gt;sq: &lt;a href=&quot;../seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.occCounts.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.occCounts.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4243652bb4bd6741879bd821d65a41fa5656be" translate="yes" xml:space="preserve">
          <source>def occCounts[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;sq&quot;&gt;sq: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.occCounts.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.occCounts.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cdfa30f3df68288cf96981963c3329b111d82c" translate="yes" xml:space="preserve">
          <source>def ofArray(&lt;span name=&quot;array&quot;&gt;array: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215ab1dcdbe88b8f38139f61115ab185b8b87be2" translate="yes" xml:space="preserve">
          <source>def ofArray(&lt;span name=&quot;array&quot;&gt;array: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188d9d74369eb915e73a79c2f906c9a70ae4c061" translate="yes" xml:space="preserve">
          <source>def ofArray(&lt;span name=&quot;array&quot;&gt;array: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93f1bc43802dddc8d9438869b9170d787137d02" translate="yes" xml:space="preserve">
          <source>def ofDim[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.ofDim.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.ofDim.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd8770b35e86cc11568b21ba59cb96ef6fe71ef" translate="yes" xml:space="preserve">
          <source>def ofDim[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.ofDim.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.ofDim.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a672c73efc33477d8112b53aa34f41bfd215e16" translate="yes" xml:space="preserve">
          <source>def ofDim[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.ofDim.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.ofDim.T&quot;&gt;T&lt;/span&gt;]]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56c5a473d900b239b9c746d016ea5dbb4a847cb" translate="yes" xml:space="preserve">
          <source>def ofDim[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.ofDim.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.ofDim.T&quot;&gt;T&lt;/span&gt;]]]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a682051800c7602ee17fd565c5feaa4316c17ed" translate="yes" xml:space="preserve">
          <source>def ofDim[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;n1&quot;&gt;n1: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n2&quot;&gt;n2: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n3&quot;&gt;n3: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n4&quot;&gt;n4: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;n5&quot;&gt;n5: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.ofDim.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.ofDim.T&quot;&gt;T&lt;/span&gt;]]]]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fd9a34da1c48bced27b524a70e009ea920c3ef" translate="yes" xml:space="preserve">
          <source>def ofParDoubleStepper(&lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;] with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b58e76db9a4aa0a26bbfa66072de6226fadfbe3" translate="yes" xml:space="preserve">
          <source>def ofParIntStepper(&lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;] with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80eb0d85c5865e45af1f96b0dfa6624b958f26c" translate="yes" xml:space="preserve">
          <source>def ofParLongStepper(&lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt; with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;] with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770b2ca60bcd3c86e38349f66ff4ae941070e8f1" translate="yes" xml:space="preserve">
          <source>def ofSeqDoubleStepper(&lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac225e0e9cf5c673036801b2bfc9e3f43dc4d853" translate="yes" xml:space="preserve">
          <source>def ofSeqIntStepper(&lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df63869f3b35a4d94733dbde2cc73cf46cfe33f8" translate="yes" xml:space="preserve">
          <source>def ofSeqLongStepper(&lt;span name=&quot;st&quot;&gt;st: &lt;a href=&quot;longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7911b3202bc7af1661632ebc225b217433ce13c7" translate="yes" xml:space="preserve">
          <source>def onCodingException(&lt;span name=&quot;handler&quot;&gt;handler: &lt;a href=&quot;#Handler=java.nio.charset.CharacterCodingException=&amp;gt;Int&quot; id=&quot;scala.io.Codec.Handler&quot; name=&quot;scala.io.Codec.Handler&quot;&gt;Handler&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a24a957f14e034c02395d90ebd2616a4c275f5e" translate="yes" xml:space="preserve">
          <source>def onMalformedInput(&lt;span name=&quot;newAction&quot;&gt;newAction: &lt;span name=&quot;java.nio.charset.CodingErrorAction&quot;&gt;CodingErrorAction&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea3ea80791aed572ffdbd37a2a51fd697d20858" translate="yes" xml:space="preserve">
          <source>def onUnmappableCharacter(&lt;span name=&quot;newAction&quot;&gt;newAction: &lt;span name=&quot;java.nio.charset.CodingErrorAction&quot;&gt;CodingErrorAction&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8f5b1408c0fe5c17f6089a10c0f9de1398d8a5" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0898f2ec3327b40454554c3cb6bce80e7def82" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb6bee058944b1c9d9b1e80bb295b83fd8b7ca06" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6c862ed8fa840dea82475fad5fc1a182f59d3b" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1748e2bb99331c5c65c6e98d4af0f69d9797c47" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e8351d754c5f6b2effe30d11f08eba44c32258" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07eae88b35d759a62ba5fe6cfd1d1f3875ba1b6" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9478563d020d279e5a073485edab25efd05ec06a" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05333206e8910f394f8b5b110e7681a6d2d958ea" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7462e2c0ebc6afc96c1e4aabd1fe81e7d0dfc7" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cff2913e6fe69471fcc7e98c961bfb8abe50577" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f914474a957090ce56c5ec45764229a91ffadf" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cfb96f59bffe37eb1739a2fb515862e1c1d4d0" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e5c268bd73ee4c11e99fe77c451c8491fe48c3" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeea7489d522a3493c18517ed7de80d60db78719" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a38acec662860d54788bedeb5927f67d1cf75b7" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ce030906ba3a77d6cb33e6744cce041400c78c" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c9554655f70195048c25b80b8164236b4c2abcb" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a0de241d93332867c10d8a4cbcc664e841c436" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f96e5f98c115adb61eb9cde83059638b6ba1c6" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fce97490fbb6ed5c84512ffba3593974689089c" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e576208015d6b3b3ffe439eaf4e10271baabfb" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e86855ecc982eaeadb139b852f65d1513bed3c" translate="yes" xml:space="preserve">
          <source>def on[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.on.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02fd691536c9fa61a7643ada0882e9aa5e53eff" translate="yes" xml:space="preserve">
          <source>def one: &lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86786df8870b23bbd910a1a1241c1771f51fc0e" translate="yes" xml:space="preserve">
          <source>def one: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a75e1eb00c95ab499de6b20110931382853f54" translate="yes" xml:space="preserve">
          <source>def one: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6192d1b378d945fedbe3b09dc43e2c98bb910569" translate="yes" xml:space="preserve">
          <source>def one: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d15099963b57b87c982d0c937c8f0a00e65dfd" translate="yes" xml:space="preserve">
          <source>def one: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37d0a7a68650adb4d785eb9943fa0ecbb23deb9" translate="yes" xml:space="preserve">
          <source>def one: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3509a7fe282c036dd0a3b6372ffcf710326d2e7a" translate="yes" xml:space="preserve">
          <source>def one: &lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56c42327afebe90f95f2dba89b4945dba864a69" translate="yes" xml:space="preserve">
          <source>def one: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6112f082ae10ec2b06b1a069492d1e789ac218f3" translate="yes" xml:space="preserve">
          <source>def one: &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc33c2b92c1e2c4210edbb23b1b368a844ebbb71" translate="yes" xml:space="preserve">
          <source>def one: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16d3fa9a958b7f1d26ef175d9bd6f3d3e3aebc6" translate="yes" xml:space="preserve">
          <source>def one: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc1f7c35202a514cb964d89a667688ae99c6d0e" translate="yes" xml:space="preserve">
          <source>def one: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f7ca44a235be596234ecea56abe4a4b045a61d" translate="yes" xml:space="preserve">
          <source>def optManifest[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;#OptManifest%5BT%5D=scala.reflect.OptManifest%5BT%5D&quot; id=&quot;scala.Predef.OptManifest&quot; name=&quot;scala.Predef.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[&lt;span name=&quot;scala.Predef.optManifest.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;#OptManifest%5BT%5D=scala.reflect.OptManifest%5BT%5D&quot; id=&quot;scala.Predef.OptManifest&quot; name=&quot;scala.Predef.OptManifest&quot;&gt;OptManifest&lt;/a&gt;[&lt;span name=&quot;scala.Predef.optManifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072ce11949cc9d313f6ec77c4333459de3c896d6" translate="yes" xml:space="preserve">
          <source>def opt[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.Catch.opt.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.opt.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da561c18c6a77e22bc3b88c1568165aacef02a1" translate="yes" xml:space="preserve">
          <source>def or(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;, _ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a03218e472a3493805ee03e2f9369d0967ebff" translate="yes" xml:space="preserve">
          <source>def or(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed58f19a7d0af189ed61dde50011b570095e1bed" translate="yes" xml:space="preserve">
          <source>def or(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a79f2af77c4c9385da8a997bb3448a399e4324" translate="yes" xml:space="preserve">
          <source>def or(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505af37984ea565c9d1103c179ab39ea5eebc805" translate="yes" xml:space="preserve">
          <source>def or(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[_ &amp;gt;: &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;): &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0459b4becc7d021311661ac7855a7715739f1b74" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2ba28bb7dedf11ae0d1d53fb6ab79217c67edb" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64004fa1b8968e7556340c7e5441ed8b7e8a86db" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1beb565daf57b835de487af2fe1aa6a7b520c314" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5fcc38fbc9cd7d5262d358aab032d698276c11" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda3845b714eb86265ee8dea4f9710a2a94ac60b" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78df10c71ef5263fceff9fe4be606db6e77090f" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7875c967e0a4d5e8fbcbe7ed3e290eb5204f8c8" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6e4d4870429403b7d6d959f5e57a2c2e16f600" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f38456ed41d92b8ec18b17e3026fafa9d3fcee" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9b76c5cd79643b8fc1c8ffbdc18a79f1fb0728" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79bb9fca0f275371abeb9223478e52aa9c48b18" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7f143ae2eca005f602262de4ca1c9d4850163a" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40287cf30fdeb053f39c7a8b2e65f1a3881de43" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7854e21dff41282ab69302e20cf1c202d213dc2a" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99119fcf320b38388d42c6bead9cca32ecffec58" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023932191580b1312521be9f77b182e4ee8be079" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9679a4e95338e0d667882c95e1ce6a9a264d3287" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106c69e1072c2651f99a7f956cff454babfced95" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584e2ecf3188ac11ae122a2769cec3aa5f80470d" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0f7f09554524c5acfc65a48e6306163b2639c4" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67917d4af43f23f649baef541580d8fbb51a9d06" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3177d5f1170d4df5b0925605a11013efb5a58160" translate="yes" xml:space="preserve">
          <source>def orElse(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3720fdda7e36134a7b32f09dab87f7df336d7d" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d220048bc68194b4b2d8b9b26089ac76087297" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fcc893d77fae87d2769bf211f5332aa59f2182" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d42a4e27991ec7b988a42ffb9821182c7a2dab5" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0b99eabc89341edfc658bbf482c14ebcd11b5a" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716825f2a6369bc661df5d7497242652e2f20b11" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf43828de9f74f15fd87235acbc68a27b6b32263" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2581082c88894a31334042ed87a41a09be78a558" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c94c312792aa0b0b689b7d1a9a27120d67df96" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e966c0fd6f032b937d60f8484991c3fd74b462f2" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74412524294e495883fc61b6b21576ac110983ff" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553eaf36c548f5fc3aae40abbc559ca691a45e13" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9e8df835fb8027b3205ab0dc6f0eddaac86205" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda7007344590818850416f84e3262633402687b" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7456457bc20c11e1e5838e51c302f9e6003c3f42" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a89f64ea418fec38fa8c42868f1c63e9d76f9f7" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f596f3d41f24aae58b7b459c80037ef010c15b" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0940177b05ce8a3694c0c096a917f98371b6706d" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac26750d2303d53744917619bd9d7dc92fedf2b" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f6016115dd4770f6bf8f04ba9ca85b9c9a6bd0" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23df63f9179e6c44ee616c13914d9e3d112b3a5f" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6bef6a4127d7c5a7498502d30c9695aa9a450b" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39aa18efb2f1c9670a0806ba6341880154ab7623" translate="yes" xml:space="preserve">
          <source>def orElseBy[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.orElseBy.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc83db891bb532f1ec7a3cae5379b2f707d072ea" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Either.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;or&quot;&gt;or: =&amp;gt; &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da27c49261cb92d8007a13e1d0a5f3b2e536ceb" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;or&quot;&gt;or: =&amp;gt; &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85789ef6c053fb2f23a367664bd99ef28763265e" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.util.Right.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;or&quot;&gt;or: =&amp;gt; &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b724a0a4c3ea0d646baea199256a6eb0c81bf8" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53947dbaa6345795a3151e15d27c3176cc09ff9f" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e529be9168d7687a958b2ceabd453cd09e58703b" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2785dc8e7d08fe47d4311399ca007384fbe91be" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2425881bacca231adae4b9fec9cbde431f4382e8" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca951f352951ae5322dc1c081a8bf79f8e6ca0c" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78d32658d5463aeea78859325a460dddfc9f1ab3" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d3cc2a40bfbe784ac569ae19c777fb3c0986f6" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa5d53ff95d25eb4d7937e501f29eb186144586" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5460770934e456b15edc2ec12c8cd9b99a6d4d24" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120ff2a811e2886e48bdc86d6c1a79953f86af6c" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f63123e944b9c74a713ff3c77faaefecfec7d28" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d66fa7651449e5ea6f6193fef350a4b12659db" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fc791818beb945d612de94060b253046d76707" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9220d6591d1f7f5ad9c0084c3876a8866657821" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5f375de74b351b6746dd1156a1fa1c681a021e" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78b4665a4a871b13b80f8cbe972a525a8993e8a" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa3c1764738c08ebe2702ac311c90b032ec2199" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b681b06cf51c9844e5b09ef38fd01628bb8c4c8b" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfcb5235fd860f45bb978cedaaac196dd92ec59f" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902734f387f460427d578a1f7ed687f62b85753b" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7965903b7c1dd8837eb5b43d16e4b2973a5df577" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d597b1436bef5fee6cffb5e8709caa2c36dc1e7e" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6661039b549fd8e21802e4a13ad08de1f885a34" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a06cb1e163e1792bfda2d7041a17f63e26163540" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392d1f8be3b2966958d8be0a7bfbe905477d5c3c" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30cd796bd868cb17560269190370b92f3b2a81ca" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d06246deeae5894f532d7f0151cf47fd1c7c99" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfa04afd87b58468b41312b593d3ebc150d1b5d" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac8cb2f648ddd6d30ac7ea1f7919e2445fc6f80" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c739eb80b8a7f0ea753cbf7608a80913ea175070" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49faa4de80ae36b5ed5e1bebb39c15ce467f1c3" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8b83c929e0cab5e383dcd3d5e7dbbe16f66c2a" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8456bf4da378f0e8d969e39dea7213d3cd4dfe" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b247b051ab0865565bd51c867ed391fe4a0cc8f2" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cd5f2cb814ef9c3512fc4def67743df2d53412" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5be1657817da60d7c61f0a7b55bb1234abe7425" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2425d894017ab2a96d8f992047ddf1d1fe265509" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f466a1eef3927b4037aad03eb5d25002c1c542f" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3f57366b508331a6dabd5efa7e8c9fe36f21a4" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d9d072cb299e611fa2061b3d782790755acd57" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef21ee5a17fb847c603b88a07a1358d7d9cbb6b" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db53e946d52880e5182da74d1ed534aa4555a65d" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5617acbb7edfa09ca0c73c578081952d00515094" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d851a12eccdbcc1e337950056dc9a973b1ac6956" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c39e5048d7fa4d1df55df52ed067b53adbebac" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f66cacabe025c63719b462471557809345f0084" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692919206c570088ef51d841ae586d901f5ee93f" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="627ff23069270ebc058e3c0b2fab814b82c15b67" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5c32b37f20be2ce582426dc2c3856dfbf62f78" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35796616fc3288f80a19544871523f413e379485" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87a1cfc8f680c33cedc810965b4b809bed0c1e0" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8bcc0af93a7b9ff69eb0cf5566cf6fd0657d8a" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0034c2a7fcbe08f840d1eafec067ef1282951398" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466839a24224192b1fa200535c142d2bfeb36911" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acecef99abfaa39a8a108a761feb5f63c4aac01a" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac72547e4d88c0aabe9398649cdbbdf0ec0a8529" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd35f0411f831ada5b2109062391ac579da7e93d" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1566733f1cd8fc98d6e0dac83b29da42f5644395" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935a86a96991fbd03095ea4c675c55c025701858" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce9f7c7b4bc60af2d672518db85e4f757b0dbd6b" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c2a5ff0474c94519e0456b1fe5661afe9502ef" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc3cb34a6c326f91e544eba6985ccabacb9817b" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f74083171038e6fe9d6398f8034f67e17228d6f" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f064cfafc05754e1fcc24bd396074f60e0663a3" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e9485c81ea975e661aa33091be2adf3cb80023" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3de29b9aed2f89b214d4ee33a8064599c50f313" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06635b5cb36d108db3a10b6606380d9650fb51de" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fba7121e689b12b12c6f5ff1d3df8a6f3ee2d6e" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208cc9fae0382b8fce4843c722374d4cf281c0a3" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d295b5019d6f6acaaace2498759f734b64141844" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d743897e81d88f2908b07bbdd0248d48e375a5b" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e45d17373fc33ebf2ab8cee94717bb04429fb5e" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ad54e19c7e8da8b7ac387a4ee7f74a4fc73e1c" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee9ef464ad356c0384b396e8c1b1a29060a7e30" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d3d57b621f8778529f608ba1a57d6d5701d77f" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b52dc60795c511afa7d1c0dfb52b650273c3f8e7" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a6dcb72ea42042bd06fdcb3371e15a356df68e" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a2620dda88f448900b46c243d0588f7eade131" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2457348d1b0cb96832e010aac7172445bb502788" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eec2c5b2a93abab18348cd7d2ef75df134004bc" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92a21035003b8dbd026ce96257a200fd691c355" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ba74cbcefea838fcc3d2f566ee175a3625e54b" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797bbba8ba1716d6864876805c1fd6e20098dcd8" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ea8c4712a85889f4343b2e60c21e492072b802" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f91cbd9bdde00af0245890d430374e1958ca7b" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1059995e949d3b5e2c8b01fb02a925ef8bd7602" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7ccfec7d5e9a1a8b80bfc4d4e2bb271c82f3e5" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83b08601623b35d5f79b7bbb24e8ea9f8662799" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb854adebb7fe3b256c4eaeda7bdfb5d380a9b80" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7313c1e66588a36478cd5ca6fd99367012495e78" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6daffc8b765b85307f94a0078cad011be7ac81b" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe90f60f522b8dd16856581d7d338438e0903dc7" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfa880967d6633bc66fcaadf5af5f2ba5f51c49" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9799944150374605b2b0b7b3310945dcc9b2ba" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02e51de4bef2b3cef7dd3a97e83a2cc573ed808" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf0e3695fbefe70731553c8cc2c6010ba3d67a3" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35af2b67a11d07a4a1cd9107109a988800f4602" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf80edba0bab2ae1877bd4708f60796a590e016a" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a954c3480aec1820c94da5a69832aee169e8324a" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c66959b72af536d8e3a01426ff2ec3dd05c2ba" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c468fbac2f7f378f73946970f3d651143e2003e" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2e7d83208363750cd94103a33f3d1503378599" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e6ec4a2335ccfac08c1b9f7f057f7805210e51" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29327d061ad91ed61694eeb643a9641af41d8891" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a554869b0ed4846d90e63223391ecfed03bd300" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a4b7a377dd1cab2d67ae095668e6e138b1075f2" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d422d91ae49c184f429a561ce42d0a86aeab254" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd04ed07fff66b1d78565b41a4ecb05d0834ce1e" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="044a904e0db8244e502cffcec989c0b60dd89428" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;A1&quot;&gt;A1 &amp;lt;: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.PartialFunction.orElse.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.PartialFunction.orElse.B1&quot;&gt;B1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b197f34df36dae3e22f6885c08efac9405aec9e" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.util.Failure.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;default&quot;&gt;default: =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.orElse.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Failure.orElse.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b95c20a73347aee14eb96fd574fa69916c6bf8" translate="yes" xml:space="preserve">
          <source>def orElse[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;default&quot;&gt;default: =&amp;gt; &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.orElse.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.orElse.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ab40c5251787a1179b705d9624bc9d0c5bc0b8" translate="yes" xml:space="preserve">
          <source>def or[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.or.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.or.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eff243afaddf378e78384e05812590d507c40b7" translate="yes" xml:space="preserve">
          <source>def or[&lt;span name=&quot;U&quot;&gt;U &amp;gt;: &lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;pf2&quot;&gt;pf2: &lt;a href=&quot;exception%24#Catcher%5B+T%5D=PartialFunction%5BThrowable,T%5D&quot; id=&quot;scala.util.control.Exception.Catcher&quot; name=&quot;scala.util.control.Exception.Catcher&quot;&gt;Catcher&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.or.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.or.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677d684145d058d3a80a85e7181906f00290c602" translate="yes" xml:space="preserve">
          <source>def orderedHash(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c42d08253909a63685120ef8f35091f921cbd33" translate="yes" xml:space="preserve">
          <source>def orderedHashing: &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0ada78ff842d877e87859db5e87d12ad3e73243" translate="yes" xml:space="preserve">
          <source>def orderingBy(&lt;span name=&quot;orderBy&quot;&gt;orderBy: &lt;a href=&quot;treeseqmap%24%24orderby&quot; id=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot; name=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot;&gt;OrderBy&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28dfbdf2865b2e884c4f051686580710a1da738" translate="yes" xml:space="preserve">
          <source>def osName: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b522eccdb208acf9a09f3dac868bef6c0554dc42" translate="yes" xml:space="preserve">
          <source>def out(&lt;span name=&quot;s&quot;&gt;s: =&amp;gt; &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f0fff9c7caa3de72e360739b735ca747442533" translate="yes" xml:space="preserve">
          <source>def out: &lt;span name=&quot;java.io.PrintStream&quot;&gt;PrintStream&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac4ce67a8d0c5eb4bd00af5627a47408ef904eb" translate="yes" xml:space="preserve">
          <source>def padTo(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da2d51c0497c7eae1a43154b44bb7816c956e21" translate="yes" xml:space="preserve">
          <source>def padToInPlace(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f492681e49698816b481f34c3a7cd2177c2fe5a" translate="yes" xml:space="preserve">
          <source>def padToInPlace(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7645b52e874f443cd21c499230a480270cfa88f" translate="yes" xml:space="preserve">
          <source>def padToInPlace(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eeed20388992f2b1e654685fe5f2f536edc1a23" translate="yes" xml:space="preserve">
          <source>def padToInPlace(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7dbd1aa20d92e3a83d2ccca5d449732901f5cf" translate="yes" xml:space="preserve">
          <source>def padToInPlace(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9d67c8d0ba75f0705e7198e4be3692356256ef" translate="yes" xml:space="preserve">
          <source>def padToInPlace(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f630e7fa71e3f3c66c2d629599f75d8f98f4adb1" translate="yes" xml:space="preserve">
          <source>def padToInPlace(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af47a41e7f1151749a7fef006626020c65aa8fb7" translate="yes" xml:space="preserve">
          <source>def padToInPlace(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0d9b260bf1486d77f868cf1cc987b65bfa302c" translate="yes" xml:space="preserve">
          <source>def padToInPlace(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec9897718ff34c62b4119791044e5c63573d19c" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ad5e4a5efd9f60d054a6acce27a7a700b5a383" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db1f37fd63cc50378ecffe93416f1180cc989e9" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f671752d12244ccb986af410aad5359d301d6d0b" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d516297386d3f6a3f037340e21e9379c3a446b2" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fc84d049502baf95c59a602f73fc09b0620f60" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33539723aeae02a898a7453d61dfd55133647c0" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea20ecde2fff459ed43e27501630821c4312943d" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80cde05a3e7155e6369dec691c3b38d2a76f9180" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7faee0b5646aacfdc9a4ffb9c6e006715e2a23ed" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e97ba95bb5cc75c9c343ebb695c435281293be" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcf91a59fd327261fd3caa744e0d78e17a82bcf" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa006574eea62770f5c70d1fbb58013ac775e21" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eedc0fc254d7803073b7854a2a34b7eb814c5ff4" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001461af88d89a56830cd889bf8e5a3d9e96d29b" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a015783da5e39b3dffe58e8d14a3d5d0a334b0e8" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d490dda6bfcc920c2ea7cfa97fa3832e3d5ac0b" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93e8b73acb41bbacffefbd0f68ad2beb4287c48" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ba37f4927b2cf8bc253fe2ecbae2e933c154b5" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068d354a8a28f5d89532f90416419e43c4595d74" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed10ecdb02bc01b70e4f78261e85e8cf29a975f3" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e406b59640eb114746de8fc6357c83c756e8d7" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2bae3097f7d88b8cc5be44866c1bbd59c3b3a4" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4a2332137b73892ddacd796c7ac058ebe4cdff" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18b7b55328897915367f3f63fbd0beb9a27b460" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1005cef039aa0f00bbd9db2ae380d9e26648c8be" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c808181c8b3adcdd0f208e31300f449e8cdca913" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StringOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StringOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e5f93bc8e84c4b3b56bfd79662d28cda927ca7" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3700c2d976f07669f5563a577213534d348ab92" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a33562ba759f5a4a42c8db3da86c6d6ee67fd9" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fddb56e8429ee0f246936634040709e08185c62" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6beebec92a10abde2f94bd95e862a22ce318f1e3" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10df9916a84d968b7dc32542bf89d8efbc20852" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f496c28de27d77236159571b4d9861d07bf331" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbed3349ab72f229d7a89b30e0b2fad1c3c65cfa" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a68f307d16386319f54045c023005c37aed5625" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa336547ff1dcff8dd7cdad6f12c298dae1f7c1" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.ArrayOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.padTo.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f4cef8b43a6c2901ab0ea749ba820337bb785c" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.ArrayOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.padTo.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f860de2d55d8f2769e87426b1cc8884f7dfe74e" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64fdd6518e6d0a7e1d7c5221cd67192591b8597" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507b8eb68a1eae2460ea3947d85bd0a9d769464e" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dca4ddb99db84392060db25d377509310f4016f" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdd5eaa555091bedddec60d79d10f824eb2b962" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecdd9651305dbaee84e1360db8ad3db82e0e78d" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f210fd6731775843a6b9e8d5f54d5e65ad91326" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c11090e0d69a9582b06f4e5bdcd75385f3da0e" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83c514fbf294b3b31cf3fcd1b7cd2135593abab" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3598c0ff0fc895595d4fce617a801eaa2eae568b" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaf669bd85965c103002cef6c0fd127ebd470c05" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d349c80ed3f719a4bd95ee01e190e963037935fa" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18e6d1a89fa6e71ea28004020eb9eebc0dec9b3" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751699daf03253545f5136b746c0e4cf642d85df" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c101287c36b2a792f8bb0e352353815ad4ec2dcf" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73cf257b58546abef9477652cc6ed54243548c02" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b7fad3a93cf353ed1edd5e822ecd5987f36b08" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36421720a43ff1e52971d9a1ba4cd6ee8f01f61" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a846d198580efe32a6db11b04c6d483fdec403" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42044290c72e93a37bd0f55f5213427cb04d6afb" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0395b303fde35f579bf134c16da33a0321e0a7a2" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0d384b56def94d2e889f1b0087ab9f6345eb37" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462c48f212ba51f6dcd46f28187c6c53ad84238a" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a77c876eff436a2a91393e04ff73023c9662e55" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27be50f0320e4f3f80c040a3fa3c929eb3adcd6" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b41c833cc9f7c117717de6bb4ec03f67c6768d" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c828122c626bbea2f0ba0ae5385d129a6ad4a8e" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2930f381b99cf2fd4fab27004c1ff55102def2ae" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca0ccd635315ab4a61d191762b7c2ed4337f3db" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414d7b33f3f0e9a687a87f9fa27bbb9273337931" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbcaac29220ac1215347a452cfbbf291e54fd7c7" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ebe174381753683152a48ee639ef4a54752842" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812b9e4f7608d95db1a33da972b88cdef2a2a65c" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19dd8f716d91e0d678a23d5158f0a187491a485a" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72eea777fdd88f94164d93291a41ee5a7cda3866" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a1220251c95a93fcef35b24e8066b2f074c809" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ac835ecaedfaac875bf95ff0caed3039e0c345" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1071236e51a7a2f703ccc567a17bacd9673750d" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7fcdb2c8c5bca8a289d552542c7979108794276" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11d58f85bc474caebb17d23518cc31d2201cef6" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8999a81c43c593bbde880e39bf95acd92814ac9" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ae0208810201356ee9d65d55f08f65e675fa39" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.LazyList.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b49901e7901929bafb05dfba902cbff502f9359" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0586af8f54a7ce9e61c15df8183d5302dd9f49b5" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63279bb506bd880d1fc02e8a344c35704b571a9" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cb6a7b74932f682ffea86b682dc5dda6c93d81" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751de9394a89f1bb4fa5e8065466bcab4c260b46" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff55d807e2c0d5c6db95166fd2500a54e8706c3" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="846ba64ade3619f54381e2e3c6b414c925eac81f" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c175d5c53f364aa2855d25098513daf04b4542" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be893c0b6c53bf1c1574e4a19326731a6ab96cf" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f631d2463a65eed8d7add61cd0ec48a24a0851de" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0b1bcc5295af5f76867b096f21ae8c96eab1cb" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc98578cda14b48d1f8565813f2ff1a59e75f9d9" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61c256ec68a13dc0a3ed490432b63c2e6983cda" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b471682fdb7405ec4a4791fddae960a796882bf" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427b1502257f823fc9de56f65ec096ed054cf159" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a343c7085b949dd681f40905cd3528cb666887c7" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca25ba2d35ac454552ba88947f0fe4cd23fc684d" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b355ba26af8b547ecc1ae74885c6f3686f2d1beb" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4a6396c31b359fad5c80db428affad3e6f5e4e" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee368ccb6e79d8ff1b521b67de817dcad2c1f7ba" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e659c2d08f1abea75424963c68998d44eee7f2c7" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06ea3b02d1c971f17e5339681a87900cd9bd0d3" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629f5fa15d53a580a2f2cbd7c943f7ded7af8306" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71729823b815752079c06ee9fb044c7a39f502b6" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224d8888b2d809a1934391a30cb915804ea82fac" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf69fa903352e03e9a861ad0e39fd31f453a62d" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456751f4d6935f83a0e36de1650fdc323f069603" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043a8a5c4f8e083385e72ec360200025379990bf" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00be1087a154720b95b025127d3b1219e6890c4d" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2243079df6512dfa746bfa19923fe5c75cb3d44" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebe124a94c0a5104d1d93663b980fdb71034e19" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8b64e685e5fcf67393f665d4fbfca41d1d3ded" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bded3eeb79010080deda73f2a0137b693b2ffb" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09af59f5c4e71a62a966abcfca7e50648e1d7865" translate="yes" xml:space="preserve">
          <source>def padTo[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.padTo.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7544d8c29ccb86a5087d2a0e6c6a04514ef19571" translate="yes" xml:space="preserve">
          <source>def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276636e3a4ed939b431df835e7f9679c625f56e2" translate="yes" xml:space="preserve">
          <source>def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c699c7ef4c7d73f7e558c53c48d185f6f9d8ee92" translate="yes" xml:space="preserve">
          <source>def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b2ce8ed36da72a4d22b97914e254a5b5314d5a" translate="yes" xml:space="preserve">
          <source>def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19779498ecc362059797e6a3f3ec8e28188764dc" translate="yes" xml:space="preserve">
          <source>def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70e2ede749b881d2118219330cecf410feddef90" translate="yes" xml:space="preserve">
          <source>def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652979ac4938d4541240a994631b7b33c6a86ec5" translate="yes" xml:space="preserve">
          <source>def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8ebe5023b00aaf98dde13091857ee039e38acb" translate="yes" xml:space="preserve">
          <source>def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916723f72c2bf763b7217ca5f2afa91b75f5a049" translate="yes" xml:space="preserve">
          <source>def parseString(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b08feb5b673e7f7df4952ddedbb2e610117fdfd" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519feaf1ddfcf95acf14d4db1b995222844111d7" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;], &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98877b93b88cfeb46bf3085726874a74a628898a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d6ade8560520d25ae8c3aefdb9e243aa0c64c9" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2b65cdfeef486d9fb4aede1b9776b544c7437fa" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c77392b8b34b3c87d4933d7fd60c0224863b83" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977a5df5cf1ecea29b64bd8e0ff3795354b9f621" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7857595cd7a54d8520671337da446e9461d4adb" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7c36aefc53bfe654fbcb0b63cfc2100be0dc2e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c7f1afb13c95fe4d749e9c9689a22b61bb28f7" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3108e3ba768c22f4cd7a54dd01323b3b06250d31" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91581fff1303b67d4c5fe4d4271bf5e2e9d6cdbb" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31860aec0cb4e5b9ff55c7baf4ba84a77256d027" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193c03e9448532d9971858551ae5d382db71d919" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41efadcb2abba11f705801f496f445ec272b9612" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fd0e567d098bc4ae8a6e8672bf0a3152c6dfd8" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;], &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869f0d20463404917ad737fdcad5f8444dd8a93a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a451cb08991a8ec8e26e09d8fb84203aeba961b" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a070af9d2e0004aa46844b1607ebe44b9fbcd2c4" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2ee826191c2b8dc1aa9db20b232194bc823904" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, V @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e3516510699d188ff50dea6fefb667ae1d305b" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810e2c3a809d505975fc7fdffa4af371ce250dae" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0edd4c59eeca5fb94b5c61da753aef553ea58b" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03959ef40db03cce74766763f0c671123009b2c" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3845d43f0a508839ef0b6dc2d8d1a9f64cdcc00" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a025341fb52769ddbb2bd17d4d2e1f6349b130" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ec7a39df5db1092e360baca743910bb7cec500" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4623f8b97cca58ae877ddb8cc56540fb6f6b730" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a19b4c6d92a1d330c6b4d2620657884ed446cc" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e4a393bc2da68e69d02832c98dacb7ad51e996" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79e3c556b50e127c812fbf6788a6d3cf8c71929" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4655c762dc9f6e56279880bd29c59d6be846aee9" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c74b999129521ab2ff10a8266a203b3aa9ab4af" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0c85de6622cd9801a01a8d17d0da7ee8b3926a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ba64716c093c59a2327d98c181c017f01850dc" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940568337a8a52ec0c484a24be9d1774155e9c77" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2319cb88f4830b0ac8605e9cec3cc20c98c789cc" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e8e4459271ffd02decadb4292a64ee3b09d4f2" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716973ab3a9672346c327172cb987aa2dbdd87d0" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee81a2a86a3fd30a3b18f84c36a2ce27b3e8541e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b843101ed86cd94530d08e07d063fc3b77521c6" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf18f5584239955a931b127f9f4a709904dd4b5" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9b143b72ee5e7f6d7cbe2fb0a0f30a5c9a72b5" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9985abb46dbf30cf7d281de7ec8517e05bed1b48" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27fef37ae896cc208e8c48b66d01857d17d9a4bc" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2239bddbe4e2f7707b2b701b87da8feaf9679147" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2f44176b8f5631aca044e80f8bbf1a3807a65b" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad65bd8bc4b1e0ab3a2495c177a9eef7efd11163" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0667691ed28d900d063ee5e10064b14eacf8d7" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa2acbdd1576fc250fa526b1342ab0de83a3354" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968915c2cd3720c5c13e97dc8a9333caabbd83b8" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550a270d581fe87645111262b987d8313d95183d" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc17668e0aea5af6ef75173dcc9f6f748aa4082" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93dd8110c9017379c8978469e63cd088124850d8" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3d773b7b4439a4d8029aafbbe32c75bf32d4f3" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47990f8b62a4e3f79b3aa9f1fe94aa9af8283f46" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc9374d075bdcacc007f8732afffcd7c947594f" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363dcc94de191fcc166c9775349c3e2145d90004" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdbfe45b29063e26bda84a262f603e190754a57" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]], &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc65cbe798150a479cbd1c1eb49a28eaa902dadf" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;], &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219cf26b40f314fa0081d77ee728953c0cc91e3b" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8276fa7692b9d892127cd739efb3cb562cb6418" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499d413970f3760650c6d68b448bd9f825e3d1d7" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e86beb0a640d95648c2e79be3d6c2d56b17ded" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f7e1cf363ccd529d57346f70167607a832cf55" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208cafe6158610b75c3bf4a4e8a80f564a258d9e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;], &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f105a74dac1e7a06cdb8e9ec5d669b4601dd645a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff09d9c311798dc22408051052b80fcf1b59749" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460b6fa19bfc8ab03c01f33f8a79959528909b80" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74f992f9a148e790579c72247c114ea21b964ef" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf6720cdf4988318c73e7bb92b40809f2e54e96" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399ea1300c864f46ae326531c5d572fcc951598f" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6683c45a395d0dd9f9275ba9a782574ae3d744a2" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;, &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea471da51caa69311f0617e4deb5310b77bd147" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;, &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25db66ef0f5a1715300a9b0e629310c0c535fbc9" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd42b6a13aa43af730961197ab447ef4723b198" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002c57c67543a0342e7c5597f54335ce37cb797e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e762bbdb7c8357d321439994eaa773df104db1f" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580220a740dceba996a5b65da2393b66f2b11ef5" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff4853282f8c65b72247c616918827ce49c85ba" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9c0975ad0e90b1de6730408a2c4251ea5e6928" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679599c10a5eb505d99316f29e3cf7e30351efe1" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28f6964f570df8f388065e2eb65ad7d5bf2fdcc" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab13e4b42855067e8b8339f5185b75ebc64c417" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf94501192a3fc6167524b61d4e697db8880a41" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f903cdb26339338e69072a754c59103a6016d681" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d70ee3fcd0352306c6f3b7dc7a432a286b1778" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976c0fd352377513079512233b417a00e4b0f7cd" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;], &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0e8f59e2d99867a2ed033f03cb4f1db85111d7" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9135ff58f7cdfa1e62d3bcb179b857ad10d8fe51" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f37606ddf0cc37569f018dfeb2221d1d08f4e1" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422be5ba86a2944ae0de01b4ace9a1be7b245a0e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ec6635fd3bdc62115fa43440defe06d4ecc796" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02913ddb5bf1869312dac5c429fcde39ea38b973" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d303b18b7d6ce40eca219571c3bda3cb24a35862" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f535e85a6a3660f245dc81e89166eb792ac9db41" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;, &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8204306e38513a2db3e8b613aec0ed52094a882c" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2793503e4df3b54cebedd99f0440e899320d872" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;, &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922144d2d14d32cc93f52ec894f7e4726f2e21c5" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d6baa91adae74cd264759691181947898c3173" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;, &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4b3e87bdcbd92e2f864afc92ed37aa02ba4c36" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e417a89ec3fe95f60940d3fe8d61f3e91c23ad2" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;], &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed7f84ff299b95ca3a26924aa0d6debf023dcda" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;, &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9ff899db1e9aebeec41f50cd884b17403ae47a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96620d168cac3bd525be74842d684478a6d56bc7" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdf7597a9bc745652b89126392b74ebf8dcb8e3" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab687b7dcd0c026dd6cb01b6b92a1b80454d078" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3217e70b71f4e3969f12aac6d8afa502a89535" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee08b7ec7d55e7d54e0157386fc324fa23810c6" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2acf195afb8e353b95f5a26772748fefa449ca" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f680120ebb62872fbaa92911951aafd51a3b3d12" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f18536421e79542b18f3f9de4255ce0eea54f89" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf3d7432f819873be0a83bbb69df5b6ecd80b39" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7e0740f69f59d4270d5ce24e5c0e447eced9d2" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b746411b70e0cd322336e73a1da2d9a31e35c6" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51f9050c5a78d9789d7a83821df720df0b24d68" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99620eacbd79361d5c0c3b03bfec62715a32f79" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d1fe7f947726ae7567922dd22b021b609df6d7" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc4df49308efd2cdfd55d30aed332ed6c705c9b" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fb9397815a973d1f0336239a2d7440811fa97b" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bafd3f28b29c01e22fb018875aefcaf25b72cf3" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b74eb3862e31a0b0ec65b50ea2f495afc01ad3" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c650fd2cc9779e0ef7f1f9f751374991e2493ff" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c79649c1ef450ce56c60879e68975e91b91b5b9" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6e5d4c4fe1a94d50d54e06523ef1feafb51ea9" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2831d3e3e5b2598e81bc3be23754de7fd9351e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a5e4420f350e3ecd0664b00603e8ebeeeee7f5" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d55b1e01ca7234fb8fb1f80122ca7a554f26279" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5306dac5a8bdd74c4dc99faffc1bba0253c596c" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618ebfedcd36d73d7bb20aff822a22b1ace05813" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ff47345440c7d76a3d2d72338c5d9c32dc378c" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b4d9625a1a75569074ba361a40cc460d76ea65" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0eff86fbca2e419d627a3362d56bd94cf8e38e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cff26e3389874cb02e922f4b5dae3a2060fe6ac" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fb9d3408be04ce6f2c5918ff83a266be6fcb55" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87af9c2cf3eda09afc19d765d5cfa7917568dc04" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c247be588a5c54b822b901da5d9b51300543a1d" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c7c8954f2b34d104442a7ebd1b2af287d3a73c" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ead8810772fa6116618d6cd5073b12af3056231" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e0c946d6898d83f76a0bb0f183435421037a97" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55bf9058b45248f65bee2cfc1cdf10e84d8e5180" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67355f9e916e0410c057c1dcf35fadfcafd8cb1f" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3847773c6c6434a47d3147307455c3a60857b6" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60cac5a3777a87e5a3b0c866a0962ec37e094902" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24cdde43a02ad6578bc8446912a1a8eed46cdcb6" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4699f70acaec3414e40b89ac2d1911eb4d5883f7" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d238e1c69b8dd3a24bcf6bcfc27637e4872eded" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beed2327c832dd549c578dd29556c3e02920c93f" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f8d1d914740a35db4df8d2b4fce906b868dfc6" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d707de3efa0e8d59d556b3be5d67c5e08dbfb8" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6076705cd2b3219697fd19846a865288d33db4" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdff847a6ac6ceb04d4a4c9c5ff9d4b1c07c527" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d42d7cd97472106bb13c8c680b8031fbeec3bd" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3223e299e9ab0393c08f27b293664c761fe1222" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af748f38c6db71d69f2a5a9907d8118fff27948d" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cac11728e796f9d0efb778a9e466b093e6c048" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a94f2a942c20d604c0ddc9516f5e8bb2235f89" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43f6d2295cd2ed9c537a587f6e70094e31e60f8" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance], &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[A @scala.annotation.unchecked.uncheckedVariance])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b670a21e151b1555ac5f9edaadc328bb6e65b9a9" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6224096291779ce26a058df297cbadd7aaa894c6" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e207ce04a8dcdfacbf52480205378351d8cdc6" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b1b8133e072316bde32f9e3d8b9071d182b915" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4ddc1b5efe6aed394a8222d779dea53dc8b65f" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1bde48f9fe58f3cbc1384651659c9901956253" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ecca9fbe81eb3bea0a214d917aecdf89991add" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ea5bbff81c5b9e8c9fcde827980c53bb2d48e6" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094b0eb0da0083e119ff6c65de04c16d243291f7" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93077f38447e270cd28ca5be9370bef8f191ad5d" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dba1e06982262cedef2a1b9d58c171742e19b84" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6c98e3abbab62801e493df0215344cc99b4d9d" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0d507c11aa632bbf9d3a8343755f34fd8add43" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1df3df9365861ca6f542875967fd1abdc4cdc67" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5384df11cc5a68685d48d7bd651ddcc324fb10a5" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0ab80f9eabad664964520ff86e4e2f92cc7483" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddef6ec7cce93c60a83f68039219335460dc7da" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e0b0a2f038e7a8dc588cdcdf8e1b7c64a227451" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e20cb512449e4dbc02b176afeaff93c052bfd3" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfd9b792a65529c8da44bc3bf9d61e36339924a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154dab5956d87c1b4980042b56913e4c9f3b1876" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3ef5ee69fa1cb8e55c652733f903090d451cc2" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bed65daf16c8f0b5d89c89a97cef45454f98c4" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3379baac389c42041d3e1b7ad4812e8a40358b86" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197ed06f8a99cef138e6ebd04cf477921c5b0daa" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeced12092bb7c7c728b020f8bb07bbbc1847690" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dece23aa4d8f8139dc2226dab7da49e65638ec0b" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198a4c350bf711617b26aff71ef7abbada914b3d" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09924cd378686e30168c271302c28f7f9f69ddae" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f06860f9bc6359d6534759d735a4ac56779e334" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59b8e861a8af97f99b1c49b95dfa2da3aa57288" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c045fe3810a77a67b63ace90ef114bce8cb73ea" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57ceacf767e72e0b3f88359e0c4ffe7353d9315" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27901bc4941ffe28bda75e416295be8b8d4eaadc" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ae4b5430a34a383aa1b0864db4abf8f9e0890e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84dd61892a310d62dc0a245583490e442a7a3639" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5484d7f7c77a93531ab1da4de8867fea34ca6609" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18379efd2090f42ae24bed2de24f7b6cb89a191" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb9ef27e833a58ebab9f506075375420d967b204" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f686cffce14ffcccb454377872cfe968eb85087a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1312b0a6e1f3c9c57ce32552420838c16aec2918" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2f27c1ed00dc6f74fdb422e07966689e8f9b19" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0dd483ae80e4f3f1be0f787c3e68994c42b7382" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c72e2681a6d4e5e7a31e4f7c8ee1f8231695e44" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210a123398d094b87b1874f8f1dcf09513168aa1" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d4f0a8c8133995958c359dfe38d8e0499c3058" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1961dbef15486365ed79656da0249d22a215a5b" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6fe6ab4c03fba063e042a58ccdd0952fb7ae7f" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74cb5c78afda2b22dd73e42fb78f6fc2ac89c2f" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3f6b101673d1d6a69a10b4605e081efb69c6d9" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a332b92c6f02b7f0e71cf47a0d753d56d120a1" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c2e2ed417f696fd7959311d343cb756097c0b2" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5281f72b509d1e243f266ff399d94c271270fa9e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e6410c3cbe523f04eadb768cb8db6ce8967a3a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2229d827500a1a835bc4d0e6b7fa6b6c0d80605" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ac9c7f12ac62c59e1fe26d3b2ec748957569b3" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79b9c9e8469b6f7df8b5d698d0c2ca8a298b4538" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51639250578e257c4f73f9cf1020cdfe4339856" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32e322ad978ca137651d4152b212da8cb3d9478" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616bf3d3b416c89638c3ea0933d24dc8622e896a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd413c520d15686599ce940216d6161e8b551970" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74fef59250fc34e18c824ae54794b1f23ab87a9" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0db7d5109dd18f0ee6395c3452c4e4c2ddd1d4e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14297bc5afd94b87ae6193dfa61a91a16380209e" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5010ea0774d4a11a830addd20871755b826fd309" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e29155b8ff3010a2c678a38a15d83188c3aa5803" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5109f312bd9355f65da9b3c860ef74d028ebc3" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac2289bd11374400f32e0e40b34a34e1c73adb9" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4905989b5f54bbe206e252914cf6362a524af332" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd37083b7fd1658c4b77ad5a6d3532960f45bcd" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2690e1fb3af2498ff9163268615987555dd3f7" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8932b558dee0be5e5950eaad15b31886072e9a43" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2ec4493c77a3f91cf5d3c7975652d04a9195d0" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdbc9ab3dab053931cb026f09725b375f60292b" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a32748245861876394bdda3efc38530af54bcbc" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7a160fa3877c5322f574105cfe6f5e9d6729dd" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685eda3a02328a6727f4567f02f0a46e9611b658" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76643fd7d3b3490efbe5976aee2428be607e0f3" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c284aa2d6216314118e252330fac90f6d8037ab6" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94efcacec7b793ee8e1aefab4bd04dbe653626b3" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b182815b8a11c3f5549246c453aa32025656c4bd" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d775722355a838a015e9977e0a54cf331dc725f" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb767f43240be47cf2c95f0430205f8be87b69d" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1523d0d2e2cfbd578f4de12e68083135a084cf0" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a6166357615407e48772b05c0a565b1c041084" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17f148751438009535fe74aebf3a055644ac3a5" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a2af4863f4605f84a8ff46a6873f41f7ec3e9f" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;], &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de97298f5060e4944bf5e6f937fbd712266c9b5" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713d698040ad02262471afd2b935df241a5577e2" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d276d26670eca1efe7fbaf8f1d744217fd00befd" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb15f5dd4013f0b061e400de023e012a466f49c" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ddcae103b48cff92f6faaeb52347100a7b181a5" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9536d92c63caf4f857213ea1c86ac636e067ce" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7aa47833270289646666db86cafdb0bb235552" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db20ddb7019736a35be99118c60413248da78be8" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8b63edc7691ddf521016fd6618973a0f1ec094" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bec9f44c4f06de4120fad8193118ab17f9f9a1a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da16f9a5c8534e7f0e28c770ac66f949f2c54759" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c449dd23fe9bca62c889bd297a53d1a53ac13a" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19915067f000678a1b3a14e75bd0cea9325b7db" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;], &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8869f5e9e8ff80d5b664a9f33d17aa85ec1de4" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15013d91e914ea04744a449d6609c312c0aeda3" translate="yes" xml:space="preserve">
          <source>def partition(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): (&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;], &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a38278a42a6c009757afaec880a9a222c6672df" translate="yes" xml:space="preserve">
          <source>def partitionMap(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8b4f5f8b256f22c52fd9b350ee1ad0e6e2e977" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e29bcbfbc1f5596f4cf00b383d4a2775eafca1b" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f97ac8417d829296e5f4374b023e820398253e5" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15c1deb710d9d4495404e76d2b7bef099ebf819" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7737cde4ee8056dc836f0eed9435332c078c85" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfe782db5a6657ed3722ad55d5bdfa98e396839" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b87923e4185c1401ccce0875304bde928aab4d3" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c21cd25567f033cb972923cb56969950929101" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd510e3c51039000ac844c233e55cc77cec79cf3" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4df8dd08e35ab7714298298a4b77b4f4936c28d" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad128cf681ed42fa490392ac1dd4a94f5a7f7d1" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cc698bb82084010682bf771680ae03e35d4a48" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ddff53ae143699f331856d2e6d6fd54afa3801" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9445d0fb547055295280127e1ad88bb23f3833db" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e2008c0101e8fd2b27f5d735251e2fadca3535" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cce4697621dbdf14284174f0a9733fbc2e4054" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4266633461efc97c301ffd9d8899a418ebeb31e" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e71c17a075261efaeadc633709155023dd133f" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0501912814e41f8858c9d1ca562944879dd13499" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a3de6e7fa029392ac6d4cd29ee9004ebf921d7" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10aec68640bc9399402cac94d7f8c4402483e28" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab02b7a0bfc53fbd7e9b88c820d07df0443cce8" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ab6645006bf2444d9033e84a32195a1e0966ad" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8231d7fa61b1dce6a26aad1cb53784c806f7e02b" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c767801caff68960f0626cba19b368b8a9ccb653" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1aef03feb59a63dae024d6dea9950f39277a80a" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651b5dba3ee6f474f07a364d9cd469eeea6b3050" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f062a57ea7986c705b8bb379d41f2ceac370ffd" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f4f28d5cb49d7f620c8f71b2c361641fbd5eaf" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45dbbc3053baf491bafdb4497e0021f2db97ddea" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900b189df9d566c390106f2585bc9b53a55e0617" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137c0098a36c719954d5cd20a29ee5ce5888cd39" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffc773f03cddec7266d34efc007f63e9ba01d55" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6cf7d0071be23489e36690630fcd8736b2a0ea" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1bb2a566872630e88ed8a2d9bbf65df791f356" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb76cae92484f264635951bf6cbf367a80c22cb" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2b9382a7d4fb7227f327d2ac36a72280ebc9d1" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afff25b398318df0d6f96518cbfeef7d72e65b39" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81d37e4c6eec3a88533f7fc60f3348d9d26b71a" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8a3365bc07bf9d134a81d7a0ee0fcf8716b8eb" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f14c33e98f358ef1e95c581481d917e4822222" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458ea7ec97c4f5169ce0f2259cdfcd4c8fa1818a" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21bf5dffaee90b43af1799c5bc59dc9b0c631ebb" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d61743cc7baf847eb35cee7d237cdb815f2933" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a764e658591e7a689ff3cb30ce1f83e4c6da1647" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25494d5dbf3f6a5793ca4eed8ac007695bfc8d43" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186be964495be432d858e6075bc1844bdbdb3e93" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7ab54a406be2ccc2679629664247815d81410a" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb370a91fa7cf3d38e510faab266dccd8939f03f" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32eb4140329b9f2654ee61ced6e4f15c64f59350" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c5035cfa71a1a9c58fbb24002ef792c2e1c226" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06acedfde5109c6fc307761234884ac88fcd5a9" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fb3ebbb70d43b824b3dbdd0d96835f96231645" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a5079eb09886e30ca477e9b7fb013dbe950752" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d254b283377a058f445fdc0c585fbfab0554ce" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f343186af4fd90648ff340b5b09061f8007f33a0" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e5480804017f641d70d9a9ee95b749d3895870" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a26217bb25b5f85f2fc9cef0e27ffb9c7468a1" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48654c71d5b4006cfa79b1e1a49fdb2933ea1f25" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a752b6c86eb15e7c77e1e8604b0a456ad48cd4" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbb107355b199accb3191915ff408fb79f10312" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321abd236624debdf62141f7c5655d63593ec3d1" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7017f6bd045d39367f000ef6e747c4ede76b1b61" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1914a0d4385c09f0a8389a13cf61e84b3ae146d1" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b9bfa0d8d63a087ca390caaa43373a37018bc4" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff7d0732db4f52f222b1caf5a0827393b30ccef" translate="yes" xml:space="preserve">
          <source>def partitionMap[&lt;span name=&quot;A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;A2&quot;&gt;A2&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;): (&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A1&quot;&gt;A1&lt;/span&gt;], &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.partitionMap.A2&quot;&gt;A2&lt;/span&gt;])</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
