<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/llvm-minusminus-emulator/">
    <body>
      <group id="llvm-minusminus-emulator">
        <trans-unit id="76ffad8aec5881477ed74f4ed186db75deb71148" translate="yes" xml:space="preserve">
          <source>)
should have been added to your</source>
          <target state="translated">)이 귀하의</target>
        </trans-unit>
        <trans-unit id="63f11936fef08603894752b4f63f9962411ab7e9" translate="yes" xml:space="preserve">
          <source>) where the
parsing code is located. If does not have permission to do that, it
still parses your LLVM code; it just needs to rebuild the parsing table
next time you run the emulator. These warnings should be safe to ignore.</source>
          <target state="translated">) 파싱 코드가있는 곳. 이를 수행 할 권한이없는 경우에도 LLVM 코드를 구문 분석합니다. 다음에 에뮬레이터를 실행할 때 파싱 테이블을 다시 빌드하기 만하면됩니다. 이러한 경고는 무시해도 안전합니다.</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="fe438eef270077a35d7f3ee5b929d1837276d667" translate="yes" xml:space="preserve">
          <source>, etc. to use Python 3 on
such systems (assuming you have installed Python 3).</source>
          <target state="translated">등을 사용하여 이러한 시스템에서 Python 3을 사용합니다 (Python 3을 설치했다고 가정).</target>
        </trans-unit>
        <trans-unit id="aa527090967a2c10d5ea8b860b439217ef5ecf51" translate="yes" xml:space="preserve">
          <source>, if you
want to check types of your generated code</source>
          <target state="translated">, 생성 된 코드의 유형을 확인하려는 경우</target>
        </trans-unit>
        <trans-unit id="c6348fb5ab707efaeb8fba639b6bf716e9c4537d" translate="yes" xml:space="preserve">
          <source>, of course). In the example
above, I need to use the command</source>
          <target state="translated">, 물론이야). 위의 예에서는 다음 명령을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="02e8acc99fd502b05611295f8e527a3188de0a90" translate="yes" xml:space="preserve">
          <source>--version</source>
          <target state="translated">--버전</target>
        </trans-unit>
        <trans-unit id="ee6398e41ecf59cf9326589d7b9eed72c24c3160" translate="yes" xml:space="preserve">
          <source>. If I just used</source>
          <target state="translated">. 내가 방금 사용했다면</target>
        </trans-unit>
        <trans-unit id="3cad6722787de13ae440016e89391b38464a2553" translate="yes" xml:space="preserve">
          <source>. Many of these
functions are not implemented in the emulator. However,</source>
          <target state="translated">. 이러한 기능 중 대부분은 에뮬레이터에서 구현되지 않습니다. 하나,</target>
        </trans-unit>
        <trans-unit id="9c1d4653e8fcc25331bf45669de0831510549d65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#id2&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="030c51a4836be890dd48084ba03967327d7b9ca2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If your generated code works in this emulator, but not in clang,
your generated code is incorrect!&lt;/strong&gt; We, as TAs, will &lt;strong&gt;not&lt;/strong&gt; accept
it.</source>
          <target state="translated">&lt;strong&gt;생성 된 코드가이 에뮬레이터에서 작동하지만 clang에서는 작동하지 않는 경우 생성 된 코드가 잘못된 것입니다! &lt;/strong&gt;TA로서 우리는 그것을 받아들이지 &lt;strong&gt;않을&lt;/strong&gt; 것입니다.</target>
        </trans-unit>
        <trans-unit id="2268f5883546fbc253b6c3b140bc38e77256dc84" translate="yes" xml:space="preserve">
          <source>A simple hacky emulator/debugger for LLVM--</source>
          <target state="translated">LLVM을위한 간단한 해키 에뮬레이터 / 디버거-</target>
        </trans-unit>
        <trans-unit id="ab98aa98446d15c2733d04826e73d287865c61b4" translate="yes" xml:space="preserve">
          <source>Adding a small script to easily start the emulator</source>
          <target state="translated">에뮬레이터를 쉽게 시작하기 위해 작은 스크립트 추가</target>
        </trans-unit>
        <trans-unit id="3a4be7155bcffba0850c80a370bc5c6b34c37e74" translate="yes" xml:space="preserve">
          <source>Alternatives</source>
          <target state="translated">대안</target>
        </trans-unit>
        <trans-unit id="61883f5451d6ae289186730ab120c1bab89096f4" translate="yes" xml:space="preserve">
          <source>As with the Python version commands in the last section, I have to use</source>
          <target state="translated">마지막 섹션의 Python 버전 명령과 마찬가지로</target>
        </trans-unit>
        <trans-unit id="976bf73bfcb1184cc5b80a52615ff75dabf9c109" translate="yes" xml:space="preserve">
          <source>Builtin functions</source>
          <target state="translated">내장 기능</target>
        </trans-unit>
        <trans-unit id="ae0b47cff4ac62e43c2e2e18e819c1131bd9ac26" translate="yes" xml:space="preserve">
          <source>Downloading and installing dependencies</source>
          <target state="translated">종속성 다운로드 및 설치</target>
        </trans-unit>
        <trans-unit id="75a39bed9d12d2d8880929ee90f542fa3441ad52" translate="yes" xml:space="preserve">
          <source>Downloading the emulator</source>
          <target state="translated">에뮬레이터 다운로드</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예</target>
        </trans-unit>
        <trans-unit id="28ba7879d4490733b4eeb8d6bfae2216d542cbf4" translate="yes" xml:space="preserve">
          <source>Getting Python 3</source>
          <target state="translated">Python 3 얻기</target>
        </trans-unit>
        <trans-unit id="11b6b7b788119bbd5d08de3f6f48d5f925e1ce85" translate="yes" xml:space="preserve">
          <source>Getting pip for Python 3</source>
          <target state="translated">Python 3 용 pip 얻기</target>
        </trans-unit>
        <trans-unit id="4f11111bfff2b459fe322eeeeb45f8bd78953c0c" translate="yes" xml:space="preserve">
          <source>Git way</source>
          <target state="translated">힘내</target>
        </trans-unit>
        <trans-unit id="03a48d880245186488cabbf9fadb55a80cf790b0" translate="yes" xml:space="preserve">
          <source>Here some of the known major issues/missing features are listed. This
list might be updated, should the issues be fixed/the features
implemented:</source>
          <target state="translated">여기에 몇 가지 알려진 주요 문제 / 누락 된 기능이 나열되어 있습니다. 이 목록은 문제가 수정되거나 구현 된 기능이있는 경우 업데이트 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20e8d6c2f805e9fd3b348957d1d3c4d7487a4741" translate="yes" xml:space="preserve">
          <source>I have tried to fix this issue without success, so hopefully you can
live with a few warning messages.</source>
          <target state="translated">이 문제를 성공적으로 해결하려고 시도 했으므로 몇 가지 경고 메시지와 함께 살 수 있기를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="db72e25d672c6166516c920d991f324556f183e4" translate="yes" xml:space="preserve">
          <source>I know the name is ugly, but Python packaging was not happy about the
double dash in</source>
          <target state="translated">이름이 추악하다는 것을 알고 있지만 Python 패키징은 이중 대시에 만족하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="d110e1380b6cba5f8c59bf34a9e4c1db96734754" translate="yes" xml:space="preserve">
          <source>If all goes well, you are now ready to use the emulator.</source>
          <target state="translated">모든 것이 잘되면 이제 에뮬레이터를 사용할 준비가 된 것입니다.</target>
        </trans-unit>
        <trans-unit id="a69d1203c71f288d3d9f3d0719bb4574a5e4565c" translate="yes" xml:space="preserve">
          <source>If installing the emulator went well, a script (</source>
          <target state="translated">에뮬레이터 설치가 잘되면 스크립트 (</target>
        </trans-unit>
        <trans-unit id="fdc540e0af9eda2a17a4f3dd6a096065883e3153" translate="yes" xml:space="preserve">
          <source>If one of these commands gives a version number &amp;gt;= 3, you have Python 3
through that command (without</source>
          <target state="translated">이러한 명령 중 하나가 버전 번호&amp;gt; = 3을 제공하는 경우 해당 명령을 통해 Python 3을 사용하는 것입니다 (</target>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="translated">만약</target>
        </trans-unit>
        <trans-unit id="83eff84f87d0a3f3b0238576feed89b498924c9d" translate="yes" xml:space="preserve">
          <source>If you have not already, download the code.</source>
          <target state="translated">아직 다운로드하지 않았다면 코드를 다운로드하십시오.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="05b374e8281c39491d38169613b6d79482958eab" translate="yes" xml:space="preserve">
          <source>Installation includes</source>
          <target state="translated">설치 포함</target>
        </trans-unit>
        <trans-unit id="0d798c0b1cd4a6d135dc1e4671cde5f33dab863b" translate="yes" xml:space="preserve">
          <source>Interactive mode</source>
          <target state="translated">대화식 모드</target>
        </trans-unit>
        <trans-unit id="f1130babc0d1ca17a68d20c353b77f33f07392b5" translate="yes" xml:space="preserve">
          <source>Known Issues/Missing Features</source>
          <target state="translated">알려진 문제 / 누락 된 기능</target>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="644f71b496a4e57b4c4439d2d57eedaf8e642d98" translate="yes" xml:space="preserve">
          <source>LLVM&amp;ndash; Emulator &amp;ndash; A simple hacky emulator and debugger for LLVM&amp;ndash;
Copyright &amp;copy; 2017 Casper Freksen</source>
          <target state="translated">LLVM &amp;ndash; 에뮬레이터 &amp;ndash; LLVM을위한 간단한 해키 에뮬레이터 및 디버거 &amp;ndash; Copyright &amp;copy; 2017 Casper Freksen</target>
        </trans-unit>
        <trans-unit id="2fa43e8b8d68d7f075eca519857f9ffb56e8e0fe" translate="yes" xml:space="preserve">
          <source>Let us say, that we have the following LLVM&amp;ndash; code in</source>
          <target state="translated">다음과 같은 LLVM 코드가 있다고 가정 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="7154b2cd2b801bac600a77b82332e951fc590055" translate="yes" xml:space="preserve">
          <source>Make sure that you have Python 3 and pip installed (see above). Then
install the emulator by running</source>
          <target state="translated">Python 3 및 pip가 설치되어 있는지 확인하십시오 (위 참조). 그런 다음 실행하여 에뮬레이터를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="8b3b6002eb3707d728b2a676bbe60252eb40fc03" translate="yes" xml:space="preserve">
          <source>Many type annotations are being ignored. This means that ill-typed
LLVM&amp;ndash; programs might be emulated without a problem. This can give a
false sense of security, so always use a tool like</source>
          <target state="translated">많은 유형 주석이 무시됩니다. 이는 잘못된 유형의 LLVM 프로그램이 문제없이 에뮬레이션 될 수 있음을 의미합니다. 이것은 잘못된 보안 감각을 줄 수 있으므로 항상 다음과 같은 도구를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="23d2345ba0c20304b1c6fb2b9fa0cd86fa84e263" translate="yes" xml:space="preserve">
          <source>Not all parts of LLVM&amp;ndash; has been implemented. While the main set of
instructions and types has been implemented at this point, you might
hit a &amp;ldquo;TODO: Not implemented yet&amp;rdquo; message.</source>
          <target state="translated">LLVM의 모든 부분이 구현 된 것은 아닙니다. 이 시점에서 기본 지침 및 유형 집합이 구현되었지만 &quot;TODO : 아직 구현되지 않음&quot;메시지가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3d01a57821410aac2b9b5d7b451430a74cce9c2" translate="yes" xml:space="preserve">
          <source>Otherwise, you could try to install Python 3 via your package manager.
Depending on which Linux distribution you use, you could try something
like</source>
          <target state="translated">그렇지 않으면 패키지 관리자를 통해 Python 3 설치를 시도 할 수 있습니다. 사용하는 Linux 배포에 따라 다음과 같이 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">개요</target>
        </trans-unit>
        <trans-unit id="7298cb3c0627c39d5a56a0f3c7312249da99f3b0" translate="yes" xml:space="preserve">
          <source>Pip should come with newer versions of Python. If you have a new version
of Python, but no pip, you might need to install it seperately. You
could try (depending on your Linux distribution)</source>
          <target state="translated">Pip은 최신 버전의 Python과 함께 제공되어야합니다. 새 버전의 Python이 있지만 pip가없는 경우 별도로 설치해야 할 수 있습니다. 시도해 볼 수 있습니다 (Linux 배포판에 따라 다름)</target>
        </trans-unit>
        <trans-unit id="00f1898e93cbc1a3892ac2f61a92ef65ae03c47b" translate="yes" xml:space="preserve">
          <source>Pip way</source>
          <target state="translated">핍 방식</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="12e0e807b92c5e5cb54ef59f59aabb77b15c3649" translate="yes" xml:space="preserve">
          <source>Several Linux distributions have Python 2 as the default. You can
usually use the commands</source>
          <target state="translated">여러 Linux 배포에는 Python 2가 기본값으로 있습니다. 일반적으로 다음 명령을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e824989825b672ae9e8b7583a1c164a80f229f3a" translate="yes" xml:space="preserve">
          <source>Storing the emulator libraries where your other Python libraries are</source>
          <target state="translated">다른 Python 라이브러리가있는 에뮬레이터 라이브러리 저장</target>
        </trans-unit>
        <trans-unit id="ad7c176a1f46888e34c7e1690ad1c5beee10e424" translate="yes" xml:space="preserve">
          <source>The application uses some third party libraries as indicated in</source>
          <target state="translated">응용 프로그램은 다음과 같이 일부 타사 라이브러리를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="979b9212c27efe0a5db217eaa896fbc6dacf492f" translate="yes" xml:space="preserve">
          <source>The code in this project is licensed under GPLv3+. The full licensing
text can be found in the</source>
          <target state="translated">이 프로젝트의 코드는 GPLv3 +에 따라 사용이 허가되었습니다. 전체 라이선스 텍스트는</target>
        </trans-unit>
        <trans-unit id="477763a760211ecca706e07c0058e3b21fc5775f" translate="yes" xml:space="preserve">
          <source>The recommended way to quickly install and use the emulator, is to
install it via pip. The name on PyPI (where pip gets the software from)
is</source>
          <target state="translated">에뮬레이터를 빠르게 설치하고 사용하는 데 권장되는 방법은 pip를 통해 설치하는 것입니다. PyPI (pip가 소프트웨어를 가져 오는 위치)의 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f559d57d5cbaed4c964cbd1b30a1c13f4de78bbd" translate="yes" xml:space="preserve">
          <source>Then we run the emulator:</source>
          <target state="translated">그런 다음 에뮬레이터를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="d03617e1f149167c5197b89001922e9a5909b2f7" translate="yes" xml:space="preserve">
          <source>There is currently no support for stepping through the code one key
press at a time. Similarly, there is no support for inserting
breakpoints, or looking up the current values in memory/registers via
commands.</source>
          <target state="translated">현재 한 번에 하나의 키를 눌러 코드를 단계별로 실행할 수 없습니다. 마찬가지로 중단 점을 삽입하거나 명령을 통해 메모리 / 레지스터에서 현재 값을 조회 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7f11f74b2c24ea67813aaa442198e35c647b2973" translate="yes" xml:space="preserve">
          <source>There is no guarantee that emulator emulates LLVM&amp;ndash; correctly. Various
liberties has been taken to simplify the emulations, e.g. values of
type</source>
          <target state="translated">에뮬레이터가 LLVM을 올바르게 에뮬레이트한다는 보장은 없습니다. 에뮬레이션을 단순화하기 위해 다양한 자유가 취해졌습니다 (예 : 유형 값)</target>
        </trans-unit>
        <trans-unit id="7d4874ef95620e1d1ab16033d0749fb176e713f7" translate="yes" xml:space="preserve">
          <source>This application is an emulator/debugger for LLVM&amp;ndash; as defined in the
Compiler course (dOvs) at Aarhus University.</source>
          <target state="translated">이 애플리케이션은 Aarhus University의 컴파일러 과정 (dOvs)에 정의 된대로 LLVM 용 에뮬레이터 / 디버거입니다.</target>
        </trans-unit>
        <trans-unit id="14c66b644811fbcb0972a7fd709b9a3c1c14b763" translate="yes" xml:space="preserve">
          <source>This application is written in Python. It was developed in Python 3.6,
but I expected to work for Python 3.5 and above. Note that Python 2 is
not supported.</source>
          <target state="translated">이 애플리케이션은 Python으로 작성되었습니다. Python 3.6에서 개발되었지만 Python 3.5 이상에서 작동 할 것으로 예상했습니다. Python 2는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b96905983dac14858561dbf35b338c7fdfc0efe8" translate="yes" xml:space="preserve">
          <source>This is because the script does not have permission to write files among
your Python libraries. This is because the parser inside the emulator
tries to cache its parsing table (think of</source>
          <target state="translated">이는 스크립트에 Python 라이브러리간에 파일을 쓸 수있는 권한이 없기 때문입니다. 이는 에뮬레이터 내부의 파서가 파싱 테이블을 캐시하려고하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="2cac2059d04ed459899445fb7d4adafed92ceb31" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.</source>
          <target state="translated">이 프로그램은 유용 할 것이라는 희망으로 배포되었지만 어떠한 보증도하지 않습니다. 상품성 또는 특정 목적에의 적합성에 대한 묵시적 보증조차 포함하지 않습니다. 자세한 내용은 GNU General Public License를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6e8c9689a09f0614407ad425553a05092c4de85d" translate="yes" xml:space="preserve">
          <source>This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.</source>
          <target state="translated">이 프로그램은 무료 소프트웨어입니다. Free Software Foundation에서 게시 한 GNU General Public License의 조건에 따라 라이선스의 버전 3 또는 (귀하의 선택에 따라) 이후 버전을 재배포하거나 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="baba86665e0d419d7298c146a6e9f4536254fdd1" translate="yes" xml:space="preserve">
          <source>This project is designed for Linux, though I do not expect there to be
any issues on other platforms. As a consequence the commands given below
are designed for a Linux shell. Lines beginning with a dollar sign ($)
indicate commands you enter into your terminal, other lines are output
from running those commands</source>
          <target state="translated">이 프로젝트는 Linux 용으로 설계되었지만 다른 플랫폼에서는 문제가 없을 것으로 예상합니다. 결과적으로 아래에 제공된 명령은 Linux 쉘용으로 설계되었습니다. 달러 기호 ($)로 시작하는 줄은 터미널에 입력 한 명령을 나타내며 다른 줄은 해당 명령을 실행하여 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="d53bb793545754b1a01a5180a2d76bcf93519386" translate="yes" xml:space="preserve">
          <source>This shows which values variables have as they are encountered as well
as the order the instructions are evaluated.</source>
          <target state="translated">이것은 명령어가 평가되는 순서뿐만 아니라 마주 칠 때 변수가 갖는 값을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6ab9f867c2b9586bfae2a92f47756c473db01cb0" translate="yes" xml:space="preserve">
          <source>To automatically step through a LLVM file (and be quite verbose about
it), you can use the</source>
          <target state="translated">LLVM 파일을 자동으로 단계별로 진행하려면 (그리고 이에 대해 자세히 설명하려면) 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="689d5c568ee4ad2e01904389a122163eb9d9d7aa" translate="yes" xml:space="preserve">
          <source>To get the very latest version, you can do the following</source>
          <target state="translated">최신 버전을 얻으려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="81ae9c50ce40ea2486cd19c888560a10ac128884" translate="yes" xml:space="preserve">
          <source>To install the software, you can use</source>
          <target state="translated">소프트웨어를 설치하려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a76ecbb9c5838dc61bba3d6ea8dbefca4e9571c4" translate="yes" xml:space="preserve">
          <source>To remove the emulator, just uninstall via pip:</source>
          <target state="translated">에뮬레이터를 제거하려면 pip를 통해 제거하면됩니다.</target>
        </trans-unit>
        <trans-unit id="e9f3c2dfa3a509b24b78b842ed72832011345321" translate="yes" xml:space="preserve">
          <source>To see if you already have Python 3 installed, try running (the lines
beginning with $):</source>
          <target state="translated">Python 3이 이미 설치되어 있는지 확인하려면 다음을 실행 해보십시오 ($로 시작하는 줄).</target>
        </trans-unit>
        <trans-unit id="064f008652b975090f53700094b3a47123206506" translate="yes" xml:space="preserve">
          <source>Uninstalling</source>
          <target state="translated">제거</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="411b645f63e5fbed83edd12a7aa4dd18fa051cf1" translate="yes" xml:space="preserve">
          <source>We, as TAs, do not give support for this emulator.</source>
          <target state="translated">TA로서 우리는이 에뮬레이터를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8c80a67a65c54b0b7f272ff8c9a516198bacbea5" translate="yes" xml:space="preserve">
          <source>When generating LLVM code from Tiger code, there can be several calls to
functions defined in a file called</source>
          <target state="translated">Tiger 코드에서 LLVM 코드를 생성 할 때 다음과 같은 파일에 정의 된 함수를 여러 번 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90ee98fad7f8544d587ad71100eed0b60bfd3755" translate="yes" xml:space="preserve">
          <source>When running the emulator you might get messages like the following:</source>
          <target state="translated">에뮬레이터를 실행할 때 다음과 같은 메시지가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00beacc42c661b23b72011e450ebf8513a505649" translate="yes" xml:space="preserve">
          <source>While I hope that you will find it useful, the tool is being provided AS
IS, this means</source>
          <target state="translated">유용하게 사용되기를 바라지 만 도구는있는 그대로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="4a4fb2826b6b0878aa47b318199fa62be4556c4b" translate="yes" xml:space="preserve">
          <source>You need pip to (easily) install Python packages. If your Linux
distribution came with Python 2 and pip, the pip you have might not work
for Python 3. Let us first check that:</source>
          <target state="translated">Python 패키지를 (쉽게) 설치하려면 pip가 필요합니다. Linux 배포에 Python 2 및 pip가 함께 제공된 경우 보유한 pip가 Python 3에서 작동하지 않을 수 있습니다. 먼저 다음 사항을 확인하겠습니다.</target>
        </trans-unit>
        <trans-unit id="25854f327842ac5e0b579b7d207ffd946cb692ca" translate="yes" xml:space="preserve">
          <source>You should have received a copy of the GNU General Public License
along with this program. If not, see &lt;a href=&quot;http://www.gnu.org/licenses/&quot;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.</source>
          <target state="translated">이 프로그램과 함께 GNU General Public License의 사본을 받았을 것입니다. 그렇지 않은 경우 &lt;a href=&quot;http://www.gnu.org/licenses/&quot;&gt;http://www.gnu.org/licenses/를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="657878960e24d1c9651399eb7172d8879979e8a1" translate="yes" xml:space="preserve">
          <source>You should now be ready to use the software.</source>
          <target state="translated">이제 소프트웨어를 사용할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="efb166ba50d0cc60e1f8172a2046cfb8cfb5203c" translate="yes" xml:space="preserve">
          <source>allocRecord</source>
          <target state="translated">allocRecord</target>
        </trans-unit>
        <trans-unit id="1fcd4b9c697a5b70c697878aeb34d28844bd5352" translate="yes" xml:space="preserve">
          <source>are so that will hopefully be enough for
the majority of your LLVM programs.</source>
          <target state="translated">대부분의 LLVM 프로그램에 충분할 것입니다.</target>
        </trans-unit>
        <trans-unit id="0d612c12d2ac33625bf3e0351b6f5e4f73829fa8" translate="yes" xml:space="preserve">
          <source>auto</source>
          <target state="translated">자동</target>
        </trans-unit>
        <trans-unit id="9a5d56716d566997fa290054d161af96305aff9a" translate="yes" xml:space="preserve">
          <source>bin</source>
          <target state="translated">큰 상자</target>
        </trans-unit>
        <trans-unit id="49af3e01498e8946d2a7bfdc3bd97edcc8a23d0a" translate="yes" xml:space="preserve">
          <source>can be arbitrarily large. And there can, of course, be
bugs in the application.</source>
          <target state="translated">임의로 클 수 있습니다. 물론 응용 프로그램에 버그가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecf3d5183863d2320d33fd5ec27a4d14333214e8" translate="yes" xml:space="preserve">
          <source>clang</source>
          <target state="translated">그 소리</target>
        </trans-unit>
        <trans-unit id="b56345d25d16b8f7ab95f7f01a6382017a2cc434" translate="yes" xml:space="preserve">
          <source>command:</source>
          <target state="translated">명령:</target>
        </trans-unit>
        <trans-unit id="9b9a586d0b4f519412213ef7abcce011c1ee1c69" translate="yes" xml:space="preserve">
          <source>file, while a small but descriptive
header is:</source>
          <target state="translated">작지만 설명적인 헤더는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6c07cc0359d64a6032d981b0ad7d30f816772445" translate="yes" xml:space="preserve">
          <source>folder (assuming you have
the source code. See the section &amp;lsquo;Installation:Git Way&amp;rsquo;, or look at the
code online on https://gitlab.com/cfreksen/llvm&amp;ndash;emulator). It should be
clear enough what the script does, and if you know a bit of Python, you
should be able to tweak it to your needs.</source>
          <target state="translated">폴더 (소스 코드가 있다고 가정합니다. '설치 : Git Way'섹션을 참조하거나 https://gitlab.com/cfreksen/llvm&amp;ndash;emulator에서 온라인으로 코드를보십시오). 스크립트가하는 일이 명확해야하며 Python에 대해 조금 알고 있다면 필요에 맞게 조정할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="e54c3d5ba6a9e218cb9c9f241478c5d67aa5c270" translate="yes" xml:space="preserve">
          <source>folder. This means that you can
start the emulator (wherever you are), by running that script:</source>
          <target state="translated">폴더. 즉, 해당 스크립트를 실행하여 어디에서나 에뮬레이터를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81fb446c6a4e9aa1d13a1b86beacfa52fefd2a2f" translate="yes" xml:space="preserve">
          <source>i64</source>
          <target state="translated">i64</target>
        </trans-unit>
        <trans-unit id="3e1049546fa22c702db3b0317d45e6be68410bbe" translate="yes" xml:space="preserve">
          <source>in order to use the correct
version of Python for this emulator.</source>
          <target state="translated">이 에뮬레이터에 올바른 Python 버전을 사용하려면</target>
        </trans-unit>
        <trans-unit id="61b86adfd0acef6f9ec82f027c49b4bc7a3bbb83" translate="yes" xml:space="preserve">
          <source>initArray</source>
          <target state="translated">initArray</target>
        </trans-unit>
        <trans-unit id="97206f5790a51ba71e29a03a88efdabd62ebed40" translate="yes" xml:space="preserve">
          <source>llvm--emulator</source>
          <target state="translated">llvm-- 에뮬레이터</target>
        </trans-unit>
        <trans-unit id="80ec057a230b910c652c088bd50b580f9223a376" translate="yes" xml:space="preserve">
          <source>llvm-emulator</source>
          <target state="translated">llvm- 에뮬레이터</target>
        </trans-unit>
        <trans-unit id="6f8129f284f25df1e22f5d44aab856d9620b4d1b" translate="yes" xml:space="preserve">
          <source>llvm-minusminus-emulator</source>
          <target state="translated">llvm-minusminus-emulator</target>
        </trans-unit>
        <trans-unit id="e3bba860600a96e8fafd8f928098d93bf7bd2744" translate="yes" xml:space="preserve">
          <source>makes it
sound like it covers the entire LLVM IR language.</source>
          <target state="translated">전체 LLVM IR 언어를 다루는 것처럼 들립니다.</target>
        </trans-unit>
        <trans-unit id="ee552679a4f8ab1512e35636891d08b18c504e56" translate="yes" xml:space="preserve">
          <source>on the folder containing</source>
          <target state="translated">포함하는 폴더에</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="7dcf5703b04249aa33cf19fff6347ed6678b7887" translate="yes" xml:space="preserve">
          <source>packages would be installed for Python
2, which I do not want.</source>
          <target state="translated">내가 원하지 않는 Python 2 용 패키지가 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="0a6469add294a4b60e8af1bfd73594e7a355caca" translate="yes" xml:space="preserve">
          <source>path/to/emulator/repository/bin/</source>
          <target state="translated">경로 / 대상 / 에뮬레이터 / 저장소 / 빈 /</target>
        </trans-unit>
        <trans-unit id="e1f1eb75c7bbf4dc71204486628790128a241e4f" translate="yes" xml:space="preserve">
          <source>pip</source>
          <target state="translated">씨</target>
        </trans-unit>
        <trans-unit id="2c44eec9b7a2b9b269d4a22daf8b49cd7decdb32" translate="yes" xml:space="preserve">
          <source>pip3</source>
          <target state="translated">pip3</target>
        </trans-unit>
        <trans-unit id="6d0d5876e6710ebb4f309b5af01090cb97381d06" translate="yes" xml:space="preserve">
          <source>print</source>
          <target state="translated">인쇄</target>
        </trans-unit>
        <trans-unit id="80dd0a3e16d05b975a9fa37f27c78d7608caf7ae" translate="yes" xml:space="preserve">
          <source>python3</source>
          <target state="translated">python3</target>
        </trans-unit>
        <trans-unit id="19359a61ae2446b51b549167b014da2fcf265768" translate="yes" xml:space="preserve">
          <source>requirements.txt</source>
          <target state="translated">requirements.txt</target>
        </trans-unit>
        <trans-unit id="1460b692270888a8e6689bcbe5d9a1f9aec2480b" translate="yes" xml:space="preserve">
          <source>runtime.c</source>
          <target state="translated">runtime.c</target>
        </trans-unit>
        <trans-unit id="673f49f5c9d0c4f5e44367218fc9af3ab7bcd55f" translate="yes" xml:space="preserve">
          <source>script does not work for you, you can inspect
it in the</source>
          <target state="translated">스크립트가 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8e2edce0d507e1297474f25c00cae94258db38d8" translate="yes" xml:space="preserve">
          <source>setup.py</source>
          <target state="translated">setup.py</target>
        </trans-unit>
        <trans-unit id="a0c9958a26e4798af8b3cd772df55532e4220c43" translate="yes" xml:space="preserve">
          <source>some_file.ll</source>
          <target state="translated">some_file.ll</target>
        </trans-unit>
        <trans-unit id="6d59ef7379e10a601f6ea6305c8279385aa29d88" translate="yes" xml:space="preserve">
          <source>tiger.grm.sml</source>
          <target state="translated">tiger.grm.sml</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
