<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/morphio/">
    <body>
      <group id="morphio">
        <trans-unit id="05c589e6ce1353b60ee34985282c2669b644e238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Morphology&lt;/code&gt;: the morphology object contains general information about the loaded cell
but also provides accessors to the different sections.</source>
          <target state="translated">&lt;code&gt;Morphology&lt;/code&gt; : 형태 객체는로드 된 셀에 대한 일반 정보를 포함하지만 다른 섹션에 대한 접근자를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="17c91ef80661a47799660bac4cf72d7913dfe81f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Section&lt;/code&gt;: a section is the succession of points between two bifurcations. To the bare minimum
the &lt;code&gt;Section&lt;/code&gt; object will contain the section type, the position and diameter of each point.</source>
          <target state="translated">&lt;code&gt;Section&lt;/code&gt; : 섹션은 두 분기 사이의 점의 연속입니다. 최소한 &lt;code&gt;Section&lt;/code&gt; 개체에는 단면 유형, 각 점의 위치 및 지름이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="0f650063b57767e19f8bf82fee773669da33e18e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Soma&lt;/code&gt;: contains the information related to the soma.</source>
          <target state="translated">&lt;code&gt;Soma&lt;/code&gt; : 소마 와 관련된 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="084102c1a86e9298ac2a3c793be10a082875501e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;append_section&lt;/code&gt;: creates a new mitochondrial section
_ &lt;code&gt;depth_begin&lt;/code&gt;: a depth first iterator
_ &lt;code&gt;breadth_begin&lt;/code&gt;: a breadth first iterator
_ &lt;code&gt;upstream_begin&lt;/code&gt;: an upstream iterator</source>
          <target state="translated">&lt;code&gt;append_section&lt;/code&gt; : 새로운 미토콘드리아 섹션 생성 _ &lt;code&gt;depth_begin&lt;/code&gt; : 깊이 우선 반복기 _ &lt;code&gt;breadth_begin&lt;/code&gt; : 폭 우선 반복기 _ &lt;code&gt;upstream_begin&lt;/code&gt; : 업스트림 반복기</target>
        </trans-unit>
        <trans-unit id="a2f74157a11a484951549eb2a8ad57e3e5ac98ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;morphio::NO_DUPLICATES&lt;/code&gt;:
The duplicate point are not present. It means the first point of each section
is no longer the last point of the parent section.</source>
          <target state="translated">&lt;code&gt;morphio::NO_DUPLICATES&lt;/code&gt; : 중복 지점이 없습니다. 이는 각 섹션의 첫 번째 지점이 더 이상 상위 섹션의 마지막 지점이 아님을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="010a7b231ebd4c5631e87064addc5b73aec28e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;morphio::NO_MODIFIER&lt;/code&gt;:
This is the default flag, it will do nothing.</source>
          <target state="translated">&lt;code&gt;morphio::NO_MODIFIER&lt;/code&gt; : 이것은 기본 플래그이며 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d6240a55d3bfb1484af4269babc0e8aca1ac8f43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;morphio::NRN_ORDER&lt;/code&gt;:
Neurite are reordered according to the
&lt;a href=&quot;https://github.com/neuronsimulator/nrn/blob/2dbf2ebf95f1f8e5a9f0565272c18b1c87b2e54c/share/lib/hoc/import3d/import3d_gui.hoc#L874&quot;&gt;NEURON simulator ordering&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;morphio::NRN_ORDER&lt;/code&gt; : &lt;a href=&quot;https://github.com/neuronsimulator/nrn/blob/2dbf2ebf95f1f8e5a9f0565272c18b1c87b2e54c/share/lib/hoc/import3d/import3d_gui.hoc#L874&quot;&gt;NEURON 시뮬레이터 순서&lt;/a&gt; 에 따라 Neurite가 재정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="22c1c9d644f179b01cd766b2175cd2cc85465fb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;morphio::SOMA_SPHERE&lt;/code&gt;:
The soma is reduced to a sphere which is the center of gravity of the real soma.</source>
          <target state="translated">&lt;code&gt;morphio::SOMA_SPHERE&lt;/code&gt; : 소마는 실제 소마의 무게 중심 인 구로 축소됩니다.</target>
        </trans-unit>
        <trans-unit id="7b245606abb9b148b8f37177bfcedc95356c30bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;morphio::TWO_POINTS_SECTIONS&lt;/code&gt;:
Each section gets reduce to a line made of the first and last point.</source>
          <target state="translated">&lt;code&gt;morphio::TWO_POINTS_SECTIONS&lt;/code&gt; : 각 섹션은 첫 번째와 마지막 점으로 이루어진 선으로 축소됩니다.</target>
        </trans-unit>
        <trans-unit id="d3b8b6c79cb1b524fd5094b65f68001332f4faa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;root_sections&lt;/code&gt;: returns the section ID of the starting mitochondrial section
of each mitochondrion.</source>
          <target state="translated">&lt;code&gt;root_sections&lt;/code&gt; : 각 미토콘드리아의 시작 미토콘드리아 섹션의 섹션 ID를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a1338fba018f2704fa578b78fda517cf5bea3b4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;section(id)&lt;/code&gt;: returns a given mitochondrial section</source>
          <target state="translated">&lt;code&gt;section(id)&lt;/code&gt; : 주어진 미토콘드리아 섹션을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36a1d3d66ce44264089e8e3dafb62324323c66a8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;C++ vs Python&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;C ++ 대 Python&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="3ea5fd7ac9be36255ef9155761cc743987a1cf9f" translate="yes" xml:space="preserve">
          <source>A C++11 compiler</source>
          <target state="translated">C ++ 11 컴파일러</target>
        </trans-unit>
        <trans-unit id="952e5cab273d68e6168ccc6f357494b9a2cf5a2e" translate="yes" xml:space="preserve">
          <source>A neuron morphology IO library</source>
          <target state="translated">뉴런 형태학 IO 라이브러리</target>
        </trans-unit>
        <trans-unit id="4eefb7a0a2507987ebe0ff9baa649da3595b32fb" translate="yes" xml:space="preserve">
          <source>ASC (aka. neurolucida)</source>
          <target state="translated">ASC (일명 neurolucida)</target>
        </trans-unit>
        <trans-unit id="be41078d03acbc74475d2c31d68aae80591b4f6f" translate="yes" xml:space="preserve">
          <source>BB5</source>
          <target state="translated">BB5</target>
        </trans-unit>
        <trans-unit id="fc2b4216164cfb01ac45112054b3fedda8b56c86" translate="yes" xml:space="preserve">
          <source>C++</source>
          <target state="translated">C ++</target>
        </trans-unit>
        <trans-unit id="9ec7b0a7c5b1451ed0f91bdb0a424184336bd671" translate="yes" xml:space="preserve">
          <source>C++ accessors become Python properties.</source>
          <target state="translated">C ++ 접근자는 Python 속성이됩니다.</target>
        </trans-unit>
        <trans-unit id="b6f64f2703632fef3173b2740e88e81c303b62ad" translate="yes" xml:space="preserve">
          <source>C++ immutable</source>
          <target state="translated">C ++ 불변</target>
        </trans-unit>
        <trans-unit id="594f8d144469b338c45f9cbb3aba6b9ddc07be92" translate="yes" xml:space="preserve">
          <source>C++ mutable</source>
          <target state="translated">C ++ 변경 가능</target>
        </trans-unit>
        <trans-unit id="b2c28ff5668997c3ea08dbe005d29f11d4afe3e9" translate="yes" xml:space="preserve">
          <source>C++:</source>
          <target state="translated">C ++ :</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">기여</target>
        </trans-unit>
        <trans-unit id="a882dcfd5751516ddb30c1beb8b0f3d24999e53c" translate="yes" xml:space="preserve">
          <source>Creating morphologies</source>
          <target state="translated">형태 생성</target>
        </trans-unit>
        <trans-unit id="81bc189a8ba6d9c96baa2558edfa534d827ece83" translate="yes" xml:space="preserve">
          <source>Creating morphologies with the mutable API</source>
          <target state="translated">가변 API로 형태학 생성</target>
        </trans-unit>
        <trans-unit id="6ad6786301d68961d7a03c9e68187e94afcca1ea" translate="yes" xml:space="preserve">
          <source>Debian:</source>
          <target state="translated">데비안 :</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">의존성</target>
        </trans-unit>
        <trans-unit id="ed806390ccd044a9cf9ef1c79ebe33380c22960a" translate="yes" xml:space="preserve">
          <source>Endoplasmic reticulum</source>
          <target state="translated">소포체</target>
        </trans-unit>
        <trans-unit id="c869c8f77edec3e80935b2de9d8ed4c32e3d9555" translate="yes" xml:space="preserve">
          <source>Endoplasmic reticulum can also be stored and written to H5 file.
The specification is part of the &lt;a href=&quot;https://bbpteam.epfl.ch/documentation/projects/Morphology%20Documentation/latest/h5v1.html&quot;&gt;BBP morphology documentation&lt;/a&gt;
There is one endoplasmic reticulum object per morphology. It contains 4 attributes. Each attribute is an array and each line
refers to the value of the attribute for a specific neuronal section.</source>
          <target state="translated">소포체도 저장하여 H5 파일에 기록 할 수 있습니다. 사양은 &lt;a href=&quot;https://bbpteam.epfl.ch/documentation/projects/Morphology%20Documentation/latest/h5v1.html&quot;&gt;BBP 형태 문서의&lt;/a&gt; 일부입니다 . 형태 당 하나의 소포체 개체가 있습니다. 여기에는 4 개의 속성이 있습니다. 각 속성은 배열이며 각 줄은 특정 연결 섹션에 대한 속성 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="74d325cfa7d43408ca489dd55501d3c44449fa27" translate="yes" xml:space="preserve">
          <source>For manual installation:</source>
          <target state="translated">수동 설치의 경우 :</target>
        </trans-unit>
        <trans-unit id="4510b73730f1f3f889e0f84e7cd48578735b8b9e" translate="yes" xml:space="preserve">
          <source>For more convenience, all section data are accessed through properties, such as:</source>
          <target state="translated">편의를 위해 모든 섹션 데이터는 다음과 같은 속성을 통해 액세스됩니다.</target>
        </trans-unit>
        <trans-unit id="4561ff1365760290c7ec9b97ec2b7a6401500beb" translate="yes" xml:space="preserve">
          <source>H5 v1</source>
          <target state="translated">H5 v1</target>
        </trans-unit>
        <trans-unit id="5e644f8043bbb54eeaec2ac83b8e276b66c247fc" translate="yes" xml:space="preserve">
          <source>H5 v2</source>
          <target state="translated">H5 v2</target>
        </trans-unit>
        <trans-unit id="f3fb61d3823b3ba53d22425dd2f87558a62add31" translate="yes" xml:space="preserve">
          <source>Here is a simple example to create a morphology from scratch and write it to disk</source>
          <target state="translated">다음은 처음부터 형태를 만들고 디스크에 쓰는 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="25c2aeef8238138fec1533453e6b954e43c9c9b8" translate="yes" xml:space="preserve">
          <source>Here is a simple example to create a morphology from scratch and writing it to disk</source>
          <target state="translated">다음은 처음부터 형태를 만들고 디스크에 쓰는 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="183114ec6263f1b2f7612d8d4d73f7609f67c822" translate="yes" xml:space="preserve">
          <source>If you want to improve the project or you see any issue, every contribution is welcome.
Please check the &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; for more information.</source>
          <target state="translated">프로젝트를 개선하고 싶거나 문제가 있으면 모든 기여를 환영합니다. 자세한 내용은 &lt;a href=&quot;CONTRIBUTING.md&quot;&gt;기부 지침&lt;/a&gt; 을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="114213187c45073b9488db12a9130b6c2014d2da" translate="yes" xml:space="preserve">
          <source>In C++ the API is available under the &lt;code&gt;morphio/mut&lt;/code&gt; namespace:</source>
          <target state="translated">C ++에서 API는 &lt;code&gt;morphio/mut&lt;/code&gt; 네임 스페이스 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="147e6bf169b28710f197c1e0d96a454edfb6e705" translate="yes" xml:space="preserve">
          <source>In Python the API is available under the &lt;code&gt;morphio.mut&lt;/code&gt; module:</source>
          <target state="translated">Python에서 API는 &lt;code&gt;morphio.mut&lt;/code&gt; 모듈 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a8231de76a3f518c186c700115abe7cc01f5d09e" translate="yes" xml:space="preserve">
          <source>Include/Imports</source>
          <target state="translated">포함 / 수입</target>
        </trans-unit>
        <trans-unit id="6d3729afc73ff147d644c95aef6eaf50fe33d95e" translate="yes" xml:space="preserve">
          <source>Include/imports</source>
          <target state="translated">포함 / 가져 오기</target>
        </trans-unit>
        <trans-unit id="a2d71948a02d35ad51d5f966864650112c64ca49" translate="yes" xml:space="preserve">
          <source>Install as a C++ library</source>
          <target state="translated">C ++ 라이브러리로 설치</target>
        </trans-unit>
        <trans-unit id="e312a1d57652e97231a80899e82c8bc4dff7ed74" translate="yes" xml:space="preserve">
          <source>Install as a Python package</source>
          <target state="translated">Python 패키지로 설치</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="9542862800f3484f8a3dd301a53be94b09387164" translate="yes" xml:space="preserve">
          <source>Installation instructions</source>
          <target state="translated">설치 지침</target>
        </trans-unit>
        <trans-unit id="9edf58da50a63a4c1cf0a67e04af2e8d0a21bc04" translate="yes" xml:space="preserve">
          <source>Internally, in this API the morphology object is in fact where all data are stored. The
Soma and Section classes are lightweight classes that provide views on the Morphology data.</source>
          <target state="translated">내부적으로이 API에서 형태학 객체는 실제로 모든 데이터가 저장되는 위치입니다. Soma 및 Section 클래스는 형태 데이터에 대한보기를 제공하는 경량 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">소개</target>
        </trans-unit>
        <trans-unit id="ec9c2a5c5316f26059f59cb45640593a4ebe01ea" translate="yes" xml:space="preserve">
          <source>It is also possible to read and write mitochondria from/to the h5 files (&lt;em&gt;SWC and ASC are not supported&lt;/em&gt;).
As mitochondria can be represented as trees, one can define the concept of &lt;em&gt;mitochondrial section&lt;/em&gt;
similar to neuronal section and end up with a similar API. The morphology object has a
&lt;em&gt;mitochondria&lt;/em&gt; handle method that exposes the basic methods:</source>
          <target state="translated">h5 파일에서 미토콘드리아를 읽고 쓸 수도 있습니다 ( &lt;em&gt;SWC 및 ASC는 지원되지 않음&lt;/em&gt; ). 미토콘드리아는 나무로 표현 될 수 있기 때문에 뉴런 섹션과 유사한 &lt;em&gt;미토콘드리아 섹션&lt;/em&gt; 의 개념을 정의하고 유사한 API로 끝낼 수 있습니다. 형태학 객체에는 기본 방법을 노출 하는 &lt;em&gt;미토콘드리아&lt;/em&gt; 핸들 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="117907d437056a5e88dce3c5688f4ba1dbbda6f8" translate="yes" xml:space="preserve">
          <source>It provides 3 C++ classes that are the starting point of every morphology analysis:</source>
          <target state="translated">모든 형태 분석의 시작점 인 3 개의 C ++ 클래스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="b606f232674637f7a8f4fed66b0a7b7e377385d3" translate="yes" xml:space="preserve">
          <source>Max OS:</source>
          <target state="translated">최대 OS :</target>
        </trans-unit>
        <trans-unit id="f2c829ac5573c78081963440a6b2337a3941c4bb" translate="yes" xml:space="preserve">
          <source>Maximum number of warnings</source>
          <target state="translated">최대 경고 수</target>
        </trans-unit>
        <trans-unit id="db1cefa795d685c66374eb43ff579bb3d7b48e60" translate="yes" xml:space="preserve">
          <source>Mitochondria</source>
          <target state="translated">미토콘드리아</target>
        </trans-unit>
        <trans-unit id="89c293ae9e42d33997e1555ddf06be22bee9a94e" translate="yes" xml:space="preserve">
          <source>MorphIO</source>
          <target state="translated">MorphIO</target>
        </trans-unit>
        <trans-unit id="258ac5fa4785075b0feb313f1509effe8b452c1d" translate="yes" xml:space="preserve">
          <source>MorphIO is a library for reading and writing neuron morphology files.
It supports the following formats:</source>
          <target state="translated">MorphIO는 뉴런 형태학 파일을 읽고 쓰기위한 라이브러리입니다. 다음 형식을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c66d1d47ff62b4dfc2ef9dda3ff36be734274d3a" translate="yes" xml:space="preserve">
          <source>MorphIO is licensed under the terms of the GNU Lesser General Public License version 3.
Refer to COPYING.LESSER and COPYING for details.</source>
          <target state="translated">MorphIO는 GNU Lesser General Public License 버전 3의 조건에 따라 사용이 허가되었습니다. 자세한 내용은 COPYING.LESSER 및 COPYING을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c7ca7bbd0f6b67fb5c8addddb279599da3fd5ec1" translate="yes" xml:space="preserve">
          <source>Multiple flags can be passed by using the standard bit flag manipulation (works the same way in C++ and Python):</source>
          <target state="translated">표준 비트 플래그 조작을 사용하여 여러 플래그를 전달할 수 있습니다 (C ++ 및 Python에서 동일한 방식으로 작동).</target>
        </trans-unit>
        <trans-unit id="0e729aa5219592a72f30ec40888559e7d7912e09" translate="yes" xml:space="preserve">
          <source>Mutable (read/write) API</source>
          <target state="translated">가변 (읽기 / 쓰기) API</target>
        </trans-unit>
        <trans-unit id="1ef709bfed82149668ab96ecb08faea20a78ac74" translate="yes" xml:space="preserve">
          <source>Mutable Python</source>
          <target state="translated">가변 파이썬</target>
        </trans-unit>
        <trans-unit id="1441b86c851079bc3324060b94073138efe31e37" translate="yes" xml:space="preserve">
          <source>Mutable Read/Write API</source>
          <target state="translated">가변 읽기 / 쓰기 API</target>
        </trans-unit>
        <trans-unit id="696b21aa4b7ed6e6f418e1fdc078ec15cf49001e" translate="yes" xml:space="preserve">
          <source>On can control the maximum number of warnings using the command:</source>
          <target state="translated">On은 다음 명령을 사용하여 최대 경고 수를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98431f5e457c27365b1e03d91a81d64816a4f689" translate="yes" xml:space="preserve">
          <source>One important concept is that MorphIO is split into a &lt;em&gt;read-only&lt;/em&gt; part and a &lt;em&gt;read/write&lt;/em&gt; one.</source>
          <target state="translated">한 가지 중요한 개념은 MorphIO가 &lt;em&gt;읽기 전용&lt;/em&gt; 부분과 &lt;em&gt;읽기 / 쓰기&lt;/em&gt; 부분 으로 나뉘어져 있다는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="5f97525c2acf891503485ccbea5b86572e32965e" translate="yes" xml:space="preserve">
          <source>Opening flags</source>
          <target state="translated">열기 플래그</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">파이썬</target>
        </trans-unit>
        <trans-unit id="f96ca1efe04a34a959623ed64609ac02c285f127" translate="yes" xml:space="preserve">
          <source>Python immutable</source>
          <target state="translated">파이썬 불변</target>
        </trans-unit>
        <trans-unit id="d1569d4613d11c61dcbad3c408de9854a4232680" translate="yes" xml:space="preserve">
          <source>Python mutable</source>
          <target state="translated">파이썬 변경 가능</target>
        </trans-unit>
        <trans-unit id="11ddfe4eada9c7c023a10c9be0db1975b537dd2c" translate="yes" xml:space="preserve">
          <source>Python:</source>
          <target state="translated">파이썬 :</target>
        </trans-unit>
        <trans-unit id="afad0406448ca26099a8a4b7585e12f2817dd38e" translate="yes" xml:space="preserve">
          <source>Quick summary</source>
          <target state="translated">빠른 요약</target>
        </trans-unit>
        <trans-unit id="3c7be3cfe1c5724916797c2e8575306b835d6b4e" translate="yes" xml:space="preserve">
          <source>Read-only API</source>
          <target state="translated">읽기 전용 API</target>
        </trans-unit>
        <trans-unit id="e9effdd507f4b5f063079045910f919a92dc80dd" translate="yes" xml:space="preserve">
          <source>Reading endoplasmic reticula from H5 files</source>
          <target state="translated">H5 파일에서 소포체 읽기</target>
        </trans-unit>
        <trans-unit id="2392f4926ea8aea0ae156e0cf4fab05ea63b5510" translate="yes" xml:space="preserve">
          <source>Reading mithochondria from H5 files:</source>
          <target state="translated">H5 파일에서 미토콘드리아 읽기 :</target>
        </trans-unit>
        <trans-unit id="1148f4c63e27da113a22876674739c6318bbb569" translate="yes" xml:space="preserve">
          <source>Reading morphologies</source>
          <target state="translated">형태학 읽기</target>
        </trans-unit>
        <trans-unit id="186a329d06866a482f19d11379a8b41c0fec7749" translate="yes" xml:space="preserve">
          <source>Red Hat:</source>
          <target state="translated">빨간 모자:</target>
        </trans-unit>
        <trans-unit id="818632e1f6ea77e4409af37db61ba13a053ce0f1" translate="yes" xml:space="preserve">
          <source>SWC</source>
          <target state="translated">SWC</target>
        </trans-unit>
        <trans-unit id="e0f094863987a3aa84bfc9a251a41dbed7abbeb1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/BlueBrain/MorphIO/blob/master/doc/specification.md&quot;&gt;https://github.com/BlueBrain/MorphIO/blob/master/doc/specification.md&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;https://github.com/BlueBrain/MorphIO/blob/master/doc/specification.md&quot;&gt;https://github.com/BlueBrain/MorphIO/blob/master/doc/specification.md를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ccf5d25dfedda0749e3abb6685b56a5fed8013a" translate="yes" xml:space="preserve">
          <source>Specification</source>
          <target state="translated">사양</target>
        </trans-unit>
        <trans-unit id="93fd8ff6d44795d76f5d83a406fc3da024e263a4" translate="yes" xml:space="preserve">
          <source>Table of content</source>
          <target state="translated">내용의 테이블</target>
        </trans-unit>
        <trans-unit id="39dced20d71a61023f7ab9bc7bf0c274bc9918f5" translate="yes" xml:space="preserve">
          <source>The python binding can directly be installed using pip:</source>
          <target state="translated">Python 바인딩은 pip를 사용하여 직접 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1b5d341762470401eba5d30dc9c3871b27700cc" translate="yes" xml:space="preserve">
          <source>The read-only API aims at providing better performances as its internal data
representation is contiguous in memory. All accessors return immutable objects.</source>
          <target state="translated">읽기 전용 API는 내부 데이터 표현이 메모리에서 연속적이기 때문에 더 나은 성능을 제공하는 것을 목표로합니다. 모든 접근자는 불변 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4cf1b54b003a59c279d1ba0b615a8a5f3459ca8c" translate="yes" xml:space="preserve">
          <source>Tips</source>
          <target state="translated">팁</target>
        </trans-unit>
        <trans-unit id="c18e5b92741c17b68d38ed2f93d9423bce4afb89" translate="yes" xml:space="preserve">
          <source>To build MorphIO from sources, the following dependencies are required:</source>
          <target state="translated">소스에서 MorphIO를 빌드하려면 다음 종속성이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c7c8f50f1666be4b11b355987693154d7fb7259d" translate="yes" xml:space="preserve">
          <source>To use the installed library:</source>
          <target state="translated">설치된 라이브러리를 사용하려면 :</target>
        </trans-unit>
        <trans-unit id="3d6156d5f75b5b8f3a1cec51258c650d3b4145e2" translate="yes" xml:space="preserve">
          <source>When opening the file, modifier flags can be passed to alter the morphology representation.
The following flags are supported:</source>
          <target state="translated">파일을 열 때 수정 자 플래그를 전달하여 형태 표현을 변경할 수 있습니다. 다음 플래그가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="020e47bdadcc35f24bdfca2c096994ec4b2e97e0" translate="yes" xml:space="preserve">
          <source>Writing endoplasmic reticula from H5 files</source>
          <target state="translated">H5 파일에서 소포체 작성</target>
        </trans-unit>
        <trans-unit id="07c3478e35aa306a568ba86886d52535c8017336" translate="yes" xml:space="preserve">
          <source>cmake &amp;gt;= 3.2</source>
          <target state="translated">cmake&amp;gt; = 3.2</target>
        </trans-unit>
        <trans-unit id="517a915971c6fdb27e7b68a7b57ffbd61405ed45" translate="yes" xml:space="preserve">
          <source>filament_count:
This 1 column dataset is composed of integers that represent the number of filaments in the segment of the reticulum lying in the section referenced by the corresponding row in the section_index dataset.</source>
          <target state="translated">filament_count :이 1 개 열 데이터 세트는 section_index 데이터 세트의 해당 행에서 참조하는 섹션에있는 세망 세그먼트의 필라멘트 수를 나타내는 정수로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="fd0f8c3ef5711d9f9b812afbf3881f5994b7fc20" translate="yes" xml:space="preserve">
          <source>libhdf5-dev</source>
          <target state="translated">libhdf5-dev</target>
        </trans-unit>
        <trans-unit id="abe2323ac33bea8e665eeaf956c36cb656766ebe" translate="yes" xml:space="preserve">
          <source>section_index:
Each row of this dataset represents the index of a neuronal section. Each row of the other properties (eg. volume) refer to the part of the reticulum
present in the corresponding section for each row.</source>
          <target state="translated">section_index :이 데이터 세트의 각 행은 뉴런 섹션의 색인을 나타냅니다. 다른 속성 (예 : 부피)의 각 행은 각 행의 해당 섹션에있는 레티 큘럼의 부분을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a92ce7ffe5e2cbc6c1cf6c1e7333e2f806f19b45" translate="yes" xml:space="preserve">
          <source>style: C++ functions are camel case while Python ones are snake case.</source>
          <target state="translated">스타일 : C ++ 함수는 카멜 케이스이고 Python 함수는 스네이크 케이스입니다.</target>
        </trans-unit>
        <trans-unit id="1d871f40bf2707774af399a0cb2a663ed48aeff0" translate="yes" xml:space="preserve">
          <source>surface_area:
Similar to the volume dataset, this dataset represents the surface area of the reticulum in each section in the section_index dataset.</source>
          <target state="translated">surface_area : 볼륨 데이터 세트와 유사하게이 데이터 세트는 section_index 데이터 세트의 각 섹션에있는 세망의 표면적을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="dd43ad275adec129e3f7f213d1dda56a8b3fc7d8" translate="yes" xml:space="preserve">
          <source>volume:
One column dataset indexed by section_index. Contains volumes of the reticulum per each corresponding section it lies in.</source>
          <target state="translated">볼륨 : section_index로 인덱싱 된 하나의 열 데이터 세트. 레티 큘럼이있는 각 해당 섹션 당 볼륨을 포함합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
