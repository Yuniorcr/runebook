<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/gearbox/">
    <body>
      <group id="gearbox">
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="56d266b3c9dba30ef1b60ca0f655baa534405a6c" translate="yes" xml:space="preserve">
          <source>, this mean you can simply run</source>
          <target state="translated">, 이것은 간단히 실행할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="eaf999f7e2f0cf00a10d76b58b36651224c9c9d7" translate="yes" xml:space="preserve">
          <source>--config</source>
          <target state="translated">--config</target>
        </trans-unit>
        <trans-unit id="f295839f8dd7137be06ed83d339b196a04e65315" translate="yes" xml:space="preserve">
          <source>.template</source>
          <target state="translated">.주형</target>
        </trans-unit>
        <trans-unit id="fc115e9403adae48721828e0740aab379d84c024" translate="yes" xml:space="preserve">
          <source>A tipical scaffold filename will be named like</source>
          <target state="translated">Tipical scaffold 파일 이름은 다음과 같이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="22e0e0225badf2dce0f0792cb200a3cbe265255e" translate="yes" xml:space="preserve">
          <source>About gearbox</source>
          <target state="translated">기어 박스 정보</target>
        </trans-unit>
        <trans-unit id="b4f054e096a1a702a58807802b610301aa6ea51c" translate="yes" xml:space="preserve">
          <source>By default launching gearbox without any subcommand will start the interactive mode.
This provides an interactive prompt where gearbox commands, system shell commands and python statements
can be executed. If you have any doubt about what you can do simply run the</source>
          <target state="translated">기본적으로 하위 명령없이 기어 박스를 시작하면 대화 형 모드가 시작됩니다. 이것은 기어 박스 명령, 시스템 셸 명령 및 파이썬 문을 실행할 수있는 대화 형 프롬프트를 제공합니다. 수행 할 수있는 작업에 대해 의심이가는 경우</target>
        </trans-unit>
        <trans-unit id="16f4bce666abffc438496b4005eb7386ef4e6b60" translate="yes" xml:space="preserve">
          <source>Command line toolkit born as a PasteScript replacement for the TurboGears2 web framework</source>
          <target state="translated">TurboGears2 웹 프레임 워크를위한 PasteScript 대체물로 탄생 한 명령 줄 툴킷</target>
        </trans-unit>
        <trans-unit id="788e38824f307d3d20d906725dfd67a223ab69ad" translate="yes" xml:space="preserve">
          <source>Development Tools Commands</source>
          <target state="translated">개발 도구 명령</target>
        </trans-unit>
        <trans-unit id="f7bceb2d29f0281b51eb71b044f29927cddb9fc7" translate="yes" xml:space="preserve">
          <source>Each file ending with the &lt;em&gt;_tmpl&lt;/em&gt; syntax will be processed with the Tempita template engine and
whenever the name of a file or directory contains &lt;em&gt;+optname+&lt;/em&gt; it will be substituted with the
value of the option having the same name (e.g., +package+ will be substituted with the value
of the &amp;ndash;package options which will probably end being the name of the package).</source>
          <target state="translated">&lt;em&gt;_tmpl&lt;/em&gt; 구문으로 끝나는 각 파일 은 Tempita 템플릿 엔진으로 처리되며 파일 또는 디렉토리의 이름에 &lt;em&gt;+ optname +&lt;/em&gt; 이 포함될 때마다 동일한 이름을 가진 옵션 값으로 대체됩니다 (예 : + package +는 &amp;ndash;package 옵션의 값은 아마도 패키지의 이름으로 끝날 것입니다).</target>
        </trans-unit>
        <trans-unit id="e2d4124a132824133904f4e225c57069301d2f5d" translate="yes" xml:space="preserve">
          <source>Enabling migrate and tgshell commands</source>
          <target state="translated">마이그레이션 및 tgshell 명령 사용</target>
        </trans-unit>
        <trans-unit id="13b87f0b335f7a924bdde6d4265e1182b7796908" translate="yes" xml:space="preserve">
          <source>Gearbox HTTP Servers</source>
          <target state="translated">Gearbox HTTP 서버</target>
        </trans-unit>
        <trans-unit id="486261399b7dfb9ab76efd0c185576abed5d75f0" translate="yes" xml:space="preserve">
          <source>Gearbox Interactive Mode</source>
          <target state="translated">기어 박스 대화 형 모드</target>
        </trans-unit>
        <trans-unit id="c3760a21a033fac877c551f79c22599bc9dea149" translate="yes" xml:space="preserve">
          <source>Gearbox cames with builtin support for gevent, so serving an application under Gevent
is just a matter of using &lt;strong&gt;gearbox#gevent&lt;/strong&gt; as your server inside the &lt;strong&gt;server:main&lt;/strong&gt; section
of the configuration file.</source>
          <target state="translated">Gearbox에는 gevent에 대한 지원이 내장되어 있으므로 Gevent에서 애플리케이션을 제공하는 것은 구성 파일 의 &lt;strong&gt;server : main&lt;/strong&gt; 섹션에서 &lt;strong&gt;gearbox # gevent&lt;/strong&gt; 를 서버로 사용하기 &lt;strong&gt;만하면&lt;/strong&gt; 됩니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6897a34cba05a97777d005463835731f07379e1c" translate="yes" xml:space="preserve">
          <source>Gearbox is a paster command replacement for TurboGears2.
It has been created during the process of providing Python3 support to the TurboGears2 web framework,
while still being backward compatible with the existing TurboGears projects.</source>
          <target state="translated">Gearbox는 TurboGears2를 대체하는 Paster 명령입니다. TurboGears2 웹 프레임 워크에 Python3 지원을 제공하는 과정에서 생성되었지만 기존 TurboGears 프로젝트와 여전히 역 호환됩니다.</target>
        </trans-unit>
        <trans-unit id="0b353c72330a45375d53975ca955001bf59f24a7" translate="yes" xml:space="preserve">
          <source>Gearbox is based on a stripped down version of &lt;em&gt;Cliff&lt;/em&gt; command line framework, you might want
to consider &lt;a href=&quot;http://docs.openstack.org/developer/cliff/&quot;&gt;Cliff&lt;/a&gt; for more advanced use cases
and custom command interpreters.</source>
          <target state="translated">Gearbox는 제거 된 버전의 &lt;em&gt;Cliff&lt;/em&gt; 명령 줄 프레임 워크를 기반으로합니다. 더 고급 사용 사례 및 사용자 지정 명령 인터프리터를 위해 &lt;a href=&quot;http://docs.openstack.org/developer/cliff/&quot;&gt;Cliff&lt;/a&gt; 를 고려할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="16a43ae6ce8e5fd172dfcd61e5d5abba6bf542e7" translate="yes" xml:space="preserve">
          <source>Gearbox will automatically load any command registered as a setuptools entry point with</source>
          <target state="translated">Gearbox는 setuptools 진입 점으로 등록 된 모든 명령을 자동으로로드합니다.</target>
        </trans-unit>
        <trans-unit id="e052bbd031a1f8e986f1b709d2a9b913430ec845" translate="yes" xml:space="preserve">
          <source>Here are a few examples, this will replace all xi:include occurrences
with py:extends in all the template files recursively:</source>
          <target state="translated">다음은 몇 가지 예입니다. 이것은 모든 템플릿 파일에서 모든 xi : include 항목을 반복적으로 py : extends로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="8db537a5a6b7cdbd41fe29302fa1a5a5cb057813" translate="yes" xml:space="preserve">
          <source>If you are moving your TurboGears2 project from paster you will probably end serving your
application with Paste HTTP server even if you are using the</source>
          <target state="translated">Paster에서 TurboGears2 프로젝트를 이동하는 경우에는 아마도 Paste HTTP 서버를 사용하는 경우에도 애플리케이션 서비스를 종료 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="d09b37b186bc67f50a8cda28b8432aad4dffec73" translate="yes" xml:space="preserve">
          <source>Inherit from the class and implement the &lt;em&gt;get_description&lt;/em&gt;, &lt;em&gt;get_parser&lt;/em&gt; and &lt;em&gt;take_action&lt;/em&gt; methods
as described by the  documentation.</source>
          <target state="translated">클래스에서 상속 하고 설명서에 설명 된대로 &lt;em&gt;get_description&lt;/em&gt; , &lt;em&gt;get_parser&lt;/em&gt; 및 &lt;em&gt;take_action&lt;/em&gt; 메서드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">설치 중</target>
        </trans-unit>
        <trans-unit id="242540bd15dd1ecd3b7129344dd8722e9def55b1" translate="yes" xml:space="preserve">
          <source>Installing the TurboGears 2.3 development tools you will get access some some gearbox commands specific
to TurboGears2 projects management, those are the</source>
          <target state="translated">TurboGears 2.3 개발 도구를 설치하면 TurboGears2 프로젝트 관리에 특정한 몇 가지 기어 박스 명령에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e52134a5aae1aa689e78361455d86bb678e6561" translate="yes" xml:space="preserve">
          <source>It is also possible to rely on regex and python for more complex
replacements, like updating the Copyright year in your documentation:</source>
          <target state="translated">문서에서 저작권 연도를 업데이트하는 것과 같이보다 복잡한 대체를 위해 regex 및 python에 의존 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a753864c018d90f248e5bd6d5fae40bf4921ac93" translate="yes" xml:space="preserve">
          <source>Just by installing gearbox itself your TurboGears project will be able to use gearbox system wide
commands like</source>
          <target state="translated">기어 박스 자체를 설치하는 것만으로 TurboGears 프로젝트는 다음과 같은 기어 박스 시스템 전체 명령을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4fda3fded3ef76c3b88798fc1a5bb3eb3a04946" translate="yes" xml:space="preserve">
          <source>Out of The Box</source>
          <target state="translated">상자 밖으로</target>
        </trans-unit>
        <trans-unit id="27352b2b463b7c072417a02bbdfc4fc80c3a786d" translate="yes" xml:space="preserve">
          <source>Patching</source>
          <target state="translated">패칭</target>
        </trans-unit>
        <trans-unit id="06839a51e3c430150554626c7dc0c95cdf726147" translate="yes" xml:space="preserve">
          <source>Please refer to</source>
          <target state="translated">참조하십시오</target>
        </trans-unit>
        <trans-unit id="e2c5f3f6b5f85b10ef97ae46467458dd4f624965" translate="yes" xml:space="preserve">
          <source>Scaffolding</source>
          <target state="translated">발판</target>
        </trans-unit>
        <trans-unit id="aeb344ed1ae6226810d1a3c0b49883fcfdcfd304" translate="yes" xml:space="preserve">
          <source>Scaffolding is the process of creating a new component of your web application
through a template or preset.</source>
          <target state="translated">스캐 폴딩은 템플릿 또는 사전 설정을 통해 웹 애플리케이션의 새 구성 요소를 만드는 프로세스입니다.</target>
        </trans-unit>
        <trans-unit id="9494345e12669172863d8494334388f422345ca9" translate="yes" xml:space="preserve">
          <source>Serving with GEvent</source>
          <target state="translated">GEvent로 게재</target>
        </trans-unit>
        <trans-unit id="697e3534ae085adbecba2ed064a2d1b1c6c38e29" translate="yes" xml:space="preserve">
          <source>Template Based Commands</source>
          <target state="translated">템플릿 기반 명령</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">그만큼</target>
        </trans-unit>
        <trans-unit id="4635d55f069dd0340bcf7ad52a75d13e5d784ba8" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;gearbox#wsgiref&lt;/strong&gt; also supports an experimental multithreaded version that
can be enabled by setting the</source>
          <target state="translated">&lt;strong&gt;기어 # 1 wsgiref은&lt;/strong&gt; 또한 설정하여 사용할 수있는 실험적인 멀티 스레딩을 지원 버전</target>
        </trans-unit>
        <trans-unit id="650a6b975a547c17980680b6fc666a81b6c0c798" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;paste.app_factory&lt;/strong&gt; section will let</source>
          <target state="translated">&lt;strong&gt;paste.app_factory&lt;/strong&gt; 섹션 드릴 것입니다</target>
        </trans-unit>
        <trans-unit id="1e2f0d0fb8278d47073605ca33c9e37b39ad7d86" translate="yes" xml:space="preserve">
          <source>The gearbox gevent server will automatically monkeypatch all the python modules apart
from the DNS related functions before loading your application.
Not much more apart making sure that your code is gevent compatible is required.</source>
          <target state="translated">기어 박스 gevent 서버는 애플리케이션을로드하기 전에 DNS 관련 기능을 제외한 모든 Python 모듈을 자동으로 몽키 패치합니다. 코드가 gevent와 호환되는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="64078776ee5a09073b83b5f1beae4bb3541ac82d" translate="yes" xml:space="preserve">
          <source>The main difference with the paster command is usually only that gearbox commands explicitly set the
configuration file using the</source>
          <target state="translated">paster 명령과의 주요 차이점은 일반적으로 기어 박스 명령이 다음을 사용하여 구성 파일을 명시 적으로 설정한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fa1b6116922903db0bfe76befe146fad3f0f538a" translate="yes" xml:space="preserve">
          <source>The only difference is that your &lt;em&gt;take_action&lt;/em&gt; method has to end by calling</source>
          <target state="translated">유일한 차이점은 &lt;em&gt;take_action&lt;/em&gt; 메소드는 다음을 호출하여 종료 해야한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3260a90c75a73e913b3edebdfee9ad8ab5eb7c0a" translate="yes" xml:space="preserve">
          <source>The reason for this behavior is that gearbox is going to use what is specified inside
the &lt;strong&gt;server:main&lt;/strong&gt; section of your &lt;em&gt;.ini&lt;/em&gt; file to serve your application.
TurboGears2 projects quickstarted before 2.3 used Paste and so the projects is probably
configured to use Paste#http as the server. This is not an issue by itself, it will just require
you to have Paste installed to be able to serve the application, to totally remove the Paste
dependency simply replace &lt;strong&gt;Paste#http&lt;/strong&gt; with &lt;strong&gt;gearbox#wsgiref&lt;/strong&gt;.</source>
          <target state="translated">이 동작의 이유는 기어 박스가 &lt;em&gt;.ini&lt;/em&gt; 파일 의 &lt;strong&gt;server : main&lt;/strong&gt; 섹션에 지정된 것을 사용하여 애플리케이션을 제공하기 때문입니다. 2.3 이전에 빠른 시작된 TurboGears2 프로젝트는 Paste를 사용했기 때문에 프로젝트는 Paste # http를 서버로 사용하도록 구성되었을 것입니다. 이것은 그 자체로 문제가되지 않습니다. 애플리케이션을 제공하려면 Paste를 설치해야합니다. Paste 종속성을 완전히 제거하려면 &lt;strong&gt;Paste # http&lt;/strong&gt; 를 &lt;strong&gt;gearbox # wsgiref로 바꾸면&lt;/strong&gt; 됩니다.&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ba9ad2b7d1fdfaf88884085f456d711898b6a10" translate="yes" xml:space="preserve">
          <source>Then it is possible to ask for help for a given command by using</source>
          <target state="translated">그런 다음 사용하여 주어진 명령에 대한 도움을 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc9486971d60463e2a71498a3cf2a0f15ceabd51" translate="yes" xml:space="preserve">
          <source>Then register your command in the setup.py entry points of your package:</source>
          <target state="translated">그런 다음 패키지의 setup.py 진입 점에 명령을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="940005046528291b2ea5003bc81146bd60f0fee4" translate="yes" xml:space="preserve">
          <source>This will create a</source>
          <target state="translated">이것은</target>
        </trans-unit>
        <trans-unit id="b17b6932856cf1a76c6a0d198332f08d800b3df0" translate="yes" xml:space="preserve">
          <source>To enable</source>
          <target state="translated">사용하려면</target>
        </trans-unit>
        <trans-unit id="f863d867e59f57b0ae1fe5341c1a404ab398a4ac" translate="yes" xml:space="preserve">
          <source>To have a list of the available commands simply run</source>
          <target state="translated">사용 가능한 명령 목록을 보려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="64b3e1503959c91b73a0d66dfddea276afd68e7c" translate="yes" xml:space="preserve">
          <source>When the run_template command is called Gearbox will automatically run the &lt;strong&gt;template&lt;/strong&gt;
directory in the same package where the command was available.</source>
          <target state="translated">run_template 명령이 호출되면 Gearbox는 명령을 사용할 수있는 동일한 패키지 의 &lt;strong&gt;템플릿&lt;/strong&gt; 디렉토리를 자동으로 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="bea2e0a9e53a5a0180ade9d4a6d9137febe0318c" translate="yes" xml:space="preserve">
          <source>While the &lt;em&gt;quickstart&lt;/em&gt; command will be automatically available, you will have to enable project scope plugins
for gearbox before the other two became available. This will let gearbox know that you are running it inside
a TurboGears2 project and so that the commands that only make sense for TurboGears2 projects will became available.</source>
          <target state="translated">&lt;em&gt;빠른 시작&lt;/em&gt; 명령은 자동으로 사용할 수 있지만 다른 두 개를 사용할 수있게되기 전에 기어 박스에 대한 프로젝트 범위 플러그인을 활성화해야합니다. 이렇게하면 Gearbox에 TurboGears2 프로젝트 내에서 실행 중임을 알리고 TurboGears2 프로젝트에만 의미가있는 명령을 사용할 수있게됩니다.</target>
        </trans-unit>
        <trans-unit id="c52e6f5354776edcd476d4754dad6b1247bdfb20" translate="yes" xml:space="preserve">
          <source>While the &lt;strong&gt;gearbox.plugins&lt;/strong&gt; section will let &lt;em&gt;gearbox&lt;/em&gt; itself know that inside that directory the tg.devtools
commands have to be enabled making</source>
          <target state="translated">그동안 &lt;strong&gt;gearbox.plugins의&lt;/strong&gt; 섹션을 드릴 것입니다 &lt;em&gt;기어 박스&lt;/em&gt; 자체는 그 디렉토리 안에 tg.devtools 명령이 결정을 활성화 할 필요가 있음을 알고</target>
        </trans-unit>
        <trans-unit id="ce0ddcef152c850bf33051a7320fd887fbbba36e" translate="yes" xml:space="preserve">
          <source>Writing new gearbox commands</source>
          <target state="translated">새로운 기어 박스 명령 작성</target>
        </trans-unit>
        <trans-unit id="dbf75e9f55cc16e76cf51e790aafff6214a6c25c" translate="yes" xml:space="preserve">
          <source>Writing new gearbox template commands is as simple as creating a &lt;strong&gt;gearbox.command.TemplateCommand&lt;/strong&gt; subclass and
place it inside a &lt;em&gt;command.py&lt;/em&gt; file in a python package.</source>
          <target state="translated">새 기어 박스 템플릿 명령을 작성하는 것은 &lt;strong&gt;gearbox.command.TemplateCommand&lt;/strong&gt; 하위 클래스 를 만들고 파이썬 패키지 의 &lt;em&gt;command.py&lt;/em&gt; 파일에 배치 하는 &lt;strong&gt;것만&lt;/strong&gt; 큼 간단 합니다.</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="36ee9b282d4c6bfd101e3cbf3219a43c7cf223cd" translate="yes" xml:space="preserve">
          <source>and will look like:</source>
          <target state="translated">다음과 같이 보일 것입니다.</target>
        </trans-unit>
        <trans-unit id="3912b630792140fb33aabe6338c0c7e59ac2196e" translate="yes" xml:space="preserve">
          <source>available when we run gearbox
from inside our project directory.</source>
          <target state="translated">프로젝트 디렉토리 내에서 기어 박스를 실행할 때 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b46edb7d5658e4d8ec826c068298a83481c52fa" translate="yes" xml:space="preserve">
          <source>class, override the</source>
          <target state="translated">클래스, 재정의</target>
        </trans-unit>
        <trans-unit id="9b24484415c3dfc771bf561884623c9d1a2414ea" translate="yes" xml:space="preserve">
          <source>command permits to create new files from scaffolds (file templates)
which you can place inside your project itself. Scaffold files should be named with</source>
          <target state="translated">명령을 사용하면 프로젝트 자체에 배치 할 수있는 스캐 폴드 (파일 템플릿)에서 새 파일을 만들 수 있습니다. 스캐 폴드 파일의 이름은</target>
        </trans-unit>
        <trans-unit id="0301bd93e256d423d08224e3a601c2212538196c" translate="yes" xml:space="preserve">
          <source>command to get
a list of the commands available (running</source>
          <target state="translated">사용 가능한 명령 목록을 가져 오는 명령 (실행</target>
        </trans-unit>
        <trans-unit id="f222d079d8898a6539a06b56d3424266897102bb" translate="yes" xml:space="preserve">
          <source>command.</source>
          <target state="translated">명령.</target>
        </trans-unit>
        <trans-unit id="0a00b15dfe45e0f5886027a466259243d0117c24" translate="yes" xml:space="preserve">
          <source>commands make sure that your &lt;em&gt;setup.py&lt;/em&gt;</source>
          <target state="translated">명령은 &lt;em&gt;setup.py&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7981096bdda9fed4b0fba9a174a798cfbd5c1fd6" translate="yes" xml:space="preserve">
          <source>commands.</source>
          <target state="translated">명령.</target>
        </trans-unit>
        <trans-unit id="c91b44ad3ddd61f2c4c8164bc4649a507d7e33f5" translate="yes" xml:space="preserve">
          <source>commands.
These commands provide a replacement for the paster serve, paster setup-app and paster create commands.</source>
          <target state="translated">명령. 이 명령은 paster serve, paster setup-app 및 paster create 명령을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="a859bbba7b52d2be70ffc7f04cef359927fe22ce" translate="yes" xml:space="preserve">
          <source>development.ini</source>
          <target state="translated">development.ini</target>
        </trans-unit>
        <trans-unit id="01afe3d261536c82f94b915eedd0304ee1382df3" translate="yes" xml:space="preserve">
          <source>entry_points</source>
          <target state="translated">entry_points</target>
        </trans-unit>
        <trans-unit id="b7a23ea016a4c5b235af8fe197c111195bb9687e" translate="yes" xml:space="preserve">
          <source>extension and can be used by running:</source>
          <target state="translated">다음을 실행하여 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="081a5f7f5c146f3d0a896327bfbd23f02e65fac5" translate="yes" xml:space="preserve">
          <source>file (do not provide the extension, that is specified inside
the templatename itself) starting from the</source>
          <target state="translated">파일 (템플릿 이름 자체에 지정된 확장자를 제공하지 않음)은</target>
        </trans-unit>
        <trans-unit id="37cdccb3f42b116f4a9ca0c880ac867cb93c906e" translate="yes" xml:space="preserve">
          <source>for available options.</source>
          <target state="translated">사용 가능한 옵션.</target>
        </trans-unit>
        <trans-unit id="5399527821444906871e69515cf0bfedf0bbd2c9" translate="yes" xml:space="preserve">
          <source>gearbox --help</source>
          <target state="translated">기어 박스-도움말</target>
        </trans-unit>
        <trans-unit id="6240f02d102e8e10b4c0e9744139db8c824cdb7a" translate="yes" xml:space="preserve">
          <source>gearbox can be installed from pypi:</source>
          <target state="translated">기어 박스는 pypi에서 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="856cfad40dac19e43d7ba38a5049189537e10bb2" translate="yes" xml:space="preserve">
          <source>gearbox help command</source>
          <target state="translated">기어 박스 도움말 명령</target>
        </trans-unit>
        <trans-unit id="771fdaa622b1700f85bda813321ed7124d372659" translate="yes" xml:space="preserve">
          <source>gearbox help patch</source>
          <target state="translated">기어 박스 도움말 패치</target>
        </trans-unit>
        <trans-unit id="12bca7dbc0d03c876ac678cc783e8b092c8e5719" translate="yes" xml:space="preserve">
          <source>gearbox makepackage</source>
          <target state="translated">변속기 makepackage</target>
        </trans-unit>
        <trans-unit id="10882031089e0afe8202efb894b26c70c8f50ca3" translate="yes" xml:space="preserve">
          <source>gearbox migrate</source>
          <target state="translated">기어 박스 마이그레이션</target>
        </trans-unit>
        <trans-unit id="33381c2e4a230ba951bb62ddc396a21feab657b5" translate="yes" xml:space="preserve">
          <source>gearbox quickstart</source>
          <target state="translated">기어 박스 빠른 시작</target>
        </trans-unit>
        <trans-unit id="f98d7d84337d0e80a44c6c05b3595df1c73a9c3f" translate="yes" xml:space="preserve">
          <source>gearbox scaffold</source>
          <target state="translated">변속기 비계</target>
        </trans-unit>
        <trans-unit id="c990770702280242af32de64de850ed8d429dc3e" translate="yes" xml:space="preserve">
          <source>gearbox serve</source>
          <target state="translated">기어 박스 서브</target>
        </trans-unit>
        <trans-unit id="f9b53598e359dc2226747a350bc78eb8a7567834" translate="yes" xml:space="preserve">
          <source>gearbox setup-app</source>
          <target state="translated">기어 박스 설정 앱</target>
        </trans-unit>
        <trans-unit id="1b4ae24f89718963948420a1e7c80063d826e029" translate="yes" xml:space="preserve">
          <source>gearbox tgshell</source>
          <target state="translated">변속기 tgshell</target>
        </trans-unit>
        <trans-unit id="f75f25f81c0e2381c0b94d61712f5a77ba0fce91" translate="yes" xml:space="preserve">
          <source>gearbox.command.Command</source>
          <target state="translated">gearbox.command.Command</target>
        </trans-unit>
        <trans-unit id="98c63dd22c97d55ccfe6b151aaf2eb76227acb8a" translate="yes" xml:space="preserve">
          <source>gearbox.commands</source>
          <target state="translated">gearbox.commands</target>
        </trans-unit>
        <trans-unit id="3c32a9b8969474e52c4a1555809bd4026beeabbe" translate="yes" xml:space="preserve">
          <source>get_parser</source>
          <target state="translated">get_parser</target>
        </trans-unit>
        <trans-unit id="92005ecf3788faea8346a7919fba0232188561ab" translate="yes" xml:space="preserve">
          <source>help</source>
          <target state="translated">도움</target>
        </trans-unit>
        <trans-unit id="9a13eb0a83ac5d7bc6fcc8fb8f01d30a565d12e1" translate="yes" xml:space="preserve">
          <source>help somecommand</source>
          <target state="translated">도와주세요</target>
        </trans-unit>
        <trans-unit id="68456a0b1a2475014b28892b2f47f8f9d6b013d4" translate="yes" xml:space="preserve">
          <source>in place of</source>
          <target state="translated">대신에</target>
        </trans-unit>
        <trans-unit id="a88b886ef123879fe10e6d86e0ce9b79b83e01bf" translate="yes" xml:space="preserve">
          <source>is one of the few builtin commands of Gearbox and is commonly used to
update code. You can think of it as an easier to used sed command mixed with python.</source>
          <target state="translated">Gearbox의 몇 안되는 내장 명령 중 하나이며 일반적으로 코드를 업데이트하는 데 사용됩니다. 파이썬과 혼합 된 sed 명령을 사용하기 더 쉽다고 생각할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="deb37de3b4b5da402d408252eab886c978de6271" translate="yes" xml:space="preserve">
          <source>key. To create a new command you must subclass the</source>
          <target state="translated">키. 새 명령을 생성하려면</target>
        </trans-unit>
        <trans-unit id="88a9d8330717b1ec43a2005ba00f10db303b2826" translate="yes" xml:space="preserve">
          <source>know how to create the application that
has to be served. Gearbox relies on PasteDeploy for application setup, so it required a paste.app_factory
section to be able to correctly load the application.</source>
          <target state="translated">제공해야하는 애플리케이션을 만드는 방법을 알고 있어야합니다. Gearbox는 애플리케이션 설정을 위해 PasteDeploy에 의존하므로 애플리케이션을 올바르게로드하려면 paste.app_factory 섹션이 필요했습니다.</target>
        </trans-unit>
        <trans-unit id="e5a76dabee9e70e1b4634cf8e425f5e9738707ff" translate="yes" xml:space="preserve">
          <source>look like:</source>
          <target state="translated">다음과 같이 보입니다.</target>
        </trans-unit>
        <trans-unit id="8a238343ad686c03e28868e61fd4501c150dba36" translate="yes" xml:space="preserve">
          <source>methods to provide custom options and
a custom behaviour:</source>
          <target state="translated">사용자 지정 옵션 및 사용자 지정 동작을 제공하는 메서드 :</target>
        </trans-unit>
        <trans-unit id="d2710cc6307ff3acbda8ba2aaf4d255ba7797859" translate="yes" xml:space="preserve">
          <source>model.py.template</source>
          <target state="translated">model.py.template</target>
        </trans-unit>
        <trans-unit id="5d489ec7b6de466cb35c662f3c14647af06690d9" translate="yes" xml:space="preserve">
          <source>option in your server
configuration section.</source>
          <target state="translated">서버 구성 섹션의 옵션.</target>
        </trans-unit>
        <trans-unit id="b2104617544b43db22ca1426c92a02febfd6e3a7" translate="yes" xml:space="preserve">
          <source>option instead of accepting it positionally.  By default gearbox
will always load a configuration file named</source>
          <target state="translated">위치 적으로 받아들이는 대신 옵션. 기본적으로 기어 박스는 항상 다음과 같은 구성 파일을로드합니다.</target>
        </trans-unit>
        <trans-unit id="1d9ad0addee82809659247e9008e6f9e82aa9000" translate="yes" xml:space="preserve">
          <source>or:</source>
          <target state="translated">또는:</target>
        </trans-unit>
        <trans-unit id="efdcdf8382f4a66cd1194a6f989065d4c63446ac" translate="yes" xml:space="preserve">
          <source>paster serve development.ini</source>
          <target state="translated">paster 봉사 development.ini</target>
        </trans-unit>
        <trans-unit id="d75b3b528276d7a9f30a04b8bccaf74e1d61f67a" translate="yes" xml:space="preserve">
          <source>patch</source>
          <target state="translated">반점</target>
        </trans-unit>
        <trans-unit id="aeea1f1638f5a551ea5c66938e5fb39f043f6661" translate="yes" xml:space="preserve">
          <source>scaffold.</source>
          <target state="translated">발판.</target>
        </trans-unit>
        <trans-unit id="00c5375aa65ae88ad1efcba36499574987c4336c" translate="yes" xml:space="preserve">
          <source>self.run_template(output_dir, opts)</source>
          <target state="translated">self.run_template (output_dir, opts)</target>
        </trans-unit>
        <trans-unit id="256cbe4e6606d8417fb3c8554768fbfaeb81f327" translate="yes" xml:space="preserve">
          <source>should just work for most of the users</source>
          <target state="translated">대부분의 사용자에게 적합해야합니다.</target>
        </trans-unit>
        <trans-unit id="b31f7e922a3bb95a05ab6de6ef31046918bca848" translate="yes" xml:space="preserve">
          <source>take_action</source>
          <target state="translated">행동을 취하다</target>
        </trans-unit>
        <trans-unit id="0e8a3ad980ec179856012b7eecf4327e99cd44cd" translate="yes" xml:space="preserve">
          <source>target</source>
          <target state="translated">표적</target>
        </trans-unit>
        <trans-unit id="3e6f27258ea91e80f538e22969a8e0025adba197" translate="yes" xml:space="preserve">
          <source>templatename</source>
          <target state="translated">템플릿 이름</target>
        </trans-unit>
        <trans-unit id="331adb44cd1594ee0e274c2491d6478df8bb823d" translate="yes" xml:space="preserve">
          <source>where &lt;em&gt;output_dir&lt;/em&gt; is the directory where the template output has to be written and &lt;em&gt;opts&lt;/em&gt; are the command options
as your take_action method received them.</source>
          <target state="translated">여기서 &lt;em&gt;output_dir&lt;/em&gt; 은 템플릿 출력을 작성 해야하는 디렉토리이고 &lt;em&gt;opts&lt;/em&gt; 는 take_action 메소드가 수신 한 명령 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="62c1e77ca2ec424142a95e1a8764e5a49fdca065" translate="yes" xml:space="preserve">
          <source>will provide help for the given sub command).</source>
          <target state="translated">주어진 하위 명령에 대한 도움말을 제공합니다).</target>
        </trans-unit>
        <trans-unit id="49ad4c390c3a96444016953b7f50ead6c6b8162d" translate="yes" xml:space="preserve">
          <source>wsgiref.threaded = true</source>
          <target state="translated">wsgiref.threaded = true</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
