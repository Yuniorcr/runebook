<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/bientropy/">
    <body>
      <group id="bientropy">
        <trans-unit id="3f5ddf18fcf613b731b3193899beb0cad7b4897d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pip &amp;gt;= 1.4&lt;/code&gt; with &lt;code&gt;setuptools &amp;gt;= 0.8&lt;/code&gt; will use a wheel if there is one
available for the target platform:</source>
          <target state="translated">&lt;code&gt;pip &amp;gt;= 1.4&lt;/code&gt; with &lt;code&gt;setuptools &amp;gt;= 0.8&lt;/code&gt; 은 대상 플랫폼에 사용할 수있는 휠이있는 경우 휠을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="83d8ddc4d0300892cbe95f63da5ed1d4cd4590e3" translate="yes" xml:space="preserve">
          <source>A compiled distribution of the MPIR library was also available at:
&lt;a href=&quot;http://www.holoborodko.com/pavel/mpfr/#download&quot;&gt;http://www.holoborodko.com/pavel/mpfr/#download&lt;/a&gt;
To use it, download the &lt;code&gt;MPFR-MPIR-x86-x64-MSVC2010.zip&lt;/code&gt; file and extract
&lt;code&gt;mpir&lt;/code&gt; from the ZIP file to this directory.</source>
          <target state="translated">:에서 MPIR 라이브러리의 컴파일 유통도 가능했다 &lt;a href=&quot;http://www.holoborodko.com/pavel/mpfr/#download&quot;&gt;http://www.holoborodko.com/pavel/mpfr/#download&lt;/a&gt; 를 사용하려면 다운로드 &lt;code&gt;MPFR-MPIR-x86-x64-MSVC2010.zip&lt;/code&gt; 의 파일을 추출 &lt;code&gt;mpir&lt;/code&gt; 에서을 이 디렉토리에 ZIP 파일을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0172e4d52d0926c32fe2582bf01d142965369d77" translate="yes" xml:space="preserve">
          <source>A list of available wheel files is available at:
&lt;a href=&quot;https://pypi.org/project/BiEntropy/#files&quot;&gt;https://pypi.org/project/BiEntropy/#files&lt;/a&gt;</source>
          <target state="translated">사용 가능한 휠 파일 목록은 &lt;a href=&quot;https://pypi.org/project/BiEntropy/#files&quot;&gt;https://pypi.org/project/BiEntropy/#files&lt;/a&gt; 에서 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2e51d48692007f65b40def84fe466e5302d59d4" translate="yes" xml:space="preserve">
          <source>According to the paper, BiEntropy is &quot;a simple algorithm which computes the
approximate entropy of a finite binary string of arbitrary length&quot; using &quot;a
weighted average of the Shannon Entropies of the string and all but the last
binary derivative of the string.&quot; In other words, these metrics can be used to
help assess the disorder or randomness of binary or byte strings, particularly
those that are too short for other randomness tests.</source>
          <target state="translated">논문에 따르면 BiEntropy는 &quot;문자열의 섀넌 엔트로피의 가중 평균과 문자열의 마지막 이진 도함수&quot;를 사용하여 &quot;임의의 길이의 유한 이진 문자열의 대략적인 엔트로피를 계산하는 간단한 알고리즘&quot;입니다. 즉, 이러한 측정 항목은 이진 또는 바이트 문자열, 특히 다른 임의성 테스트에 너무 짧은 문자열의 장애 또는 임의성을 평가하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b513c044fcbfba9722f178de84cb93ef5404fef" translate="yes" xml:space="preserve">
          <source>According to the paper, the &quot;BiEntropy algorithm evaluates the order and
disorder of a binary string of length n in O(n^2) time using O(n) memory.&quot; In
other words, the run time has quadratic growth and the memory requirement has
linear growth with respect to the string length.</source>
          <target state="translated">논문에 따르면, &quot;BiEntropy 알고리즘은 O (n) 메모리를 사용하여 O (n ^ 2) 시간에 길이 n의 이진 문자열의 순서와 무질서를 평가합니다.&quot; 즉, 런타임은 2 차 성장을 가지며 메모리 요구 사항은 문자열 길이에 대해 선형 성장을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="e0461c832beeaa4ecd37de656b478e520796588e" translate="yes" xml:space="preserve">
          <source>After installing, a demonstration can be run with this command:</source>
          <target state="translated">설치 후 다음 명령으로 데모를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd8d41db097180467ba933c80dce264514e46da2" translate="yes" xml:space="preserve">
          <source>After installing, the tests should be run with the command:</source>
          <target state="translated">설치 후 다음 명령으로 테스트를 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="737ce85f3e07087dde65c3105de82c6a872c80d3" translate="yes" xml:space="preserve">
          <source>Aliases of C versions of BiEn and TBiEn are included at the top level of this
module for convenience.</source>
          <target state="translated">편의를 위해 BiEn 및 TBiEn의 C 버전 별칭이이 모듈의 최상위 수준에 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2a52548bd0852b99153ddd79a1f550f70674c7d" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">저자</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">기본 사용법</target>
        </trans-unit>
        <trans-unit id="f5f3e06fd0f8a0b8b252ce40271992add78bdfd3" translate="yes" xml:space="preserve">
          <source>BiEn</source>
          <target state="translated">BiEn</target>
        </trans-unit>
        <trans-unit id="a10098252d8ff712f85a9caec58066e7aed35523" translate="yes" xml:space="preserve">
          <source>BiEntropy Randomness Metrics for Python</source>
          <target state="translated">Python 용 BiEntropy 무작위성 메트릭</target>
        </trans-unit>
        <trans-unit id="8e5fdab92dece79d7629d6d901687613ddc6ab5a" translate="yes" xml:space="preserve">
          <source>Bytes</source>
          <target state="translated">바이트</target>
        </trans-unit>
        <trans-unit id="31fd6a6d532fb6dcfc06ee9e167202731b37d296" translate="yes" xml:space="preserve">
          <source>Compiling GMP on Microsoft Windows is only supported under Cygwin, MinGW or
DJGPP. However, this package can be compiled with MPIR, a fork of GMP, on
Windows. The source for MPIR is available at &lt;a href=&quot;http://mpir.org/&quot;&gt;http://mpir.org/&lt;/a&gt;
The &lt;code&gt;setup.py&lt;/code&gt; script expects the header files, library files and DLL to be
available under &lt;code&gt;mpir/dll/x64/Release&lt;/code&gt;.</source>
          <target state="translated">Microsoft Windows에서 GMP 컴파일은 Cygwin, MinGW 또는 DJGPP에서만 지원됩니다. 그러나이 패키지는 Windows에서 GMP의 포크 인 MPIR로 컴파일 할 수 있습니다. MPIR의 소스는 &lt;a href=&quot;http://mpir.org/&quot;&gt;http://mpir.org/&lt;/a&gt; 에서 사용할 수 있습니다 . &lt;code&gt;setup.py&lt;/code&gt; 스크립트는 헤더 파일, 라이브러리 파일 및 DLL이 &lt;code&gt;mpir/dll/x64/Release&lt;/code&gt; 아래에서 사용 가능할 것으로 예상합니다 .</target>
        </trans-unit>
        <trans-unit id="c017b10e98e6cd32d75518f3123d509ecedb022c" translate="yes" xml:space="preserve">
          <source>Compiling on Windows</source>
          <target state="translated">Windows에서 컴파일</target>
        </trans-unit>
        <trans-unit id="8bce5558a6553d24ef72ae6b0d6c9b9e3dd914c8" translate="yes" xml:space="preserve">
          <source>Compiling:</source>
          <target state="translated">컴파일 :</target>
        </trans-unit>
        <trans-unit id="9b12c73435b53f978ad386bcd39fb1507a9295cd" translate="yes" xml:space="preserve">
          <source>Copyright 2018 National Technology &amp;amp; Engineering Solutions of Sandia, LLC
(NTESS). Under the terms of Contract DE-NA0003525 with NTESS, the U.S.
Government retains certain rights in this software.</source>
          <target state="translated">Copyright 2018 National Technology &amp;amp; Engineering Solutions of Sandia, LLC (NTESS). NTESS와 DE-NA0003525 계약 조건에 따라 미국 정부는이 소프트웨어에 대한 특정 권리를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="4c17aadf5117487aab7bc50cbf056caf3977cc31" translate="yes" xml:space="preserve">
          <source>Development</source>
          <target state="translated">개발</target>
        </trans-unit>
        <trans-unit id="7d2240de8248d42cce43d8966535fd982ce055b1" translate="yes" xml:space="preserve">
          <source>Following is a log-log plot of the average time to compute the various
implementations of BiEntropy on a 2.40GHz Intel(R) Xeon(R) E5645 CPU versus the
length of the input in bytes.</source>
          <target state="translated">다음은 2.40GHz Intel (R) Xeon (R) E5645 CPU에서 BiEntropy의 다양한 구현을 계산하는 데 걸리는 평균 시간과 입력 길이 (바이트)의 로그-로그 플롯입니다.</target>
        </trans-unit>
        <trans-unit id="0d2bed60504a6c1719a7be92905b34849c27cd9d" translate="yes" xml:space="preserve">
          <source>For running tests:</source>
          <target state="translated">테스트 실행 :</target>
        </trans-unit>
        <trans-unit id="59e7b2ce604849e20bdb71f62a3eac8e26a1e750" translate="yes" xml:space="preserve">
          <source>GCC &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;http://gcc.gnu.org/&lt;/a&gt; on Linux</source>
          <target state="translated">Linux의 GCC &lt;a href=&quot;http://gcc.gnu.org/&quot;&gt;http://gcc.gnu.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df26b8fcc72735ff425d85352af25e133580d940" translate="yes" xml:space="preserve">
          <source>GMP &lt;a href=&quot;http://gmplib.org/&quot;&gt;http://gmplib.org/&lt;/a&gt; or MPIR &lt;a href=&quot;http://mpir.org/&quot;&gt;http://mpir.org/&lt;/a&gt; on Windows</source>
          <target state="translated">Windows의 경우 GMP &lt;a href=&quot;http://gmplib.org/&quot;&gt;http://gmplib.org/&lt;/a&gt; 또는 MPIR &lt;a href=&quot;http://mpir.org/&quot;&gt;http://mpir.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57fd5528cc70ed06cbdc3f39884317f713de65a4" translate="yes" xml:space="preserve">
          <source>GitHub: &lt;a href=&quot;https://github.com/sandialabs/bientropy&quot;&gt;https://github.com/sandialabs/bientropy&lt;/a&gt;</source>
          <target state="translated">GitHub : &lt;a href=&quot;https://github.com/sandialabs/bientropy&quot;&gt;https://github.com/sandialabs/bientropy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b471de163f66d1a95ac62697fdef5bed893e245" translate="yes" xml:space="preserve">
          <source>High-performance implementations of BiEntropy metrics proposed by Grenville J. Croll</source>
          <target state="translated">Grenville J. Croll이 제안한 BiEntropy 메트릭의 고성능 구현</target>
        </trans-unit>
        <trans-unit id="7450c0ab86a4b899cda08f81e504e28f52f9e8fe" translate="yes" xml:space="preserve">
          <source>Included Scripts</source>
          <target state="translated">포함 된 스크립트</target>
        </trans-unit>
        <trans-unit id="54c8f9c48d0793e4a6b0d32753b2b9fab9eec38d" translate="yes" xml:space="preserve">
          <source>Install from Source</source>
          <target state="translated">소스에서 설치</target>
        </trans-unit>
        <trans-unit id="85212a5fe600b9a52d2acb3197087e541e3cb103" translate="yes" xml:space="preserve">
          <source>Install from pip</source>
          <target state="translated">pip에서 설치</target>
        </trans-unit>
        <trans-unit id="8a8fb4a4cd5fda8de8e5e587a3b6e7dd2ecddb15" translate="yes" xml:space="preserve">
          <source>Installation:</source>
          <target state="translated">설치:</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">특허</target>
        </trans-unit>
        <trans-unit id="8cd888ae8de2a5ff3ff9f1208b186b218eea9c87" translate="yes" xml:space="preserve">
          <source>MSVC 14 if using Python 3.x on Windows</source>
          <target state="translated">Windows에서 Python 3.x를 사용하는 경우 MSVC 14</target>
        </trans-unit>
        <trans-unit id="95d7d6e71e472bbe94e7425c2c541d49ba3af06d" translate="yes" xml:space="preserve">
          <source>MSVC 9 if using Python 2.7 on Windows</source>
          <target state="translated">Windows에서 Python 2.7을 사용하는 경우 MSVC 9</target>
        </trans-unit>
        <trans-unit id="63f1124531a1c4475202e120abc93cacea18f099" translate="yes" xml:space="preserve">
          <source>NumPy &lt;a href=&quot;http://numpy.org/&quot;&gt;http://numpy.org/&lt;/a&gt;</source>
          <target state="translated">NumPy &lt;a href=&quot;http://numpy.org/&quot;&gt;http://numpy.org/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="efd642cd8f4087b1fdbdd1f6e62ebce03c88b2b9" translate="yes" xml:space="preserve">
          <source>On Debian/Ubuntu:</source>
          <target state="translated">Debian / Ubuntu :</target>
        </trans-unit>
        <trans-unit id="31028dd2a00dabe04c9a6cb48762f4464dae8990" translate="yes" xml:space="preserve">
          <source>On RedHat:</source>
          <target state="translated">RedHat에서 :</target>
        </trans-unit>
        <trans-unit id="33d4d33d9d6fdfb81f129d873917a19019756981" translate="yes" xml:space="preserve">
          <source>Once MPIR is ready, proceed as usual.</source>
          <target state="translated">MPIR이 준비되면 평소대로 진행하십시오.</target>
        </trans-unit>
        <trans-unit id="767c8bad289be7467646b0828f59efe5e573ad0e" translate="yes" xml:space="preserve">
          <source>Once installed, the tests should be run with the command:</source>
          <target state="translated">일단 설치되면 다음 명령으로 테스트를 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">공연</target>
        </trans-unit>
        <trans-unit id="acefc47ac8e702e35bc771eea74aaca0ce0f0d7f" translate="yes" xml:space="preserve">
          <source>PyPI: &lt;a href=&quot;https://pypi.org/project/BiEntropy&quot;&gt;https://pypi.org/project/BiEntropy&lt;/a&gt;</source>
          <target state="translated">PyPI : &lt;a href=&quot;https://pypi.org/project/BiEntropy&quot;&gt;https://pypi.org/project/BiEntropy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b94bb089abe01a759c5a6a7babb7d505b3385456" translate="yes" xml:space="preserve">
          <source>Python &lt;a href=&quot;http://python.org/&quot;&gt;http://python.org/&lt;/a&gt; (&amp;gt;= 2.7 or &amp;gt;= 3.4)</source>
          <target state="translated">Python &lt;a href=&quot;http://python.org/&quot;&gt;http://python.org/(&amp;gt;=&lt;/a&gt; 2.7 또는&amp;gt; = 3.4)</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">요구 사항</target>
        </trans-unit>
        <trans-unit id="6f4a8aff123b8a641079a081aa0d71cdec88a496" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;/bientropy/demo.py&quot;&gt;demo.py&lt;/a&gt; for more examples.</source>
          <target state="translated">더 많은 예제는 &lt;a href=&quot;/bientropy/demo.py&quot;&gt;demo.py&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="197e31a834d678cb02e7702474a4d69dffa3feb7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/cython/cython/wiki/CythonExtensionsOnWindows&quot;&gt;https://github.com/cython/cython/wiki/CythonExtensionsOnWindows&lt;/a&gt; for more
information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://github.com/cython/cython/wiki/CythonExtensionsOnWindows&quot;&gt;https://github.com/cython/cython/wiki/CythonExtensionsOnWindows&lt;/a&gt; 를 참조 하세요 .</target>
        </trans-unit>
        <trans-unit id="f530f5fcc008c16a83128cc11d2d63d30c4e15fd" translate="yes" xml:space="preserve">
          <source>TBiEn</source>
          <target state="translated">TBiEn</target>
        </trans-unit>
        <trans-unit id="7175532e514c7a5e27e36383a190a2a083115b2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://gmplib.org/&quot;&gt;GMP library&lt;/a&gt; and headers need to be installed before
compiling.</source>
          <target state="translated">&lt;a href=&quot;http://gmplib.org/&quot;&gt;GMP 라이브러리&lt;/a&gt; 와 헤더 컴파일하기 전에 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4c1b9260c095db69608bb59daf04f6e8f55302e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bien&lt;/code&gt; and &lt;code&gt;tbien&lt;/code&gt; functions support inputs of both binary (i.e., not
unicode) strings and object types, such as those provided by the  &lt;code&gt;bitstring&lt;/code&gt;
package, that have both a &lt;code&gt;tobytes()&lt;/code&gt; method that returns a binary string and a
&lt;code&gt;len()&lt;/code&gt; method that returns the length in bits.</source>
          <target state="translated">&lt;code&gt;bien&lt;/code&gt; 및 &lt;code&gt;tbien&lt;/code&gt; 기능 등이 제공하는 것과 같은 두 이진 입력 (즉, 유니 코드) 문자열 및 개체 유형, 지원 &lt;code&gt;bitstring&lt;/code&gt; 모두 갖도록 패키지 &lt;code&gt;tobytes()&lt;/code&gt; 메소드가 그 진 스트링 및 복귀 &lt;code&gt;len()&lt;/code&gt; 메소드 그 길이를 비트 단위로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3493c2f41adaf68276767aa91e353a504c8e88f2" translate="yes" xml:space="preserve">
          <source>The following is a table of speed-ups from the Python to the C implementation
for various string byte lengths:</source>
          <target state="translated">다음은 다양한 문자열 바이트 길이에 대한 Python에서 C 구현으로의 속도 향상 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="f521a0e1c6302a20010e90082fe3102e28e9390a" translate="yes" xml:space="preserve">
          <source>The metrics are implemented in Python using the 'bitstring' package for
handling arbitrary length binary strings and in native C using the GNU Multiple
Precision (GMP) arithmetic library.</source>
          <target state="translated">메트릭은 임의 길이 이진 문자열을 처리하기 위해 'bitstring'패키지를 사용하여 Python에서 구현되고 GMP (GNU Multiple Precision) 산술 라이브러리를 사용하여 네이티브 C로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="73a49b9f0e1fa0e45784d7929cf32dec004ca830" translate="yes" xml:space="preserve">
          <source>The same benchmark script used to generate the data shown in the table and plot
above is also included. It can be run with:</source>
          <target state="translated">위의 표와 플롯에 표시된 데이터를 생성하는 데 사용 된 동일한 벤치 마크 스크립트도 포함됩니다. 다음과 같이 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fe6e798697f57526d908e5372f6bf406633dad7" translate="yes" xml:space="preserve">
          <source>The source code for the &lt;code&gt;bientropy&lt;/code&gt; package can be cloned or downloaded from:</source>
          <target state="translated">&lt;code&gt;bientropy&lt;/code&gt; 패키지 의 소스 코드는 다음 위치 에서 복제하거나 다운로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fbfabfed5bb0de5fc42c89f867c76c6f8c1b21e" translate="yes" xml:space="preserve">
          <source>Then, use &lt;code&gt;setup.py&lt;/code&gt; to compile and install the package:</source>
          <target state="translated">그런 다음 &lt;code&gt;setup.py&lt;/code&gt; 를 사용 하여 패키지를 컴파일하고 설치합니다.</target>
        </trans-unit>
        <trans-unit id="80f9e6fa164fbeba68b99000aa921a2090c14842" translate="yes" xml:space="preserve">
          <source>This Python package provides high-performance implementations of the functions
and examples presented in &quot;BiEntropy - The Approximate Entropy of a Finite
Binary String&quot; by Grenville J.  Croll, presented at ANPA 34 in 2013.
&lt;a href=&quot;https://arxiv.org/abs/1305.0954&quot;&gt;https://arxiv.org/abs/1305.0954&lt;/a&gt;</source>
          <target state="translated">이 Python 패키지는 2013 년 ANPA 34에서 발표 된 Grenville J. Croll의 &quot;BiEntropy-The Approximate Entropy of a Finite Binary String&quot;에 제시된 함수 및 예제의 고성능 구현을 제공합니다. &lt;a href=&quot;https://arxiv.org/abs/1305.0954&quot;&gt;https://arxiv.org/abs/ 1305.0954&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="499b5bdac414d42f879849246631d47705a15500" translate="yes" xml:space="preserve">
          <source>This module includes both a Python C extension and a pure Python module
implementing the BiEn and TBiEn metrics from the paper, as well as a suite of
tests that verify their correctness. These implementations are available under
the submodules 'cbientropy' and 'pybientropy'.</source>
          <target state="translated">이 모듈에는 논문의 BiEn 및 TBiEn 메트릭을 구현하는 Python C 확장 및 순수 Python 모듈과 정확성을 확인하는 테스트 모음이 모두 포함되어 있습니다. 이러한 구현은 'cbientropy'및 'pybientropy'하위 모듈에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12a04d7dabe29949c74aa0651f5ec587062fa4ac" translate="yes" xml:space="preserve">
          <source>This package includes a C extension which has to be compiled for each platform.
Python wheels include compiled binary code and allow the extension to be
installed without requiring a compiler.</source>
          <target state="translated">이 패키지에는 각 플랫폼에 대해 컴파일해야하는 C 확장이 포함되어 있습니다. Python 휠에는 컴파일 된 바이너리 코드가 포함되어 있으며 컴파일러 없이도 확장 프로그램을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a3a250d73c396b8dcbaa130b10405c654e8adf6" translate="yes" xml:space="preserve">
          <source>This package is tested with Python versions 2.7, 3.4, 3.5 and 3.6.</source>
          <target state="translated">이 패키지는 Python 버전 2.7, 3.4, 3.5 및 3.6에서 테스트되었습니다.</target>
        </trans-unit>
        <trans-unit id="6a4b24a6a57623b4d1448f2645fae781bff65474" translate="yes" xml:space="preserve">
          <source>This package, consisting of the C implementations, Python implementations and
Python bindings were written by Ryan Helinski &lt;a href=&quot;mailto:rhelins@sandia.gov&quot;&gt;rhelins@sandia.gov&lt;/a&gt;.</source>
          <target state="translated">C 구현, Python 구현 및 Python 바인딩으로 구성된이 패키지는 Ryan Helinski &lt;a href=&quot;mailto:rhelins@sandia.gov&quot;&gt;rhelins@sandia.gov에&lt;/a&gt; 의해 작성되었습니다 .</target>
        </trans-unit>
        <trans-unit id="2cac2059d04ed459899445fb7d4adafed92ceb31" translate="yes" xml:space="preserve">
          <source>This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.</source>
          <target state="translated">이 프로그램은 유용 할 것이라는 희망으로 배포되었지만 어떠한 보증도하지 않습니다. 상품성 또는 특정 목적에의 적합성에 대한 묵시적 보증조차 포함하지 않습니다. 자세한 내용은 GNU General Public License를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6e8c9689a09f0614407ad425553a05092c4de85d" translate="yes" xml:space="preserve">
          <source>This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.</source>
          <target state="translated">이 프로그램은 무료 소프트웨어입니다. Free Software Foundation에서 게시 한 GNU General Public License의 조건에 따라 라이선스의 버전 3 또는 (귀하의 선택에 따라) 이후 버전을 재배포하거나 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a72a4848559074d254b460509deb312781a30f8" translate="yes" xml:space="preserve">
          <source>This runs &lt;a href=&quot;/bientropy/demo.py&quot;&gt;demo.py&lt;/a&gt;, which also serves as an example for
using the package.</source>
          <target state="translated">이것은 &lt;a href=&quot;/bientropy/demo.py&quot;&gt;demo.py를&lt;/a&gt; 실행 하며 , 패키지 사용에 대한 예제로도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6801fdf59f790e0127f358ee9ea6a8e7a7c7b100" translate="yes" xml:space="preserve">
          <source>To also disable compiler optimizations, use:</source>
          <target state="translated">컴파일러 최적화도 비활성화하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9d2edd76d217007da61f9f9264be01db95453dc1" translate="yes" xml:space="preserve">
          <source>To check which version you may already have installed, run the command:</source>
          <target state="translated">이미 설치 한 버전을 확인하려면 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f33d260f7885bdd76b279b2906c8450c76934dc1" translate="yes" xml:space="preserve">
          <source>To compile with debug symbols and with extra output, use:</source>
          <target state="translated">디버그 기호 및 추가 출력으로 컴파일하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3477c051a4441d26b50ef165afb8a47106a04e6b" translate="yes" xml:space="preserve">
          <source>To debug the extension with GDB:</source>
          <target state="translated">GDB로 확장을 디버그하려면 :</target>
        </trans-unit>
        <trans-unit id="e84d417a5a9f82b1b5db5b0c37bfbfc695a9cf88" translate="yes" xml:space="preserve">
          <source>To run the Valgrind memcheck tool to check for memory corruption and leaks:</source>
          <target state="translated">Valgrind memcheck 도구를 실행하여 메모리 손상 및 누수를 확인하려면 :</target>
        </trans-unit>
        <trans-unit id="25854f327842ac5e0b579b7d207ffd946cb692ca" translate="yes" xml:space="preserve">
          <source>You should have received a copy of the GNU General Public License
along with this program.  If not, see &lt;a href=&quot;http://www.gnu.org/licenses/&quot;&gt;http://www.gnu.org/licenses/&lt;/a&gt;.</source>
          <target state="translated">이 프로그램과 함께 GNU General Public License의 사본을 받았을 것입니다. 그렇지 않은 경우 &lt;a href=&quot;http://www.gnu.org/licenses/&quot;&gt;http://www.gnu.org/licenses/를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe942f229ddfa925a913b4d19f26d256861d99ce" translate="yes" xml:space="preserve">
          <source>bitstring &lt;a href=&quot;http://pythonhosted.org/bitstring/&quot;&gt;http://pythonhosted.org/bitstring/&lt;/a&gt;</source>
          <target state="translated">비트 문자열 &lt;a href=&quot;http://pythonhosted.org/bitstring/&quot;&gt;http://pythonhosted.org/bitstring/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54fb32fdda43a95eaa6a20b9fae80a4c8c1b4e51" translate="yes" xml:space="preserve">
          <source>mock &lt;a href=&quot;https://pypi.org/project/mock/&quot;&gt;https://pypi.org/project/mock/&lt;/a&gt; if using Python 2.7</source>
          <target state="translated">Python 2.7을 사용하는 경우 &lt;a href=&quot;https://pypi.org/project/mock/&quot;&gt;https://pypi.org/project/mock/&lt;/a&gt; 모의</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
