<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/multiprocessing-logging/">
    <body>
      <group id="multiprocessing-logging">
        <trans-unit id="c9ec5e5657e5f40928b1752779c215a60aee96f2" translate="yes" xml:space="preserve">
          <source>Before you start logging but after you configure the logging framework (maybe with &lt;code&gt;logging.basicConfig(...)&lt;/code&gt;), do the following:</source>
          <target state="translated">로깅을 시작하기 전에 로깅 프레임 워크를 구성한 후 ( &lt;code&gt;logging.basicConfig(...)&lt;/code&gt; ) 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="b873d9f38336208e261114b54175807f9972aeb6" translate="yes" xml:space="preserve">
          <source>It's currently tested in Linux and Python 2.7 &amp;amp; 3.5+.</source>
          <target state="translated">현재 Linux 및 Python 2.7 및 3.5 이상에서 테스트되었습니다.</target>
        </trans-unit>
        <trans-unit id="c2ac3f477d870fbba8eae3b8f4f962e61493b4c7" translate="yes" xml:space="preserve">
          <source>Later, several improvements have been contributed.</source>
          <target state="translated">나중에 몇 가지 개선 사항이 기여했습니다.</target>
        </trans-unit>
        <trans-unit id="c0abfb5af678766e21d32b10a7c67a67e59edc95" translate="yes" xml:space="preserve">
          <source>Logger for multiprocessing applications</source>
          <target state="translated">다중 처리 애플리케이션 용 로거</target>
        </trans-unit>
        <trans-unit id="e216d13ccd3b6d025cd7a30a85e0e1a75584913b" translate="yes" xml:space="preserve">
          <source>Only works on POSIX systems and only Linux is supported. It does not work on Windows.</source>
          <target state="translated">POSIX 시스템에서만 작동하며 Linux 만 지원됩니다. Windows에서는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="44ab85a252adb7ade8ca36fec4157a862c1f725f" translate="yes" xml:space="preserve">
          <source>Origin</source>
          <target state="translated">유래</target>
        </trans-unit>
        <trans-unit id="83f6511b839576bf11e8b26a237fcce6a7459f8c" translate="yes" xml:space="preserve">
          <source>Pypy appears to be working, recently.</source>
          <target state="translated">최근 Pypy가 작동하는 것으로 보입니다.</target>
        </trans-unit>
        <trans-unit id="0a8b9005646d33d9dd1702dcff3a576b72a4fbab" translate="yes" xml:space="preserve">
          <source>Pypy3 hangs on the tests so I don't recommend using it.</source>
          <target state="translated">Pypy3는 테스트에 매달 리므로 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="24c38bee8b6b9c9ab114f4086a361b67b6cc369a" translate="yes" xml:space="preserve">
          <source>This library was taken verbatim from a &lt;a href=&quot;http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python&quot;&gt;StackOverflow post&lt;/a&gt;
and extracted into a module so that I wouldn't have to copy the code in every
project.</source>
          <target state="translated">이 라이브러리는 &lt;a href=&quot;http://stackoverflow.com/questions/641420/how-should-i-log-while-using-multiprocessing-in-python&quot;&gt;StackOverflow 게시물&lt;/a&gt; 에서 그대로 가져와 모듈로 추출하여 모든 프로젝트에서 코드를 복사 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7276a05e5c32bff422597c6bff461345f6e7381e" translate="yes" xml:space="preserve">
          <source>This simple module implements a &lt;code&gt;Handler&lt;/code&gt; that when set on the root
&lt;code&gt;Logger&lt;/code&gt; will handle tunneling the records to the main process so that
they are handled correctly.</source>
          <target state="translated">이 간단한 모듈 은 루트 &lt;code&gt;Logger&lt;/code&gt; 에 설정 될 때 레코드가 올바르게 처리되도록 기본 프로세스에 대한 터널링을 처리 하는 &lt;code&gt;Handler&lt;/code&gt; 를 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">용법</target>
        </trans-unit>
        <trans-unit id="95cb5cb7bcfe6a3aabf66ddb3b4bff0f937a630a" translate="yes" xml:space="preserve">
          <source>When using a Pool, make sure &lt;code&gt;install_mp_handler&lt;/code&gt; is called before the Pool is instantiated, for example:</source>
          <target state="translated">풀을 사용하는 경우 풀이 인스턴스화되기 전에 &lt;code&gt;install_mp_handler&lt;/code&gt; 가 호출 되었는지 확인 하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5840eaad783ad072e619ad972706a1c8a13226b7" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;multiprocessing&lt;/code&gt; module, logging becomes less useful since
sub-processes should log to individual files/streams or there's the risk of
records becoming garbled.</source>
          <target state="translated">&lt;code&gt;multiprocessing&lt;/code&gt; 모듈을 사용할 때 하위 프로세스가 개별 파일 / 스트림에 기록해야하거나 레코드가 깨질 위험이 있으므로 로깅의 유용성이 떨어집니다.</target>
        </trans-unit>
        <trans-unit id="670f85233f2563499767188601a939172b658623" translate="yes" xml:space="preserve">
          <source>With multiprocessing.Pool</source>
          <target state="translated">멀티 프로세싱으로.</target>
        </trans-unit>
        <trans-unit id="82b49dcdd5da0962de992503a9a8b0b5fa0a526a" translate="yes" xml:space="preserve">
          <source>and that's it.</source>
          <target state="translated">그리고 그게 다야.</target>
        </trans-unit>
        <trans-unit id="66b7cda3597658cfdf4bc3b0f786070b25e2a1c3" translate="yes" xml:space="preserve">
          <source>multiprocessing-logging</source>
          <target state="translated">다중 처리 로깅</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
