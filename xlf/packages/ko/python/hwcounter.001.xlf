<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/hwcounter/">
    <body>
      <group id="hwcounter">
        <trans-unit id="152c6f9fbcbfb93c800c0b3db29df86359bef21c" translate="yes" xml:space="preserve">
          <source># 1. Manually count cycles elapsed between two points</source>
          <target state="translated"># 1. 두 지점 사이에 경과 된주기를 수동으로 계산</target>
        </trans-unit>
        <trans-unit id="d336b03f6d4318e3dca0d47d421544063f4db090" translate="yes" xml:space="preserve">
          <source># 2. Use Timer object as context manager to wrap a block of code and measure its timing</source>
          <target state="translated"># 2. Timer 객체를 컨텍스트 관리자로 사용하여 코드 블록을 래핑하고 타이밍을 측정합니다.</target>
        </trans-unit>
        <trans-unit id="c7ae08787b1588f33ee15c50a6d70efe41576d0c" translate="yes" xml:space="preserve">
          <source># elapsed cycles: 2912338344</source>
          <target state="translated"># 경과 된주기 : 2912338344</target>
        </trans-unit>
        <trans-unit id="aed75ca4116ace125b209449dd0f6d954b4f2677" translate="yes" xml:space="preserve">
          <source># elapsed cycles: 36486</source>
          <target state="translated"># 경과 된주기 : 36486</target>
        </trans-unit>
        <trans-unit id="609e35d8110a78ba4d195eac254fd20273ad6216" translate="yes" xml:space="preserve">
          <source># hwcounter</source>
          <target state="translated"># hwcounter</target>
        </trans-unit>
        <trans-unit id="57ecf6b219e98a8279d943b49f1f67ea592574e0" translate="yes" xml:space="preserve">
          <source>## Example usage</source>
          <target state="translated">## 사용 예</target>
        </trans-unit>
        <trans-unit id="8443b75994470372e6420193dc5c6a01b6b7e6e1" translate="yes" xml:space="preserve">
          <source>## Installation</source>
          <target state="translated">## 설치</target>
        </trans-unit>
        <trans-unit id="f9b7e5f093381deb75dde2fcda49ea30ec294245" translate="yes" xml:space="preserve">
          <source>## Notes</source>
          <target state="translated">## 노트</target>
        </trans-unit>
        <trans-unit id="0ade3de42d0a13b0cd34ce3fca71d2bd4374f154" translate="yes" xml:space="preserve">
          <source>## Overview</source>
          <target state="translated">## 개요</target>
        </trans-unit>
        <trans-unit id="5fcc21c9a7a8e3b7742c18a4886d98d01a31c4d8" translate="yes" xml:space="preserve">
          <source>## Portability</source>
          <target state="translated">## 이식성</target>
        </trans-unit>
        <trans-unit id="f281e43f265f2a4923b86608476b88e93bf1a867" translate="yes" xml:space="preserve">
          <source>### `Timer`</source>
          <target state="translated">###`타이머`</target>
        </trans-unit>
        <trans-unit id="97d053bf99d5cb8a23499f803a02ac0ae0142891" translate="yes" xml:space="preserve">
          <source>### `count()`</source>
          <target state="translated">###`count ()`</target>
        </trans-unit>
        <trans-unit id="7e6af80e3d22c8f900efc16e266a210e89c5d0aa" translate="yes" xml:space="preserve">
          <source>### `count_end()`</source>
          <target state="translated">###`count_end ()`</target>
        </trans-unit>
        <trans-unit id="8a0f7e44af5dc60e983de6961f7fda6fabe403da" translate="yes" xml:space="preserve">
          <source>#### `Timer.cycles`</source>
          <target state="translated">####`Timer.cycles`</target>
        </trans-unit>
        <trans-unit id="090d1a3aa31c1c8738803f69dbf0ef3a3d3359d6" translate="yes" xml:space="preserve">
          <source>$ pip install hwcounter</source>
          <target state="translated">$ pip 설치 hwcounter</target>
        </trans-unit>
        <trans-unit id="dee1c76795c4bc129e24391ac77019dbccdce9dc" translate="yes" xml:space="preserve">
          <source>2.90GHz. Notice that the sleep for 1 second in the example above</source>
          <target state="translated">2.90GHz. 위의 예에서 1 초 동안 수면을 취합니다.</target>
        </trans-unit>
        <trans-unit id="eefb0582f1537b48ac0e5a48bf65fd5f4e7e37dd" translate="yes" xml:space="preserve">
          <source>Class that implements the context manager protocol.</source>
          <target state="translated">컨텍스트 관리자 프로토콜을 구현하는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="28033e7e69005c58595330370433ec865fb9acfb" translate="yes" xml:space="preserve">
          <source>Highly accurate counter for measuring elapsed time in Python</source>
          <target state="translated">Python에서 경과 시간을 측정하기위한 매우 정확한 카운터</target>
        </trans-unit>
        <trans-unit id="a80413fe24b1a98f81d01c14991b7f84d67f6989" translate="yes" xml:space="preserve">
          <source>Highly accurate counter for measuring elapsed time in Python.</source>
          <target state="translated">Python에서 경과 시간을 측정하기위한 매우 정확한 카운터.</target>
        </trans-unit>
        <trans-unit id="51f671a5f110958f38302652ea0597dd20feb2d1" translate="yes" xml:space="preserve">
          <source>Returns the current value of the timestamp counter, in cycles.</source>
          <target state="translated">타임 스탬프 카운터의 현재 값을 주기로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dba640b84aecd71f923883d84c40d54438448f79" translate="yes" xml:space="preserve">
          <source>Returns the current value of the timestamp counter, in cycles. It is</source>
          <target state="translated">타임 스탬프 카운터의 현재 값을 주기로 반환합니다. 그것은</target>
        </trans-unit>
        <trans-unit id="a72291458c37ae8e46f865dc9c3abb541285222b" translate="yes" xml:space="preserve">
          <source>The `cycles` attribute is populated with the elapsed time, in cycles,</source>
          <target state="translated">`cycles` 속성은 경과 된 시간 (사이클)으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="2acd767097067c5c10d3b67b51e25ee5e8e6145f" translate="yes" xml:space="preserve">
          <source>The module exposes three main objects. Two are plain functions,</source>
          <target state="translated">모듈은 세 가지 주요 개체를 노출합니다. 두 가지는 평범한 기능입니다.</target>
        </trans-unit>
        <trans-unit id="ee6827c12e237e03c044deb57ed8586543629c2c" translate="yes" xml:space="preserve">
          <source>The overhead of calling the underlying measurement instructions is</source>
          <target state="translated">기본 측정 명령을 호출하는 오버 헤드는</target>
        </trans-unit>
        <trans-unit id="33b727560ba7010be8ad28ec1d8cbdada7ee77ee" translate="yes" xml:space="preserve">
          <source>These examples were performed on an Intel Core i5-6267U CPU @</source>
          <target state="translated">이 예제는 Intel Core i5-6267U CPU @</target>
        </trans-unit>
        <trans-unit id="0cf3024a37de922bc276111ce3425483af97c43c" translate="yes" xml:space="preserve">
          <source>This Python extension module uses the hardware timestamp counter to</source>
          <target state="translated">이 Python 확장 모듈은 하드웨어 타임 스탬프 카운터를 사용하여</target>
        </trans-unit>
        <trans-unit id="d65c95acd8ade04c43af9f08b796de9a9d9f7d97" translate="yes" xml:space="preserve">
          <source>This extension uses the `RDTSC` and `RDTSCP` instructions on the x86</source>
          <target state="translated">이 확장은 x86에서`RDTSC` 및`RDTSCP` 명령어를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c7cd72b528fb1da076aecb0fc92bbd625cbd638c" translate="yes" xml:space="preserve">
          <source>This library returns measurements in processor clock cycles. For</source>
          <target state="translated">이 라이브러리는 프로세서 클럭 주기로 측정 값을 반환합니다. 에 대한</target>
        </trans-unit>
        <trans-unit id="f30d49216ae02cd59e60e8289424c8abae1da2c5" translate="yes" xml:space="preserve">
          <source>Using `Timer` to wrap a block of code is to be preferred over</source>
          <target state="translated">'타이머'를 사용하여 코드 블록을 래핑하는 것이 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="bbc0aff80688baeb01a5a4cb720794fe808ad957" translate="yes" xml:space="preserve">
          <source>```</source>
          <target state="translated">```</target>
        </trans-unit>
        <trans-unit id="2e1d9c02fb055e52eac1a39ee99bc32807e3a952" translate="yes" xml:space="preserve">
          <source>``` python</source>
          <target state="translated">```파이썬</target>
        </trans-unit>
        <trans-unit id="46077d87ef2afd4a39e70c3e5e5e34a9d2da2658" translate="yes" xml:space="preserve">
          <source>``` shell</source>
          <target state="translated">```쉘</target>
        </trans-unit>
        <trans-unit id="7647294e637181e76e3cbfd0bded1c85452926fc" translate="yes" xml:space="preserve">
          <source>`count` and `count_end`, which return the current value of the</source>
          <target state="translated">`count` 및`count_end`는 현재 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="93ce643b9b929bdbca626bb73ddabae5efe92779" translate="yes" xml:space="preserve">
          <source>architecture, so it won't work on other platforms. It is Python 3</source>
          <target state="translated">아키텍처이므로 다른 플랫폼에서는 작동하지 않습니다. 파이썬 3입니다</target>
        </trans-unit>
        <trans-unit id="d8d98ed37899bb0168b1cb6fe9f22aa9e4ec561c" translate="yes" xml:space="preserve">
          <source>are subtracted from the elapsed cycle count automatically.</source>
          <target state="translated">경과 된 사이클 수에서 자동으로 차감됩니다.</target>
        </trans-unit>
        <trans-unit id="0f03cfb9d9255a8939a499d1710882cc6c34706e" translate="yes" xml:space="preserve">
          <source>as because it factors in the overhead of calling the underlying</source>
          <target state="translated">기본 호출의 오버 헤드를 고려하기 때문에</target>
        </trans-unit>
        <trans-unit id="142fae4adf4b615d862c1b089d3f187582336e5f" translate="yes" xml:space="preserve">
          <source>be measured.</source>
          <target state="translated">측정됩니다.</target>
        </trans-unit>
        <trans-unit id="b7ff7fab19a58ec34508ad6d7c4c0948517b3125" translate="yes" xml:space="preserve">
          <source>benchmarking programs and making apples-to-apples comparisons of</source>
          <target state="translated">프로그램을 벤치마킹하고 비교하기</target>
        </trans-unit>
        <trans-unit id="763c2866945fca559b31aa7b4b8fc318928a8224" translate="yes" xml:space="preserve">
          <source>changes in code execution time, this method is sufficient and</source>
          <target state="translated">코드 실행 시간이 변경되면이 방법으로 충분하며</target>
        </trans-unit>
        <trans-unit id="eebdc820ba5cd2c44a36a176963c35b45eecf5f3" translate="yes" xml:space="preserve">
          <source>clock cycles is required: divide the cycle count by the processor's</source>
          <target state="translated">클럭 사이클이 필요합니다. 사이클 수를 프로세서의</target>
        </trans-unit>
        <trans-unit id="3f1d568a42ca254a0817b653fa40d0c9a37c39ef" translate="yes" xml:space="preserve">
          <source>clock speed (in Hz). This conversion is outside the scope of this</source>
          <target state="translated">클럭 속도 (Hz). 이 변환은이 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="c5676270f69b5b69a48dbe67372271f28624debe" translate="yes" xml:space="preserve">
          <source>elapsed = count_end() - start</source>
          <target state="translated">elapsed = count_end ()-시작</target>
        </trans-unit>
        <trans-unit id="53ba27212970fdf5735a0cc493c5ae5ae2e24b5b" translate="yes" xml:space="preserve">
          <source>from hwcounter import Timer, count, count_end</source>
          <target state="translated">hwcounter import Timer, count, count_end에서</target>
        </trans-unit>
        <trans-unit id="ec0be7872faf87b9b2471be32e7853f04b2ccb37" translate="yes" xml:space="preserve">
          <source>from math import sqrt</source>
          <target state="translated">수학 가져 오기 sqrt에서</target>
        </trans-unit>
        <trans-unit id="e3fe2efec582a81ef405e8d88ef24f9ea06c02c0" translate="yes" xml:space="preserve">
          <source>from time import sleep</source>
          <target state="translated">시간 수입 수면에서</target>
        </trans-unit>
        <trans-unit id="30f394913d41487a393123e5aab14871aae4dab2" translate="yes" xml:space="preserve">
          <source>manually using `count` and `count_end`. This is for convenience, as well</source>
          <target state="translated">`count` 및`count_end`를 수동으로 사용합니다. 이것은 편의를위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="c5d8ef3097728d5e8c1c5e4452fe50963e4a377e" translate="yes" xml:space="preserve">
          <source>measurement instructions.</source>
          <target state="translated">측정 지침.</target>
        </trans-unit>
        <trans-unit id="a21867509c883fff7a024de5f5d5839d06e9f445" translate="yes" xml:space="preserve">
          <source>module.</source>
          <target state="translated">기준 치수.</target>
        </trans-unit>
        <trans-unit id="512f7c8d1e9cd6dda2556f6558d3b31300a7f983" translate="yes" xml:space="preserve">
          <source>only.</source>
          <target state="translated">only.</target>
        </trans-unit>
        <trans-unit id="9b96df0a40aa3860aa0b44419f5291937617af3e" translate="yes" xml:space="preserve">
          <source>print(f'elapsed cycles: {elapsed}')</source>
          <target state="translated">print (경과주기 : {elapsed} ')</target>
        </trans-unit>
        <trans-unit id="0062f93efa3e21a90c17f2571dfe2984b3eb5c98" translate="yes" xml:space="preserve">
          <source>print(f'elapsed cycles: {t.cycles}')</source>
          <target state="translated">print (경과 된주기 : {t.cycles} ')</target>
        </trans-unit>
        <trans-unit id="db15919098eb04b046e8be69942e824a2fce3d03" translate="yes" xml:space="preserve">
          <source>provide very high precision and accurate measurements of execution</source>
          <target state="translated">매우 높은 정밀도와 정확한 실행 측정 제공</target>
        </trans-unit>
        <trans-unit id="a41ae8003913cb60682cd91419533f7c357acbd1" translate="yes" xml:space="preserve">
          <source>reliable. If elapsed time in seconds is desired, a conversion from</source>
          <target state="translated">신뢰할 수 있습니다. 경과 시간 (초)이 필요한 경우</target>
        </trans-unit>
        <trans-unit id="c1675a893d7f7e7afb7159d88d451b16bb080734" translate="yes" xml:space="preserve">
          <source>sleep(1)</source>
          <target state="translated">수면 (1)</target>
        </trans-unit>
        <trans-unit id="91a35c2fccd5c5486969c619d271990d52309f25" translate="yes" xml:space="preserve">
          <source>sqrt(144) / 12</source>
          <target state="translated">sqrt (144) / 12</target>
        </trans-unit>
        <trans-unit id="418b6f19bed2cf2fd24bee5c3a99e09c2af5ab11" translate="yes" xml:space="preserve">
          <source>start = count()</source>
          <target state="translated">시작 = 개수 ()</target>
        </trans-unit>
        <trans-unit id="c0fc1b20d6d66e6b457ebb8fd2a0b586df3e1d00" translate="yes" xml:space="preserve">
          <source>start and end of a timing measurement. The third is the `Timer` type,</source>
          <target state="translated">타이밍 측정의 시작과 끝. 세 번째는 '타이머'유형입니다.</target>
        </trans-unit>
        <trans-unit id="e1ca7590e724a5789fe9984e5e77e00b528806e6" translate="yes" xml:space="preserve">
          <source>suitable for use at the end of a timing measurement.</source>
          <target state="translated">타이밍 측정이 끝날 때 사용하기에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="13bb19cea3bd301dc29d2e84ed671cacbb4796be" translate="yes" xml:space="preserve">
          <source>taken into account when using the Timer context manager. In other</source>
          <target state="translated">타이머 컨텍스트 관리자를 사용할 때 고려됩니다. 다른</target>
        </trans-unit>
        <trans-unit id="eafc60755c95bf31414f527f588a70fdad373656" translate="yes" xml:space="preserve">
          <source>time.</source>
          <target state="translated">시각.</target>
        </trans-unit>
        <trans-unit id="88a6dc44e61c7c1d4dd41f039fc45ea9d41a279c" translate="yes" xml:space="preserve">
          <source>timestamp counter. They can be used together to manually track the</source>
          <target state="translated">타임 스탬프 카운터. 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fc7d01475303883c2910d0a465d4547b0d50b72" translate="yes" xml:space="preserve">
          <source>when the Timer context manager exits.</source>
          <target state="translated">타이머 컨텍스트 관리자가 종료 될 때.</target>
        </trans-unit>
        <trans-unit id="a1f93a87a2a03db500ad0cd1a62fa9962060fee7" translate="yes" xml:space="preserve">
          <source>which is to be used as a context manager, wrapping a block of code to</source>
          <target state="translated">컨텍스트 관리자로 사용되며 코드 블록을</target>
        </trans-unit>
        <trans-unit id="6759888513ea673112b9ebdb7cdf5bcbea25c0c1" translate="yes" xml:space="preserve">
          <source>with Timer() as t:</source>
          <target state="translated">Timer ()를 t로 사용 :</target>
        </trans-unit>
        <trans-unit id="2e69c565f2a9e232bb90ef35bce8dae78a263914" translate="yes" xml:space="preserve">
          <source>words, the number of cycles it takes to call the machine instructions</source>
          <target state="translated">단어, 기계 명령을 호출하는 데 걸리는주기 수</target>
        </trans-unit>
        <trans-unit id="fd299d8371e49d7eb29d00867fc61a8c9d793d61" translate="yes" xml:space="preserve">
          <source>yields a 2.9 billion cycle count.</source>
          <target state="translated">29 억 사이클 카운트를 산출합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
