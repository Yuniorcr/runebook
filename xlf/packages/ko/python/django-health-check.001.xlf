<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="https://pypi.org/project/django-health-check/">
    <body>
      <group id="django-health-check">
        <trans-unit id="4abccba177cae5cfc2e1aca88e42643ec4d89021" translate="yes" xml:space="preserve">
          <source>(Optional) If using the</source>
          <target state="translated">(선택 사항)</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="465caa0d99899905c263e1d350d3e8ad40605f01" translate="yes" xml:space="preserve">
          <source>/ht/</source>
          <target state="translated">/ ht /</target>
        </trans-unit>
        <trans-unit id="9d051a62f554fc21563f0b97c077e51f16283083" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mwarkentin/django-watchman&quot;&gt;django-watchman&lt;/a&gt; is a package that does some of the same things in a slightly different way.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mwarkentin/django-watchman&quot;&gt;django-watchman&lt;/a&gt; 은 약간 다른 방식으로 동일한 작업을 수행하는 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="e124c976e5ea032199ff6195090efba140d115b2" translate="yes" xml:space="preserve">
          <source>AWS S3 storage</source>
          <target state="translated">AWS S3 스토리지</target>
        </trans-unit>
        <trans-unit id="bb54db510a92908a5a4df79fc1ad1eae8df50ec3" translate="yes" xml:space="preserve">
          <source>Accept</source>
          <target state="translated">동의하기</target>
        </trans-unit>
        <trans-unit id="f15509de3d24d034ac0e1f23d20ebdfdcbdc9d96" translate="yes" xml:space="preserve">
          <source>Add the</source>
          <target state="translated">추가</target>
        </trans-unit>
        <trans-unit id="e2e511ca80cc95ae0c0339f746f906d7dd698d10" translate="yes" xml:space="preserve">
          <source>Add the health checker to a URL you want to use:</source>
          <target state="translated">사용하려는 URL에 상태 검사기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="db25bf3c9c3cb6643c0917d7879fa9b04c72a6b1" translate="yes" xml:space="preserve">
          <source>After writing a custom checker, register it in your app configuration:</source>
          <target state="translated">사용자 지정 검사기를 작성한 후 앱 구성에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="2f82977e408aeed48b21c2c7f628432392d6d8ca" translate="yes" xml:space="preserve">
          <source>BROKER_URL</source>
          <target state="translated">BROKER_URL</target>
        </trans-unit>
        <trans-unit id="4b4957907f24db0a9ee727b6e7ded1aa56cb194d" translate="yes" xml:space="preserve">
          <source>Celery task queue</source>
          <target state="translated">셀러리 작업 대기열</target>
        </trans-unit>
        <trans-unit id="74758d8b3831f47e5e831bd2ff07981ae911346b" translate="yes" xml:space="preserve">
          <source>Customizing output</source>
          <target state="translated">출력 사용자 지정</target>
        </trans-unit>
        <trans-unit id="8bf98874b284d6f531298afcee0287b3276a1ad8" translate="yes" xml:space="preserve">
          <source>Django command</source>
          <target state="translated">장고 명령</target>
        </trans-unit>
        <trans-unit id="f36ea1352f9a0b566595f485c15ddc015cb5dec8" translate="yes" xml:space="preserve">
          <source>First install the</source>
          <target state="translated">먼저 설치</target>
        </trans-unit>
        <trans-unit id="9b7f5771d58949588e58c3337f41d77c217bd74b" translate="yes" xml:space="preserve">
          <source>Getting machine readable JSON reports</source>
          <target state="translated">컴퓨터에서 읽을 수있는 JSON 보고서 가져 오기</target>
        </trans-unit>
        <trans-unit id="4a2ca9a08bd26c13d202f91c650253661cbe019e" translate="yes" xml:space="preserve">
          <source>HTTP header set to</source>
          <target state="translated">HTTP 헤더 설정</target>
        </trans-unit>
        <trans-unit id="f20870c5fe9f8118e8fb4eca60c4dcb38053af40" translate="yes" xml:space="preserve">
          <source>INSTALLED_APPS</source>
          <target state="translated">INSTALLED_APPS</target>
        </trans-unit>
        <trans-unit id="6d1b90e3a8eb98c58ee3101206755db2551b5407" translate="yes" xml:space="preserve">
          <source>If using the DB check, run migrations:</source>
          <target state="translated">DB 검사를 사용하는 경우 마이그레이션을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="629f5da5a5ea005e33cb7d4def0815f7f5e17bb4" translate="yes" xml:space="preserve">
          <source>If you want machine readable status reports you can request the</source>
          <target state="translated">시스템에서 읽을 수있는 상태 보고서를 원하면 다음을 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>
        </trans-unit>
        <trans-unit id="af7b4002c27d41f25dfd348fba4af31f70089378" translate="yes" xml:space="preserve">
          <source>MainView</source>
          <target state="translated">MainView</target>
        </trans-unit>
        <trans-unit id="df6118d65b7ac6309439c238c3e4c0e9a5824a2d" translate="yes" xml:space="preserve">
          <source>Make sure the application you write the checker into is registered in your</source>
          <target state="translated">체커를 작성하는 응용 프로그램이 등록되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">노트</target>
        </trans-unit>
        <trans-unit id="ccdc3410a1d443bfee8b5770a1916c6737d4346c" translate="yes" xml:space="preserve">
          <source>Other resources</source>
          <target state="translated">기타 자료</target>
        </trans-unit>
        <trans-unit id="74a41b7bc64ada6f598e228a746f8f413b505e66" translate="yes" xml:space="preserve">
          <source>REDIS_URL</source>
          <target state="translated">REDIS_URL</target>
        </trans-unit>
        <trans-unit id="aa974d65fd59c2b59d18cacb80da6ba8cc75b411" translate="yes" xml:space="preserve">
          <source>RabbitMQ</source>
          <target state="translated">RabbitMQ</target>
        </trans-unit>
        <trans-unit id="8946fd6862f0c2c435aa17f1d46efb1391489940" translate="yes" xml:space="preserve">
          <source>Run checks on services like databases, queue servers, celery processes, etc.</source>
          <target state="translated">데이터베이스, 대기열 서버, 셀러리 프로세스 등과 같은 서비스에서 검사를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="e183fbe07b5ad6c4f3619a9bc30c838e30e7e5ac" translate="yes" xml:space="preserve">
          <source>See this &lt;a href=&quot;https://www.vincit.fi/en/blog/deploying-django-to-elastic-beanstalk-with-https-redirects-and-functional-health-checks/&quot;&gt;weblog&lt;/a&gt; about configuring Django and health checking with AWS Elastic Load Balancer.</source>
          <target state="translated">AWS Elastic Load Balancer로 Django 및 상태 확인을 구성하는 방법에 대한 이 &lt;a href=&quot;https://www.vincit.fi/en/blog/deploying-django-to-elastic-beanstalk-with-https-redirects-and-functional-health-checks/&quot;&gt;웹 로그&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3580ca61182321ecd37bfe11b385255e1ade2e6a" translate="yes" xml:space="preserve">
          <source>Setting up monitoring</source>
          <target state="translated">모니터링 설정</target>
        </trans-unit>
        <trans-unit id="1787ae565ec914a5fcbbec7986068d3dbe8c1f4c" translate="yes" xml:space="preserve">
          <source>Similar to the http version, a critical error will case the command to quit with the exit code</source>
          <target state="translated">http 버전과 유사하게 명령이 종료 코드와 함께 종료되는 경우 심각한 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="27688c5327abb2b73ea437b43fa29c356a128ee7" translate="yes" xml:space="preserve">
          <source>Supported Versions</source>
          <target state="translated">지원되는 버전</target>
        </trans-unit>
        <trans-unit id="f6f190019a569a5833e6f0479d33ae30c431f718" translate="yes" xml:space="preserve">
          <source>The backend will return a JSON response:</source>
          <target state="translated">백엔드는 JSON 응답을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aaab9a254ea113d776d9a6dfa275009f478c0061" translate="yes" xml:space="preserve">
          <source>The following health checks are bundled with this project:</source>
          <target state="translated">이 프로젝트에는 다음 상태 확인이 번들로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9746e3c6b2b57cf9382149c7f5d904f1d53d1e4a" translate="yes" xml:space="preserve">
          <source>The latest version to support Python 2 is 2.4.0</source>
          <target state="translated">Python 2를 지원하는 최신 버전은 2.4.0입니다.</target>
        </trans-unit>
        <trans-unit id="8d6a1f019ab099f5f5360f54cc17e52989ccff58" translate="yes" xml:space="preserve">
          <source>The primary intended use case is to monitor conditions via HTTP(S), with
responses available in HTML and JSON formats. When you get back a response that
includes one or more problems, you can then decide the appropriate course of
action, which could include generating notifications and/or automating the
replacement of a failing node with a new one. If you are monitoring health in a
high-availability environment with a load balancer that returns responses from
multiple nodes, please note that certain checks (e.g., disk and memory usage)
will return responses specific to the node selected by the load balancer.</source>
          <target state="translated">주요 사용 사례는 HTML 및 JSON 형식으로 제공되는 응답으로 HTTP (S)를 통해 조건을 모니터링하는 것입니다. 하나 이상의 문제가 포함 된 응답을 받으면 적절한 조치 과정을 결정할 수 있습니다. 여기에는 알림 생성 및 / 또는 실패한 노드를 새 노드로 자동 교체하는 것이 포함될 수 있습니다. 여러 노드에서 응답을 반환하는로드 밸런서를 사용하여 고 가용성 환경에서 상태를 모니터링하는 경우 특정 검사 (예 : 디스크 및 메모리 사용량)는로드 밸런서에서 선택한 노드에 특정한 응답을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5588d41b8860eee060f3a8ba5f2771c603fd2661" translate="yes" xml:space="preserve">
          <source>This project checks for various conditions and provides reports when anomalous
behavior is detected.</source>
          <target state="translated">이 프로젝트는 다양한 조건을 확인하고 이상 동작이 감지되면 보고서를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4d3f80fb93bff3c4dffa1de144e94ee05dbff7e9" translate="yes" xml:space="preserve">
          <source>This should yield the following output:</source>
          <target state="translated">그러면 다음과 같은 출력이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3fe2448e7afd5969509c2a7e0c235711dbf772f0" translate="yes" xml:space="preserve">
          <source>To use the RabbitMQ healthcheck, please make sure that there is a variable named</source>
          <target state="translated">RabbitMQ 상태 확인을 사용하려면 이름이 지정된 변수가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e0242a74be7ce23f1c61b919ea6071bdcc67210b" translate="yes" xml:space="preserve">
          <source>To use the Redis healthcheck, please make sure that there is a variable named</source>
          <target state="translated">Redis 상태 확인을 사용하려면 이름이 지정된 변수가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c5c0671a0be6041e5f1d3866fb7667e4202e512d" translate="yes" xml:space="preserve">
          <source>Use Cases</source>
          <target state="translated">사용 사례</target>
        </trans-unit>
        <trans-unit id="e96d82a2c80ae546430763a511f0e379567f15b0" translate="yes" xml:space="preserve">
          <source>We also like contributions, so don&amp;rsquo;t be afraid to make a pull request.</source>
          <target state="translated">우리는 또한 기여를 좋아하므로 풀 리퀘스트를하는 것을 두려워하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="de0083d5ba381bd3c1d3f77acc0ef32e03acae01" translate="yes" xml:space="preserve">
          <source>We officially only support the latest version of Python as well as the
latest version of Django and the latest Django LTS version.</source>
          <target state="translated">공식적으로 최신 버전의 Python과 최신 버전의 Django 및 최신 Django LTS 버전 만 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f361c8c7aa1c21f8079ea92b17bdcb083bed44d2" translate="yes" xml:space="preserve">
          <source>Writing a custom health check</source>
          <target state="translated">사용자 지정 상태 확인 작성</target>
        </trans-unit>
        <trans-unit id="e7430e2e40718db24d8928bfd6e3f921a2b5becf" translate="yes" xml:space="preserve">
          <source>Writing a health check is quick and easy:</source>
          <target state="translated">상태 확인 작성은 빠르고 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="e63a775b1c754dcd9e4510ff3cd53404c4b0c2ae" translate="yes" xml:space="preserve">
          <source>Writing your own custom health checks is also very quick and easy.</source>
          <target state="translated">사용자 지정 상태 확인을 작성하는 것도 매우 빠르고 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="81abe264cb8537e850e267c64ebf36ca755d4545" translate="yes" xml:space="preserve">
          <source>You can customize HTML or JSON rendering by inheriting from</source>
          <target state="translated">다음에서 상속하여 HTML 또는 JSON 렌더링을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9388cd1bef51b563b821ebbf9fc702ec90a2f422" translate="yes" xml:space="preserve">
          <source>You can run the Django command</source>
          <target state="translated">Django 명령을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46e5760561fb2d329581ca508e1bd4f236fe5105" translate="yes" xml:space="preserve">
          <source>You can use tools like &lt;a href=&quot;https://www.pingdom.com/&quot;&gt;Pingdom&lt;/a&gt; or other uptime robots to monitor service status.
The</source>
          <target state="translated">&lt;a href=&quot;https://www.pingdom.com/&quot;&gt;Pingdom&lt;/a&gt; 또는 기타 가동 시간 로봇 과 같은 도구를 사용 하여 서비스 상태를 모니터링 할 수 있습니다 . 그만큼</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">과</target>
        </trans-unit>
        <trans-unit id="777fd0ef0d61a26a686a55f94e658b03434b7088" translate="yes" xml:space="preserve">
          <source>and customizing the</source>
          <target state="translated">및 사용자 정의</target>
        </trans-unit>
        <trans-unit id="19b03ed787e35f44261574f92c3fd688a4af2c9c" translate="yes" xml:space="preserve">
          <source>app, you can configure disk and memory
threshold settings; otherwise below defaults are assumed. If you want to disable
one of these checks, set its value to</source>
          <target state="translated">앱에서 디스크 및 메모리 임계 값 설정을 구성 할 수 있습니다. 그렇지 않으면 기본값 이하로 간주됩니다. 이러한 검사 중 하나를 비활성화하려면 해당 값을</target>
        </trans-unit>
        <trans-unit id="ca9fd0b2414177b79ac2ea7ad76252e4ef6dd65c" translate="yes" xml:space="preserve">
          <source>application/json</source>
          <target state="translated">응용 프로그램 / json</target>
        </trans-unit>
        <trans-unit id="398db5562694c8ff2396642bb2ab6026feb6a06c" translate="yes" xml:space="preserve">
          <source>applications to your</source>
          <target state="translated">당신의 응용 프로그램</target>
        </trans-unit>
        <trans-unit id="19f2cc9410263294d65bbfbc0577e942b1fb9337" translate="yes" xml:space="preserve">
          <source>as a query parameter.</source>
          <target state="translated">쿼리 매개 변수로.</target>
        </trans-unit>
        <trans-unit id="b03592806efabfeeb709f5a70a7c172669b00538" translate="yes" xml:space="preserve">
          <source>cache</source>
          <target state="translated">은닉처</target>
        </trans-unit>
        <trans-unit id="6d613a1ee01eec4c0f8ca66df0db71dca0c6e1cf" translate="yes" xml:space="preserve">
          <source>database</source>
          <target state="translated">데이터 베이스</target>
        </trans-unit>
        <trans-unit id="4962873182654841037ee3d5123a06abe800472d" translate="yes" xml:space="preserve">
          <source>disk and memory utilization (via</source>
          <target state="translated">디스크 및 메모리 사용률 (</target>
        </trans-unit>
        <trans-unit id="94c7d4790109504e3747bce28c1bf6c429944522" translate="yes" xml:space="preserve">
          <source>django-health-check</source>
          <target state="translated">장고 건강 체크</target>
        </trans-unit>
        <trans-unit id="a0be080379c97484655959b9f9cf3ffc86bc4ec2" translate="yes" xml:space="preserve">
          <source>endpoint will respond a HTTP 200 if all checks passed
and a HTTP 500 if any of the tests failed.</source>
          <target state="translated">엔드 포인트는 모든 검사가 통과되면 HTTP 200을, 테스트 중 하나라도 실패하면 HTTP 500을 응답합니다.</target>
        </trans-unit>
        <trans-unit id="ccd2f0bbb6d515b0ece57ca6962828594a654544" translate="yes" xml:space="preserve">
          <source>endpoint with the</source>
          <target state="translated">끝점</target>
        </trans-unit>
        <trans-unit id="102c28f0c6663209aab7941d2832f5099d11903c" translate="yes" xml:space="preserve">
          <source>format=json</source>
          <target state="translated">format = json</target>
        </trans-unit>
        <trans-unit id="783923e57ba5e8f1044632c31fd806ee24814bb5" translate="yes" xml:space="preserve">
          <source>get</source>
          <target state="translated">가져 오기</target>
        </trans-unit>
        <trans-unit id="97d71cd74ed03f9adda9ea79841f70fd9c524e0a" translate="yes" xml:space="preserve">
          <source>health_check</source>
          <target state="translated">건강 체크</target>
        </trans-unit>
        <trans-unit id="3127d5e2bce4207c2b47a04f15374c00203485fe" translate="yes" xml:space="preserve">
          <source>health_check.views</source>
          <target state="translated">health_check.views</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">에</target>
        </trans-unit>
        <trans-unit id="be0cfc7dab0673bb6792168dae212ab2842022d2" translate="yes" xml:space="preserve">
          <source>on django.conf.settings with the required format to connect to your rabbit server. For example:</source>
          <target state="translated">토끼 서버에 연결하는 데 필요한 형식으로 django.conf.settings에서. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="11d6e9572777e110e9f59e5216c891b0c2ddc337" translate="yes" xml:space="preserve">
          <source>on django.conf.settings with the required format to connect to your redis server. For example:</source>
          <target state="translated">redis 서버에 연결하는 데 필요한 형식으로 django.conf.settings에서. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="211334de416e556bba9d82a73cb88942ff6086ce" translate="yes" xml:space="preserve">
          <source>or pass</source>
          <target state="translated">또는 통과</target>
        </trans-unit>
        <trans-unit id="feac2e72858e6aacadfda0ac55b74ac3719313cb" translate="yes" xml:space="preserve">
          <source>package:</source>
          <target state="translated">꾸러미:</target>
        </trans-unit>
        <trans-unit id="3172ee9dbc035b449f4faef3fc275b22a287b527" translate="yes" xml:space="preserve">
          <source>properties:</source>
          <target state="translated">속성 :</target>
        </trans-unit>
        <trans-unit id="8ff84ed664edfff3aeafe0e9c140c1b0df08a556" translate="yes" xml:space="preserve">
          <source>psutil</source>
          <target state="translated">psutil</target>
        </trans-unit>
        <trans-unit id="a4e096593e98938eeb8163a27731e45e6174dfd8" translate="yes" xml:space="preserve">
          <source>render_to_response</source>
          <target state="translated">render_to_response</target>
        </trans-unit>
        <trans-unit id="931cc9420d9e93ee490998c23f9c5336318ccc39" translate="yes" xml:space="preserve">
          <source>render_to_response_json</source>
          <target state="translated">render_to_response_json</target>
        </trans-unit>
        <trans-unit id="3d48292e4d2714f11c2adf276b610971e068a519" translate="yes" xml:space="preserve">
          <source>storage</source>
          <target state="translated">저장</target>
        </trans-unit>
        <trans-unit id="a62147c0d6b868e797061e142a15c46fd6e83ba0" translate="yes" xml:space="preserve">
          <source>template_name</source>
          <target state="translated">template_name</target>
        </trans-unit>
        <trans-unit id="0390e3feaefd225d22efb7b9a959c4bde931f90e" translate="yes" xml:space="preserve">
          <source>to perform your health checks via the command line,
or periodically with a cron, as follow:</source>
          <target state="translated">다음과 같이 명령 줄을 통해 또는 주기적으로 크론을 사용하여 상태 확인을 수행합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
